[{"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signIn\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx":"2","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"3","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\AddDevice.jsx":"4","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.jsx":"5","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"6","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\VetSpire.js":"7","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx":"8","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx":"9","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\index.js":"10","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js":"11","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\advancedSettings\\index.jsx":"12","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addDevice\\index.jsx":"13","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx":"14","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"15","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"16","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js":"17","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\App.js":"18","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js":"19","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\doctorAddPet\\index.jsx":"20","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx":"21","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\pet.js":"22","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js":"23","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js":"24","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx":"25","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\UnassignModal\\UnassignModal.jsx":"26","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx":"27","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js":"28","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\unassigned\\index.jsx":"29","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx":"30","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js":"31","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\user.js":"32","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx":"33","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\Biggie.jsx":"34","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"35","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\home\\index.jsx":"36","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\connectWorkplace\\index.jsx":"37","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\hardWareTypeUI.jsx":"38","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js":"39","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js":"40","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\swabPetEar\\index.jsx":"41","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\editParent\\index.jsx":"42","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js":"43","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js":"44","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\EzyVet.js":"45","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\experimental\\index.jsx":"46","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx":"47","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\help\\index.jsx":"48","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js":"49","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\mellarecord.js":"50","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\config\\config.js":"51","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx":"52","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\PetsUI.jsx":"53","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\petAndParents\\index.jsx":"54","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\px.jsx":"55","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\enrolledPlan\\index.jsx":"56","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js":"57","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\timer\\index.jsx":"58","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx":"59","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\pet.js":"60","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\components\\linkEquipment\\index.jsx":"61","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\settings\\index.jsx":"62","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\current.js":"63","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\index.js":"64","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js":"65","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\workplace.js":"66","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js":"67","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\organization.js":"68","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\user.js":"69","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"70","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\linkEquipment\\index.jsx":"71","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardAndPetsUI.jsx":"72","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\commonFun.js":"73","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\user.js":"74","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\index.jsx":"75","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx":"76","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx":"77","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx":"78","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js":"79","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\index.jsx":"80","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js":"81","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetModal\\index.jsx":"82","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js":"83","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardListModal.jsx":"84","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\vetSpire.js":"85","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\VetSpire.js":"86","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrganization\\index.jsx":"87","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js":"88","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\petall.js":"89","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\api.js":"90","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrg\\index.jsx":"91","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx":"92","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\ezyvetApi.js":"93","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\team\\index.jsx":"94","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signUpVerifyEmail\\index.jsx":"95","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\index.js":"96","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"97","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx":"98","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\joinOrganizationByOption\\index.jsx":"99","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"100"},{"size":18148,"mtime":1661509757437,"results":"101","hashOfConfig":"102"},{"size":15395,"mtime":1661509757340,"results":"103","hashOfConfig":"102"},{"size":51847,"mtime":1662346539303,"results":"104","hashOfConfig":"102"},{"size":11526,"mtime":1661913557011,"results":"105","hashOfConfig":"102"},{"size":6919,"mtime":1661509757429,"results":"106","hashOfConfig":"102"},{"size":11186,"mtime":1662348058987,"results":"107","hashOfConfig":"102"},{"size":664,"mtime":1661509757283,"results":"108","hashOfConfig":"102"},{"size":8711,"mtime":1661509757311,"results":"109","hashOfConfig":"102"},{"size":3836,"mtime":1661509757322,"results":"110","hashOfConfig":"102"},{"size":346,"mtime":1661943244274,"results":"111","hashOfConfig":"102"},{"size":577,"mtime":1657680900931,"results":"112","hashOfConfig":"102"},{"size":13516,"mtime":1661941929746,"results":"113","hashOfConfig":"102"},{"size":13514,"mtime":1661509757333,"results":"114","hashOfConfig":"102"},{"size":8628,"mtime":1660703894009,"results":"115","hashOfConfig":"102"},{"size":846,"mtime":1655168677772,"results":"116","hashOfConfig":"102"},{"size":13029,"mtime":1662373127516,"results":"117","hashOfConfig":"102"},{"size":4641,"mtime":1656498255379,"results":"118","hashOfConfig":"102"},{"size":3706,"mtime":1661943474634,"results":"119","hashOfConfig":"102"},{"size":74,"mtime":1662373312543,"results":"120","hashOfConfig":"102"},{"size":29637,"mtime":1661509757364,"results":"121","hashOfConfig":"102"},{"size":2500,"mtime":1661509757469,"results":"122","hashOfConfig":"102"},{"size":3757,"mtime":1662357327062,"results":"123","hashOfConfig":"102"},{"size":249,"mtime":1655467295885,"results":"124","hashOfConfig":"102"},{"size":697,"mtime":1655467295909,"results":"125","hashOfConfig":"102"},{"size":7320,"mtime":1661509757347,"results":"126","hashOfConfig":"102"},{"size":31725,"mtime":1661509757309,"results":"127","hashOfConfig":"102"},{"size":3569,"mtime":1660200016614,"results":"128","hashOfConfig":"102"},{"size":1451,"mtime":1655168677805,"results":"129","hashOfConfig":"102"},{"size":35789,"mtime":1661509757459,"results":"130","hashOfConfig":"102"},{"size":9487,"mtime":1660272886460,"results":"131","hashOfConfig":"102"},{"size":88,"mtime":1657709847680,"results":"132","hashOfConfig":"102"},{"size":2834,"mtime":1661509757303,"results":"133","hashOfConfig":"102"},{"size":10678,"mtime":1662100192866,"results":"134","hashOfConfig":"102"},{"size":3907,"mtime":1662111155827,"results":"135","hashOfConfig":"102"},{"size":6751,"mtime":1660196282287,"results":"136","hashOfConfig":"102"},{"size":3942,"mtime":1661941929749,"results":"137","hashOfConfig":"102"},{"size":6565,"mtime":1661509757361,"results":"138","hashOfConfig":"102"},{"size":5448,"mtime":1662347472561,"results":"139","hashOfConfig":"102"},{"size":1041,"mtime":1655168677775,"results":"140","hashOfConfig":"102"},{"size":224,"mtime":1655467295875,"results":"141","hashOfConfig":"102"},{"size":2695,"mtime":1658483746593,"results":"142","hashOfConfig":"102"},{"size":10819,"mtime":1661509757368,"results":"143","hashOfConfig":"102"},{"size":343,"mtime":1655168677793,"results":"144","hashOfConfig":"102"},{"size":17788,"mtime":1659945946500,"results":"145","hashOfConfig":"102"},{"size":664,"mtime":1661509757282,"results":"146","hashOfConfig":"102"},{"size":2508,"mtime":1658483803920,"results":"147","hashOfConfig":"102"},{"size":1365,"mtime":1655880805276,"results":"148","hashOfConfig":"102"},{"size":9521,"mtime":1661509757378,"results":"149","hashOfConfig":"102"},{"size":91,"mtime":1655467295880,"results":"150","hashOfConfig":"102"},{"size":951,"mtime":1661849271242,"results":"151","hashOfConfig":"102"},{"size":648,"mtime":1662356617793,"results":"152","hashOfConfig":"102"},{"size":1390,"mtime":1662107565694,"results":"153","hashOfConfig":"102"},{"size":14534,"mtime":1662343126941,"results":"154","hashOfConfig":"102"},{"size":10992,"mtime":1661509757414,"results":"155","hashOfConfig":"102"},{"size":3056,"mtime":1661509757473,"results":"156","hashOfConfig":"102"},{"size":8498,"mtime":1662112526381,"results":"157","hashOfConfig":"102"},{"size":2103,"mtime":1656498255375,"results":"158","hashOfConfig":"102"},{"size":1201,"mtime":1658485132416,"results":"159","hashOfConfig":"102"},{"size":1573,"mtime":1661509757427,"results":"160","hashOfConfig":"102"},{"size":574,"mtime":1661509757286,"results":"161","hashOfConfig":"102"},{"size":4215,"mtime":1662026321474,"results":"162","hashOfConfig":"102"},{"size":19732,"mtime":1661509757433,"results":"163","hashOfConfig":"102"},{"size":1150,"mtime":1655427981745,"results":"164","hashOfConfig":"102"},{"size":89,"mtime":1661509757280,"results":"165","hashOfConfig":"102"},{"size":532,"mtime":1655467295881,"results":"166","hashOfConfig":"102"},{"size":899,"mtime":1661509757306,"results":"167","hashOfConfig":"102"},{"size":1275,"mtime":1655168677817,"results":"168","hashOfConfig":"102"},{"size":1077,"mtime":1661509757299,"results":"169","hashOfConfig":"102"},{"size":574,"mtime":1661509757287,"results":"170","hashOfConfig":"102"},{"size":17158,"mtime":1661509757425,"results":"171","hashOfConfig":"102"},{"size":1722,"mtime":1662111938187,"results":"172","hashOfConfig":"102"},{"size":3165,"mtime":1662343099968,"results":"173","hashOfConfig":"102"},{"size":4618,"mtime":1662343061423,"results":"174","hashOfConfig":"102"},{"size":1323,"mtime":1661509757292,"results":"175","hashOfConfig":"102"},{"size":40805,"mtime":1662348681506,"results":"176","hashOfConfig":"102"},{"size":12702,"mtime":1661509757337,"results":"177","hashOfConfig":"102"},{"size":2811,"mtime":1659944507368,"results":"178","hashOfConfig":"102"},{"size":1410,"mtime":1655168677807,"results":"179","hashOfConfig":"102"},{"size":4449,"mtime":1655168677816,"results":"180","hashOfConfig":"102"},{"size":1438,"mtime":1661928703627,"results":"181","hashOfConfig":"102"},{"size":3044,"mtime":1655168677819,"results":"182","hashOfConfig":"102"},{"size":7942,"mtime":1662001546798,"results":"183","hashOfConfig":"102"},{"size":89,"mtime":1655467295873,"results":"184","hashOfConfig":"102"},{"size":8354,"mtime":1661509757395,"results":"185","hashOfConfig":"102"},{"size":611,"mtime":1661509757305,"results":"186","hashOfConfig":"102"},{"size":944,"mtime":1661509757290,"results":"187","hashOfConfig":"102"},{"size":15670,"mtime":1661509757409,"results":"188","hashOfConfig":"102"},{"size":465,"mtime":1657709941429,"results":"189","hashOfConfig":"102"},{"size":669,"mtime":1661509757302,"results":"190","hashOfConfig":"102"},{"size":2206,"mtime":1661509757278,"results":"191","hashOfConfig":"102"},{"size":16072,"mtime":1661509757405,"results":"192","hashOfConfig":"102"},{"size":2338,"mtime":1662111740792,"results":"193","hashOfConfig":"102"},{"size":2242,"mtime":1661509757279,"results":"194","hashOfConfig":"102"},{"size":10243,"mtime":1661509757448,"results":"195","hashOfConfig":"102"},{"size":4485,"mtime":1661509757441,"results":"196","hashOfConfig":"102"},{"size":267,"mtime":1661849271240,"results":"197","hashOfConfig":"102"},{"size":59015,"mtime":1662356162939,"results":"198","hashOfConfig":"102"},{"size":9262,"mtime":1662110396773,"results":"199","hashOfConfig":"102"},{"size":17567,"mtime":1662113861027,"results":"200","hashOfConfig":"102"},{"size":16836,"mtime":1662358140160,"results":"201","hashOfConfig":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fb2hrx",{"filePath":"204","messages":"205","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228"},{"filePath":"229","messages":"230","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"233"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"233"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"240"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"259"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"266"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"270"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"285"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"216"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"285"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"297"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"240"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"216"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"308","usedDeprecatedRules":"291"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"319"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"285"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"216"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"216"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"233"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"233"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"216"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"367","messages":"368","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"291"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"382"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"233"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"285"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"319"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"406"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"291"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"319"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"233"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"313"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"432","messages":"433","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"216"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"444","messages":"445","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"216"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signIn\\index.jsx",["457","458","459","460","461","462"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx",["463","464","465","466","467","468","469","470"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Select,\r\n  message\r\n} from 'antd'\r\n\r\nimport parent from '../../assets/img/parent.png'\r\nimport selectphoto from '../../assets/images/sel.png'\r\nimport close from '../../assets/img/close.png'\r\nimport dui from '../../assets/images/dui.png'\r\n\r\nimport Heart from '../../utils/heard/Heard'\r\nimport { mTop, px } from '../../utils/px';\r\nimport MyModal from '../../utils/myModal/MyModal'\r\nimport Avatar from '../../components/avatar/Avatar'\r\nimport moment from 'moment'\r\nimport './index.less';\r\nimport { listDoctorsByAdmin } from '../../api/mellaserver/organization'\r\nimport { admin_users } from '../../api/mellaserver/new'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class Veterinarians extends Component {\r\n\r\n  state = {\r\n    parentList: [],\r\n    petList: [],\r\n    loading: false,\r\n    parentSearchArr: [],\r\n    petSearchArr: [],\r\n    searchText: '',\r\n    clickVet: false,\r\n    userList: [],\r\n    clickUserItem: {},\r\n    isAdmin: false,\r\n    imageId: null,\r\n    imgUrl: '',\r\n    doctorArr: [],\r\n    dockerSearchArr: []\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    this._getExam()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true,\r\n      spin: false\r\n    })\r\n    let params = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    listDoctorsByAdmin(storage.lastOrganization, params)\r\n      .then(res => {\r\n        console.log('人员列表', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true && res.code === 20000) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              name: `${lastName} ${firstName}`,\r\n              userId,\r\n              email,\r\n              birthday,\r\n              isLimit,\r\n              isDeleted,\r\n              phone,\r\n              url,\r\n              firstName, lastName, roleId\r\n            }\r\n            data.push(json)\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            doctorArr: data,\r\n            // parentList: data //这里只是测试，后期删除\r\n\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  list = () => {\r\n    let { doctorArr, dockerSearchArr, searchText } = this.state\r\n    let data = searchText.length > 0 ? dockerSearchArr : doctorArr\r\n\r\n\r\n\r\n\r\n    let options = data.map((item, index) => {\r\n      let { url, firstName, lastName } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n      if (!url) {\r\n        images = `url(${parent})`\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20), float: `${index % 2 === 0 ? 'left' : 'right'}` }}\r\n          onClick={() => {\r\n            console.log(item);\r\n            let { name, email, phone, roleId } = item\r\n            let isAdmin = roleId === '3' ? true : false\r\n\r\n            this.setState({\r\n              clickVet: true,\r\n              clickUserItem: item,\r\n              name,\r\n              email,\r\n              phone,\r\n              isAdmin,\r\n              imgUrl: ''\r\n            })\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div\r\n              className='img'\r\n              style={{\r\n                width: px(50),\r\n                height: px(50),\r\n                marginRight: px(20),\r\n                borderRadius: px(60),\r\n                backgroundImage: images,\r\n              }}>\r\n\r\n              <div\r\n                className=\"green\"\r\n                style={{\r\n                  width: px(8),\r\n                  height: px(8),\r\n                  borderRadius: px(8),\r\n                  backgroundColor: '#7ED266',\r\n                  right: px(-5),\r\n                  top: px(-3)\r\n\r\n                }}\r\n\r\n              />\r\n\r\n            </div>\r\n\r\n            <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    let liStyle = { backgroundColor: '#fff', }\r\n    if (this.state.petList.length > 16) {\r\n      liStyle = { height: px(750), overflowY: 'auto', }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='petList'>\r\n        <ul style={liStyle}>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  inputChange = (text) => {\r\n    let search = text.target.value\r\n    this.setState({\r\n      searchText: search\r\n    })\r\n\r\n    let { doctorArr } = this.state\r\n\r\n    let keyWord = search\r\n\r\n    let parentSearchData = []\r\n\r\n    for (let i = 0; i < doctorArr.length; i++) {\r\n      let { email, phone, name, } = doctorArr[i]\r\n      email = email ? email.toLowerCase() : ''\r\n      phone = phone ? phone.toLowerCase() : ''\r\n      name = name ? name.toLowerCase() : ''\r\n      let keyLower = keyWord.toLowerCase()\r\n      if (`${email}`.indexOf(keyLower) !== -1 || `${phone}`.indexOf(keyLower) !== -1 || `${name}`.indexOf(keyLower) !== -1) {\r\n        parentSearchData.push(doctorArr[i])\r\n      }\r\n    }\r\n\r\n\r\n    this.setState({\r\n\r\n      dockerSearchArr: parentSearchData\r\n    })\r\n\r\n\r\n  }\r\n  _petSpecies = () => {\r\n\r\n\r\n    let { clickUserItem, isAdmin } = this.state\r\n    let { url } = clickUserItem\r\n    this.avatar = url ? url : selectphoto\r\n    return (\r\n      <div className=\"petSpecies\">\r\n\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" style={{ height: px(100) }} />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n              getAllInfo={(val) => {\r\n                console.log('图片信息', val);\r\n                this.setState({\r\n                  imgUrl: val.url\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Set Role:</p>\r\n\r\n            <div className=\"ones\" style={{ marginTop: px(8) }}>\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>User</p>\r\n              </div> */}\r\n              <div className=\"one\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isAdmin: !this.state.isAdmin\r\n                  })\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"chect\"\r\n                  style={{ width: px(18), height: px(18), marginRight: px(15) }}\r\n\r\n                >\r\n                  {isAdmin && <img src={dui} alt=\"\" />}\r\n\r\n                </div>\r\n                <p>Admin</p>\r\n              </div>\r\n\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>Owner</p>\r\n              </div> */}\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  _petName = () => {\r\n    let { name, email } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\" style={{ marginTop: px(60) }}>\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50), }}>\r\n            <p>Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  name: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _phone = () => {\r\n    let { areas, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Areas of Expertise</p>\r\n            <input\r\n              type=\"text\"\r\n              value={areas}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  areas: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  changeUserInfo = () => {\r\n    let { name, email, phone, clickUserItem, imageId, isAdmin, petList, imgUrl } = this.state\r\n    let { userId } = clickUserItem\r\n    let roleId = isAdmin ? '3' : '2'\r\n    let params = {\r\n      firstName: '',\r\n      lastName: name,\r\n      email,\r\n      phone,\r\n\r\n      roleId\r\n    }\r\n    if (imageId) {\r\n      params.imageId = imageId\r\n    }\r\n    message.destroy()\r\n    this.setState({\r\n      clickVet: false,\r\n      loading: true\r\n    })\r\n    console.log('入参', params);\r\n    admin_users(userId, params)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.flag && res.code === 20000) {\r\n          for (let i = 0; i < petList.length; i++) {\r\n            const element = petList[i];\r\n            if (clickUserItem.userId === element.userId) {\r\n              element.name = name\r\n              element.email = email\r\n              element.phone = phone\r\n              if (imageId) {\r\n                element.url = imgUrl\r\n              }\r\n\r\n              break\r\n            }\r\n\r\n          }\r\n          this.setState({\r\n            loading: false,\r\n            petList\r\n          })\r\n          message.success('User information changed successfully')\r\n        } else {\r\n          this.setState({\r\n            loading: false\r\n          })\r\n          message.error('User information change failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        message.error('User information change failed')\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let bodyHeight = '92%'\r\n    try {\r\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\r\n    } catch (error) {\r\n\r\n    }\r\n    return (\r\n      <div id=\"veterinarians\">\r\n        <div className=\"heard\">\r\n          <Heart />\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\r\n          <div className=\"title\">\r\n            <h1 style={{ fontSize: px(38) }}>{`Veterinarians`}</h1>\r\n            <div className=\"btn\" style={{ fontSize: px(24), height: px(45) }}>+ New Vet</div>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <div className=\"searchL\">\r\n              <input\r\n                type=\"text\"\r\n                style={{ paddingLeft: px(25), height: px(34) }}\r\n                placeholder=\"&#xe62c; Search \"\r\n                value={this.state.searchText}\r\n                onChange={(text) => {\r\n                  this.inputChange(text)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\r\n              Search\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"lists\">\r\n            {/* <div className=\"listsL\"> */}\r\n            {this.list()}\r\n            {/* </div> */}\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <MyModal visible={this.state.loading} />\r\n\r\n        <MyModal\r\n          visible={this.state.clickVet}\r\n          element={\r\n            <div className='vetInfo'>\r\n\r\n              <div className=\"info\" >\r\n                <div className=\"close\" style={{ height: px(50) }}>\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    src={close} style={{ width: px(20) }} />\r\n                </div>\r\n                {this._petSpecies()}\r\n                {this._petName()}\r\n                {this._phone()}\r\n              </div>\r\n              <div className=\"fotBtn\">\r\n                <div className=\"text\">\r\n                  <a\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    href=\"#\">Delete </a>\r\n                  &nbsp;<p>{` ${this.state.name} from Workplace`}</p>\r\n                </div>\r\n                <div className=\"btn\"\r\n                  style={{ marginTop: px(10) }}\r\n                  onClick={this.changeUserInfo}\r\n\r\n                >Save </div>\r\n\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",["471","472"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\AddDevice.jsx",["499","500"],"import React, { useState, useEffect } from 'react'\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport biggieHome from './../../assets/img/searchType-biggieHome.png'\nimport biggiePro from './../../assets/img/searchType-biggiePro.png'\nimport mellaHome from './../../assets/img/searchType-home.png'\nimport mellaPro from './../../assets/img/searchType-mellaPro.png'\nimport maeBowl from './../../assets/img/searchType-maeBowl.png'\nimport other from './../../assets/img/searchType-other.png'\nimport possum from './../../assets/img/searchType-possum.png'\nimport rfid from './../../assets/img/searchType-rfid.png'\nimport redclose from '../../assets/img/redclose.png'\n\nimport electronStore from '../../utils/electronStore';\nimport { mTop, px, MTop } from '../../utils/px';\n\nimport { connect } from 'react-redux'\nimport { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList } from '../../store/actions';\nimport PropTypes from 'prop-types';\n\nimport './mainbody.less';\n\nlet storage = window.localStorage;\nconst AddDevice = ({ bodyHeight, hardwareReducer, isHaveUsbDevice, receiveBroadcastHardwareInfo, hardwareList, setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }) => {\n  //是否有底座设备\n  const [noUSB, setNoUSB] = useState(false)\n  //设备列表\n  const [devicesList, setDevicesList] = useState([])\n  //选择的设备\n  const [selectDevice, setSelectDevice] = useState(null)\n  //重命名\n  const [reName, setReName] = useState('')\n  //房间号\n  const [examRoom, setExamRoom] = useState('')\n  //已经保存过的设备的macid\n  const [saveDeviceMac, setSaveDeviceMac] = useState([])\n  //顶部文本\n  const [topText, setTopText] = useState(' Pair Device')\n\n\n\n  const addDevice = () => {\n    //从redux拿到列表中的所有硬件设备 hardwareList\n    console.log('hardwareList', hardwareList);\n    //拿到硬件的macid 类型 名称 房间号\n    console.log('selectDevice', selectDevice);\n    let sameFlog = hardwareList.some((item, index) => {\n      return item.type === selectDevice.deviceType\n    })\n    let hardwareArr = [].concat(hardwareList)\n    let { deviceType, macId, name } = selectDevice\n    let newDevice = {\n      name: reName || name,\n      mac: macId,\n      deviceType,\n      examRoom: examRoom || '',\n    }\n    console.log('newDevice', newDevice);\n    if (sameFlog) {\n      //相同就代表有这个硬件类型,可以直接去push\n\n      for (let i = 0; i < hardwareArr.length; i++) {\n        if (hardwareArr[i].type === selectDevice.deviceType) {\n          hardwareArr[i].devices.push(newDevice)\n          break\n        }\n      }\n\n    } else {\n      //没有就要新建一个硬件类型\n      let json = {\n        type: selectDevice.deviceType,\n        devices: [newDevice]\n      }\n      hardwareArr.push(json)\n    }\n    setReName('')\n    setExamRoom('')\n    setHardwareList(hardwareArr)\n\n    return newDevice\n\n\n  }\n\n  const body = () => {\n\n    if (selectDevice) {\n      return <div className=\"addDevice1 flex\">\n        <div className=\"addDeviceTop flex\">\n          <div className=\"title\" style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(20) }}>Would you like to name<br />\n            {`this ${selectDevice.name} device?`}</div>\n\n          <div className=\"title\" style={{ fontSize: px(24), marginBottom: px(40), }}>\n            {`SN: ${selectDevice.macId}`}</div>\n\n\n          <div className=\"input flex\" style={{ marginBottom: px(20), width: px(400) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={reName}\n              onChange={(value) => {\n                setReName(value.target.value)\n\n              }}\n              placeholder={`${selectDevice.name} Device Name`}\n            />\n          </div>\n          <div className=\"input flex\" style={{ marginBottom: px(60), width: px(400) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={examRoom}\n              onChange={(value) => {\n                setExamRoom(value.target.value)\n\n              }}\n              placeholder={`Exam Room Name`}\n            />\n          </div>\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\n            on the Exam Room. Write<br /> the name\n            on the sticker provided so it is easy\n            to select<br /> your device in the future.</div>\n        </div>\n        <div className=\"addDeviceFoot flex\">\n          <div className=\"btn\"\n            onClick={() => {\n              addDevice()\n              setSelectDevice(null)\n              setSelectHardwareType('add')\n\n            }}\n          >\n            <p className='btnText'>Add Another Device</p>\n          </div>\n          <div className=\"btn\"\n            onClick={() => {\n              let newDevice = addDevice()\n              setSelectHardwareType(selectDevice.deviceType)\n\n\n              electronStore.set(`${storage.lastOrganization}-${storage.userId}-${selectDevice.deviceType}-selectDeviceInfo`, newDevice)\n              setSelectDevice(null)\n            }}\n          >\n            <p className='btnText'>Finish</p>\n          </div>\n        </div>\n\n\n      </div>\n    } else {\n      if (noUSB) {\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\n\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\n        </div>\n      } else {\n        if (devicesList.length === 0) {\n          let options = (val) => {\n            let arr = []\n            if (val === 1) {\n              arr = [mellaPro, mellaHome, biggiePro, biggieHome, rfid]\n            } else {\n              arr = [possum, maeBowl, other]\n            }\n            let option = arr.map((item, index) => {\n              let imgWidth = px(80)\n              imgWidth = index === 2 ? px(65) : imgWidth\n              return (<li key={index.toString()} style={{ margin: `${px(20)}px` }}>\n                <div className=\"searchType-item\" key={index} >\n                  <img src={item} alt=\"\" width={imgWidth} />\n                </div>\n              </li>)\n            })\n            return (\n              <ul>\n                {option}\n              </ul>\n            )\n          }\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n\n\n            <div className=\"addDeviceContent\">\n              <div className=\"blueAnimal\" style={{ marginTop: px(50) }}>\n                {/* <img src={blueSearch} alt=\"\" width={px(150)} /> */}\n                <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                  <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\n                </div>\n              </div>\n              <div className=\"openText\" style={{ margin: `${px(15)}px 0` }}>\n                Make sure your bluetooth and wifi is<br /> activated and turn on your device.\n              </div>\n              <div className=\"btn\" style={{ width: px(350), height: px(40) }}>\n                <div className=\"btnText\">\n                  Scan For Devices\n                </div>\n              </div>\n              <div className=\"or\" style={{ marginTop: px(10), marginBottom: px(15) }}>\n                Or\n              </div>\n              <div className=\"select\">\n                Select device type to\n              </div>\n              <div className=\"add\">\n                add manually\n              </div>\n\n              <div className=\"item\">\n                {options(1)}\n                {options(2)}\n              </div>\n            </div>\n\n            {/* <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\n\n                            <p>\n                                {'searching...'}\n                            </p>\n                        </div> */}\n          </div>\n        } else {\n          let options = devicesList.map((item, index) => {\n\n            let flog = saveDeviceMac.some((device, index) => {\n              return device === item.macId\n            })\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\n            return <li\n              className='flex'\n              style={{ marginBottom: px(20) }}\n              key={`${index}`}\n              onClick={() => {\n                if (!flog) {\n                  setSelectDevice(item)\n\n                } else {\n                  message.destroy();\n                  message.error('This device has already been added')\n                }\n\n              }}\n            >\n\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\n\n            </li>\n          })\n          return <div className='deviceList ' >\n            <ul>\n              {options}\n            </ul>\n          </div>\n        }\n      }\n    }\n\n  }\n\n  //初始化\n  useEffect(() => {\n    setNoUSB(false)\n    setDevicesList([])\n    setSelectDevice(null)\n    setReName('')\n    setSaveDeviceMac([])\n    setTopText(' Pair Device')\n    //组件渲染完毕后要先清空广播的硬件信息\n    setReceiveBroadcastHardwareInfoFun({\n      deviceType: '',\n      macId: '',\n      name: ''\n    })\n  }, [])\n  useEffect(() => {\n\n    if (hardwareList.length > 0) {\n      let saveDeviceMac = []\n      for (let i = 0; i < hardwareList.length; i++) {\n        const element = hardwareList[i];\n        for (let j = 0; j < element.devices.length; j++) {\n          const device = element.devices[j];\n          saveDeviceMac.push(device.mac)\n        }\n      }\n      setSaveDeviceMac(saveDeviceMac)\n\n    }\n  }, [hardwareList])\n  useEffect(() => {\n    if (!selectDevice) {\n      setTopText(' Pair Device')\n    } else {\n      setTopText('Device Connected')\n    }\n\n  }, [selectDevice])\n  useEffect(() => {\n    setNoUSB(!isHaveUsbDevice)\n  }, [isHaveUsbDevice])\n  useEffect(() => {\n    let sameFlog = devicesList.some((device, index) => {\n      return device.macId === receiveBroadcastHardwareInfo.macId\n    })\n    if (sameFlog || !receiveBroadcastHardwareInfo.macId) {   //重复直接退出\n      return\n    }\n    console.log('receiveBroadcastHardwareInfo', devicesList, receiveBroadcastHardwareInfo);\n    let deviceArr = [].concat(devicesList)\n    deviceArr.push(receiveBroadcastHardwareInfo)\n    setDevicesList(deviceArr)\n\n\n\n  }, [receiveBroadcastHardwareInfo])\n\n  return (\n    <div className='addDevice' style={{ height: bodyHeight }}>\n      <div className=\"addDeviceTitle\" style={{ height: px(100), fontSize: 26, paddingLeft: px(20) }}>\n        {topText}\n      </div>\n\n      {body()}\n    </div >\n  )\n}\n\n\nAddDevice.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n//默认值\nAddDevice.defaultProps = {\n  bodyHeight: 0,\n  devicesTypeList: []\n}\nexport default connect(\n  state => ({\n    hardwareReducer: state.hardwareReduce,\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n    receiveBroadcastHardwareInfo: state.hardwareReduce.receiveBroadcastHardwareInfo,\n    hardwareList: state.hardwareReduce.hardwareList,\n  }),\n  { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }\n)(AddDevice)\n",["501","502"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.jsx",[],["503","504"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["505","506","507","508","509","510","511","512","513","514"],"import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Image,\n  Layout,\n  Dropdown,\n  Col,\n  Row,\n  Avatar,\n  Space,\n  Card,\n  Menu,\n  Progress,\n} from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\n\nimport BluetoothNotConnected from \"./../../../assets/img/BluetoothNotConnected.png\";\nimport AxillaryBluetooth from \"./../../../assets/img/AxillaryBluetooth.png\"; //腋温图片\nimport RectalBluetoothIcon from \"./../../../assets/img/RectalBluetoothIcon.png\"; //肛温图片\nimport EarBluetoothIcon from \"./../../../assets/img/EarBluetoothIcon.png\"; //耳温图片\nimport connectBle from \"./../../../assets/img/connectBle.png\";\nimport redcat from \"./../../../assets/images/redcat.png\";\nimport reddog from \"./../../../assets/images/reddog.png\";\nimport redother from \"./../../../assets/images/redother.png\";\n\nimport electronStore from \"../../../utils/electronStore\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n  setMellaPredictReturnValueFun,\n} from \"../../../store/actions\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\n\nimport \"./headerItem.less\";\nimport { catv12Predict } from \"../../../api\";\n\nconst { Header } = Layout;\nconst HeaderItem = ({\n  petMessage,\n  hardwareMessage,\n  timeNum = 15,\n  setMellaPredictReturnValueFun,\n}) => {\n  let history = useHistory();\n  let storage = window.localStorage;\n  let {\n    petName,\n    patientId,\n    firstName,\n    lastName,\n    gender,\n    breedName,\n    birthday,\n    weight,\n    url,\n    petSpeciesBreedId,\n    petId,\n    isWalkIn,\n  } = petMessage;\n  let {\n    mellaConnectStatus,\n    mellaPredictValue,\n    mellaMeasureValue,\n    mellaMeasurePart,\n    rulerConnectStatus,\n    biggieConnectStatus,\n    selectHardwareInfo,\n    selectHardwareType,\n  } = hardwareMessage;\n  const [value, setValue] = useState(0);\n  const saveCallBack = useRef();\n  const callBack = () => {\n    let random = null;\n    if (timeNum === 15) {\n      random = 7;\n    } else if (timeNum === 30) {\n      random = 3.5;\n    } else {\n      random = 1.75;\n    }\n    setValue(value + random);\n  };\n  //展示宠物照片方法\n  const petPicture = (size) => {\n    if (_.isEmpty(url)) {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <Avatar src={redcat} size={size} />;\n      } else if (\n        petSpeciesBreedId === 12001 ||\n        _.inRange(petSpeciesBreedId, 136, 456)\n      ) {\n        return <Avatar src={reddog} size={size} />;\n      } else if (petSpeciesBreedId === 13001) {\n        return <Avatar src={redother} size={size} />;\n      } else {\n        return <Avatar src={redother} size={size} />;\n      }\n    } else {\n      return <Avatar src={url} size={size} />;\n    }\n  };\n  //展示名字或id方法\n  const showNameOrId = () => {\n    if (_.isEmpty(petName) && _.isEmpty(patientId)) {\n      return \"unknown\";\n    } else if (!_.isEmpty(petName)) {\n      return petName;\n    } else {\n      return patientId;\n    }\n  };\n  //展示主人名字方法\n  const ownerName = () => {\n    if (_.isEmpty(firstName) && _.isEmpty(lastName)) {\n      return \"unknown\";\n    } else {\n      return firstName + \" \" + lastName;\n    }\n  };\n  //计算宠物年龄\n  const calculateAge = () => {\n    if (_.isEmpty(birthday)) {\n      return \"unknown\";\n    } else {\n      return moment().diff(moment(birthday), \"years\") + \" \" + \"Years Old\";\n    }\n  };\n  //计算宠物体重\n  const calculateWeight = () => {\n    if (_.isEmpty(weight)) {\n      return \"unknown\";\n    } else {\n      return _.floor(weight * 2.2, 1) + \" \" + \"lbs\";\n    }\n  };\n  //头部弹出卡片\n  const cardItem = () => {\n    return (\n      <Menu onClick={(item) => clilkMenu(item)} className=\"popBox\">\n        <Menu.Item className=\"topItem\">\n          <div className=\"cardTopBox\">\n            <div className=\"topLeftBox\">\n              {petPicture(91)}\n              <p className=\"cardTitle\">{showNameOrId()}</p>\n              <p className=\"cardTitle\">{ownerName()}</p>\n            </div>\n            <div className=\"topRightBox\">\n              <p className=\"cardTitle\">{calculateAge()}</p>\n              <p className=\"cardTitle\">{calculateWeight()}</p>\n              <p className=\"cardTitle\">{gender === 0 ? \"Male\" : \"Venter\"}</p>\n              <p className=\"cardTitle\">{breedName}</p>\n            </div>\n          </div>\n        </Menu.Item>\n        <Menu.Item key={\"editPetInfo\"} style={{ paddingLeft: '8px' }}>\n          <p className=\"itemList\">Edit Pet Profile</p>\n        </Menu.Item>\n        <Menu.Item style={{ paddingLeft: '8px' }}>\n          <p className=\"itemList\">Export Temperature History</p>\n        </Menu.Item>\n        <Menu.Item style={{ paddingLeft: '8px' }}>\n          <p className=\"itemList\">Export All Vitals History</p>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n  const clilkMenu = (item) => {\n    console.log(\"---item\", item);\n    if (item.key === \"editPetInfo\" && !petMessage.isWalkIn) {\n      //跳转到编辑宠物信息页面\n      history.push(\"/page9\");\n    }\n  };\n  //超过15s后调用接口\n  const prediction = () => {\n    let parame = {\n      ambient_temperature: 17,\n      data: mellaPredictValue,\n      deviceId: \"11111\",\n      sampling_rate: \"135ms\",\n    };\n    let url = \"/clinical/catv12Predict\";\n    catv12Predict(parame)\n      .then((res) => {\n        console.log(\"res\", res);\n        let ipcRenderer = window.electron.ipcRenderer;\n        if (res.message === \"Success\") {\n          let prediction = res.result.prediction.toFixed(2);\n          let num = parseFloat(parseFloat(prediction).toFixed(1));\n          setMellaPredictReturnValueFun(num);\n          let tempArr = prediction.split(\".\");\n          let intNum = tempArr[0];\n          let flotNum = tempArr[1];\n          if (intNum.length < 2) {\n            intNum = \"0\" + intNum;\n          }\n          if (flotNum.length < 2) {\n            flotNum = \"0\" + flotNum;\n          }\n          const timeID = setTimeout(() => {\n            ipcRenderer.send(\"usbdata\", {\n              command: \"42\",\n              arr: [intNum, flotNum],\n            });\n\n            timeID && clearTimeout(timeID);\n          }, 10);\n        } else {\n          const timeID = setTimeout(() => {\n            ipcRenderer.send(\"usbdata\", { command: \"41\", arr: [] });\n            clearTimeout(timeID);\n          }, 10);\n        }\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n  //判断仪器是否连接从而判断选择什么图片\n  const isConnect = () => {\n    const checkImage = () => {\n      if (mellaMeasurePart === \"腋温\") {\n        return AxillaryBluetooth;\n      } else if (mellaMeasurePart === \"耳温\") {\n        return EarBluetoothIcon;\n      } else {\n        return RectalBluetoothIcon;\n      }\n    };\n\n    if (electronStore.get(`${storage.userId}-isClical`)) {\n      return _.isEqual(mellaConnectStatus, \"disconnected\") ? (\n        <Avatar size={40} src={BluetoothNotConnected} />\n      ) : (\n        <Progress\n          width={48}\n          type=\"circle\"\n          percent={value}\n          format={() => <Avatar size={40} src={checkImage()} />}\n        />\n      );\n    } else {\n      switch (selectHardwareType) {\n        case \"mellaPro\":\n          return _.isEqual(mellaConnectStatus, \"disconnected\") ? (\n            <Avatar size={40} src={BluetoothNotConnected} />\n          ) : (\n            <Progress\n              width={48}\n              type=\"circle\"\n              percent={value}\n              format={() => <Avatar size={40} src={checkImage()} />}\n            />\n          );\n        case \"biggie\":\n          return _.isEqual(biggieConnectStatus, \"disconnected\") ? (\n            <Avatar size={40} src={BluetoothNotConnected} />\n          ) : (\n            <Avatar size={40} src={connectBle} />\n          );\n        case \"tape\":\n          return _.isEqual(rulerConnectStatus, \"disconnected\") ? (\n            <Avatar size={40} src={BluetoothNotConnected} />\n          ) : (\n            <Avatar size={40} src={connectBle} />\n          );\n        default:\n          break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (value === 105 && timeNum !== 60) {\n      prediction();\n    } else if (value === 105 && timeNum === 60) {\n      let ipcRenderer = window.electron.ipcRenderer;\n      const timeID = setTimeout(() => {\n        ipcRenderer.send(\"usbdata\", { command: \"41\", arr: [] });\n        clearTimeout(timeID);\n      }, 10);\n    }\n    return () => { };\n  }, [value]);\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    let timer = null;\n    if (mellaConnectStatus === \"isMeasuring\") {\n      setValue(0);\n      timer = setInterval(tick, 1000);\n    } else if (value > 100 || mellaConnectStatus === \"complete\") {\n      clearInterval(timer);\n    } else if (mellaConnectStatus === \"disconnected\") {\n      setValue(0);\n    };\n    if (mellaConnectStatus === \"complete\") {\n      // let ipcRenderer = window.electron.ipcRenderer;\n      // ipcRenderer.send(\"keyboardWriting\", mellaMeasureValue);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [mellaConnectStatus]);\n\n  return (\n    <div className=\"headerBox\">\n      <Header style={{ background: \"#fff\", height: '100%' }}>\n        {_.isEmpty(petId) && !isWalkIn ? (\n          <></>\n        ) : (\n          <Row className=\"heardRow\" >\n            {/*头部左侧 */}\n            <Col flex={10}>\n              {isWalkIn ? (\n                <span className=\"walkInTitle\">Walk-In</span>\n              ) : (\n                <Dropdown overlay={cardItem} trigger={[\"click\"]}>\n                  <div\n                    className=\"petMessageBox\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    {petPicture(40)}\n                    <div className=\"petMessageBox\">\n                      <p className=\"petName\">\n                        {!_.isEmpty(petMessage.patientId)\n                          ? petMessage.patientId\n                          : \"unknown\"}\n                        ,{\" \"}\n                        {!_.isEmpty(petMessage.petName)\n                          ? petMessage.petName\n                          : \"unknown\"}\n                      </p>\n                      <DownOutlined\n                        style={{ fontSize: \"22px\", marginLeft: \"10px\" }}\n                      />\n                    </div>\n                  </div>\n                </Dropdown>\n              )}\n            </Col>\n            {/*头部右侧 */}\n            <Col flex={1}>\n              <div className=\"linkStateImageBox\">{isConnect()}</div>\n            </Col>\n          </Row>\n        )}\n      </Header>\n    </div>\n  );\n};\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n    setMellaPredictReturnValueFun,\n  }\n)(HeaderItem);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\VetSpire.js",["515","516","517"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx",["518"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Input,\r\n  message,\r\n  Spin,\r\n  Button,\r\n  Select,\r\n} from \"antd\";\r\n\r\nimport UploadImg from \"../../utils/uploadImg/UploadImg\";\r\n\r\nimport {\r\n  checkPatientId,\r\n  selectBreedBySpeciesId,\r\n} from '../../api';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport './index.less';\r\n\r\nconst AddPetModal = ({ visible, width, title, destroyOnClose, value, onConfirm, onCancel, onLoading }) => {\r\n  const { Option } = Select;\r\n  let storage = window.localStorage;\r\n  const [isModalVisible, setIsModalVisible] = useState(false);//控制弹窗的显隐\r\n  const [isdestroyOnClose, setIsdestroyOnClose] = useState(false);//是否清除弹窗里面的内容\r\n  const [isWidth, setIsWidth] = useState(520);//弹窗的宽度\r\n  const [loading, setLoading] = useState(false);//加载\r\n  const [breedList,  setBreedList] = useState([]);//\r\n  const [imageId, setImageId] = useState('');//上传后图片id\r\n  const [patientId, setPatientId] = useState('');//用户输入的病人id\r\n  const [petName, setPetName] = useState('');//用户输入的宠物名字\r\n  const [ownerName, setOwnerName] = useState('');//用户输入的主人名字\r\n  const [breedId, setBreedId] = useState('');//用户选择的宠物品种id\r\n  const [petAge, setPetAge] = useState('');//用户输入的宠物年龄\r\n  const [petWeight, setPetWeight] = useState('');//用户输入的宠物体重\r\n  const [btnLoading, setBtnLoading] = useState(false);//按钮加载\r\n\r\n\r\n  //确认选择\r\n  const handleOk = () => {\r\n    if (patientId === '') {\r\n      message.error('Please enter the patientId!');\r\n    } else {\r\n      setIsModalVisible(visible);\r\n      onConfirm({\r\n        imageId: imageId,\r\n        patientId: patientId,\r\n        petName: petName,\r\n        petSpeciesBreedId: breedId,\r\n        age: petAge,\r\n        weight: petWeight,\r\n        owner: ownerName,\r\n      })\r\n    }\r\n  };\r\n  //关闭弹窗\r\n  const handleCancel = () => {\r\n    onCancel(false);\r\n    setIsModalVisible(visible);\r\n  };\r\n  //判断用户输入的patientId是否存在\r\n  const getPetInfoByPatientId = () => {\r\n    setLoading(true);\r\n    let datas = {\r\n      patientId: patientId,\r\n      doctorId: storage.userId\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      datas.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      datas.organizationId = storage.lastOrganization\r\n    }\r\n    checkPatientId(datas)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.flag === false) {\r\n          message.error('The patient ID already exists, please replace it !');\r\n        } else {\r\n          message.success('The patientId can be used ~')\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        message.error('Abnormal interface');\r\n      })\r\n\r\n  }\r\n  //获取宠物品种\r\n  const selectBreed = () => {\r\n    setLoading(true);\r\n    selectBreedBySpeciesId({ speciesId: null })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.msg === 'success') {\r\n          let arr = [];\r\n          _.map(res.petlist, (item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n            };\r\n            arr.push(data);\r\n          });\r\n          setBreedList(arr);\r\n        } else {\r\n          message.error('Failed to obtain pet breed information!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true || visible === false) {\r\n      setIsModalVisible(visible);\r\n    } else {\r\n      setIsModalVisible(false);\r\n    }\r\n    return (() => { })\r\n  }, [visible]);\r\n\r\n  useEffect(() => {\r\n    if (destroyOnClose === true) {\r\n      setIsdestroyOnClose(destroyOnClose);\r\n    }\r\n    if (_.isNumber(width)) {\r\n      setIsWidth(width)\r\n    }\r\n    return (() => { })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    selectBreed();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onLoading === true || onLoading === false) {\r\n      setBtnLoading(onLoading);\r\n    } else {\r\n      setBtnLoading(false);\r\n    }\r\n    return (() => { })\r\n  }, [onLoading]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Add a Pet\"\r\n        visible={isModalVisible}\r\n        onCancel={handleCancel}\r\n        centered\r\n        maskClosable={false}\r\n        footer={null}\r\n        width={isWidth}\r\n        destroyOnClose={isdestroyOnClose}\r\n        className=\"addPetModal\"\r\n      >\r\n        <Spin spinning={loading}>\r\n          <div className='modalContentBox'>\r\n            <div className='petMsgBox'>\r\n              <div className='addPhoto'>\r\n                <UploadImg\r\n                  getImg={(val) => {\r\n                    setImageId(val.imageId);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Patient ID:</p>\r\n                <Input\r\n                  value={patientId}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPatientId(e.target.value)\r\n                  }}\r\n                  onBlur={() => {\r\n                    if (patientId.length > 0) {\r\n                      getPetInfoByPatientId();\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Pet Name:</p>\r\n                <Input\r\n                  value={petName}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPetName(e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Owner Name:</p>\r\n                <Input\r\n                  value={ownerName}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setOwnerName(e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <p>Breed:</p>\r\n                <div className='selectBox'>\r\n                  <Select\r\n                    showSearch\r\n                    style={{ width: \"100%\" }}\r\n                    bordered={false}\r\n                    value={breedId}\r\n                    placeholder=\"Search to Select\"\r\n                    optionFilterProp=\"children\"\r\n                    listHeight={256}\r\n                    onSelect={(value, data) => setBreedId(value)}\r\n                    filterOption={(input, option) =>\r\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                      0\r\n                    }\r\n                    filterSort={(optionA, optionB) =>\r\n                      optionA.children\r\n                        .toLowerCase()\r\n                        .localeCompare(optionB.children.toLowerCase())\r\n                    }\r\n                  >\r\n                    {\r\n                      _.map(breedList, (item, index) => (\r\n                        <Option key={item.petSpeciesBreedId}>{item.breedName}</Option>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <p>Pet Age:</p>\r\n                <Input\r\n                  value={petAge}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPetAge(e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Pet Weight:</p>\r\n                <Input\r\n                  value={petWeight}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPetWeight(e.target.value)\r\n                  }}\r\n                />\r\n                <div className=\"unit\">{`kg`}</div>\r\n              </div>\r\n            </div>\r\n            <div className='foot'>\r\n              <div className=\"btnBox\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size=\"large\"\r\n                  block\r\n                  onClick={handleCancel}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size=\"large\"\r\n                  block\r\n                  onClick={handleOk}\r\n                  loading={btnLoading}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default AddPetModal;\r\n",["519","520"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx",["521"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Input,\r\n  message,\r\n  Spin,\r\n  Button,\r\n} from \"antd\";\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport './index.less';\r\nimport { selectBreedBySpeciesId } from '../../api';\r\n\r\nconst SelectPetBreed = ({ visible, width, title, destroyOnClose, value, onSelect, onCancel }) => {\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);//控制弹窗的显隐\r\n  const [isdestroyOnClose, setIsdestroyOnClose] = useState(false);//是否清除弹窗里面的内容\r\n  const [isWidth, setIsWidth] = useState(520);//弹窗的宽度\r\n  const [breedList, setBreedList] = useState([]);//所有宠物品种\r\n  const [searchValue, setSearchValue] = useState();//搜索框的值\r\n  const [selePetBreedValue, setSelePetBreedValue] = useState();//选择的宠物品种\r\n  const [loading, setLoading] = useState(false);//加载\r\n\r\n  //获取所有宠物品种\r\n  const getAllPetBreed = () => {\r\n    let data = {\r\n      speciesId: null,//null是获取所有宠物品种不分猫和狗\r\n    }\r\n    setLoading(true);\r\n\r\n    selectBreedBySpeciesId(data)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.msg === 'success') {\r\n          setBreedList(res.petlist);\r\n        } else {\r\n          message.error('Failed to obtain pet breed')\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n  //确认选择\r\n  const handleOk = () => {\r\n    onSelect(selePetBreedValue);\r\n    setIsModalVisible(visible);\r\n  };\r\n  //关闭弹窗\r\n  const handleCancel = () => {\r\n    onCancel(false);\r\n    setIsModalVisible(visible);\r\n  };\r\n  //输入框输入内容\r\n  const onChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true || visible === false) {\r\n      setIsModalVisible(visible);\r\n    } else {\r\n      setIsModalVisible(false);\r\n    }\r\n    return (() => { });\r\n  }, [visible]);\r\n\r\n  useEffect(() => {\r\n    getAllPetBreed();\r\n    return (() => { });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (destroyOnClose === true) {\r\n      setIsdestroyOnClose(destroyOnClose);\r\n    }\r\n    if (_.isNumber(width)) {\r\n      setIsWidth(width)\r\n    }\r\n    return (() => { })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Choose Breed\"\r\n        visible={isModalVisible}\r\n        onCancel={handleCancel}\r\n        centered\r\n        maskClosable={false}\r\n        footer={null}\r\n        width={isWidth}\r\n        destroyOnClose={isdestroyOnClose}\r\n        className=\"selectPetBreedModal\"\r\n      >\r\n        <Spin spinning={loading}>\r\n          <div className='modalContentBox'>\r\n            <div className=\"searchBox\">\r\n              <Input\r\n                placeholder=\"Search Name\"\r\n                bordered={false}\r\n                allowClear={true}\r\n                prefix={<SearchOutlined />}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div className='list'>\r\n              <PhoneBook\r\n                listDate={breedList}\r\n                confirmSelectBreed={value}\r\n                selectFun={(val) => {\r\n                  setSelePetBreedValue(val);\r\n                }}\r\n                searchText={searchValue}\r\n              />\r\n            </div>\r\n            <div className='foot'>\r\n              <div className=\"btnBox\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size=\"large\"\r\n                  block\r\n                  onClick={handleOk}\r\n                >\r\n                  Select\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectPetBreed;\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\index.js",["522"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js",[],["523","524"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\advancedSettings\\index.jsx",["525","526"],"\r\nimport React, { Component } from 'react'\r\nimport { message } from 'antd';\r\nimport Heart from '../../utils/heard/Heard'\r\nimport { px, win } from '../../utils/px'\r\nimport MyModal from '../../utils/myModal/MyModal.jsx'\r\nimport './index.less';\r\nimport { getOta } from '../../api/mellaserver/backend';\r\nimport { versionComarision } from '../../utils/commonFun';\r\nimport { getInfoOfLatestDevice } from '../../api/mellaserver/mellarecord';\r\n\r\nlet ipcRenderer = window.electron.ipcRenderer\r\nlet storage = window.localStorage;\r\nlet uploadType = ''\r\nexport default class AdvancedSettings extends Component {\r\n\r\n  state = {\r\n    isHaveBase: true,\r\n    uploadText: '',\r\n    isUpload: false,\r\n    updateModal: false,\r\n    progress: 0,\r\n\r\n\r\n    localVersion: '',\r\n    cloudVersion: '',\r\n    filePath: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    ipcRenderer.send(\"big\", win());\r\n    //检测是否有usb设备\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    //升级过程中发送的过程信息\r\n    ipcRenderer.on('uploadBaseInfo', this._uploadBaseInfo)\r\n    //底座发过来的指令信息\r\n    ipcRenderer.on('sned', this._send)\r\n    //发送结束升级指令,相当于初始化\r\n    ipcRenderer.send('reUpload', {})\r\n  }\r\n  componentWillUnmount() {\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('uploadBaseInfo', this._uploadBaseInfo)\r\n    ipcRenderer.removeListener('sned', this._send)\r\n\r\n    this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n    console.log(data);\r\n    let { isUpload } = this.state\r\n\r\n    if (data[2] === 54) {\r\n      if (isUpload) {\r\n        if (data[3] === 0) {\r\n          console.log('这是已经在升级状态下的, 要他重新插拔底座然后再去发送指令');\r\n          this.setState({\r\n            uploadText: 'Start the upgrade after re-plugging the base'\r\n          })\r\n          ipcRenderer.send('startUpload', {})\r\n        }\r\n      }\r\n\r\n    } else if (data[2] === 182) {\r\n      //为0代表底座通讯关闭成功了\r\n      if (data[3] === 0) {\r\n        if (isUpload) {\r\n          console.log('发送指令让底座进入升级状态');\r\n          ipcRenderer.send('enterUpgrade', { command: '38', arr: ['5A'] })\r\n        }\r\n\r\n      }\r\n    } else if (data[2] === 136) {\r\n      //获取到了版本信息,把定时器关闭,此底座不是很老版本\r\n      console.log('版本信息:', data);\r\n      this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n      let localVersion = `${data[6]}.${data[7]}.${data[8]}`\r\n      this.setState({\r\n        localVersion,\r\n        uploadText: `The current version number is v${localVersion}, getting the latest version`\r\n      }, () => {\r\n        this.cloudVersion()\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  //是否插上底座设备，为true则代表插上了底座设备，反之为拔掉了底座设备\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    let { isUpload, progress } = this.state\r\n    if (data === false) {\r\n\r\n      this.setState({\r\n        isHaveBase: true\r\n      })\r\n      if (isUpload) {\r\n        if (progress === 0) {\r\n          console.log('正在升级过程中检测到了拔插 前去发送升级文件', uploadType);\r\n          if (uploadType === 'base') {\r\n            console.log('底座升级');\r\n            ipcRenderer.send('updateBase', { state: 'base', url: this.state.filePath, fileName: `mellabase${this.state.cloudVersion}` })\r\n          } else if (uploadType === 'reset') {\r\n            console.log('底座出厂设置');\r\n            ipcRenderer.send('updateBase', { state: 'reset', })\r\n          }\r\n        } else if (progress === 100) {\r\n          this.failTimer && clearTimeout(this.failTimer)\r\n          this.setState({\r\n            isUpload: false,\r\n            updateModal: false,\r\n            progress: 0,\r\n            localVersion: '',\r\n            cloudVersion: '',\r\n          })\r\n          message.destroy()\r\n          message.success('Update Successful');\r\n          ipcRenderer.send('reUpload', {})\r\n        } else {\r\n          this.setState({\r\n            isUpload: false,\r\n            updateModal: false,\r\n            progress: 0,\r\n            localVersion: '',\r\n            cloudVersion: '',\r\n          })\r\n          message.destroy()\r\n          message.error('Upgrade failed')\r\n          ipcRenderer.send('reUpload', {})\r\n        }\r\n\r\n\r\n      }\r\n\r\n    } else {\r\n      if (this.state.isHaveBase) {\r\n        this.setState({\r\n          isHaveBase: false\r\n        })\r\n      }\r\n      if (isUpload) {\r\n        if (progress > 0 && progress < 100) {\r\n          this.setState({\r\n            isUpload: false,\r\n            updateModal: false,\r\n            progress: 0,\r\n            localVersion: '',\r\n            cloudVersion: '',\r\n          })\r\n          message.destroy()\r\n          message.error('Upgrade failed')\r\n          ipcRenderer.send('reUpload', {})\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n  _uploadBaseInfo = (e, data) => {\r\n    console.log('升级过程中的信息：', data);\r\n    switch (data.status) {\r\n      case 'error':\r\n        this.setState({\r\n          isUpload: false,\r\n          updateModal: false,\r\n          progress: 0,\r\n          localVersion: '',\r\n          cloudVersion: '',\r\n        })\r\n        message.destroy()\r\n        message.error(data.data)\r\n        ipcRenderer.send('reUpload', {})\r\n        break;\r\n      case 'error1':\r\n        this.setState({\r\n          isUpload: false,\r\n          updateModal: false,\r\n          progress: 0,\r\n          localVersion: '',\r\n          cloudVersion: '',\r\n        })\r\n        message.destroy()\r\n        message.error('Upgrade failed, please try again')\r\n        ipcRenderer.send('reUpload', {})\r\n        break;\r\n\r\n\r\n      case 'normal':\r\n        this.setState({\r\n          uploadText: data.data,\r\n          progress: data.progress\r\n        })\r\n        if (data.progress === 100) {\r\n          console.log('进度到达100了');\r\n          this.failTimer && clearTimeout(this.failTimer)\r\n          this.failTimer = setTimeout(() => {\r\n\r\n            this.setState({\r\n              isUpload: false,\r\n              updateModal: false,\r\n              progress: 0,\r\n              localVersion: '',\r\n              cloudVersion: '',\r\n            })\r\n            message.destroy()\r\n            message.error('Upgrade failed')\r\n            ipcRenderer.send('reUpload', {})\r\n          }, 5000);\r\n        }\r\n        break;\r\n\r\n      case 'success':\r\n        this.setState({\r\n          isUpload: false,\r\n          updateModal: false,\r\n        })\r\n        message.destroy()\r\n        message.success(data.data)\r\n        ipcRenderer.send('reUpload', {})\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n\r\n  }\r\n  _upload = (val) => {\r\n\r\n    let { isHaveBase } = this.state\r\n    if (!isHaveBase) {\r\n      this.setState({\r\n        isUpload: false,\r\n        updateModal: false,\r\n      })\r\n      message.destroy()\r\n      message.error('No base device found, please plug it in and try again')\r\n    } else {\r\n      console.log('---我插入底座了，准备去升级, 这里就可以打开modal框了');\r\n      this.setState({\r\n        uploadText: 'Detect upgrade environment',\r\n        isUpload: true,\r\n        updateModal: true,\r\n        progress: 0\r\n      })\r\n      uploadType = val\r\n      //第一步，发送一个关闭通信的指令，看是否能够收到，如果收不到则判定底座已经在升级状态下，直接去发送文件\r\n      const timer = setTimeout(() => {\r\n        console.log('发送指令查看底座是否已经在升级状态');\r\n        ipcRenderer.send('usbdata', { command: '36', arr: ['00'] })\r\n        clearTimeout(timer)\r\n      }, 100);\r\n\r\n      //2.如果能收到关闭指令，则发送开始升级指令\r\n\r\n      //3.如果如果测试检测到usb插拔，则去发送文件\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n  _upload1 = (val) => {\r\n\r\n    let { isHaveBase } = this.state\r\n    message.destroy()\r\n    if (!isHaveBase) {\r\n      this.setState({\r\n        isUpload: false,\r\n        updateModal: false,\r\n        localVersion: '',\r\n        cloudVersion: '',\r\n      })\r\n\r\n      message.error('No base device found, please plug it in and try again')\r\n    } else {\r\n      console.log('---我插入底座了，准备去升级, 这里就可以打开modal框了');\r\n      this.setState({\r\n        uploadText: 'Detect upgrade environment',\r\n        updateModal: true,\r\n        progress: 0,\r\n        localVersion: '',\r\n        cloudVersion: '',\r\n      }, () => {\r\n        this.localVersion()\r\n      })\r\n      uploadType = val\r\n      //第一步,查询本地版本号\r\n\r\n\r\n\r\n      //2.如果能收到关闭指令，则发送开始升级指令\r\n\r\n      //3.如果如果测试检测到usb插拔，则去发送文件\r\n\r\n\r\n\r\n    }\r\n  }\r\n  //询问本地的版本号\r\n  localVersion = () => {\r\n    this.setState({\r\n      uploadText: 'Query the local version number',\r\n    })\r\n    ipcRenderer.send('usbdata', { command: '08', arr: [''] })\r\n    this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n    this.localVersionTimer = setTimeout(() => {\r\n      //如果3秒后还没有收到桌面返回的版本号,则代表这是很老的底座程序,直接去下载文件升级\r\n      this.cloudVersion()\r\n      this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n    }, 3000);\r\n  }\r\n  //询问网端最新的版本号\r\n  cloudVersion = () => {\r\n    console.log('-----进入获取网端版本时间了');\r\n    getInfoOfLatestDevice('mellabase')\r\n      .then(res => {\r\n        console.log('获取到了网端的版本号', res);\r\n        if (res.flag) {\r\n          let { firmwareVersion, updateUrl } = res.data\r\n          let cloudBigtolocal = versionComarision(firmwareVersion, this.state.localVersion)\r\n          console.log('比较信息:', firmwareVersion, this.state.localVersion, cloudBigtolocal);\r\n          if (cloudBigtolocal || !this.state.localVersion) {\r\n            this.setState({\r\n              cloudVersion: firmwareVersion,\r\n              filePath: updateUrl,\r\n              isUpload: true,\r\n              uploadText: 'Start getting upgrade files'\r\n\r\n            })\r\n\r\n            //第一步，发送一个关闭通信的指令，看是否能够收到，如果收不到则判定底座已经在升级状态下，直接去发送文件\r\n            const timer = setTimeout(() => {\r\n              console.log('发送指令查看底座是否已经在升级状态');\r\n              ipcRenderer.send('usbdata', { command: '36', arr: ['00'] })\r\n              clearTimeout(timer)\r\n            }, 100);\r\n          } else {\r\n            this.setState({\r\n              updateModal: false\r\n            })\r\n            message.success(`The hardware version is v${firmwareVersion}, which is the latest version`)\r\n          }\r\n\r\n\r\n\r\n        } else {\r\n          console.log('没有获取到版本的文件');\r\n          message.error('Failed to get the latest version')\r\n          this.setState({\r\n            updateModal: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('获取版本失败,停止升级', err);\r\n        message.error('Failed to get the latest version')\r\n        this.setState({\r\n          updateModal: false\r\n        })\r\n\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id='advancedsettings'>\r\n        <div className=\"heard\">\r\n          <Heart />\r\n          <div className=\"title\">\r\n            <h2>Advanced Settings</h2>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"item\">\r\n            <div className=\"ltext\">\r\n              <p style={{ fontSize: px(18) }}>\r\n                Factory Reset<br /><br />\r\n\r\n                This will erase all data from your Mella<br /> device, including:<br />\r\n                - All installed updates<br />\r\n                - User preferences and Settings<br />\r\n              </p>\r\n            </div>\r\n            <div className=\"rbtn\"\r\n              // onClick={this._reset}\r\n              onClick={() => this._upload('reset')}\r\n            >\r\n              <div className=\"btn\">Erase all data and reset device</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"ltext\">\r\n              <p style={{ fontSize: px(18) }}>\r\n                Mella Base\r\n              </p>\r\n            </div>\r\n            <div className=\"rbtn\"\r\n\r\n              onClick={() => this._upload1('base')}\r\n            >\r\n              <div className=\"btn\">Update Mella Charging Base</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"ltext\">\r\n              <p style={{ fontSize: px(18) }}>\r\n                MellaPro Thermometer\r\n              </p>\r\n            </div>\r\n            <div className=\"rbtn\"\r\n              onClick={() => {\r\n                // ipcRenderer.send('usbdata', { command: '01', arr: ['11'] })\r\n              }}\r\n            >\r\n              <div className=\"btn\">Connect Bluetooth and Update</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <MyModal\r\n          visible={this.state.updateModal}\r\n          // visible={true}\r\n          element={\r\n            <div style={{ height: px(200), borderRadius: px(20) }} className=\"upload\">\r\n\r\n              {/* <p>{this.state.uploadText} </p> */}\r\n              <p style={{ color: '#000', padding: 0, margin: 0 }}>{this.state.uploadText}</p>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addDevice\\index.jsx",["527","528"],"import React, { Component } from 'react'\r\nimport { message } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport MinClose from '../../utils/minClose/MinClose'\r\nimport MouseDiv from '../../utils/mouseDiv/MouseDiv'\r\nimport { mTop, px, MTop, } from '../../utils/px';\r\nimport electronStore from '../../utils/electronStore';\r\n\r\nimport back_white from '../../assets/img/back-white.png';\r\nimport back_hui from '../../assets/img/back-hui.png';\r\nimport redclose from '../../assets/img/redclose.png';\r\n\r\nimport './index.less';\r\n\r\nlet storage = window.localStorage;\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\nlet num07 = 0       //接收到07命令行的次数\r\n\r\n\r\nexport default class AddDevice extends Component {\r\n\r\n  state = {\r\n    noUSB: false,\r\n    devicesList: [],\r\n    selectDevice: null,\r\n    // selectDevice: true,\r\n    reName: '',\r\n    saveDeviceMac: []  //这是已经保存过的设备的macid\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    message.destroy()\r\n\r\n    ipcRenderer.send('small')\r\n    // 监听分辨率是否改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    //这里做了个监听，当有数据发过来的时候直接在这里接收\r\n    ipcRenderer.on('sned', this._send)\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    let devicesList = electronStore.get(`${storage.userId}-deviceList`)\r\n    if (devicesList) {\r\n      let saveDeviceMac = []\r\n      for (let i = 0; i < devicesList.length; i++) {\r\n        const element = devicesList[i];\r\n        saveDeviceMac.push(element.macId)\r\n      }\r\n      this.setState({\r\n        saveDeviceMac\r\n      })\r\n    }\r\n\r\n\r\n\r\n    // const timer = setTimeout(() => {\r\n    //   let deviceList = [\r\n    //     // { name: 'Add Device', deviceType: 'add', macId: '0' },\r\n    //     { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:55:66' },\r\n    //   ]\r\n    //   this.setState({\r\n    //     devicesList: deviceList\r\n    //   })\r\n    //   clearTimeout(timer)\r\n    // }, 500);\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    ipcRenderer.removeListener('sned', this._send)\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      message.destroy()\r\n      this.setState({\r\n        noUSB: false\r\n      })\r\n    } else {\r\n      if (!this.state.noUSB) {\r\n        // message.error('The base is not detected. Please insert the base', 0)\r\n        this.setState({\r\n          noUSB: true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n    // console.log(data);\r\n    this.command(data)()\r\n  }\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  command = (newArr) => {\r\n    const instruction = [255]\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    // console.log(dataArr1);\r\n    const commandArr = {\r\n      255: () => {//蓝牙软尺广播的数据\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n\r\n        let bluName = ''\r\n        let bluData = []\r\n        //[\"aa\", \"25\", \"ff\", |\"03\", \"03\", \"b0\", \"ff\",| \"0f\", \"ff\", \"ac\", \"d2\", \"0b\", \"72\", \"c1\", \"7d\", \"3e\", \"d0\", \"a0\", \"00\", \"05\", \"09\", \"00\", \"2e\",| \"05\", \"09\", \"54\", \"61\", \"70\", \"65\", |\"06\", \"ef\", \"d0\", \"3e\", \"7d\", \"c1\", \"72\", |\"0b\", \"5c\", \"55\"]\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5])\r\n          }\r\n          // console.log('--剪切的数据---', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              let str = ''\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                let item = parseInt(itemData[i], 16)\r\n                str += String.fromCharCode(item)\r\n              }\r\n              bluName = str\r\n              break;\r\n            case 255:\r\n              bluData = itemData\r\n              break;\r\n            case 7: console.log('---UUID'); break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              break;\r\n            case 3: console.log('----尺子的,不知道什么用'); break;\r\n            default: console.log('直接跳出循环'); return;\r\n          }\r\n          dataIndex = itemLength\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\r\n        }\r\n        console.log('硬件名称', bluName, '-----硬件数据', bluData);\r\n        let macId = ''\r\n        if (bluData.length > 7) {\r\n          macId = this.getMac(bluName, bluData)\r\n        }\r\n\r\n\r\n        let sameFlog = this.state.devicesList.some((device, index) => {\r\n          return device.macId === macId\r\n        })\r\n        if (sameFlog || !macId) {   //重复直接退出\r\n          return\r\n        }\r\n        let deviceType = ''\r\n        switch (bluName) {\r\n          case 'Biggie':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n          case 'C19':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n\r\n          case 'MaeBowl':   //这是称量碗\r\n            deviceType = 'maeBowl'\r\n            break;\r\n\r\n          case 'Mella Measure': //这是蓝牙尺\r\n            deviceType = 'tape'\r\n            break;\r\n\r\n        }\r\n        if (macId && deviceType && bluName) {\r\n          let json = {\r\n            name: bluName,\r\n            deviceType,\r\n            macId\r\n          }\r\n          let deviceArr = [].concat(this.state.devicesList)\r\n          deviceArr.push(json)\r\n          this.setState({\r\n            devicesList: deviceArr\r\n          })\r\n        }\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n  }\r\n  getMac = (bluName, bluData) => {\r\n    switch (bluName) {\r\n      case 'Biggie':\r\n      case 'MaeBowl':\r\n      case 'Mella Measure':\r\n      case 'C19':\r\n        let str = bluData[1]\r\n        for (let i = 2; i < 7; i++) {\r\n          str += `:${bluData[i]}`\r\n        }\r\n        return str\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  changeFenBianLv = (e) => {\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n    })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  body = () => {\r\n    let { noUSB, devicesList, selectDevice, reName } = this.state\r\n    if (selectDevice) {\r\n      return <div className=\"addDevice flex\">\r\n        <div className=\"addDeviceTop flex\">\r\n          <div className=\"title\" style={{ fontSize: px(30), marginBottom: px(40) }}>Would you like to name<br />\r\n            this Mella device?</div>\r\n\r\n          <div className=\"input flex\" style={{ marginBottom: px(60) }}>\r\n            <input type=\"text\" style={{ height: px(45) }}\r\n              value={reName}\r\n              onChange={(value) => {\r\n                this.setState({\r\n                  reName: value.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\r\n            on the Exam Room. Write the name\r\n            on the sticker provided so it is easy\r\n            to select your device in the future.</div>\r\n        </div>\r\n        <div className=\"addDeviceFoot flex\">\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              console.log('---', deviceList);\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              let { saveDeviceMac } = this.state\r\n              saveDeviceMac.push(selectDevice.macId)\r\n              this.setState({\r\n                saveDeviceMac,\r\n                selectDevice: null,\r\n                reName: ''\r\n              })\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Add Another</p>\r\n          </div>\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              this.props.history.goBack()\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Finish</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    } else {\r\n      if (noUSB) {\r\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\r\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\r\n\r\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\r\n        </div>\r\n      } else {\r\n        if (devicesList.length === 0) {\r\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n            {/* < MyModal\r\n              visible={true}\r\n              element={\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n                  <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n                  </div>\r\n                  <p>\r\n                    {'searching...'}\r\n                  </p>\r\n                </div>\r\n              }\r\n            /> */}\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\r\n              <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\r\n              </div>\r\n              <p>\r\n                {'searching...'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        } else {\r\n          let options = devicesList.map((item, index) => {\r\n            let { saveDeviceMac } = this.state\r\n            let flog = saveDeviceMac.some((device, index) => {\r\n              return device === item.macId\r\n            })\r\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\r\n            return <li\r\n              className='flex'\r\n              style={{ marginBottom: px(20) }}\r\n              key={`${index}`}\r\n              onClick={() => {\r\n                if (!flog) {\r\n                  this.setState({\r\n                    selectDevice: item\r\n                  })\r\n                } else {\r\n                  message.destroy();\r\n                  message.error('This device has already been added')\r\n                }\r\n\r\n              }}\r\n            >\r\n\r\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\r\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\r\n\r\n            </li>\r\n          })\r\n          return <div className='deviceList'>\r\n            <ul>\r\n              {options}\r\n            </ul>\r\n          </div>\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"addDevice\">\r\n        <div className=\"heaed\">\r\n          <div className=\"l\"\r\n          >\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                let { selectDevice } = this.state\r\n                if (selectDevice) {\r\n                  this.setState({\r\n                    selectDevice: null\r\n                  })\r\n                } else {\r\n                  this.props.history.goBack()\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body flex\">\r\n          {this.body()}\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",["529","530"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx",["531","532","533","534","535","536"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Layout,\n  Avatar,\n  Button,\n  Card,\n  Space,\n  message,\n  Input,\n  Modal,\n} from \"antd\";\nimport {\n  CheckCircleFilled,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport {\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n} from \"../../store/actions\";\nimport _ from \"lodash\";\nimport { devicesTitleHeight } from \"../../utils/InitDate\";\nimport scaleImage from \"./../../assets/img/scaleImage.png\";\nimport combinedscales from \"./../../assets/img/combinedscales.png\";\nimport { px } from \"../../utils/px\";\nimport \"./index.less\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Meta } = Card;\nconst { confirm } = Modal;\nconst CombineScales = ({\n  petMessage,\n  hardwareMessage,\n  userMessage,\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n}) => {\n  let { hardwareList } = hardwareMessage;\n  const [biggieList, setBiggieList] = useState([]); //体重秤仪器列表\n  const [confirmType, setConfirmType] = useState(false); //确认选择\n  const [checkHardwareList, setcheckHardwareList] = useState([]); //存储用户点击选择的体重秤信息\n  const [saveName, setSaveName] = useState(\"\"); //保存用户的更改的名字\n\n  //点击卡片选择效果\n  const onClick = (index, data) => {\n    console.log(data);\n    let changeClassName = document.getElementById(index).classList;\n    let iconClassName = document.getElementById(`${\"icon\" + index}`);\n    let cardClassNametype = document\n      .getElementById(index)\n      .classList.contains(\"cardBoxClick\");\n    cardClassNametype\n      ? changeClassName.remove(\"cardBoxClick\")\n      : changeClassName.add(\"cardBoxClick\");\n    cardClassNametype\n      ? (iconClassName.style.display = \"none\")\n      : (iconClassName.style.display = \"\");\n    let oldData = checkHardwareList;\n    setcheckHardwareList(_.xorWith([data], oldData, _.isEqual));\n  };\n  //确认选择两个体重秤\n  const onChangeScales = () => {\n    if (_.size(checkHardwareList) > 1) {\n      setConfirmType(true);\n    } else {\n      message.error({\n        content: \"Please choose more than two scales\",\n        style: {\n          marginTop: \"20vh\",\n        },\n      });\n    }\n  };\n  //保存用户更改的名字\n  const saveChangeName = (e) => {\n    setSaveName(e.target.value);\n  };\n\n  //跳转准备测量\n  const startMeasuring = () => {\n    confirm({\n      title: \"Are you sure to incorporate the body fat scale?\",\n      icon: <ExclamationCircleOutlined />,\n      style: {\n        marginTop: \"20vh\",\n      },\n      width: 480,\n      onOk() {\n        let mac = _.join(_.map(checkHardwareList, \"mac\"), \"/\");\n        let newData = {\n          name: _.isEmpty(saveName) ? \"CompositeScale\" : saveName,\n          mac: mac,\n          deviceType: \"biggie\",\n          examRoom: \"\",\n        };\n        let newHardwareList = hardwareList;\n        newHardwareList[1].devices.push({ ...newData });\n        selectHardwareList(newHardwareList);\n        selectHardwareInfoFun(newData);\n        setMenuNum(\"1\");\n      },\n    });\n  };\n\n  useEffect(() => {\n    let newData = [];\n    _.forIn(_.find(hardwareList, [\"type\", \"biggie\"]).devices, (item) => {\n      if (item.mac.indexOf(\"/\") === -1) {\n        newData.push(item);\n      }\n    });\n    setBiggieList(newData);\n    return () => { };\n  }, []);\n\n  return (\n    <>\n      <Layout className=\"mergePage\">\n        <Header className=\"mergeHeaderBox\">\n          <span className=\"headerTitle\">\n            {confirmType ? \"Scales Combined As One\" : \"Combine Scales\"}\n          </span>\n        </Header>\n        <Content className=\"combineContentBox\">\n          <div>\n            <div className=\"tipTitleBox\">\n              {!confirmType ? (\n                <span>\n                  Select the scales you'd\n                  <br />\n                  like to combine\n                </span>\n              ) : (\n                <span>\n                  These two scales are now combined.\n                  <br />\n                  Please give this combination a name\n                </span>\n              )}\n            </div>\n            {confirmType ? (\n              <div className=\"asOneCardBox\">\n                <Space>\n                  {_.map(checkHardwareList, (item, index) => {\n                    return (\n                      <Card className=\"asOneCard\">\n                        <Meta\n                          avatar={<Avatar src={scaleImage} size={53} />}\n                          description={\n                            <div style={{ display: \"grid\" }}>\n                              <span>Device Name:{item.name}</span>\n                              <span>\n                                {item.deviceType === \"biggie\"\n                                  ? \"Biggie Pro Scale\"\n                                  : \"Biggie Home Scale\"}\n                              </span>\n                              <span>SN:{item.mac}</span>\n                            </div>\n                          }\n                        />\n                      </Card>\n                    );\n                  })}\n                </Space>\n                <div className=\"acOneImageBox\">\n                  <img src={combinedscales} />\n                </div>\n              </div>\n            ) : (\n              <div className=\"selectScalesBox\">\n                <div>\n                  {_.map(biggieList, (item, index) => {\n                    return (\n                      <Card\n                        className=\"cardBox\"\n                        hoverable\n                        onClick={() => onClick(`${index}`, item)}\n                        id={`${index}`}\n                        key={index}\n                      >\n                        <div className=\"cardBodyBox\">\n                          <Meta\n                            avatar={<Avatar src={scaleImage} size={53} />}\n                            description={\n                              <div style={{ display: \"grid\" }}>\n                                <span>Device Name:{item.name}</span>\n                                <span>\n                                  {item.deviceType === \"biggie\"\n                                    ? \"Biggie Pro Scale\"\n                                    : \"Biggie Home Scale\"}\n                                </span>\n                                <span>SN:{item.mac}</span>\n                              </div>\n                            }\n                          />\n                          <CheckCircleFilled\n                            id={`${\"icon\" + index}`}\n                            style={{\n                              color: \"#5cbbe0\",\n                              fontSize: \"20px\",\n                              display: \"none\",\n                            }}\n                          />\n                        </div>\n                      </Card>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {confirmType ? (\n              <>\n                <div className=\"inputBox\">\n                  <Input\n                    placeholder=\"Combined Scale Name\"\n                    className=\"inputName\"\n                    maxLength={25}\n                    onChange={saveChangeName}\n                  />\n                </div>\n                <div className=\"scalesBtnBox\">\n                  <Button\n                    type=\"primary\"\n                    className=\"scalesBtn\"\n                    shape=\"round\"\n                    onClick={() => startMeasuring()}\n                  >\n                    Save & Start Measuring\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <Space className=\"scalesBtnBox\">\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => setMenuNum(\"AddDevice\")}\n                >\n                  Add New Scale\n                </Button>\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => onChangeScales()}\n                >\n                  Combine Scales\n                </Button>\n              </Space>\n            )}\n          </div>\n        </Content>\n      </Layout>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n    userMessage: state.userReduce,\n  }),\n  {\n    setMenuNum,\n    selectHardwareInfoFun,\n    selectHardwareList,\n  }\n)(CombineScales);\n",["537","538"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\App.js",["564"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\doctorAddPet\\index.jsx",["565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx",[],["585","586"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\pet.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js",[],["587","588"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx",["589"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { px } from '../../utils/px';\r\nimport PetTable from '../../components/petTable';\r\nimport { petDetailInfoFun, setMenuNum, setPetListArrFun } from '../../store/actions';\r\nimport moment from 'moment'\r\nimport './index.less';\r\nimport { listAllPetInfo } from '../../api';\r\n\r\nlet storage = window.localStorage;\r\nconst AllPet = ({ bodyHeight, petDetailInfoFun, setMenuNum, setPetListArrFun }) => {\r\n\r\n    //初始化获取宠物列表数据\r\n    const [petListArr, setPetListArr] = useState([])\r\n    //定义宠物列表是否加载中\r\n    const [loading, setLoading] = useState(true)\r\n    const [spin, setSpin] = useState(false)\r\n    const _getExam = async () => {\r\n        console.log('进来了');\r\n        let params = {\r\n            doctorId: storage.userId,\r\n            offset: 0,\r\n            size: 100,\r\n        }\r\n        if (storage.lastWorkplaceId) {\r\n            params.workplaceId = storage.lastWorkplaceId\r\n        }\r\n        if (storage.lastOrganization) {\r\n            params.organizationId = storage.lastOrganization\r\n        }\r\n        console.log('查询宠物的入参', params);\r\n        const isUnKnow = (val) => {\r\n            if (val) {\r\n                return val\r\n            } else {\r\n                return 'unknown'\r\n            }\r\n        }\r\n        setLoading(true)\r\n        listAllPetInfo(params)\r\n            .then(res => {\r\n                console.log('查询到的宠物列表,/user/listAllPetInfo', res);\r\n                if (res.flag === true && res.data) {\r\n                    let data = []\r\n                    let oldList = res.data\r\n                    setPetListArrFun(oldList)\r\n                    // let oldList = res.data.list\r\n                    for (let i = 0; i < oldList.length; i++) {\r\n                        let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\r\n                            h2tLength, torsoLength } = oldList[i]\r\n                        let owner = ''\r\n                        patientId = isUnKnow(patientId)\r\n                        petName = isUnKnow(petName)\r\n                        breedName = isUnKnow(breedName)\r\n                        age = isUnKnow(age)\r\n                        weight = isUnKnow(weight)\r\n                        if (!firstName) {\r\n                            firstName = ''\r\n                        }\r\n                        if (!lastName) {\r\n                            lastName = ''\r\n                        }\r\n                        if (lastName === '' && firstName === '') {\r\n                            owner = 'unknown'\r\n                        } else {\r\n                            owner = `${lastName} ${firstName}`\r\n                        }\r\n                        createTime = moment(createTime).format('X')\r\n                        let petGender = ''\r\n                        switch (`${gender}`) {\r\n                            case '1': petGender = 'F'\r\n\r\n                                break;\r\n                            case '0': petGender = \"M\"\r\n                                break;\r\n                            default: petGender = 'unknown'\r\n                                break;\r\n                        }\r\n                        let petAge = 'unknown'\r\n                        if (birthday) {\r\n                            petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n                        }\r\n\r\n                        let json = {\r\n                            insertedAt: createTime,\r\n                            patientId,\r\n                            petName,\r\n                            owner,\r\n                            breed: breedName,\r\n                            gender: petGender,\r\n                            age: petAge,\r\n                            petId,\r\n                            id: i,\r\n                            weight,\r\n                            rfid,\r\n                            url,\r\n                            speciesId,\r\n                            l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n                            h2tLength, torsoLength,\r\n                            pethubId, macId,\r\n\r\n                        }\r\n                        data.push(json)\r\n\r\n                    }\r\n                    data.sort((a, b) => {\r\n                        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n                    })\r\n                    console.log('列表的数据：', data);\r\n                    setPetListArr(data)\r\n                    setLoading(false)\r\n                    setSpin(false)\r\n                } else {\r\n                    setLoading(false)\r\n                    setSpin(false)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                setSpin(false)\r\n            })\r\n\r\n\r\n\r\n    }\r\n    const _refresh = () => {\r\n        setSpin(true)\r\n        _getExam()\r\n    }\r\n\r\n    useEffect(() => {\r\n        //获取宠物列表\r\n        _getExam()\r\n    }, [])\r\n\r\n    return (\r\n        <div id='allPets' style={{ height: bodyHeight }}>\r\n            <div className=\"allPetHeard\">\r\n                <div className=\"addDeviceTitle flex\" style={{ fontSize: 26, paddingLeft: px(20) }}>\r\n                    <div className=\"title\">Client Results</div>\r\n                    <div className=\"refresh flex\"\r\n                        style={{ fontSize: px(25), marginLeft: px(10) }}\r\n                    >\r\n                        <SyncOutlined onClick={_refresh} spin={spin} />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"walkBtn1\" style={{ marginRight: px(80) }}>\r\n                    <div\r\n                        className=\"walkbtnBox\"\r\n                        style={{ height: px(40), width: px(200) }}\r\n                        onClick={() => {\r\n                            let json = {\r\n                                isWalkIn: true,\r\n                                petId: null,\r\n                                petName: null,\r\n                                owner: null,\r\n                                breed: null,\r\n\r\n                            }\r\n                            petDetailInfoFun(json)\r\n                            setMenuNum(\"1\")\r\n                        }}\r\n                    >\r\n                        <div className=\"walkText\">Walk-In</div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <PetTable\r\n                bodyHeight={bodyHeight - px(100)}\r\n                petListArr={petListArr}\r\n                loading={loading}\r\n                resetPetList={(val) => setPetListArr(val)}\r\n\r\n            />\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nAllPet.propTypes = {\r\n}\r\n//默认值\r\nAllPet.defaultProps = {\r\n    bodyHeight: 0,\r\n}\r\nexport default connect(\r\n    state => ({\r\n\r\n    }),\r\n    { petDetailInfoFun, setMenuNum, setPetListArrFun }\r\n)(AllPet)\r\n",["590","591"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\UnassignModal\\UnassignModal.jsx",["592","593","594","595","596","597","598","599","600","601"],"import React, { Component } from 'react'\r\nimport { Table, Popconfirm, Modal, Input, message, Select, Spin } from \"antd\";\r\nimport './unassignModal.less'\r\nimport Draggable from \"react-draggable\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  getPetExamByDoctorId,\r\n  selectBreedBySpeciesId,\r\n  checkPatientId,\r\n  addDeskPet,\r\n  addAndSavePetExam,\r\n  deletePetExamByExamId,\r\n  listAllPetInfo\r\n} from './../../api';\r\n\r\nimport Close from \"./../../assets/img/close.png\";\r\n\r\nimport UploadImg from \"./../../utils/uploadImg/UploadImg\";\r\nimport { mTop, px, MTop } from \"../../utils/px\";\r\nimport electronStore from \"../../utils/electronStore\";\r\nimport MyModal from \"../../utils/myModal/MyModal\";\r\nimport Button from \"./../../utils/button/Button\";\r\n\r\nimport moment from \"moment\";\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nexport default class UnassignModal extends Component {\r\n  state = {\r\n    historyData: [], //列表的数据集合\r\n    units: \"℉\",\r\n    searchText: \"\", //搜索测试记录框输入的内容\r\n    serchExamData: [], //搜索到的测量记录\r\n    seleceEmergencies: {}, //分配的这条记录里的所有内容，比如温度、id、时间等\r\n    visible: false, //nodel框是否显示\r\n    imgId: -1, //上传后返回的图像id号\r\n\r\n    assignPatientId: \"\",\r\n    assignPetName: \"\",\r\n    assignOwnerName: \"\",\r\n    assignBreed: \"\",\r\n    assignBreedId: \"\",\r\n    assignPetAge: \"\",\r\n    assignPetWeight: \"\",\r\n    assignPetId: \"\",\r\n    assignPetImgUrl: \"\",\r\n    inputDisabled: false,\r\n    breedArr: [], //猫、狗品种集合\r\n    loading: false,\r\n    disabled: true, //model是否可拖拽\r\n    search: \"\", //分配宠物搜索框\r\n    petListData: [],\r\n    searchPetList: [],\r\n    assignVisible: false, //点击assign按钮后跳出的选择宠物的弹框\r\n    selectPetId: \"\",\r\n    modalLoading: false,//控制弹窗加载\r\n    workplaceId: storage.lastWorkplaceId,\r\n    loadingPets: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.props.assignVisible) {\r\n      this.setState({\r\n        assignVisible: this.props.assignVisible\r\n      })\r\n    }\r\n\r\n    let getBreed = electronStore.get(\"getBreed\");\r\n    if (getBreed) {\r\n      this.setState({\r\n        breedArr: getBreed,\r\n      });\r\n    }\r\n\r\n\r\n    const timer = setTimeout(() => {\r\n      this._getBreed();\r\n      clearTimeout(timer);\r\n    }, 3000);\r\n    this.gerAllPetMsg();\r\n\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log('prevProps', prevProps, prevState);\r\n    if (this.props.assignVisible !== this.state.assignVisible) {\r\n      this.setState({\r\n        assignVisible: this.props.assignVisible\r\n      })\r\n    }\r\n    if (this.props.lastWorkplaceId !== this.state.workplaceId) {\r\n      this.setState({\r\n        petListData: [],\r\n        workplaceId: this.props.lastWorkplaceId\r\n      })\r\n\r\n      this.gerAllPetMsg();\r\n\r\n    }\r\n    if (this.props.seleceEmergencies !== this.state.seleceEmergencies) {\r\n      this.setState({\r\n        seleceEmergencies: this.props.seleceEmergencies\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  //获取通过walk-In测量的信息，通过判断获取的数据中petId是否为空来展示数据\r\n  _getEmergencyHistory = () => {\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate(data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = [];\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    getPetExamByDoctorId(storage.userId)\r\n      .then((res) => {\r\n        console.log(\"---res\", res);\r\n        if (res.flag === true) {\r\n          let datas = res.data;\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let {\r\n                petId,\r\n                examId,\r\n                userId,\r\n                petVitalTypeId,\r\n                temperature,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                memo,\r\n                clinicalDatagroupId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                createTime,\r\n                clinicalDataEntity,\r\n              } = datas[i];\r\n              let day = moment().diff(moment(createTime), \"day\");\r\n              // console.log(day);\r\n              if (day > 3) {\r\n                continue;\r\n              }\r\n\r\n              let Tem = temperature;\r\n              try {\r\n                if (clinicalDataEntity) {\r\n                  Tem = temperature || clinicalDataEntity.data0;\r\n                }\r\n              } catch (error) {\r\n                console.log(\"抛出的异常\", error);\r\n              }\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format(\"MMM DD\"),\r\n                time: moment(createTime).format(\"hh:mm A\"),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                petId,\r\n                userId,\r\n                day,\r\n              };\r\n\r\n              historys.push(str);\r\n            }\r\n          }\r\n          //把所有数据拿完后做个排序\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log(\"historyData:\", historyData);\r\n          this.setState({\r\n            historyData,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  //获取宠物类别\r\n  _getBreed = () => {\r\n    selectBreedBySpeciesId({ speciesId: 1 })\r\n      .then((res) => {\r\n        if (res.code === 0) {\r\n          let arr = [];\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n              speciesId: 1,\r\n            };\r\n\r\n            arr.push(data);\r\n          });\r\n          selectBreedBySpeciesId({ speciesId: 2 })\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                res.petlist.map((item, index) => {\r\n                  let data = {\r\n                    petSpeciesBreedId: item.petSpeciesBreedId,\r\n                    breedName: item.breedName,\r\n                    speciesId: 2,\r\n                  };\r\n                  arr.push(data);\r\n                });\r\n\r\n                console.log(\"----品种集合：\", arr);\r\n                electronStore.set(\"getBreed\", arr);\r\n                this.setState({\r\n                  breedArr: arr,\r\n                });\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  //获取所有宠物详情信息\r\n  gerAllPetMsg = () => {\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n    console.log('获取列表');\r\n    this.setState({\r\n      loadingPets: true,\r\n    })\r\n    listAllPetInfo(params)\r\n      .then((res) => {\r\n        console.log('res33: ', res);\r\n        this.setState({\r\n          loadingPets: false,\r\n        })\r\n        if (res.flag === true && res.data) {\r\n          this.setState({\r\n            petListData: res.data,\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loadingPets: false,\r\n        })\r\n        console.log(err);\r\n      })\r\n  }\r\n  _search = (value = \"\") => {\r\n    let list = this.state.historyData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let note = list[i].note ? list[i].note.toLowerCase() : \"\";\r\n      if (`${note}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      serchExamData: searchData,\r\n    });\r\n  };\r\n  _searchPet = (value = \"\") => {\r\n    let list = this.state.petListData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let name = list[i].petName ? list[i].petName.toLowerCase() : \"\";\r\n      let rfid = list[i].rfid ? list[i].rfid.toLowerCase() : \"\";\r\n      let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : \"\";\r\n\r\n      if (\r\n        `${name}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${rfid}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n      ) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchPetList: searchData,\r\n    });\r\n  };\r\n  draggleRef = React.createRef();\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n    });\r\n  };\r\n  //新增宠物取消新增事件\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignVisible: true,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      imgId: -1,\r\n    });\r\n  };\r\n  //新增宠物弹窗关闭事件\r\n  closeHandleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      search: '',\r\n      selectPetId: '',\r\n      imgId: -1,\r\n    });\r\n  }\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n      },\r\n    });\r\n  };\r\n  _select = (value, data) => {\r\n    console.log(value, data); //value的值为id\r\n    this.setState({\r\n      assignBreedId: value,\r\n      assignBreed: data.children,\r\n    });\r\n  };\r\n  _modal = () => {\r\n    let that = this;\r\n    function getPetInfoByPatientId() {\r\n      switch (storage.identity) {\r\n        case \"1\":\r\n          console.log(\"我是vetspire查找\");\r\n          break;\r\n        case \"2\":\r\n          console.log(\"我是ezyVet查找\");\r\n          let params = {\r\n            animalId: that.state.assignPatientId,\r\n            organizationId: 4,\r\n          };\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach((key) =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url =\r\n            \"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId\";\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              authorization: `Bearer ${storage.ezyVetToken}`,\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n              console.log(\"res\", res);\r\n              this.setState({\r\n                spin: false,\r\n              });\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data;\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? 1 : -1;\r\n                  });\r\n                }\r\n                console.log(petArr);\r\n\r\n                let { petId } = petArr;\r\n                // assign(petId)\r\n              } else {\r\n                //没有宠物\r\n                message.error(\"There are no pets under this patientID\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error(\"There are no pets under this patientID\");\r\n            });\r\n\r\n          break;\r\n        case \"3\":\r\n          console.log(\"我是一般医生查找\");\r\n          let datas = {\r\n            patientId: that.state.assignPatientId,\r\n            doctorId: storage.userId\r\n          }\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId\r\n          }\r\n          if (storage.lastOrganization) {\r\n            datas.organizationId = storage.lastOrganization\r\n          }\r\n          checkPatientId(datas)\r\n            .then((res) => {\r\n              if (res.flag === true) {\r\n                that.setState({\r\n                  assignPetId: that.state.assignPatientId,\r\n                });\r\n                message.success(\"This patientID will work\");\r\n              } else {\r\n                that.setState({\r\n                  assignPetId: '',\r\n                });\r\n                message.error(\"The patientID already exists\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              that.setState({\r\n                inputDisabled: false,\r\n                assignPetName: \"\",\r\n                assignOwnerName: \"\",\r\n                assignBreed: \"\",\r\n                assignBreedId: \"\",\r\n                assignPetAge: \"\",\r\n                assignPetWeight: \"\",\r\n                assignPetId: \"\",\r\n                assignPetImgUrl: \"\",\r\n              });\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    //将测量信息给分配宠物\r\n    const assignPet = () => {\r\n      let petMsg = {\r\n        petName: this.state.assignPetName,\r\n        age: this.state.assignPetAge,\r\n        petSpeciesBreedId: this.state.assignBreedId,\r\n        owner: this.state.assignOwnerName,\r\n        doctorId: storage.userId\r\n      }\r\n      if (this.state.imgId !== -1 && this.state.imgId) {\r\n        petMsg.imageId = this.state.imgId\r\n      }\r\n      if (this.state.assignPetWeight) {\r\n        petMsg.weight = parseFloat(this.state.assignPetWeight).toFixed(2)\r\n      }\r\n      if (storage.lastWorkplaceId) {\r\n        petMsg.workplaceId = storage.lastWorkplaceId\r\n      }\r\n      if (storage.lastOrganization) {\r\n        petMsg.organizationId = storage.lastOrganization\r\n      }\r\n      this.setState({\r\n        modalLoading: true,\r\n      })\r\n\r\n      addDeskPet(this.state.assignPatientId, petMsg)\r\n        .then((res) => {\r\n          if (res.flag === true) {\r\n            let parmes = {\r\n              petId: res.data.petId,\r\n              clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId,\r\n            };\r\n\r\n            addAndSavePetExam(that.state.seleceEmergencies.historyId, parmes)\r\n              .then((res) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                if (res.flag === true) {\r\n                  message.success(\"Assigned successfully\");\r\n                  this.props.success(true)\r\n\r\n                  that.setState({\r\n                    visible: false,\r\n                    assignPatientId: \"\",\r\n                    assignPetName: \"\",\r\n                    assignOwnerName: \"\",\r\n                    assignBreed: \"\",\r\n                    assignBreedId: \"\",\r\n                    assignPetAge: \"\",\r\n                    assignPetWeight: \"\",\r\n                    assignPetId: \"\",\r\n                    assignPetImgUrl: \"\",\r\n                    imgId: -1,\r\n                  });\r\n                } else {\r\n                  message.error(\"Assignment failed\");\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                console.log(err);\r\n                message.error(\"Assignment failed\");\r\n              });\r\n          } else {\r\n            this.setState({\r\n              modalLoading: false,\r\n            })\r\n            message.error('Failed to create a pet')\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            modalLoading: false,\r\n          })\r\n          console.log('err: ', err);\r\n          message.error('Failed to create a pet')\r\n        })\r\n    };\r\n    let { disabled, bounds, visible } = this.state;\r\n    let options = this.state.breedArr.map((d) => (\r\n      <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>\r\n    ));\r\n    return (\r\n\r\n      <Modal\r\n        maskClosable={false}\r\n        wrapClassName={\"web\"} //对话框外部的类名，主要是用来修改这个modal的样式的\r\n        destroyOnClose={true}\r\n        title={\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              cursor: \"move\",\r\n              height: \"30px\",\r\n              textAlign: \"center\",\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          ></div>\r\n        }\r\n        visible={visible}\r\n        onOk={this.handleOk}\r\n        onCancel={this.closeHandleCancel}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\r\n      >\r\n        <Spin spinning={this.state.modalLoading}>\r\n          <div id=\"unassignedModal\">\r\n            <div className=\"title\">\r\n              Assign <br />\r\n              Measurement to\r\n            </div>\r\n\r\n            <div className=\"addPhoto\">\r\n              <UploadImg\r\n                getImg={(val) => {\r\n                  this.setState({\r\n                    imgId: val.imageId,\r\n                  });\r\n                }}\r\n                imgUrl={this.state.assignPetImgUrl}\r\n                disable={this.state.inputDisabled}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Patient ID:</p>\r\n              <Input\r\n                value={this.state.assignPatientId}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPatientId: item.target.value,\r\n                  });\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.keyCode === 13) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                  if (e.keyCode === 27) {\r\n                    this.setState({\r\n                      assignPatientId: \"\",\r\n                    });\r\n                  }\r\n                }}\r\n                onBlur={() => {\r\n                  if (this.state.assignPatientId.length > 0) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Pet Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Owner Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignOwnerName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignOwnerName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Breed:</p>\r\n              <div className=\"infoInput\">\r\n                <Select\r\n                  disabled={this.state.inputDisabled}\r\n                  showSearch\r\n                  style={{ width: \"100%\" }}\r\n                  bordered={false}\r\n                  value={this.state.assignBreed}\r\n                  placeholder=\"Search to Select\"\r\n                  optionFilterProp=\"children\"\r\n                  listHeight={256}\r\n                  onSelect={(value, data) => this._select(value, data)}\r\n                  filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                    0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  {options}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Age:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetAge}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetAge: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Weight:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetWeight}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetWeight: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <div className=\"unit\">{`kg`}</div>\r\n            </div>\r\n\r\n            <div className=\"btnF\">\r\n              <div className=\"btn\" onClick={this.handleCancel}>\r\n                Cancel\r\n              </div>\r\n              <div\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  if (this.state.assignPatientId === '') {\r\n                    message.error('patientID can not be empty!');\r\n                  } else if (this.state.assignPetId === '') {\r\n                    message.error(\"The patientID already exists\");\r\n                  } else if (this.state.assignPatientId !== '' && this.state.assignPetId !== '') {\r\n                    assignPet();\r\n                  }\r\n                }}\r\n              >\r\n                Apportion\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    );\r\n  };\r\n  //获取当前组织所有宠物信息\r\n  _list = () => {\r\n    const { search, petListData, searchPetList } = this.state;\r\n    let data = search.length > 0 ? searchPetList : petListData;\r\n    let option = data.map((item, index) => {\r\n      let male = item.gender === 0 ? \"Female\" : \"Male\";\r\n      return (\r\n        <li\r\n          key={item.petId}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectPetId: item.petId,\r\n            });\r\n          }}\r\n        >\r\n          <div className=\"item\">\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {item.petName ? item.petName : 'unknown'}\r\n            </span>\r\n            <span\r\n              className=\"petName\"\r\n              style={{ margin: `${px(5)}px 0` }}\r\n            >{`,${item.age} yrs,`}</span>\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {male}\r\n            </span>\r\n          </div>\r\n          {this.state.selectPetId === item.petId ? (\r\n            <span className=\"search\">&#xe614;</span>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    });\r\n    return <ul>{option}</ul>;\r\n  };\r\n\r\n  render() {\r\n    let { loading, disabled, historyData, searchText, serchExamData } =\r\n      this.state;\r\n    const _del = (key, record) => {\r\n      deletePetExamByExamId(key, '')\r\n        .then(\r\n          (res) => {\r\n            if (res.flag === true) {\r\n              console.log(\"删除成功\");\r\n              const historyData = [...this.state.historyData];\r\n              console.log(historyData);\r\n              this.setState({\r\n                historyData: historyData.filter((item) => item.historyId !== key),\r\n              });\r\n            } else {\r\n              console.log(\"删除失败\");\r\n            }\r\n          }\r\n        );\r\n    };\r\n\r\n    let tableData = searchText.length > 0 ? serchExamData : historyData;\r\n\r\n    return (\r\n      <div id='unassignedModal111'>\r\n        {\r\n          this.state.assignVisible && (\r\n            <MyModal\r\n              visible={this.state.assignVisible}\r\n              element={\r\n                <div className=\"myfindOrg\">\r\n                  <div className=\"orgHeard\">\r\n                    <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                      <div\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            assignVisible: false,\r\n                            search: '',\r\n                            selectPetId: '',\r\n                          });\r\n                          this.props.onChangeVisible(false)\r\n                        }}\r\n                      >\r\n                        <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"text\"\r\n                      onMouseOver={() => {\r\n                        if (disabled) {\r\n                          this.setState({\r\n                            disabled: false,\r\n                          });\r\n                        }\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        this.setState({\r\n                          disabled: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      Assign Measurement\r\n                    </div>\r\n                    <div className=\"searchBox\">\r\n                      <Input\r\n                        placeholder=\" &#xe61b; Search Pet\"\r\n                        bordered={false}\r\n                        allowClear={true}\r\n                        value={this.state.search}\r\n                        onChange={(item) => {\r\n                          this.setState({\r\n                            search: item.target.value,\r\n                          });\r\n                          this._searchPet(item.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"list\">{this.state.loadingPets ?\r\n                    <div style={{ display: 'flex', width: '100%', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n                      <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                        <LoadingOutlined style={{ fontSize: 30, color: '#000', marginTop: mTop(-30), }} />\r\n                      </div>\r\n                      <p style={{ color: '#000' }}>\r\n                        {'loading...'}\r\n                      </p>\r\n                    </div> :\r\n                    this._list()}</div>\r\n                  <div className=\"foot\">\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          assignVisible: false,\r\n                          visible: true,\r\n                        });\r\n                        this.props.onChangeVisible(false)\r\n                      }}\r\n                    >\r\n                      <p>+Add New Pet</p>\r\n                    </div>\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        if (!this.state.selectPetId) {\r\n                          message.error(\"Please select a pet to assign\");\r\n                        } else {\r\n                          let { selectPetId, seleceEmergencies, historyData } =\r\n                            this.state;\r\n                          let parmes = {\r\n                            petId: selectPetId,\r\n                            clinicalDatagroupId:\r\n                              seleceEmergencies.clinicalDatagroupId,\r\n                          };\r\n                          console.log(\"分配的数据信息\", parmes);\r\n\r\n                          addAndSavePetExam(seleceEmergencies.historyId, parmes)\r\n                            .then((res) => {\r\n                              console.log(\"----------\", res);\r\n                              if (res.flag === true) {\r\n                                console.log(\"分配成功\");\r\n                                message.success(\"Assigned successfully\");\r\n                                this.props.success(true)\r\n\r\n                                this.setState({\r\n                                  assignVisible: false,\r\n                                });\r\n                                this.props.onChangeVisible(false)\r\n                              } else {\r\n                                message.error(\"Assignment failed\");\r\n                              }\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                              message.error(\"Assignment failed\");\r\n                            });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <p>Confirm</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                // </Spin>\r\n              }\r\n            />\r\n          )\r\n        }\r\n        {this._modal()}\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx",["602","603","604","605","606","607","608","609","610","611","612"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Button, Progress, Layout, Carousel } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport Animation_1 from \"./../../../assets/img/Animation_1.png\";\nimport Animation_2 from \"./../../../assets/img/Animation_2.png\";\nimport Animation_3 from \"./../../../assets/img/Animation_3.png\";\n// import HeaderItem from './headerItem';\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../../store/actions\";\nimport _ from \"lodash\";\nimport \"./measurement.less\";\nimport { px } from \"../../../utils/px\";\nimport electronStore from \"../../../utils/electronStore\";\n\nlet storage = window.localStorage;\nconst { Content, Header } = Layout;\n\nconst Measurement = ({ petMessage, hardwareMessage }) => {\n  let { mellaMeasureValue, mellaMeasurePart } = hardwareMessage;\n  const [percent, setPercent] = useState(0);\n  const [value, setValue] = useState(0);\n  const [timers, setTimers] = useState(0);\n  const [isHua, setIsHua] = useState(true);\n  const saveCallBack = useRef();\n  const callBack = () => {\n    const random = 1;\n    setValue(value + random);\n    setTimers(timers + random);\n  };\n\n  //圆滑里面的文字\n  const ProgressTitle = (percent) => {\n    let num = parseFloat(percent);\n    if (isHua) {\n      num = (num * 1.8 + 32).toFixed(1);\n    }\n    return (\n      <>\n        {mellaMeasurePart !== \"耳温\" ? (\n          <p className=\"ProgressTitle\">\n            {num}\n            <span className=\"symbol\">{`${isHua ? \"℉\" : \"℃\"}`}</span>\n          </p>\n        ) : (\n          <></>\n        )}\n        <p className=\"ProgressTitle\">Measuring</p>\n      </>\n    );\n  };\n  //图片切换\n  const checkImage = () => {\n    switch (timers) {\n      case 0:\n        return <img src={Animation_1} />;\n      case 1:\n        return <img src={Animation_2} />;\n      case 2:\n        return <img src={Animation_3} />;\n      case 3:\n        return <img src={Animation_3} />;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (timers > 2) {\n      setTimers(0);\n    }\n    return () => { };\n  });\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    const timer = setInterval(tick, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  useEffect(() => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (hardSet) {\n      let { isHua } = hardSet;\n      setIsHua(isHua);\n    }\n  }, []);\n\n  return (\n    <>\n      {/* <HeaderItem /> */}\n      <Content className={\"measureContentBox\"}>\n        <div style={{ marginTop: px(33) }}>\n          <Progress\n            type=\"dashboard\"\n            percent={_.round(mellaMeasureValue, 1)}\n            gapDegree={30}\n            // width={px(260)}\n            strokeWidth={\"8\"}\n            format={(percent) => ProgressTitle(percent)}\n            strokeColor={'#4C595E'}\n            className='measuringProgress'\n          />\n        </div>\n\n        {checkImage()}\n      </Content>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(Measurement);\n",["613","614"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js",["615","616"],"\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { px, mTop } from './../px'\r\nimport './mouseDiv.less'\r\n\r\n/**\r\n * \r\n * @param {string} minHeight 最小化、最大化方块的宽高 \r\n * @param {number} imgWidth 最小化、最大化图片的高度 \r\n * @returns  封装了最小化和关闭按钮，有鼠标移入、移出的动画\r\n */\r\nconst MinClose = ({ minHeight, beforeDiv, afterDiv, divClick }) => {\r\n  const [minbgc, setMinbgc] = useState('')\r\n  const [rMin, setRMin] = useState(beforeDiv)\r\n\r\n  const minMouseEnter = () => {\r\n    setMinbgc('rgba(70, 70, 70, 0.5)')\r\n    setRMin(afterDiv)\r\n  }\r\n  const minMouseLeave = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n  }\r\n  const minClock = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n    divClick()\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div id='mouseDiv'>\r\n      <div\r\n        className='min_icon'\r\n        onClick={minClock}\r\n        style={{ backgroundColor: minbgc, height: minHeight, width: minHeight }}\r\n        onMouseEnter={minMouseEnter}\r\n        onMouseLeave={minMouseLeave}\r\n      >\r\n        {rMin}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nMinClose.propTypes = {\r\n  minHeight: PropTypes.string,\r\n  imgWidth: PropTypes.number,\r\n  divClick: PropTypes.func,\r\n  afterDiv: PropTypes.func,\r\n  beforeDiv: PropTypes.func,\r\n\r\n\r\n}\r\nMinClose.defaultProps = {\r\n  minHeight: '40px',\r\n  imgWidth: px(20)\r\n\r\n}\r\n\r\nexport default MinClose",["617","618"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\unassigned\\index.jsx",["619","620","621","622","623"],"import React, { Component } from \"react\";\r\nimport { Table, Popconfirm, Modal, Input, message, Select, Spin } from \"antd\";\r\n\r\nimport Heard from \"./../../utils/heard/Heard\";\r\nimport del from \"./../../assets/images/del.png\";\r\nimport Close from \"./../../assets/img/close.png\";\r\nimport UploadImg from \"./../../utils/uploadImg/UploadImg\";\r\nimport { px, MTop } from \"./../../utils/px\";\r\nimport electronStore from \"./../../utils/electronStore\";\r\nimport MyModal from \"./../../utils/myModal/MyModal\";\r\n\r\nimport moment from \"moment\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport \"./index.less\";\r\nimport {\r\n  getPetExamByDoctorId, selectBreedBySpeciesId, listAllPetInfo, checkPatientId, addDeskPet, addAndSavePetExam, deletePetExamByExamId\r\n} from './../../api'\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\n\r\nexport default class Unassigned extends Component {\r\n  state = {\r\n    historyData: [], //列表的数据集合\r\n    units: \"℉\",\r\n    searchText: \"\", //搜索测试记录框输入的内容\r\n    serchExamData: [], //搜索到的测量记录\r\n    seleceEmergencies: {}, //分配的这条记录里的所有内容，比如温度、id、时间等\r\n    visible: false, //nodel框是否显示\r\n    imgId: -1, //上传后返回的图像id号\r\n\r\n    assignPatientId: \"\",\r\n    assignPetName: \"\",\r\n    assignOwnerName: \"\",\r\n    assignBreed: \"\",\r\n    assignBreedId: \"\",\r\n    assignPetAge: \"\",\r\n    assignPetWeight: \"\",\r\n    assignPetId: \"\",\r\n    assignPetImgUrl: \"\",\r\n    inputDisabled: false,\r\n    breedArr: [], //猫、狗品种集合\r\n    loading: false,\r\n    disabled: true, //model是否可拖拽\r\n    search: \"\", //分配宠物搜索框\r\n    petListData: [],\r\n    searchPetList: [],\r\n    assignVisible: false, //点击assign按钮后跳出的选择宠物的弹框\r\n    selectPetId: \"\",\r\n    modalLoading: false,//控制弹窗加载\r\n  };\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"big\");\r\n    let getBreed = electronStore.get(\"getBreed\");\r\n    if (getBreed) {\r\n      this.setState({\r\n        breedArr: getBreed,\r\n      });\r\n    }\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n    this._getEmergencyHistory();\r\n    const timer = setTimeout(() => {\r\n      this._getBreed();\r\n      clearTimeout(timer);\r\n    }, 3000);\r\n    this.gerAllPetMsg();\r\n    // let list = electronStore.get(\"doctorExam\");\r\n    // this.setState({\r\n    //   petListData: list || [],\r\n    // });\r\n  }\r\n  componentWillUnmount() {\r\n    message.destroy();\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    this.setState({});\r\n  };\r\n  //获取通过walk-In测量的信息，通过判断获取的数据中petId是否为空来展示数据\r\n  _getEmergencyHistory = () => {\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate(data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = [];\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    getPetExamByDoctorId(storage.userId)\r\n      .then((res) => {\r\n        console.log(\"---res\", res);\r\n        if (res.flag === true) {\r\n          let datas = res.data;\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let {\r\n                petId,\r\n                examId,\r\n                userId,\r\n                petVitalTypeId,\r\n                temperature,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                memo,\r\n                clinicalDatagroupId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                createTime,\r\n                clinicalDataEntity,\r\n              } = datas[i];\r\n              let day = moment().diff(moment(createTime), \"day\");\r\n              // console.log(day);\r\n              if (day > 3) {\r\n                continue;\r\n              }\r\n\r\n              let Tem = temperature;\r\n              try {\r\n                if (clinicalDataEntity) {\r\n                  Tem = temperature || clinicalDataEntity.data0;\r\n                }\r\n              } catch (error) {\r\n                console.log(\"抛出的异常\", error);\r\n              }\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format(\"MMM DD\"),\r\n                time: moment(createTime).format(\"hh:mm A\"),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                petId,\r\n                userId,\r\n                day,\r\n              };\r\n\r\n              historys.push(str);\r\n            }\r\n          }\r\n          //把所有数据拿完后做个排序\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log(\"historyData:\", historyData);\r\n          this.setState({\r\n            historyData,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  //获取宠物类别\r\n  _getBreed = () => {\r\n    selectBreedBySpeciesId({ speciesId: 1 })\r\n      .then((res) => {\r\n        if (res.code === 0) {\r\n          let arr = [];\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n              speciesId: 1,\r\n            };\r\n\r\n            arr.push(data);\r\n          });\r\n\r\n          selectBreedBySpeciesId({ speciesId: 2 })\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                res.petlist.map((item, index) => {\r\n                  let data = {\r\n                    petSpeciesBreedId: item.petSpeciesBreedId,\r\n                    breedName: item.breedName,\r\n                    speciesId: 2,\r\n                  };\r\n                  arr.push(data);\r\n                });\r\n\r\n                console.log(\"----品种集合：\", arr);\r\n                electronStore.set(\"getBreed\", arr);\r\n                this.setState({\r\n                  breedArr: arr,\r\n                });\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  //获取所有宠物详情信息\r\n  gerAllPetMsg = () => {\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n    listAllPetInfo(params)\r\n      .then((res) => {\r\n        console.log('res: ', res);\r\n        if (res.flag === true && res.data) {\r\n          this.setState({\r\n            petListData: res.data,\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  _search = (value = \"\") => {\r\n    let list = this.state.historyData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let note = list[i].note ? list[i].note.toLowerCase() : \"\";\r\n      if (`${note}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      serchExamData: searchData,\r\n    });\r\n  };\r\n  //搜索宠物\r\n  _searchPet = (value = \"\") => {\r\n    let list = this.state.petListData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let name = list[i].petName ? list[i].petName.toLowerCase() : \"\";\r\n      let rfid = list[i].rfid ? list[i].rfid.toLowerCase() : \"\";\r\n      let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : \"\";\r\n\r\n      if (\r\n        `${name}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${rfid}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n      ) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchPetList: searchData,\r\n    });\r\n  };\r\n  draggleRef = React.createRef();\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n    });\r\n  };\r\n  //新增宠物取消新增事件\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignVisible: true,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      imgId: -1,\r\n    });\r\n  };\r\n  //新增宠物弹窗关闭事件\r\n  closeHandleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      search: '',\r\n      selectPetId: '',\r\n      imgId: -1,\r\n    });\r\n  }\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n      },\r\n    });\r\n  };\r\n  _select = (value, data) => {\r\n    console.log(value, data); //value的值为id\r\n    this.setState({\r\n      assignBreedId: value,\r\n      assignBreed: data.children,\r\n    });\r\n  };\r\n  _modal = () => {\r\n    let that = this;\r\n    function getPetInfoByPatientId() {\r\n      switch (storage.identity) {\r\n        case \"1\":\r\n          console.log(\"我是vetspire查找\");\r\n          break;\r\n        case \"2\":\r\n          console.log(\"我是ezyVet查找\");\r\n          let params = {\r\n            animalId: that.state.assignPatientId,\r\n            organizationId: 4,\r\n          };\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach((key) =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url =\r\n            \"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId\";\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              authorization: `Bearer ${storage.ezyVetToken}`,\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n              console.log(\"res\", res);\r\n              this.setState({\r\n                spin: false,\r\n              });\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data;\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? 1 : -1;\r\n                  });\r\n                }\r\n                console.log(petArr);\r\n\r\n                let { petId } = petArr;\r\n                // assign(petId)\r\n              } else {\r\n                //没有宠物\r\n                message.error(\"There are no pets under this patientID\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error(\"There are no pets under this patientID\");\r\n            });\r\n\r\n          break;\r\n\r\n        case \"3\":\r\n          console.log(\"我是一般医生查找\");\r\n          let datas = {\r\n            patientId: that.state.assignPatientId,\r\n            doctorId: storage.userId\r\n          }\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId\r\n          }\r\n          if (storage.lastOrganization) {\r\n            datas.organizationId = storage.lastOrganization\r\n          }\r\n\r\n          checkPatientId(datas)\r\n            .then((res) => {\r\n              if (res.flag === true) {\r\n                that.setState({\r\n                  assignPetId: that.state.assignPatientId,\r\n                });\r\n                message.success(\"This patientID will work\");\r\n              } else {\r\n                that.setState({\r\n                  assignPetId: '',\r\n                });\r\n                message.error(\"The patientID already exists\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              that.setState({\r\n                inputDisabled: false,\r\n                assignPetName: \"\",\r\n                assignOwnerName: \"\",\r\n                assignBreed: \"\",\r\n                assignBreedId: \"\",\r\n                assignPetAge: \"\",\r\n                assignPetWeight: \"\",\r\n                assignPetId: \"\",\r\n                assignPetImgUrl: \"\",\r\n              });\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    //将测量信息给分配宠物\r\n    const assignPet = () => {\r\n      let petMsg = {\r\n        petName: this.state.assignPetName,\r\n        age: this.state.assignPetAge,\r\n        petSpeciesBreedId: this.state.assignBreedId,\r\n        owner: this.state.assignOwnerName,\r\n        doctorId: storage.userId\r\n      }\r\n      if (this.state.imgId !== -1 && this.state.imgId) {\r\n        petMsg.imageId = this.state.imgId\r\n      }\r\n      if (this.state.assignPetWeight) {\r\n        petMsg.weight = parseFloat(this.state.assignPetWeight).toFixed(2)\r\n      }\r\n      if (storage.lastWorkplaceId) {\r\n        petMsg.workplaceId = storage.lastWorkplaceId\r\n      }\r\n      if (storage.lastOrganization) {\r\n        petMsg.organizationId = storage.lastOrganization\r\n      }\r\n      this.setState({\r\n        modalLoading: true,\r\n      })\r\n      addDeskPet(this.state.assignPatientId, petMsg)\r\n        .then((res) => {\r\n          if (res.flag === true) {\r\n            let parmes = {\r\n              petId: res.data.petId,\r\n              clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId,\r\n            };\r\n            addAndSavePetExam(that.state.seleceEmergencies.historyId, parmes)\r\n              .then((res) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                if (res.flag === true) {\r\n                  message.success(\"Assigned successfully\");\r\n                  that._getEmergencyHistory();\r\n                  that.setState({\r\n                    visible: false,\r\n                    assignPatientId: \"\",\r\n                    assignPetName: \"\",\r\n                    assignOwnerName: \"\",\r\n                    assignBreed: \"\",\r\n                    assignBreedId: \"\",\r\n                    assignPetAge: \"\",\r\n                    assignPetWeight: \"\",\r\n                    assignPetId: \"\",\r\n                    assignPetImgUrl: \"\",\r\n                    imgId: -1,\r\n                  });\r\n                } else {\r\n                  message.error(\"Assignment failed\");\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                console.log(err);\r\n                message.error(\"Assignment failed\");\r\n              });\r\n          } else {\r\n            this.setState({\r\n              modalLoading: false,\r\n            })\r\n            message.error('Failed to create a pet')\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            modalLoading: false,\r\n          })\r\n          console.log('err: ', err);\r\n          message.error('Failed to create a pet')\r\n        })\r\n    };\r\n    let { disabled, bounds, visible } = this.state;\r\n    let options = this.state.breedArr.map((d) => (\r\n      <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>\r\n    ));\r\n    return (\r\n\r\n      <Modal\r\n        maskClosable={false}\r\n        wrapClassName={\"web1\"} //对话框外部的类名，主要是用来修改这个modal的样式的\r\n        destroyOnClose={true}\r\n        title={\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              cursor: \"move\",\r\n              height: \"30px\",\r\n              textAlign: \"center\",\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          ></div>\r\n        }\r\n        visible={visible}\r\n        onOk={this.handleOk}\r\n        onCancel={this.closeHandleCancel}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\r\n      >\r\n        <Spin spinning={this.state.modalLoading}>\r\n          <div id=\"unassignedModal\">\r\n            <div className=\"title\">\r\n              Assign <br />\r\n              Measurement to\r\n            </div>\r\n\r\n            <div className=\"addPhoto\">\r\n              <UploadImg\r\n                getImg={(val) => {\r\n                  this.setState({\r\n                    imgId: val.imageId,\r\n                  });\r\n                }}\r\n                imgUrl={this.state.assignPetImgUrl}\r\n                disable={this.state.inputDisabled}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Patient ID:</p>\r\n              <Input\r\n                value={this.state.assignPatientId}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPatientId: item.target.value,\r\n                  });\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.keyCode === 13) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                  if (e.keyCode === 27) {\r\n                    this.setState({\r\n                      assignPatientId: \"\",\r\n                    });\r\n                  }\r\n                }}\r\n                onBlur={() => {\r\n                  if (this.state.assignPatientId.length > 0) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Pet Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Owner Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignOwnerName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignOwnerName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Breed:</p>\r\n              <div className=\"infoInput\">\r\n                <Select\r\n                  disabled={this.state.inputDisabled}\r\n                  showSearch\r\n                  style={{ width: \"100%\" }}\r\n                  bordered={false}\r\n                  value={this.state.assignBreed}\r\n                  placeholder=\"Search to Select\"\r\n                  optionFilterProp=\"children\"\r\n                  listHeight={256}\r\n                  onSelect={(value, data) => this._select(value, data)}\r\n                  filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                    0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  {options}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Age:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetAge}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetAge: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Weight:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetWeight}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetWeight: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <div className=\"unit\">{`kg`}</div>\r\n            </div>\r\n\r\n            <div className=\"btnF\">\r\n              <div className=\"btn\" onClick={this.handleCancel}>\r\n                Cancel\r\n              </div>\r\n              <div\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  if (this.state.assignPatientId === '') {\r\n                    message.error('patientID can not be empty!');\r\n                  } else if (this.state.assignPetId === '') {\r\n                    message.error(\"The patientID already exists\");\r\n                  } else if (this.state.assignPatientId !== '' && this.state.assignPetId !== '') {\r\n                    assignPet();\r\n                  }\r\n                }}\r\n              >\r\n                Apportion\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    );\r\n  };\r\n  //获取当前组织所有宠物信息\r\n  _list = () => {\r\n    const { search, petListData, searchPetList } = this.state;\r\n    let data = search.length > 0 ? searchPetList : petListData;\r\n    let option = data.map((item, index) => {\r\n      let male = item.gender === 0 ? \"Female\" : \"Male\";\r\n      return (\r\n        <li\r\n          key={item.petId}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectPetId: item.petId,\r\n            });\r\n          }}\r\n        >\r\n          <div className=\"item\">\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {item.petName ? item.petName : 'unknown'}\r\n            </span>\r\n            <span\r\n              className=\"petName\"\r\n              style={{ margin: `${px(5)}px 0` }}\r\n            >{`,${item.age} yrs,`}</span>\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {male}\r\n            </span>\r\n          </div>\r\n          {this.state.selectPetId === item.petId ? (\r\n            <span className=\"search\">&#xe614;</span>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    });\r\n    return <ul>{option}</ul>;\r\n  };\r\n\r\n  render() {\r\n    let { loading, disabled, historyData, searchText, serchExamData } =\r\n      this.state;\r\n    const _del = (key, record) => {\r\n      deletePetExamByExamId(key, '')\r\n        .then(\r\n          (res) => {\r\n            if (res.flag === true) {\r\n              console.log(\"删除成功\");\r\n              const historyData = [...this.state.historyData];\r\n              console.log(historyData);\r\n              this.setState({\r\n                historyData: historyData.filter((item) => item.historyId !== key),\r\n              });\r\n            } else {\r\n              console.log(\"删除失败\");\r\n            }\r\n          }\r\n        );\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        key: \"operation\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: `${px(8)}px 0`,\r\n              }}\r\n            >\r\n              <Popconfirm\r\n                title=\"Sure to delete?\"\r\n                onConfirm={() => _del(record.historyId, record)}\r\n              >\r\n                <img src={del} alt=\"\" width={25} style={{ marginRight: \"8px\" }} />\r\n              </Popconfirm>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Time\",\r\n        dataIndex: \"time\",\r\n        key: \"time\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \" Pet Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Species\",\r\n        dataIndex: \"species\",\r\n        key: \"species\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Note\",\r\n        dataIndex: \"note\",\r\n        key: \"note\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"assign\",\r\n        key: \"assign\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div\r\n              className=\"assign\"\r\n              style={{\r\n                fontSize: px(16),\r\n                paddingTop: px(5),\r\n                paddingBottom: px(5),\r\n              }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  assignVisible: true,\r\n                  seleceEmergencies: record,\r\n                });\r\n              }}\r\n            >\r\n              Assign\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    let tableData = searchText.length > 0 ? serchExamData : historyData;\r\n    return (\r\n      <div id=\"unassigned\">\r\n        <Heard />\r\n        <div className=\"body\">\r\n          <div\r\n            className=\"title\"\r\n            style={{\r\n              marginTop: px(30),\r\n              fontSize: px(30),\r\n              marginBottom: px(40),\r\n            }}\r\n          >\r\n            Unassigned Measurements\r\n          </div>\r\n          <div className=\"input\" style={{ marginBottom: px(10) }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"&#xe628; Search Pet Name or Description\"\r\n              value={this.state.searchText}\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  searchText: e.target.value,\r\n                });\r\n                this._search(e.target.value);\r\n              }}\r\n              onKeyUp={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  this._search();\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  this.setState({\r\n                    searchText: \"\",\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <div\r\n              className=\"searchBtn\"\r\n              style={{ height: px(35), fontSize: px(18) }}\r\n              onClick={this._search}\r\n            >\r\n              <p>Search</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table\">\r\n            <Table\r\n              style={{\r\n                width: \"95%\",\r\n                height: MTop(550),\r\n              }}\r\n              loading={loading}\r\n              columns={columns}\r\n              dataSource={tableData}\r\n              rowKey={(columns) => columns.historyId}\r\n              pagination={false}\r\n              scroll={{\r\n                y: MTop(500),\r\n              }}\r\n            />\r\n          </div>\r\n          {this._modal()}\r\n        </div>\r\n        {\r\n          this.state.assignVisible && (\r\n            <MyModal\r\n              visible={this.state.assignVisible}\r\n              element={\r\n                <div className=\"myfindOrg\">\r\n                  <div className=\"orgHeard\">\r\n                    <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                      <div\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            assignVisible: false,\r\n                            search: '',\r\n                            selectPetId: '',\r\n                          });\r\n                        }}\r\n                      >\r\n                        <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"text\"\r\n                      onMouseOver={() => {\r\n                        if (disabled) {\r\n                          this.setState({\r\n                            disabled: false,\r\n                          });\r\n                        }\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        this.setState({\r\n                          disabled: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      Assign Measurement\r\n                    </div>\r\n                    <div className=\"searchBox\">\r\n                      <Input\r\n                        placeholder=\" &#xe61b; Search Pet\"\r\n                        bordered={false}\r\n                        allowClear={true}\r\n                        value={this.state.search}\r\n                        onChange={(item) => {\r\n                          this.setState({\r\n                            search: item.target.value,\r\n                          });\r\n                          this._searchPet(item.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"list\">{this._list()}</div>\r\n                  <div className=\"foot\">\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          assignVisible: false,\r\n                          visible: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <p>+Add New Pet</p>\r\n                    </div>\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        if (!this.state.selectPetId) {\r\n                          message.error(\"Please select a pet to assign\");\r\n                        } else {\r\n                          let { selectPetId, seleceEmergencies, historyData } =\r\n                            this.state;\r\n                          let parmes = {\r\n                            petId: selectPetId,\r\n                            clinicalDatagroupId:\r\n                              seleceEmergencies.clinicalDatagroupId,\r\n                          };\r\n                          console.log(\"分配的数据信息\", parmes);\r\n                          addAndSavePetExam(seleceEmergencies.historyId, parmes)\r\n                            .then((res) => {\r\n                              console.log(\"----------\", res);\r\n                              if (res.flag === true) {\r\n                                console.log(\"分配成功\");\r\n                                message.success(\"Assigned successfully\");\r\n                                let arr = [];\r\n                                for (let i = 0; i < historyData.length; i++) {\r\n                                  const element = historyData[i];\r\n                                  if (\r\n                                    seleceEmergencies.clinicalDatagroupId !==\r\n                                    element.clinicalDatagroupId\r\n                                  ) {\r\n                                    arr.push(element);\r\n                                  }\r\n                                }\r\n\r\n                                this.setState({\r\n                                  assignVisible: false,\r\n                                  historyData: arr,\r\n                                });\r\n                              } else {\r\n                                message.error(\"Assignment failed\");\r\n                              }\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                              message.error(\"Assignment failed\");\r\n                            });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <p>Confirm</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                // </Spin>\r\n              }\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",["624","625"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx",["626","627","628","629","630","631","632","633"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { ConfigProvider, Table } from 'antd';\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment'\n\nimport { mTop, px, MTop, pX } from '../../utils/px';\nimport './petTable.less'\nimport { petDetailInfoFun, setMenuNum, } from '../../store/actions';\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\n\n\n\n\n\nconst PetTable = ({ petListArr, loading, bodyHeight, petDetailInfoFun, setMenuNum, resetPetList, type }) => {\n  let history = useHistory()\n  const [heardSearchText, setHeardSearchText] = useState('')\n  //搜索后展示的宠物列表\n  const [searchData, setSearchData] = useState([])\n  const _search = (value) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\n    let keyWord = value || heardSearchText\n    /**\n     * 使用indexof方法实现模糊查询\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n     *\n     * list         原数组\n     * keyWord      查询关键词\n     * searchData   查询的结果\n     *\n     * toLowerCase（）方法：将字符串统一转成小写\n     * toUpperCase（）方法：将字符串统一转成大写\n     *\n     */\n    let list = petListArr\n    let searchData = []\n    for (let i = 0; i < list.length; i++) {\n      let petName = list[i].petName.toLowerCase() || ''\n      let patientId = list[i].patientId.toLowerCase() || ''\n      let rfid = list[i].rfid || ''\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${rfid}`.indexOf(keyWord) !== -1\n      ) {\n        searchData.push(list[i])\n      }\n    }\n    console.log(searchData);\n    setSearchData(searchData)\n  }\n\n  const columns = [\n    {\n      title: 'Time',\n      dataIndex: 'insertedAt',\n      key: 'insertedAt',\n      width: '16%',\n      // ...this.getColumnSearchProps('insertedAt'),\n      render: (text, record, index) => {\n        let chazhi = new Date().getTimezoneOffset()\n        // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\n        let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\n        let time = moment(parseInt(text) * 1000).format('hh:mm a');\n        let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\n        // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\n        return (\n          <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\n            <p>{`${year}`}</p>\n            <p>{`${time}`}</p>\n          </div>\n        )\n      },\n\n    },\n    {\n      title: 'Pet ID',\n      dataIndex: 'patientId',\n      key: 'patientId',\n      width: '15%',\n      // ...this.getColumnSearchProps('patientId'),\n    },\n    {\n      title: 'Pet Name',\n      dataIndex: 'petName',\n      key: 'petName',\n      width: '15%',\n      // ...this.getColumnSearchProps('petName'),\n    },\n    {\n      title: 'Owner',\n      dataIndex: 'owner',\n      key: 'owner',\n      width: '15%',\n      // ...this.getColumnSearchProps('owner'),\n    },\n    {\n      title: 'Breed',\n      dataIndex: 'breed',\n      key: 'breed',\n      width: '15%',\n      // ...this.getColumnSearchProps('breed'),\n      render: (text, record, index) => {\n        if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\n          return (\n            <p style={{ textAlign: 'center' }}>{'unknown'}</p>\n          )\n        } else {\n          return (\n            <p style={{ textAlign: 'center' }}>{text}</p>\n          )\n        }\n\n      }\n    },\n\n    {\n      title: 'Gender',\n      dataIndex: 'gender',\n      key: 'gender',\n      width: '12%',\n      // width: '30%',\n      // ...this.getColumnSearchProps('gender'),\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      width: '12%',\n      // width: '20%',\n      render: (text, record, index) => {\n        // console.log(text);\n\n        if (`${text}` === 'NaN') {\n          return (\n            <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\n          )\n        } else {\n          return (\n            <p style={{ textAlign: 'center' }}>{text}</p>\n          )\n        }\n\n      }\n    },\n\n\n  ];\n  const noData = () => {\n    return (\n      <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\n        <p style={{ fontSize: px(22) }}> {`No Pets Scheduled &`}</p>  &nbsp;&nbsp;\n        <a style={{ fontSize: px(22) }} href=\"#\"\n          onClick={(e) => {\n            console.log('我要去添加宠物1111');\n            try {\n              if (type === 'scheduled') {\n                setMenuNum('AddScheduledPet')\n              } else {\n                setMenuNum('AddPet')\n              }\n            } catch (error) {\n              console.log('错误信息', error);\n            }\n            e.preventDefault();\n\n          }}\n\n        >{`Schedule a Pet`}</a>\n      </div>\n    )\n  }\n  return (\n    <div className='petTable' >\n      <div className=\"pet_table_heard\">\n        <div className=\"search\" style={{ height: px(28) }}>\n          <input\n            type=\"text\"\n            placeholder=\"&#xe61b;    search\"\n            value={heardSearchText}\n            onChange={(e) => {\n              setHeardSearchText(e.target.value)\n              _search(e.target.value)\n            }\n            }\n\n          />\n        </div>\n\n        <div className=\"walkBtn1\" style={{ marginRight: px(28) }}>\n          <div\n            className=\"walkbtnBox\"\n            style={{ height: px(28), width: px(80) }}\n            onClick={_search}\n          >\n            <div className=\"walkText\">Search</div>\n          </div>\n        </div>\n\n      </div>\n      <div className=\"heard2 flex\" style={{ marginBottom: px(8), marginLeft: px(20) }}>\n\n        <div className=\"sort flex\" >\n          <p style={{ fontSize: px(16), marginRight: px(10) }}>Sort By:</p>\n\n          <SelectionBox\n            listArr={[\n              { key: 'time', value: 'Time' },\n              { key: 'petid', value: 'Pet ID' },\n              { key: 'owner', value: 'Owner' },\n              { key: 'breed', value: 'Breed' },\n              { key: 'petname', value: 'Pet Name' },\n              { key: 'gender', value: 'Gender' },\n            ]}\n            clickItem={(item) => {\n              let petList = [].concat(petListArr)\n              switch (item.key) {\n                case 'time':\n                  petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n                  break;\n                case 'petid':\n                  petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n                  break;\n                case 'owner':\n                  petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n                  break;\n                case 'breed':\n                  petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n                  break;\n                case 'petname':\n                  petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n                  break;\n                case 'gender':\n                  petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n                  break;\n              }\n              resetPetList(petList)\n\n            }}\n          />\n        </div>\n\n\n\n      </div>\n      <div className=\"table\" >\n        <ConfigProvider renderEmpty={noData}>\n          <Table\n            style={{\n              padding: 0,\n              margin: 0,\n              width: '95%',\n            }}\n            rowKey={data => data.id}\n            bordered={false}\n            columns={columns}\n            dataSource={(heardSearchText.length === 0) ? petListArr : searchData}\n            loading={loading}\n            locale={{ filterConfirm: <div>111</div> }}\n            pagination={false}\n            scroll={{\n              // y: px(480),\n              y: '80 %'\n            }}\n            onRow={(record) => {\n              return {\n                onClick: (event) => {\n                  setMenuNum('1')\n                  petDetailInfoFun(record)\n                }, // 点击行\n              };\n            }}\n            className=\"allPetTable\"\n          />\n        </ConfigProvider>\n      </div>\n\n    </div >\n\n  )\n}\n\n\nPetTable.propTypes = {\n  petListArr: PropTypes.array,\n  resetPetList: PropTypes.func,\n}\n//默认值\nPetTable.defaultProps = {\n  bodyHeight: 0,\n  petListArr: [],\n  resetPetList: () => { },\n}\nexport default connect(\n  state => ({\n\n  }),\n  { petDetailInfoFun, setMenuNum, }\n)(PetTable)\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js",[],["634","635"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\user.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx",["636","637","638","639","640"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { } from \"../../store/actions\";\nimport {\n  Layout,\n  Button,\n  Form,\n  Input,\n  Radio,\n  Col,\n  Row,\n  Checkbox,\n  Select,\n  message,\n} from \"antd\";\n\nimport changePhoto from '../../assets/images/changePhoto.png';\n\nimport { px, mTop } from \"../../utils/px\";\nimport countryList from '../../utils/areaCode/country';\nimport Avatar from '../../components/avatar/Avatar'\nimport { getUserInfoByUserId, update } from '../../api'\n\nimport PropTypes from 'prop-types';\nimport _ from \"lodash\";\n\nimport \"./index.less\";\n\nconst MyAccount = ({ bodyHeight }) => {\n  let storage = window.localStorage;\n  const [form] = Form.useForm();\n  const { Option } = Select;\n  const [imageId, setImageId] = useState();\n  const [petUrl, setPetUrl] = useState();\n  const [imgUrl, setImgUrl] = useState();\n  const [country, setCountry] = useState('US');\n  const [countryArr, setCountryArr] = useState();\n  const [infoData, setInfoDate] = useState();\n\n  const onFinish = (values) => {\n    let array = ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'];\n    for (let index = 0; index < _.size(values.domain); index++) {\n      array[_.toNumber(values.domain[index])] = '1';\n    }\n    let reg = new RegExp(',', \"g\");\n    let res = _.toString(array).replace(reg, '');\n    let data = {\n      ...values,\n      imageId: imageId,\n      domain: res,\n      userId: storage.userId\n    };\n    update(data)\n      .then((res) => {\n        if (res.msg === 'success') {\n          message.success('The user information is updated successfully');\n        } else {\n          message.error('Description Failed to update user information');\n        }\n      })\n  };\n\n  useEffect(() => {\n    let arr = countryList.map(item => item.locale)\n    arr.sort(function (a, b) {\n      return a.localeCompare(b)\n    })\n    setCountryArr(arr);\n  }, []);\n\n  useEffect(() => {\n    getUserInfoByUserId(storage.userId)\n      .then((res) => {\n        if (res.flag === true) {\n          let newData = {\n            ...res.data,\n            domain: _.toArray(res.data.domain)\n\n          }\n          let arr = [];\n          for (let index = 0; index < _.size(newData.domain); index++) {\n            if (newData.domain[index] === '1') {\n              arr.push(_.toString(index));\n            }\n          }\n          newData.domain = arr;\n          form.setFieldsValue(newData);\n          setInfoDate(newData);\n          setImgUrl(res.data?.userImage?.url);\n        }\n      })\n  }, [])\n\n  return (\n    <Layout className=\"myAccountBox\" style={{ height: bodyHeight }}>\n      <div className=\"headerContentBox\" style={{ background: \"#fff\", position: 'relative' }}>\n        <div style={{\n          height: '100%',\n          backgroundColor: '#FFFFFF',\n          borderBottom: '2px solid #979797',\n          display: 'flex'\n        }}>\n          <span className=\"headerTitle\">My Account</span>\n        </div>\n      </div>\n      <div>\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={onFinish}\n          className=\"accountForm\"\n        >\n          <Row>\n            <Col flex={1} className=\"leftColBox\">\n              <Form.Item valuePropName=\"fileList\" name=\"imageId\" className=\"imageFormItem\">\n                <div style={{ display: 'grid', justifyItems: 'center', alignItems: 'center' }}>\n                  <Avatar\n                    init={\n                      <div className=\"ciral\">\n                        <img src={imgUrl ? imgUrl : changePhoto} alt=\"\" id=\"touxiang\" height=\"300px\" />\n                        <p style={{ fontSize: px(14), height: mTop(35) }}>Change Photo</p>\n                      </div>\n                    }\n                    getinfo={(val) => {\n                      if (val) {\n                        setImageId(val);\n                      }\n\n                    }}\n                    getAllInfo={(val) => {\n                      if (val.url) {\n                        setPetUrl(val.url);\n                      }\n                    }}\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item label=\"Email\" name=\"email\">\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n            </Col>\n            <Col flex={1} className=\"rightColBox\">\n              <Form.Item label=\"FirstName\" name=\"firstName\">\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item label=\"LastName\" name=\"lastName\">\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item label=\"Phone\" name=\"phone\">\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Form.Item className=\"addressFormItem\" label=\"Address\">\n            <div style={{ display: 'flex' }}>\n              <Form.Item name=\"address1\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"address1\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"address2\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"address2\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"city\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"city\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"state\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"state\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"zipcode\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"zipcode\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"country\">\n                <Select\n                  showSearch\n                  style={{ width: 100, borderBottom: '1px solid rgba(216,216,216,1)' }}\n                  bordered={false}\n                  optionFilterProp=\"children\"\n                  defaultValue=\"US\"\n                  // onChange={onChange}\n                  onSelect={(val) => { setCountry(val) }}\n                  filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\n                // open\n                // dropdownClassName=\"addressSelectBox\"\n                >\n                  {_.map(countryArr, (item, index) => (\n                    <Option key={index} value={item}>{item}</Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </div>\n          </Form.Item>\n          <Form.Item className=\"expertiseFormItem\" label=\"Areas of Expertise\" name=\"domain\">\n            <Checkbox.Group>\n              <Row>\n                <Col span={6}>\n                  <Checkbox\n                    value='0'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Dogs\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='1'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Cats\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='2'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Small Pets\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='3'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Nutrition\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='4'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Surgery\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='5'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Zoo\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='6'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Wildlife\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='7'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Cardiology\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='8'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Neurology\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='9'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Anaesthesia\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='10'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Other\n                  </Checkbox>\n                </Col>\n              </Row>\n            </Checkbox.Group>\n          </Form.Item>\n          <Form.Item className=\"btnFormItem\">\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" size=\"large\" style={{ width: px(260) }}>Save Changes</Button>\n            </div>\n          </Form.Item>\n        </Form>\n      </div>\n    </Layout>\n  );\n}\n\nMyAccount.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n\nexport default connect(\n  (state) => ({}),\n)(MyAccount);\n",["641","642"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\Biggie.jsx",["643","644","645","646"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["647","648","649","650","651","652","653","654"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Image, Layout, Button } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport PressButton_Pro from \"./../../../assets/img/PressButton_Pro.png\";\nimport AxillaryPlacement from \"./../../../assets/img/AxillaryPlacement.png\"; //腋温底部图片\nimport EarPlacement from \"./../../../assets/img/EarPlacement.png\"; //耳温底部图片\nimport RectalPlacement from \"./../../../assets/img/RectalPlacement.png\"; //肛温底部图片\nimport Standing_Dog from \"./../../../assets/img/Standing_Dog.png\";\nimport Standing_Cat from \"./../../../assets/img/Standing_Cat.png\";\nimport Sitting_Dog from \"./../../../assets/img/Sitting_Dog.png\";\nimport Sitting_Cat from \"./../../../assets/img/Sitting_Cat.png\";\nimport Laying_Dog from \"./../../../assets/img/Laying_Dog.png\";\nimport Laying_Cat from \"./../../../assets/img/Laying_Cat.png\";\nimport { px } from \"../../../utils/px\";\n\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../../store/actions\";\nimport _ from \"lodash\";\nimport HistoryTable from \"../../../components/historyTable\";\nimport moment from \"moment\";\nimport \"./linkEquipment.less\";\n\nconst { Content, Header } = Layout;\n\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\n  let { mellaConnectStatus, mellaMeasurePart } = hardwareMessage;\n  let imageMap = [\n    Standing_Dog,\n    Standing_Cat,\n    Sitting_Dog,\n    Sitting_Cat,\n    Laying_Dog,\n    Laying_Cat,\n  ];\n\n  const [type, setType] = useState(false); //是否显示轮播图\n  const [carouselIndex, setCarouselIndex] = useState(0); //轮播图下标\n  const [title, setTitle] = useState('Ready, place under foreleg')//准备测量的文字\n  const saveCallBack = useRef();\n  const callBack = () => {\n    setCarouselIndex(carouselIndex + 1);\n  };\n\n  //切换图片\n  const checkImage = () => {\n    if (mellaMeasurePart === \"腋温\") {\n      return AxillaryPlacement;\n    } else if (mellaMeasurePart === \"耳温\") {\n      return EarPlacement;\n    } else {\n      return RectalPlacement;\n    }\n  };\n  //点击进入轮播图\n  const clickIntoTip = () => {\n    setType(true);\n  };\n  //小圆点点击事件\n  const clickPoint = (index) => {\n    setCarouselIndex(index);\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (carouselIndex === 6) {\n      setCarouselIndex(0);\n    }\n  }, [carouselIndex]);\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    let timer = null;\n    if (type && mellaConnectStatus === \"connected\") {\n      timer = setInterval(tick, 1500);\n    }\n    if (mellaConnectStatus !== \"connected\") {\n      setType(false);\n      setCarouselIndex(0);\n      clearInterval(timer);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [type, mellaConnectStatus]);\n\n  useEffect(() => {\n    if (mellaMeasurePart === '腋温') {\n      setTitle('Ready, place under foreleg');\n    } else if (mellaMeasurePart === '耳温') {\n      setTitle('Ready, place in ear');\n    } else {\n      setTitle('Ready, place in anus');\n    }\n  }, [mellaMeasurePart])\n\n  return (\n    <>\n      <Content className={\"temperatureContentBox\"}>\n        {_.isEqual(mellaConnectStatus, \"disconnected\") ? (\n          <>\n            <div className=\"startBox\">\n              <p className=\"startTitle\">\n                Turn on your\n                <br />\n                Mella Thermometer\n                <br />\n                or Pair New Mella\n              </p>\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <img src={PressButton_Pro} className=\"PressButton_Pro\" />\n              </div>\n            </div>\n            <div className=\"tableBox\">\n              <HistoryTable tableColumnType='temperature' />\n            </div>\n          </>\n        ) : (\n          <>\n            <div className=\"startBox\">\n              <p className=\"startTitle\">\n                {!type\n                  ? title\n                  : \"Place Under Foreleg Standing\"}\n              </p>\n              {!type ? (\n                <>\n                  <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <img src={checkImage()} className=\"checkImages\"></img>\n                  </div>\n\n                  {mellaMeasurePart === \"腋温\" ? (\n                    <div className=\"bottomTip1\">\n                      <div className=\"bottomTip1_1\">\n                        <p className=\"tipTitle\" onClick={() => clickIntoTip()}>\n                          Need Help With Accurate Placement On Pet?\n                        </p>\n                      </div>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </>\n              ) : (\n                <>\n                  <div className=\"carouselBox\">\n                    {_.map(imageMap, (item, index) => {\n                      return (\n                        <img\n                          key={index}\n                          className=\"contentImgStyle\"\n                          src={item}\n                          style={{\n                            display: carouselIndex === index ? \"\" : \"none\",\n                          }}\n                        />\n                      );\n                    })}\n                  </div>\n                  <div className=\"dotBox\">\n                    <ul className=\"dotList\">\n                      {_.map(imageMap, (item, index) => {\n                        return (\n                          <li key={index}>\n                            <Button\n                              className=\"dotItem\"\n                              onClick={() => clickPoint(index)}\n                              style={{\n                                background:\n                                  carouselIndex === index\n                                    ? \"#0a0a0a\"\n                                    : \"#bdbaba\",\n                              }}\n                            >\n                              {index}\n                            </Button>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                </>\n              )}\n            </div>\n          </>\n        )}\n      </Content>\n    </>\n  );\n};\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(LinkEquipment);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\home\\index.jsx",["655","656"],"import React, { Component, } from 'react'\r\nimport {\r\n  Button,\r\n  message\r\n} from 'antd';\r\n\r\nimport temporaryStorage from '../../utils/temporaryStorage'\r\nimport { px, mTop, win, timerFun } from '../../utils/px'\r\nimport MinClose from '../../utils/minClose/MinClose';\r\nimport { version } from '../../utils/appversion';\r\n\r\nimport logo from '../../assets/images/mella.png'\r\n\r\nimport './index.less';\r\n\r\nlet storage = window.localStorage;\r\n//定义变量:连续点击了几次logo\r\nlet logoClick = 0;\r\n//定义变量:点击logo的时间\r\nlet logoTime = 0;\r\nexport default class Home extends Component {\r\n  state = {\r\n    imgurl: '',\r\n    size: { width: 0, height: 0 }\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    timerFun()\r\n    ipcRenderer.send('close-loading-window', 1)\r\n    ipcRenderer.send('small', win())\r\n    storage.measurepatientId = '';\r\n    temporaryStorage.logupVetInfo = {}\r\n    this.test()\r\n  }\r\n  resize = (e) => {\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    window.removeEventListener('resize', this.resize);\r\n\r\n  }\r\n  test = async () => {\r\n    console.log('---', window.navigator.serial);\r\n    // const port = await navigator.serial.requestPort();\r\n  }\r\n\r\n\r\n  _createAccount = () => {\r\n    this.props.history.push('/uesr/logUp/VetPrifile')\r\n\r\n    // this.props.history.push('/uesr/logUp/JoinOrganizationByOption')\r\n\r\n  }\r\n  _test = () => {\r\n    console.log('点击');\r\n    console.log(navigator);\r\n    console.log(navigator.userAgent);\r\n    console.log('---------------------------');\r\n  }\r\n  _openUtils = () => {\r\n    console.log('点击来了', logoClick);\r\n    if (new Date() - logoTime > 500) {\r\n      logoClick = 0;\r\n      logoTime = new Date();\r\n\r\n    } else {\r\n      logoClick++;\r\n      logoTime = new Date();\r\n      if (logoClick >= 8) {\r\n        logoClick = 0;\r\n\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('openDevTools', true)\r\n      }\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <div id=\"home\">\r\n        {/* <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                /> */}\r\n        <div className=\"daohang\" style={{ paddingTop: px(10), paddingRight: px(20) }}>\r\n          <MinClose />\r\n        </div>\r\n        <div className='flex refresh' style={{ alignItems: 'flex-end', paddingRight: px(20) }}>\r\n          <div className='flex' style={{ flexDirection: 'row', paddingTop: px(20), paddingRight: px(18), color: '#700B33', cursor: 'pointer' }}>\r\n\r\n            V{version}\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"heard\" >\r\n          <div\r\n\r\n            onClick={this._openUtils}\r\n            className=\"logo\"\r\n\r\n          >\r\n            <img\r\n              src={logo}\r\n              alt=\"\"\r\n            // style={{ marginTop: mTop(100), marginBottom: mTop(100), width: px(300) }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"button\" style={{ marginBottom: px(25) }}>\r\n          <Button\r\n            // style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={() => { this.props.history.push('/page11') }}\r\n            className=\"siginInBtn\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n        </div>\r\n        <p className=\"text\" style={{ marginTop: mTop(5), marginBottom: mTop(5) }}>New to Mella?</p>\r\n        <div className=\"create\" style={{ marginBottom: mTop(20), marginTop: px(25) }}>\r\n          <Button\r\n            // style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._createAccount}\r\n            className=\"createBtn\"\r\n          >\r\n            Create an Account\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\connectWorkplace\\index.jsx",["657","658","659","660"],"import React, { Component } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport Heart from \"../../utils/heard/Heard\";\r\nimport { px } from \"../../utils/px\";\r\nimport \"./index.less\";\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class ConnectWorkplace extends Component {\r\n  state = {\r\n    orgArr: [],\r\n    workplaceJson: {},\r\n    connectionKey: \"\",\r\n    selectOrgId: -1,\r\n    selectRoleId: \"\",\r\n  };\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    ipcRenderer.send(\"big\");\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n\r\n    let userWorkplace = [];\r\n    try {\r\n      userWorkplace = JSON.parse(storage.userWorkplace) || [];\r\n    } catch (error) {\r\n      console.log(\"字符串转对象失败\", error);\r\n    }\r\n    let orgArr = [],\r\n      workplaceJson = {};\r\n    // console.log('存储的工作场所和组织id', storage.lastWorkplaceId, storage.lastOrganization);\r\n    for (let i = 0; i < userWorkplace.length; i++) {\r\n      let element = userWorkplace[i];\r\n      // console.log('每一项的值：', element);\r\n      if (element.organizationEntity && element.workplaceEntity) {\r\n        let { organizationEntity, workplaceEntity, roleId } = element;\r\n        const { name, organizationId, connectionKey } = organizationEntity;\r\n        const { workplaceName, workplaceId } = workplaceEntity;\r\n\r\n        if (`${workplaceId}` === storage.lastWorkplaceId) {\r\n          this.setState({\r\n            workplaceName,\r\n            workplaceId: storage.lastWorkplaceId,\r\n          });\r\n        }\r\n\r\n        if (`${organizationId}` === storage.lastOrganization) {\r\n          this.setState({\r\n            organizationName: name,\r\n            organizationId: storage.lastOrganization,\r\n            selectOrgId: storage.lastOrganization,\r\n          });\r\n        }\r\n\r\n        let orgRepeatFlog = false,\r\n          repeatFlogNum = -1;\r\n        for (let j = 0; j < orgArr.length; j++) {\r\n          if (orgArr[j].organizationId === organizationId) {\r\n            orgRepeatFlog = true;\r\n            repeatFlogNum = j;\r\n            break;\r\n          }\r\n        }\r\n        if (orgRepeatFlog) {\r\n          let workplace = {\r\n            workplaceName,\r\n            workplaceId,\r\n          };\r\n          let id = orgArr[repeatFlogNum].organizationId;\r\n          workplaceJson[`${id}`] = workplace;\r\n        } else {\r\n          let connectKey = connectionKey || \"\";\r\n          let json = {\r\n            organizationId,\r\n            organizationName: name,\r\n            connectionKey: connectKey,\r\n            roleId,\r\n          };\r\n          let workplace = [\r\n            {\r\n              workplaceName,\r\n              workplaceId,\r\n            },\r\n          ];\r\n          workplaceJson[`${organizationId}`] = workplace;\r\n\r\n          orgArr.push(json);\r\n        }\r\n      }\r\n    }\r\n    // console.log('-----转换后的组织信息--', orgArr, workplaceJson);\r\n    this.setState({\r\n      orgArr,\r\n      workplaceJson,\r\n      connectionKey: storage.connectionKey,\r\n      selectRoleId: storage.roleId,\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    // console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    this.setState({});\r\n  };\r\n\r\n  render() {\r\n    let { orgArr, selectOrgId } = this.state;\r\n    let option = orgArr.map((item, index) => {\r\n      let bac =\r\n        `${selectOrgId}` === `${item.organizationId}` ? \"#e1206d\" : \"#fff\";\r\n      let col = `${selectOrgId}` === `${item.organizationId}` ? \"#fff\" : \"#000\";\r\n      return (\r\n        <li\r\n          key={`${item.organizationId}`}\r\n          style={{ background: bac, color: col }}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectOrgId: item.organizationId,\r\n              connectionKey: item.connectionKey,\r\n              selectRoleId: item.roleId,\r\n            });\r\n            // storage.roleId = item.roleId\r\n          }}\r\n        >\r\n          <div className=\"org\" style={{ fontSize: px(16) }}>\r\n            {item.organizationName}\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div id=\"connectworkplace\">\r\n        <div className=\"heard\">\r\n          <Heart />\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"top\">\r\n            <div className=\"title flex\">\r\n              <p style={{ fontSize: px(24), fontWeight: \"800\" }}>\r\n                Connected Workplaces\r\n              </p>\r\n              <div\r\n                className=\"addbtn flex\"\r\n                style={{ height: px(45) }}\r\n                onClick={() => this.props.history.push(\"/menuOptions/NewOrg\")}\r\n              >\r\n                <p>+ Add Workplace</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"tablebox\">\r\n              <div className=\"table\" style={{ height: px(220) }}>\r\n                <ul>{option}</ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"center\"></div>\r\n          <div className=\"footer flex\">\r\n            <div\r\n              className=\"saveBtn flex\"\r\n              style={{ height: px(45) }}\r\n              onClick={() => {\r\n                let {\r\n                  selectOrgId,\r\n                  selectRoleId,\r\n                  connectionKey,\r\n                  workplaceJson,\r\n                } = this.state;\r\n                // console.log({ selectOrgId, selectRoleId, connectionKey, workplaceJson });\r\n                storage.roleId = selectRoleId;\r\n                storage.lastOrganization = selectOrgId;\r\n                try {\r\n                  let key = parseInt(selectOrgId);\r\n                  let lastWorkplaceId = workplaceJson[key][0].workplaceId;\r\n                  // console.log(lastWorkplaceId);\r\n                  storage.lastWorkplaceId = lastWorkplaceId;\r\n                } catch (error) { }\r\n                storage.connectionKey = connectionKey;\r\n                // this.props.history.replace(\"/menuOptions/settings\");\r\n                this.props.history.goBack();\r\n              }}\r\n            >\r\n              <p style={{ fontSize: px(18) }}>Save Changes</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <MyModal visible={this.state.loading} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\hardWareTypeUI.jsx",["661"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js",[],["662","663"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\swabPetEar\\index.jsx",["664","665","666","667","668"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport DogLeftEar from \"../../../../assets/img/DogLeftEar.png\";\nimport DogRightEar from \"../../../../assets/img/DogRightEar.png\";\nimport CatLeftEar from \"../../../../assets/img/CatLeftEar.png\";\nimport CatRightEar from \"../../../../assets/img/CatRightEar.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\n\nconst SwabPetEar = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  let {\n    petSpeciesBreedId,\n  } = petMessage;\n  const [value, setValue] = useState(1);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const imagetypeEvent = () => {\n    if (value === 1) {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatRightEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogRightEar} alt=\"\" />;\n      } else {\n        return <img src={DogRightEar} alt=\"\" />;\n      }\n    } else {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatLeftEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogLeftEar} alt=\"\" />;\n      } else {\n        return <img src={DogLeftEar} alt=\"\" />;\n      }\n    }\n  }\n\n  const onClick = () => {\n    if (value === 1) {\n      setValue(2);\n    } else {\n      cutPageType('experimentalPage');\n    }\n  }\n\n  // useEffect(() => {\n  //   imagetypeEvent();\n  // },[value])\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          Swab Pet's Ear\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {imagetypeEvent()}\n      </div>\n      <div className=\"radioBox\">\n        <Radio.Group onChange={onChange} value={value}>\n          <Radio value={1}>Right Ear</Radio>\n          <Radio value={2}>Left Ear</Radio>\n        </Radio.Group>\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>Next</Button>\n      </div>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(SwabPetEar);\n",["669","670"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\editParent\\index.jsx",["671","672","673","674","675","676","677","678","679"],"import React, { Component } from 'react'\r\nimport { Menu, message, Select } from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nimport dog from '../../assets/images/reddog.png'\r\nimport cat from '../../assets/images/redcat.png'\r\nimport other from '../../assets/images/redother.png'\r\nimport selectphoto from '../../assets/images/sel.png'\r\n\r\n\r\nimport { mTop, px } from '../../utils/px';\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport Heard from '../../utils/heard/Heard';\r\nimport Avatar from '../../components/avatar/Avatar'\r\n\r\nimport moment from 'moment';\r\n\r\nimport './index.less';\r\nimport { getUserInfoByUserId, updateUserInfo } from '../../api/mellaserver/user';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class EditParent extends Component {\r\n  state = {\r\n    lastName: '',       //宠物主人性\r\n    firstName: '',      //宠物主人名\r\n    email: '',          //邮箱号\r\n    phone: '',          //电话号码\r\n    spin: false,        //加载中\r\n    imageId: null,      //图片的ID值\r\n    petList: [],         //当前这个宠物主人下的所有宠物\r\n    userId: '',          //当前这个宠物主人的userId\r\n    userImageUrl: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    console.log(this.props.history.location.parent);\r\n\r\n    if (this.props.history.location.parent) { //接受入参\r\n      let { parent, pets } = this.props.history.location.parent\r\n      let { firstName, lastName, userId } = parent\r\n      this._getParent(userId)\r\n\r\n      this.setState({\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        petList: pets\r\n\r\n\r\n      })\r\n\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _getParent = (data) => {\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    getUserInfoByUserId(data)\r\n      .then(res => {\r\n        console.log('获取到了用户信息', res);\r\n        if (res.msg === 'success') {\r\n          let { firstName, phone, lastName, email, imageId, url, userImage } = res.data\r\n          let userImageUrl = res.data.userImage ? res.data.userImage.url : null\r\n          firstName = firstName ? firstName : ''\r\n          phone = phone ? phone : ''\r\n          email = email ? email : ''\r\n          lastName = lastName ? lastName : ''\r\n\r\n\r\n          this.setState({\r\n            userImageUrl,\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            email,\r\n            imageId,\r\n            spin: false\r\n\r\n          })\r\n        } else {\r\n          this.setState({\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n\r\n  _petSpecies = () => {\r\n    let { userImageUrl } = this.state\r\n    this.avatar = userImageUrl ? userImageUrl : selectphoto\r\n    let { firstName, lastName } = this.state\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>First Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  firstName: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Last Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  lastName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _petName = () => {\r\n    let { email, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  petList = () => {\r\n\r\n    let { petList } = this.state\r\n    console.log(petList);\r\n    let options = petList.map((item, index) => {\r\n      let { speciesId, url, breedName, petBirthday, gender, name, } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n\r\n      let petAge = moment(new Date()).diff(moment(petBirthday), 'years')\r\n\r\n      if (!url) {\r\n\r\n        switch (speciesId) {\r\n          case 1: images = `url(${cat})`\r\n\r\n            break;\r\n          case 2: images = `url(${dog})`\r\n            break\r\n          default: images = `url(${other})`\r\n            break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `  0 0 ${px(15)}px 0`, }}\r\n          onClick={() => {\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div className=\"itemL\">\r\n              <div\r\n                className='img'\r\n                style={{\r\n                  width: px(50),\r\n                  height: px(50),\r\n                  marginRight: px(20),\r\n                  borderRadius: px(60),\r\n                  backgroundImage: images,\r\n                }}>\r\n              </div>\r\n              <a\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  console.log(item);\r\n                }}\r\n              >{name}</a>\r\n            </div>\r\n            <div className=\"itemC\">\r\n              <p>{`${petAge} years old, ${gender === 0 ? 'Male' : 'Female'}`}</p>\r\n            </div>\r\n            <div className=\"itemR\">\r\n              <p>{`${breedName}`}</p>\r\n            </div>\r\n\r\n\r\n            {/* <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div> */}\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n\r\n\r\n    let liStyle = { backgroundColor: '#fff', marginTop: px(15) }\r\n    if (petList.length > 3) {\r\n      liStyle = { height: px(305), overflowY: 'auto', marginTop: px(15) }\r\n    }\r\n\r\n    return (\r\n      <ul style={liStyle}>\r\n        {options}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"editParent\">\r\n\r\n        <div className=\"heard\">\r\n          <Heard />\r\n        </div>\r\n        <div className=\"editPetInfo_top\" >\r\n          <div className=\"parentInfo\">\r\n            <div className=\"title\" >{`Parent Information`}</div>\r\n            <div className=\"info\">\r\n              {this._petSpecies()}\r\n              {this._petName()}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"pets\">\r\n            <div className=\"petsTitle\">\r\n              <h2 style={{ fontSize: px(24), marginRight: px(40) }}>Pets</h2>\r\n              <div className=\"btn\" style={{ fontSize: px(22) }}>+ Add New Pet</div>\r\n            </div>\r\n            <div className=\"petList\">\r\n              {this.petList()}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"editPetInfo_foot\"  >\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              let { firstName, lastName, email, phone, imageId, userId } = this.state\r\n              console.log({ firstName, lastName, email, phone, imageId });\r\n              let parames = {\r\n                userId,\r\n                email,\r\n                phone,\r\n                firstName,\r\n                lastName,\r\n                imageId\r\n              }\r\n              this.setState({\r\n                spin: true\r\n              })\r\n              message.destroy()\r\n              console.log('修改的宠物信息:', parames);\r\n              updateUserInfo(parames)\r\n                .then(res => {\r\n                  console.log('保存所有信息', res);\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  if (res.flag === true) {\r\n                    this.props.history.goBack()\r\n                  } else {\r\n                    message.error('fail to edit')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  message.error('fail to edit')\r\n                  console.log(err);\r\n                })\r\n\r\n            }}\r\n\r\n          >Edit Profile</div>\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              this.props.history.goBack()\r\n            }}\r\n\r\n          >OK</div>\r\n\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\EzyVet.js",["680","681"],"/**\r\n * @file EzyVet.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/EzyVet 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del, patch } from '../ezyvetApi'\r\nimport { biggieBaseUrl } from '../../config/config'\r\nconst baseURL = `${biggieBaseUrl}/EzyVet`\r\n\r\n\r\n\r\n\r\nexport const ezyvetGetPetLatestExam = (params) => {\r\n    return get(`${baseURL}/ezyvetGetPetLatestExam`, params)\r\n}\r\n\r\n\r\nexport const ezyvetUpdateWeight = (paramId, params) => {\r\n    return patch(`${baseURL}/ezyvetUpdateWeight/${paramId}`, params)\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\experimental\\index.jsx",["682","683","684","685","686","687","688"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport swirl from \"../../../../assets/img/swirl.png\";\nimport BreakSeal from \"../../../../assets/img/Break-Seal.png\";\nimport label from \"../../../../assets/img/label.png\";\nimport Incubator from \"../../../../assets/img/Incubator.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\nconst ExperimentalPage = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  const [value, setValue] = useState(1);\n\n  const cutTitle = () => {\n    switch (value) {\n      case 1:\n        return (<>{`${'Swirl sample in'}`}<br />{`${'solution'}`}</>);\n      case 2:\n        return (<>{`${'Break off stem and'}`}<br />{`${'seal collection tube'}`} </>);\n      case 3:\n        return (<>{`${'Affix label to'}`}<br />{`${'collection tube'}`} </>);\n      case 4:\n        return (<>{`${'Place tube in'}`}<br />{`${'incubator'}`} </>);\n      default:\n        break;\n    }\n  }\n\n  const cutImage = () => {\n    switch (value) {\n      case 1:\n        return <img src={swirl} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 2:\n        return <img src={BreakSeal} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 3:\n        return <img src={label} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 4:\n        return <img src={Incubator} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      default:\n        break;\n    }\n  }\n\n  const onClick = () => {\n    if (value !== 4) {\n      setValue(value + 1)\n    } else {\n      cutPageType('timerPage');\n    }\n  }\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          {cutTitle()}\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {cutImage()}\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>{value !== 4 ? 'Next' : 'Start Timer'}</Button>\n      </div>\n    </>\n  );\n\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(ExperimentalPage);\n",["689","690"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx",["691","692"],"import React, {\r\n} from 'react';\r\nimport { Input } from 'antd';\r\nimport _ from 'lodash';\r\nimport './numericInput.less'\r\nimport { useEffect } from 'react';\r\n\r\nconst NumericInput = (props) => {\r\n    const { value, onChange, getInput, onClick,onKey,index } = props;\r\n\r\n    //输入框输入\r\n    const handleChange = (e) => {\r\n        const { value: inputValue } = e.target;\r\n        const reg = /^-?\\d*(\\.\\d*)?$/;\r\n\r\n        if (reg.test(inputValue) || inputValue === '' || inputValue === '-') {\r\n            onChange(inputValue);\r\n        }\r\n    }\r\n    //失去焦点\r\n    const handleBlur = () => {\r\n        let valueTemp = value;\r\n        if (`${value}`.charAt(`${value}`.length - 1) === '.' || value === '-') {\r\n            valueTemp = value.slice(0, -1);\r\n        }\r\n        onChange(`${valueTemp}`.replace(/0*(\\d+)/, '$1'));\r\n    };\r\n    //输入框点击事件\r\n    const handleClick = () => {\r\n        onClick();\r\n    }\r\n    //修改样式\r\n    let bordercolor = onKey ===index ?'#e1206d':'#d9d9d9';\r\n\r\n\r\n    return (\r\n        <Input\r\n            {...props}\r\n            className='inputNum'\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            maxLength={25}\r\n            ref={getInput}\r\n            onClick={handleClick}\r\n            style={{borderColor:bordercolor}}\r\n        />\r\n    );\r\n\r\n};\r\n\r\nexport default NumericInput;\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\help\\index.jsx",["693","694","695","696","697","698"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Button,\r\n  Upload,\r\n} from \"antd\";\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { px } from '../../utils/px';\r\nimport Heard from '../../utils/heard/Heard'\r\n\r\nimport using from '../../assets/images/using.png'\r\nimport measuring from '../../assets/images/measuring.png'\r\nimport unassigned from '../../assets/images/unassigned.png'\r\nimport adding from '../../assets/images/adding.png'\r\nimport email from '../../assets/images/email.png'\r\nimport phone from '../../assets/images/phone.png'\r\nimport complaint from '../../assets/images/complaint.png'\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\nimport './index.less';\r\nimport { savefeedback } from '../../api';\r\n\r\nlet storage = window.localStorage;\r\nconst Help = () => {\r\n  const [form] = Form.useForm();\r\n  const { TextArea } = Input;\r\n  let list = [\r\n    {\r\n      img: using,\r\n      title: 'Using the app'\r\n    }, {\r\n      img: measuring,\r\n      title: 'Measuring with Mella'\r\n    }, {\r\n      img: unassigned,\r\n      title: 'Unassigned Readings'\r\n    },\r\n    {\r\n      img: adding,\r\n      title: 'Adding New Users'\r\n    },\r\n  ];\r\n  let num = 150 / list.length;\r\n  let mar = num + 'px';\r\n  let history = useHistory();\r\n  const [opinionsVisible, setOpinionsVisible] = useState(false);//弹窗显隐\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [fileList, setFileList] = useState([]);//图片组\r\n\r\n  const changeFenBianLv = (e) => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big');\r\n  }\r\n  //关闭弹窗\r\n  const handleCancel = () => {\r\n    setOpinionsVisible(false);\r\n    setFileList([]);\r\n  };\r\n  //提交bug优化信息\r\n  const onFinish = (e) => {\r\n    setLoading(true);\r\n    let imageIds = []\r\n    _.map(fileList, (item) => {\r\n      imageIds.push(item.response.data.imageId)\r\n    })\r\n    let data = {\r\n      ...e,\r\n      imageIds: _.toString(imageIds),\r\n      userId: storage.userId\r\n    };\r\n    savefeedback(data)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.msg === 'success') {\r\n          setOpinionsVisible(false);\r\n          message.success('Submit Successfully~');\r\n        } else {\r\n          message.success('submit Failure!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.success('submit Failure!');\r\n      })\r\n\r\n\r\n  };\r\n  //提交异常\r\n  const onFinishFailed = (e) => {\r\n    message.error('Please fill in the correct information!');\r\n  };\r\n  /**\r\n * 上传文件前校验\r\n */\r\n  const beforeNormFile = (e) => {\r\n    // 检查图片类型\r\n    const isJPG = e.type === 'image/jpeg';\r\n    const isPNG = e.type === 'image/png';\r\n    const isBMP = e.type === 'image/bmp';\r\n    const isGIF = e.type === 'image/gif';\r\n    const isWEBP = e.type === 'image/webp';\r\n    const isPic = isJPG || isPNG || isBMP || isGIF || isWEBP;\r\n    //文件大小校验\r\n    const isLt2M = e.size / 1024 / 1024 < 4;\r\n    if (!isPic) {\r\n      message.error(`${e.name} not a picture file`);\r\n    } else if (!isLt2M && isPic) {\r\n      message.error(`${e.name}Upload is not allowed if the limit exceeds 4M~`);\r\n    }\r\n    return isPic && isLt2M ? true : Upload.LIST_IGNORE;\r\n  };\r\n  /**\r\n   * Base64\r\n   */\r\n  const getBase64 = (img, callback) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  };\r\n  /**\r\n * 文件上传后处理\r\n */\r\n  const handleChange = async (info) => {\r\n    console.log('info: ', info);\r\n    if (info.file.status === 'done') {\r\n      setFileList(info.fileList);\r\n    }\r\n    if (info.file.status === 'removed') {\r\n      setFileList(info.fileList);\r\n    }\r\n\r\n    // getBase64(info.file.originFileObj, (imageUrl) => {\r\n    //   setLoading(false);\r\n    //   setImageUrl(imageUrl);\r\n    // });\r\n  };\r\n  //添加图片按钮\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        Upload\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n    ipcRenderer.on('changeFenBianLv', changeFenBianLv)\r\n    return (() => {\r\n      let ipcRenderer = window.electron.ipcRenderer\r\n      ipcRenderer.removeListener('changeFenBianLv', changeFenBianLv)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('fileList', fileList);\r\n  }, [fileList])\r\n\r\n  return (\r\n    <>\r\n      <div id=\"help\">\r\n        <div className=\"heard\">\r\n          <Heard />\r\n        </div>\r\n        <div className=\"body\">\r\n          <div className=\"title\">How can we help you?</div>\r\n          <div className=\"input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Describe you issue     &#xe63f;\"\r\n            />\r\n          </div>\r\n          <div className=\"list\">\r\n            <ul>\r\n              {list.map((data, index) => (\r\n                <li key={index}>\r\n                  <>\r\n                    <img src={data.img} alt=\"\" />\r\n                    <p>{data.title}</p>\r\n                  </>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"popularArticles\">\r\n            <div className=\"text\">Popular Articles</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n          <div className=\"popularArticles tutorials\">\r\n            <div className=\"text\">Tutorials</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n          <div className=\"time\">\r\n            <p style={{ fontSize: px(24) }}>Still need help?</p>\r\n            <div className=\"line\" style={{ height: px(6) }}></div>\r\n            <p style={{ fontSize: px(24) }}>Monday - Friday: 9am - 5pm (ET)</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"foot\">\r\n          <div className=\"l\">\r\n            <img src={complaint} alt=\"\" />\r\n            <div className=\"text\">Make a Suggestion</div>\r\n            <p\r\n              onClick={() => { setOpinionsVisible(true) }}\r\n            >\r\n              Submit Opinions\r\n            </p>\r\n          </div>\r\n          <div className=\"l\">\r\n            <img src={email} alt=\"\" />\r\n            <div className=\"text\">Drop us a line</div>\r\n            <a href=\"mailto:support@mella.ai\"\r\n              onClick={(e) => { }}\r\n            >support@mella.ai</a>\r\n          </div>\r\n          <div className=\"l r\">\r\n            <img src={phone} alt=\"\" />\r\n            <div className=\"text\">Bark at Us!</div>\r\n            <div className=\"text\">201.977.6411</div>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          visible={opinionsVisible}\r\n          destroyOnClose={true}\r\n          centered\r\n          maskClosable={false}\r\n          width={700}\r\n          onCancel={handleCancel}\r\n          className=\"opinionsModal\"\r\n          footer={[]}\r\n        >\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n          >\r\n            <Form.Item\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input title!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Clear titles can be verified more quickly\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input description!',\r\n\r\n                },\r\n                {\r\n                  min: 15,\r\n                  message: 'No less than 15 words'\r\n                }\r\n              ]}\r\n            >\r\n              <TextArea\r\n                showCount\r\n                maxLength={500}\r\n                autoSize={{\r\n                  minRows: 3,\r\n                  maxRows: 5,\r\n                }}\r\n                placeholder=\"Please describe your proposed use scenario and your optimization/improvement plan in detail (no less than 15 words)\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"imageIds\"\r\n              label={`${'Related pictures or screenshots' + '(' + fileList.length + '/' + 5 + ')'}`}\r\n            // valuePropName=\"fileList\"\r\n            >\r\n              <Upload\r\n                accept=\"image/*\"\r\n                name=\"img\"\r\n                action=\"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/image/uploadImage\"\r\n                beforeUpload={beforeNormFile}\r\n                onChange={handleChange}\r\n                withCredentials={true}\r\n                listType=\"picture-card\"\r\n              >\r\n                {fileList.length >= 5 ? null : uploadButton}\r\n              </Upload>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <div className='bugSubmitBox'>\r\n                <Button type=\"primary\" htmlType=\"submit\" size='large' loading={loading} block>\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default Help;\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\mellarecord.js",["699"],"/**\r\n * @file mellarecord.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/mellarecord 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del } from '../api'\r\nimport { mellaserverBaseUrl } from '../../config/config'\r\nconst baseURL = `${mellaserverBaseUrl}/mellarecord`\r\n\r\n\r\n/**\r\n * @dec 增加硬件记录并更新ota硬件版本\r\n * @param {*} params \r\n * @returns \r\n */\r\nexport const saveRecord = (params) => {\r\n    return postJson(`${baseURL}/saveRecord`, params)\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dec 获取硬件的最新版本信息\r\n * @param {str} hardWareType 硬件类型 <br/>\r\n * 硬件种类:分成mellahome1,mellahome2,mellapro1(6针机器),mellapro(7针机器)\r\n * @returns \r\n */\r\nexport const getInfoOfLatestDevice = (hardWareType) => {\r\n    return get(`${baseURL}/getInfoOfLatestDevice?type=${hardWareType}`)\r\n}","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\config\\config.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx",["700","701","702","703","704","705","706","707","708","709","710"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\PetsUI.jsx",["711","712","713","714","715","716","717","718","719","720"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\petAndParents\\index.jsx",["721","722","723","724","725"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Select,\r\n} from 'antd'\r\n\r\nimport parent from '../../assets/img/parent.png'\r\nimport dog from '../../assets/images/reddog.png'\r\nimport cat from '../../assets/images/redcat.png'\r\nimport other from '../../assets/images/redother.png'\r\n\r\nimport Heart from '../../utils/heard/Heard'\r\nimport { px } from '../../utils/px';\r\nimport MyModal from '../../utils/myModal/MyModal'\r\n\r\nimport moment from 'moment'\r\n\r\nimport './index.less';\r\nimport { pet_petall } from '../../api'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class PetAndParents extends Component {\r\n\r\n  state = {\r\n    parentList: [],       //宠物主人列表\r\n    petList: [],          //宠物列表\r\n    loading: false,       //加载中\r\n    parentSearchArr: [],  //搜索后的宠物主人列表\r\n    petSearchArr: [],     //搜索后的宠物列表\r\n    searchText: '',        //搜索文本\r\n    parentAndPetList: [],  //宠物主人下的所有宠物,\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    this._getExam()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true,\r\n      spin: false\r\n    })\r\n    let params = {\r\n      offset: 0,\r\n      size: 500,\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n\r\n\r\n    pet_petall(storage.lastOrganization, params)\r\n      .then(res => {\r\n        console.log('查询到的宠物列表', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true) {\r\n          let data = []\r\n          let list = res.data.list\r\n          let owerList = []\r\n          let parentAndPetList = []\r\n          for (let i = 0; i < list.length; i++) {\r\n            let { url, patientId, speciesId, petName, petId, rfid, createTime, userId, firstName, lastName, phone, email, userImageUrl, birthday, breedName, gender } = list[i]\r\n            petName = petName ? petName : (patientId ? patientId : 'unknown')\r\n            let json = {\r\n              insertedAt: createTime,\r\n              name: petName,\r\n              petId,\r\n              rfid,\r\n              url,\r\n              speciesId,\r\n              type: 'pet',\r\n              patientId,\r\n              petBirthday: birthday,\r\n              breedName,\r\n              gender\r\n            }\r\n            data.push(json)\r\n            if (userId) {\r\n              let flogNum = -1\r\n\r\n              for (let i = 0; i < owerList.length; i++) {\r\n                let ower = owerList[i]\r\n                if (ower.userId === userId) {\r\n                  flogNum = i\r\n                  break;\r\n                }\r\n\r\n              }\r\n              if (flogNum === -1) {     //这是一个不在数组里的宠物主人\r\n                let owerJson = {\r\n                  userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\r\n                }\r\n                owerList.push(owerJson)\r\n                let parentAndPetJson = {\r\n                  parent: owerJson,\r\n                  pets: [json]\r\n                }\r\n                // console.log('-----', parentAndPetJson);\r\n                parentAndPetList.push(parentAndPetJson)\r\n              } else {\r\n                parentAndPetList[flogNum].pets.push(json)\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            // if (userId) {\r\n            //   let sameFlog = owerList.some((ower => {\r\n            //     return ower.userId === userId\r\n            //   }))\r\n            //   if (!sameFlog) {\r\n            //     let owerJson = {\r\n            //       userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\r\n            //     }\r\n            //     owerList.push(owerJson)\r\n            //   }\r\n            // }\r\n          }\r\n          // console.log(parentAndPetList);\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            petList: data,\r\n            parentList: owerList,\r\n            parentAndPetList\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  list = (value) => {\r\n    let { petList, parentList, petSearchArr, parentSearchArr, searchText, parentAndPetList } = this.state\r\n    let data = []\r\n    if (value === 'parent') {\r\n      if (searchText.length > 0) {\r\n        data = parentSearchArr\r\n      } else {\r\n        data = parentList\r\n      }\r\n    } else {\r\n      if (searchText.length > 0) {\r\n        data = petSearchArr\r\n      } else {\r\n        data = petList\r\n      }\r\n    }\r\n\r\n    let options = data.map((item, index) => {\r\n      let { speciesId, url, userImageUrl, patientId, petId, name } = item\r\n      let images = null\r\n      if (value === 'parent') {\r\n        images = `url(${userImageUrl}?download=0&width=150)`\r\n        if (!userImageUrl) {\r\n          images = `url(${parent})`\r\n        }\r\n      } else {\r\n        images = `url(${url}?download=0&width=150)`\r\n        if (!url) {\r\n          switch (speciesId) {\r\n            case 1: images = `url(${cat})`\r\n              break;\r\n            case 2: images = `url(${dog})`\r\n              break\r\n            default: images = `url(${other})`\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20) }}\r\n          onClick={() => {\r\n            if (item.type !== 'pet') {\r\n              // console.log('跳转到宠物用户详情页', item,);\r\n              let params = []\r\n              for (let i = 0; i < parentAndPetList.length; i++) {\r\n                if (item.userId === parentAndPetList[i].parent.userId) {\r\n\r\n                  params = parentAndPetList[i]\r\n                  break\r\n                }\r\n\r\n              }\r\n\r\n\r\n              this.props.history.push({ pathname: '/menuOptions/editParent', parent: params })\r\n            } else {\r\n              console.log(item);\r\n              this.props.history.push({ pathname: '/page9', participate: { patientId, petName: name, petId } })\r\n\r\n            }\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div\r\n              className='img'\r\n              style={{\r\n                width: px(50),\r\n                height: px(50),\r\n                marginRight: px(20),\r\n                borderRadius: px(60),\r\n                backgroundImage: images,\r\n              }}>\r\n            </div>\r\n\r\n            <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{name}</p>\r\n            </div>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    let liStyle = { backgroundColor: '#fff', }\r\n    if (this.state.petList.length > 6) {\r\n      liStyle = { height: px(560), overflowY: 'auto' }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='petList'>\r\n        <ul style={liStyle}>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  inputChange = (text) => {\r\n    let search = text.target.value\r\n    this.setState({\r\n      searchText: search\r\n    })\r\n\r\n    let { parentList, petList } = this.state\r\n    console.log(parentList, petList);\r\n    let keyWord = search\r\n\r\n    let parentSearchData = []\r\n    for (let i = 0; i < parentList.length; i++) {\r\n      let petName = parentList[i].name.toLowerCase() || ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        parentSearchData.push(parentList[i])\r\n      }\r\n    }\r\n\r\n    let petSearchData = []\r\n    for (let i = 0; i < petList.length; i++) {\r\n      let petName = petList[i].name ? petList[i].name.toLowerCase() : ''\r\n      let patientId = petList[i].patientId ? petList[i].patientId.toLowerCase() : ''\r\n      let rfid = petList[i].rfid ? petList[i].rfid : ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${rfid}`.indexOf(keyWord) !== -1\r\n      ) {\r\n        petSearchData.push(petList[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      petSearchArr: petSearchData,\r\n      parentSearchArr: parentSearchData\r\n    })\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    let bodyHeight = '92%'\r\n    try {\r\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\r\n    } catch (error) {\r\n\r\n    }\r\n    return (\r\n      <div id=\"PetAndParents\">\r\n        <div className=\"heard\">\r\n          <Heart />\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\r\n          <h1 style={{ fontSize: px(38) }}>{`Pet & Parents Profile Management`}</h1>\r\n          <div className=\"search\">\r\n            <div className=\"searchL\">\r\n              <input\r\n                type=\"text\"\r\n                style={{ paddingLeft: px(25), height: px(34) }}\r\n                placeholder=\"&#xe62c; Search \"\r\n                value={this.state.searchText}\r\n                onChange={(text) => {\r\n                  this.inputChange(text)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\r\n              Search\r\n            </div>\r\n          </div>\r\n          <div className=\"btns\">\r\n            <div className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}>\r\n              + New Parent\r\n            </div>\r\n            <div\r\n              className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}\r\n              onClick={() => {\r\n                this.props.history.push('/pet/doctorAddPet')\r\n              }}\r\n\r\n            >\r\n              + New Pet\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"lists\">\r\n            <div className=\"listsL\">\r\n              {this.list('parent')}\r\n            </div>\r\n\r\n            <div className=\"listsL\">\r\n              {this.list('pet')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <MyModal visible={this.state.loading} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\px.jsx",["726","727","728","729","730","731"],"/**\r\n *\r\n * 获取屏幕分辨率宽高\r\n * let width = parseInt(window.screen.width)\r\n * let height = parseInt(window.screen.height)\r\n *\r\n * 获取应用窗口大小\r\n * document.documentElement.clientHeight\r\n * document.documentElement.clientWidth\r\n */\r\n//\r\n\r\n//\r\n\r\nconst devWidth = 1920;\r\nconst devHeight = 1040;\r\n\r\nlet size = window.screen\r\n// console.log('-------------------------分辨率的大小-----------------', size);\r\nlet width = parseInt(window.screen.availWidth);\r\nlet height = parseInt(window.screen.availHeight);\r\nif (width < height) {\r\n  let a = width;\r\n  width = height;\r\n  height = a;\r\n}\r\n\r\nexport const px = (val) => {\r\n  return val\r\n  // let width = parseInt(window.screen.availWidth);\r\n  // let height = parseInt(window.screen.availHeight);\r\n\r\n\r\n\r\n  // if (width < height) {\r\n  //   let a = width;\r\n  //   width = height;\r\n  //   height = a;\r\n  // }\r\n\r\n  // return parseInt((val / devWidth) * width);\r\n};\r\n\r\nexport const mTop = (val) => {\r\n  return val\r\n  let width = parseInt(window.screen.availWidth);\r\n  let height = parseInt(window.screen.availHeight);\r\n  if (width < height) {\r\n    let a = width;\r\n    width = height;\r\n    height = a;\r\n  }\r\n\r\n  // console.log('mTop',val, parseInt(val / devHeight * height))\r\n  return parseInt((val / devHeight) * height);\r\n};\r\n\r\nexport const fs = (val) => {\r\n  let width = parseInt(window.screen.availWidth);\r\n  let height = parseInt(window.screen.availHeight);\r\n  if (width < height) {\r\n    let a = width;\r\n    width = height;\r\n    height = a;\r\n  }\r\n};\r\nexport const pX = (val) => {\r\n  let windowWidth = document.documentElement.clientWidth;\r\n  // console.log('px', window.screen,)\r\n  return parseInt((windowWidth / 650) * val);\r\n};\r\nexport const MTop = (val) => {\r\n  return val\r\n  let windowWidth = document.documentElement.clientHeight;\r\n  console.log(\"px\", windowWidth);\r\n  return parseInt((windowWidth / 375) * val);\r\n};\r\n\r\nlet windowssize = {\r\n  width: 0,\r\n  height: 0,\r\n};\r\n\r\nexport const win = () => {\r\n  let width = parseInt(window.screen.availWidth);\r\n  let height = parseInt(window.screen.availHeight);\r\n  if (width < height) {\r\n    let a = width;\r\n    width = height;\r\n    height = a;\r\n  }\r\n  // let win1 = JSON.stringify({\r\n  //   width, height\r\n  // })\r\n\r\n  return {\r\n    width: 1920,\r\n    height: 1080,\r\n  };\r\n};\r\n\r\nlet timer = null;\r\nexport const timerFun = () => {\r\n  // console.log(\"jianting1------------\");\r\n  // timer && clearInterval(timer);\r\n  // timer = setInterval(() => {\r\n  //   let width = parseInt(window.screen.availWidth);\r\n  //   let height = parseInt(window.screen.availHeight);\r\n  //   if (width < height) {\r\n  //     let a = width;\r\n  //     width = height;\r\n  //     height = a;\r\n  //   }\r\n  //   // console.log('jianting1', windowssize, { width, height });\r\n  //   if (width !== windowssize.width || height !== windowssize.height) {\r\n  //     windowssize.width = width;\r\n  //     windowssize.height = height;\r\n  //     let ipcRenderer = window.electron.ipcRenderer;\r\n  //     ipcRenderer.send(\"changeFenBianLv\", windowssize);\r\n  //   }\r\n  // }, 2000);\r\n};\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\enrolledPlan\\index.jsx",["732","733","734","735","736"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\timer\\index.jsx",["737","738","739","740","741"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\pet.js",["742","743","744"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\components\\linkEquipment\\index.jsx",["745","746","747","748","749","750"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\settings\\index.jsx",["751","752","753","754"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\current.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\workplace.js",["755"],"/**\r\n * @file pet.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/workplace 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del } from '../api'\r\nimport { mellaserverBaseUrl } from '../../config/config'\r\nconst baseURL = `${mellaserverBaseUrl}/workplace`\r\n\r\n\r\n/**\r\n * \r\n * @dec 根据组织id获取工作场所\r\n * @param {string} organizationId \r\n * @returns \r\n */\r\nexport const listAllWorkplaceByOrganizationId = (organizationId) => {\r\n    return get(`${baseURL}/listAllWorkplaceByOrganizationId/${organizationId}`, '')\r\n}\r\n\r\n\r\n/**\r\n * @dec 添加工作场所\r\n * @param {str} userId 用户id\r\n * @param {*} params \r\n * @returns \r\n */\r\n\r\nexport const addWorkplace = (userId, params) => {\r\n    return postJson(`${baseURL}/addWorkplace${userId}`, params)\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js",[],["756","757"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\organization.js",["758"],"/**\r\n * @file organization.js\r\n * @authoe 胡邵杰\r\n * @dec https://www.mellaserver.com/api/mellaserver/organization 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n *\r\n */\r\nimport { get, postJson, del } from '../api'\r\nimport { mellaserverBaseUrl } from '../../config/config'\r\nconst baseURL = `${mellaserverBaseUrl}/organization`\r\n\r\n\r\n\r\n/**\r\n * @dec  管理员获取组织下的所有医生\r\n * @param {string} lastOrganization 组织id\r\n * @param {*} params\r\n * @returns\r\n */\r\n\r\nexport const listDoctorsByAdmin = (lastOrganization, params) => {\r\n    return get(`${baseURL}/listDoctorsByAdmin/${lastOrganization}`, params)\r\n}\r\n\r\n/**\r\n * @dec 获取所有组织\r\n * @returns\r\n *\r\n */\r\nexport const listAll = () => {\r\n    return get(`${baseURL}/listAll`, '')\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dec 创建一个组织\r\n * @param {str} userId 用户id\r\n * @param {*} params\r\n * @returns\r\n */\r\nexport const addOrganization = (userId, params) => {\r\n    return postJson(`${baseURL}/addOrganization/${userId}`, params)\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\user.js",["759","760","761"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  PageHeader,\r\n  Radio,\r\n  Input,\r\n  Space,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setRulerConnectStatusFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConfirmCountFun,\r\n} from \"../../../store/actions\";\r\nimport _ from \"lodash\";\r\nimport NumericInput from \"./numericInput\";\r\nimport head from \"./../../../assets/img/head.png\";\r\nimport neck from \"./../../../assets/img/neck.png\";\r\nimport upper from \"./../../../assets/img/upper.png\";\r\nimport lower from \"./../../../assets/img/lower.png\";\r\nimport Full from \"./../../../assets/img/Full.png\";\r\nimport body from \"./../../../assets/img/body.png\";\r\nimport catHead from \"./../../../assets/img/catHead.png\";\r\nimport catNeck from \"./../../../assets/img/catNeck.png\";\r\nimport catUpper from \"./../../../assets/img/catUpper.png\";\r\nimport catLower from \"./../../../assets/img/catLower.png\";\r\nimport catFull from \"./../../../assets/img/catFull.png\";\r\nimport catBody from \"./../../../assets/img/catBody.png\";\r\nimport redjinggao from './../../../assets/img/redjinggao.png'\r\nimport \"./scanPet.less\";\r\nimport { px } from \"../../../utils/px\";\r\nimport MyModal from '../../../utils/myModal/MyModal'\r\nimport { updatePetInfo1 } from \"../../../api\";\r\n\r\nconst { Content, Header } = Layout;\r\nconst ScanPet = ({\r\n  petMessage,\r\n  petDetailInfoFun,\r\n  ruleMessage,\r\n  setRulerConfirmCountFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConnectStatusFun\r\n}) => {\r\n  let { petSpeciesBreedId, patientId, petId } = petMessage;\r\n  let { rulerMeasureValue, rulerConfirmCount, rulerUnit, rulerConnectStatus, selectHardwareInfo, receiveBroadcastHardwareInfo } = ruleMessage;\r\n  let storage = window.localStorage;\r\n  const [radioValue, setRadioValue] = useState(\"in\");\r\n  const [inputIndex, setInputIndex] = useState(-1);\r\n  const [visible, setVisible] = useState(false);\r\n  const [carouselIndex, setCarouselIndex] = useState(1);\r\n  const [headValue, setHeadValue] = useState(\"\"); //接收输入框的值\r\n  const [neckValue, setNeckValue] = useState(\"\"); //接收输入框的值\r\n  const [upperValue, setUpperValue] = useState(\"\"); //接收输入框的值\r\n  const [lowerValue, setLowerValue] = useState(\"\"); //接收输入框的值\r\n  const [torsoValue, setTorsoValue] = useState(\"\"); //接收输入框的值\r\n  const [bodyValue, setBodyValue] = useState(\"\"); //接收输入框的值\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectPetDetail, setSelectPetDetail] = useState({})\r\n  let newData = [];\r\n\r\n\r\n  //保存input组\r\n  const inputEl = (data) => {\r\n    newData.push(data);\r\n  };\r\n\r\n  //切换聚焦事件\r\n  const switchFocus = () => {\r\n    let num = inputIndex;\r\n    if (num === 3) {\r\n      setCarouselIndex(2);\r\n    }\r\n    if (num < 5) {\r\n      setInputIndex(num + 1);\r\n    }\r\n  };\r\n\r\n  //结束事件\r\n  const finishScan = () => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Whether To Save Data\",\r\n      top: \"40vh\",\r\n      onOk: saveData,\r\n    });\r\n  };\r\n  //保存数据\r\n  const saveData = () => {\r\n    const newNum = (val) => {\r\n      if (val) {\r\n        if (rulerUnit === \"in\") {\r\n          return parseFloat((parseFloat(val) * 2.54).toFixed(1));\r\n        } else {\r\n          return parseFloat(val);\r\n        }\r\n      } else {\r\n        return \"\";\r\n      }\r\n    };\r\n    let prams = {\r\n      l2rarmDistance: newNum(bodyValue) || null,\r\n      lowerTorsoCircumference: newNum(lowerValue) || null,\r\n      upperTorsoCircumference: newNum(upperValue) || null,\r\n      neckCircumference: newNum(neckValue) || null,\r\n      h2tLength: newNum(headValue) || null,\r\n      torsoLength: newNum(torsoValue) || null,\r\n    };\r\n\r\n    updatePetInfo1(storage.userId, petId, prams)\r\n\r\n      .then((res) => {\r\n        if (res.flag) {\r\n          petDetailInfoFun({\r\n            ...petMessage,\r\n            ...prams,\r\n          });\r\n          message.success(\"Uploaded successfully\");\r\n        } else {\r\n          message.error(\"upload failed\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"update failed\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //判断是猫还是狗还是其他\r\n  const checkPetType = () => {\r\n    //0是猫，1是狗，或者petSpeciesBreedId为空判断图片为狗\r\n    if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\r\n      return 0;\r\n    } else if (\r\n      petSpeciesBreedId === 12001 ||\r\n      _.inRange(petSpeciesBreedId, 136, 456)\r\n    ) {\r\n      return 1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  //切换图片\r\n  const changeImage = () => {\r\n    switch (inputIndex) {\r\n      case 0:\r\n        return checkPetType() === 1 ? (\r\n          <img src={head} />\r\n        ) : (\r\n          <img src={catHead} />\r\n        );\r\n      case 1:\r\n        return checkPetType() === 1 ? (\r\n          <img src={neck} />\r\n        ) : (\r\n          <img src={catNeck} />\r\n        );\r\n      case 2:\r\n        return checkPetType() === 1 ? (\r\n          <img src={upper} />\r\n        ) : (\r\n          <img src={catUpper} />\r\n        );\r\n      case 3:\r\n        return checkPetType() === 1 ? (\r\n          <img src={lower} />\r\n        ) : (\r\n          <img src={catLower} />\r\n        );\r\n      case 4:\r\n        return checkPetType() === 1 ? (\r\n          <img src={Full} />\r\n        ) : (\r\n          <img src={catFull} />\r\n        );\r\n      case 5:\r\n        return checkPetType() === 1 ? (\r\n          <img src={body} />\r\n        ) : (\r\n          <img src={catBody} />\r\n        );\r\n      default:\r\n        return checkPetType() === 1 ? (\r\n          <img src={body} />\r\n        ) : (\r\n          <img src={catBody} />\r\n        );\r\n    }\r\n  };\r\n\r\n  //点击输入框事件\r\n  const clickInput = (index) => {\r\n    setInputIndex(index);\r\n  };\r\n\r\n  //单位转化\r\n  const changeUnit = (value) => {\r\n    if (rulerUnit === \"cm\") {\r\n      return _.round(value * 2.54, 1);\r\n    } else if (rulerUnit === \"in\") {\r\n      return _.floor(_.divide(value, 2.54), 2);\r\n    }\r\n  };\r\n\r\n  //单选框改变事件\r\n  const changeRadio = (e) => {\r\n    setRadioValue(e.target.value);\r\n    setRulerUnitFun(e.target.value);\r\n  };\r\n\r\n  //小圆点点击事件\r\n  const clickPoint = (index) => {\r\n    if (index === 1) {\r\n      setCarouselIndex(1);\r\n    } else {\r\n      setCarouselIndex(2);\r\n    }\r\n  };\r\n  //切换宠物获取到长度信息,对数据根据界面单位进行换算\r\n  const petLengthDataConvert = (val) => {\r\n    if (!val) {\r\n      return \"\";\r\n    } else {\r\n      if (rulerUnit === \"cm\") {\r\n        return val.toFixed(1);\r\n      } else {\r\n        return _.floor(_.divide(val, 2.54), 2);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //监听点击界面中下一步按钮\r\n  useEffect(() => {\r\n    console.log(\"inputIndex\", inputIndex);\r\n\r\n    if (inputIndex < 6 && inputIndex !== -1) {\r\n      newData[inputIndex].focus();\r\n    }\r\n    if (inputIndex === 6) {\r\n      finishScan();\r\n    }\r\n\r\n    return () => { };\r\n  }, [inputIndex]);\r\n\r\n  useEffect(() => {\r\n    if (carouselIndex === 2) {\r\n      setInputIndex(4);\r\n    } else if (carouselIndex === 1) {\r\n      setInputIndex(0);\r\n    }\r\n    return () => { };\r\n  }, [carouselIndex]);\r\n\r\n  //监听用户点击了硬件中的下一步按钮\r\n  useEffect(() => {\r\n    if (inputIndex === -1) {\r\n      setInputIndex(0);\r\n    } else if (inputIndex < 6) {\r\n      setInputIndex(inputIndex + 1);\r\n    }\r\n    if (inputIndex === 3) {\r\n      setCarouselIndex(2);\r\n    }\r\n    return () => { };\r\n  }, [rulerConfirmCount]);\r\n\r\n  // useEffect(() => {\r\n  //   setRulerConnectStatusFun('disconnected')\r\n  // },[])\r\n\r\n\r\n  //监听切换了宠物\r\n  useEffect(() => {\r\n    // if (rulerConnectStatus === 'isMeasuring') {\r\n    //   setShowModal(true);\r\n    // } else {\r\n    setInputIndex(0);\r\n    setCarouselIndex(1);\r\n    let {\r\n      torsoLength,\r\n      l2rarmDistance,\r\n      upperTorsoCircumference,\r\n      lowerTorsoCircumference,\r\n      h2tLength,\r\n      neckCircumference,\r\n    } = petMessage;\r\n\r\n    setBodyValue(petLengthDataConvert(l2rarmDistance));\r\n    setLowerValue(petLengthDataConvert(lowerTorsoCircumference));\r\n    setUpperValue(petLengthDataConvert(upperTorsoCircumference));\r\n    setNeckValue(petLengthDataConvert(neckCircumference));\r\n    setHeadValue(petLengthDataConvert(h2tLength));\r\n    setTorsoValue(petLengthDataConvert(torsoLength));\r\n    // }\r\n    return () => { };\r\n  }, [petId]);\r\n  //监听用户点击了硬件中的下一步按钮和拉动皮尺\r\n  useEffect(() => {\r\n    if (inputIndex < 6) {\r\n      let { deviceType, mac } = selectHardwareInfo\r\n\r\n      if (deviceType === 'tape') {\r\n        if (mac === '45264' || (mac && receiveBroadcastHardwareInfo.deviceType === 'tape' && receiveBroadcastHardwareInfo.macId === mac)) {\r\n\r\n          switch (inputIndex) {\r\n            case 0:\r\n              setHeadValue(rulerMeasureValue);\r\n              break;\r\n            case 1:\r\n              setNeckValue(rulerMeasureValue);\r\n              break;\r\n            case 2:\r\n              setUpperValue(rulerMeasureValue);\r\n              break;\r\n            case 3:\r\n              setLowerValue(rulerMeasureValue);\r\n              break;\r\n            case 4:\r\n              setTorsoValue(rulerMeasureValue);\r\n              break;\r\n            case 5:\r\n              setBodyValue(rulerMeasureValue);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          if (rulerUnit !== radioValue) {\r\n            setRadioValue(rulerUnit);\r\n            setHeadValue(headValue && changeUnit(headValue));\r\n            setNeckValue(neckValue && changeUnit(neckValue));\r\n            setUpperValue(upperValue && changeUnit(upperValue));\r\n            setLowerValue(lowerValue && changeUnit(lowerValue));\r\n            setTorsoValue(torsoValue && changeUnit(torsoValue));\r\n            setBodyValue(bodyValue && changeUnit(bodyValue));\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n  }, [rulerConfirmCount, rulerMeasureValue]);\r\n  // //监听单位改变\r\n  // useEffect(() => {\r\n  //   let { deviceType, mac } = selectHardwareInfo\r\n\r\n  //   console.log('=====', receiveBroadcastHardwareInfo.macId);\r\n  //   if (deviceType === 'tape') {\r\n  //     if (mac === '45264' || (mac && receiveBroadcastHardwareInfo.deviceType === 'tape' && receiveBroadcastHardwareInfo.macId === mac)) {\r\n  //       console.log('初始化====', rulerUnit, radioValue);\r\n\r\n  //       setRadioValue(rulerUnit);\r\n  //       setHeadValue(headValue && changeUnit(headValue));\r\n  //       setNeckValue(neckValue && changeUnit(neckValue));\r\n  //       setUpperValue(upperValue && changeUnit(upperValue));\r\n  //       setLowerValue(lowerValue && changeUnit(lowerValue));\r\n  //       setTorsoValue(torsoValue && changeUnit(torsoValue));\r\n  //       setBodyValue(bodyValue && changeUnit(bodyValue));\r\n\r\n  //     }\r\n  //   }\r\n\r\n  // }, [rulerUnit]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Content className=\"scanContentBox\">\r\n        <div className=\"scanImageBox\">{changeImage()}</div>\r\n        {/*选择单位框*/}\r\n        <Radio.Group\r\n          value={radioValue}\r\n          onChange={changeRadio}\r\n          buttonStyle=\"solid\"\r\n          className=\"selectLengthUnit\"\r\n        >\r\n          <Radio.Button\r\n            value=\"in\"\r\n            style={{\r\n              background: radioValue === \"in\" ? \"#e1206d\" : \"#fff\",\r\n              borderColorRight: radioValue === \"in\" ? \"#e1206d\" : \"#fff\",\r\n              borderRadius: \"20px\",\r\n              borderTopRightRadius: \"0px\",\r\n              borderBottomRightRadius: \"0px\",\r\n            }}\r\n          >\r\n            in\r\n          </Radio.Button>\r\n          <Radio.Button\r\n            value=\"cm\"\r\n            className=\"cmButton\"\r\n            style={{\r\n              background: radioValue === \"cm\" ? \"#e1206d\" : \"#fff\",\r\n              borderColorRight: radioValue === \"cm\" ? \"#e1206d\" : \"#fff\",\r\n              borderRadius: \"20px\",\r\n              borderTopLeftRadius: \"0px\",\r\n              borderBottomLeftRadius: \"0px\",\r\n            }}\r\n          >\r\n            cm\r\n          </Radio.Button>\r\n        </Radio.Group>\r\n        <div className=\"slideshowBox\" style={{ height: px(100) }}>\r\n          <div className=\"scollInputGroup\">\r\n            {/*第一列输入框*/}\r\n            <Input.Group\r\n              className=\"inputGroupItem\"\r\n              style={{ display: carouselIndex === 1 ? \"\" : \"none\" }}\r\n            >\r\n              <Space className=\"inputItemBox\">\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Head Circumference</p>\r\n                  <NumericInput\r\n                    value={headValue}\r\n                    onChange={setHeadValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(0)}\r\n                    index={inputIndex}\r\n                    onKey={0}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Neck Circumference</p>\r\n                  <NumericInput\r\n                    value={neckValue}\r\n                    onChange={setNeckValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(1)}\r\n                    index={inputIndex}\r\n                    onKey={1}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Upper Torso Circumference</p>\r\n                  <NumericInput\r\n                    value={upperValue}\r\n                    onChange={setUpperValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(2)}\r\n                    index={inputIndex}\r\n                    onKey={2}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Lower Torso Circumference</p>\r\n                  <NumericInput\r\n                    value={lowerValue}\r\n                    onChange={setLowerValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(3)}\r\n                    index={inputIndex}\r\n                    onKey={3}\r\n                  />\r\n                </div>\r\n              </Space>\r\n            </Input.Group>\r\n            {/*第二列输入框*/}\r\n            <Input.Group\r\n              className=\"inputGroupItem\"\r\n              style={{ display: carouselIndex === 2 ? \"\" : \"none\" }}\r\n            >\r\n              <Space className=\"inputItemBox\">\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Full Torso Length</p>\r\n                  <NumericInput\r\n                    value={torsoValue}\r\n                    onChange={setTorsoValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(4)}\r\n                    index={inputIndex}\r\n                    onKey={4}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Full Body Length</p>\r\n                  <NumericInput\r\n                    value={bodyValue}\r\n                    onChange={setBodyValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(5)}\r\n                    index={inputIndex}\r\n                    onKey={5}\r\n                  />\r\n                </div>\r\n              </Space>\r\n            </Input.Group>\r\n          </div>\r\n        </div>\r\n\r\n        {/*小圆点 */}\r\n        <div className=\"dotBox\">\r\n          <ul className=\"dotList\">\r\n            <li>\r\n              <Button\r\n                className=\"dotItem\"\r\n                onClick={() => clickPoint(1)}\r\n                style={{\r\n                  background: carouselIndex === 1 ? \"#0a0a0a\" : \"#bdbaba\",\r\n                }}\r\n              >\r\n                1\r\n              </Button>\r\n            </li>\r\n            <li>\r\n              <Button\r\n                className=\"dotItem\"\r\n                onClick={() => clickPoint(2)}\r\n                style={{\r\n                  background: carouselIndex === 2 ? \"#0a0a0a\" : \"#bdbaba\",\r\n                }}\r\n              >\r\n                2\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        {/*下一步 */}\r\n        <div className=\"nextBtnBox\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            className=\"nextBtn\"\r\n            onClick={inputIndex > 4 ? finishScan : switchFocus}\r\n          >\r\n            {inputIndex > 4 ? \"Finish\" : \"Next\"}\r\n          </Button>\r\n        </div>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    ruleMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setRulerConnectStatusFun,\r\n    setRulerMeasureValueFun,\r\n    setRulerUnitFun,\r\n    setRulerConfirmCountFun,\r\n  }\r\n)(ScanPet);\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\linkEquipment\\index.jsx",["795","796","797","798","799"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardAndPetsUI.jsx",["800","801"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\commonFun.js",["802","803","804","805","806","807","808","809","810","811"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\user.js",["812","813"],"/**\r\n * @file user.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/user 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del, patch } from '../ezyvetApi'\r\nimport { melladeskBaseUrl } from '../../config/config'\r\nconst baseURL = `${melladeskBaseUrl}/user`\r\n\r\n\r\n/**\r\n * @dec 邀请别人加入组织\r\n * @param {*} userId 用户id\r\n * @param {*} organizationId 组织id\r\n * @param {*} parames \r\n * @returns \r\n */\r\nexport const inviteUserByEmail = (userId, organizationId, parames) => {\r\n    return postJson(`${baseURL}/inviteUserByEmail/${userId}/${organizationId}`, parames)\r\n}\r\n\r\nexport const updateUserInfo = (parames) => {\r\n    return postJson(`${baseURL}/updateUserInfo`, parames)\r\n}\r\n\r\n\r\n\r\n\r\nexport const loginWithQRcode = (QRToken) => {\r\n    return get(`${baseURL}/loginWithQRcode/${QRToken}`, '')\r\n}\r\n\r\n\r\nexport const getLoginQRcode = () => {\r\n    return get(`${baseURL}/getLoginQRcode`, '')\r\n}\r\n\r\n\r\n\r\nexport const resendDeskRegistEmail = (logupEmailCode, params) => {\r\n    return get(`${baseURL}/resendDeskRegistEmail/${logupEmailCode}`, params)\r\n}\r\n\r\n\r\nexport const deskRegistAWSSNS = (params) => {\r\n    return postJson(`${baseURL}/deskRegistAWSSNS`, params)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\index.jsx",["814","815","816","817","818","819","820","821"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx",[],["822","823"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx",["824","825"],"\r\n/**\r\n * \r\n * @param {boolean} visible 控制modal框是否显示\r\n * @param {element} element 自定义modal框里面的内容，默认是组件是加载中。。。\r\n * @returns {element} 这是自己写的一个modal框\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport './myModal.less'\r\nimport { px, pX, MTop, mTop } from '../px'\r\n\r\nclass MyModal extends Component {\r\n\r\n  render () {\r\n    let { visible, element, text } = this.props\r\n    // console.log('---上层组件传来的值---', this.props);\r\n\r\n    if (visible) {\r\n      let body = element ? element :\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n          <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n            <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n          </div>\r\n          <p>\r\n            {text ? text : 'loading...'}\r\n          </p>\r\n        </div>\r\n      return (\r\n        <div className=\"myModal\">\r\n          {body}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (null)\r\n    }\r\n\r\n  }\r\n}\r\n\r\nMyModal.propTypes = {\r\n  visible: PropTypes.bool,\r\n  element: PropTypes.element,\r\n  text: PropTypes.string\r\n\r\n}\r\nMyModal.defaultProps = {\r\n  visible: false,\r\n  text: 'loading...'\r\n}\r\n\r\nexport default MyModal","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\index.jsx",["826","827","828"],"import React, { useEffect, useState } from \"react\";\nimport { Layout } from \"antd\";\n\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\nimport LinkEquipment from \"./components/linkEquipment\";\n\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../store/actions\";\nimport PropTypes from 'prop-types';\n\nimport \"./index.less\";\n\nconst { Content, Header } = Layout;\nconst MabelPage = ({ petMessage, hardwareMessage, bodyHeight }) => {\n\n  return (\n    <Layout className=\"mabelPageBox\" style={{ height: bodyHeight }}>\n      <div className=\"headerContentBox\" style={{ background: \"#fff\", position: 'relative' }}>\n        <div style={{ height: '100%' }}>\n          <HeaderItem />\n        </div>\n      </div>\n      {_.isEmpty(petMessage) ? (\n        <div className=\"chackPatientBox\">\n          <p className=\"chackPatientTitle\">Select a patient</p>\n        </div>\n      ) : (\n        <Content className={\"mabelPagecontentBox\"}>\n          <LinkEquipment />\n        </Content>\n      )}\n    </Layout>\n  );\n};\n\nMabelPage.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(MabelPage);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js",["829"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetModal\\index.jsx",["830","831","832","833"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardListModal.jsx",["834"],"import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nimport deviceBiggie from \"./../../assets/img/deviceIcon-biggie.png\";\r\nimport nextImg from \"./../../assets/img/nextImg.png\";\r\nimport dui from \"./../../assets/img/dui.png\";\r\nimport deviceMella from \"./../../assets/img/deviceIcon-mella.png\";\r\nimport deviceRfid from \"./../../assets/img/deviceIcon-rfid.png\";\r\nimport deviceMaeBowl from \"./../../assets/img/deviceIcon-maeBowl.png\";\r\nimport deviceTape from \"./../../assets/img/deviceIcon-tape.png\";\r\nimport deivceAdd from \"./../../assets/img/hardList-add.png\";\r\nimport scales from \"./../../assets/img/scales.png\";\r\n\r\nimport { px } from \"../../utils/px\";\r\nimport { compareObject } from \"../../utils/current\";\r\nimport electronStore from \"../../utils/electronStore\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectHardwareInfoFun,\r\n  selectHardwareModalShowFun,\r\n  setMenuNum,\r\n  setSelectHardwareType\r\n} from \"./../../store/actions\";\r\n\r\nimport \"./mainbody.less\";\r\n\r\nlet storage = window.localStorage;\r\nconst HardAndPetsUI = ({\r\n  hardwareList,\r\n  selectHardwareType,\r\n  selectHardwareInfoFun,\r\n  selectHardwareModalShowFun,\r\n  setInfo,\r\n  setMenuNum,\r\n  hardwareMessage,\r\n  setSelectHardwareType\r\n}) => {\r\n  let { selectHardwareInfo } = hardwareMessage;\r\n  //定义数组hardwareList\r\n  const [hardwareListArr, setHardwareList] = useState([]);\r\n  //定义选择的硬件详细信息\r\n  const [selectHardwareDetail, setSelectHardwareDetail] = useState({});\r\n\r\n  let options = hardwareListArr.map((item, index) => {\r\n    let { name, mac, deviceType } = item;\r\n    let deviceTypeStr = \"\",\r\n      img = null;\r\n    switch (deviceType) {\r\n      case \"biggie\":\r\n        deviceTypeStr = \"Biggie Pro Scale\";\r\n        img = <img src={deviceBiggie} alt=\"\" width={px(75)} />;\r\n        break;\r\n      case \"rfid\":\r\n        deviceTypeStr = \"RFID\";\r\n        img = <img src={deviceRfid} alt=\"\" width={px(40)} />;\r\n        break;\r\n      case \"tape\":\r\n        deviceTypeStr = \"Tabby\";\r\n        img = <img src={deviceTape} alt=\"\" width={px(50)} />;\r\n        break;\r\n      case \"maeBowl\":\r\n        deviceTypeStr = \"MaeBowl\";\r\n        img = <img src={deviceMaeBowl} alt=\"\" width={px(40)} />;\r\n\r\n        break;\r\n      case \"otterEQ\":\r\n        deviceTypeStr = \"Otter EQ\";\r\n\r\n        break;\r\n      case \"mellaPro\":\r\n        deviceTypeStr = \"Mella Pro\";\r\n        img = <img src={deviceMella} alt=\"\" width={px(20)} />;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    //判断对象是否相等\r\n\r\n    let isEqual = compareObject(item, selectHardwareDetail);\r\n    // console.log(\"判断两个对象是否相同\", isEqual, item, selectHardwareDetail);\r\n    return (\r\n      <li\r\n        key={`${index}`}\r\n        onClick={() => {\r\n          setSelectHardwareDetail(item);\r\n          electronStore.set(\r\n            `${storage.lastOrganization}-${storage.userId}-${deviceType}-selectDeviceInfo`,\r\n            item\r\n          );\r\n          selectHardwareInfoFun(item);\r\n          setInfo && setInfo(item);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"hardListInfo\"\r\n          style={{ paddingTop: px(15), paddingBottom: px(15) }}\r\n        >\r\n          <div className=\"deviceL\">\r\n            <div\r\n              className=\"hardIcon\"\r\n              style={{ marginLeft: px(3), marginRight: px(3), width: px(75) }}\r\n            >\r\n              {img}\r\n            </div>\r\n            <div className=\"deviceInfo\">\r\n              <div className=\"deviceName\">{`Device Name: ${name}`}</div>\r\n              <div className=\"deviceName\">{deviceTypeStr}</div>\r\n              <div className=\"deviceName\">{`SN: ${mac}`}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"deviceR\" style={{ marginRight: px(20) }}>\r\n            <img src={nextImg} alt=\"\" width={px(13)} />\r\n            {isEqual && (\r\n              <div\r\n                className=\"seleIcon\"\r\n                style={{ width: px(18), height: px(18), top: px(-30) }}\r\n              >\r\n                <img src={dui} alt=\"\" width={px(12)} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  const otherItems = () => {\r\n    let deviceType = selectHardwareDetail.deviceType;\r\n    let isBiggie = deviceType === \"biggie\",\r\n      deviceTypeStr = \"\";\r\n    switch (deviceType) {\r\n      case \"biggie\":\r\n        deviceTypeStr = \"Biggie\";\r\n        break;\r\n      case \"rfid\":\r\n        deviceTypeStr = \"RFID\";\r\n        break;\r\n      case \"tape\":\r\n        deviceTypeStr = \"Tabby\";\r\n\r\n        break;\r\n      case \"maeBowl\":\r\n        deviceTypeStr = \"MaeBowl\";\r\n\r\n        break;\r\n      case \"otterEQ\":\r\n        deviceTypeStr = \"Otter EQ\";\r\n        break;\r\n      case \"mellaPro\":\r\n        deviceTypeStr = \"Mella\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // console.log(\"selectHardwareDetail\", selectHardwareDetail);\r\n    return (\r\n      <div>\r\n        {isBiggie && (\r\n          <div\r\n            className=\"addNewDevice\"\r\n            style={{ paddingTop: px(10), paddingBottom: px(10) }}\r\n            onClick={() => setMenuNum(\"CombineScales\")}\r\n          >\r\n            <div\r\n              className=\"addNewDeviceText\"\r\n              style={{ paddingLeft: px(25) }}\r\n            >{`Combine Scales`}</div>\r\n            <div className=\"addNewDeviceImg\">\r\n              <img\r\n                src={scales}\r\n                alt=\"\"\r\n                width={px(30)}\r\n                style={{ marginRight: px(20) }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div\r\n          className=\"addNewDevice\"\r\n          style={{ paddingTop: px(10), paddingBottom: px(10) }}\r\n          onClick={() => {\r\n            setMenuNum(\"1\");\r\n            setSelectHardwareType('add');\r\n          }}\r\n        >\r\n          <div\r\n            className=\"addNewDeviceText\"\r\n            style={{ paddingLeft: px(25), }}\r\n\r\n\r\n          >{`Add New ${deviceTypeStr}`}</div>\r\n          <div className=\"addNewDeviceImg\">\r\n            <img\r\n              src={deivceAdd}\r\n              alt=\"\"\r\n              width={px(30)}\r\n              style={{ marginRight: px(20) }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //根据设备类型获取到此类型下的所有硬件,并用来展示\r\n    for (let i = 0; i < hardwareList.length; i++) {\r\n      const element = hardwareList[i];\r\n      if (element.type === selectHardwareType) {\r\n        let list = element.devices || [];\r\n        setHardwareList(list);\r\n        //获取被选中的硬件的详细信息\r\n        let selectHardwareInfoData = selectHardwareInfo || {};\r\n        if (selectHardwareInfoData === {}) {\r\n          let selectHardwareInfoData = list[0] || {};\r\n          setSelectHardwareDetail(selectHardwareInfoData);\r\n        } else {\r\n          let sameFlag = false;\r\n          for (let i = 0; i < list.length; i++) {\r\n            const element = list[i];\r\n            if (\r\n              element.name === selectHardwareInfoData.name &&\r\n              element.mac === selectHardwareInfoData.mac\r\n            ) {\r\n              setSelectHardwareDetail(selectHardwareInfoData);\r\n              sameFlag = true;\r\n              break;\r\n            }\r\n          }\r\n          console.log(\"sameFlag\", sameFlag);\r\n          if (!sameFlag) {\r\n            console.log(\"设置了默认值\");\r\n            let selectHardwareInfoData = list[0] || {};\r\n            setSelectHardwareDetail(selectHardwareInfoData);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }, [selectHardwareType]);\r\n\r\n  return (\r\n    <div\r\n      className=\"hardList\"\r\n      style={{ top: px(90), zIndex: 999 }}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        selectHardwareModalShowFun(false);\r\n      }}\r\n    >\r\n      <ul>{options}</ul>\r\n      {otherItems()}\r\n    </div>\r\n  );\r\n};\r\n\r\nHardAndPetsUI.propTypes = {\r\n  setInfo: PropTypes.func,\r\n};\r\n//默认值\r\nHardAndPetsUI.defaultProps = {\r\n  setInfo: () => { },\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    hardwareList: state.hardwareReduce.hardwareList,\r\n    userMessage: state.userReduce,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  { selectHardwareInfoFun, selectHardwareModalShowFun, setMenuNum, setSelectHardwareType }\r\n)(HardAndPetsUI);\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\vetSpire.js",["835","836"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\VetSpire.js",["837","838","839"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrganization\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\petall.js",["840","841"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\api.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrg\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx",["842"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\ezyvetApi.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\team\\index.jsx",["843","844","845"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signUpVerifyEmail\\index.jsx",["846"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx",["883","884","885","886","887","888"],"import React, { useEffect, useState } from \"react\";\nimport { Layout, message } from \"antd\";\n\nimport { connect } from \"react-redux\";\nimport { setBiggieConnectStatusFun } from \"../../store/actions\";\n\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\nimport HistoryTable from \"../../components/historyTable\";\nimport LinkEquipment from \"./components/linkEquipment\";\nimport Biggie from \"./components/Biggie\";\n\nimport { px } from \"../../utils/px\";\nimport MyModal from \"../../utils/myModal/MyModal\";\n\nimport PropTypes from 'prop-types';\nimport _ from \"lodash\";\n\nimport \"./index.less\";\nimport { ezyvetGetPetLatestExam, ezyvetUpdateWeight, vetspireGetPetLatestExam, vetspireUpdateWeight } from \"../../api\";\nimport { addClamantPetExam } from '../../api/mellaserver/exam'\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nlet storage = window.localStorage;\n\nconst BiggirPage = ({\n  hardwareReduce,\n  setBiggieConnectStatusFun,\n  petReduce,\n  bodyHeight,\n}) => {\n  let { petDetailInfo } = petReduce;\n  let { biggieBodyWeight } = hardwareReduce;\n  //定义体重值 体脂值 体重单位 连接状态\n  const [weight, setWeight] = useState(0);\n  const [saveNum, setSaveNum] = useState(0);\n  const [fat, setFat] = useState(0);\n  const [unit, setUnit] = useState(\"kg\");\n  const [connectStatus, setConnectStatus] = useState(\"disconnected\");\n  const [isSavePMS, setIsSavePMS] = useState(false);\n  const [saveLoad, setSaveLoad] = useState(false);\n  const [isHaveSaveBtn, setIsHaveSaveBtn] = useState(true);\n\n  const _saveWeight = () => {\n    let params = {\n      petId: petDetailInfo.petId,\n      doctorId: storage.userId,\n      weight: weight,\n      memo: \"\",\n      fat,\n      bodyConditionScore: null,\n    };\n    setSaveLoad(true);\n    console.log(\"---体重保存入参--：\", params);\n    addClamantPetExam(params)\n      .then((res) => {\n        setSaveLoad(false);\n        if (res.flag === true) {\n          switch (storage.lastOrganization) {\n            case '3'://vetspire\n              updataWeightVetspire()\n              break;\n            case '4'://ezyVet\n              updataWeightEzyvet()\n              break;\n            default:\n              message.success(\"Data successfully saved in Mella\");\n              break;\n          }\n          setSaveNum(saveNum + 1);\n          setIsHaveSaveBtn(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaveLoad(false);\n      });\n  };\n  const updataWeightVetspire = () => {\n    let datas = {\n      APIkey: storage.connectionKey,\n      patientId: petDetailInfo.patientId,\n    }\n    vetspireGetPetLatestExam(datas)\n      .then(res => {\n        if (res.flag) {\n          let data = res.data.encounters[0].vitals\n          let encountersId = data.id\n          let params = {\n            vitalId: encountersId,\n            APIkey: storage.connectionKey,\n            weight: unit === 'kg' ? (weight * 2.2046).toFixed(1) : weight\n          }\n          vetspireUpdateWeight(params)\n            .then(res => {\n              if (res.flag) {\n                message.success('Data successfully saved in Vetspire')\n              } else {\n                message.error('Data failed saved in Vetspire')\n              }\n            })\n            .catch(err => {\n              message.error('Data failed saved in Vetspire')\n            })\n        } else {\n          message.error('Failed to obtain the latest medical record')\n        }\n      })\n      .catch(err => {\n        message.error('Failed to obtain the latest medical record')\n      })\n\n  }\n  const updataWeightEzyvet = () => {\n    let params = {\n      id: petDetailInfo.patientId\n    }\n\n\n    ezyvetGetPetLatestExam(params)\n      .then(res => {\n        if (res.code === 10004 && res.msg === 'ezyvet token失效') {\n          storage.connectionKey = res.newToken;\n          reUpdataWeightEzyvet();\n          return\n        }\n        if (res.flag && res.data && res.data.items.length > 0) {\n          let data = res.data.items[0]\n          let { consult_id } = data\n          if (!consult_id) {\n            message.error('Failed to obtain the latest medical record, the data is saved in Mella')\n            return\n          }\n          let paramId = data.id\n          let parames1 = {\n            consult_id,\n            weight: unit === 'kg' ? weight : (weight / 2.2046).toFixed(2)\n          }\n\n          ezyvetUpdateWeight(paramId, parames1)\n            .then(res => {\n              if (res.code === 10004 && res.msg === 'ezyvet token失效') {\n                storage.connectionKey = res.newToken;\n                reUpdataWeightEzyvet();\n                return\n              }\n              if (res.flag) {\n                message.success('Data successfully saved in EzyVet')\n              } else {\n                message.error('Data failed saved in EzyVet')\n              }\n            })\n            .catch(err => {\n              message.error('Data failed saved in EzyVet')\n            })\n        } else {\n          message.error('Failed to obtain the latest medical record')\n        }\n      })\n      .catch(err => {\n        message.error('Failed to obtain the latest medical record')\n      })\n  }\n\n  const reUpdataWeightEzyvet = () => {\n    let params = {\n      id: petDetailInfo.patientId\n    }\n\n    ezyvetGetPetLatestExam(params)\n      .then(res => {\n        if (res.flag && res.data && res.data.items.length > 0) {\n          let data = res.data.items[0]\n          let { consult_id } = data\n          if (!consult_id) {\n            message.error('Failed to obtain the latest medical record, the data is saved in Mella')\n            return\n          }\n          let paramId = data.id\n          let parames1 = {\n            consult_id,\n            weight: unit === 'kg' ? weight : (weight / 2.2046).toFixed(2)\n          }\n          ezyvetUpdateWeight(paramId, parames1)\n            .then(res => {\n              if (res.flag) {\n                message.success('Data successfully saved in EzyVet')\n              } else {\n                message.error('Data failed saved in EzyVet')\n              }\n            })\n            .catch(err => {\n              message.error('Data failed saved in EzyVet')\n            })\n        } else {\n          message.error('Failed to obtain the latest medical record')\n        }\n      })\n      .catch(err => {\n        message.error('Failed to obtain the latest medical record')\n      })\n  }\n\n  useEffect(() => {\n    let isSave = storage.connectionKey ? false : true;\n    setIsSavePMS(isSave);\n    return () => { };\n  }, []);\n  useEffect(() => {\n    let {\n      biggieConnectStatus,\n      biggieBodyFat,\n      biggieBodyWeight,\n      biggieUnit,\n      biggieSameWeightCount,\n    } = hardwareReduce;\n    setConnectStatus(biggieConnectStatus);\n    setFat(biggieBodyFat);\n    setUnit(biggieUnit);\n    if (biggieUnit === \"lb\") {\n      biggieBodyWeight = biggieBodyWeight * 2;\n    }\n    setWeight(biggieBodyWeight);\n    if (biggieSameWeightCount === 6) {\n      let ipcRenderer = window.require(\"electron\").ipcRenderer;\n      ipcRenderer.send(\"keyboardWriting\", weight);\n    }\n\n    return () => { };\n  }, [hardwareReduce]);\n\n  useEffect(() => {\n    setIsHaveSaveBtn(true);\n    return () => { };\n  }, [biggieBodyWeight]);\n  //宠物变了,要设置为未连接\n  useEffect(() => {\n    setBiggieConnectStatusFun(\"disconnected\")\n  }, [petDetailInfo]);\n\n  return (\n    <>\n      <Layout className=\"biggiePage\" style={{ height: bodyHeight }}>\n        <div className=\"headerContentBox\" style={{ background: \"#fff\", position: 'relative' }}>\n          <div style={{ height: '100%' }}>\n            <HeaderItem />\n          </div>\n        </div>\n        <Content className=\"biggieContentBox\">\n          {_.isEmpty(petDetailInfo) ? (\n            <>\n              <div className=\"chackPatientBox\">\n                <p className=\"chackPatientTitle\">Select a patient</p>\n              </div>\n            </>\n          ) : connectStatus === \"isMeasuring\" ? (\n            <div className=\"biggbody\">\n              <div className=\"biggieTopBox\">\n                <Biggie\n                  weight={weight}\n                  bodyFat={fat}\n                  score={5}\n                  impedance={fat}\n                  isIbs={unit === \"lb\"}\n                  onPress={_saveWeight}\n                  discardOnPress={() =>\n                    setBiggieConnectStatusFun(\"disconnected\")\n                  }\n                  issave={isSavePMS}\n                  isHaveSaveBtn={isHaveSaveBtn}\n                />\n              </div>\n            </div>\n          ) : (\n            <LinkEquipment />\n          )}\n          {\n            !_.isEmpty(petDetailInfo) && (\n              <div className=\"bottomContent\">\n                <div className=\"biggeTitleBox\">\n                  <p className=\"biggeTitle\">History</p>\n                </div>\n                <HistoryTable saveNum={saveNum} tableColumnType='weight' />\n              </div>\n            )\n          }\n        </Content>\n      </Layout>\n      <MyModal visible={saveLoad} />\n    </>\n  );\n};\n\nBiggirPage.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n\nexport default connect(\n  (state) => ({\n    hardwareReduce: state.hardwareReduce,\n    petReduce: state.petReduce,\n  }),\n  {\n    setBiggieConnectStatusFun,\n  }\n)(BiggirPage);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\joinOrganizationByOption\\index.jsx",["889","890","891","892","893"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["894","895","896","897","898","899","900","901","902","903","904","905","906"],{"ruleId":"907","severity":1,"message":"908","line":19,"column":10,"nodeType":"909","messageId":"910","endLine":19,"endColumn":18},{"ruleId":"907","severity":1,"message":"911","line":24,"column":7,"nodeType":"909","messageId":"910","endLine":24,"endColumn":13},{"ruleId":"907","severity":1,"message":"912","line":348,"column":11,"nodeType":"909","messageId":"910","endLine":348,"endColumn":17},{"ruleId":"907","severity":1,"message":"913","line":416,"column":19,"nodeType":"909","messageId":"910","endLine":416,"endColumn":26},{"ruleId":"907","severity":1,"message":"914","line":417,"column":9,"nodeType":"909","messageId":"910","endLine":417,"endColumn":13},{"ruleId":"915","severity":1,"message":"916","line":582,"column":15,"nodeType":"917","endLine":582,"endColumn":50},{"ruleId":"907","severity":1,"message":"918","line":22,"column":9,"nodeType":"909","messageId":"910","endLine":22,"endColumn":15},{"ruleId":"907","severity":1,"message":"919","line":45,"column":11,"nodeType":"909","messageId":"910","endLine":45,"endColumn":17},{"ruleId":"907","severity":1,"message":"920","line":45,"column":19,"nodeType":"909","messageId":"910","endLine":45,"endColumn":24},{"ruleId":"907","severity":1,"message":"921","line":61,"column":9,"nodeType":"909","messageId":"910","endLine":61,"endColumn":22},{"ruleId":"907","severity":1,"message":"922","line":144,"column":18,"nodeType":"909","messageId":"910","endLine":144,"endColumn":27},{"ruleId":"907","severity":1,"message":"923","line":144,"column":29,"nodeType":"909","messageId":"910","endLine":144,"endColumn":37},{"ruleId":"924","severity":1,"message":"925","line":544,"column":19,"nodeType":"917","endLine":551,"endColumn":61},{"ruleId":"915","severity":1,"message":"916","line":559,"column":19,"nodeType":"917","endLine":567,"endColumn":30},{"ruleId":"926","replacedBy":"927"},{"ruleId":"928","replacedBy":"929"},{"ruleId":"907","severity":1,"message":"930","line":2,"column":16,"nodeType":"909","messageId":"910","endLine":2,"endColumn":23},{"ruleId":"907","severity":1,"message":"931","line":2,"column":25,"nodeType":"909","messageId":"910","endLine":2,"endColumn":31},{"ruleId":"907","severity":1,"message":"932","line":2,"column":33,"nodeType":"909","messageId":"910","endLine":2,"endColumn":38},{"ruleId":"907","severity":1,"message":"933","line":35,"column":9,"nodeType":"909","messageId":"910","endLine":35,"endColumn":16},{"ruleId":"907","severity":1,"message":"911","line":36,"column":7,"nodeType":"909","messageId":"910","endLine":36,"endColumn":13},{"ruleId":"907","severity":1,"message":"934","line":40,"column":7,"nodeType":"909","messageId":"910","endLine":40,"endColumn":17},{"ruleId":"907","severity":1,"message":"935","line":92,"column":10,"nodeType":"909","messageId":"910","endLine":92,"endColumn":19},{"ruleId":"907","severity":1,"message":"936","line":92,"column":21,"nodeType":"909","messageId":"910","endLine":92,"endColumn":33},{"ruleId":"907","severity":1,"message":"937","line":124,"column":10,"nodeType":"909","messageId":"910","endLine":124,"endColumn":19},{"ruleId":"907","severity":1,"message":"938","line":206,"column":13,"nodeType":"909","messageId":"910","endLine":206,"endColumn":20},{"ruleId":"924","severity":1,"message":"925","line":799,"column":17,"nodeType":"917","endLine":799,"endColumn":62},{"ruleId":"924","severity":1,"message":"925","line":804,"column":17,"nodeType":"917","endLine":804,"endColumn":65},{"ruleId":"915","severity":1,"message":"916","line":859,"column":15,"nodeType":"917","endLine":865,"endColumn":16},{"ruleId":"915","severity":1,"message":"916","line":868,"column":15,"nodeType":"917","endLine":874,"endColumn":16},{"ruleId":"924","severity":1,"message":"925","line":967,"column":17,"nodeType":"917","endLine":967,"endColumn":62},{"ruleId":"924","severity":1,"message":"925","line":971,"column":15,"nodeType":"917","endLine":971,"endColumn":64},{"ruleId":"915","severity":1,"message":"916","line":1088,"column":13,"nodeType":"917","endLine":1092,"endColumn":14},{"ruleId":"915","severity":1,"message":"916","line":1169,"column":15,"nodeType":"917","endLine":1177,"endColumn":16},{"ruleId":"915","severity":1,"message":"916","line":1192,"column":13,"nodeType":"917","endLine":1192,"endColumn":76},{"ruleId":"915","severity":1,"message":"916","line":1263,"column":15,"nodeType":"917","endLine":1271,"endColumn":16},{"ruleId":"915","severity":1,"message":"916","line":1295,"column":15,"nodeType":"917","endLine":1299,"endColumn":16},{"ruleId":"939","severity":1,"message":"940","line":1351,"column":6,"nodeType":"941","endLine":1351,"endColumn":8,"suggestions":"942"},{"ruleId":"939","severity":1,"message":"943","line":1355,"column":6,"nodeType":"941","endLine":1355,"endColumn":32,"suggestions":"944"},{"ruleId":"924","severity":1,"message":"925","line":1377,"column":15,"nodeType":"917","endLine":1377,"endColumn":59},{"ruleId":"924","severity":1,"message":"925","line":1552,"column":19,"nodeType":"917","endLine":1552,"endColumn":54},{"ruleId":"924","severity":1,"message":"925","line":1554,"column":19,"nodeType":"917","endLine":1554,"endColumn":53},{"ruleId":"939","severity":1,"message":"945","line":276,"column":6,"nodeType":"941","endLine":276,"endColumn":8,"suggestions":"946"},{"ruleId":"939","severity":1,"message":"947","line":317,"column":6,"nodeType":"941","endLine":317,"endColumn":36,"suggestions":"948"},{"ruleId":"926","replacedBy":"949"},{"ruleId":"928","replacedBy":"950"},{"ruleId":"926","replacedBy":"951"},{"ruleId":"928","replacedBy":"952"},{"ruleId":"907","severity":1,"message":"953","line":3,"column":3,"nodeType":"909","messageId":"910","endLine":3,"endColumn":8},{"ruleId":"907","severity":1,"message":"954","line":9,"column":3,"nodeType":"909","messageId":"910","endLine":9,"endColumn":8},{"ruleId":"907","severity":1,"message":"955","line":10,"column":3,"nodeType":"909","messageId":"910","endLine":10,"endColumn":7},{"ruleId":"907","severity":1,"message":"956","line":71,"column":5,"nodeType":"909","messageId":"910","endLine":71,"endColumn":22},{"ruleId":"907","severity":1,"message":"957","line":75,"column":5,"nodeType":"909","messageId":"910","endLine":75,"endColumn":23},{"ruleId":"958","severity":1,"message":"959","line":133,"column":61,"nodeType":"960","messageId":"961","endLine":133,"endColumn":62},{"ruleId":"958","severity":1,"message":"959","line":141,"column":45,"nodeType":"960","messageId":"961","endLine":141,"endColumn":46},{"ruleId":"907","severity":1,"message":"962","line":190,"column":9,"nodeType":"909","messageId":"910","endLine":190,"endColumn":12},{"ruleId":"939","severity":1,"message":"963","line":294,"column":6,"nodeType":"941","endLine":294,"endColumn":13,"suggestions":"964"},{"ruleId":"939","severity":1,"message":"965","line":316,"column":6,"nodeType":"941","endLine":316,"endColumn":26,"suggestions":"966"},{"ruleId":"907","severity":1,"message":"967","line":9,"column":10,"nodeType":"909","messageId":"910","endLine":9,"endColumn":13},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"969","line":9,"column":30,"nodeType":"909","messageId":"910","endLine":9,"endColumn":35},{"ruleId":"939","severity":1,"message":"970","line":133,"column":6,"nodeType":"941","endLine":133,"endColumn":8,"suggestions":"971"},{"ruleId":"926","replacedBy":"972"},{"ruleId":"928","replacedBy":"973"},{"ruleId":"939","severity":1,"message":"970","line":85,"column":6,"nodeType":"941","endLine":85,"endColumn":8,"suggestions":"974"},{"ruleId":null,"fatal":true,"severity":2,"message":"975","line":7,"column":8},{"ruleId":"926","replacedBy":"976"},{"ruleId":"928","replacedBy":"977"},{"ruleId":"907","severity":1,"message":"978","line":8,"column":10,"nodeType":"909","messageId":"910","endLine":8,"endColumn":16},{"ruleId":"907","severity":1,"message":"979","line":13,"column":5,"nodeType":"909","messageId":"910","endLine":13,"endColumn":12},{"ruleId":"907","severity":1,"message":"980","line":19,"column":5,"nodeType":"909","messageId":"910","endLine":19,"endColumn":10},{"ruleId":"981","severity":1,"message":"982","line":165,"column":9,"nodeType":"983","messageId":"984","endLine":183,"endColumn":10},{"ruleId":"926","replacedBy":"985"},{"ruleId":"928","replacedBy":"986"},{"ruleId":"907","severity":1,"message":"987","line":23,"column":10,"nodeType":"909","messageId":"910","endLine":23,"endColumn":28},{"ruleId":"907","severity":1,"message":"988","line":26,"column":10,"nodeType":"909","messageId":"910","endLine":26,"endColumn":12},{"ruleId":"907","severity":1,"message":"989","line":29,"column":26,"nodeType":"909","messageId":"910","endLine":29,"endColumn":32},{"ruleId":"907","severity":1,"message":"990","line":29,"column":34,"nodeType":"909","messageId":"910","endLine":29,"endColumn":39},{"ruleId":"939","severity":1,"message":"991","line":116,"column":6,"nodeType":"941","endLine":116,"endColumn":8,"suggestions":"992"},{"ruleId":"924","severity":1,"message":"925","line":168,"column":19,"nodeType":"917","endLine":168,"endColumn":47},{"ruleId":"926","replacedBy":"993"},{"ruleId":"928","replacedBy":"994"},{"ruleId":"907","severity":1,"message":"995","line":1,"column":38,"nodeType":"909","messageId":"910","endLine":1,"endColumn":44},{"ruleId":"907","severity":1,"message":"931","line":3,"column":3,"nodeType":"909","messageId":"910","endLine":3,"endColumn":9},{"ruleId":"907","severity":1,"message":"996","line":4,"column":3,"nodeType":"909","messageId":"910","endLine":4,"endColumn":11},{"ruleId":"907","severity":1,"message":"954","line":5,"column":3,"nodeType":"909","messageId":"910","endLine":5,"endColumn":8},{"ruleId":"907","severity":1,"message":"997","line":7,"column":3,"nodeType":"909","messageId":"910","endLine":7,"endColumn":6},{"ruleId":"907","severity":1,"message":"988","line":20,"column":10,"nodeType":"909","messageId":"910","endLine":20,"endColumn":12},{"ruleId":"907","severity":1,"message":"956","line":48,"column":9,"nodeType":"909","messageId":"910","endLine":48,"endColumn":26},{"ruleId":"907","severity":1,"message":"998","line":48,"column":28,"nodeType":"909","messageId":"910","endLine":48,"endColumn":46},{"ruleId":"907","severity":1,"message":"999","line":48,"column":48,"nodeType":"909","messageId":"910","endLine":48,"endColumn":64},{"ruleId":"907","severity":1,"message":"1000","line":50,"column":16,"nodeType":"909","messageId":"910","endLine":50,"endColumn":20},{"ruleId":"907","severity":1,"message":"1001","line":56,"column":5,"nodeType":"909","messageId":"910","endLine":56,"endColumn":10},{"ruleId":"907","severity":1,"message":"1002","line":62,"column":10,"nodeType":"909","messageId":"910","endLine":62,"endColumn":18},{"ruleId":"907","severity":1,"message":"1003","line":62,"column":20,"nodeType":"909","messageId":"910","endLine":62,"endColumn":31},{"ruleId":"907","severity":1,"message":"1004","line":73,"column":20,"nodeType":"909","messageId":"910","endLine":73,"endColumn":31},{"ruleId":"907","severity":1,"message":"1005","line":76,"column":10,"nodeType":"909","messageId":"910","endLine":76,"endColumn":16},{"ruleId":"924","severity":1,"message":"925","line":144,"column":11,"nodeType":"917","endLine":151,"endColumn":13},{"ruleId":"924","severity":1,"message":"925","line":156,"column":13,"nodeType":"917","endLine":156,"endColumn":33},{"ruleId":"924","severity":1,"message":"925","line":204,"column":18,"nodeType":"917","endLine":204,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":206,"column":18,"nodeType":"917","endLine":206,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":208,"column":18,"nodeType":"917","endLine":208,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":210,"column":18,"nodeType":"917","endLine":210,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":234,"column":11,"nodeType":"917","endLine":241,"endColumn":13},{"ruleId":"924","severity":1,"message":"925","line":246,"column":13,"nodeType":"917","endLine":246,"endColumn":63},{"ruleId":"939","severity":1,"message":"1006","line":381,"column":6,"nodeType":"941","endLine":381,"endColumn":15,"suggestions":"1007"},{"ruleId":"939","severity":1,"message":"1008","line":389,"column":6,"nodeType":"941","endLine":389,"endColumn":8,"suggestions":"1009"},{"ruleId":"907","severity":1,"message":"1010","line":2,"column":10,"nodeType":"909","messageId":"910","endLine":2,"endColumn":23},{"ruleId":"907","severity":1,"message":"918","line":29,"column":9,"nodeType":"909","messageId":"910","endLine":29,"endColumn":15},{"ruleId":"981","severity":1,"message":"982","line":99,"column":5,"nodeType":"983","messageId":"984","endLine":105,"endColumn":6},{"ruleId":"1011","severity":1,"message":"1012","line":112,"column":41,"nodeType":"1013","messageId":"1014","endLine":112,"endColumn":43},{"ruleId":"1011","severity":1,"message":"1012","line":150,"column":41,"nodeType":"1013","messageId":"1014","endLine":150,"endColumn":43},{"ruleId":"907","severity":1,"message":"1015","line":257,"column":11,"nodeType":"909","messageId":"910","endLine":257,"endColumn":21},{"ruleId":"907","severity":1,"message":"1016","line":257,"column":49,"nodeType":"909","messageId":"910","endLine":257,"endColumn":55},{"ruleId":"924","severity":1,"message":"925","line":507,"column":15,"nodeType":"917","endLine":507,"endColumn":63},{"ruleId":"924","severity":1,"message":"925","line":537,"column":15,"nodeType":"917","endLine":537,"endColumn":63},{"ruleId":"981","severity":1,"message":"982","line":558,"column":5,"nodeType":"983","messageId":"984","endLine":561,"endColumn":6},{"ruleId":"981","severity":1,"message":"982","line":562,"column":5,"nodeType":"983","messageId":"984","endLine":565,"endColumn":6},{"ruleId":"907","severity":1,"message":"1017","line":678,"column":32,"nodeType":"909","messageId":"910","endLine":678,"endColumn":41},{"ruleId":"907","severity":1,"message":"1018","line":681,"column":26,"nodeType":"909","messageId":"910","endLine":681,"endColumn":29},{"ruleId":"907","severity":1,"message":"1019","line":749,"column":13,"nodeType":"909","messageId":"910","endLine":749,"endColumn":23},{"ruleId":"907","severity":1,"message":"1020","line":749,"column":25,"nodeType":"909","messageId":"910","endLine":749,"endColumn":33},{"ruleId":"907","severity":1,"message":"1021","line":749,"column":35,"nodeType":"909","messageId":"910","endLine":749,"endColumn":41},{"ruleId":"907","severity":1,"message":"1022","line":749,"column":43,"nodeType":"909","messageId":"910","endLine":749,"endColumn":51},{"ruleId":"907","severity":1,"message":"1023","line":749,"column":53,"nodeType":"909","messageId":"910","endLine":749,"endColumn":70},{"ruleId":"907","severity":1,"message":"1015","line":796,"column":29,"nodeType":"909","messageId":"910","endLine":796,"endColumn":39},{"ruleId":"907","severity":1,"message":"1024","line":796,"column":79,"nodeType":"909","messageId":"910","endLine":796,"endColumn":84},{"ruleId":"907","severity":1,"message":"1025","line":796,"column":117,"nodeType":"909","messageId":"910","endLine":796,"endColumn":139},{"ruleId":"926","replacedBy":"1026"},{"ruleId":"928","replacedBy":"1027"},{"ruleId":"926","replacedBy":"1028"},{"ruleId":"928","replacedBy":"1029"},{"ruleId":"939","severity":1,"message":"1030","line":137,"column":8,"nodeType":"941","endLine":137,"endColumn":10,"suggestions":"1031"},{"ruleId":"926","replacedBy":"1032"},{"ruleId":"928","replacedBy":"1033"},{"ruleId":"907","severity":1,"message":"1034","line":2,"column":10,"nodeType":"909","messageId":"910","endLine":2,"endColumn":15},{"ruleId":"907","severity":1,"message":"1035","line":2,"column":17,"nodeType":"909","messageId":"910","endLine":2,"endColumn":27},{"ruleId":"907","severity":1,"message":"931","line":23,"column":8,"nodeType":"909","messageId":"910","endLine":23,"endColumn":14},{"ruleId":"1011","severity":1,"message":"1012","line":225,"column":41,"nodeType":"1013","messageId":"1014","endLine":225,"endColumn":43},{"ruleId":"1011","severity":1,"message":"1012","line":237,"column":47,"nodeType":"1013","messageId":"1014","endLine":237,"endColumn":49},{"ruleId":"907","severity":1,"message":"1036","line":451,"column":23,"nodeType":"909","messageId":"910","endLine":451,"endColumn":28},{"ruleId":"907","severity":1,"message":"1037","line":830,"column":11,"nodeType":"909","messageId":"910","endLine":830,"endColumn":18},{"ruleId":"907","severity":1,"message":"1038","line":832,"column":11,"nodeType":"909","messageId":"910","endLine":832,"endColumn":15},{"ruleId":"907","severity":1,"message":"1039","line":850,"column":9,"nodeType":"909","messageId":"910","endLine":850,"endColumn":18},{"ruleId":"907","severity":1,"message":"1040","line":938,"column":65,"nodeType":"909","messageId":"910","endLine":938,"endColumn":76},{"ruleId":"907","severity":1,"message":"931","line":2,"column":10,"nodeType":"909","messageId":"910","endLine":2,"endColumn":16},{"ruleId":"907","severity":1,"message":"1041","line":2,"column":36,"nodeType":"909","messageId":"910","endLine":2,"endColumn":44},{"ruleId":"907","severity":1,"message":"1042","line":3,"column":10,"nodeType":"909","messageId":"910","endLine":3,"endColumn":22},{"ruleId":"907","severity":1,"message":"1043","line":24,"column":18,"nodeType":"909","messageId":"910","endLine":24,"endColumn":24},{"ruleId":"907","severity":1,"message":"1044","line":28,"column":10,"nodeType":"909","messageId":"910","endLine":28,"endColumn":17},{"ruleId":"907","severity":1,"message":"1045","line":28,"column":19,"nodeType":"909","messageId":"910","endLine":28,"endColumn":29},{"ruleId":"924","severity":1,"message":"925","line":63,"column":16,"nodeType":"917","endLine":63,"endColumn":41},{"ruleId":"924","severity":1,"message":"925","line":65,"column":16,"nodeType":"917","endLine":65,"endColumn":41},{"ruleId":"924","severity":1,"message":"925","line":67,"column":16,"nodeType":"917","endLine":67,"endColumn":41},{"ruleId":"924","severity":1,"message":"925","line":69,"column":16,"nodeType":"917","endLine":69,"endColumn":41},{"ruleId":"939","severity":1,"message":"1046","line":75,"column":3,"nodeType":"909","endLine":75,"endColumn":12,"suggestions":"1047"},{"ruleId":"926","replacedBy":"1048"},{"ruleId":"928","replacedBy":"1049"},{"ruleId":"907","severity":1,"message":"1050","line":2,"column":27,"nodeType":"909","messageId":"910","endLine":2,"endColumn":36},{"ruleId":"907","severity":1,"message":"1051","line":7,"column":14,"nodeType":"909","messageId":"910","endLine":7,"endColumn":18},{"ruleId":"926","replacedBy":"1052"},{"ruleId":"928","replacedBy":"1053"},{"ruleId":"907","severity":1,"message":"921","line":57,"column":9,"nodeType":"909","messageId":"910","endLine":57,"endColumn":22},{"ruleId":"907","severity":1,"message":"921","line":87,"column":9,"nodeType":"909","messageId":"910","endLine":87,"endColumn":22},{"ruleId":"1011","severity":1,"message":"1012","line":199,"column":41,"nodeType":"1013","messageId":"1014","endLine":199,"endColumn":43},{"ruleId":"1011","severity":1,"message":"1012","line":212,"column":47,"nodeType":"1013","messageId":"1014","endLine":212,"endColumn":49},{"ruleId":"907","severity":1,"message":"1036","line":417,"column":23,"nodeType":"909","messageId":"910","endLine":417,"endColumn":28},{"ruleId":"926","replacedBy":"1054"},{"ruleId":"928","replacedBy":"1055"},{"ruleId":"907","severity":1,"message":"1050","line":1,"column":27,"nodeType":"909","messageId":"910","endLine":1,"endColumn":36},{"ruleId":"907","severity":1,"message":"1051","line":8,"column":10,"nodeType":"909","messageId":"910","endLine":8,"endColumn":14},{"ruleId":"907","severity":1,"message":"1056","line":8,"column":20,"nodeType":"909","messageId":"910","endLine":8,"endColumn":24},{"ruleId":"907","severity":1,"message":"1057","line":18,"column":7,"nodeType":"909","messageId":"910","endLine":18,"endColumn":14},{"ruleId":"907","severity":1,"message":"1058","line":63,"column":13,"nodeType":"909","messageId":"910","endLine":63,"endColumn":19},{"ruleId":"907","severity":1,"message":"1059","line":67,"column":13,"nodeType":"909","messageId":"910","endLine":67,"endColumn":20},{"ruleId":"915","severity":1,"message":"916","line":155,"column":9,"nodeType":"917","endLine":171,"endColumn":10},{"ruleId":"981","severity":1,"message":"982","line":219,"column":15,"nodeType":"983","messageId":"984","endLine":238,"endColumn":16},{"ruleId":"926","replacedBy":"1060"},{"ruleId":"928","replacedBy":"1061"},{"ruleId":"907","severity":1,"message":"1062","line":9,"column":3,"nodeType":"909","messageId":"910","endLine":9,"endColumn":8},{"ruleId":"907","severity":1,"message":"1063","line":34,"column":10,"nodeType":"909","messageId":"910","endLine":34,"endColumn":16},{"ruleId":"907","severity":1,"message":"1064","line":36,"column":10,"nodeType":"909","messageId":"910","endLine":36,"endColumn":17},{"ruleId":"907","severity":1,"message":"1065","line":38,"column":10,"nodeType":"909","messageId":"910","endLine":38,"endColumn":18},{"ruleId":"939","severity":1,"message":"1066","line":92,"column":6,"nodeType":"941","endLine":92,"endColumn":8,"suggestions":"1067"},{"ruleId":"926","replacedBy":"1068"},{"ruleId":"928","replacedBy":"1069"},{"ruleId":"924","severity":1,"message":"925","line":34,"column":11,"nodeType":"917","endLine":37,"endColumn":13},{"ruleId":"924","severity":1,"message":"925","line":41,"column":13,"nodeType":"917","endLine":44,"endColumn":15},{"ruleId":"924","severity":1,"message":"925","line":49,"column":11,"nodeType":"917","endLine":52,"endColumn":13},{"ruleId":"924","severity":1,"message":"925","line":59,"column":11,"nodeType":"917","endLine":62,"endColumn":13},{"ruleId":"907","severity":1,"message":"953","line":2,"column":10,"nodeType":"909","messageId":"910","endLine":2,"endColumn":15},{"ruleId":"907","severity":1,"message":"988","line":15,"column":10,"nodeType":"909","messageId":"910","endLine":15,"endColumn":12},{"ruleId":"907","severity":1,"message":"1070","line":28,"column":8,"nodeType":"909","messageId":"910","endLine":28,"endColumn":14},{"ruleId":"907","severity":1,"message":"1043","line":31,"column":18,"nodeType":"909","messageId":"910","endLine":31,"endColumn":24},{"ruleId":"939","severity":1,"message":"1071","line":76,"column":6,"nodeType":"941","endLine":76,"endColumn":21,"suggestions":"1072"},{"ruleId":"924","severity":1,"message":"925","line":120,"column":17,"nodeType":"917","endLine":120,"endColumn":74},{"ruleId":"924","severity":1,"message":"925","line":138,"column":21,"nodeType":"917","endLine":138,"endColumn":69},{"ruleId":"924","severity":1,"message":"925","line":158,"column":25,"nodeType":"917","endLine":165,"endColumn":27},{"ruleId":"907","severity":1,"message":"1073","line":4,"column":3,"nodeType":"909","messageId":"910","endLine":4,"endColumn":10},{"ruleId":"907","severity":1,"message":"1074","line":39,"column":9,"nodeType":"909","messageId":"910","endLine":39,"endColumn":20},{"ruleId":"907","severity":1,"message":"918","line":7,"column":9,"nodeType":"909","messageId":"910","endLine":7,"endColumn":15},{"ruleId":"907","severity":1,"message":"919","line":20,"column":11,"nodeType":"909","messageId":"910","endLine":20,"endColumn":17},{"ruleId":"907","severity":1,"message":"920","line":20,"column":19,"nodeType":"909","messageId":"910","endLine":20,"endColumn":24},{"ruleId":"907","severity":1,"message":"921","line":109,"column":9,"nodeType":"909","messageId":"910","endLine":109,"endColumn":22},{"ruleId":"939","severity":1,"message":"1075","line":170,"column":6,"nodeType":"941","endLine":170,"endColumn":23,"suggestions":"1076"},{"ruleId":"926","replacedBy":"1077"},{"ruleId":"928","replacedBy":"1078"},{"ruleId":"907","severity":1,"message":"1050","line":1,"column":17,"nodeType":"909","messageId":"910","endLine":1,"endColumn":26},{"ruleId":"907","severity":1,"message":"995","line":1,"column":38,"nodeType":"909","messageId":"910","endLine":1,"endColumn":44},{"ruleId":"907","severity":1,"message":"1079","line":2,"column":10,"nodeType":"909","messageId":"910","endLine":2,"endColumn":16},{"ruleId":"907","severity":1,"message":"1080","line":2,"column":26,"nodeType":"909","messageId":"910","endLine":2,"endColumn":31},{"ruleId":"907","severity":1,"message":"1070","line":17,"column":8,"nodeType":"909","messageId":"910","endLine":17,"endColumn":14},{"ruleId":"926","replacedBy":"1081"},{"ruleId":"928","replacedBy":"1082"},{"ruleId":"907","severity":1,"message":"933","line":21,"column":9,"nodeType":"909","messageId":"910","endLine":21,"endColumn":16},{"ruleId":"907","severity":1,"message":"918","line":22,"column":9,"nodeType":"909","messageId":"910","endLine":22,"endColumn":15},{"ruleId":"907","severity":1,"message":"911","line":23,"column":7,"nodeType":"909","messageId":"910","endLine":23,"endColumn":13},{"ruleId":"907","severity":1,"message":"979","line":26,"column":5,"nodeType":"909","messageId":"910","endLine":26,"endColumn":12},{"ruleId":"907","severity":1,"message":"1083","line":27,"column":5,"nodeType":"909","messageId":"910","endLine":27,"endColumn":17},{"ruleId":"907","severity":1,"message":"962","line":28,"column":5,"nodeType":"909","messageId":"910","endLine":28,"endColumn":8},{"ruleId":"907","severity":1,"message":"962","line":86,"column":61,"nodeType":"909","messageId":"910","endLine":86,"endColumn":64},{"ruleId":"907","severity":1,"message":"1084","line":86,"column":66,"nodeType":"909","messageId":"910","endLine":86,"endColumn":75},{"ruleId":"915","severity":1,"message":"916","line":271,"column":15,"nodeType":"917","endLine":277,"endColumn":16},{"ruleId":"907","severity":1,"message":"1085","line":9,"column":15,"nodeType":"909","messageId":"910","endLine":9,"endColumn":23},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"1050","line":1,"column":17,"nodeType":"909","messageId":"910","endLine":1,"endColumn":26},{"ruleId":"907","severity":1,"message":"995","line":1,"column":38,"nodeType":"909","messageId":"910","endLine":1,"endColumn":44},{"ruleId":"907","severity":1,"message":"1079","line":2,"column":10,"nodeType":"909","messageId":"910","endLine":2,"endColumn":16},{"ruleId":"907","severity":1,"message":"1080","line":2,"column":26,"nodeType":"909","messageId":"910","endLine":2,"endColumn":31},{"ruleId":"907","severity":1,"message":"1062","line":2,"column":33,"nodeType":"909","messageId":"910","endLine":2,"endColumn":38},{"ruleId":"907","severity":1,"message":"1070","line":17,"column":8,"nodeType":"909","messageId":"910","endLine":17,"endColumn":14},{"ruleId":"907","severity":1,"message":"1086","line":18,"column":8,"nodeType":"909","messageId":"910","endLine":18,"endColumn":9},{"ruleId":"926","replacedBy":"1087"},{"ruleId":"928","replacedBy":"1088"},{"ruleId":"907","severity":1,"message":"1086","line":4,"column":8,"nodeType":"909","messageId":"910","endLine":4,"endColumn":9},{"ruleId":"907","severity":1,"message":"1050","line":6,"column":10,"nodeType":"909","messageId":"910","endLine":6,"endColumn":19},{"ruleId":"907","severity":1,"message":"1089","line":50,"column":7,"nodeType":"909","messageId":"910","endLine":50,"endColumn":10},{"ruleId":"907","severity":1,"message":"1057","line":51,"column":7,"nodeType":"909","messageId":"910","endLine":51,"endColumn":14},{"ruleId":"907","severity":1,"message":"1090","line":54,"column":10,"nodeType":"909","messageId":"910","endLine":54,"endColumn":18},{"ruleId":"907","severity":1,"message":"1091","line":54,"column":20,"nodeType":"909","messageId":"910","endLine":54,"endColumn":31},{"ruleId":"907","severity":1,"message":"1092","line":121,"column":9,"nodeType":"909","messageId":"910","endLine":121,"endColumn":18},{"ruleId":"958","severity":1,"message":"959","line":291,"column":59,"nodeType":"960","messageId":"961","endLine":291,"endColumn":60},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"1050","line":1,"column":17,"nodeType":"909","messageId":"910","endLine":1,"endColumn":26},{"ruleId":"907","severity":1,"message":"953","line":2,"column":10,"nodeType":"909","messageId":"910","endLine":2,"endColumn":15},{"ruleId":"907","severity":1,"message":"1093","line":4,"column":8,"nodeType":"909","messageId":"910","endLine":4,"endColumn":23},{"ruleId":"907","severity":1,"message":"1086","line":15,"column":8,"nodeType":"909","messageId":"910","endLine":15,"endColumn":9},{"ruleId":"907","severity":1,"message":"1094","line":16,"column":8,"nodeType":"909","messageId":"910","endLine":16,"endColumn":20},{"ruleId":"907","severity":1,"message":"1095","line":19,"column":9,"nodeType":"909","messageId":"910","endLine":19,"endColumn":16},{"ruleId":"907","severity":1,"message":"1043","line":19,"column":18,"nodeType":"909","messageId":"910","endLine":19,"endColumn":24},{"ruleId":"907","severity":1,"message":"998","line":22,"column":9,"nodeType":"909","messageId":"910","endLine":22,"endColumn":27},{"ruleId":"907","severity":1,"message":"1096","line":23,"column":10,"nodeType":"909","messageId":"910","endLine":23,"endColumn":17},{"ruleId":"907","severity":1,"message":"1097","line":23,"column":19,"nodeType":"909","messageId":"910","endLine":23,"endColumn":29},{"ruleId":"924","severity":1,"message":"925","line":28,"column":11,"nodeType":"917","endLine":28,"endColumn":36},{"ruleId":"907","severity":1,"message":"1070","line":23,"column":8,"nodeType":"909","messageId":"910","endLine":23,"endColumn":14},{"ruleId":"907","severity":1,"message":"1098","line":46,"column":10,"nodeType":"909","messageId":"910","endLine":46,"endColumn":23},{"ruleId":"907","severity":1,"message":"1099","line":48,"column":10,"nodeType":"909","messageId":"910","endLine":48,"endColumn":22},{"ruleId":"907","severity":1,"message":"1100","line":49,"column":10,"nodeType":"909","messageId":"910","endLine":49,"endColumn":23},{"ruleId":"907","severity":1,"message":"1101","line":50,"column":10,"nodeType":"909","messageId":"910","endLine":50,"endColumn":21},{"ruleId":"907","severity":1,"message":"1102","line":52,"column":10,"nodeType":"909","messageId":"910","endLine":52,"endColumn":24},{"ruleId":"907","severity":1,"message":"1103","line":52,"column":26,"nodeType":"909","messageId":"910","endLine":52,"endColumn":43},{"ruleId":"981","severity":1,"message":"982","line":180,"column":5,"nodeType":"983","messageId":"984","endLine":201,"endColumn":6},{"ruleId":"907","severity":1,"message":"1104","line":257,"column":21,"nodeType":"909","messageId":"910","endLine":257,"endColumn":31},{"ruleId":"939","severity":1,"message":"1030","line":356,"column":6,"nodeType":"941","endLine":356,"endColumn":8,"suggestions":"1105"},{"ruleId":"907","severity":1,"message":"918","line":21,"column":9,"nodeType":"909","messageId":"910","endLine":21,"endColumn":15},{"ruleId":"907","severity":1,"message":"919","line":37,"column":11,"nodeType":"909","messageId":"910","endLine":37,"endColumn":17},{"ruleId":"907","severity":1,"message":"920","line":37,"column":19,"nodeType":"909","messageId":"910","endLine":37,"endColumn":24},{"ruleId":"907","severity":1,"message":"921","line":53,"column":9,"nodeType":"909","messageId":"910","endLine":53,"endColumn":22},{"ruleId":"907","severity":1,"message":"1106","line":72,"column":11,"nodeType":"909","messageId":"910","endLine":72,"endColumn":19},{"ruleId":"907","severity":1,"message":"1107","line":15,"column":7,"nodeType":"909","messageId":"910","endLine":15,"endColumn":15},{"ruleId":"907","severity":1,"message":"1108","line":18,"column":5,"nodeType":"909","messageId":"910","endLine":18,"endColumn":9},{"ruleId":"1109","severity":1,"message":"1110","line":46,"column":3,"nodeType":"1111","messageId":"1112","endLine":55,"endColumn":47},{"ruleId":"1109","severity":1,"message":"1110","line":74,"column":3,"nodeType":"1111","messageId":"1112","endLine":76,"endColumn":46},{"ruleId":"907","severity":1,"message":"1113","line":79,"column":5,"nodeType":"909","messageId":"910","endLine":79,"endColumn":16},{"ruleId":"907","severity":1,"message":"1114","line":102,"column":5,"nodeType":"909","messageId":"910","endLine":102,"endColumn":10},{"ruleId":"907","severity":1,"message":"1050","line":1,"column":17,"nodeType":"909","messageId":"910","endLine":1,"endColumn":26},{"ruleId":"907","severity":1,"message":"995","line":1,"column":38,"nodeType":"909","messageId":"910","endLine":1,"endColumn":44},{"ruleId":"907","severity":1,"message":"1095","line":26,"column":11,"nodeType":"909","messageId":"910","endLine":26,"endColumn":18},{"ruleId":"907","severity":1,"message":"1043","line":26,"column":20,"nodeType":"909","messageId":"910","endLine":26,"endColumn":26},{"ruleId":"907","severity":1,"message":"1057","line":27,"column":7,"nodeType":"909","messageId":"910","endLine":27,"endColumn":14},{"ruleId":"907","severity":1,"message":"1050","line":1,"column":17,"nodeType":"909","messageId":"910","endLine":1,"endColumn":26},{"ruleId":"907","severity":1,"message":"1115","line":1,"column":28,"nodeType":"909","messageId":"910","endLine":1,"endColumn":36},{"ruleId":"907","severity":1,"message":"995","line":1,"column":38,"nodeType":"909","messageId":"910","endLine":1,"endColumn":44},{"ruleId":"907","severity":1,"message":"1070","line":11,"column":8,"nodeType":"909","messageId":"910","endLine":11,"endColumn":14},{"ruleId":"907","severity":1,"message":"1086","line":12,"column":8,"nodeType":"909","messageId":"910","endLine":12,"endColumn":9},{"ruleId":"907","severity":1,"message":"1085","line":9,"column":15,"nodeType":"909","messageId":"910","endLine":9,"endColumn":23},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"969","line":9,"column":30,"nodeType":"909","messageId":"910","endLine":9,"endColumn":35},{"ruleId":"907","severity":1,"message":"995","line":1,"column":38,"nodeType":"909","messageId":"910","endLine":1,"endColumn":44},{"ruleId":"907","severity":1,"message":"1080","line":2,"column":18,"nodeType":"909","messageId":"910","endLine":2,"endColumn":23},{"ruleId":"907","severity":1,"message":"955","line":2,"column":25,"nodeType":"909","messageId":"910","endLine":2,"endColumn":29},{"ruleId":"907","severity":1,"message":"1086","line":17,"column":8,"nodeType":"909","messageId":"910","endLine":17,"endColumn":9},{"ruleId":"907","severity":1,"message":"1057","line":22,"column":7,"nodeType":"909","messageId":"910","endLine":22,"endColumn":14},{"ruleId":"1116","severity":1,"message":"1117","line":44,"column":17,"nodeType":"1118","messageId":"1119","endLine":44,"endColumn":70},{"ruleId":"907","severity":1,"message":"918","line":20,"column":9,"nodeType":"909","messageId":"910","endLine":20,"endColumn":15},{"ruleId":"907","severity":1,"message":"921","line":64,"column":9,"nodeType":"909","messageId":"910","endLine":64,"endColumn":22},{"ruleId":"907","severity":1,"message":"1120","line":336,"column":9,"nodeType":"909","messageId":"910","endLine":336,"endColumn":25},{"ruleId":"907","severity":1,"message":"1121","line":357,"column":7,"nodeType":"909","messageId":"910","endLine":357,"endColumn":17},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"926","replacedBy":"1122"},{"ruleId":"928","replacedBy":"1123"},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"1085","line":9,"column":15,"nodeType":"909","messageId":"910","endLine":9,"endColumn":23},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"969","line":9,"column":30,"nodeType":"909","messageId":"910","endLine":9,"endColumn":35},{"ruleId":"907","severity":1,"message":"995","line":1,"column":38,"nodeType":"909","messageId":"910","endLine":1,"endColumn":44},{"ruleId":"907","severity":1,"message":"1124","line":5,"column":3,"nodeType":"909","messageId":"910","endLine":5,"endColumn":7},{"ruleId":"907","severity":1,"message":"1125","line":6,"column":3,"nodeType":"909","messageId":"910","endLine":6,"endColumn":13},{"ruleId":"907","severity":1,"message":"1041","line":13,"column":3,"nodeType":"909","messageId":"910","endLine":13,"endColumn":11},{"ruleId":"907","severity":1,"message":"1126","line":39,"column":8,"nodeType":"909","messageId":"910","endLine":39,"endColumn":18},{"ruleId":"907","severity":1,"message":"1127","line":42,"column":8,"nodeType":"909","messageId":"910","endLine":42,"endColumn":15},{"ruleId":"907","severity":1,"message":"1043","line":45,"column":18,"nodeType":"909","messageId":"910","endLine":45,"endColumn":24},{"ruleId":"907","severity":1,"message":"1017","line":55,"column":28,"nodeType":"909","messageId":"910","endLine":55,"endColumn":37},{"ruleId":"907","severity":1,"message":"1128","line":56,"column":58,"nodeType":"909","messageId":"910","endLine":56,"endColumn":76},{"ruleId":"907","severity":1,"message":"1129","line":60,"column":10,"nodeType":"909","messageId":"910","endLine":60,"endColumn":17},{"ruleId":"907","severity":1,"message":"1130","line":60,"column":19,"nodeType":"909","messageId":"910","endLine":60,"endColumn":29},{"ruleId":"907","severity":1,"message":"1131","line":68,"column":10,"nodeType":"909","messageId":"910","endLine":68,"endColumn":19},{"ruleId":"907","severity":1,"message":"1132","line":68,"column":21,"nodeType":"909","messageId":"910","endLine":68,"endColumn":33},{"ruleId":"907","severity":1,"message":"1133","line":69,"column":10,"nodeType":"909","messageId":"910","endLine":69,"endColumn":25},{"ruleId":"907","severity":1,"message":"1134","line":69,"column":27,"nodeType":"909","messageId":"910","endLine":69,"endColumn":45},{"ruleId":"924","severity":1,"message":"925","line":160,"column":11,"nodeType":"917","endLine":160,"endColumn":29},{"ruleId":"924","severity":1,"message":"925","line":162,"column":11,"nodeType":"917","endLine":162,"endColumn":32},{"ruleId":"924","severity":1,"message":"925","line":166,"column":11,"nodeType":"917","endLine":166,"endColumn":29},{"ruleId":"924","severity":1,"message":"925","line":168,"column":11,"nodeType":"917","endLine":168,"endColumn":32},{"ruleId":"924","severity":1,"message":"925","line":172,"column":11,"nodeType":"917","endLine":172,"endColumn":30},{"ruleId":"924","severity":1,"message":"925","line":174,"column":11,"nodeType":"917","endLine":174,"endColumn":33},{"ruleId":"924","severity":1,"message":"925","line":178,"column":11,"nodeType":"917","endLine":178,"endColumn":30},{"ruleId":"924","severity":1,"message":"925","line":180,"column":11,"nodeType":"917","endLine":180,"endColumn":33},{"ruleId":"924","severity":1,"message":"925","line":184,"column":11,"nodeType":"917","endLine":184,"endColumn":29},{"ruleId":"924","severity":1,"message":"925","line":186,"column":11,"nodeType":"917","endLine":186,"endColumn":32},{"ruleId":"924","severity":1,"message":"925","line":190,"column":11,"nodeType":"917","endLine":190,"endColumn":29},{"ruleId":"924","severity":1,"message":"925","line":192,"column":11,"nodeType":"917","endLine":192,"endColumn":32},{"ruleId":"924","severity":1,"message":"925","line":196,"column":11,"nodeType":"917","endLine":196,"endColumn":29},{"ruleId":"924","severity":1,"message":"925","line":198,"column":11,"nodeType":"917","endLine":198,"endColumn":32},{"ruleId":"939","severity":1,"message":"1135","line":258,"column":6,"nodeType":"941","endLine":258,"endColumn":18,"suggestions":"1136"},{"ruleId":"939","severity":1,"message":"1137","line":280,"column":6,"nodeType":"941","endLine":280,"endColumn":25,"suggestions":"1138"},{"ruleId":"939","severity":1,"message":"1139","line":311,"column":6,"nodeType":"941","endLine":311,"endColumn":13,"suggestions":"1140"},{"ruleId":"939","severity":1,"message":"1141","line":355,"column":6,"nodeType":"941","endLine":355,"endColumn":44,"suggestions":"1142"},{"ruleId":"907","severity":1,"message":"1050","line":1,"column":17,"nodeType":"909","messageId":"910","endLine":1,"endColumn":26},{"ruleId":"907","severity":1,"message":"995","line":1,"column":38,"nodeType":"909","messageId":"910","endLine":1,"endColumn":44},{"ruleId":"907","severity":1,"message":"1079","line":2,"column":10,"nodeType":"909","messageId":"910","endLine":2,"endColumn":16},{"ruleId":"907","severity":1,"message":"1070","line":13,"column":8,"nodeType":"909","messageId":"910","endLine":13,"endColumn":14},{"ruleId":"907","severity":1,"message":"1086","line":14,"column":8,"nodeType":"909","messageId":"910","endLine":14,"endColumn":9},{"ruleId":"907","severity":1,"message":"979","line":16,"column":5,"nodeType":"909","messageId":"910","endLine":16,"endColumn":12},{"ruleId":"939","severity":1,"message":"1143","line":49,"column":6,"nodeType":"941","endLine":49,"endColumn":41,"suggestions":"1144"},{"ruleId":"907","severity":1,"message":"1145","line":10,"column":10,"nodeType":"909","messageId":"910","endLine":10,"endColumn":14},{"ruleId":"907","severity":1,"message":"1146","line":20,"column":10,"nodeType":"909","messageId":"910","endLine":20,"endColumn":14},{"ruleId":"907","severity":1,"message":"1147","line":30,"column":10,"nodeType":"909","messageId":"910","endLine":30,"endColumn":16},{"ruleId":"907","severity":1,"message":"1148","line":41,"column":10,"nodeType":"909","messageId":"910","endLine":41,"endColumn":16},{"ruleId":"907","severity":1,"message":"1149","line":51,"column":10,"nodeType":"909","messageId":"910","endLine":51,"endColumn":15},{"ruleId":"907","severity":1,"message":"1150","line":61,"column":10,"nodeType":"909","messageId":"910","endLine":61,"endColumn":15},{"ruleId":"907","severity":1,"message":"1151","line":71,"column":10,"nodeType":"909","messageId":"910","endLine":71,"endColumn":15},{"ruleId":"907","severity":1,"message":"1152","line":81,"column":10,"nodeType":"909","messageId":"910","endLine":81,"endColumn":15},{"ruleId":"907","severity":1,"message":"1153","line":91,"column":10,"nodeType":"909","messageId":"910","endLine":91,"endColumn":16},{"ruleId":"907","severity":1,"message":"1154","line":101,"column":10,"nodeType":"909","messageId":"910","endLine":101,"endColumn":16},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"969","line":9,"column":30,"nodeType":"909","messageId":"910","endLine":9,"endColumn":35},{"ruleId":"981","severity":1,"message":"982","line":428,"column":9,"nodeType":"983","messageId":"984","endLine":435,"endColumn":10},{"ruleId":"907","severity":1,"message":"1155","line":635,"column":15,"nodeType":"909","messageId":"910","endLine":635,"endColumn":25},{"ruleId":"907","severity":1,"message":"1156","line":679,"column":17,"nodeType":"909","messageId":"910","endLine":679,"endColumn":26},{"ruleId":"907","severity":1,"message":"1157","line":820,"column":13,"nodeType":"909","messageId":"910","endLine":820,"endColumn":16},{"ruleId":"907","severity":1,"message":"1158","line":823,"column":15,"nodeType":"909","messageId":"910","endLine":823,"endColumn":30},{"ruleId":"907","severity":1,"message":"1159","line":825,"column":15,"nodeType":"909","messageId":"910","endLine":825,"endColumn":30},{"ruleId":"907","severity":1,"message":"1156","line":893,"column":17,"nodeType":"909","messageId":"910","endLine":893,"endColumn":26},{"ruleId":"907","severity":1,"message":"1160","line":1002,"column":11,"nodeType":"909","messageId":"910","endLine":1002,"endColumn":22},{"ruleId":"926","replacedBy":"1161"},{"ruleId":"928","replacedBy":"1162"},{"ruleId":"907","severity":1,"message":"988","line":13,"column":10,"nodeType":"909","messageId":"910","endLine":13,"endColumn":12},{"ruleId":"907","severity":1,"message":"1163","line":13,"column":14,"nodeType":"909","messageId":"910","endLine":13,"endColumn":16},{"ruleId":"907","severity":1,"message":"1050","line":1,"column":17,"nodeType":"909","messageId":"910","endLine":1,"endColumn":26},{"ruleId":"907","severity":1,"message":"1115","line":1,"column":28,"nodeType":"909","messageId":"910","endLine":1,"endColumn":36},{"ruleId":"907","severity":1,"message":"1043","line":18,"column":18,"nodeType":"909","messageId":"910","endLine":18,"endColumn":24},{"ruleId":"907","severity":1,"message":"1115","line":2,"column":17,"nodeType":"909","messageId":"910","endLine":2,"endColumn":25},{"ruleId":"907","severity":1,"message":"1070","line":21,"column":8,"nodeType":"909","messageId":"910","endLine":21,"endColumn":14},{"ruleId":"939","severity":1,"message":"1164","line":153,"column":6,"nodeType":"941","endLine":153,"endColumn":8,"suggestions":"1165"},{"ruleId":"939","severity":1,"message":"1166","line":160,"column":6,"nodeType":"941","endLine":160,"endColumn":19,"suggestions":"1167"},{"ruleId":"939","severity":1,"message":"970","line":170,"column":6,"nodeType":"941","endLine":170,"endColumn":8,"suggestions":"1168"},{"ruleId":"939","severity":1,"message":"1169","line":243,"column":6,"nodeType":"941","endLine":243,"endColumn":26,"suggestions":"1170"},{"ruleId":"907","severity":1,"message":"967","line":9,"column":10,"nodeType":"909","messageId":"910","endLine":9,"endColumn":13},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"967","line":9,"column":10,"nodeType":"909","messageId":"910","endLine":9,"endColumn":13},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"969","line":9,"column":30,"nodeType":"909","messageId":"910","endLine":9,"endColumn":35},{"ruleId":"907","severity":1,"message":"967","line":9,"column":10,"nodeType":"909","messageId":"910","endLine":9,"endColumn":13},{"ruleId":"907","severity":1,"message":"968","line":9,"column":25,"nodeType":"909","messageId":"910","endLine":9,"endColumn":28},{"ruleId":"907","severity":1,"message":"1043","line":21,"column":18,"nodeType":"909","messageId":"910","endLine":21,"endColumn":24},{"ruleId":"981","severity":1,"message":"982","line":81,"column":13,"nodeType":"983","messageId":"984","endLine":110,"endColumn":14},{"ruleId":"907","severity":1,"message":"1171","line":286,"column":45,"nodeType":"909","messageId":"910","endLine":286,"endColumn":59},{"ruleId":"907","severity":1,"message":"1172","line":286,"column":61,"nodeType":"909","messageId":"910","endLine":286,"endColumn":75},{"ruleId":"907","severity":1,"message":"1173","line":30,"column":9,"nodeType":"909","messageId":"910","endLine":30,"endColumn":16},{"ruleId":"907","severity":1,"message":"1174","line":15,"column":8,"nodeType":"909","messageId":"910","endLine":15,"endColumn":21},{"ruleId":"907","severity":1,"message":"1175","line":81,"column":17,"nodeType":"909","messageId":"910","endLine":81,"endColumn":25},{"ruleId":"907","severity":1,"message":"1176","line":92,"column":10,"nodeType":"909","messageId":"910","endLine":92,"endColumn":18},{"ruleId":"907","severity":1,"message":"1177","line":96,"column":10,"nodeType":"909","messageId":"910","endLine":96,"endColumn":13},{"ruleId":"907","severity":1,"message":"1178","line":99,"column":18,"nodeType":"909","messageId":"910","endLine":99,"endColumn":27},{"ruleId":"907","severity":1,"message":"1179","line":110,"column":10,"nodeType":"909","messageId":"910","endLine":110,"endColumn":23},{"ruleId":"907","severity":1,"message":"1180","line":110,"column":25,"nodeType":"909","messageId":"910","endLine":110,"endColumn":41},{"ruleId":"907","severity":1,"message":"1181","line":112,"column":10,"nodeType":"909","messageId":"910","endLine":112,"endColumn":25},{"ruleId":"939","severity":1,"message":"1182","line":126,"column":6,"nodeType":"941","endLine":126,"endColumn":32,"suggestions":"1183"},{"ruleId":"907","severity":1,"message":"1184","line":136,"column":11,"nodeType":"909","messageId":"910","endLine":136,"endColumn":14},{"ruleId":"907","severity":1,"message":"1185","line":468,"column":24,"nodeType":"909","messageId":"910","endLine":468,"endColumn":28},{"ruleId":"1186","severity":1,"message":"1187","line":483,"column":49,"nodeType":"960","messageId":"1188","endLine":483,"endColumn":51},{"ruleId":"1189","severity":1,"message":"1190","line":740,"column":34,"nodeType":"1118","messageId":"1191","endLine":740,"endColumn":35,"suggestions":"1192"},{"ruleId":"1189","severity":1,"message":"1193","line":745,"column":31,"nodeType":"1118","messageId":"1191","endLine":745,"endColumn":32,"suggestions":"1194"},{"ruleId":"1189","severity":1,"message":"1190","line":762,"column":34,"nodeType":"1118","messageId":"1191","endLine":762,"endColumn":35,"suggestions":"1195"},{"ruleId":"1189","severity":1,"message":"1193","line":767,"column":31,"nodeType":"1118","messageId":"1191","endLine":767,"endColumn":32,"suggestions":"1196"},{"ruleId":"1189","severity":1,"message":"1190","line":787,"column":34,"nodeType":"1118","messageId":"1191","endLine":787,"endColumn":35,"suggestions":"1197"},{"ruleId":"1189","severity":1,"message":"1193","line":792,"column":31,"nodeType":"1118","messageId":"1191","endLine":792,"endColumn":32,"suggestions":"1198"},{"ruleId":"1189","severity":1,"message":"1190","line":825,"column":34,"nodeType":"1118","messageId":"1191","endLine":825,"endColumn":35,"suggestions":"1199"},{"ruleId":"1189","severity":1,"message":"1193","line":830,"column":31,"nodeType":"1118","messageId":"1191","endLine":830,"endColumn":32,"suggestions":"1200"},{"ruleId":"1189","severity":1,"message":"1190","line":848,"column":34,"nodeType":"1118","messageId":"1191","endLine":848,"endColumn":35,"suggestions":"1201"},{"ruleId":"1189","severity":1,"message":"1193","line":853,"column":31,"nodeType":"1118","messageId":"1191","endLine":853,"endColumn":32,"suggestions":"1202"},{"ruleId":"1189","severity":1,"message":"1190","line":873,"column":34,"nodeType":"1118","messageId":"1191","endLine":873,"endColumn":35,"suggestions":"1203"},{"ruleId":"1189","severity":1,"message":"1193","line":878,"column":31,"nodeType":"1118","messageId":"1191","endLine":878,"endColumn":32,"suggestions":"1204"},{"ruleId":"1189","severity":1,"message":"1190","line":894,"column":59,"nodeType":"1118","messageId":"1191","endLine":894,"endColumn":60,"suggestions":"1205"},{"ruleId":"1189","severity":1,"message":"1193","line":894,"column":165,"nodeType":"1118","messageId":"1191","endLine":894,"endColumn":166,"suggestions":"1206"},{"ruleId":"1207","severity":1,"message":"1208","line":1223,"column":9,"nodeType":"1209","messageId":"1188","endLine":1223,"endColumn":14},{"ruleId":"907","severity":1,"message":"1001","line":1277,"column":7,"nodeType":"909","messageId":"910","endLine":1277,"endColumn":12},{"ruleId":"1189","severity":1,"message":"1190","line":1419,"column":34,"nodeType":"1118","messageId":"1191","endLine":1419,"endColumn":35,"suggestions":"1210"},{"ruleId":"1189","severity":1,"message":"1193","line":1424,"column":31,"nodeType":"1118","messageId":"1191","endLine":1424,"endColumn":32,"suggestions":"1211"},{"ruleId":"1189","severity":1,"message":"1190","line":1440,"column":34,"nodeType":"1118","messageId":"1191","endLine":1440,"endColumn":35,"suggestions":"1212"},{"ruleId":"1189","severity":1,"message":"1193","line":1445,"column":31,"nodeType":"1118","messageId":"1191","endLine":1445,"endColumn":32,"suggestions":"1213"},{"ruleId":"939","severity":1,"message":"1214","line":1706,"column":6,"nodeType":"941","endLine":1706,"endColumn":8,"suggestions":"1215"},{"ruleId":"939","severity":1,"message":"1216","line":1753,"column":6,"nodeType":"941","endLine":1753,"endColumn":23,"suggestions":"1217"},{"ruleId":"939","severity":1,"message":"1218","line":1777,"column":6,"nodeType":"941","endLine":1777,"endColumn":26,"suggestions":"1219"},{"ruleId":"939","severity":1,"message":"1220","line":1828,"column":6,"nodeType":"941","endLine":1828,"endColumn":24,"suggestions":"1221"},{"ruleId":"907","severity":1,"message":"988","line":12,"column":10,"nodeType":"909","messageId":"910","endLine":12,"endColumn":12},{"ruleId":"907","severity":1,"message":"1043","line":23,"column":9,"nodeType":"909","messageId":"910","endLine":23,"endColumn":15},{"ruleId":"907","severity":1,"message":"989","line":23,"column":26,"nodeType":"909","messageId":"910","endLine":23,"endColumn":32},{"ruleId":"907","severity":1,"message":"990","line":23,"column":34,"nodeType":"909","messageId":"910","endLine":23,"endColumn":39},{"ruleId":"939","severity":1,"message":"1222","line":230,"column":6,"nodeType":"941","endLine":230,"endColumn":22,"suggestions":"1223"},{"ruleId":"939","severity":1,"message":"1224","line":239,"column":6,"nodeType":"941","endLine":239,"endColumn":21,"suggestions":"1225"},{"ruleId":"907","severity":1,"message":"932","line":4,"column":3,"nodeType":"909","messageId":"910","endLine":4,"endColumn":8},{"ruleId":"907","severity":1,"message":"1226","line":6,"column":3,"nodeType":"909","messageId":"910","endLine":6,"endColumn":7},{"ruleId":"907","severity":1,"message":"1227","line":390,"column":21,"nodeType":"909","messageId":"910","endLine":390,"endColumn":27},{"ruleId":"915","severity":1,"message":"916","line":532,"column":19,"nodeType":"917","endLine":532,"endColumn":56},{"ruleId":"915","severity":1,"message":"916","line":584,"column":17,"nodeType":"917","endLine":584,"endColumn":60},{"ruleId":"907","severity":1,"message":"954","line":5,"column":3,"nodeType":"909","messageId":"910","endLine":5,"endColumn":8},{"ruleId":"907","severity":1,"message":"997","line":7,"column":3,"nodeType":"909","messageId":"910","endLine":7,"endColumn":6},{"ruleId":"907","severity":1,"message":"1000","line":55,"column":16,"nodeType":"909","messageId":"910","endLine":55,"endColumn":20},{"ruleId":"907","severity":1,"message":"1001","line":60,"column":5,"nodeType":"909","messageId":"910","endLine":60,"endColumn":10},{"ruleId":"924","severity":1,"message":"925","line":114,"column":18,"nodeType":"917","endLine":114,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":116,"column":18,"nodeType":"917","endLine":116,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":118,"column":18,"nodeType":"917","endLine":118,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":120,"column":18,"nodeType":"917","endLine":120,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":143,"column":11,"nodeType":"917","endLine":151,"endColumn":13},{"ruleId":"924","severity":1,"message":"925","line":156,"column":13,"nodeType":"917","endLine":156,"endColumn":63},{"ruleId":"1186","severity":1,"message":"1228","line":221,"column":28,"nodeType":"960","messageId":"1188","endLine":221,"endColumn":30},{"ruleId":"939","severity":1,"message":"1229","line":458,"column":6,"nodeType":"941","endLine":458,"endColumn":18,"suggestions":"1230"},{"ruleId":"939","severity":1,"message":"1008","line":466,"column":6,"nodeType":"941","endLine":466,"endColumn":8,"suggestions":"1231"},"no-unused-vars","'addLogin' is defined but never used.","Identifier","unusedVar","'MyIcon' is assigned a value but never used.","'isCode' is assigned a value but never used.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Option' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["1232"],"no-negated-in-lhs",["1233"],"'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SubMenu' is assigned a value but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","'bluData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.","ArrayExpression",["1234"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1235"],"React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1236"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["1237"],["1232"],["1233"],["1232"],["1233"],"'Image' is defined but never used.","'Space' is defined but never used.","'Card' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["1238"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["1239"],"'get' is defined but never used.","'del' is defined but never used.","'patch' is defined but never used.","React Hook useEffect has missing dependencies: 'destroyOnClose' and 'width'. Either include them or remove the dependency array. If 'setIsdestroyOnClose' needs the current value of 'destroyOnClose', you can also switch to useReducer instead of useState and read 'destroyOnClose' in the reducer.",["1240"],["1232"],["1233"],["1241"],"Parsing error: Identifier 'App' has already been declared\n\n   5 | import store from './store'\n   6 | import App from './App';\n>  7 | import App from './components/mainbody/index'\n     |        ^\n   8 | ReactDOM.render(\n   9 |   <Provider store={store}>\n  10 |     <App />",["1232"],["1233"],"'getOta' is defined but never used.","'storage' is assigned a value but never used.","'num07' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["1232"],["1233"],"'devicesTitleHeight' is defined but never used.","'px' is defined but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["1242"],["1232"],["1233"],"'useRef' is defined but never used.","'Progress' is defined but never used.","'Tag' is defined but never used.","'mellaConnectStatus' is assigned a value but never used.","'mellaMeasurePart' is assigned a value but never used.","'memo' is assigned a value but never used.","'hisHe' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'isMore' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["1243"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["1244"],"'BrowserRouter' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'patientId' is assigned a value but never used.","'age' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'disabled' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.",["1232"],["1233"],["1232"],["1233"],"React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["1245"],["1232"],["1233"],"'Table' is defined but never used.","'Popconfirm' is defined but never used.","'petId' is assigned a value but never used.","'loading' is assigned a value but never used.","'_del' is assigned a value but never used.","'tableData' is assigned a value but never used.","'historyData' is assigned a value but never used.","'Carousel' is defined but never used.","'PlusOutlined' is defined but never used.","'Header' is assigned a value but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["1246"],["1232"],["1233"],"'useEffect' is defined but never used.","'mTop' is defined but never used.",["1232"],["1233"],["1232"],["1233"],"'MTop' is defined but never used.","'history' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.",["1232"],["1233"],"'Radio' is defined but never used.","'petUrl' is assigned a value but never used.","'country' is assigned a value but never used.","'infoData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'storage.userId'. Either include them or remove the dependency array.",["1247"],["1232"],["1233"],"'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["1248"],"'message' is defined but never used.","'ipcRenderer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1249"],["1232"],["1233"],"'Layout' is defined but never used.","'Input' is defined but never used.",["1232"],["1233"],"'errPatientId' is assigned a value but never used.","'userImage' is assigned a value but never used.","'postJson' is defined but never used.","'_' is defined but never used.",["1232"],["1233"],"'mar' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'getBase64' is assigned a value but never used.","'PressButton_Pro' is defined but never used.","'HistoryTable' is defined but never used.","'Content' is assigned a value but never used.","'saveNum' is assigned a value but never used.","'setSaveNum' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'selectRoleId' is assigned a value but never used.","'workplaceName' is assigned a value but never used.","'workplaceId' is assigned a value but never used.","'organizationId' is assigned a value but never used.","'setOrganizationId' is assigned a value but never used.","'deviceType' is assigned a value but never used.",["1250"],"'isUnKnow' is assigned a value but never used.","'devWidth' is assigned a value but never used.","'size' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'windowssize' is assigned a value but never used.","'timer' is assigned a value but never used.","'useState' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'selectDeviceName' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.",["1232"],["1233"],"'Menu' is defined but never used.","'PageHeader' is defined but never used.","'redjinggao' is defined but never used.","'MyModal' is defined but never used.","'rulerConnectStatus' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'selectPetDetail' is assigned a value but never used.","'setSelectPetDetail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["1251"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1252"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["1253"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'inputIndex', 'lowerValue', 'neckValue', 'radioValue', 'receiveBroadcastHardwareInfo.deviceType', 'receiveBroadcastHardwareInfo.macId', 'rulerUnit', 'selectHardwareInfo', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1254"],"React Hook useEffect has a missing dependency: 'hardwareInfo'. Either include it or remove the dependency array.",["1255"],"'CtoF' is defined but never used.","'FtoC' is defined but never used.","'KgtoLb' is defined but never used.","'LbtoKg' is defined but never used.","'GToMl' is defined but never used.","'MltoG' is defined but never used.","'GToOz' is defined but never used.","'OztoG' is defined but never used.","'CmtoIn' is defined but never used.","'IntoCm' is defined but never used.","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'mac' is assigned a value but never used.","'hardwareVersion' is assigned a value but never used.","'softwareVersion' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.",["1232"],["1233"],"'pX' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllPet'. Either include it or remove the dependency array.",["1256"],"React Hook useEffect has a missing dependency: 'searchPetByPetNameOrPatientId'. Either include it or remove the dependency array.",["1257"],["1258"],"React Hook useEffect has missing dependencies: 'hardwareList' and 'selectHardwareInfo'. Either include them or remove the dependency array.",["1259"],"'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'_resend' is assigned a value but never used.","'UnassignModal' is defined but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","'assignVisible' is assigned a value but never used.","'setAssignVisible' is assigned a value but never used.","'lastWorkplaceId' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1260"],"'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["1261","1262"],"Unnecessary escape character: \\-.",["1263","1264"],["1265","1266"],["1267","1268"],["1269","1270"],["1271","1272"],["1273","1274"],["1275","1276"],["1277","1278"],["1279","1280"],["1281","1282"],["1283","1284"],["1285","1286"],["1287","1288"],"no-dupe-keys","Duplicate key 'align'.","ObjectExpression",["1289","1290"],["1291","1292"],["1293","1294"],["1295","1296"],"React Hook useEffect has a missing dependency: 'mellaMeasureNum'. Either include it or remove the dependency array.",["1297"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["1298"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["1299"],"React Hook useEffect has a missing dependency: 'units'. Either include it or remove the dependency array.",["1300"],"React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["1301"],"React Hook useEffect has a missing dependency: 'setBiggieConnectStatusFun'. Either include it or remove the dependency array. If 'setBiggieConnectStatusFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1302"],"'Spin' is defined but never used.","'bounds' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["1303"],["1304"],"no-global-assign","no-unsafe-negation",{"desc":"1305","fix":"1306"},{"desc":"1307","fix":"1308"},{"desc":"1309","fix":"1310"},{"desc":"1311","fix":"1312"},{"desc":"1313","fix":"1314"},{"desc":"1315","fix":"1316"},{"desc":"1317","fix":"1318"},{"desc":"1317","fix":"1319"},{"desc":"1320","fix":"1321"},{"desc":"1322","fix":"1323"},{"desc":"1324","fix":"1325"},{"desc":"1326","fix":"1327"},{"desc":"1328","fix":"1329"},{"desc":"1330","fix":"1331"},{"desc":"1332","fix":"1333"},{"desc":"1334","fix":"1335"},{"desc":"1326","fix":"1336"},{"desc":"1337","fix":"1338"},{"desc":"1339","fix":"1340"},{"desc":"1341","fix":"1342"},{"desc":"1343","fix":"1344"},{"desc":"1345","fix":"1346"},{"desc":"1347","fix":"1348"},{"desc":"1349","fix":"1350"},{"desc":"1317","fix":"1351"},{"desc":"1352","fix":"1353"},{"desc":"1307","fix":"1354"},{"messageId":"1355","fix":"1356","desc":"1357"},{"messageId":"1358","fix":"1359","desc":"1360"},{"messageId":"1355","fix":"1361","desc":"1357"},{"messageId":"1358","fix":"1362","desc":"1360"},{"messageId":"1355","fix":"1363","desc":"1357"},{"messageId":"1358","fix":"1364","desc":"1360"},{"messageId":"1355","fix":"1365","desc":"1357"},{"messageId":"1358","fix":"1366","desc":"1360"},{"messageId":"1355","fix":"1367","desc":"1357"},{"messageId":"1358","fix":"1368","desc":"1360"},{"messageId":"1355","fix":"1369","desc":"1357"},{"messageId":"1358","fix":"1370","desc":"1360"},{"messageId":"1355","fix":"1371","desc":"1357"},{"messageId":"1358","fix":"1372","desc":"1360"},{"messageId":"1355","fix":"1373","desc":"1357"},{"messageId":"1358","fix":"1374","desc":"1360"},{"messageId":"1355","fix":"1375","desc":"1357"},{"messageId":"1358","fix":"1376","desc":"1360"},{"messageId":"1355","fix":"1377","desc":"1357"},{"messageId":"1358","fix":"1378","desc":"1360"},{"messageId":"1355","fix":"1379","desc":"1357"},{"messageId":"1358","fix":"1380","desc":"1360"},{"messageId":"1355","fix":"1381","desc":"1357"},{"messageId":"1358","fix":"1382","desc":"1360"},{"messageId":"1355","fix":"1383","desc":"1357"},{"messageId":"1358","fix":"1384","desc":"1360"},{"messageId":"1355","fix":"1385","desc":"1357"},{"messageId":"1358","fix":"1386","desc":"1360"},{"messageId":"1355","fix":"1387","desc":"1357"},{"messageId":"1358","fix":"1388","desc":"1360"},{"messageId":"1355","fix":"1389","desc":"1357"},{"messageId":"1358","fix":"1390","desc":"1360"},{"messageId":"1355","fix":"1391","desc":"1357"},{"messageId":"1358","fix":"1392","desc":"1360"},{"messageId":"1355","fix":"1393","desc":"1357"},{"messageId":"1358","fix":"1394","desc":"1360"},{"desc":"1395","fix":"1396"},{"desc":"1397","fix":"1398"},{"desc":"1399","fix":"1400"},{"desc":"1401","fix":"1402"},{"desc":"1403","fix":"1404"},{"desc":"1405","fix":"1406"},{"desc":"1407","fix":"1408"},{"desc":"1324","fix":"1409"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1410","text":"1411"},"Update the dependencies array to be: []",{"range":"1412","text":"1413"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1414","text":"1415"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1416","text":"1417"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"1418","text":"1419"},"Update the dependencies array to be: [mellaConnectStatus, value]",{"range":"1420","text":"1421"},"Update the dependencies array to be: [destroyOnClose, width]",{"range":"1422","text":"1423"},{"range":"1424","text":"1423"},"Update the dependencies array to be: [hardwareList]",{"range":"1425","text":"1426"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1427","text":"1428"},"Update the dependencies array to be: [storage.userId]",{"range":"1429","text":"1430"},"Update the dependencies array to be: [_getExam]",{"range":"1431","text":"1432"},"Add dependencies array: [callBack, timers]",{"range":"1433","text":"1434"},"Update the dependencies array to be: [form, storage.userId]",{"range":"1435","text":"1436"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1437","text":"1438"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"1439","text":"1440"},{"range":"1441","text":"1432"},"Update the dependencies array to be: [finishScan, inputIndex, newData]",{"range":"1442","text":"1443"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1444","text":"1445"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1446","text":"1447"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, inputIndex, lowerValue, neckValue, radioValue, receiveBroadcastHardwareInfo.deviceType, receiveBroadcastHardwareInfo.macId, rulerConfirmCount, rulerMeasureValue, rulerUnit, selectHardwareInfo, torsoValue, upperValue]",{"range":"1448","text":"1449"},"Update the dependencies array to be: [selectHardwareType, hardwareList, hardwareInfo]",{"range":"1450","text":"1451"},"Update the dependencies array to be: [getAllPet]",{"range":"1452","text":"1453"},"Update the dependencies array to be: [searchPetByPetNameOrPatientId, searchValue]",{"range":"1454","text":"1455"},{"range":"1456","text":"1423"},"Update the dependencies array to be: [hardwareList, selectHardwareInfo, selectHardwareType]",{"range":"1457","text":"1458"},{"range":"1459","text":"1413"},"removeEscape",{"range":"1460","text":"1461"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1462","text":"1463"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1464","text":"1461"},{"range":"1465","text":"1463"},{"range":"1466","text":"1461"},{"range":"1467","text":"1463"},{"range":"1468","text":"1461"},{"range":"1469","text":"1463"},{"range":"1470","text":"1461"},{"range":"1471","text":"1463"},{"range":"1472","text":"1461"},{"range":"1473","text":"1463"},{"range":"1474","text":"1461"},{"range":"1475","text":"1463"},{"range":"1476","text":"1461"},{"range":"1477","text":"1463"},{"range":"1478","text":"1461"},{"range":"1479","text":"1463"},{"range":"1480","text":"1461"},{"range":"1481","text":"1463"},{"range":"1482","text":"1461"},{"range":"1483","text":"1463"},{"range":"1484","text":"1461"},{"range":"1485","text":"1463"},{"range":"1486","text":"1461"},{"range":"1487","text":"1463"},{"range":"1488","text":"1461"},{"range":"1489","text":"1463"},{"range":"1490","text":"1461"},{"range":"1491","text":"1463"},{"range":"1492","text":"1461"},{"range":"1493","text":"1463"},{"range":"1494","text":"1461"},{"range":"1495","text":"1463"},{"range":"1496","text":"1461"},{"range":"1497","text":"1463"},"Update the dependencies array to be: [mellaMeasureNum]",{"range":"1498","text":"1499"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"1500","text":"1501"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"1502","text":"1503"},"Update the dependencies array to be: [biggieBodyWeight, units]",{"range":"1504","text":"1505"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"1506","text":"1507"},"Update the dependencies array to be: [petDetailInfo, setBiggieConnectStatusFun]",{"range":"1508","text":"1509"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1510","text":"1511"},{"range":"1512","text":"1430"},[41714,41716],"[_noUSB, _send, blueSearch]",[41788,41814],"[]",[9316,9318],"[setReceiveBroadcastHardwareInfoFun]",[10420,10450],"[devicesList, receiveBroadcastHardwareInfo]",[8427,8434],"[callBack, prediction, timeNum, value]",[9056,9076],"[mellaConnectStatus, value]",[3705,3707],"[destroyOnClose, width]",[2163,2165],[3213,3215],"[hardwareList]",[10241,10250],"[getPetTemperatureData, reRender, saveNum]",[10438,10440],"[storage.userId]",[5326,5328],"[_getExam]",[2257,2257],", [callBack, timers]",[2508,2510],"[form, storage.userId]",[2356,2371],"[callBack, carouselIndex]",[4656,4673],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[10212,10214],[6880,6892],"[finishScan, inputIndex, newData]",[7365,7384],"[inputIndex, rulerConfirmCount]",[8242,8249],"[petId, petLengthDataConvert, petMessage]",[9716,9754],"[bodyValue, changeUnit, headValue, inputIndex, lowerValue, neckValue, radioValue, receiveBroadcastHardwareInfo.deviceType, receiveBroadcastHardwareInfo.macId, rulerConfirmCount, rulerMeasureValue, rulerUnit, selectHardwareInfo, torsoValue, upperValue]",[1662,1697],"[selectHardwareType, hardwareList, hardwareInfo]",[4201,4203],"[getAllPet]",[4334,4347],"[searchPetByPetNameOrPatientId, searchValue]",[4542,4544],[7403,7423],"[hardwareList, selectHardwareInfo, selectHardwareType]",[4888,4914],[22131,22132],"",[22131,22131],"\\",[22332,22333],[22332,22332],[22915,22916],[22915,22915],[23116,23117],[23116,23116],[23796,23797],[23796,23796],[23997,23998],[23997,23997],[25139,25140],[25139,25139],[25340,25341],[25340,25340],[25947,25948],[25947,25947],[26148,26149],[26148,26148],[26814,26815],[26814,26814],[27015,27016],[27015,27015],[27586,27587],[27586,27586],[27692,27693],[27692,27692],[42336,42337],[42336,42336],[42537,42538],[42537,42537],[43067,43068],[43067,43067],[43268,43269],[43268,43268],[50569,50571],"[mellaMeasureNum]",[51812,51829],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[52370,52390],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[54254,54272],"[biggieBodyWeight, units]",[7021,7037],"[hardwareReduce, weight]",[7225,7240],"[petDetailInfo, setBiggieConnectStatusFun]",[12753,12765],"[getPetTemperatureData, petMessage]",[12953,12955]]