[{"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signIn\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx":"2","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"3","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\AddDevice.jsx":"4","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.jsx":"5","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"6","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\VetSpire.js":"7","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx":"8","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx":"9","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\index.js":"10","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js":"11","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\advancedSettings\\index.jsx":"12","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addDevice\\index.jsx":"13","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx":"14","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"15","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"16","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js":"17","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\App.js":"18"},{"size":18148,"mtime":1661509757437,"results":"19","hashOfConfig":"20"},{"size":15395,"mtime":1661509757340,"results":"21","hashOfConfig":"20"},{"size":54280,"mtime":1661509757467,"results":"22","hashOfConfig":"20"},{"size":11526,"mtime":1661913557011,"results":"23","hashOfConfig":"20"},{"size":6919,"mtime":1661509757429,"results":"24","hashOfConfig":"20"},{"size":11108,"mtime":1661509757452,"results":"25","hashOfConfig":"20"},{"size":664,"mtime":1661509757283,"results":"26","hashOfConfig":"20"},{"size":8711,"mtime":1661509757311,"results":"27","hashOfConfig":"20"},{"size":3836,"mtime":1661509757322,"results":"28","hashOfConfig":"20"},{"size":346,"mtime":1661943244274,"results":"29","hashOfConfig":"20"},{"size":577,"mtime":1657680900931,"results":"30","hashOfConfig":"20"},{"size":13516,"mtime":1661941929746,"results":"31","hashOfConfig":"20"},{"size":13514,"mtime":1661509757333,"results":"32","hashOfConfig":"20"},{"size":8628,"mtime":1660703894009,"results":"33","hashOfConfig":"20"},{"size":846,"mtime":1655168677772,"results":"34","hashOfConfig":"20"},{"size":12319,"mtime":1661509757318,"results":"35","hashOfConfig":"20"},{"size":4641,"mtime":1656498255379,"results":"36","hashOfConfig":"20"},{"size":3706,"mtime":1661943474634,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fb2hrx",{"filePath":"40","messages":"41","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signIn\\index.jsx",["77","78","79","80","81","82"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx",["83","84","85","86","87","88","89","90"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\AddDevice.jsx",["125","126"],"import React, { useState, useEffect } from 'react'\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport biggieHome from './../../assets/img/searchType-biggieHome.png'\nimport biggiePro from './../../assets/img/searchType-biggiePro.png'\nimport mellaHome from './../../assets/img/searchType-home.png'\nimport mellaPro from './../../assets/img/searchType-mellaPro.png'\nimport maeBowl from './../../assets/img/searchType-maeBowl.png'\nimport other from './../../assets/img/searchType-other.png'\nimport possum from './../../assets/img/searchType-possum.png'\nimport rfid from './../../assets/img/searchType-rfid.png'\nimport redclose from '../../assets/img/redclose.png'\n\nimport electronStore from '../../utils/electronStore';\nimport { mTop, px, MTop } from '../../utils/px';\n\nimport { connect } from 'react-redux'\nimport { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList } from '../../store/actions';\nimport PropTypes from 'prop-types';\n\nimport './mainbody.less';\n\nlet storage = window.localStorage;\nconst AddDevice = ({ bodyHeight, hardwareReducer, isHaveUsbDevice, receiveBroadcastHardwareInfo, hardwareList, setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }) => {\n  //是否有底座设备\n  const [noUSB, setNoUSB] = useState(false)\n  //设备列表\n  const [devicesList, setDevicesList] = useState([])\n  //选择的设备\n  const [selectDevice, setSelectDevice] = useState(null)\n  //重命名\n  const [reName, setReName] = useState('')\n  //房间号\n  const [examRoom, setExamRoom] = useState('')\n  //已经保存过的设备的macid\n  const [saveDeviceMac, setSaveDeviceMac] = useState([])\n  //顶部文本\n  const [topText, setTopText] = useState(' Pair Device')\n\n\n\n  const addDevice = () => {\n    //从redux拿到列表中的所有硬件设备 hardwareList\n    console.log('hardwareList', hardwareList);\n    //拿到硬件的macid 类型 名称 房间号\n    console.log('selectDevice', selectDevice);\n    let sameFlog = hardwareList.some((item, index) => {\n      return item.type === selectDevice.deviceType\n    })\n    let hardwareArr = [].concat(hardwareList)\n    let { deviceType, macId, name } = selectDevice\n    let newDevice = {\n      name: reName || name,\n      mac: macId,\n      deviceType,\n      examRoom: examRoom || '',\n    }\n    console.log('newDevice', newDevice);\n    if (sameFlog) {\n      //相同就代表有这个硬件类型,可以直接去push\n\n      for (let i = 0; i < hardwareArr.length; i++) {\n        if (hardwareArr[i].type === selectDevice.deviceType) {\n          hardwareArr[i].devices.push(newDevice)\n          break\n        }\n      }\n\n    } else {\n      //没有就要新建一个硬件类型\n      let json = {\n        type: selectDevice.deviceType,\n        devices: [newDevice]\n      }\n      hardwareArr.push(json)\n    }\n    setReName('')\n    setExamRoom('')\n    setHardwareList(hardwareArr)\n\n    return newDevice\n\n\n  }\n\n  const body = () => {\n\n    if (selectDevice) {\n      return <div className=\"addDevice1 flex\">\n        <div className=\"addDeviceTop flex\">\n          <div className=\"title\" style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(20) }}>Would you like to name<br />\n            {`this ${selectDevice.name} device?`}</div>\n\n          <div className=\"title\" style={{ fontSize: px(24), marginBottom: px(40), }}>\n            {`SN: ${selectDevice.macId}`}</div>\n\n\n          <div className=\"input flex\" style={{ marginBottom: px(20), width: px(400) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={reName}\n              onChange={(value) => {\n                setReName(value.target.value)\n\n              }}\n              placeholder={`${selectDevice.name} Device Name`}\n            />\n          </div>\n          <div className=\"input flex\" style={{ marginBottom: px(60), width: px(400) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={examRoom}\n              onChange={(value) => {\n                setExamRoom(value.target.value)\n\n              }}\n              placeholder={`Exam Room Name`}\n            />\n          </div>\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\n            on the Exam Room. Write<br /> the name\n            on the sticker provided so it is easy\n            to select<br /> your device in the future.</div>\n        </div>\n        <div className=\"addDeviceFoot flex\">\n          <div className=\"btn\"\n            onClick={() => {\n              addDevice()\n              setSelectDevice(null)\n              setSelectHardwareType('add')\n\n            }}\n          >\n            <p className='btnText'>Add Another Device</p>\n          </div>\n          <div className=\"btn\"\n            onClick={() => {\n              let newDevice = addDevice()\n              setSelectHardwareType(selectDevice.deviceType)\n\n\n              electronStore.set(`${storage.lastOrganization}-${storage.userId}-${selectDevice.deviceType}-selectDeviceInfo`, newDevice)\n              setSelectDevice(null)\n            }}\n          >\n            <p className='btnText'>Finish</p>\n          </div>\n        </div>\n\n\n      </div>\n    } else {\n      if (noUSB) {\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\n\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\n        </div>\n      } else {\n        if (devicesList.length === 0) {\n          let options = (val) => {\n            let arr = []\n            if (val === 1) {\n              arr = [mellaPro, mellaHome, biggiePro, biggieHome, rfid]\n            } else {\n              arr = [possum, maeBowl, other]\n            }\n            let option = arr.map((item, index) => {\n              let imgWidth = px(80)\n              imgWidth = index === 2 ? px(65) : imgWidth\n              return (<li key={index.toString()} style={{ margin: `${px(20)}px` }}>\n                <div className=\"searchType-item\" key={index} >\n                  <img src={item} alt=\"\" width={imgWidth} />\n                </div>\n              </li>)\n            })\n            return (\n              <ul>\n                {option}\n              </ul>\n            )\n          }\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n\n\n            <div className=\"addDeviceContent\">\n              <div className=\"blueAnimal\" style={{ marginTop: px(50) }}>\n                {/* <img src={blueSearch} alt=\"\" width={px(150)} /> */}\n                <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                  <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\n                </div>\n              </div>\n              <div className=\"openText\" style={{ margin: `${px(15)}px 0` }}>\n                Make sure your bluetooth and wifi is<br /> activated and turn on your device.\n              </div>\n              <div className=\"btn\" style={{ width: px(350), height: px(40) }}>\n                <div className=\"btnText\">\n                  Scan For Devices\n                </div>\n              </div>\n              <div className=\"or\" style={{ marginTop: px(10), marginBottom: px(15) }}>\n                Or\n              </div>\n              <div className=\"select\">\n                Select device type to\n              </div>\n              <div className=\"add\">\n                add manually\n              </div>\n\n              <div className=\"item\">\n                {options(1)}\n                {options(2)}\n              </div>\n            </div>\n\n            {/* <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\n\n                            <p>\n                                {'searching...'}\n                            </p>\n                        </div> */}\n          </div>\n        } else {\n          let options = devicesList.map((item, index) => {\n\n            let flog = saveDeviceMac.some((device, index) => {\n              return device === item.macId\n            })\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\n            return <li\n              className='flex'\n              style={{ marginBottom: px(20) }}\n              key={`${index}`}\n              onClick={() => {\n                if (!flog) {\n                  setSelectDevice(item)\n\n                } else {\n                  message.destroy();\n                  message.error('This device has already been added')\n                }\n\n              }}\n            >\n\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\n\n            </li>\n          })\n          return <div className='deviceList ' >\n            <ul>\n              {options}\n            </ul>\n          </div>\n        }\n      }\n    }\n\n  }\n\n  //初始化\n  useEffect(() => {\n    setNoUSB(false)\n    setDevicesList([])\n    setSelectDevice(null)\n    setReName('')\n    setSaveDeviceMac([])\n    setTopText(' Pair Device')\n    //组件渲染完毕后要先清空广播的硬件信息\n    setReceiveBroadcastHardwareInfoFun({\n      deviceType: '',\n      macId: '',\n      name: ''\n    })\n  }, [])\n  useEffect(() => {\n\n    if (hardwareList.length > 0) {\n      let saveDeviceMac = []\n      for (let i = 0; i < hardwareList.length; i++) {\n        const element = hardwareList[i];\n        for (let j = 0; j < element.devices.length; j++) {\n          const device = element.devices[j];\n          saveDeviceMac.push(device.mac)\n        }\n      }\n      setSaveDeviceMac(saveDeviceMac)\n\n    }\n  }, [hardwareList])\n  useEffect(() => {\n    if (!selectDevice) {\n      setTopText(' Pair Device')\n    } else {\n      setTopText('Device Connected')\n    }\n\n  }, [selectDevice])\n  useEffect(() => {\n    setNoUSB(!isHaveUsbDevice)\n  }, [isHaveUsbDevice])\n  useEffect(() => {\n    let sameFlog = devicesList.some((device, index) => {\n      return device.macId === receiveBroadcastHardwareInfo.macId\n    })\n    if (sameFlog || !receiveBroadcastHardwareInfo.macId) {   //重复直接退出\n      return\n    }\n    console.log('receiveBroadcastHardwareInfo', devicesList, receiveBroadcastHardwareInfo);\n    let deviceArr = [].concat(devicesList)\n    deviceArr.push(receiveBroadcastHardwareInfo)\n    setDevicesList(deviceArr)\n\n\n\n  }, [receiveBroadcastHardwareInfo])\n\n  return (\n    <div className='addDevice' style={{ height: bodyHeight }}>\n      <div className=\"addDeviceTitle\" style={{ height: px(100), fontSize: 26, paddingLeft: px(20) }}>\n        {topText}\n      </div>\n\n      {body()}\n    </div >\n  )\n}\n\n\nAddDevice.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n//默认值\nAddDevice.defaultProps = {\n  bodyHeight: 0,\n  devicesTypeList: []\n}\nexport default connect(\n  state => ({\n    hardwareReducer: state.hardwareReduce,\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n    receiveBroadcastHardwareInfo: state.hardwareReduce.receiveBroadcastHardwareInfo,\n    hardwareList: state.hardwareReduce.hardwareList,\n  }),\n  { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }\n)(AddDevice)\n",["127","128"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["129","130","131","132","133","134","135","136","137","138"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Image,\r\n  Layout,\r\n  Dropdown,\r\n  Col,\r\n  Row,\r\n  Avatar,\r\n  Space,\r\n  Card,\r\n  Menu,\r\n  Progress,\r\n} from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nimport BluetoothNotConnected from \"./../../../assets/img/BluetoothNotConnected.png\";\r\nimport AxillaryBluetooth from \"./../../../assets/img/AxillaryBluetooth.png\"; //腋温图片\r\nimport RectalBluetoothIcon from \"./../../../assets/img/RectalBluetoothIcon.png\"; //肛温图片\r\nimport EarBluetoothIcon from \"./../../../assets/img/EarBluetoothIcon.png\"; //耳温图片\r\nimport connectBle from \"./../../../assets/img/connectBle.png\";\r\nimport redcat from \"./../../../assets/images/redcat.png\";\r\nimport reddog from \"./../../../assets/images/reddog.png\";\r\nimport redother from \"./../../../assets/images/redother.png\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n  setMellaPredictReturnValueFun,\r\n} from \"../../../store/actions\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nimport \"./headerItem.less\";\r\nimport { catv12Predict } from \"../../../api\";\r\n\r\nconst { Header } = Layout;\r\nconst HeaderItem = ({\r\n  petMessage,\r\n  hardwareMessage,\r\n  timeNum = 15,\r\n  setMellaPredictReturnValueFun,\r\n}) => {\r\n  let history = useHistory();\r\n  let {\r\n    petName,\r\n    patientId,\r\n    firstName,\r\n    lastName,\r\n    gender,\r\n    breedName,\r\n    birthday,\r\n    weight,\r\n    url,\r\n    petSpeciesBreedId,\r\n    petId,\r\n    isWalkIn,\r\n  } = petMessage;\r\n  let {\r\n    mellaConnectStatus,\r\n    mellaPredictValue,\r\n    mellaMeasureValue,\r\n    mellaMeasurePart,\r\n    rulerConnectStatus,\r\n    biggieConnectStatus,\r\n    selectHardwareInfo,\r\n    selectHardwareType,\r\n  } = hardwareMessage;\r\n  const [value, setValue] = useState(0);\r\n  const saveCallBack = useRef();\r\n  const callBack = () => {\r\n    let random = null;\r\n    if (timeNum === 15) {\r\n      random = 7;\r\n    } else if (timeNum === 30) {\r\n      random = 3.5;\r\n    } else {\r\n      random = 1.75;\r\n    }\r\n    setValue(value + random);\r\n  };\r\n  //展示宠物照片方法\r\n  const petPicture = (size) => {\r\n    if (_.isEmpty(url)) {\r\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\r\n        return <Avatar src={redcat} size={size} />;\r\n      } else if (\r\n        petSpeciesBreedId === 12001 ||\r\n        _.inRange(petSpeciesBreedId, 136, 456)\r\n      ) {\r\n        return <Avatar src={reddog} size={size} />;\r\n      } else if (petSpeciesBreedId === 13001) {\r\n        return <Avatar src={redother} size={size} />;\r\n      } else {\r\n        return <Avatar src={redother} size={size} />;\r\n      }\r\n    } else {\r\n      return <Avatar src={url} size={size} />;\r\n    }\r\n  };\r\n  //展示名字或id方法\r\n  const showNameOrId = () => {\r\n    if (_.isEmpty(petName) && _.isEmpty(patientId)) {\r\n      return \"unknown\";\r\n    } else if (!_.isEmpty(petName)) {\r\n      return petName;\r\n    } else {\r\n      return patientId;\r\n    }\r\n  };\r\n  //展示主人名字方法\r\n  const ownerName = () => {\r\n    if (_.isEmpty(firstName) && _.isEmpty(lastName)) {\r\n      return \"unknown\";\r\n    } else {\r\n      return firstName + \" \" + lastName;\r\n    }\r\n  };\r\n  //计算宠物年龄\r\n  const calculateAge = () => {\r\n    if (_.isEmpty(birthday)) {\r\n      return \"unknown\";\r\n    } else {\r\n      return moment().diff(moment(birthday), \"years\") + \" \" + \"Years Old\";\r\n    }\r\n  };\r\n  //计算宠物体重\r\n  const calculateWeight = () => {\r\n    if (_.isEmpty(weight)) {\r\n      return \"unknown\";\r\n    } else {\r\n      return _.floor(weight * 2.2, 1) + \" \" + \"lbs\";\r\n    }\r\n  };\r\n  //头部弹出卡片\r\n  const cardItem = () => {\r\n    return (\r\n      <Menu onClick={(item) => clilkMenu(item)} className=\"popBox\">\r\n        <Menu.Item className=\"topItem\">\r\n          <div className=\"cardTopBox\">\r\n            <div className=\"topLeftBox\">\r\n              {petPicture(91)}\r\n              <p className=\"cardTitle\">{showNameOrId()}</p>\r\n              <p className=\"cardTitle\">{ownerName()}</p>\r\n            </div>\r\n            <div className=\"topRightBox\">\r\n              <p className=\"cardTitle\">{calculateAge()}</p>\r\n              <p className=\"cardTitle\">{calculateWeight()}</p>\r\n              <p className=\"cardTitle\">{gender === 0 ? \"Male\" : \"Venter\"}</p>\r\n              <p className=\"cardTitle\">{breedName}</p>\r\n            </div>\r\n          </div>\r\n        </Menu.Item>\r\n        <Menu.Item key={\"editPetInfo\"} style={{ paddingLeft: '8px' }}>\r\n          <p className=\"itemList\">Edit Pet Profile</p>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ paddingLeft: '8px' }}>\r\n          <p className=\"itemList\">Export Temperature History</p>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ paddingLeft: '8px' }}>\r\n          <p className=\"itemList\">Export All Vitals History</p>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  const clilkMenu = (item) => {\r\n    console.log(\"---item\", item);\r\n    if (item.key === \"editPetInfo\" && !petMessage.isWalkIn) {\r\n      //跳转到编辑宠物信息页面\r\n      history.push(\"/page9\");\r\n    }\r\n  };\r\n  //超过15s后调用接口\r\n  const prediction = () => {\r\n    let parame = {\r\n      ambient_temperature: 17,\r\n      data: mellaPredictValue,\r\n      deviceId: \"11111\",\r\n      sampling_rate: \"135ms\",\r\n    };\r\n    let url = \"/clinical/catv12Predict\";\r\n    catv12Predict(parame)\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        let ipcRenderer = window.electron.ipcRenderer;\r\n        if (res.message === \"Success\") {\r\n          let prediction = res.result.prediction.toFixed(2);\r\n          console.log(\"------yuce\", prediction);\r\n\r\n          let num = parseFloat(parseFloat(prediction).toFixed(1));\r\n          setMellaPredictReturnValueFun(num);\r\n\r\n          let tempArr = prediction.split(\".\");\r\n          let intNum = tempArr[0];\r\n          let flotNum = tempArr[1];\r\n          if (intNum.length < 2) {\r\n            intNum = \"0\" + intNum;\r\n          }\r\n          if (flotNum.length < 2) {\r\n            flotNum = \"0\" + flotNum;\r\n          }\r\n          const timeID = setTimeout(() => {\r\n            ipcRenderer.send(\"usbdata\", {\r\n              command: \"42\",\r\n              arr: [intNum, flotNum],\r\n            });\r\n\r\n            timeID && clearTimeout(timeID);\r\n          }, 10);\r\n        } else {\r\n          const timeID = setTimeout(() => {\r\n            // this.sendData('41', [])\r\n            ipcRenderer.send(\"usbdata\", { command: \"41\", arr: [] });\r\n\r\n            clearTimeout(timeID);\r\n          }, 10);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n  //判断仪器是否连接从而判断选择什么图片\r\n  const isConnect = () => {\r\n    const checkImage = () => {\r\n      if (mellaMeasurePart === \"腋温\") {\r\n        return AxillaryBluetooth;\r\n      } else if (mellaMeasurePart === \"耳温\") {\r\n        return EarBluetoothIcon;\r\n      } else {\r\n        return RectalBluetoothIcon;\r\n      }\r\n    };\r\n    switch (selectHardwareType) {\r\n      case \"mellaPro\":\r\n        return _.isEqual(mellaConnectStatus, \"disconnected\") ? (\r\n          <Avatar size={40} src={BluetoothNotConnected} />\r\n        ) : (\r\n          <Progress\r\n            width={48}\r\n            type=\"circle\"\r\n            percent={value}\r\n            format={() => <Avatar size={40} src={checkImage()} />}\r\n          />\r\n        );\r\n      case \"biggie\":\r\n        return _.isEqual(biggieConnectStatus, \"disconnected\") ? (\r\n          <Avatar size={40} src={BluetoothNotConnected} />\r\n        ) : (\r\n          <Avatar size={40} src={connectBle} />\r\n        );\r\n      case \"tape\":\r\n        return _.isEqual(rulerConnectStatus, \"disconnected\") ? (\r\n          <Avatar size={40} src={BluetoothNotConnected} />\r\n        ) : (\r\n          <Avatar size={40} src={connectBle} />\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    saveCallBack.current = callBack;\r\n    if (value === 105 && timeNum !== 60) {\r\n      prediction();\r\n    } else if (value === 105 && timeNum === 60) {\r\n      let ipcRenderer = window.electron.ipcRenderer;\r\n      const timeID = setTimeout(() => {\r\n        ipcRenderer.send(\"usbdata\", { command: \"41\", arr: [] });\r\n        clearTimeout(timeID);\r\n      }, 10);\r\n    }\r\n    return () => { };\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      saveCallBack.current();\r\n    };\r\n    let timer = null;\r\n    if (mellaConnectStatus === \"isMeasuring\") {\r\n      setValue(0);\r\n      timer = setInterval(tick, 1000);\r\n    } else if (value > 100 || mellaConnectStatus === \"complete\") {\r\n      clearInterval(timer);\r\n    } else if (mellaConnectStatus === \"disconnected\") {\r\n      setValue(0);\r\n    };\r\n    if (mellaConnectStatus === \"complete\") {\r\n      // let ipcRenderer = window.electron.ipcRenderer;\r\n      // ipcRenderer.send(\"keyboardWriting\", mellaMeasureValue);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [mellaConnectStatus]);\r\n\r\n  return (\r\n    <div className=\"headerBox\">\r\n      <Header style={{ background: \"#fff\", height: '100%' }}>\r\n        {_.isEmpty(petId) && !isWalkIn ? (\r\n          <></>\r\n        ) : (\r\n          <Row className=\"heardRow\" >\r\n            {/*头部左侧 */}\r\n            <Col flex={10}>\r\n              {isWalkIn ? (\r\n                <span className=\"walkInTitle\">Walk-In</span>\r\n              ) : (\r\n                <Dropdown overlay={cardItem} trigger={[\"click\"]}>\r\n                  <div\r\n                    className=\"petMessageBox\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                  >\r\n                    {petPicture(40)}\r\n                    <div className=\"petMessageBox\">\r\n                      <p className=\"petName\">\r\n                        {!_.isEmpty(petMessage.patientId)\r\n                          ? petMessage.patientId\r\n                          : \"unknown\"}\r\n                        ,{\" \"}\r\n                        {!_.isEmpty(petMessage.petName)\r\n                          ? petMessage.petName\r\n                          : \"unknown\"}\r\n                      </p>\r\n                      <DownOutlined\r\n                        style={{ fontSize: \"22px\", marginLeft: \"10px\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Dropdown>\r\n              )}\r\n            </Col>\r\n            {/*头部右侧 */}\r\n            <Col flex={1}>\r\n              <div className=\"linkStateImageBox\">{isConnect()}</div>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n    setMellaPredictReturnValueFun,\r\n  }\r\n)(HeaderItem);\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\VetSpire.js",["139","140","141"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx",["142"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx",["143"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\index.js",["144"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\advancedSettings\\index.jsx",["145","146"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addDevice\\index.jsx",["147","148"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx",["149","150","151","152","153","154"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\App.js",["178"],{"ruleId":"179","severity":1,"message":"180","line":19,"column":10,"nodeType":"181","messageId":"182","endLine":19,"endColumn":18},{"ruleId":"179","severity":1,"message":"183","line":24,"column":7,"nodeType":"181","messageId":"182","endLine":24,"endColumn":13},{"ruleId":"179","severity":1,"message":"184","line":348,"column":11,"nodeType":"181","messageId":"182","endLine":348,"endColumn":17},{"ruleId":"179","severity":1,"message":"185","line":416,"column":19,"nodeType":"181","messageId":"182","endLine":416,"endColumn":26},{"ruleId":"179","severity":1,"message":"186","line":417,"column":9,"nodeType":"181","messageId":"182","endLine":417,"endColumn":13},{"ruleId":"187","severity":1,"message":"188","line":582,"column":15,"nodeType":"189","endLine":582,"endColumn":50},{"ruleId":"179","severity":1,"message":"190","line":22,"column":9,"nodeType":"181","messageId":"182","endLine":22,"endColumn":15},{"ruleId":"179","severity":1,"message":"191","line":45,"column":11,"nodeType":"181","messageId":"182","endLine":45,"endColumn":17},{"ruleId":"179","severity":1,"message":"192","line":45,"column":19,"nodeType":"181","messageId":"182","endLine":45,"endColumn":24},{"ruleId":"179","severity":1,"message":"193","line":61,"column":9,"nodeType":"181","messageId":"182","endLine":61,"endColumn":22},{"ruleId":"179","severity":1,"message":"194","line":144,"column":18,"nodeType":"181","messageId":"182","endLine":144,"endColumn":27},{"ruleId":"179","severity":1,"message":"195","line":144,"column":29,"nodeType":"181","messageId":"182","endLine":144,"endColumn":37},{"ruleId":"196","severity":1,"message":"197","line":544,"column":19,"nodeType":"189","endLine":551,"endColumn":61},{"ruleId":"187","severity":1,"message":"188","line":559,"column":19,"nodeType":"189","endLine":567,"endColumn":30},{"ruleId":"179","severity":1,"message":"198","line":3,"column":16,"nodeType":"181","messageId":"182","endLine":3,"endColumn":23},{"ruleId":"179","severity":1,"message":"199","line":3,"column":25,"nodeType":"181","messageId":"182","endLine":3,"endColumn":31},{"ruleId":"179","severity":1,"message":"200","line":3,"column":33,"nodeType":"181","messageId":"182","endLine":3,"endColumn":38},{"ruleId":"179","severity":1,"message":"201","line":5,"column":10,"nodeType":"181","messageId":"182","endLine":5,"endColumn":22},{"ruleId":"179","severity":1,"message":"202","line":6,"column":10,"nodeType":"181","messageId":"182","endLine":6,"endColumn":24},{"ruleId":"179","severity":1,"message":"203","line":16,"column":8,"nodeType":"181","messageId":"182","endLine":16,"endColumn":16},{"ruleId":"179","severity":1,"message":"204","line":23,"column":8,"nodeType":"181","messageId":"182","endLine":23,"endColumn":17},{"ruleId":"179","severity":1,"message":"205","line":24,"column":8,"nodeType":"181","messageId":"182","endLine":24,"endColumn":21},{"ruleId":"179","severity":1,"message":"206","line":26,"column":8,"nodeType":"181","messageId":"182","endLine":26,"endColumn":16},{"ruleId":"179","severity":1,"message":"207","line":37,"column":8,"nodeType":"181","messageId":"182","endLine":37,"endColumn":15},{"ruleId":"179","severity":1,"message":"208","line":40,"column":9,"nodeType":"181","messageId":"182","endLine":40,"endColumn":16},{"ruleId":"179","severity":1,"message":"183","line":41,"column":7,"nodeType":"181","messageId":"182","endLine":41,"endColumn":13},{"ruleId":"179","severity":1,"message":"209","line":45,"column":7,"nodeType":"181","messageId":"182","endLine":45,"endColumn":17},{"ruleId":"179","severity":1,"message":"210","line":98,"column":10,"nodeType":"181","messageId":"182","endLine":98,"endColumn":19},{"ruleId":"179","severity":1,"message":"211","line":98,"column":21,"nodeType":"181","messageId":"182","endLine":98,"endColumn":33},{"ruleId":"179","severity":1,"message":"212","line":130,"column":10,"nodeType":"181","messageId":"182","endLine":130,"endColumn":19},{"ruleId":"179","severity":1,"message":"213","line":213,"column":13,"nodeType":"181","messageId":"182","endLine":213,"endColumn":20},{"ruleId":"196","severity":1,"message":"197","line":815,"column":17,"nodeType":"189","endLine":815,"endColumn":62},{"ruleId":"196","severity":1,"message":"197","line":820,"column":17,"nodeType":"189","endLine":820,"endColumn":65},{"ruleId":"187","severity":1,"message":"188","line":875,"column":15,"nodeType":"189","endLine":881,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":884,"column":15,"nodeType":"189","endLine":890,"endColumn":16},{"ruleId":"196","severity":1,"message":"197","line":984,"column":17,"nodeType":"189","endLine":984,"endColumn":62},{"ruleId":"196","severity":1,"message":"197","line":988,"column":15,"nodeType":"189","endLine":988,"endColumn":64},{"ruleId":"187","severity":1,"message":"188","line":1106,"column":13,"nodeType":"189","endLine":1110,"endColumn":14},{"ruleId":"187","severity":1,"message":"188","line":1187,"column":15,"nodeType":"189","endLine":1195,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":1210,"column":13,"nodeType":"189","endLine":1210,"endColumn":76},{"ruleId":"187","severity":1,"message":"188","line":1281,"column":15,"nodeType":"189","endLine":1289,"endColumn":16},{"ruleId":"187","severity":1,"message":"188","line":1313,"column":15,"nodeType":"189","endLine":1317,"endColumn":16},{"ruleId":"179","severity":1,"message":"214","line":1343,"column":9,"nodeType":"181","messageId":"182","endLine":1343,"endColumn":15},{"ruleId":"215","severity":1,"message":"216","line":1379,"column":6,"nodeType":"217","endLine":1379,"endColumn":8,"suggestions":"218"},{"ruleId":"215","severity":1,"message":"219","line":1383,"column":6,"nodeType":"217","endLine":1383,"endColumn":32,"suggestions":"220"},{"ruleId":"196","severity":1,"message":"197","line":1405,"column":15,"nodeType":"189","endLine":1405,"endColumn":59},{"ruleId":"196","severity":1,"message":"197","line":1580,"column":19,"nodeType":"189","endLine":1580,"endColumn":54},{"ruleId":"196","severity":1,"message":"197","line":1582,"column":19,"nodeType":"189","endLine":1582,"endColumn":53},{"ruleId":"215","severity":1,"message":"221","line":276,"column":6,"nodeType":"217","endLine":276,"endColumn":8,"suggestions":"222"},{"ruleId":"215","severity":1,"message":"223","line":317,"column":6,"nodeType":"217","endLine":317,"endColumn":36,"suggestions":"224"},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"179","severity":1,"message":"229","line":3,"column":3,"nodeType":"181","messageId":"182","endLine":3,"endColumn":8},{"ruleId":"179","severity":1,"message":"230","line":9,"column":3,"nodeType":"181","messageId":"182","endLine":9,"endColumn":8},{"ruleId":"179","severity":1,"message":"231","line":10,"column":3,"nodeType":"181","messageId":"182","endLine":10,"endColumn":7},{"ruleId":"179","severity":1,"message":"232","line":68,"column":5,"nodeType":"181","messageId":"182","endLine":68,"endColumn":22},{"ruleId":"179","severity":1,"message":"233","line":72,"column":5,"nodeType":"181","messageId":"182","endLine":72,"endColumn":23},{"ruleId":"234","severity":1,"message":"235","line":130,"column":61,"nodeType":"236","messageId":"237","endLine":130,"endColumn":62},{"ruleId":"234","severity":1,"message":"235","line":138,"column":45,"nodeType":"236","messageId":"237","endLine":138,"endColumn":46},{"ruleId":"179","severity":1,"message":"238","line":187,"column":9,"nodeType":"181","messageId":"182","endLine":187,"endColumn":12},{"ruleId":"215","severity":1,"message":"239","line":281,"column":6,"nodeType":"217","endLine":281,"endColumn":13,"suggestions":"240"},{"ruleId":"215","severity":1,"message":"241","line":303,"column":6,"nodeType":"217","endLine":303,"endColumn":26,"suggestions":"242"},{"ruleId":"179","severity":1,"message":"243","line":9,"column":10,"nodeType":"181","messageId":"182","endLine":9,"endColumn":13},{"ruleId":"179","severity":1,"message":"244","line":9,"column":25,"nodeType":"181","messageId":"182","endLine":9,"endColumn":28},{"ruleId":"179","severity":1,"message":"245","line":9,"column":30,"nodeType":"181","messageId":"182","endLine":9,"endColumn":35},{"ruleId":"215","severity":1,"message":"246","line":133,"column":6,"nodeType":"217","endLine":133,"endColumn":8,"suggestions":"247"},{"ruleId":"215","severity":1,"message":"246","line":85,"column":6,"nodeType":"217","endLine":85,"endColumn":8,"suggestions":"248"},{"ruleId":null,"fatal":true,"severity":2,"message":"249","line":7,"column":8},{"ruleId":"179","severity":1,"message":"250","line":8,"column":10,"nodeType":"181","messageId":"182","endLine":8,"endColumn":16},{"ruleId":"179","severity":1,"message":"251","line":13,"column":5,"nodeType":"181","messageId":"182","endLine":13,"endColumn":12},{"ruleId":"179","severity":1,"message":"252","line":19,"column":5,"nodeType":"181","messageId":"182","endLine":19,"endColumn":10},{"ruleId":"253","severity":1,"message":"254","line":165,"column":9,"nodeType":"255","messageId":"256","endLine":183,"endColumn":10},{"ruleId":"179","severity":1,"message":"257","line":23,"column":10,"nodeType":"181","messageId":"182","endLine":23,"endColumn":28},{"ruleId":"179","severity":1,"message":"258","line":26,"column":10,"nodeType":"181","messageId":"182","endLine":26,"endColumn":12},{"ruleId":"179","severity":1,"message":"259","line":29,"column":26,"nodeType":"181","messageId":"182","endLine":29,"endColumn":32},{"ruleId":"179","severity":1,"message":"260","line":29,"column":34,"nodeType":"181","messageId":"182","endLine":29,"endColumn":39},{"ruleId":"215","severity":1,"message":"261","line":116,"column":6,"nodeType":"217","endLine":116,"endColumn":8,"suggestions":"262"},{"ruleId":"196","severity":1,"message":"197","line":168,"column":19,"nodeType":"189","endLine":168,"endColumn":47},{"ruleId":"179","severity":1,"message":"199","line":3,"column":3,"nodeType":"181","messageId":"182","endLine":3,"endColumn":9},{"ruleId":"179","severity":1,"message":"263","line":4,"column":3,"nodeType":"181","messageId":"182","endLine":4,"endColumn":11},{"ruleId":"179","severity":1,"message":"230","line":5,"column":3,"nodeType":"181","messageId":"182","endLine":5,"endColumn":8},{"ruleId":"179","severity":1,"message":"264","line":7,"column":3,"nodeType":"181","messageId":"182","endLine":7,"endColumn":6},{"ruleId":"179","severity":1,"message":"258","line":30,"column":10,"nodeType":"181","messageId":"182","endLine":30,"endColumn":12},{"ruleId":"179","severity":1,"message":"232","line":43,"column":9,"nodeType":"181","messageId":"182","endLine":43,"endColumn":26},{"ruleId":"179","severity":1,"message":"265","line":43,"column":28,"nodeType":"181","messageId":"182","endLine":43,"endColumn":46},{"ruleId":"179","severity":1,"message":"266","line":43,"column":48,"nodeType":"181","messageId":"182","endLine":43,"endColumn":64},{"ruleId":"179","severity":1,"message":"267","line":45,"column":16,"nodeType":"181","messageId":"182","endLine":45,"endColumn":20},{"ruleId":"179","severity":1,"message":"268","line":51,"column":5,"nodeType":"181","messageId":"182","endLine":51,"endColumn":10},{"ruleId":"179","severity":1,"message":"269","line":58,"column":10,"nodeType":"181","messageId":"182","endLine":58,"endColumn":18},{"ruleId":"179","severity":1,"message":"270","line":58,"column":20,"nodeType":"181","messageId":"182","endLine":58,"endColumn":31},{"ruleId":"196","severity":1,"message":"197","line":136,"column":11,"nodeType":"189","endLine":143,"endColumn":13},{"ruleId":"196","severity":1,"message":"197","line":148,"column":13,"nodeType":"189","endLine":148,"endColumn":33},{"ruleId":"196","severity":1,"message":"197","line":196,"column":18,"nodeType":"189","endLine":196,"endColumn":47},{"ruleId":"196","severity":1,"message":"197","line":198,"column":18,"nodeType":"189","endLine":198,"endColumn":47},{"ruleId":"196","severity":1,"message":"197","line":200,"column":18,"nodeType":"189","endLine":200,"endColumn":47},{"ruleId":"196","severity":1,"message":"197","line":202,"column":18,"nodeType":"189","endLine":202,"endColumn":47},{"ruleId":"196","severity":1,"message":"197","line":226,"column":11,"nodeType":"189","endLine":233,"endColumn":13},{"ruleId":"196","severity":1,"message":"197","line":238,"column":13,"nodeType":"189","endLine":238,"endColumn":63},{"ruleId":"215","severity":1,"message":"271","line":346,"column":6,"nodeType":"217","endLine":346,"endColumn":18,"suggestions":"272"},{"ruleId":"215","severity":1,"message":"273","line":354,"column":6,"nodeType":"217","endLine":354,"endColumn":15,"suggestions":"274"},{"ruleId":"215","severity":1,"message":"275","line":362,"column":6,"nodeType":"217","endLine":362,"endColumn":8,"suggestions":"276"},{"ruleId":"179","severity":1,"message":"277","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":23},"no-unused-vars","'addLogin' is defined but never used.","Identifier","unusedVar","'MyIcon' is assigned a value but never used.","'isCode' is assigned a value but never used.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Option' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SyncOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'SubMenu' is assigned a value but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","'bluData' is assigned a value but never used.","'resize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.","ArrayExpression",["278"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["279"],"React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["280"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["281"],"no-native-reassign",["282"],"no-negated-in-lhs",["283"],"'Image' is defined but never used.","'Space' is defined but never used.","'Card' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["284"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["285"],"'get' is defined but never used.","'del' is defined but never used.","'patch' is defined but never used.","React Hook useEffect has missing dependencies: 'destroyOnClose' and 'width'. Either include them or remove the dependency array. If 'setIsdestroyOnClose' needs the current value of 'destroyOnClose', you can also switch to useReducer instead of useState and read 'destroyOnClose' in the reducer.",["286"],["287"],"Parsing error: Identifier 'App' has already been declared\n\n   5 | import store from './store'\n   6 | import App from './App';\n>  7 | import App from './components/mainbody/index'\n     |        ^\n   8 | ReactDOM.render(\n   9 |   <Provider store={store}>\n  10 |     <App />","'getOta' is defined but never used.","'storage' is assigned a value but never used.","'num07' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'devicesTitleHeight' is defined but never used.","'px' is defined but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["288"],"'Progress' is defined but never used.","'Tag' is defined but never used.","'mellaConnectStatus' is assigned a value but never used.","'mellaMeasurePart' is assigned a value but never used.","'memo' is assigned a value but never used.","'hisHe' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["289"],"React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["290"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["291"],"'BrowserRouter' is defined but never used.",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"no-global-assign","no-unsafe-negation",{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"304","fix":"306"},{"desc":"307","fix":"308"},{"desc":"309","fix":"310"},{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"315","text":"316"},"Update the dependencies array to be: []",{"range":"317","text":"318"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"319","text":"320"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"321","text":"322"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"323","text":"324"},"Update the dependencies array to be: [mellaConnectStatus, value]",{"range":"325","text":"326"},"Update the dependencies array to be: [destroyOnClose, width]",{"range":"327","text":"328"},{"range":"329","text":"328"},"Update the dependencies array to be: [hardwareList]",{"range":"330","text":"331"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"332","text":"333"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"334","text":"335"},"Update the dependencies array to be: [storage.userId]",{"range":"336","text":"337"},[43864,43866],"[_noUSB, _send, blueSearch]",[43942,43968],"[]",[9316,9318],"[setReceiveBroadcastHardwareInfoFun]",[10420,10450],"[devicesList, receiveBroadcastHardwareInfo]",[8262,8269],"[callBack, prediction, timeNum, value]",[8913,8933],"[mellaConnectStatus, value]",[3705,3707],"[destroyOnClose, width]",[2163,2165],[3213,3215],"[hardwareList]",[9404,9416],"[getPetTemperatureData, petMessage]",[9572,9581],"[getPetTemperatureData, reRender, saveNum]",[9777,9779],"[storage.userId]"]