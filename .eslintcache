[{"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\App.js":"1","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx":"2","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\workPlace\\WorkPlace.jsx":"3","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx":"4","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\editParent\\EditParent.jsx":"5","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\FetchUtil5.js":"6","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\myModal\\MyModal.jsx":"7","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\phoneBook\\PhoneBook.jsx":"8","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\appversion.js":"9","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx":"10","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\signIn\\forgotPassword\\ForgotPassword.jsx":"11","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx":"12","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx":"13","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\avatar\\Avatar.jsx":"14","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\axios\\http.js":"15","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\index.js":"16","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\measure\\Mesasure.jsx":"17","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\Fetch_token.js":"18","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\measure\\NorMalMeasurement.jsx":"19","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx":"20","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\FetchUtil.js":"21","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\help\\Help.jsx":"22","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\button\\Button.js":"23","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx":"24","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\editPetInfo\\EditPetInfo.jsx":"25","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx":"26","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx":"27","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\FetchUtil4.js":"28","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx":"29","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx":"30","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\px.js":"31","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\doctorSelectExam\\AddYuding.jsx":"32","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx":"33","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\FetchUtil1.js":"34","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\doctorAddPet\\DoctorAddPet.jsx":"35","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\pages\\biggiePage\\Biggie.jsx":"36","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js":"37","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\measure\\WalkInMesasure.jsx":"38","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\signIn\\SignIn.jsx":"39","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx":"40","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx":"41","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\avatar\\Avatar.jsx":"42","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\axios\\http.js":"43","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\index.js":"44","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\workPlace\\WorkPlace.jsx":"45","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectExam\\SelectExam.jsx":"46","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\temporaryStorage.js":"47","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\minClose\\MinClose.js":"48","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"49"},{"size":7201,"mtime":1653490661904,"results":"50","hashOfConfig":"51"},{"size":7651,"mtime":1645499210635,"results":"52","hashOfConfig":"51"},{"size":9743,"mtime":1650965012392,"results":"53","hashOfConfig":"51"},{"size":16452,"mtime":1650965014429,"results":"54","hashOfConfig":"55"},{"size":11451,"mtime":1652175204826,"results":"56","hashOfConfig":"55"},{"size":3658,"mtime":1648022355327,"results":"57","hashOfConfig":"55"},{"size":1410,"mtime":1648608633612,"results":"58","hashOfConfig":"51"},{"size":8196,"mtime":1652175204841,"results":"59","hashOfConfig":"51"},{"size":81,"mtime":1652777466214,"results":"60","hashOfConfig":"51"},{"size":6007,"mtime":1650018288324,"results":"61","hashOfConfig":"55"},{"size":12531,"mtime":1645498395259,"results":"62","hashOfConfig":"55"},{"size":15939,"mtime":1650537748987,"results":"63","hashOfConfig":"55"},{"size":17372,"mtime":1652175204807,"results":"64","hashOfConfig":"55"},{"size":2998,"mtime":1650537748967,"results":"65","hashOfConfig":"55"},{"size":846,"mtime":1650950402363,"results":"66","hashOfConfig":"51"},{"size":140,"mtime":1610507724638,"results":"67","hashOfConfig":"51"},{"size":113335,"mtime":1652505483416,"results":"68","hashOfConfig":"51"},{"size":3717,"mtime":1643273593619,"results":"69","hashOfConfig":"51"},{"size":141869,"mtime":1652505483763,"results":"70","hashOfConfig":"51"},{"size":12616,"mtime":1652175204830,"results":"71","hashOfConfig":"55"},{"size":3403,"mtime":1638251486844,"results":"72","hashOfConfig":"55"},{"size":4924,"mtime":1650881442969,"results":"73","hashOfConfig":"55"},{"size":1041,"mtime":1634697257786,"results":"74","hashOfConfig":"51"},{"size":37349,"mtime":1650537761460,"results":"75","hashOfConfig":"51"},{"size":40704,"mtime":1652175204812,"results":"76","hashOfConfig":"51"},{"size":17966,"mtime":1650965014421,"results":"77","hashOfConfig":"55"},{"size":6453,"mtime":1650965014426,"results":"78","hashOfConfig":"51"},{"size":3126,"mtime":1644912594393,"results":"79","hashOfConfig":"51"},{"size":13197,"mtime":1650965014421,"results":"80","hashOfConfig":"51"},{"size":13496,"mtime":1650965013806,"results":"81","hashOfConfig":"51"},{"size":3002,"mtime":1650976684331,"results":"82","hashOfConfig":"51"},{"size":11895,"mtime":1653532212813,"results":"83","hashOfConfig":"51"},{"size":1678,"mtime":1650965014318,"results":"84","hashOfConfig":"51"},{"size":3460,"mtime":1653530090022,"results":"85","hashOfConfig":"51"},{"size":39743,"mtime":1652175204809,"results":"86","hashOfConfig":"51"},{"size":4474,"mtime":1650965014190,"results":"87","hashOfConfig":"51"},{"size":52228,"mtime":1653535763730,"results":"88","hashOfConfig":"89"},{"size":159930,"mtime":1653535763747,"results":"90","hashOfConfig":"89"},{"size":17922,"mtime":1653535763804,"results":"91","hashOfConfig":"89"},{"size":13023,"mtime":1653535763705,"results":"92","hashOfConfig":"89"},{"size":13496,"mtime":1653535763773,"results":"93","hashOfConfig":"89"},{"size":2998,"mtime":1653535763681,"results":"94","hashOfConfig":"89"},{"size":846,"mtime":1653535764108,"results":"95","hashOfConfig":"89"},{"size":143,"mtime":1653535763818,"results":"96","hashOfConfig":"89"},{"size":9743,"mtime":1653535763816,"results":"97","hashOfConfig":"89"},{"size":12757,"mtime":1653535763793,"results":"98","hashOfConfig":"89"},{"size":1275,"mtime":1653535764158,"results":"99","hashOfConfig":"89"},{"size":2445,"mtime":1653535764140,"results":"100","hashOfConfig":"89"},{"size":8196,"mtime":1653535764149,"results":"101","hashOfConfig":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},"43h2bk",{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"xeqvtl",{"filePath":"115","messages":"116","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"169"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"180","messages":"181","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"194","messages":"195","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1xy2jmh",{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\App.js",["220","221","222"],"import React, { Component } from 'react'\r\n\r\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom'\r\n\r\nimport Home from './components/home/Home'\r\nimport Choose from './components/choose/Choose'\r\nimport EzyVetLogin from './components/ezyVetLogin/EzyVetLogin'\r\nimport EzyVetSelectTime from './components/ezyVetSelectTime/EzyVetSelectTime'\r\nimport SelectMella from './components/selectMella/SelectMella'\r\nimport APIkey from './components/apiKey/APIKey'\r\nimport VerifyOrganizationInformation from './components/selectLocation/VerifyOrganizationInformation'\r\nimport EzyVetSelectExam from './components/ezyVetSelectExam/EzyVetSelectExam'\r\nimport DoctorSelectExam from './components/doctorSelectExam/DoctorSelectExam'\r\nimport Praviders from './components/praviders/Praviders'\r\nimport SelectExam from \"./components/selectExam/SelectExam\";\r\n\r\nimport Mesasure from \"./components/measure/Mesasure\";\r\nimport NorMalMeasurement from \"./components/measure/NorMalMeasurement\";\r\nimport WalkInMesasure from \"./components/measure/WalkInMesasure\";\r\n\r\nimport MaxMinReturn from './utils/maxminreturn/MaxMinReturn'\r\nimport EditPetInfo from './components/editPetInfo/EditPetInfo'\r\nimport WorkPlace from './components/workPlace/WorkPlace'\r\n\r\nimport DoctorAddPet from './components/doctorAddPet/DoctorAddPet'\r\nimport AddYuding from './components/doctorSelectExam/AddYuding'\r\n//登录部分\r\nimport SignIn from './components/signIn/SignIn'\r\nimport ForgotPassword from './components/signIn/forgotPassword/ForgotPassword'\r\nimport ResetPassword from './components/signIn/resetPassword/ResetPassword'\r\n\r\nimport ScanCodeLogin from './components/signIn/scanCodeLogin/ScanCodeLogin'\r\n\r\n//邮箱注册的整体部分\r\nimport VetPrifile from './components/createAccount/vetProfile/VetPrifile'\r\nimport JoinOrganizationByOption from './components/createAccount/joinOrganizationByOption/JoinOrganizationByOption'\r\nimport FindMyOrganization from './components/createAccount/findMyOrganization/FindMyOrganization'\r\nimport FindMyWorkplace from './components/createAccount/findMyWorkplace/FindMyWorkplace'\r\nimport IsHavePMS from './components/createAccount/ishavePMS/IsHavePMS'\r\nimport VerifyEmail from './components/createAccount/verifyEmail/index'\r\nimport NewOrganization from './components/createAccount/newOrganization/NewOrganization'\r\nimport NewWorkplace from './components/createAccount/newWorkplace/NewWorkplace'\r\n\r\nimport InviteTeam from './components/createAccount/inviteTeam/InviteTeam'\r\n\r\n//options\r\nimport Help from './components/menuOptions/help/Help'\r\nimport Unassigned from './components/menuOptions/unassigned/Unassigned'\r\nimport Settings from './components/menuOptions/settings/Settings'\r\nimport AdvancedSettings from './components/menuOptions/advancedSettings/AdvancedSettings'\r\nimport Invite from './components/menuOptions/invite/Invite'\r\nimport PetAndParents from './components/menuOptions/petAndParents/PetAndParents'\r\nimport EditParent from './components/menuOptions/editParent/EditParent'\r\n// import AdminAddPet from './components/menuOptions/adminAddPet/AdminAddPet'\r\nimport Veterinarians from './components/menuOptions/admin_VetProfile/Veterinarians'\r\nimport AddDevice from './components/menuOptions/addDevice/AddDevice'\r\nimport ConnectWorkplace from './components/menuOptions/orgAndPractice/ConnectWorkplace'\r\nimport NewOrg from './components/menuOptions/orgAndPractice/NewOrganization'\r\nimport Team from './components/menuOptions/orgAndPractice/InviteTeam'\r\n\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nclass App extends Component {\r\n  render () {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/page1\" component={Choose} />\r\n          <Route exact path=\"/ezyVetLogin\" component={EzyVetLogin} />\r\n          <Route exact path=\"/EzyVetSelectTime\" component={EzyVetSelectTime} />\r\n          <Route exact path=\"/EzyVetSelectExam\" component={EzyVetSelectExam} />\r\n          <Route exact path=\"/page2\" component={APIkey} />\r\n          <Route exact path=\"/page3\" component={VerifyOrganizationInformation} />\r\n          <Route exact path=\"/page4\" component={SelectMella} />\r\n\r\n\r\n          <Route exact path=\"/VetSpireSelectExam\" component={SelectExam} />\r\n          <Route exact path=\"/page7\" component={MaxMinReturn} />\r\n\r\n          <Route exact path=\"/page8\" component={Mesasure} />\r\n          <Route exact path=\"/page9\" component={EditPetInfo} />\r\n          <Route exact path=\"/page10\" component={NorMalMeasurement} />\r\n          {/* <Route exact path=\"/walkInMesasure\" component={WalkInMesasure} /> */}\r\n\r\n\r\n\r\n          <Route exact path=\"/page12\" component={WorkPlace} />\r\n          <Route exact path=\"/AddYuding\" component={AddYuding} />\r\n\r\n\r\n          <Route exact path=\"/page11\" component={SignIn} />\r\n          <Route exact path=\"/user/login/forgotPassword\" component={ForgotPassword} />\r\n          <Route exact path=\"/user/login/resetPassword\" component={ResetPassword} />\r\n          <Route exact path=\"/user/login/scanCodeLogin\" component={ScanCodeLogin} />\r\n\r\n          <Route exact path=\"/uesr/logUp/FindMyOrganization\" component={FindMyOrganization} />\r\n          <Route exact path=\"/uesr/logUp/FindMyWorkplace\" component={FindMyWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/VetPrifile\" component={VetPrifile} />\r\n          <Route exact path=\"/uesr/logUp/JoinOrganizationByOption\" component={JoinOrganizationByOption} />\r\n          <Route exact path=\"/uesr/logUp/isHavePMS\" component={IsHavePMS} />\r\n          <Route exact path=\"/uesr/logUp/VerifyEmail\" component={VerifyEmail} />\r\n          <Route exact path=\"/uesr/logUp/NewOrganization\" component={NewOrganization} />\r\n          <Route exact path=\"/uesr/logUp/NewWorkplace\" component={NewWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/InviteTeam\" component={InviteTeam} />\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/uesr/selectExam\" component={DoctorSelectExam} />\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/pet/doctorAddPet\" component={DoctorAddPet} />\r\n\r\n          {/* options */}\r\n          <Route exact path=\"/menuOptions/help\" component={Help} />\r\n          <Route exact path=\"/menuOptions/unassigned\" component={Unassigned} />\r\n          <Route exact path=\"/menuOptions/settings\" component={Settings} />\r\n          <Route exact path=\"/menuOptions/advancedsettings\" component={AdvancedSettings} />\r\n          <Route exact path=\"/menuOptions/invite\" component={Invite} />\r\n          <Route exact path=\"/menuOptions/petAndParents\" component={PetAndParents} />\r\n          <Route exact path=\"/menuOptions/editParent\" component={EditParent} />\r\n          {/* <Route exact path=\"/menuOptions/adminAddPet\" component={AdminAddPet} /> */}\r\n          <Route exact path=\"/menuOptions/veterinarians\" component={Veterinarians} />\r\n          <Route exact path=\"/menuOptions/AddDevice\" component={AddDevice} />\r\n          <Route exact path=\"/menuOptions/ConnectWorkplace\" component={ConnectWorkplace} />\r\n          <Route exact path=\"/menuOptions/NewOrg\" component={NewOrg} />\r\n          <Route exact path=\"/menuOptions/Team\" component={Team} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\nexport default App",["223","224"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx",["225","226","227"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  message\r\n\r\n} from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './resetPassword.less'\r\nimport mellaLogo from '../../../assets/images/mellaLogo.png'\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport { px, mTop, pX, MTop } from '../../../utils/px';\r\nimport MouseDiv from '../../../utils/mouseDiv/MouseDiv'\r\nimport MinClose from '../../../utils/minClose/MinClose'\r\nimport back_white from '../../../assets/img/back-white.png'\r\nimport back_hui from '../../../assets/img/back-hui.png'\r\n\r\nlet storage = window.localStorage;\r\nexport default class ResetPassword extends Component {\r\n\r\n  state = {\r\n    hash: '',\r\n    hash1: '',\r\n    spin: false\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _continue = () => {\r\n    console.log('点击了发送按钮')\r\n    message.destroy()\r\n    let { hash, hash1 } = this.state\r\n    console.log(hash, hash1, hash !== hash1);\r\n    if (!hash && !hash1) {\r\n\r\n      message.error('Please enter a new password', 10)\r\n      return\r\n    }\r\n    if (hash !== hash1) {\r\n      message.error('The two passwords are inconsistent, please re-enter', 10)\r\n      return\r\n    }\r\n    this.setState({\r\n      spin: true\r\n    })\r\n\r\n    fetchRequest(`/user/resetPWD/${temporaryStorage.forgotUserId}/${hash}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('修改密码返回结果', res);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        if (res.flag === true) {\r\n          let data = {\r\n            email: temporaryStorage.forgotPassword_email,\r\n            hash: this.state.hash\r\n          }\r\n          console.log(data);\r\n          data = JSON.stringify(data)\r\n          storage.signIn = data\r\n          temporaryStorage.forgotPassword_email = ''\r\n          temporaryStorage.forgotUserId = ''\r\n          this.props.history.replace('/page11')\r\n          // this.props.history.push('/page11')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"resetPassword\">\r\n        {/* <div className=\"iconfont icon-left heard return\" onClick={() => { this.props.history.goBack() }} />\r\n        <div className=\"logo\">\r\n          <img src={mellaLogo} alt=\"\" />\r\n        </div>\r\n        <div className=\"text\">Reset Your<br />Password</div> */}\r\n\r\n        <div className=\"heaed\"  >\r\n          <div className=\"l\">\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n            < MinClose />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body\" style={{ height: MTop(280), }}>\r\n          <div className=\"logo\"\r\n            style={{ paddingTop: mTop(10) }}\r\n          >\r\n            <img src={mellaLogo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n          <div className=\"text\"\r\n            style={{ fontSize: px(30), padding: `${px(20)}px 0`, marginBottom: mTop(10), marginTop: mTop(20) }}\r\n          >\r\n            Reset Your<br />Password\r\n          </div>\r\n\r\n          <div className=\"inpF\">\r\n\r\n            <Input.Password className='inp'\r\n              style={{ width: px(310), height: mTop(50), marginLeft: px(6), marginBottom: mTop(18), fontSize: px(18) }}\r\n              visibilityToggle={false}\r\n              value={this.state.hash}\r\n              placeholder='New Password'\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value\r\n                this.setState({\r\n                  hash: str\r\n                })\r\n              }}\r\n            />\r\n            <Input.Password className='inp'\r\n              style={{ width: px(310), height: mTop(50), marginLeft: px(6), marginBottom: mTop(18), fontSize: px(18) }}\r\n              visibilityToggle={false}\r\n              value={this.state.hash1}\r\n              placeholder='Re-Enter New Password'\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value\r\n                this.setState({\r\n                  hash1: str\r\n                })\r\n              }}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"button1\" >\r\n          <Button\r\n            style={{ width: px(300), fontSize: px(18), height: px(300 / 6.5) }}\r\n\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </div>\r\n        {\r\n          this.state.spin &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              loading...\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n\r\n\r\n\r\n        {/* \r\n        <div className=\"heaed\"  >\r\n          <div className=\"l\"\r\n          >\r\n\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"inpF\">\r\n          <Input.Password className='inp'\r\n            visibilityToggle={false}\r\n            style={{ border: 'none', outline: 'medium' }}\r\n            value={this.state.hash}\r\n            placeholder='New Password'\r\n            bordered={false}\r\n            onChange={(item) => {\r\n              let str = item.target.value\r\n              this.setState({\r\n                hash: str\r\n              })\r\n            }}\r\n          />\r\n          <Input.Password className='inp'\r\n            visibilityToggle={false}\r\n            style={{ border: 'none', outline: 'medium' }}\r\n            value={this.state.hash1}\r\n            placeholder='Re-Enter New Password'\r\n            bordered={false}\r\n            onChange={(item) => {\r\n              let str = item.target.value\r\n              this.setState({\r\n                hash1: str\r\n              })\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"button1\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            Continue\r\n          </Button>\r\n\r\n        </div> */}\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\workPlace\\WorkPlace.jsx",["228","229","230","231","232","233","234","235","236"],"\r\nimport React, { Component, } from 'react'\r\nimport {\r\n  Select,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Spin\r\n\r\n\r\n} from 'antd';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport './workplace.less'\r\nimport { mTop, pX, px, win } from '../../utils/px';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport logo from '../../assets/images/mellaLogo.png'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\nexport default class WorkPlace extends Component {\r\n  state = {\r\n    organization: '',\r\n    workplaceList: [],\r\n\r\n\r\n    spin: false,\r\n    orgArr: [],\r\n    workplaceJson: {},\r\n    workplaceId: '',\r\n    workplaceName: '',\r\n    organizationId: '',\r\n    organizationName: '',\r\n    connectionKey: '',\r\n    selectRoleId: ''\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n\r\n    let userWorkplace = []\r\n    try {\r\n      userWorkplace = JSON.parse(storage.userWorkplace) || []\r\n      console.log(userWorkplace);\r\n    } catch (error) {\r\n      console.log('字符串转对象失败', error);\r\n    }\r\n    /*orgArr的格式为[{\r\n      organizationId:1,\r\n      organizationName:'11111',\r\n      connectionKey:''\r\n    }]\r\n    \r\n     workplace:{\r\n       1:{\r\n          workplaceId:1,\r\n          workplaceName:'122334\r\n        },\r\n     }\r\n    */\r\n    let orgArr = [], workplaceJson = {}\r\n    console.log('存储的工作场所和组织id', storage.lastWorkplaceId, storage.lastOrganization);\r\n    for (let i = 0; i < userWorkplace.length; i++) {\r\n      let element = userWorkplace[i]\r\n      // console.log('每一项的值：', element);\r\n      if (element.organizationEntity && element.workplaceEntity) {\r\n        let { organizationEntity, workplaceEntity, roleId } = element\r\n        const { name, organizationId, connectionKey } = organizationEntity\r\n        const { workplaceName, workplaceId } = workplaceEntity\r\n\r\n        if (`${workplaceId}` === storage.lastWorkplaceId) {\r\n          this.setState({\r\n            workplaceName,\r\n            workplaceId: storage.lastWorkplaceId\r\n          })\r\n        }\r\n\r\n        if (`${organizationId}` === storage.lastOrganization) {\r\n          this.setState({\r\n            organizationName: name,\r\n            organizationId: storage.lastOrganization\r\n          })\r\n        }\r\n\r\n        let orgRepeatFlog = false, repeatFlogNum = -1\r\n        for (let j = 0; j < orgArr.length; j++) {\r\n          console.log(orgArr[j].organizationId, organizationId);\r\n          if (orgArr[j].organizationId === organizationId) {\r\n            orgRepeatFlog = true\r\n            repeatFlogNum = j\r\n            break;\r\n          }\r\n\r\n        }\r\n        if (orgRepeatFlog) {\r\n          let workplace = {\r\n            workplaceName, workplaceId\r\n          }\r\n          let id = orgArr[repeatFlogNum].organizationId\r\n          let sameflog = false\r\n          console.log(workplaceJson[`${id}`], workplace);\r\n          for (let k = 0; k < workplaceJson[`${id}`].length; k++) {\r\n            const element = workplaceJson[`${id}`][k];\r\n            if (element.workplaceId === workplace.workplaceId && element.workplaceName === workplace.workplaceName) {\r\n              sameflog = true\r\n              break\r\n            }\r\n\r\n          }\r\n          if (!sameflog) {\r\n            workplaceJson[`${id}`].push(workplace)\r\n          }\r\n\r\n        } else {\r\n          let connectKey = connectionKey || ''\r\n          let json = {\r\n            organizationId,\r\n            organizationName: name,\r\n            connectionKey: connectKey,\r\n            roleId\r\n          }\r\n          let workplace = [{\r\n            workplaceName, workplaceId\r\n          }]\r\n          workplaceJson[`${organizationId}`] = workplace\r\n\r\n          orgArr.push(json)\r\n        }\r\n      }\r\n    }\r\n    console.log('-----转换后的组织信息--', orgArr, workplaceJson);\r\n    this.setState({\r\n      orgArr,\r\n      workplaceJson,\r\n      connectionKey: storage.connectionKey,\r\n      selectRoleId: storage.roleId\r\n    })\r\n    //分辨率改变后窗口自动改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _select = (value, e) => {\r\n    console.log(value, e);  //value的值为id\r\n\r\n  }\r\n\r\n  _next = () => {\r\n    // this.props.history.push('/page8')\r\n\r\n    let { workplaceId, organizationId, connectionKey, selectRoleId } = this.state\r\n    console.log({ workplaceId, organizationId, connectionKey, selectRoleId });\r\n\r\n    // this.setState({\r\n    //   spin: true\r\n    // })\r\n    // fetchRequest(`/organization/updateLastWorkplace/${storage.userId}/${workplaceId}`)\r\n    //   .then(res => {\r\n    //     console.log(res);\r\n    //     this.setState({\r\n    //       spin: false\r\n    //     })\r\n    //     if (res.msg === 'success') {\r\n    //       storage.lastWorkplaceId = workplaceId\r\n    //       this.props.history.goBack()\r\n    //     }\r\n    //   })\r\n    //   .catch(err => {\r\n    //     this.setState({\r\n    //       spin: false\r\n    //     })\r\n    //     console.log(err);\r\n    //   })\r\n\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    console.log('入参', { userId: storage.userId, roleId: storage.roleId, workplaceId });\r\n    fetchRequest4(`/user/changeLatestWorkplace/${storage.userId}/${2}/${workplaceId}`, \"GET\")\r\n      .then(res => {\r\n        console.log('切换成功', res);\r\n        storage.lastWorkplaceId = `${workplaceId}`\r\n        storage.lastOrganization = organizationId\r\n        storage.connectionKey = connectionKey\r\n\r\n        if (selectRoleId) {\r\n          storage.roleId = selectRoleId\r\n        }\r\n\r\n        this.props.history.push('/uesr/selectExam')\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        storage.lastWorkplaceId = workplaceId\r\n        storage.lastOrganization = organizationId\r\n        storage.connectionKey = connectionKey\r\n\r\n        this.props.history.push('/uesr/selectExam')\r\n\r\n      })\r\n  }\r\n  render () {\r\n\r\n    let { orgArr, organizationName, workplaceName, workplaceJson, organizationId } = this.state\r\n    let orgOptions = orgArr.map(item => <Option key={item.organizationId} connectionkey={item.connectionKey} roleid={item.roleId} >{item.organizationName}</Option>)\r\n    let workplaceArr = []\r\n    if (workplaceJson[`${organizationId}`]) {\r\n      workplaceArr = workplaceJson[`${organizationId}`]\r\n      console.log('workArr = ', workplaceArr);\r\n    }\r\n    let workplaceOptions = workplaceArr.map(item => <Option key={item.workplaceId}>{item.workplaceName}</Option>)\r\n    return (\r\n      <div id=\"workplace\">\r\n        {/* 关闭缩小 */}\r\n        <div className=\"header\">\r\n          <MaxMin\r\n            onClick={() => { this.props.history.push('/') }}\r\n            onClick1={() => this.props.history.goBack()}\r\n          />\r\n        </div>\r\n        <div className=\"body flex\">\r\n          <div className=\"img flex\">\r\n            <img src={logo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n\r\n          <div className=\"title\">\r\n            <div className=\"text\" style={{ fontSize: px(28), marginBottom: px(40) }}>Verify Organization Information</div>\r\n            <div className=\"text2\" style={{ fontSize: px(24), textAlign: 'center' }}>Good Pets</div>\r\n          </div>\r\n\r\n\r\n          <div className=\"selectAll\" style={{ marginBottom: px(160) }}>\r\n\r\n            <div className=\"select\" >\r\n              <p style={{ fontSize: px(18) }}>Select Organization:</p>\r\n              <Select style={{ width: '40%' }}\r\n                value={organizationName}\r\n                onChange={(val, e) => {\r\n                  console.log(val, e)\r\n                  let workplace = workplaceJson[e.key]\r\n                  console.log(workplace);\r\n                  this.setState({\r\n                    organizationId: e.key,\r\n                    organizationName: e.children,\r\n                    connectionKey: e.connectionkey,\r\n                    workplaceId: workplace[0].workplaceId,\r\n                    workplaceName: workplace[0].workplaceName,\r\n                    selectRoleId: e.roleid\r\n                  })\r\n                }}>\r\n                {/* <Option value=\"1\">UGA Veterinary Teaching Hospital</Option> */}\r\n                {orgOptions}\r\n              </Select>\r\n            </div>\r\n\r\n            <div className=\"select\" >\r\n              <p style={{ fontSize: px(18) }}>Select Location:</p>\r\n              <Select style={{ width: '40%' }}\r\n                value={workplaceName}\r\n                onChange={(val, e) => {\r\n                  console.log(val, e)\r\n                  this.setState({\r\n                    workplaceId: e.key,\r\n                    workplaceName: e.children\r\n                  })\r\n                }}>\r\n                {workplaceOptions}\r\n              </Select>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"foot flex\">\r\n          <div className=\"btn\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size='large'\r\n              onClick={this._next}\r\n            >\r\n              Verify\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n",["237","238"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\editParent\\EditParent.jsx",["239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260"],"import React, { Component } from 'react'\r\nimport { Input, Button, Menu, message, Select, Calendar, Col, Row, Spin } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../../utils/FetchUtil1'\r\nimport dog from './../../../assets/images/reddog.png'\r\nimport cat from './../../../assets/images/redcat.png'\r\nimport other from '../../../assets/images/redother.png'\r\nimport horse from './../../../assets/images/horse.png'\r\nimport rabbit from './../../../assets/images/rabbit.png'\r\n// import selectphoto from './../../../assets/images/img.png'\r\nimport selectphoto from './../../../assets/images/sel.png'\r\nimport dui from './../../../assets/images/dui.png'\r\nimport female from './../../../assets/images/female.png'\r\nimport male from './../../../assets/images/male.png'\r\nimport './editParent.less'\r\nimport { mTop, px } from '../../../utils/px';\r\nimport Avatar from './../../avatar/Avatar'\r\nimport MyModal from '../../../utils/myModal/MyModal';\r\nimport Heard from '../../../utils/heard/Heard';\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class EditParent extends Component {\r\n  state = {\r\n\r\n    lastName: '',       //宠物主人性\r\n    firstName: '',      //宠物主人名\r\n    email: '',          //邮箱号\r\n    phone: '',          //电话号码\r\n    spin: false,        //加载中\r\n    imageId: null,      //图片的ID值\r\n    petList: [],         //当前这个宠物主人下的所有宠物\r\n    userId: '',          //当前这个宠物主人的userId\r\n\r\n    userImageUrl: '',\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    console.log(this.props.history.location.parent);\r\n\r\n    if (this.props.history.location.parent) { //接受入参\r\n      let { parent, pets } = this.props.history.location.parent\r\n      let { firstName, lastName, userId } = parent\r\n      this._getParent(userId)\r\n\r\n      this.setState({\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        petList: pets\r\n\r\n\r\n      })\r\n\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _getParent = (data) => {\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    fetchRequest(`/user/getUserInfoByUserId/${data}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('获取到了用户信息', res);\r\n        if (res.msg === 'success') {\r\n          let { firstName, phone, lastName, email, imageId, url, userImage } = res.data\r\n          let userImageUrl = res.data.userImage ? res.data.userImage.url : null\r\n          firstName = firstName ? firstName : ''\r\n          phone = phone ? phone : ''\r\n          email = email ? email : ''\r\n          lastName = lastName ? lastName : ''\r\n\r\n\r\n          this.setState({\r\n            userImageUrl,\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            email,\r\n            imageId,\r\n            spin: false\r\n\r\n          })\r\n        } else {\r\n          this.setState({\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n\r\n  _petSpecies = () => {\r\n    let { userImageUrl } = this.state\r\n    this.avatar = userImageUrl ? userImageUrl : selectphoto\r\n    let { firstName, lastName } = this.state\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>First Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  firstName: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Last Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  lastName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _petName = () => {\r\n    let { email, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  petList = () => {\r\n\r\n    let { petList } = this.state\r\n    console.log(petList);\r\n    let options = petList.map((item, index) => {\r\n      let { speciesId, url, breedName, petBirthday, gender, name, } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n\r\n      let petAge = moment(new Date()).diff(moment(petBirthday), 'years')\r\n\r\n      if (!url) {\r\n\r\n        switch (speciesId) {\r\n          case 1: images = `url(${cat})`\r\n\r\n            break;\r\n          case 2: images = `url(${dog})`\r\n            break\r\n          default: images = `url(${other})`\r\n            break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `  0 0 ${px(15)}px 0`, }}\r\n          onClick={() => {\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div className=\"itemL\">\r\n              <div\r\n                className='img'\r\n                style={{\r\n                  width: px(50),\r\n                  height: px(50),\r\n                  marginRight: px(20),\r\n                  borderRadius: px(60),\r\n                  backgroundImage: images,\r\n                }}>\r\n              </div>\r\n              <a\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  console.log(item);\r\n                }}\r\n              >{name}</a>\r\n            </div>\r\n            <div className=\"itemC\">\r\n              <p>{`${petAge} years old, ${gender === 0 ? 'Male' : 'Female'}`}</p>\r\n            </div>\r\n            <div className=\"itemR\">\r\n              <p>{`${breedName}`}</p>\r\n            </div>\r\n\r\n\r\n            {/* <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div> */}\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n\r\n\r\n    let liStyle = { backgroundColor: '#fff', marginTop: px(15) }\r\n    if (petList.length > 3) {\r\n      liStyle = { height: px(305), overflowY: 'auto', marginTop: px(15) }\r\n    }\r\n\r\n    return (\r\n      <ul style={liStyle}>\r\n        {options}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"editParent\">\r\n\r\n        <div className=\"heard\">\r\n          <Heard\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"editPetInfo_top\" >\r\n          <div className=\"parentInfo\">\r\n            <div className=\"title\" >{`Parent Information`}</div>\r\n            <div className=\"info\">\r\n              {this._petSpecies()}\r\n              {this._petName()}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"pets\">\r\n            <div className=\"petsTitle\">\r\n              <h2 style={{ fontSize: px(24), marginRight: px(40) }}>Pets</h2>\r\n              <div className=\"btn\" style={{ fontSize: px(22) }}>+ Add New Pet</div>\r\n            </div>\r\n            <div className=\"petList\">\r\n              {this.petList()}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"editPetInfo_foot\"  >\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              let { firstName, lastName, email, phone, imageId, userId } = this.state\r\n              console.log({ firstName, lastName, email, phone, imageId });\r\n              let parames = {\r\n                userId,\r\n                email,\r\n                phone,\r\n                firstName,\r\n                lastName,\r\n                imageId\r\n              }\r\n              this.setState({\r\n                spin: true\r\n              })\r\n              message.destroy()\r\n              console.log('修改的宠物信息:', parames);\r\n              fetchRequest('/user/updateUserInfo', 'POST', parames,)\r\n                .then(res => {\r\n                  console.log('保存所有信息', res);\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  if (res.flag === true) {\r\n                    this.props.history.goBack()\r\n                  } else {\r\n                    message.error('fail to edit')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  message.error('fail to edit')\r\n                  console.log(err);\r\n                })\r\n\r\n            }}\r\n\r\n          >Edit Profile</div>\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              this.props.history.goBack()\r\n            }}\r\n\r\n          >OK</div>\r\n\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n      </div >\r\n    )\r\n  }\r\n}",["261","262"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\FetchUtil5.js",["263","264","265","266"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\myModal\\MyModal.jsx",["267","268"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\phoneBook\\PhoneBook.jsx",["269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Menu,\r\n    Popover,\r\n    Button,\r\n    Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport pinyin from 'pinyin';\r\n\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './phoneBook.less'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\n\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\r\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\r\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\r\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\r\n\r\n    useEffect(() => {\r\n        if (confirmSelectBreed !== -1) {\r\n            setSelectBreed(confirmSelectBreed)\r\n        }\r\n    }, [confirmSelectBreed])\r\n\r\n\r\n    console.log('listsDate', phoneList)\r\n\r\n    useEffect(() => {\r\n        // console.log('listsDate', listDate)\r\n        console.log('进来了');\r\n        let test = []\r\n        listDate.map((item, index) => {\r\n            let data = {\r\n                name: item.breedName,\r\n                hidden: false,\r\n                petSpeciesBreedId: item.petSpeciesBreedId\r\n            }\r\n            test.push(data)\r\n        })\r\n        // 暂时静态数据替换\r\n        //获取联系人列表\r\n        console.log('11111111111', test)\r\n        let list = test;\r\n        let sections = [], letterArr = [];\r\n        // console.log('原始的数据:',list)\r\n\r\n        // 右侧字母栏数据处理\r\n        list.map((item, index) => {\r\n            letterArr.push(pinyin(item.name.substring(0, 1), {\r\n                style: pinyin.STYLE_FIRST_LETTER,\r\n            })[0][0].toUpperCase());\r\n\r\n            letterArr = [...new Set(letterArr)].sort();\r\n        });\r\n\r\n        // 分组数据处理\r\n        letterArr.map((item, index) => {\r\n            sections.push({\r\n                title: item,\r\n                data: []\r\n            })\r\n        });\r\n        list.map(item => {\r\n            let listItem = item;\r\n            sections.map(item => {\r\n                // console.log('}}}}}}}}}}}}}}',item)\r\n                let first = listItem.name.substring(0, 1);\r\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\r\n                if (item.title == test) {\r\n                    item.data.push({\r\n                        firstName: first,\r\n                        name: listItem.name,\r\n                        hidden: listItem.hidden,\r\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\r\n                    });\r\n                }\r\n            })\r\n        });\r\n\r\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\r\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\r\n        // console.log('-1----', sections, letterArr);\r\n        setPhoneList(sections)\r\n        setPhoneListCopy(sections)\r\n        setLetterList(letterArr)\r\n        setLetterListCopy(letterArr)\r\n    }, [])\r\n    useEffect(() => {\r\n        // if (searchText) {\r\n        console.log('搜索内容', searchText, letterListCopy);\r\n        if (letterListCopy.length > 0) {\r\n\r\n            let allData = phoneListCopy\r\n            let newArr = []\r\n            let arr = []\r\n            if (searchText.length > 0) {\r\n                allData.map((item, i) => {\r\n                    item.data.map((data, index) => {\r\n                        // console.log(index)\r\n                        let dataName = data.name ? data.name.toUpperCase() : ''\r\n                        let keyData = searchText ? searchText.toUpperCase() : ''\r\n                        if (dataName.search(keyData) !== -1) {\r\n                            newArr.push(data)\r\n                        }\r\n                    })\r\n                    // console.log('一组数据：', newArr)\r\n                    if (newArr.length != 0) {\r\n                        let oneGreep = {\r\n                            title: item.title,\r\n                            data: newArr\r\n                        }\r\n                        //   console.log('一11组数据：', oneGreep)\r\n                        arr.push(oneGreep)\r\n                    }\r\n\r\n                    newArr = []\r\n                })\r\n                //   console.log('--------------------------', arr)\r\n                let letterArr = []\r\n                arr.map((item, index) => {\r\n                    letterArr.push(item.title)\r\n                })\r\n                // newArr = []\r\n                // // console.log('---||-----',newArr)\r\n                setPhoneList(arr)\r\n                setLetterList(letterArr)\r\n            } else {\r\n\r\n                setPhoneList(phoneListCopy)\r\n                setLetterList(letterListCopy)\r\n            }\r\n        }\r\n\r\n\r\n    }, [searchText])\r\n\r\n\r\n\r\n    const _phoneList = () => {\r\n\r\n        let option = phoneList.map((item, index) => {\r\n            let data = item.data\r\n            let option1 = data.map((value, index1) => {\r\n                return (\r\n                    <li\r\n                        key={`option1${index1}`}\r\n                        onClick={() => {\r\n                            // console.log(value.petSpeciesBreedId);\r\n                            setSelectBreed(value.petSpeciesBreedId)\r\n                            selectFun(value)\r\n                        }}>\r\n                        {value.name}\r\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\r\n                    </li>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <div className=\"phoneBody\">\r\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\r\n                    <ul>\r\n                        {option1}\r\n                    </ul>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul>\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const _letterList = () => {\r\n\r\n        let option = letterList.map((item, index) => {\r\n\r\n\r\n            return (\r\n                <li\r\n                    key={`${index}`}\r\n\r\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\r\n                    <a\r\n\r\n                        onClick={() => {\r\n                            litterClick(item)\r\n                        }}\r\n                    >{item}</a>\r\n                </li>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul className=\"letterUL\">\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const litterClick = (anchorName) => {\r\n        // console.log(anchorName);\r\n        if (anchorName) {\r\n            // 找到锚点\r\n            let anchorElement = document.getElementById(anchorName);\r\n            // console.log(anchorElement);\r\n            // 如果对应id的锚点存在，就跳转到锚点\r\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\r\n        }\r\n        // e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"phoneBook\">\r\n            <div className=\"phone\">\r\n                {_phoneList()}\r\n            </div>\r\n            <div className=\"litter\">\r\n                {_letterList()}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n\r\n    listDate: PropTypes.array,\r\n    selectFun: PropTypes.func,\r\n    searchText: PropTypes.string,\r\n    confirmSelectBreed: PropTypes.number\r\n}\r\nPhoneBook.defaultProps = {\r\n    listDate: [],\r\n    selectFun: () => { },\r\n    searchText: '',\r\n    confirmSelectBreed: -1,\r\n}\r\n\r\nexport default PhoneBook",["290","291"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx",["292","293","294","295"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  message\r\n\r\n} from 'antd';\r\n\r\nimport './scanCodeLogin.less'\r\nimport mellaLogo from '../../../assets/images/mellaLogo.png'\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport { fetchRequest2 } from '../../../utils/FetchUtil2';\r\nimport { px } from './../../../utils/px'\r\n\r\nlet storage = window.localStorage;\r\nlet flog = false\r\nexport default class ScanCodeLogin extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    url: ''\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    this.timer = setInterval(() => {\r\n      this._getUser()\r\n    }, 1000);\r\n    console.log(this.props.history);\r\n    let { name, url } = this.props.history.location.params\r\n    this.setState({\r\n      name,\r\n      url\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    this.timer && clearInterval(this.timer)\r\n  }\r\n  _getUser = () => {\r\n    fetchRequest2(`/user/loginWithQRcode/${temporaryStorage.QRToken}`)\r\n      .then(res => {\r\n        console.log('-----：', res);\r\n        if (res.flag === true) {\r\n          switch (res.code) {\r\n            case 10001:\r\n              console.log('未扫码');\r\n              flog = false\r\n              this.props.history.goBack()\r\n\r\n              break;\r\n\r\n            case 11033:\r\n              console.log('扫码未点击登录');\r\n              flog = false\r\n              // let { name, url } = res.data\r\n              // if (name === this.state.name && url === this.state.url) {\r\n              //   return\r\n              // }\r\n              // this.setState({\r\n              //   name,\r\n              //   url\r\n              // })\r\n              break;\r\n\r\n            case 11023:\r\n              console.log('过期');\r\n              this.timer && clearInterval(this.timer)\r\n              if (!flog) {\r\n                this.props.history.replace('/page11')\r\n              }\r\n\r\n\r\n              break;\r\n            case 20000:\r\n              this.timer && clearInterval(this.timer)\r\n              console.log('--------------成功');\r\n              flog = true\r\n              let success = res.data\r\n              let { userWorkplace, lastOrganization } = success\r\n\r\n              storage.userId = success.userId\r\n              storage.roleId = success.roleId\r\n\r\n              //每次登陆后清空宠物列表缓存的数据\r\n              storage.doctorList = ''\r\n              storage.defaultCurrent = ''\r\n\r\n              if (success.lastWorkplaceId) {\r\n                storage.lastWorkplaceId = success.lastWorkplaceId\r\n              } else {\r\n                storage.lastWorkplaceId = ''\r\n              }\r\n\r\n              if (success.lastOrganization) {\r\n                storage.lastOrganization = success.lastOrganization\r\n              } else {\r\n                storage.lastOrganization = ''\r\n              }\r\n\r\n\r\n\r\n              if (userWorkplace) {\r\n                storage.userWorkplace = JSON.stringify(userWorkplace)\r\n                let connectionKey = ''\r\n                for (let i = 0; i < userWorkplace.length; i++) {\r\n                  const element = userWorkplace[i];\r\n                  if (element.organizationEntity) {\r\n                    if (element.organizationEntity.organizationId === lastOrganization) {\r\n\r\n                      if (element.organizationEntity.connectionKey) {\r\n                        connectionKey = element.organizationEntity.connectionKey\r\n                      }\r\n                      if (element.roleId) {\r\n                        console.log(element.roleId);\r\n                        storage.roleId = element.roleId\r\n                      }\r\n\r\n                      break\r\n                    }\r\n                  }\r\n                }\r\n                storage.connectionKey = connectionKey\r\n\r\n              } else {\r\n                storage.userWorkplace = ''\r\n                storage.connectionKey = ''\r\n              }\r\n              this.props.history.push('/uesr/selectExam')\r\n\r\n\r\n\r\n\r\n\r\n\r\n              // storage.userId = res.data.userId\r\n              // storage.roleId = res.data.roleId\r\n              // if (res.data.lastWorkplaceId) {\r\n              //   storage.lastWorkplaceId = res.data.lastWorkplaceId\r\n              // } else {\r\n              //   storage.lastWorkplaceId = ''\r\n              // }\r\n              // if (res.data.lastOrganization) {\r\n              //   storage.lastOrganization = res.data.lastOrganization\r\n              // } else {\r\n              //   storage.lastOrganization = ''\r\n              // }\r\n              // this.props.history.push('/uesr/selectExam')\r\n\r\n\r\n              break;\r\n\r\n            default:\r\n\r\n              break;\r\n          }\r\n        }\r\n        console.log('code', res.code);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  _continue = () => {\r\n    this.props.history.replace('/page11')\r\n\r\n  }\r\n\r\n  render() {\r\n    let { url } = this.state\r\n    return (\r\n      <div id=\"scanCodeLogin\" className='pt-3'>\r\n\r\n\r\n        <div className=\"text  mb-3\"\r\n          style={{ fontSize: px(26), width: px(350), marginTop: px(20), marginBottom: px(40) }}\r\n        >\r\n          <h1>Need to confirm login on mobile phone</h1>\r\n        </div>\r\n\r\n        <div className=\"bodycenter\">\r\n          <div className=\"imgF \">\r\n            <img src={url} alt=\"\" style={{ width: px(150), hight: px(150) }} />\r\n          </div>\r\n          <p>{this.state.name}</p>\r\n          <div className=\"success\" style={{ marginTop: px(30) }}>Scan code completed</div>\r\n        </div>\r\n        <div className=\"button1\" style={{ height: px(150) }}>\r\n          <Button\r\n            style={{ width: px(300), fontSize: px(18), height: px(300 / 6.5) }}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            Cancel login\r\n          </Button>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\signIn\\forgotPassword\\ForgotPassword.jsx",["296","297","298","299","300","301"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  message,\r\n  Spin\r\n\r\n} from 'antd';\r\n// import { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './forgotPassword.less'\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport { px, mTop, pX, MTop } from '../../../utils/px';\r\nimport MouseDiv from '../../../utils/mouseDiv/MouseDiv'\r\nimport MinClose from '../../../utils/minClose/MinClose'\r\nimport back_white from '../../../assets/img/back-white.png'\r\nimport back_hui from '../../../assets/img/back-hui.png'\r\nimport mellaLogo from '../../../assets/images/mellaLogo.png'\r\nimport errorIcon from '../../../assets/images/errorIcon.png'\r\n\r\n\r\n//num做超时处理\r\nlet num = 0\r\nexport default class ForgotPassword extends Component {\r\n\r\n  state = {\r\n    email: '',\r\n    success1: false,\r\n    spin: false,        //调用接口加载中\r\n    noRegistered: false, //邮箱没被注册跳出的弹窗\r\n    isLimit: false,      //账号被限制、注册未激活状态\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    if (temporaryStorage.forgotPassword_email) {\r\n      this.setState({\r\n        email: temporaryStorage.forgotPassword_email\r\n      })\r\n    }\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  componentWillUnmount () {\r\n    this.timer && clearInterval(this.timer)\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _continue = () => {\r\n    let { email } = this.state\r\n    message.destroy()\r\n    console.log('点击了发送按钮', email)\r\n    if (email.length < 2 || email.indexOf('@') === -1) {\r\n      message.error('Email number format is incorrect')\r\n      return\r\n    }\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    console.log('开始去检测邮箱');\r\n    fetchRequest(`/user/checkUser/${email}`, 'GET', '')\r\n      .then(res => {\r\n        console.log('检测邮箱存不存在', res);\r\n        if (res.code) {\r\n          switch (res.code) {\r\n\r\n            case 11011:\r\n              console.log('邮箱存在，发送邮件');\r\n              this._sendEmail()\r\n              break;\r\n            case 11012:\r\n              console.log('账号被限制、注册未激活状态');\r\n              this.setState({\r\n                isLimit: true\r\n              })\r\n              break;\r\n\r\n\r\n            case 11013:\r\n              console.log('邮箱未被注册，跳出弹框询问是否前往注册');\r\n            case 11014:\r\n              console.log('邮箱被注销或者封停，跳出弹框询问是否前往注册');\r\n              this.setState({\r\n                noRegistered: true,\r\n                spin: false\r\n              })\r\n              return\r\n              break\r\n\r\n          }\r\n        } else {\r\n          console.log('系统错误', res);\r\n          message.error('system error')\r\n          this.setState({\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        message.error('system error')\r\n\r\n      })\r\n\r\n\r\n\r\n  }\r\n  _sendEmail = () => {\r\n    fetchRequest(`/user/forgetPwd/${this.state.email}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('调用验证邮箱返回的数据', res);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        if (res.flag === true) {\r\n          console.log('邮件发送成功,请注意查收')\r\n          this.timer && clearInterval(this.timer)\r\n          this.timer = setInterval(() => {\r\n            num++\r\n            if (num > 300) {\r\n              message.error('The email is invalid, please click send again', 10)\r\n              num = 0\r\n              this.timer && clearInterval(this.timer)\r\n            }\r\n            this._validation()\r\n\r\n          }, 1000);\r\n          message.success('The email was sent successfully, please check it', 10)\r\n        } else {\r\n          console.log('邮件发送失败');\r\n          message.error('The account does not exist', 10)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n  _validation = () => {\r\n\r\n    fetchRequest(`/user/checkForgetPassword/${this.state.email}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('验证结果', res);\r\n        if (res.flag === true) {\r\n          temporaryStorage.forgotUserId = res.data.userId\r\n\r\n          this.timer && clearInterval(this.timer)\r\n          if (this.state.success1 === false) {\r\n            this.setState({\r\n              success1: true\r\n            }, () => {\r\n              console.log('跳转');\r\n              this.props.history.push('/user/login/resetPassword')\r\n            })\r\n          }\r\n          console.log('成功了');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"forgotPassword\">\r\n\r\n        <div className=\"heaed\"  >\r\n          <div className=\"l\"\r\n          >\r\n\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"body\" style={{ height: MTop(280), }}>\r\n          <div className=\"logo\"\r\n            style={{ paddingTop: mTop(10) }}\r\n          >\r\n            <img src={mellaLogo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n          <div className=\"text\"\r\n            style={{ fontSize: px(30), padding: `${px(20)}px 0`, marginBottom: mTop(10), marginTop: mTop(20) }}\r\n          >\r\n            Forgot Your Password?\r\n          </div>\r\n          <p className=\"text1\" style={{ fontSize: px(20) }}>\r\n            Please enter email and we<br />\r\n            will send you a link if there is an<br />\r\n            account associated with that address.<br />\r\n          </p>\r\n          {/* <div className=\"text1\">Please enter email and we</div>\r\n          <div className=\"text1\">will send you a link if there is an</div>\r\n          <div className=\"text1\">account associated with that address.</div> */}\r\n          <div className=\"inpF\">\r\n\r\n            <Input className='inp'\r\n              style={{ width: px(310), height: mTop(50), marginLeft: px(6), marginBottom: mTop(18), fontSize: px(18) }}\r\n              value={this.state.email}\r\n              placeholder='rachel@friends.com'\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value\r\n                this.setState({\r\n                  email: str\r\n                })\r\n              }}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"button1\" >\r\n          <Button\r\n            style={{ width: px(300), fontSize: px(18), height: px(300 / 6.5) }}\r\n\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            SEND LINK\r\n          </Button>\r\n        </div>\r\n\r\n        {\r\n          this.state.spin &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              loading...\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n\r\n        {\r\n          this.state.noRegistered &&\r\n          <div className=\"modal\">\r\n            <div className=\"modalChaild\" style={{ borderRadius: pX(20) }}>\r\n              <img src={errorIcon} alt=\"\" style={{ width: pX(30), margin: `${pX(20)}px 0` }} />\r\n              <p style={{ fontSize: px(17) }}>\r\n                This account is not registered. Do you want to go to register?\r\n              </p>\r\n\r\n              <div className=\"modalbutton\" style={{ margin: `${pX(0)}px 0 ${pX(20)}px` }}>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      noRegistered: false\r\n                    })\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      noRegistered: false\r\n                    })\r\n                    this.props.history.push({ pathname: '/uesr/logUp/VetPrifile', email: this.state.email })\r\n\r\n                  }}\r\n                >\r\n                  Jump\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        }\r\n\r\n\r\n        {\r\n          this.state.isLimit &&\r\n          <div className=\"modal\">\r\n            <div className=\"modalChaild\" style={{ borderRadius: pX(20) }}>\r\n              <img src={errorIcon} alt=\"\" style={{ width: pX(30), margin: `${pX(20)}px 0` }} />\r\n              <p style={{ fontSize: px(17) }}>\r\n                Your email is not verified - please verify\r\n              </p>\r\n\r\n              <div className=\"modalbutton\" style={{ margin: `${pX(0)}px 0 ${pX(20)}px` }}>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      isLimit: false\r\n                    })\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      isLimit: false,\r\n                      spin: true\r\n                    })\r\n\r\n                    fetchRequest(`/user/sendActivateEmail/${this.state.email}`, \"GET\", \"\")\r\n                      .then(res => {\r\n                        console.log(res);\r\n                        this.setState({\r\n                          spin: false,\r\n                        })\r\n                        if (res.flag === true) {\r\n                          console.log('发送成功');\r\n                          const time = setTimeout(() => {\r\n                            message.success('The email has been sent, please follow the prompts')\r\n                            clearTimeout(time)\r\n                          }, 5);\r\n\r\n                        } else {\r\n                          console.log('发送失败');\r\n                          const time = setTimeout(() => {\r\n                            message.error('Failed to send mail')\r\n                            clearTimeout(time)\r\n                          }, 5);\r\n\r\n                        }\r\n                      })\r\n                      .catch(err => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                          spin: false,\r\n                        })\r\n                      })\r\n                  }}\r\n                >\r\n                  Jump\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}",["302","303"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx",["304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx",["320","321","322","323","324","325","326","327"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\avatar\\Avatar.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\index.js",[],["328","329"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\measure\\Mesasure.jsx",["330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Menu,\r\n  Modal,\r\n  Table,\r\n  Popconfirm,\r\n  Tooltip,\r\n  message,\r\n  Select,\r\n  Spin\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts';\r\nimport ReactECharts from 'echarts-for-react';\r\n// 引入柱状图\r\nimport 'echarts/lib/chart/bar';\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport { fetchRequest1 } from './../../utils/FetchUtil'\r\nimport MyModal from './../../utils/myModal/MyModal'\r\n\r\nimport ye from './../../assets/images/ye1.png'\r\nimport er from './../../assets/images/er3.png'\r\nimport gang from './../../assets/images/gang3.png'\r\nimport dog from './../../assets/images/dog.png'\r\nimport cat from './../../assets/images/cat.png'\r\nimport other from './../../assets/images/other.png'\r\nimport edit from './../../assets/images/edit.png'\r\nimport del from './../../assets/images/del.png'\r\nimport start from './../../assets/img/start.png'\r\nimport redjinggao from './../../assets/img/redjinggao.png'\r\nimport placement_gang from './../../assets/images/placement_gang.png'\r\nimport placement_er from './../../assets/images/placement_er.png'\r\nimport palcement_ye from './../../assets/images/palcement_ye.png'\r\nimport close from './../../assets/img/close.png'\r\n\r\n\r\nimport './mesasure.less'\r\nimport electronStore from './../../utils/electronStore'\r\nimport { mTop, pX, px, MTop, win } from '../../utils/px';\r\nimport { fetchRequest3 } from '../../utils/FetchUtil3';\r\nimport Heard from '../../utils/heard/Heard';\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\n\r\nlet storage = window.localStorage;\r\nlet echartCi = 0\r\nlet saveHistoryTime = null, getSerialTime = null\r\nlet ipcRenderer = window.electron.ipcRenderer\r\nlet detectTimer = null, countdownTimer = null;\r\n\r\nlet resyncDeviceIsClick = true //用于控制多次点击重新配对按钮\r\nlet num = 0, is97Time = null, is193Time = null, initTime = null\r\n\r\nlet num07 = 0       //接收到07命令行的次数\r\nlet indexNum = 0\r\nlet meetCondition = false //满足第一次测量在76.6与85之间\r\nlet tempArr = []\r\nlet dropNum = 0\r\n\r\nlet lastMeasureTemp = 0, lastMeasureBig = true\r\n\r\nlet firstMeasure = true  //用户反馈刚到这个界面测量就会显示测量温度过高,因此在这里做一个限制,第一次测量不进入温度过高提示\r\nexport default class Mesasure extends Component {\r\n  state = {\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    value: '',\r\n    api: '',\r\n    id: '',\r\n    dataArr: [],\r\n    seleceID: '',//医生id\r\n    data: { ci: [''], wen: [] },\r\n    echarsData: {\r\n      Eci: [],\r\n      wen0: [],\r\n      wen1: []\r\n    },\r\n    temColor: '',\r\n    Temp: '',\r\n    isMeasure: false,     //腋温正在测量中\r\n\r\n    mearsurePart: 1,\r\n    historyData: [],\r\n    patientId: '',\r\n    spin: false,        //patientId后面的刷新按钮是否旋转\r\n    petName: '',\r\n    notes: '',\r\n    addpatient_petName: '',\r\n    addpatient_description: '',\r\n    addpatient_species: 1,\r\n    roomTemperature: '',\r\n    referenceRectalTemperature: '',\r\n    bodyConditionScore: '',\r\n    furLength: '',\r\n    bodyType: '',\r\n    heartRate: '',\r\n    bloodPressure: '',\r\n    respiratoryRate: '',\r\n    visible: false,       //nodel框是否显示\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n\r\n    editVisible: false,\r\n    err07Visible: false,\r\n\r\n    leftStatus: 3,         //1代表着有宠物信息，2代表着添加宠物信息，3代表着初始化，没有填入patientId\r\n\r\n    selectPet: {\r\n      petId: '',\r\n      petName: '',\r\n      owner: '',\r\n      breedName: '',\r\n      isMix: false,\r\n      age: '',\r\n      weight: '',\r\n      birthday: ''\r\n    },\r\n    units: '℉',\r\n    measuerStatus: 'disconnected',\r\n    isconnected: false,\r\n    countdown: 60,\r\n    isPetCharacteristics: true,\r\n    isEmergency: false,\r\n    seleceEmergencies: {},\r\n    emerPatientID: '',\r\n    emerData: [],         //临床测试所有数据,用于传到mella后台\r\n    petVitalTypeId: '01',  //测量部位\r\n\r\n\r\n\r\n    memo: '',\r\n    editRectal: '',\r\n    editRoomTemperature: '',\r\n    editHeartRate: '',\r\n    editRespiratoryRate: '',\r\n    editBloodPressure: '',\r\n    editBodyConditionScore: '',\r\n    editFurLength: '',\r\n\r\n    noUSB: false,  //是否有usb底座，为true代表没有\r\n\r\n\r\n    tip: '',\r\n    tipSpin: false,\r\n    loading: false,\r\n    showHistoryEchart: false,  //在展示历史曲线的时候为true，当开始测量为false\r\n    tempHeight: false,           //第一次温度过高,需要冷却一下\r\n  }\r\n\r\n  componentWillMount () {\r\n    try {\r\n      console.log('-----------------===============-------------', this.props.location.isconnected);\r\n      if (this.props.location.isconnected === false || this.props.location.isconnected === true) {\r\n        if (this.props.location.isconnected === false) {\r\n\r\n        } else {\r\n          this.setState({\r\n            measuerStatus: 'connented',\r\n            isconnected: true\r\n\r\n          })\r\n          is97Time = new Date()\r\n        }\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n  componentDidMount () {\r\n    firstMeasure = true\r\n\r\n\r\n    ipcRenderer.send('Lowbig', win())\r\n    console.log(this.props);\r\n    storage.isClinical = 'true'\r\n\r\n    //这里是为了从编辑宠物界面回来的时候能够直接展示这个宠物\r\n    if (this.props.location.participate) {\r\n      let props = this.props.location.participate\r\n\r\n      this.setState({\r\n        patientId: props.patientId\r\n      }, () => {\r\n        this._getPetInfo()\r\n      })\r\n    } else {\r\n      if (storage.measurepatientId) {\r\n        console.log('有上级传来的数据:', storage.measurepatientId);\r\n        this.setState({\r\n          patientId: storage.measurepatientId\r\n        }, () => {\r\n          this._getPetInfo()\r\n        })\r\n      }\r\n    }\r\n\r\n    //这里是记录从哪里传过来的，是普通医生、ezyVet、vetspire\r\n    if (this.props.location.identity) {\r\n      switch (this.props.location.identity) {\r\n        case '1':\r\n          console.log('这是从vetspire来的')\r\n\r\n          break;\r\n        case '2':\r\n          console.log('这是从ezyVet来的')\r\n          if (this.props.location.patientId) {\r\n            this.setState({\r\n              patientId: this.props.location.patientId\r\n            }, () => {\r\n              this._getPetInfo()\r\n            })\r\n          }\r\n\r\n          break;\r\n        case '3':\r\n          console.log('这是从普通医生来的来的');\r\n          // if (this.props.location.patientId) {\r\n          //   this.setState({\r\n          //     patientId: this.props.location.patientId\r\n          //   }, () => {\r\n          //     this._getPetInfo()\r\n          //   })\r\n          // }\r\n          this._getPetInfoBySave()\r\n          break;\r\n        default: console.log('暂未定义');\r\n          break;\r\n      }\r\n    }\r\n\r\n    let hardSet = electronStore.get('hardwareConfiguration')\r\n\r\n    if (!hardSet) {\r\n      let settings = {\r\n        isHua: true,\r\n        is15: true,\r\n        self_tarting: false,\r\n        isBacklight: true,\r\n        isBeep: true,\r\n        backlightTimer: { length: 140, number: '45' },\r\n        autoOff: { length: 0, number: '30' },\r\n      }\r\n      electronStore.set('hardwareConfiguration', settings)\r\n      this.setState({\r\n        units: '℉'\r\n      })\r\n    } else {\r\n      let units = hardSet.isHua ? '℉' : '℃'\r\n      this.setState({\r\n        units\r\n      })\r\n    }\r\n\r\n\r\n\r\n    ipcRenderer.on('sned', this._send)\r\n    ipcRenderer.on('usbDetect', this.usbDetect)\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    //分辨率改变后窗口自动改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    //检测有没有充电桩、温度计\r\n\r\n\r\n    this._whether_to_connect_to_mella()\r\n    countdownTimer && clearInterval(countdownTimer)\r\n\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    ipcRenderer.removeListener('sned', this._send)\r\n    ipcRenderer.removeListener('usbDetect', this.usbDetect)\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n    detectTimer && clearInterval(detectTimer)\r\n    this.timer && clearTimeout(this.timer)\r\n    countdownTimer && clearInterval(countdownTimer)\r\n    getSerialTime && clearTimeout(getSerialTime)\r\n    this.detectTimer && clearInterval(this.detectTimer)\r\n    message.destroy()\r\n    firstMeasure = true\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  usbDetect = (event, data) => {\r\n    if (data === true) {\r\n      this._whether_to_connect_to_mella()\r\n    } else {\r\n      this.detectTimer && clearInterval(this.detectTimer)\r\n      num07 = 0\r\n    }\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n\r\n    this.command(data)()\r\n  }\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      message.destroy()\r\n      this.setState({\r\n        noUSB: false\r\n      })\r\n    } else {\r\n      if (!this.state.noUSB) {\r\n        message.error('The base is not detected. Please insert the base', 0)\r\n        this.setState({\r\n          noUSB: true,\r\n          measuerStatus: 'disconnected',\r\n          countdown: 60,\r\n          isMeasure: false,\r\n          isconnected: false,\r\n          echarsData: {\r\n            Eci: [],\r\n            wen0: [],\r\n            wen1: []\r\n          },\r\n          Temp: '',\r\n          emerData: []\r\n        })\r\n        echartCi = 0\r\n        meetCondition = false\r\n      }\r\n\r\n    }\r\n  }\r\n  _whether_to_connect_to_mella = () => {\r\n    this.detectTimer && clearInterval(this.detectTimer)\r\n    message.destroy()\r\n    this.detectTimer = setInterval(() => {\r\n      if (this.state.isMeasure) {\r\n        return\r\n      }\r\n      // console.log(initTime);\r\n      if (!initTime) {\r\n        console.log('断开连接');\r\n        this.setState({\r\n          measuerStatus: 'disconnected',\r\n          countdown: 0,\r\n          isMeasure: false,\r\n          isconnected: false,\r\n          isEarMeasure: false\r\n        })\r\n        initTime = new Date()\r\n        meetCondition = false\r\n      } else {\r\n        // if (this.state.measuerStatus === 'disconnected') {\r\n        //   ipcRenderer.send('usbdata', { command: '07', arr: [] })\r\n        // }\r\n        ipcRenderer.send('usbdata', { command: '07', arr: [] })\r\n\r\n        if (new Date() - initTime < 5000) {\r\n          console.log('连接成功', indexNum);\r\n          if (indexNum++ % 5 === 1) {\r\n            console.log('去询问探头');\r\n            ipcRenderer.send('usbdata', { command: '31', arr: [] })\r\n          }\r\n\r\n\r\n\r\n        } else {\r\n\r\n          console.log('2断开连接');\r\n          this.setState({\r\n            measuerStatus: 'disconnected',\r\n            countdown: 0,\r\n            isMeasure: false,\r\n            isconnected: false,\r\n            isEarMeasure: false\r\n          })\r\n          meetCondition = false\r\n        }\r\n      }\r\n    }, 2000);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n  getOption = () => {\r\n    let { units } = this.state\r\n    let min, max;\r\n    if (units === '℃') {\r\n      min = 25\r\n      max = 45\r\n    } else {\r\n      min = 75\r\n      max = 115\r\n    }\r\n    let { echarsData } = this.state\r\n    let { Eci, wen0, wen1 } = echarsData\r\n    let that = this\r\n    let option = {\r\n      color: ['#81b22f'],\r\n      tooltip: {\r\n        /*返回需要的信息*/\r\n        trigger: 'axis',\r\n        triggerOn: 'mousemove',\r\n        enterable: true,\r\n        formatter: function (param) {\r\n          var value = param[0].value;\r\n          // console.log('----para', param);\r\n          return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(1)}${that.state.units}</div>`\r\n        }\r\n      },\r\n      xAxis: {\r\n        name: 'SPL',\r\n        nameLocation: 'end',\r\n        nameTextStyle: {\r\n          align: 'left',\r\n        },\r\n        type: 'category',\r\n        // data: [\"\", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,],\r\n        data: Eci,\r\n        // data:['','15miao','30miao'],\r\n        axisLine: {\r\n          lineStyle: {\r\n            // 设置x轴颜色\r\n            color: '#A0A0A0',\r\n            show: true\r\n          }\r\n        },\r\n        // 设置X轴数据旋转倾斜\r\n        axisLabel: {\r\n          rotate: 0, // 旋转角度\r\n          interval: 29  //设置X轴数据间隔几个显示一个，为0表示都显示\r\n\r\n        },\r\n\r\n      },\r\n      yAxis: {\r\n        name: 'temperature',\r\n        type: 'value',\r\n        min, // 设置y轴刻度的最小值\r\n        max,  // 设置y轴刻度的最大值\r\n        splitNumber: 0,  // 设置y轴刻度间隔个数\r\n        nameTextStyle: {\r\n          padding: [0, 0, 0, 8],\r\n          // backgroundColor: 'pink',\r\n          width: '1200px',\r\n          // fontSize: 20,\r\n          align: 'left',\r\n        },\r\n\r\n        axisLine: {\r\n          lineStyle: {\r\n            // 设置x轴颜色\r\n            color: '#A0A0A0',\r\n            show: true\r\n          }\r\n        },\r\n        splitLine: {\r\n          show: false\r\n        },\r\n      },\r\n      series: [{\r\n        name: '模拟数据',\r\n        type: 'line',\r\n        showSymbol: false,\r\n        hoverAnimation: false,\r\n        // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\r\n        data: wen0,\r\n        smooth: 0.5,\r\n        symbol: 'none',\r\n        itemStyle: {\r\n          normal: {\r\n            lineStyle: {        // 系列级个性化折线样式 \r\n              width: 2,\r\n              type: 'solid',\r\n              color: {\r\n                type: 'linear',\r\n                x: 0,\r\n                y: 1,\r\n                x2: 0,\r\n                y2: 0,\r\n                colorStops: [{\r\n                  offset: 0.5, color: '#47C2ED' // 0% 处的颜色  蓝\r\n                }, {\r\n                  offset: 1, color: '#78D35D' // 50% 处的颜色  绿\r\n                },\r\n                  // {\r\n                  //   offset: 1, color: 'red' // 100% 处的颜色   红\r\n                  // }\r\n                ],\r\n                globalCoord: false // 缺省为 false\r\n              }\r\n            },\r\n          }\r\n        }\r\n      }]\r\n    }\r\n    return option;\r\n  }\r\n\r\n  handleClick = e => {\r\n    console.log('---------------身份', storage.identity);\r\n\r\n    switch (e.key) {\r\n      case '1':\r\n        //  storage.measurepatientId = this.state.patientId; console.log('返回前的问题查看：', this.props.history); this.props.history.goBack()\r\n        switch (storage.identity) {   //1是vetspire   2是ezyvet   3是医生\r\n          case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n            break;\r\n          case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n            break;\r\n\r\n          case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n            break;\r\n\r\n\r\n\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case '2': storage.measurepatientId = ''; this.props.history.push('/')\r\n        break;\r\n      case '3': storage.measurepatientId = this.state.patientId; this.props.history.push('/page12');\r\n        break;\r\n      case '4': storage.measurepatientId = this.state.patientId; this.props.history.push({ pathname: '/page10', isconnected: this.state.isconnected })\r\n        break;\r\n      case '5': this.props.history.push('/menuOptions/settings'); break;\r\n      default: console.log('这个选项还没有做呢');\r\n\r\n\r\n    }\r\n\r\n  };\r\n\r\n  command = (newArr) => {\r\n    const instruction = [209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 7, 99]\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    if (newArr[2] !== 7) {\r\n      initTime = new Date()\r\n      num07 = 0\r\n    } else {\r\n      num07++\r\n    }\r\n\r\n\r\n    const commandArr = {\r\n      209: () => {  //腋温\r\n\r\n        let temp1 = parseFloat(`${dataArr1[3]}.${(dataArr1[4])}`)\r\n        let temp0 = parseFloat(`${dataArr1[5]}.${(dataArr1[6])}`)\r\n        let temp2 = parseFloat(`${dataArr1[7]}.${(dataArr1[8])}`)\r\n        let pdt0 = parseFloat(`${dataArr1[9]}.${(dataArr1[10])}`)\r\n        let pdt1 = parseFloat(`${dataArr1[11]}.${(dataArr1[12])}`)\r\n        let alpha0 = parseFloat(`${dataArr1[13]}.${(dataArr1[14])}`)\r\n        let alpha1 = parseFloat(`${dataArr1[15]}.${(dataArr1[16])}`)\r\n        let Temp = temp0\r\n\r\n        if (Temp === 0 || Temp === null || Temp === undefined) {\r\n          return\r\n        }\r\n\r\n        if (this.state.isMeasure === false) {\r\n          ipcRenderer.send('usbdata', { command: '31', arr: [] })\r\n          this.setState({\r\n            echarsData: {\r\n              Eci: [],\r\n              wen0: [],\r\n              wen1: []\r\n            },\r\n            countdown: 60\r\n\r\n          })\r\n          echartCi = 0\r\n\r\n        }\r\n\r\n\r\n\r\n        //需要做第一次温度,判断,如果温度低于76.6(24.8)则界面显示low,并且不记录上传到后台的临床测试数据emerData\r\n        //需要第一次做温度判断,如果温度高于85(29.4)℉,则跳出高温弹窗,不记录上传到后台的临床测试数据emerDate,并且第一次测量也为true\r\n\r\n        if (!meetCondition) {\r\n          dropNum = 0\r\n          tempArr = []\r\n          if (Temp >= 24.8 && Temp <= 29.4) {\r\n            meetCondition = true\r\n\r\n            if (countdownTimer) {\r\n              console.log('有定时器了，清理掉');\r\n              clearInterval(countdownTimer)\r\n              this.setState((prestate, props) => ({\r\n                countdown: 60\r\n              }));\r\n            }\r\n            countdownTimer = setInterval(() => {\r\n              console.log('进入定时器');\r\n              let { countdown, isconnected } = this.state\r\n              if (countdown <= 0) {\r\n                countdown = 60\r\n              }\r\n              this.setState({\r\n                countdown: countdown - 1\r\n\r\n              })\r\n              if (countdown <= 1) {\r\n                clearInterval(countdownTimer)\r\n                console.log('我要去发送了');\r\n                ipcRenderer.send('usbdata', { command: '41', arr: [] })\r\n              }\r\n              if (isconnected === false) {\r\n                clearInterval(countdownTimer)\r\n              }\r\n            }, 1000);\r\n\r\n\r\n\r\n            let emerData = this.state.emerData\r\n            let str = {\r\n              data0: temp0,\r\n              data1: temp1,\r\n              data2: temp2,\r\n              pdt0,\r\n              pdt1,\r\n              Alpha0: alpha0,\r\n              Alpha1: alpha1,\r\n            }\r\n            emerData.push(str)\r\n\r\n            let { echarsData } = this.state\r\n            let { wen0, wen1, Eci } = echarsData\r\n            Eci.push((echartCi++))\r\n            if (this.state.units === '℃') {\r\n              wen0.push(temp0)\r\n              wen1.push(temp1)\r\n            } else {\r\n              wen0.push(temp0 * 1.8 + 32)\r\n              wen1.push(temp1 * 1.8 + 32)\r\n            }\r\n\r\n            this.setState({\r\n              Temp,\r\n              echarsData,\r\n              isMeasure: true,\r\n              measuerStatus: 'connented',\r\n              isconnected: true,\r\n              showHistoryEchart: false,\r\n              emerData,\r\n              tempHeight: false\r\n            }, () => {\r\n              const option = this.getOption();\r\n              this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n            })\r\n\r\n          } else {\r\n\r\n            meetCondition = false\r\n            lastMeasureBig = true\r\n            lastMeasureTemp = temp0\r\n            if (Temp < 24.8) {\r\n              let { echarsData } = this.state\r\n              let { wen0, wen1, Eci } = echarsData\r\n              Eci.push((echartCi++))\r\n              if (this.state.units === '℃') {\r\n                wen0.push(temp0)\r\n                wen1.push(temp1)\r\n              } else {\r\n                wen0.push(temp0 * 1.8 + 32)\r\n                wen1.push(temp1 * 1.8 + 32)\r\n              }\r\n\r\n              this.setState({\r\n                Temp,\r\n                echarsData,\r\n                isMeasure: true,\r\n                measuerStatus: 'connented',\r\n                isconnected: true,\r\n                showHistoryEchart: false,\r\n                countdown: 60,\r\n                tempHeight: false,\r\n              }, () => {\r\n                const option = this.getOption();\r\n                this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n              })\r\n            } else {\r\n              if (!firstMeasure) {\r\n                if (!this.state.tempHeight) {\r\n                  this.setState({\r\n                    tempHeight: true\r\n                  })\r\n                }\r\n              } else {\r\n                meetCondition = true\r\n                firstMeasure = false\r\n\r\n                if (countdownTimer) {\r\n                  console.log('有定时器了，清理掉');\r\n                  clearInterval(countdownTimer)\r\n                  this.setState((prestate, props) => ({\r\n                    countdown: 60\r\n                  }));\r\n                }\r\n                countdownTimer = setInterval(() => {\r\n                  console.log('进入定时器');\r\n                  let { countdown, isconnected } = this.state\r\n                  if (countdown <= 0) {\r\n                    countdown = 60\r\n                  }\r\n                  this.setState({\r\n                    countdown: countdown - 1\r\n\r\n                  })\r\n                  if (countdown <= 1) {\r\n                    clearInterval(countdownTimer)\r\n                    console.log('我要去发送了');\r\n                    ipcRenderer.send('usbdata', { command: '41', arr: [] })\r\n                  }\r\n                  if (isconnected === false) {\r\n                    clearInterval(countdownTimer)\r\n                  }\r\n                }, 1000);\r\n\r\n\r\n\r\n                let emerData = this.state.emerData\r\n                let str = {\r\n                  data0: temp0,\r\n                  data1: temp1,\r\n                  data2: temp2,\r\n                  pdt0,\r\n                  pdt1,\r\n                  Alpha0: alpha0,\r\n                  Alpha1: alpha1,\r\n                }\r\n                emerData.push(str)\r\n\r\n                let { echarsData } = this.state\r\n                let { wen0, wen1, Eci } = echarsData\r\n                Eci.push((echartCi++))\r\n                if (this.state.units === '℃') {\r\n                  wen0.push(temp0)\r\n                  wen1.push(temp1)\r\n                } else {\r\n                  wen0.push(temp0 * 1.8 + 32)\r\n                  wen1.push(temp1 * 1.8 + 32)\r\n                }\r\n\r\n                this.setState({\r\n                  Temp,\r\n                  echarsData,\r\n                  isMeasure: true,\r\n                  measuerStatus: 'connented',\r\n                  isconnected: true,\r\n                  showHistoryEchart: false,\r\n                  emerData,\r\n                  tempHeight: false\r\n                }, () => {\r\n                  const option = this.getOption();\r\n                  this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n                })\r\n              }\r\n\r\n            }\r\n\r\n            console.log('不满足');\r\n          }\r\n        } else {\r\n          console.log('差值', temp0, lastMeasureTemp, temp0 - lastMeasureTemp);\r\n          if (temp0 - lastMeasureTemp <= -0.03) {\r\n            console.log('本次测量要小于上次测量,不计入里面');\r\n            countdownTimer && clearInterval(countdownTimer)\r\n            lastMeasureBig = false\r\n            return\r\n          }\r\n          if (!lastMeasureBig) {\r\n            countdownTimer = setInterval(() => {\r\n              console.log('进入定时器');\r\n              let { countdown, isconnected } = this.state\r\n              if (countdown <= 0) {\r\n                countdown = 60\r\n              }\r\n              this.setState({\r\n                countdown: countdown - 1\r\n\r\n              })\r\n              if (countdown <= 1) {\r\n                clearInterval(countdownTimer)\r\n                console.log('我要去发送了');\r\n                ipcRenderer.send('usbdata', { command: '41', arr: [] })\r\n              }\r\n              if (isconnected === false) {\r\n                clearInterval(countdownTimer)\r\n              }\r\n            }, 1000);\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n          lastMeasureBig = true\r\n          lastMeasureTemp = temp0\r\n          let emerData = this.state.emerData\r\n          let str = {\r\n            data0: temp0,\r\n            data1: temp1,\r\n            data2: temp2,\r\n            pdt0,\r\n            pdt1,\r\n            Alpha0: alpha0,\r\n            Alpha1: alpha1,\r\n          }\r\n          emerData.push(str)\r\n\r\n          let { echarsData } = this.state\r\n          let { wen0, wen1, Eci } = echarsData\r\n          Eci.push((echartCi++))\r\n          if (this.state.units === '℃') {\r\n            wen0.push(temp0)\r\n            wen1.push(temp1)\r\n          } else {\r\n            wen0.push(temp0 * 1.8 + 32)\r\n            wen1.push(temp1 * 1.8 + 32)\r\n          }\r\n\r\n          tempArr.push(temp0)\r\n          if (tempArr.length > 10) {\r\n            let k = (tempArr[tempArr.length - 1] - tempArr[tempArr.length - 11]) / 10\r\n            console.log('斜率', k);\r\n            if (k < -0.035) {\r\n              console.log('下降的有点狠了');\r\n              dropNum++\r\n            } else {\r\n              dropNum = 0\r\n            }\r\n            if (dropNum > 10) {\r\n              message.destroy()\r\n              message.error('Measurement failed')\r\n              dropNum = 0\r\n            }\r\n          }\r\n\r\n\r\n          this.setState({\r\n            Temp,\r\n            echarsData,\r\n            isMeasure: true,\r\n            measuerStatus: 'connented',\r\n            isconnected: true,\r\n            showHistoryEchart: false,\r\n            emerData,\r\n            tempHeight: false\r\n          }, () => {\r\n            const option = this.getOption();\r\n            this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n          })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      },\r\n      208: () => {  //耳温\r\n\r\n\r\n\r\n        //现在探头0可能不存在，所以把探头0改为探头1\r\n\r\n        let temp0 = parseFloat(`${dataArr1[7]}.${(dataArr1[8])}`)\r\n\r\n\r\n        let Temp = Math.floor(temp0 * 10) / 10\r\n        console.log('------------gangwen--------------', Temp);\r\n\r\n        let emerData = this.state.emerData\r\n\r\n        let str = {\r\n          data0: temp0,\r\n\r\n        }\r\n        emerData.push(str)\r\n        this.setState({\r\n          emerData,\r\n          Temp,\r\n          isMeasure: false,\r\n          mearsurePart: 3,\r\n          measuerStatus: 'measuring',\r\n          isconnected: true\r\n        })\r\n        meetCondition = false\r\n\r\n      },\r\n      193: () => {  //硬件发送结束命令\r\n        let time = new Date() - is193Time\r\n        lastMeasureTemp = 0\r\n        lastMeasureBig = true\r\n        console.log(time);\r\n        if (time < 1000) {\r\n          is193Time = new Date()\r\n          console.log('我直接抛出');\r\n          return;\r\n        } else {\r\n          console.log('---------------------------', time);\r\n          is193Time = new Date()\r\n\r\n          countdownTimer && clearInterval(countdownTimer)\r\n\r\n\r\n          saveHistoryTime && clearTimeout(saveHistoryTime)\r\n\r\n          saveHistoryTime = setTimeout(() => { //防止连续向后台发送数据\r\n            countdownTimer && clearInterval(countdownTimer)\r\n\r\n            meetCondition = false\r\n\r\n\r\n\r\n            let { roomTemperature, referenceRectalTemperature, bodyConditionScore,\r\n              furLength, heartRate, bloodPressure, respiratoryRate, Temp, emerData } = this.state\r\n            if (emerData.length < 10) {\r\n              console.log('临床数据太少,不做保存');\r\n              return\r\n            }\r\n\r\n            if (bodyConditionScore === '') {\r\n              bodyConditionScore = null\r\n            } else {\r\n              bodyConditionScore = parseFloat(bodyConditionScore)\r\n            }\r\n\r\n            if (heartRate === '') {\r\n              heartRate = null\r\n            } else {\r\n              heartRate = parseFloat(heartRate)\r\n            }\r\n\r\n            if (respiratoryRate === '') {\r\n              respiratoryRate = null\r\n            } else {\r\n              respiratoryRate = parseFloat(respiratoryRate)\r\n            }\r\n\r\n            if (roomTemperature === '') {\r\n              roomTemperature = null\r\n            } else {\r\n              roomTemperature = ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2)\r\n            }\r\n\r\n            if (referenceRectalTemperature === '') {\r\n              referenceRectalTemperature = null\r\n            } else {\r\n              referenceRectalTemperature = ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2)\r\n            }\r\n\r\n            if (furLength === '') {\r\n              furLength = null\r\n            } else {\r\n              furLength = parseFloat(furLength)\r\n            }\r\n            let petVitalId = null\r\n            switch (this.state.petVitalTypeId) {\r\n              case '01': petVitalId = 1; break;\r\n              case '02': petVitalId = 3; break;\r\n              case '03': petVitalId = 4; break;\r\n              default: petVitalId = 1; break;\r\n            }\r\n            let datas = {\r\n\r\n              temperature: parseFloat(Temp),  //测量温度\r\n              roomTemperature,//室温\r\n              bodyConditionScore,\r\n              heartRate,\r\n              respiratoryRate,\r\n              referenceRectalTemperature,\r\n              furLength,\r\n              bloodPressure,\r\n              memo: this.state.notes,\r\n              petVitalTypeId: petVitalId,\r\n              clinicalDataEntityList: emerData\r\n            }\r\n            if (storage.roleId === `1`) {\r\n              datas.userId = storage.userId\r\n            } else {\r\n              datas.doctorId = storage.userId\r\n              datas.userId = storage.userId\r\n            }\r\n\r\n            if (this.state.selectPet.petId !== '' && this.state.isEmergency === false) {\r\n\r\n              datas.petId = this.state.selectPet.petId\r\n\r\n\r\n              console.log('临床测试入参：', datas);\r\n              //把数据保存进入云端\r\n              fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\r\n                .then(res => {\r\n                  console.log(res);\r\n                  meetCondition = false\r\n                  if (res.flag === true) {\r\n                    console.log('上传成功');\r\n                    // message.success('Uploaded successfully')\r\n                    this.setState({\r\n                      emerData: [],\r\n                      isMeasure: false\r\n                    })\r\n\r\n                    message.success('Uploaded successfully')\r\n                    this._getHistory11(this.state.selectPet.petId)\r\n                  } else {\r\n                    console.log('上传失败');\r\n                    this.setState({\r\n                      emerData: [],\r\n                      isMeasure: false\r\n                    })\r\n                    message.error('upload failed')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  console.log(err);\r\n                  // message.error(err)\r\n                  this.setState({\r\n                    emerData: [],\r\n                    isMeasure: false\r\n                  })\r\n                  meetCondition = false\r\n                })\r\n            } else if (this.state.isEmergency === true) {\r\n\r\n              console.log('温度数据保存入参：', datas);\r\n\r\n              fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\r\n                .then(res => {\r\n                  console.log(res);\r\n                  meetCondition = false\r\n                  if (res.flag === true) {\r\n                    console.log('上传成功');\r\n                    message.success('Uploaded successfully')\r\n                    this.setState({\r\n                      emerData: [],\r\n                      isMeasure: false\r\n                    })\r\n                    // this._getHistory11(this.state.selectPet.petId)\r\n                    this._getEmergencyHistory()\r\n                  } else {\r\n                    console.log('上传失败');\r\n                    message.error('upload failed')\r\n                    this.setState({\r\n                      emerData: [],\r\n                      isMeasure: false\r\n                    })\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  console.log(err);\r\n                  message.error(err)\r\n                  this.setState({\r\n                    emerData: [],\r\n                    isMeasure: false\r\n                  })\r\n                  meetCondition = false\r\n                })\r\n            }\r\n\r\n            clearTimeout(saveHistoryTime)\r\n          }, 500);\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n      },\r\n\r\n      192: () => {   //开始测量返回结果\r\n        switch (newArr[3]) {\r\n          case 90: console.log('有探头，开始测量的返回指令·'); break;\r\n          case 11: console.log('没有探头，开始测量的返回值'); break;\r\n\r\n        }\r\n      },\r\n      129: () => {      //返回硬件版本号\r\n        console.log(`返回的版本号为${newArr[3]}`);\r\n        this.setState({\r\n          measuerStatus: 'connented',\r\n          isconnected: true\r\n\r\n        })\r\n      },\r\n      135: () => {          //硬件的一些配置信息\r\n        /**\r\n         * ______________新版、旧版没法控制温度计__________________\r\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\r\n         * newArr[7] 无操作关机时间        bcd码\r\n         * newArr[8] 背光时间              bcd码\r\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\r\n         * newArr[10] 测量单位    01代表℃，00代表℉\r\n         */\r\n        countdownTimer && clearInterval(countdownTimer)\r\n        this.setState({\r\n          measuerStatus: 'connented',\r\n          isconnected: true\r\n\r\n        })\r\n        let hardSet = electronStore.get('hardwareConfiguration')\r\n        let beep = hardSet.isBeep ? '11' : '00'\r\n        let unit = hardSet.isHua ? '00' : '01'\r\n\r\n        if (dataArr1[7] === hardSet.autoOff.number && dataArr1[8] === hardSet.backlightTimer.number &&\r\n          dataArr1[9] === beep && dataArr1[10] === unit) {\r\n        } else {\r\n          console.log('不相同，去发送命令');\r\n          let setArr = ['03', 'ed', '07', 'dd', hardSet.autoOff.number, hardSet.isBacklight ? hardSet.backlightTimer.number : '00', hardSet.isBeep ? '11' : '00', hardSet.isHua ? '00' : '01']\r\n          ipcRenderer.send('usbdata', { command: '21', arr: setArr })\r\n        }\r\n        // if (newArr[10] === 0) {\r\n        //   this.setState({\r\n        //     units: '℉'\r\n        //   })\r\n        // } else {\r\n        //   this.setState({\r\n        //     units: '℃'\r\n        //   })\r\n        // }\r\n\r\n\r\n      },\r\n      238: () => {     //探头松动\r\n        console.log('探头松动');\r\n        this.setState({\r\n          isMeasure: false\r\n        })\r\n        meetCondition = false\r\n        message.error('The probe is loose, please re-install and measure again', 5)\r\n        clearInterval(countdownTimer)\r\n      },\r\n      98: () => { //蓝牙连接断开\r\n        console.log('断开连接---断开连接---断开连接---断开连接---断开连接---断开连接');\r\n\r\n        console.log(new Date() - is97Time);\r\n        if (new Date() - is97Time < 800) {\r\n          return\r\n        }\r\n        this.setState({\r\n          measuerStatus: 'disconnected',\r\n          countdown: 60,\r\n          isMeasure: false,\r\n          isconnected: false,\r\n          echarsData: {\r\n            Eci: [],\r\n            wen0: [],\r\n            wen1: []\r\n          },\r\n          Temp: '',\r\n          emerData: []\r\n        })\r\n        echartCi = 0\r\n        meetCondition = false\r\n\r\n      },\r\n      97: () => {       //蓝牙连接\r\n        console.log('连接成功---连接成功---连接成功---连接成功---连接成功---连接成功');\r\n        this.setState({\r\n          measuerStatus: 'connented',\r\n          isconnected: true\r\n\r\n        })\r\n        is97Time = new Date()\r\n      },\r\n      130: () => {   //获取到mac地址\r\n        let dataArr = newArr.map(item => {\r\n          if (item.toString(16).length < 2) {\r\n            return '0' + item.toString(16)\r\n          } else {\r\n            return item.toString(16)\r\n          }\r\n        })\r\n        let str = ''\r\n        for (let i = 3; i < dataArr.length - 2; i++) {\r\n\r\n          str += dataArr[i]\r\n\r\n        }\r\n        // console.log(str);\r\n        this.setState({\r\n          notes: `${str}\r\n          `\r\n        })\r\n      },\r\n      177: () => {         //探头id\r\n        let dataArr1 = newArr.map(item => {\r\n          if (item.toString(16).length < 2) {\r\n            return '0' + item.toString(16)\r\n          } else {\r\n            return item.toString(16)\r\n          }\r\n        })\r\n        let id = ''\r\n        for (let i = 3; i < dataArr1.length - 2; i++) {\r\n          id += dataArr1[i]\r\n\r\n        }\r\n        console.log(id, dataArr1[7]);\r\n\r\n        this.setState({\r\n          probeID: id,\r\n          petVitalTypeId: dataArr1[7]\r\n        })\r\n        if (dataArr1[7] === '01') {\r\n          this.setState({\r\n            mearsurePart: 1\r\n          })\r\n        } else if (dataArr1[7] === '02') {\r\n          this.setState({\r\n            mearsurePart: 2\r\n          })\r\n        } else if (dataArr1[7] === '03') {\r\n          this.setState({\r\n            mearsurePart: 3\r\n          })\r\n        }\r\n\r\n\r\n\r\n      },\r\n      7: () => {  //发什么收什么，需要去重新插拔底座\r\n        console.log('重新插拔底座');\r\n        if (num07 === 3 && this.state.err07Visible === false) {\r\n          this.setState({\r\n            err07Visible: true\r\n          })\r\n        }\r\n      },\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  _mearsurePort = () => {\r\n    switch (this.state.mearsurePart) {\r\n      case 1: return (\r\n        <div >\r\n          <div className='part'>\r\n            Axillary\r\n            <img src={ye} alt=\"\" width={px(50)} />\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n      case 2: return (\r\n        <div >\r\n          <div className='part'>\r\n            Rectal\r\n            <img src={gang} alt=\"\" width={px(50)} />\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n      default: return (\r\n        <div >\r\n          <div className='part'>\r\n            Ear\r\n            <img src={er} alt=\"\" width={px(50)} />\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  _getEmergencyHistory = () => {\r\n\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate (data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = []\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, 'GET', '')  //userID要自动的\r\n      .then(res => {\r\n        // console.log('获取的宠物记录列表1', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true) {\r\n          let datas = res.data\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let { petId, examId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo, clinicalDatagroupId,\r\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity } = datas[i]\r\n              let Tem = temperature\r\n              try {\r\n                Tem = temperature || clinicalDataEntity.data0\r\n              } catch (error) {\r\n                console.log('抛出的异常', error);\r\n              }\r\n\r\n\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format('MMM DD'),\r\n                time: moment(createTime).format('hh:mm A'),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\r\n              }\r\n\r\n              historys.push(str)\r\n            }\r\n          }\r\n\r\n          //把所有数据拿完后做个排序\r\n\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log('historyData:', historyData);\r\n          this.setState({\r\n            historyData\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n\r\n  _getHistory11 = (petId) => {\r\n    let historys = []\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    fetchRequest(`/pet/getPetExamAndClinicalByPetId/${petId}`, 'GET', '')  //userID要自动的\r\n      .then(res => {\r\n        console.log('获取历史记录', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true) {\r\n          let datas = res.data\r\n          console.log('-------', datas);\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n\r\n            let data = datas[i]\r\n\r\n            let { petId, examId, clinicalDatagroupId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo,\r\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity, modifiedTime } = data\r\n\r\n            if (!clinicalDatagroupId) {\r\n              continue\r\n            }\r\n            let Tem = temperature\r\n            if (clinicalDataEntity) {\r\n              Tem = Tem || clinicalDataEntity.data0\r\n            }\r\n            // console.log('==============', Tem);\r\n            Tem = Tem ? Tem : 0\r\n\r\n\r\n            let time = null\r\n            if (modifiedTime && `${modifiedTime}` !== '' && `${modifiedTime}` !== `undefined`) {\r\n              time = modifiedTime\r\n            } else {\r\n              time = createTime\r\n            }\r\n            let json = {\r\n              time,\r\n              Temp: Tem,\r\n              placement: petVitalTypeId,\r\n              note: memo,\r\n              historyId: examId,\r\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\r\n            }\r\n            historys.push(json)\r\n\r\n\r\n          }\r\n          console.log('---', historys);\r\n          let historyData = []\r\n          for (let i = 0; i < historys.length; i++) {\r\n            let history = historys[i]\r\n            let { bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId, examId } = history\r\n            // console.log('--------', history.placement);\r\n            let placement = history.placement\r\n            if (placement === null || placement === '') {\r\n              placement = 1\r\n            }\r\n            let str = {\r\n              date: moment(history.time).format('MMM DD'),\r\n              time: moment(history.time).format('hh:mm A'),\r\n              temp: history.Temp,\r\n              placement,\r\n              note: history.note,\r\n              historyId: history.historyId,\r\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId,\r\n              key: examId\r\n            }\r\n            historyData.push(str)\r\n          }\r\n          this.setState({\r\n            historyData\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n\r\n  _refresh = () => {\r\n    console.log('点击了');\r\n    // ipcRenderer.send('usbdata', { command: '07', arr: [] })\r\n    this.setState({\r\n      spin: true,  //\r\n      addpatient_description: '',\r\n      addpatient_petName: '',\r\n      addpatient_species: 1\r\n    })\r\n    if (this.state.patientId === '') {\r\n      this.setState({\r\n        spin: false\r\n      })\r\n    } else {\r\n      this._getPetInfo()\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  _getPetInfoBySave = () => {\r\n    let data = JSON.parse(storage.doctorExam)\r\n    console.log('从列表里面传过来的数据', data);\r\n    if (!data) {\r\n      console.log('从walk-in来的');\r\n    } else {\r\n      let { petId, petName, owner, breed, isMix, age, weight, url, patientId } = data\r\n      if (weight === 'unknown') {\r\n        weight = null\r\n      }\r\n      let selectPet = {\r\n        petId,\r\n        petName,\r\n        owner,\r\n        breedName: breed,\r\n        isMix,\r\n        age,\r\n        weight,\r\n        // birthday,\r\n        url,\r\n\r\n\r\n      }\r\n      this.setState({\r\n        selectPet,\r\n        leftStatus: 1,\r\n        patientId\r\n      })\r\n      this._getHistory11(petId)\r\n    }\r\n  }\r\n\r\n\r\n  _getPetInfo = () => {\r\n\r\n    switch (storage.identity) {\r\n      case '1':\r\n        console.log('我是vetspire查找');\r\n\r\n\r\n\r\n      case '2':\r\n        console.log('我是ezyVet查找');\r\n        let params = {\r\n          animalId: this.state.patientId,\r\n          organizationId: 4\r\n        }\r\n        let paramsArray = [];\r\n        Object.keys(params).forEach(key =>\r\n          paramsArray.push(key + \"=\" + params[key])\r\n        );\r\n        let url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId'\r\n        // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n        if (url.search(/\\?/) === -1) {\r\n          url = url + \"?\" + paramsArray.join(\"&\");\r\n        } else {\r\n          url = url + \"&\" + paramsArray.join(\"&\");\r\n        }\r\n        console.log('ezyVet集成查找宠物入参-请求地址', params, url);\r\n        fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            'authorization': `Bearer ${storage.ezyVetToken}`,\r\n          }\r\n        }).then((response) => response.json())\r\n          .then((res) => {\r\n            console.log('res', res);\r\n            this.setState({\r\n              spin: false\r\n            })\r\n            if (res.flag === true) {\r\n              //有宠物，进入1\r\n              let petArr = res.data\r\n              if (petArr.length > 1) {\r\n                petArr.sort(function (a, b) {\r\n                  return a.createTime > b.createTime ? -1 : -1;\r\n                })\r\n              }\r\n\r\n\r\n              console.log(petArr);\r\n\r\n              let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr\r\n              if (isMix !== true) {\r\n                isMix = false\r\n              }\r\n              let age = moment(new Date()).diff(birthday, 'year')\r\n              let selectPet = {\r\n                petId,\r\n                petName,\r\n                owner: `${lastName}  ${firstName}`,\r\n                breedName,\r\n                isMix,\r\n                age,\r\n                weight,\r\n                birthday,\r\n                url\r\n\r\n              }\r\n              this.setState({\r\n                selectPet,\r\n                leftStatus: 1,\r\n              })\r\n              this._getHistory11(petId)\r\n\r\n            } else {\r\n              //没有宠物，进入2\r\n              this.setState({\r\n                leftStatus: 2\r\n              })\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        break;\r\n\r\n      case '3':\r\n        console.log('我是一般医生查找');\r\n        let datas = {\r\n          patientId: this.state.patientId,\r\n          doctorId: storage.userId,\r\n        }\r\n        if (storage.lastWorkplaceId) {\r\n          datas.workplaceId = storage.lastWorkplaceId\r\n        }\r\n        if (storage.lastOrganization) {\r\n          datas.org = storage.lastOrganization\r\n        }\r\n        console.log('入参：', datas);\r\n        fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n          .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              spin: false\r\n            })\r\n            if (res.flag === true) {\r\n              //有宠物，进入1\r\n              let petArr = res.data\r\n              if (petArr.length > 1) {\r\n                petArr.sort(function (a, b) {\r\n                  return a.createTime > b.createTime ? -1 : -1;\r\n                })\r\n              }\r\n\r\n              console.log(petArr);\r\n\r\n              let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr[0]\r\n              if (isMix !== true) {\r\n                isMix = false\r\n              }\r\n              let age = moment(new Date()).diff(birthday, 'year')\r\n              let selectPet = {\r\n                petId,\r\n                petName,\r\n                owner: `${lastName}  ${firstName}`,\r\n                breedName,\r\n                isMix,\r\n                age,\r\n                weight,\r\n                birthday,\r\n                url\r\n\r\n              }\r\n              this.setState({\r\n                selectPet,\r\n                leftStatus: 1,\r\n              })\r\n              this._getHistory11(petId)\r\n\r\n            } else {\r\n              //没有宠物，进入2\r\n              this.setState({\r\n                leftStatus: 2\r\n              })\r\n            }\r\n          })\r\n          .catch(err => {\r\n            this.setState({\r\n              spin: false\r\n            })\r\n            console.log(err);\r\n          })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  draggleRef = React.createRef();\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n      emerPatientID: ''\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n      emerPatientID: ''\r\n    });\r\n  };\r\n\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n  _addPatient = () => {\r\n    console.log(222);\r\n    let { addpatient_description, addpatient_petName, addpatient_species, patientId } = this.state\r\n    let speciesId = 3, petSpeciesBreedId = 13001\r\n\r\n    // speciesId   狗：2   猫：1    其他：3\r\n    switch (addpatient_species) {\r\n      case 1: speciesId = 2; petSpeciesBreedId = 12001; break;\r\n      case 2: speciesId = 1; petSpeciesBreedId = 11001; break;\r\n      default: speciesId = 3; petSpeciesBreedId = 13001;\r\n    }\r\n    // 11001 是cat 12001是dog 13001是other\r\n    // \r\n    let datas = {\r\n\r\n      petName: addpatient_petName,\r\n      description: addpatient_description,\r\n      speciesId,\r\n      doctorId: storage.userId,\r\n      petSpeciesBreedId\r\n\r\n\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      datas.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      datas.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log(datas);\r\n    fetchRequest(`/pet/addDeskPet/${patientId}`, 'POST', datas)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.flag === true) {\r\n          message.success('Patient id created successfully')\r\n          this._refresh()\r\n        } else {\r\n          console.log('创建Patient id 失败');\r\n          message.error('Patient id creation failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        message.error('Patient id creation failed')\r\n      })\r\n  }\r\n\r\n  _topLeft = () => {\r\n    let { historyData, spin, selectPet, patientId } = this.state\r\n    let { petName, owner, breedName, isMix, age, weight, url, speciesId } = selectPet\r\n    if (!breedName) {\r\n      breedName = ''\r\n    }\r\n    switch (breedName) {\r\n      case 'defaultdog':\r\n        breedName = 'Dog'\r\n\r\n        break;\r\n      case 'defaultother':\r\n        breedName = 'Other'\r\n\r\n        break;\r\n      case 'defaultcat':\r\n        breedName = 'Cat'\r\n        break;\r\n\r\n    }\r\n\r\n    let image = `url(${other})`\r\n\r\n    if (url) {\r\n      image = `url(${url}?download=0&width=80)`\r\n    } else {\r\n      switch (speciesId) {\r\n        case 1: image = `url(${cat})`; break;\r\n        case 2: image = `url(${dog})`; break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n\r\n    let mix = ''\r\n    if (isMix === true) {\r\n      mix = 'Mix'\r\n    }\r\n    if (weight === null) {\r\n      weight = ''\r\n    } else {\r\n      weight = (2.2046 * parseFloat(weight)).toFixed(1) + 'lbs'\r\n    }\r\n\r\n    if (`${age}` === `NaN` || `${age}` === `null`) {\r\n      age = ''\r\n    } else {\r\n      age = `${age} yrs`\r\n    }\r\n    let datas = []\r\n    for (let i = 0; i < historyData.length; i++) {\r\n      if (i < 3) {\r\n        datas.push(historyData[i])\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    let dogbgc = '', catbgc = '', otherbgc = '';\r\n\r\n    switch (this.state.addpatient_species) {\r\n      case 1: dogbgc = '#E1206D'; catbgc = '#F08FB6'; otherbgc = '#F08FB6'; break;\r\n      case 2: dogbgc = '#F08FB6'; catbgc = '#E1206D'; otherbgc = '#F08FB6'; break;\r\n      case 3: dogbgc = '#F08FB6'; catbgc = '#F08FB6'; otherbgc = '#E1206D'; break;\r\n      default: break;\r\n    }\r\n\r\n    if (owner === `null  null`) {\r\n      // owner = 'unknown'\r\n      owner = ''\r\n    }\r\n    if (breedName === '' || breedName === null || breedName === undefined) {\r\n      // breedName = 'unknown'\r\n      breedName = ''\r\n    }\r\n    let title = ''\r\n    if (patientId) {\r\n      title += `ID: ${patientId}`\r\n    }\r\n    if (patientId && petName) {\r\n      title += ` , `\r\n    }\r\n    if (petName) {\r\n      title += `${petName}`\r\n    }\r\n    switch (this.state.leftStatus) {\r\n      case 1: return (\r\n        <div className=\"l\">\r\n          <div className=\"petinfo\">\r\n            <div className=\"heard\"\r\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\r\n            >\r\n              <Tooltip placement='bottom' title='Switch pet'>\r\n                <MyIcon\r\n                  type='icon-qiehuanchengshi'\r\n                  className=\"icon\"\r\n                  style={{ marginRight: px(10), textAlign: 'center', }}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      leftStatus: 3,\r\n                      isMeasure: false,\r\n                      selectPet: {\r\n                        petId: '',\r\n                        petName: '',\r\n                        owner: '',\r\n                        breedName: '',\r\n                        isMix: false,\r\n                        age: '',\r\n                        weight: '',\r\n                        birthday: '',\r\n                      },\r\n                      patientId: '',\r\n                      historyData: [],\r\n                    })\r\n                    meetCondition = false\r\n                  }} />\r\n              </Tooltip>\r\n\r\n              <div className='avatar'\r\n                style={{\r\n                  width: px(50),\r\n                  height: px(50),\r\n                  marginRight: px(10),\r\n                  backgroundImage: image,\r\n                }}\r\n\r\n              >\r\n\r\n                {/* <img src={image} width={px(80)} alt=\"\" /> */}\r\n\r\n                {(storage.identity === '3') &&\r\n                  <img className='edit' src={edit} alt=\"\" width='18px'\r\n                    onClick={() => {\r\n                      storage.goEditPet = 'mesasure'\r\n                      this.props.history.push({ pathname: '/page9', participate: { patientId, petName, petId: this.state.selectPet.petId } })\r\n                    }}\r\n\r\n                  />}\r\n\r\n\r\n              </div>\r\n              <div className=\"ltitle\">\r\n                <p > {title}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"info\"\r\n              style={{ marginTop: mTop(10), marginBottom: mTop(20), paddingLeft: px(80) }}\r\n            >\r\n              Owner: {`${owner}`} <br />\r\n              {`Breed:  ${breedName}  ${mix}`}<br />\r\n              Age: {`${age}`}<br />\r\n              Weight: {`${weight}`}<br />\r\n            </div>\r\n          </div>\r\n          <div className=\"history\">\r\n            <div className=\"heard1\"\r\n              style={{ height: mTop(40), marginTop: mTop(10) }}\r\n              onClick={() => { this.setState({ visible: true }) }}>\r\n              <span>Device Info</span>\r\n            </div>\r\n            <div className=\"historyBody\">\r\n              {/* <div className=\"devices\">\r\n                <p>Device:</p>\r\n                <Select defaultValue=\"Mella-684h2\" style={{ width: 120 }} size={'small'}\r\n                // onChange={handleChange}\r\n                >\r\n                  <Option value=\"device1\">Mella-684h2</Option>\r\n                  <Option value=\"device2\">Mella-587j0</Option>\r\n                  <Option value=\"device3\">Mella-742k3</Option>\r\n                </Select>\r\n              </div> */}\r\n              {this._mearsurePort()}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n      case 2: return (\r\n        <div className=\"l\">\r\n          <div className=\"petinfo\">\r\n            <div className=\"heard\"\r\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\r\n\r\n            >\r\n              {`Clinical Study Mode`}\r\n            </div>\r\n            <div className=\"patirntID\"\r\n              style={{ marginTop: px(18) }}\r\n            >\r\n              <p style={{ width: '80px' }}>Patient ID:</p>\r\n              <Input\r\n                // style={{ border: 'none', outline: 'medium' }}\r\n                style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                value={this.state.patientId}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    patientId: item.target.value.replace(/\\s/g, \"\")\r\n                  })\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  // console.log('------', e);\r\n                  if (e.keyCode === 13) {\r\n                    this._refresh()\r\n                  }\r\n                }}\r\n              />\r\n              <SyncOutlined className='refresh'\r\n                style={{ fontSize: px(25) }}\r\n                onClick={this._refresh} spin={spin} />\r\n            </div>\r\n\r\n            <div className='newPet'>\r\n              <p style={{ color: '#E1206D', fontSize: px(18), fontWeight: 'bold', marginTop: mTop(10), paddingLeft: px(30) }}>Yay! You got a new patient!</p>\r\n              <div className=\"patirntID\"\r\n                style={{ marginTop: px(18) }}\r\n              >\r\n                <p style={{ width: '80px' }}>Pet Name:</p>\r\n                <Input\r\n                  // style={{ border: 'none', outline: 'medium' }}\r\n                  style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                  value={this.state.addpatient_petName}\r\n                  bordered={false}\r\n                  onChange={(item) => {\r\n                    // console.log(item);\r\n                    this.setState({\r\n                      addpatient_petName: item.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"patirntID\"\r\n                style={{ marginTop: px(18) }}\r\n              >\r\n                <p style={{ width: '80px' }}>Description:</p>\r\n                <Input\r\n                  // style={{ border: 'none', outline: 'medium' }}\r\n                  style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                  value={this.state.addpatient_description}\r\n                  bordered={false}\r\n                  onChange={(item) => {\r\n                    // console.log(item);\r\n                    this.setState({\r\n                      addpatient_description: item.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"species\">\r\n\r\n                <ul>\r\n                  <li >\r\n                    <div className='speciesChild'\r\n                      style={{ width: px(50), }}\r\n                    >\r\n                      <div className='dog'\r\n                        style={{ width: px(50), height: px(50), backgroundColor: dogbgc }}\r\n                        onClick={() => { this.setState({ addpatient_species: 1 }) }} >\r\n                        <img src={dog} alt=\"\" style={{ width: px(38) }} />\r\n                      </div>\r\n                      Dog\r\n                    </div>\r\n                  </li>\r\n                  <li >\r\n                    <div className='speciesChild'\r\n                      style={{ width: px(50) }}\r\n                    >\r\n                      <div className='dog'\r\n                        style={{ width: px(50), height: px(50), backgroundColor: catbgc }}\r\n                        onClick={() => { this.setState({ addpatient_species: 2 }) }}  >\r\n                        <img src={cat} alt=\"\" style={{ width: px(38) }} />\r\n                      </div>\r\n                      Cat\r\n                    </div>\r\n                  </li>\r\n                  <li >\r\n                    <div className='speciesChild'\r\n                      style={{ width: px(50) }}\r\n                    >\r\n                      <div className='dog'\r\n                        style={{ width: px(50), height: px(50), backgroundColor: otherbgc }}\r\n\r\n                        onClick={() => { this.setState({ addpatient_species: 3 }) }}>\r\n                        <img src={other} alt=\"\" style={{ width: px(38), color: '#FFF' }} />\r\n                      </div>\r\n                      Other\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"savebtn\"\r\n                style={{ marginTop: mTop(20) }}\r\n              >\r\n                <p\r\n                  style={{ width: px(180), height: px(40), marginLeft: px(70), fontSize: px(16) }}\r\n                  onClick={() => { this._addPatient() }}>Add New Patient</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n      case 3: return (\r\n        <div className=\"l\">\r\n          <div className=\"petinfo\">\r\n            <div className=\"heard\"\r\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\r\n\r\n            >\r\n              {`Clinical Study Mode`}\r\n            </div>\r\n            <div className=\"patirntID\">\r\n              <p style={{ width: '80px' }}>Patient ID:</p>\r\n              <Input\r\n                // style={{ border: 'none', outline: 'medium' }}\r\n                style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                value={this.state.patientId}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  // console.log(item);\r\n                  this.setState({\r\n                    patientId: item.target.value.replace(/\\s/g, \"\")\r\n                  })\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  // console.log('------', e);\r\n                  if (e.keyCode === 13) {\r\n                    this._refresh()\r\n                  }\r\n                }}\r\n              />\r\n              <SyncOutlined className='refresh' onClick={this._refresh} spin={spin} />\r\n            </div>\r\n            <div className=\"emergency\"\r\n              style={{ marginTop: mTop(10) }}\r\n              onClick={() => {\r\n                this.setState({ leftStatus: 4, isEmergency: true })\r\n                this._getEmergencyHistory()\r\n              }}>\r\n              <div className=\"btn\"\r\n                style={{ width: px(180), height: px(40) }}\r\n              >\r\n                Emergency\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n      case 4: return (\r\n        <div className=\"l\">\r\n          <div className=\"petinfo\">\r\n            <div className=\"heard\"\r\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\r\n\r\n            >\r\n              {`Clinical Study Mode`}\r\n            </div>\r\n            <div className=\"emergencyText\">\r\n              <p style={{ fontSize: px(20), marginTop: mTop(10), margin: 0, padding: 0 }}>\r\n                You are in an emergency now,\r\n                you can click History in this mode to assign history records</p>\r\n\r\n            </div>\r\n            <div className=\"emergency\" onClick={() => {\r\n              this.setState({ leftStatus: 3, isEmergency: false, historyData: [] })\r\n\r\n            }}>\r\n              <div className=\"btn\"\r\n                style={{ width: px(180), height: px(40), fontSize: px(25) }}\r\n              >\r\n                Exit\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"history\">\r\n              <div className=\"heard1\"\r\n                style={{ height: mTop(40), marginTop: mTop(10) }}\r\n                onClick={() => { this.setState({ visible: true }) }}>\r\n                <span>Device Info</span>\r\n              </div>\r\n              <div className=\"historyBody\">\r\n                <div className=\"devices\">\r\n                  <p>Device:</p>\r\n                  <Select defaultValue=\"Mella-684h2\" style={{ width: 120 }} size={'small'}\r\n                  // onChange={handleChange}\r\n                  >\r\n                    <Option value=\"device1\">Mella-684h2</Option>\r\n                    <Option value=\"device2\">Mella-587j0</Option>\r\n                    <Option value=\"device3\">Mella-742k3</Option>\r\n                  </Select>\r\n                </div>\r\n                {this._mearsurePort()}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n      default: return null;\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange = index => {\r\n    console.log('---------', index);\r\n    this.setState({\r\n      furLength: index\r\n    })\r\n  };\r\n\r\n  handleChange1 = index => {\r\n    console.log('---------', index);\r\n    let bodyType = document.querySelectorAll('#_bodyType .ant-select-selector')\r\n    switch (`${index}`) {\r\n      case '1': bodyType[0].style.width = \"105px\"\r\n\r\n        break;\r\n      case '2': bodyType[0].style.width = \"130px\"\r\n\r\n        break;\r\n      case '3': bodyType[0].style.width = \"120px\"\r\n\r\n        break;\r\n\r\n      default: bodyType[0].style.width = \"105px\"\r\n        break;\r\n    }\r\n\r\n    // bodyType[0].style.width = \"120px\"\r\n    console.dir(bodyType)\r\n    this.setState({\r\n      bodyType: index\r\n    })\r\n  };\r\n\r\n  _foot = () => {\r\n    let lbgc = '', rbgc = ''\r\n    if (this.state.isPetCharacteristics) {\r\n      lbgc = 'rgba(25,173,228,0.5)'; rbgc = 'rgba(105,201,237,1)'\r\n    } else {\r\n      lbgc = 'rgba(105,201,237,1)'; rbgc = 'rgba(25,173,228,0.5)'\r\n    }\r\n    return (\r\n      <div className=\"clinical_foot\" >\r\n        <div className=\"top\"\r\n          style={{ height: '10%', }}\r\n        >\r\n\r\n          <div className=\"foot_l\" style={{ backgroundColor: lbgc }} onClick={() => this.setState({ isPetCharacteristics: true })}>\r\n            Pet Characteristics\r\n          </div>\r\n          <div className=\"foot_l\" style={{ backgroundColor: rbgc }} onClick={() => this.setState({ isPetCharacteristics: false })}>\r\n            History\r\n          </div>\r\n        </div>\r\n        {this.state.isPetCharacteristics ?\r\n          this._petCharacteristics() :\r\n          this._history()\r\n        }\r\n      </div >\r\n    )\r\n  }\r\n  _petCharacteristics = () => {\r\n\r\n    let { furLength, bodyType } = this.state\r\n    let placeholder = '', placeholder1 = ''\r\n    switch (`${furLength}`) {\r\n      case '1': placeholder = 'smooth'; break;\r\n      case '2': placeholder = 'short'; break;\r\n      case '3': placeholder = 'medium'; break;\r\n      case '4': placeholder = 'long'; break;\r\n      default: break;\r\n    }\r\n\r\n    switch (`${bodyType}`) {\r\n      case '1': placeholder1 = 'small'; break;\r\n      case '2': placeholder1 = 'barrel chested'; break;\r\n      case '3': placeholder1 = 'keel chested'; break;\r\n      default: break;\r\n    }\r\n    return (\r\n      <div className=\"petChaeacteristics\"\r\n        style={{ paddingLeft: px(10), paddingRight: px(10), height: '90%' }}\r\n      >\r\n        <div className=\"child\" style={{ marginTop: mTop(30), }}>\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n            <p style={{ width: '150px' }}>Room Temperature: </p>\r\n            <Input className='inp'\r\n              // style={{ border: 'none', outline: 'medium' }}\r\n              // style={{ width: px(105), height: mTop(33), fontSize: px(18), marginRight: px(6) }}\r\n\r\n              value={`${this.state.roomTemperature}`}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  roomTemperature: str\r\n                })\r\n              }}\r\n            />\r\n            <span style={{ position: 'absolute', top: \"5%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n            <p style={{ width: '150px' }}>Reference Rectal Temperature: </p>\r\n            <Input className='inp'\r\n              // style={{ border: 'none', outline: 'medium' }}\r\n\r\n              value={`${this.state.referenceRectalTemperature}`}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  referenceRectalTemperature: str\r\n                })\r\n              }}\r\n            />\r\n            <span style={{ position: 'absolute', top: \"10%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"child\">\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <p style={{ width: '150px' }}>Body Condition Score:  </p>\r\n            <Input className='inp'\r\n              style={{ border: 'none', outline: 'medium' }}\r\n\r\n              value={this.state.bodyConditionScore}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  bodyConditionScore: str\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='furLength' >\r\n            <p style={{ width: '150px' }}>Fur Length: </p>\r\n            <Select\r\n              // showSearch\r\n              placeholder\r\n              onChange={this.handleChange}\r\n              style={{ width: '105px', borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n              value={placeholder}\r\n            >\r\n              <Option value=\"1\">smooth</Option>\r\n              <Option value=\"2\">short</Option>\r\n              <Option value=\"3\">medium</Option>\r\n              <Option value=\"4\">long</Option>\r\n            </Select>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"child\">\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\r\n            <p style={{ width: '150px' }}>Heart Rate:  </p>\r\n            <Input className='inp'\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              value={`${this.state.heartRate}`}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  heartRate: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n            <p style={{ width: '150px' }}>Blood Pressure:  </p>\r\n            <Input className='inp'\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              value={this.state.bloodPressure}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  bloodPressure: str\r\n                })\r\n              }}\r\n            />\r\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>mm</span>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"child\" style={{ marginBottom: px(40) }}>\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\r\n            <p style={{ width: '150px' }}>Respiratory Rate:  </p>\r\n            <Input className='inp'\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              value={`${this.state.respiratoryRate}`}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  respiratoryRate: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\r\n          </div>\r\n          <div className='furLength' id='_bodyType'  >\r\n            {/* <p style={{ width: '150px' }}>Body Type: </p>\r\n            <Select\r\n              // showSearch\r\n              placeholder\r\n              onChange={this.handleChange1}\r\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n              value={placeholder1}\r\n              dropdownMatchSelectWidth={120}\r\n\r\n            >\r\n              <Option value=\"1\">small</Option>\r\n              <Option value=\"2\">barrel chested</Option>\r\n              <Option value=\"3\">keel chested</Option>\r\n            </Select> */}\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"note\">\r\n          <p>Notes:</p>\r\n          <textarea\r\n            rows=\"2\"\r\n            cols=\"30\"\r\n            value={this.state.notes}\r\n            onChange={(val) => {\r\n              console.log(val);\r\n              this.setState({\r\n                notes: val.target.value\r\n              })\r\n            }}\r\n\r\n          >\r\n          </textarea>\r\n        </div> */}\r\n\r\n      </div>\r\n    )\r\n  }\r\n  _history = () => {\r\n\r\n    const _del = (key, record) => {\r\n      console.log('删除', key, record);\r\n\r\n\r\n      /**------------这里还要删除后台的数据------------ */\r\n      fetchRequest(`/pet/deletePetExamByExamId/${key}`, 'DELETE')\r\n        .then(res => {\r\n          if (res.flag === true) {\r\n            console.log('删除成功');\r\n            const historyData = [...this.state.historyData];\r\n            console.log(historyData);\r\n            this.setState({\r\n              historyData: historyData.filter((item) => item.historyId !== key)\r\n            });\r\n          } else {\r\n            console.log('删除失败');\r\n          }\r\n        })\r\n    }\r\n    const _edit = (key, record) => {\r\n      console.log('编辑', key, record);\r\n      let { heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature, bodyConditionScore, furLength, } = record\r\n      console.log('转换前：', heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature);\r\n      let editHeartRate = (heartRate !== null && heartRate !== undefined) ? heartRate : ''\r\n      let editBloodPressure = (bloodPressure !== null && bloodPressure !== undefined) ? bloodPressure : ''\r\n      let editRespiratoryRate = (respiratoryRate !== null && respiratoryRate !== undefined) ? respiratoryRate : ''\r\n      let editRectal = (referenceRectalTemperature !== null && referenceRectalTemperature !== undefined) ? (referenceRectalTemperature * 1.8 + 32).toFixed(1) : ''\r\n      let editRoomTemperature = (roomTemperature !== null && roomTemperature !== undefined) ? (roomTemperature * 1.8 + 32).toFixed(1) : ''\r\n      let editBodyConditionScore = (bodyConditionScore !== null && bodyConditionScore !== undefined) ? bodyConditionScore : ''\r\n      let editFurLength = furLength\r\n\r\n      console.log(editRectal,\r\n        editRoomTemperature,\r\n        editHeartRate,\r\n        editBloodPressure,\r\n        editRespiratoryRate);\r\n      this.setState({\r\n        editRectal,\r\n        editRoomTemperature,\r\n        editHeartRate,\r\n        editBloodPressure,\r\n        editRespiratoryRate,\r\n        editVisible: true,\r\n        editId: key,\r\n        memo: record.note,\r\n        editBodyConditionScore,\r\n        editFurLength\r\n      })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    const see = (id, record) => {\r\n      console.log(id, record);\r\n      this.setState({\r\n        tip: 'data is loading',\r\n        tipSpin: true\r\n      })\r\n\r\n      fetchRequest3(`/exam/getClinicalDataByExamId/${id}`, 'GET')\r\n        .then(res => {\r\n          console.log('此条记录的全部数据：', res);\r\n          this.setState({\r\n            tip: '',\r\n            tipSpin: false\r\n          })\r\n          if (res.flag) {\r\n            let datas = res.data.clinicalDataEntityList\r\n\r\n\r\n            if (datas) {\r\n\r\n              let echarsData = {\r\n                Eci: [],\r\n                wen0: [],\r\n                wen1: []\r\n              }\r\n              // let { echarsData } = this.state\r\n              let { wen0, wen1, Eci } = echarsData\r\n              for (let i = 0; i < datas.length; i++) {\r\n                let { data0, data1 } = datas[i]\r\n\r\n\r\n                Eci.push(i)\r\n                if (this.state.units === '℃') {\r\n                  wen0.push(data0)\r\n                  wen1.push(data1)\r\n\r\n                } else {\r\n                  wen0.push(data0 * 1.8 + 32)\r\n                  wen1.push(data1 * 1.8 + 32)\r\n                }\r\n\r\n              }\r\n              let Temp = datas[datas.length - 1].data0 || ''\r\n              console.log('----------------', Temp);\r\n              this.setState({\r\n                echarsData,\r\n                Temp,\r\n                showHistoryEchart: true\r\n              }, () => {\r\n                const option = this.getOption();\r\n                this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n              })\r\n            }\r\n\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            tip: '',\r\n            tipSpin: false\r\n          })\r\n          console.log(err);\r\n        })\r\n    }\r\n    const isflog = window.screen.height < 1000 ? true : false\r\n\r\n    const columns = [\r\n      {\r\n        title: '',\r\n        dataIndex: 'operation',\r\n        key: 'operation',\r\n        width: '16%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n          // console.log('狩猎:', text, record, index);\r\n          //record:\r\n          return (\r\n            <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', padding: `${px(18)}px 0` }} >\r\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\r\n                <img src={del} alt=\"\" style={{ width: px(25) }} />\r\n              </Popconfirm>\r\n              {\r\n                (this.state.isEmergency) ? (\r\n                  <div className=\"assign\"\r\n                    style={{ width: mTop(60), height: mTop(28), fontSize: px(14) }}\r\n\r\n                    onClick={() => {\r\n                      console.log(text, record, index);\r\n                      this.setState({\r\n                        visible: true,\r\n                        seleceEmergencies: record\r\n                      })\r\n                    }}>Assign</div>\r\n                ) : (\r\n                  <>\r\n                    <img src={edit} alt=\"\" style={{ width: px(25) }}\r\n                      onClick={() => _edit(record.historyId, record)}\r\n                    />\r\n\r\n                    <img src={start} alt=\"\" style={{ width: px(25) }}\r\n                      onClick={() => see(record.historyId, record)}\r\n                    />\r\n\r\n                    {/* <div\r\n                      onClick={() => see(record.historyId, record)}\r\n                      className='see'\r\n                      style={{ width: px(25), height: px(25) }}\r\n                    >\r\n                      <MyIcon type={'icon-mimaxiaoyanjing-copy'} className=\"icon \" style={{ color: '#fff', fontSize: px(13) }} />\r\n                    </div> */}\r\n                  </>\r\n                )\r\n              }\r\n\r\n\r\n            </div>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        width: '14%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ textAlign: 'center' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Time',\r\n        dataIndex: 'time',\r\n        key: 'time',\r\n        width: '14%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ textAlign: 'center' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: `Temp(${this.state.units})`,\r\n        // title: `Temp(℉)`,\r\n        key: 'temp',\r\n        dataIndex: 'temp',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        width: '14%',\r\n        render: (text, record, index) => {\r\n          // console.log(text, record);\r\n\r\n          /**\r\n          * bag：温度数值前的圆圈的背景颜色\r\n          * tem：展示的温度\r\n          * endvalue:将从后台得到的数据全部转化成华氏度\r\n          * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n          * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n          * \r\n          */\r\n\r\n\r\n          let bag = '', tem = ''\r\n\r\n          let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\r\n          let min = 100.4, max = 102.56\r\n\r\n\r\n\r\n\r\n\r\n\r\n          if (endValue > max) {\r\n            bag = '#E1206D'\r\n          } else if (endValue < min) {\r\n            bag = '#98DA86'\r\n          } else {\r\n            bag = '#58BDE6'\r\n          }\r\n\r\n          if (this.state.units === '℃') {\r\n            if (text) {\r\n              tem = `${text}${this.state.units}`\r\n              if (text > 55) {\r\n\r\n                tem = `${((text - 32) / 1.8).toFixed(1)}${this.state.units}`\r\n              }\r\n            }\r\n          } else {\r\n            if (text) {\r\n              if (text > 55) {\r\n                tem = `${text}${this.state.units}`\r\n              } else {\r\n                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\r\n              }\r\n\r\n            }\r\n          }\r\n          return (\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n              {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\r\n              <p style={{ margin: 0, padding: 0 }}>{tem}</p>\r\n            </div>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: `Rectal Temperature`,\r\n        key: 'referenceRectalTemperature',\r\n        dataIndex: 'referenceRectalTemperature',\r\n        width: '15%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n          // console.log('肛温的值：', text);\r\n          let num = text\r\n          if (text !== null) {\r\n            num = (text * 1.8 + 32).toFixed(1)\r\n          }\r\n\r\n          return (\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n              {text !== null && <p style={{ margin: 0, padding: 0 }}>{num} <span>{'℉'}</span></p>}\r\n\r\n            </div>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Placement',\r\n        dataIndex: 'placement',\r\n        key: 'placement',\r\n        align: 'center',\r\n        width: '15%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n          switch (record.placement) {\r\n            case 1: return (    //腋温\r\n              <div>\r\n                <img src={palcement_ye} alt=\"\" />\r\n              </div>\r\n            )\r\n            case 3: return (     //肛温\r\n              <div>\r\n                <img src={placement_gang} alt=\"\" />\r\n              </div>\r\n            )\r\n            case 2: return (     //肛温\r\n              <div>\r\n                <img src={placement_gang} alt=\"\" />\r\n              </div>\r\n            )\r\n            case 4: return (    //耳温\r\n              <div>\r\n                <img src={placement_er} alt=\"\" />\r\n              </div>\r\n            )\r\n            default: return null;\r\n          }\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Note',\r\n        dataIndex: 'note',\r\n        key: 'note',\r\n        width: '12%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ width: '70px' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n    ];\r\n\r\n\r\n\r\n    let hisHe = mTop(200)\r\n    try {\r\n      let historyElement = document.querySelectorAll('#clinicalMeasure11 .historyTable')\r\n      hisHe = historyElement[0].clientHeight - mTop(100)\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className='historyTable' style={{ height: '90%' }}>\r\n        <Table\r\n          columns={columns}\r\n          loading={this.state.loading}\r\n          dataSource={this.state.historyData}\r\n          rowKey={columns => columns.historyId}\r\n          // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\r\n          pagination={false}\r\n          scroll={{\r\n            y: hisHe\r\n          }}\r\n        />\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  _status = () => {\r\n    let { closeColor, closebgc, minbgc, units, isMeasure, Temp, measuerStatus, isconnected, showHistoryEchart } = this.state\r\n    let text = '', unit = '', temColor = ''\r\n\r\n    Temp = parseFloat(Temp)\r\n\r\n    if (isconnected === false) {\r\n      if (!showHistoryEchart) {\r\n        Temp = ''\r\n        text = 'disconnected'\r\n        temColor = '#3B3A3A'\r\n      } else {\r\n        text = 'disconnected'\r\n        temColor = '#3B3A3A'\r\n      }\r\n\r\n    } else {\r\n      text = 'connected'\r\n      temColor = '#3B3A3A'\r\n      if (Temp > 15) {\r\n        unit = units\r\n        if (Temp > 39) {\r\n          text = 'High'\r\n          temColor = '#E1206D'\r\n        } else if (Temp < 31) {\r\n          text = 'Low'\r\n          temColor = '#47C2ED'\r\n        } else {\r\n          text = 'Normal'\r\n          temColor = '#78D35D'\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n    let temp = ''\r\n\r\n    if (`${Temp}` !== 'NaN' && Temp !== '') {\r\n      temp = units === '℉' ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1)\r\n    }\r\n    let lowFlog = false\r\n    if (unit === '℃') {\r\n      if (temp < 24.8) {\r\n        lowFlog = true\r\n      }\r\n    } else {\r\n      if (temp < 76.6) {\r\n        lowFlog = true\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className='Tem' style={{ color: temColor, right: px(30), bottom: mTop(120) }}>\r\n\r\n        {(!isMeasure) ? (\r\n          showHistoryEchart ? <>\r\n            <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{units}</sup></span><br />\r\n            {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\r\n\r\n            <span style={{ fontSize: px(22), color: '#8a8a8a' }}>{`History`}</span>\r\n          </> :\r\n\r\n            <>\r\n              <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\r\n              <span style={{ fontSize: px(22) }}>{text}</span>\r\n            </>\r\n        ) : (\r\n          lowFlog ? (\r\n            <>\r\n              <span style={{ fontSize: px(36) }}>{'Low'}</span><br />\r\n\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\r\n\r\n            </>\r\n          )\r\n\r\n        )}\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  _modal = () => {\r\n    let that = this\r\n\r\n    function save () {\r\n\r\n\r\n      switch (storage.identity) {\r\n        case '1':\r\n          console.log('我是vetspire查找');\r\n\r\n          break;\r\n\r\n        case '2':\r\n          console.log('我是ezyVet查找');\r\n          let params = {\r\n            animalId: that.state.emerPatientID,\r\n            organizationId: 4\r\n          }\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach(key =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId'\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          console.log('ezyVet集成查找宠物入参-请求地址', params, url);\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              'authorization': `Bearer ${storage.ezyVetToken}`,\r\n            }\r\n          }).then((response) => response.json())\r\n            .then((res) => {\r\n              console.log('res', res);\r\n              this.setState({\r\n                spin: false\r\n              })\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  })\r\n                }\r\n\r\n\r\n                console.log(petArr);\r\n\r\n                let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr\r\n                assign(petId)\r\n\r\n              } else {\r\n                //没有宠物\r\n                message.error('There are no pets under this patientID')\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error('There are no pets under this patientID')\r\n            });\r\n\r\n          break;\r\n\r\n        case '3':\r\n          console.log('我是一般医生查找');\r\n          let datas = {\r\n            patientId: that.state.emerPatientID,\r\n            doctorId: storage.userId,\r\n          }\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId\r\n          }\r\n          console.log('入参：', datas);\r\n          fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n            .then(res => {\r\n\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  })\r\n                }\r\n\r\n                console.log(petArr);\r\n\r\n                let { petId, } = petArr[0]\r\n                assign(petId)\r\n              } else {\r\n\r\n                message.error('There are no pets under this patientID')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              message.error('There are no pets under this patientID')\r\n              console.log(err);\r\n            })\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      const assign = (petId) => {\r\n        let parmes = {\r\n          petId,\r\n          clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId\r\n        }\r\n        fetchRequest(`/pet/addAndSavePetExam/${that.state.seleceEmergencies.historyId}`, 'POST', parmes)\r\n          .then(res => {\r\n            console.log('----------', res);\r\n            if (res.flag === true) {\r\n              console.log('分配成功');\r\n              message.success('Assigned successfully')\r\n              that._getEmergencyHistory()\r\n              that.setState({\r\n                visible: false,\r\n                emerPatientID: ''\r\n              })\r\n            } else {\r\n              message.success('Assignment failed')\r\n            }\r\n\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            message.success('Assignment failed')\r\n          })\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    let { disabled, bounds, visible } = this.state\r\n    return (\r\n      <Modal\r\n        title={\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              cursor: 'move',\r\n              height: '20px',\r\n              textAlign: 'center'\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          >\r\n            Distribute the history of emergencies\r\n          </div>\r\n        }\r\n        visible={visible}\r\n        // visible={true}\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={\r\n          [] // 设置footer为空，去掉 取消 确定默认按钮\r\n        }\r\n        destroyOnClose={true}\r\n      >\r\n        <div id=\"selectEmergenciesModal\">\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '80px' }}>Patient ID</p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              value={this.state.emerPatientID}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  emerPatientID: item.target.value.replace(/\\s/g, \"\")\r\n                })\r\n              }}\r\n              onKeyDown={(e) => {\r\n                // console.log('------', e);\r\n                if (e.keyCode === 13) {\r\n                  save()\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"btn\" onClick={save}>Save</div>\r\n        </div>\r\n\r\n      </Modal>\r\n\r\n    )\r\n\r\n  }\r\n\r\n  _editModal = () => {\r\n    let that = this\r\n\r\n    function save () {\r\n      let { editBodyConditionScore, editFurLength, editHeartRate, editBloodPressure, editRespiratoryRate } = that.state\r\n      let datas = {\r\n        memo: that.state.memo,\r\n        bodyConditionScore: parseInt(editBodyConditionScore),\r\n        furLength: parseInt(editFurLength),\r\n        heartRate: editHeartRate,\r\n        bloodPressure: editBloodPressure,\r\n        respiratoryRate: editRespiratoryRate\r\n        // roomTemperature: that.state.editRoomTemperature,\r\n        // referenceRectalTemperature: that.state.editRectal\r\n      }\r\n      if (that.state.editRoomTemperature) {\r\n        datas.roomTemperature = ((parseFloat(that.state.editRoomTemperature) - 32) / 1.8).toFixed(2)\r\n      }\r\n      if (that.state.editRectal) {\r\n        datas.referenceRectalTemperature = ((parseFloat(that.state.editRectal) - 32) / 1.8).toFixed(2)\r\n      }\r\n\r\n      console.log('入参：', datas, that.state.editId);\r\n      that.setState({\r\n        editVisible: false,\r\n        tip: 'Data is being modified',\r\n        tipSpin: true,\r\n\r\n      })\r\n      fetchRequest(`/pet/updatePetExam/${that.state.editId}`, 'POST', datas)\r\n        .then(res => {\r\n          console.log(res);\r\n          that.setState({\r\n\r\n            tip: '',\r\n            tipSpin: false\r\n          })\r\n          message.success('Data modified successfully')\r\n\r\n          that._getHistory11(that.state.selectPet.petId)\r\n        })\r\n        .catch(err => {\r\n          that.setState({\r\n            spin: false,\r\n            tip: '',\r\n            tipSpin: false\r\n          })\r\n          message.success(' Data modification failed')\r\n\r\n          console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    let { disabled, bounds, editVisible, editFurLength } = this.state\r\n    let furLength = ''\r\n    if (editFurLength !== null && editFurLength !== undefined) {\r\n      switch (`${editFurLength}`) {\r\n        case '1': furLength = 'smooth'; break;\r\n        case '2': furLength = 'short'; break;\r\n        case '3': furLength = 'medium'; break;\r\n        case '4': furLength = 'long'; break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        title={\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              cursor: 'move',\r\n              height: '20px',\r\n              textAlign: 'center'\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          >\r\n            Modification history information\r\n          </div>\r\n        }\r\n        visible={editVisible}\r\n        // visible={true}\r\n        onCancel={() => { that.setState({ editVisible: false, }); }}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={\r\n          [] // 设置footer为空，去掉 取消 确定默认按钮\r\n        }\r\n        destroyOnClose={true}\r\n      >\r\n        <div id=\"selectEmergenciesModal\">\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Room Temperature </p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editRoomTemperature}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  editRoomTemperature: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>℉</span>\r\n          </div>\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Rectal Temperature</p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editRectal}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  editRectal: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>℉</span>\r\n          </div>\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Body Condition Score</p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editBodyConditionScore}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d]/g, '')\r\n                this.setState({\r\n                  editBodyConditionScore: str\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className='bodyType11' >\r\n            <p style={{ width: '140px' }}>Fur Length: </p>\r\n            <Select\r\n              placeholder\r\n              onChange={(index) => {\r\n                console.log(index);\r\n                this.setState({\r\n                  editFurLength: index\r\n                })\r\n              }}\r\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n              value={furLength}\r\n            >\r\n              <Option value=\"1\">smooth</Option>\r\n              <Option value=\"2\">short</Option>\r\n              <Option value=\"3\">medium</Option>\r\n              <Option value=\"4\">long</Option>\r\n            </Select>\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Heart Rate: </p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editHeartRate}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d]/g, '')\r\n\r\n                this.setState({\r\n                  editHeartRate: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>bpm</span>\r\n          </div>\r\n\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Blood Pressure </p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editBloodPressure}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  editBloodPressure: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>mm</span>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Respiratory Rate: </p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editRespiratoryRate}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d]/g, '')\r\n\r\n                this.setState({\r\n                  editRespiratoryRate: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>bpm</span>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/* <div className='bodyType11' >\r\n            <p style={{ width: '140px' }}>Body Type: </p>\r\n            <Select\r\n              // showSearch\r\n              placeholder\r\n              onChange={this.handleChange1}\r\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n              // value={placeholder1}\r\n              dropdownMatchSelectWidth={120}\r\n\r\n            >\r\n              <Option value=\"1\">small</Option>\r\n              <Option value=\"2\">barrel chested</Option>\r\n              <Option value=\"3\">keel chested</Option>\r\n            </Select>\r\n          </div> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '80px' }}>Notes</p>\r\n            <textarea\r\n              rows=\"2\"\r\n              cols=\"40\"\r\n              style={{ textIndent: '10px' }}\r\n              value={that.state.memo}\r\n              onChange={(val) => {\r\n                that.setState({\r\n                  memo: val.target.value\r\n                })\r\n              }}\r\n\r\n            >\r\n            </textarea>\r\n          </div>\r\n\r\n          <div className=\"btn\" onClick={save}>Save</div>\r\n        </div>\r\n\r\n      </Modal>\r\n\r\n\r\n\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    console.log('-----', this.state.Temp);\r\n    return (\r\n      <div id=\"clinicalMeasure11\">\r\n        <div style={{ height: '60%' }}>\r\n\r\n          <div className=\"heard\">\r\n            <Heard\r\n              onSearch={(data) => {\r\n                console.log(data);\r\n                this.setState({\r\n                  patientId: data.patientId\r\n                }, () => {\r\n                  this._getPetInfo()\r\n                })\r\n              }}\r\n              menu9Click={() => {\r\n                storage.measurepatientId = this.state.patientId;\r\n              }}\r\n              menu8Click={() => {\r\n                switch (storage.identity) {   //1是vetspire   2是ezyvet   3是医生\r\n                  case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n                    break;\r\n                  case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                    break;\r\n\r\n                  case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                    break;\r\n                  default:\r\n                    break;\r\n                }\r\n              }}\r\n\r\n              onReturn={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n\r\n\r\n            />\r\n          </div>\r\n\r\n\r\n          {/* 宠物信息与折线图部分 */}\r\n          <div className='clinical_top'\r\n          // style={{ height: mTop(480) }}\r\n          >\r\n            {this._topLeft()}\r\n            <div className=\"r\" >\r\n              {!this.state.isconnected && <div className=\"bb1\"\r\n                style={{ left: px(150) }}\r\n              >\r\n                <div className=\"btn78\"\r\n                  style={{ width: px(220), height: mTop(30), fontSize: px(16) }}\r\n                  onClick={() => {\r\n                    console.log('点击了切换按钮');\r\n\r\n                    if (resyncDeviceIsClick === true) {\r\n                      resyncDeviceIsClick = false\r\n                      console.log('发送给主进程切换按钮');\r\n                      ipcRenderer.send('qiehuan')\r\n                      // ipcRenderer.send('getSerialPort')\r\n                      const time = setTimeout(() => {\r\n                        resyncDeviceIsClick = true\r\n                        clearTimeout(time)\r\n                      }, 2500)\r\n                    }\r\n\r\n\r\n\r\n                  }}\r\n                >Re-sync Base</div>\r\n              </div>}\r\n\r\n\r\n              <div id='myCharts'\r\n                style={{ marginTop: mTop(50) }}\r\n\r\n              >\r\n                <ReactECharts\r\n\r\n                  option={this.getOption()} theme=\"Imooc\" style={{ height: mTop(430), }}\r\n                  notMerge={true}\r\n                  lazyUpdate={true}\r\n                  // theme={\"theme_name\"}\r\n                  ref={(e) => { this.echartsElement = e }}\r\n                />\r\n              </div>\r\n\r\n              {this._status()}\r\n              {/* {this._mearsurePort()} */}\r\n              <div className=\"time\"\r\n                style={{ bottom: mTop(20), left: px(70) }}\r\n              >\r\n                {(this.state.isconnected) ? (<p style={{ fontSize: px(25) }}>{`Measurement Timer  ${this.state.countdown} s`}</p>) : null}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        {/* 底部宠物信息 */}\r\n        {this._foot()}\r\n        {this._modal()}\r\n        {this._editModal()}\r\n\r\n\r\n        <Modal\r\n\r\n          visible={this.state.err07Visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          closable={false}\r\n          footer={[\r\n\r\n          ]}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"vetPrifileModal\"\r\n        >\r\n          <div id='vetPrifileModal'>\r\n            <div className=\"title\">prompt\r\n            </div>\r\n\r\n            <div className='text'>Please re-plug the base device</div>\r\n\r\n\r\n            <div className=\"btn\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '5px' }}>\r\n\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    err07Visible: false,\r\n                  })\r\n                  num07 = 0\r\n\r\n                }}\r\n              >OK</button>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </Modal>\r\n\r\n        {\r\n          this.state.tipSpin &&\r\n          // true &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              data is loading...\r\n            </p>\r\n          </div>\r\n        }\r\n        <MyModal\r\n          visible={this.state.tempHeight}\r\n          element={\r\n            <div className=\"tempHeight\">\r\n              <div className=\"tempHeightImg\">\r\n                <img src={redjinggao} alt=\"\" style={{ width: px(60), }} />\r\n              </div>\r\n              <div className=\"tempText\" style={{ fontSize: px(24), marginBottom: px(60) }}>If the initial temperature reading is too high, the measurement may be inaccurate. Consider letting the thermometer cool down to 85°F and try again</div>\r\n\r\n              <div className=\"tempBtn flex\" style={{ height: px(45), fontSize: px(24), marginBottom: px(20) }}\r\n                onClick={() => { this.setState({ tempHeight: false }) }}\r\n              >\r\n                OK\r\n              </div>\r\n\r\n              <div className=\"close\" style={{ top: px(20), right: px(20) }}\r\n                onClick={() => { this.setState({ tempHeight: false }) }}\r\n              >\r\n                <img src={close} alt=\"\" style={{ width: px(30) }} />\r\n              </div>\r\n\r\n\r\n            </div>\r\n          }\r\n        />\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\Fetch_token.js",["369","370","371","372"],"\r\n// let COMMON_URL = 'http://192.168.0.36:8080/melladesk';//本地\r\n// let COMMON_URL = 'http://54.85.89.201:8081/melladesk';//AWS\r\n// let COMMON_URL = 'http://8.131.66.177:8081/melladesk';//阿里云\r\nlet COMMON_URL = 'https://www.mellaserver.com/api/melladesk';//企业AWS\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchToken (url, method, params = '', token = '') {\r\n\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let headers = null\r\n    if (token !== '') {\r\n      headers = {\r\n        'authorization': token,\r\n      };\r\n    }\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else if (method === 'POST') {\r\n    let header = {\r\n      \"Content-type\": \"application/json\"\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          // mode: 'cors',\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/merge-patch+json\",\r\n      authorization: token\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\measure\\NorMalMeasurement.jsx",["373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399"],"import React, { Component } from 'react'\r\nimport { Menu, Table, Popconfirm, Tooltip, message, Select, Progress, Input, Modal } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, LoadingOutlined, SyncOutlined } from '@ant-design/icons';\r\n\r\n\r\n\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport { fetchRequest1 } from './../../utils/FetchUtil'\r\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\r\nimport { FetchEszVet } from './../../utils/FetchEszVet'\r\n\r\nimport ye from './../../assets/images/ye1.png'\r\nimport er from './../../assets/images/er3.png'\r\nimport gang from './../../assets/images/gang3.png'\r\nimport edit from './../../assets/images/edit.png'\r\nimport del from './../../assets/images/del.png'\r\nimport scale from './../../assets/images/scale.png'\r\nimport placement_gang from './../../assets/images/placement_gang.png'\r\nimport placement_er from './../../assets/images/placement_er.png'\r\nimport palcement_ye from './../../assets/images/palcement_ye.png'\r\nimport careacte from './../../assets/images/dogMessage.png'\r\nimport catcareacte from './../../assets/images/catMessage.png'\r\nimport dog from './../../assets/img/redDog.png'\r\nimport cat from './../../assets/img/redcat.png'\r\nimport other from './../../assets/images/other.png'\r\n\r\nimport dog1 from './../../assets/images/pinkdog.png'\r\nimport cat1 from './../../assets/images/pinkcat.png'\r\nimport redDog1 from './../../assets/images/reddog.png'\r\nimport redCat1 from './../../assets/images/redcat.png'\r\nimport redother from './../../assets/images/redother.png'\r\n\r\n\r\n\r\nimport electronStore from './../../utils/electronStore'\r\n\r\n\r\nimport './normalMeasurement.less'\r\nimport { fetchToken } from '../../utils/Fetch_token';\r\nimport { mTop, px, pX, win } from '../../utils/px';\r\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\r\nimport temporaryStorage from '../../utils/temporaryStorage';\r\nimport Biggie from './../../pages/biggiePage/Biggie.jsx'\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport Heard from '../../utils/heard/Heard';\r\nimport { fetchRhapsody } from '../../utils/FetchUtil5';\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet saveHistoryTime = null, getSerialTime = null\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\nlet detectTimer = null, countdownTimer = null, lastConnectionTime = null;\r\n\r\nlet storage = window.localStorage;\r\n//用于预测的东西\r\nlet clinicalYuce = [], clinicalIndex = 0, endflog = false\r\nlet temp15 = ''\r\nlet is97Time = null, //为了防抖，因为有时候断开连接和连接成功总是连续的跳出来，展示就会一直闪烁，因此引入时间差大于800ms才展示\r\n  initTime = null\r\nlet firstEar = true\r\nlet isMeasurement = false //正在测量为true，反之为false\r\nlet num07 = 0       //接收到07命令行的次数\r\n\r\nlet isClick = true\r\n\r\nlet sameBiggieNum = 0, keyboardBiggieFlog = false\r\n\r\nlet nextFlog = false //用来判断是否按下了尺子的确认键\r\nlet avoidRepetition = false //避免重复，防止尺子数据过来后持续刷新\r\n\r\nlet confirmBtnFlog = ''\r\n//因为biggie样机测量完成控制字从02(测量中)变成03(测量完成),但是会发多组03,因此做一个限制,当控制字为02时biggieSave=false,第一次为03时变成true\r\nlet biggieSave = false\r\n\r\nexport default class NorMalMeasurement extends Component {\r\n  state = {\r\n    dogImg: redDog1,\r\n    catImg: cat1,\r\n    otherImg: other,\r\n    selectWZ: 'dog',\r\n\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    value: '',\r\n    api: '',\r\n    id: '',\r\n    dataArr: [],\r\n    seleceID: '',//医生id\r\n    data: { ci: [''], wen: [] },\r\n\r\n    temColor: '',\r\n    Temp: '',\r\n    isMeasure: false,\r\n    mearsurePart: 1,\r\n    historyData: [],\r\n    patientId: '',\r\n    spin: false,        //patientId后面的刷新按钮是否旋转\r\n    petName: '',\r\n    addpatient_petName: '',\r\n    addpatient_description: '',\r\n    addpatient_species: 1,\r\n    roomTemperature: '',\r\n    referenceRectalTemperature: '',\r\n    bodyConditionScore: '',\r\n    furLength: '',\r\n    bodyType: '',\r\n    heartRate: '',\r\n    bloodPressure: '',\r\n    respiratoryRate: '',\r\n    visible: false,       //nodel框是否显示\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n    units: '℉',\r\n    measuerStatus: 'disconnected',\r\n    isconnected: false,\r\n    countdown: 15,\r\n    petVitalTypeId: '01',  //测量部位\r\n    probeID: '',         //探头id\r\n    org: 1,\r\n    err07Visible: false,\r\n\r\n\r\n    //左侧的宠物信息\r\n    petId: '',\r\n    owner: '',\r\n    breedName: '',\r\n    isMix: false,\r\n    age: '',\r\n    weight: '',\r\n    url: '',\r\n    speciesId: '',\r\n\r\n    //圆环的一些信息\r\n    temp_statu: 'Ready',\r\n    progress: 0,\r\n    endMeasure: false,\r\n    initFlog: false,\r\n    isEarMeasure: false,\r\n\r\n\r\n    //底部的信息\r\n    isNotes: true,\r\n    notes: '',\r\n    petSpeciesBreedId: 0,\r\n    consult_id: '',\r\n    healthStatus: '',\r\n\r\n\r\n    editId: '',\r\n    memo: '',\r\n    macAddr: '',\r\n    loading: false,\r\n\r\n    noUSB: false,  //是否有usb底座，为true代表没有\r\n    devicesType: 'biggie',\r\n    isHaveBigieDate: false, //为false则展示把宠物放到秤上的文本，为true则展示体重值\r\n\r\n    biggieDate: '', //体脂称体重值（磅）\r\n    sendWeight: '', //体脂称体重值（kg）\r\n    impedance: '',   //阻抗\r\n    isWeightSave: false,  //保存体重数据跳出的上传中弹框\r\n\r\n\r\n    //宠物特征信息\r\n    l2rarmDistance: '',           //左右手间距，这里用他临时替换成头部周长\r\n    neckCircumference: '',        //脖子周长\r\n    upperTorsoCircumference: '',  //上躯干周长\r\n    lowerTorsoCircumference: '',  //下躯干周长\r\n    h2tLength: '',                //头尾长度\r\n    torsoLength: \"\",             //躯干长度\r\n\r\n    rulerUnit: 'cm',               //尺子的单位\r\n    itemIndex: 1,                //代表现在是第几个宠物特征\r\n    updatePetAttributes: false,    //上传宠物属性的弹框\r\n\r\n    isWalkIn: false,               //是否是从walkIn进来的\r\n  }\r\n  componentWillMount () {\r\n    try {\r\n      console.log('--------------', this.props.location.isconnected);\r\n      if (this.props.location.isconnected === false || this.props.location.isconnected === true) {\r\n        if (this.props.location.isconnected === false) {\r\n\r\n        } else {\r\n          this.setState({\r\n            measuerStatus: 'connented',\r\n            isconnected: true,\r\n            isEarMeasure: false\r\n\r\n          })\r\n          is97Time = new Date()\r\n        }\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    ipcRenderer.send('big', win())\r\n    storage.isClinical = 'false'\r\n    if (storage.identity === '2') {\r\n      let ezyVetSelectHealthstatus = JSON.parse(storage.ezyVetSelectHealthstatus)\r\n      console.log(ezyVetSelectHealthstatus);\r\n      let { age, animal_id, breed, consult_id, gender, key, owner, petName, weight, url, speciesId } = ezyVetSelectHealthstatus\r\n      let petAge = null\r\n      if (`${age}` === '' || `${age}` === 'null') {\r\n        petAge = 0\r\n      } else {\r\n        petAge = age\r\n      }\r\n      this.setState({\r\n        petName,\r\n        owner,\r\n        breedName: breed,\r\n        weight,\r\n        age: petAge,\r\n        consult_id,\r\n        healthStatus: key,\r\n        patientId: animal_id,\r\n        org: 4,\r\n        url,\r\n        speciesId\r\n      }, () => {\r\n        this._getPetInfo('ezyVet')\r\n      })\r\n    } else if (storage.identity === '1') {\r\n      this.setState({\r\n        petName: storage.selectPetName,\r\n        owner: storage.selectOwner,\r\n        breedName: storage.selectBreed,\r\n        weight: storage.selectWeight,\r\n        age: storage.selectAge,\r\n        patientId: storage.selectPatientId,\r\n        org: 1\r\n      }, () => {\r\n        this._getPetInfo('vetspire')\r\n      })\r\n    } else {\r\n      let hardSet = electronStore.get('hardwareConfiguration')\r\n      console.log('测量单位', hardSet);\r\n      let rulerUnit = 'in'\r\n      if (!hardSet) {\r\n        let settings = {\r\n          isHua: true,\r\n          is15: true,\r\n          self_tarting: false,\r\n          isBacklight: true,\r\n          isBeep: true,\r\n          backlightTimer: { length: 140, number: '45' },\r\n          autoOff: { length: 0, number: '30' },\r\n        }\r\n        electronStore.set('hardwareConfiguration', settings)\r\n        this.setState({\r\n          units: '℉',\r\n          rulerUnit: 'in',\r\n          countdown: 15\r\n        })\r\n      } else {\r\n        let units = hardSet.isHua ? '℉' : '℃'\r\n        rulerUnit = hardSet.isHua ? 'in' : 'cm'\r\n        let countdown = hardSet.is15 ? 15 : 30\r\n        console.log('测量单位', units);\r\n        this.setState({\r\n          units,\r\n          countdown,\r\n          rulerUnit\r\n        })\r\n      }\r\n\r\n\r\n\r\n\r\n      let data = JSON.parse(storage.doctorExam)\r\n      console.log('从列表里面传过来的数据', data);\r\n      if (!data) {\r\n        console.log('从walk-in来的');\r\n        this.setState({\r\n          isWalkIn: true\r\n        })\r\n\r\n      } else {\r\n        let { l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n          h2tLength, torsoLength, weight, url, speciesId } = data\r\n\r\n        // l2rarmDistance = l2rarmDistance ? `${l2rarmDistance}` : ''\r\n        // neckCircumference = neckCircumference ? `${neckCircumference}` : ''\r\n        // upperTorsoCircumference = upperTorsoCircumference ? `${upperTorsoCircumference}` : ''\r\n        // lowerTorsoCircumference = lowerTorsoCircumference ? `${lowerTorsoCircumference}` : ''\r\n        // h2tLength = h2tLength ? `${h2tLength}` : ''\r\n        // torsoLength = torsoLength ? `${torsoLength}` : ''\r\n        console.log('+++++++++++', l2rarmDistance);\r\n\r\n        l2rarmDistance = changeNum(l2rarmDistance)\r\n        console.log('++++++0+++++', l2rarmDistance);\r\n        neckCircumference = changeNum(neckCircumference)\r\n        upperTorsoCircumference = changeNum(upperTorsoCircumference)\r\n        lowerTorsoCircumference = changeNum(lowerTorsoCircumference)\r\n        h2tLength = changeNum(h2tLength)\r\n        torsoLength = changeNum(torsoLength)\r\n\r\n        function changeNum (params) {\r\n\r\n          if (params) {\r\n            if (rulerUnit === 'cm') {\r\n              return `${params}`\r\n            } else {\r\n              return `${(params / 2.54).toFixed(2)}`\r\n            }\r\n          } else {\r\n            return ''\r\n          }\r\n\r\n        }\r\n\r\n\r\n        if (weight && weight !== 'unknown') {\r\n          weight = parseFloat(weight).toFixed(1)\r\n        }\r\n        let breedName = data.breed\r\n        if (!breedName) {\r\n          breedName = 'unknown'\r\n        }\r\n        switch (breedName) {\r\n          case 'defaultdog':\r\n            breedName = 'Dog'\r\n\r\n            break;\r\n          case 'defaultother':\r\n            breedName = 'Other'\r\n\r\n            break;\r\n          case 'defaultcat':\r\n            breedName = 'Cat'\r\n            break;\r\n\r\n        }\r\n        this.setState({\r\n          petName: data.petName,\r\n          owner: data.owner,\r\n          breedName,\r\n          weight,\r\n          age: data.age,\r\n          patientId: data.patientId,\r\n          petId: data.petId,\r\n          l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n          h2tLength, torsoLength,\r\n          url, speciesId,\r\n          isWalkIn: false\r\n        }, () => {\r\n          this._getHistory()\r\n        })\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //这里做了个监听，当有数据发过来的时候直接在这里接收\r\n    ipcRenderer.on('sned', this._send)\r\n    ipcRenderer.on('usbDetect', this.usbDetect)\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n\r\n    this._whether_to_connect_to_mella()\r\n    //刚进入测量界面需要获取以前的历史数据，测量一次就添加一个记录\r\n    // this._getHistory()\r\n\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n    if (temporaryStorage.devicesType) {\r\n      this.setState({\r\n        devicesType: temporaryStorage.devicesType\r\n      })\r\n    }\r\n\r\n  }\r\n  componentWillUnmount () {\r\n    ipcRenderer.removeListener('sned', this._send)\r\n    ipcRenderer.removeListener('usbDetect', this.usbDetect)\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    clearInterval(detectTimer)\r\n    detectTimer && clearInterval(detectTimer)\r\n    countdownTimer && clearInterval(countdownTimer)\r\n    getSerialTime && clearTimeout(getSerialTime)\r\n    this.detectTimer && clearInterval(this.detectTimer)\r\n    this.detectTimer && clearInterval(this.detectTimer)\r\n    lastConnectionTime = null;\r\n    clinicalYuce = []\r\n    clinicalIndex = 0\r\n    message.destroy()\r\n\r\n\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      message.destroy()\r\n      this.setState({\r\n        noUSB: false\r\n      })\r\n    } else {\r\n      if (!this.state.noUSB) {\r\n        message.error('The base is not detected. Please insert the base', 0)\r\n        this.setState({\r\n          noUSB: true\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n    this.command(data)()\r\n  }\r\n  /**\r\n   * \r\n   *usb检测，为true代表插上了设备，false代表拔出了设备\r\n   */\r\n  usbDetect = (event, data) => {\r\n    this.detectTimer && clearInterval(this.detectTimer)\r\n    if (data === true) {\r\n      this._whether_to_connect_to_mella()\r\n    } else {\r\n      this.detectTimer && clearInterval(this.detectTimer)\r\n      num07 = 0\r\n    }\r\n  }\r\n  _whether_to_connect_to_mella = () => {\r\n    message.destroy()\r\n    this.detectTimer = setInterval(() => {\r\n      if (isMeasurement) {\r\n        return\r\n      }\r\n      if (!initTime) {\r\n        // console.log('断开连接');\r\n\r\n        firstEar = true\r\n        let hardSet = electronStore.get('hardwareConfiguration')\r\n        let countdown = hardSet.is15 ? 15 : 30\r\n        this.setState({\r\n          measuerStatus: 'disconnected',\r\n          countdown,\r\n          isMeasure: false,\r\n          isconnected: false,\r\n          isEarMeasure: false\r\n        })\r\n        initTime = new Date()\r\n      } else {\r\n        ipcRenderer.send('usbdata', { command: '07', arr: ['5A'] })\r\n        if (new Date() - initTime < 5000) {\r\n          // console.log('连接成功');\r\n\r\n        } else {\r\n          console.log('2断开连接');\r\n          firstEar = true\r\n          let hardSet = electronStore.get('hardwareConfiguration')\r\n          let countdown = hardSet.is15 ? 15 : 30\r\n          this.setState({\r\n            measuerStatus: 'disconnected',\r\n            countdown,\r\n            isMeasure: false,\r\n            isconnected: false,\r\n            isEarMeasure: false\r\n          })\r\n        }\r\n      }\r\n    }, 2000);\r\n\r\n\r\n\r\n  }\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n\r\n    switch (e.key) {\r\n      case '1':\r\n        switch (storage.identity) {\r\n          case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n            break;\r\n          case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n            break;\r\n          case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n\r\n        break;\r\n\r\n      case '2': this.props.history.push('/'); break;\r\n      case '3': this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: this.state.patientId, isconnected: this.state.isconnected }); break;\r\n      case '4': this.props.history.push('/page12'); break;\r\n      case '5': this.props.history.push('/menuOptions/settings'); break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  command = (newArr) => {\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n\r\n    const instruction = [209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 194, 7, 99, 255]\r\n    if (newArr[2] !== 7) {\r\n      initTime = new Date()\r\n      num07 = 0\r\n    } else {\r\n      num07++\r\n    }\r\n\r\n\r\n\r\n    isMeasurement = false\r\n    const commandArr = {\r\n      209: () => {  //腋温\r\n        if (firstEar) {\r\n          firstEar = false\r\n          console.log('去获取探头id');\r\n          ipcRenderer.send('usbdata', { command: '31', arr: [] })\r\n        }\r\n        isMeasurement = true\r\n        let temp1 = parseFloat(`${dataArr1[3]}.${(dataArr1[4])}`)\r\n        let temp0 = parseFloat(`${dataArr1[5]}.${(dataArr1[6])}`)\r\n        // let Temp = parseFloat(temp0.toFixed(1))\r\n        let Temp = temp0\r\n        console.log(Temp);\r\n        if (Temp === 24.7 || Temp === 0 || Temp === null || Temp === undefined) {\r\n          return\r\n        }\r\n\r\n\r\n        if (this.state.isMeasure === false) {\r\n\r\n          if (countdownTimer) {\r\n            let hardSet = electronStore.get('hardwareConfiguration')\r\n            let countdown = hardSet.is15 ? 15 : 30\r\n            this.setState({\r\n              countdown\r\n            })\r\n          }\r\n\r\n          countdownTimer = setInterval(() => {\r\n            let { countdown, isconnected } = this.state\r\n            this.setState({\r\n              countdown: countdown - 1\r\n\r\n            })\r\n\r\n            if (countdown === 0) {\r\n              console.log('调用15秒的接口');\r\n              this._prediction()\r\n              countdownTimer && clearInterval(countdownTimer)\r\n              this.setState({\r\n                countdown: 0\r\n              })\r\n              // ipcRenderer.send('usbdata', { command: '41', arr: [] })\r\n\r\n            }\r\n\r\n            if (isconnected === false) {\r\n              countdownTimer && clearInterval(countdownTimer)\r\n\r\n            }\r\n          }, 1000);\r\n        }\r\n        lastConnectionTime = new Date();\r\n\r\n\r\n\r\n        let progress = (Temp - 25) * 5\r\n        let dataS = {\r\n          sample: clinicalIndex++,\r\n          data0: temp0,\r\n          data1: temp1\r\n        }\r\n        clinicalYuce.push(dataS)\r\n        if (clinicalIndex < 10) {\r\n          clinicalYuce.push({\r\n            sample: clinicalIndex++,\r\n            data0: temp0,\r\n            data1: temp1\r\n          })\r\n        }\r\n        this.setState({\r\n          Temp,\r\n          isMeasure: true,\r\n          // mearsurePart: 1,\r\n          measuerStatus: 'connented',\r\n          isconnected: true,\r\n          progress,\r\n          endMeasure: false,\r\n          initFlog: true,\r\n          isEarMeasure: false\r\n        })\r\n\r\n      },\r\n      208: () => {  //耳温\r\n\r\n        lastConnectionTime = new Date();\r\n        isMeasurement = true\r\n        if (firstEar) {\r\n          firstEar = false\r\n          console.log('去获取探头id');\r\n          ipcRenderer.send('usbdata', { command: '31', arr: [] })\r\n        }\r\n        //现在探头0可能不存在，所以把探头0改为探头1\r\n        let temp0 = parseFloat(`${dataArr1[7]}.${(dataArr1[8])}`)\r\n        let Temp = temp0\r\n\r\n        console.log(Temp, temp0);\r\n        let progress = (Temp - 25) * 5\r\n        this.setState({\r\n          Temp,\r\n          isMeasure: false,\r\n          mearsurePart: 3,\r\n          measuerStatus: '测量中',\r\n          isconnected: true,\r\n          progress,\r\n          endMeasure: false,\r\n          initFlog: true,\r\n          isEarMeasure: true,\r\n          petVitalTypeId: '03'\r\n        })\r\n\r\n      },\r\n      193: () => {  //硬件发送结束命令\r\n        this.time193 && clearTimeout(this.time193)\r\n        this.time193 = setTimeout(() => {\r\n          endflog = true\r\n          countdownTimer && clearInterval(countdownTimer)\r\n          this.setState({\r\n            isMeasure: false,\r\n            endMeasure: true,\r\n            isEarMeasure: false\r\n          })\r\n          lastConnectionTime = new Date();\r\n          if (saveHistoryTime != null) {\r\n            clearTimeout(saveHistoryTime)\r\n          }\r\n\r\n          clinicalYuce = []\r\n          clinicalIndex = 0\r\n          firstEar = true\r\n          this.time193 && clearTimeout(this.time193)\r\n          console.log('-----------=======最终结果值========---------', this.state.Temp);\r\n          let { Temp, units } = this.state\r\n          let temp = units === '℉' ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1)\r\n          if (this.state.devicesType === 'mella') {\r\n            ipcRenderer.send('keyboardWriting', temp)\r\n          }\r\n\r\n        }, 1000);\r\n\r\n\r\n      },\r\n      194: () => {       //硬件收到机器学习结果并停止测量，通知我们一声\r\n        endflog = true\r\n        countdownTimer && clearInterval(countdownTimer)\r\n        this.setState({\r\n          isMeasure: false,\r\n          endMeasure: true,\r\n          isEarMeasure: false\r\n        })\r\n        lastConnectionTime = new Date();\r\n        if (saveHistoryTime != null) {\r\n          clearTimeout(saveHistoryTime)\r\n        }\r\n\r\n        clinicalYuce = []\r\n        clinicalIndex = 0\r\n        isMeasurement = false\r\n      },\r\n\r\n      192: () => {   //开始测量返回结果\r\n        switch (newArr[3]) {\r\n          case 90: console.log('有探头，开始测量的返回指令·'); break;\r\n          case 11: console.log('没有探头，开始测量的返回值'); break;\r\n\r\n        }\r\n      },\r\n      129: () => {      //返回硬件版本号\r\n        console.log(`返回的版本号为${newArr[3]}`);\r\n        lastConnectionTime = new Date();\r\n        this.setState({\r\n          measuerStatus: 'connented',\r\n          isconnected: true,\r\n          isEarMeasure: false\r\n\r\n        })\r\n      },\r\n      135: () => {          //硬件的一些基本信息\r\n        /**\r\n         * ______________新版、旧版没法控制温度计__________________\r\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\r\n         * newArr[7] 无操作关机时间\r\n         * newArr[8] 背光时间\r\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\r\n         * newArr[10] 测量单位    01代表℃，00代表℉\r\n         */\r\n\r\n        let hardSet = electronStore.get('hardwareConfiguration')\r\n        let beep = hardSet.isBeep ? '11' : '00'\r\n        let unit = hardSet.isHua ? '00' : '01'\r\n\r\n        if (dataArr1[7] === hardSet.autoOff.number && dataArr1[8] === hardSet.backlightTimer.number &&\r\n          dataArr1[9] === beep && dataArr1[10] === unit) {\r\n        } else {\r\n          console.log('不相同，去发送命令');\r\n          let setArr = ['03', 'ed', '07', 'dd', hardSet.autoOff.number, hardSet.isBacklight ? hardSet.backlightTimer.number : '00', hardSet.isBeep ? '11' : '00', hardSet.isHua ? '00' : '01']\r\n          ipcRenderer.send('usbdata', { command: '21', arr: setArr })\r\n        }\r\n        this.setState({\r\n          measuerStatus: 'connented',\r\n          isconnected: true\r\n        })\r\n\r\n      },\r\n      238: () => {     //探头松动\r\n        console.log('探头松动');\r\n        this.setState({\r\n          isMeasure: false,\r\n          endMeasure: true\r\n        })\r\n        message.error('The probe is loose, please re-install and measure again', 5)\r\n        clinicalYuce = []\r\n        clinicalIndex = 0\r\n        countdownTimer && clearInterval(countdownTimer)\r\n      },\r\n      194: () => {       //硬件收到了机器学习预测的温度\r\n        this.setState({\r\n          isMeasure: false,\r\n          endMeasure: true,\r\n          APIFlog: true,\r\n          isEarMeasure: false\r\n        })\r\n        clinicalYuce = []\r\n        clinicalIndex = 0\r\n        endflog = true\r\n\r\n\r\n        countdownTimer && clearInterval(countdownTimer)\r\n\r\n\r\n      },\r\n      98: () => { //蓝牙连接断开\r\n        console.log('断开连接---断开连接---断开连接---断开连接---断开连接---断开连接');\r\n        firstEar = true\r\n        console.log(new Date() - is97Time);\r\n        if (new Date() - is97Time < 1000) {\r\n          return\r\n        }\r\n\r\n        let hardSet = electronStore.get('hardwareConfiguration')\r\n        let countdown = hardSet.is15 ? 15 : 30\r\n        this.setState({\r\n          measuerStatus: 'disconnected',\r\n          countdown,\r\n          isMeasure: false,\r\n          isconnected: false,\r\n          isEarMeasure: false\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      },\r\n      97: () => {       //蓝牙连接\r\n        console.log('连接成功---连接成功---连接成功---连接成功---连接成功---连接成功');\r\n        // disconnectedNum = 0\r\n        // lastConnectionTime = new Date();\r\n        //  disconnectedNum = 0\r\n        // lastConnectionTime = new Date();\r\n        this.setState({\r\n          measuerStatus: 'connented',\r\n          isconnected: true,\r\n          isEarMeasure: false\r\n\r\n        })\r\n        is97Time = new Date()\r\n      },\r\n      177: () => {         //探头id\r\n        let dataArr1 = newArr.map(item => {\r\n          if (item.toString(16).length < 2) {\r\n            return '0' + item.toString(16)\r\n          } else {\r\n            return item.toString(16)\r\n          }\r\n        })\r\n\r\n\r\n        let id = ''\r\n        for (let i = 3; i < dataArr1.length - 2; i++) {\r\n          id += dataArr1[i]\r\n\r\n        }\r\n        console.log(id, dataArr1[7]);\r\n\r\n        this.setState({\r\n          probeID: id,\r\n          petVitalTypeId: dataArr1[7]\r\n        })\r\n        if (dataArr1[7] === '01') {\r\n          this.setState({\r\n            mearsurePart: 1\r\n          })\r\n        } else if (dataArr1[7] === '02') {\r\n          this.setState({\r\n            mearsurePart: 2\r\n          })\r\n        } else if (dataArr1[7] === '03') {\r\n          this.setState({\r\n            mearsurePart: 3\r\n          })\r\n        }\r\n\r\n\r\n\r\n      },\r\n      7: () => {  //发什么收什么，需要去重新插拔底座\r\n        console.log('重新插拔底座');\r\n        if (num07 === 3 && this.state.err07Visible === false) {\r\n          this.setState({\r\n            err07Visible: true\r\n          })\r\n        }\r\n      },\r\n      99: () => { //体脂称的广播信息\r\n        function getVal (shi, xiaoshuo) {\r\n\r\n          if (shi.length < 2) {\r\n            shi = `0${shi}`\r\n          }\r\n          if (xiaoshuo.length < 2) {\r\n            xiaoshuo = `0${xiaoshuo}`\r\n          }\r\n          return `0x${shi}${xiaoshuo}`\r\n        }\r\n\r\n\r\n        let weight = getVal((dataArr1[3]).toString(16), (dataArr1[4]).toString(16))\r\n        let impedance = getVal((dataArr1[5]).toString(16), (dataArr1[6]).toString(16))\r\n        let sendWeight = null\r\n        try {\r\n          sendWeight = parseInt(weight) / 100\r\n          weight = parseInt(weight) / 100 * 2.2046\r\n          if (impedance) {\r\n            impedance = parseInt(impedance)\r\n          }\r\n          weight = weight.toFixed(1)\r\n\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n\r\n        if (weight) {\r\n          // console.log(sameBiggieNum, keyboardBiggieFlog);\r\n          if (weight === this.state.biggieDate && this.state.devicesType === 'biggie') {\r\n\r\n            sameBiggieNum++\r\n            if (!keyboardBiggieFlog && sameBiggieNum === 6) {\r\n              console.log('键盘写入');\r\n              let { units, sendWeight, biggieDate } = this.state\r\n\r\n              let weight = units === '℃' ? sendWeight : biggieDate\r\n              ipcRenderer.send('keyboardWriting', weight)\r\n            }\r\n\r\n          } else {\r\n            sameBiggieNum = 0\r\n            keyboardBiggieFlog = false\r\n          }\r\n\r\n          this.setState({\r\n            biggieDate: weight,\r\n            impedance,\r\n            sendWeight,\r\n            isHaveBigieDate: true\r\n          })\r\n        }\r\n\r\n      },\r\n      100: () => {//蓝牙软尺广播的数据\r\n        let confirmBtn = newArr[6]    //十进制数字，值为160代表尺子拉动，值为161代表按了尺子确认按钮\r\n        let rulerUnitNum = newArr[11] //十进制数字，值大于等于80代表单位为in，小于80代表单位为cm\r\n        let newVal = null             //为测量数值，和单位匹配对应\r\n        const ITEMINDEX = 6\r\n\r\n        //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\r\n        let num1 = dataArr1[7]\r\n        let num2 = dataArr1[8]\r\n        let num = getVal(num1, num2)\r\n        try {\r\n          newVal = (parseInt(num) / 100)\r\n          if (newVal < 3) {\r\n            newVal = 0\r\n          }\r\n\r\n          if (rulerUnitNum >= 80) {\r\n            newVal = (newVal * 0.3937).toFixed(2)\r\n\r\n          } else {\r\n            newVal = newVal.toFixed(1)\r\n          }\r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n\r\n\r\n        function getVal (shi, xiaoshuo) {\r\n\r\n          if (shi.length < 2) {\r\n            shi = `0${shi}`\r\n          }\r\n          if (xiaoshuo.length < 2) {\r\n            xiaoshuo = `0${xiaoshuo}`\r\n          }\r\n          return `0x${shi}${xiaoshuo}`\r\n        }\r\n\r\n        //点击了确认按钮\r\n        let { itemIndex, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n          h2tLength, torsoLength\r\n        } = this.state\r\n        if (confirmBtn === 161) {\r\n          if (!nextFlog) {\r\n            nextFlog = true\r\n\r\n\r\n            let units = rulerUnitNum >= 80 ? 'in' : 'cm'\r\n            if (itemIndex === ITEMINDEX) {\r\n              // this._next()\r\n              return\r\n            }\r\n            let newitemIndex = itemIndex >= ITEMINDEX ? ITEMINDEX : itemIndex + 1\r\n            let textValue = ''\r\n            switch (itemIndex) {\r\n              case 1: textValue = l2rarmDistance; break;\r\n              case 2: textValue = h2tLength; break;\r\n              case 3: textValue = torsoLength; break;\r\n              case 4: textValue = neckCircumference; break;\r\n              case 5: textValue = upperTorsoCircumference; break;\r\n              case 6: textValue = lowerTorsoCircumference; break;\r\n              default:\r\n                break;\r\n            }\r\n\r\n            if (newVal !== textValue && parseInt(newVal) > 0) {\r\n\r\n              switch (itemIndex) {\r\n                case 1: this.setState({ l2rarmDistance: newVal, itemIndex: newitemIndex, units }); break;\r\n                case 2: this.setState({ h2tLength: newVal, itemIndex: newitemIndex, units }); break;\r\n                case 3: this.setState({ torsoLength: newVal, itemIndex: newitemIndex, units }); break;\r\n                case 4: this.setState({ neckCircumference: newVal, itemIndex: newitemIndex, units }); break;\r\n                // case 5: this.setState({ bodyWidth: newVal, itemIndex: newitemIndex, units }); break;\r\n                case 5: this.setState({ upperTorsoCircumference: newVal, itemIndex: newitemIndex, units }); break;\r\n                case 6: this.setState({ lowerTorsoCircumference: newVal, itemIndex: newitemIndex, units }); break;\r\n                default: this.setState({\r\n                  itemIndex: newitemIndex\r\n                  , units\r\n                })\r\n                  break;\r\n              }\r\n            } else {\r\n              this.setState({\r\n                itemIndex: newitemIndex,\r\n                units\r\n              })\r\n            }\r\n\r\n\r\n\r\n          }\r\n        } else if (confirmBtn === 160) {\r\n          nextFlog = false\r\n          let textValue = ''\r\n          let units = rulerUnitNum >= 80 ? 'in' : 'cm'\r\n\r\n          switch (itemIndex) {\r\n            case 1: textValue = l2rarmDistance; break;\r\n            case 2: textValue = h2tLength; break;\r\n            case 3: textValue = torsoLength; break;\r\n            case 4: textValue = neckCircumference; break;\r\n            case 5: textValue = upperTorsoCircumference; break;\r\n            case 6: textValue = lowerTorsoCircumference; break;\r\n          }\r\n\r\n          if (newVal !== textValue && parseInt(newVal) > 0) {\r\n            if (!avoidRepetition) {\r\n              avoidRepetition = true\r\n              this.avoidRepetition = setTimeout(() => {\r\n                avoidRepetition = false\r\n                this.avoidRepetition && clearTimeout(this.avoidRepetition)\r\n              }, 100);\r\n              switch (itemIndex) {\r\n                case 1: this.setState({ l2rarmDistance: newVal, units }); break;\r\n                case 2: this.setState({ h2tLength: newVal, units }); break;\r\n                case 3: this.setState({ torsoLength: newVal, units }); break;\r\n                case 4: this.setState({ neckCircumference: newVal, units }); break;\r\n                case 5: this.setState({ upperTorsoCircumference: newVal, units }); break;\r\n                case 6: this.setState({ lowerTorsoCircumference: newVal, units }); break;\r\n                default:\r\n                  break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n\r\n\r\n      },\r\n      255: () => {\r\n        // console.log(dataArr1);\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n\r\n        let bluName = ''\r\n        let bluData = []\r\n        //[\"aa\", \"25\", \"ff\", |\"03\", \"03\", \"b0\", \"ff\",| \"0f\", \"ff\", \"ac\", \"d2\", \"0b\", \"72\", \"c1\", \"7d\", \"3e\", \"d0\", \"a0\", \"00\", \"05\", \"09\", \"00\", \"2e\",| \"05\", \"09\", \"54\", \"61\", \"70\", \"65\", |\"06\", \"ef\", \"d0\", \"3e\", \"7d\", \"c1\", \"72\", |\"0b\", \"5c\", \"55\"]\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5])\r\n          }\r\n          // console.log('--剪切的数据---', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              let str = ''\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                let item = parseInt(itemData[i], 16)\r\n                str += String.fromCharCode(item)\r\n\r\n              }\r\n              bluName = str\r\n              // console.log('--蓝牙名称:', bluName);\r\n\r\n\r\n              break;\r\n\r\n            case 255:\r\n              bluData = itemData\r\n              break;\r\n            case 7: console.log('---UUID'); break;\r\n            case 239:\r\n              // console.log('---mac地址'); \r\n              break;\r\n\r\n            case 3: console.log('----尺子的,不知道什么用'); break;\r\n\r\n            default: console.log('直接跳出循环'); return;\r\n          }\r\n          dataIndex = itemLength\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\r\n        }\r\n        console.log('硬件名称', bluName, '-----硬件数据', bluData);\r\n\r\n        if (bluName.indexOf('C19') !== -1 && bluData.length > 10) {\r\n\r\n          let weight = `0x${bluData[10]}${bluData[11]}`\r\n          let impedance = `0x${bluData[12]}${bluData[13]}`\r\n          let sendWeight = null\r\n          try {\r\n            //sendWeight的值单位是kg,weight的值为lb(磅)\r\n            sendWeight = parseInt(weight) / 100\r\n            weight = parseInt(weight) / 100 * 2.2046\r\n            if (impedance) {\r\n              impedance = parseInt(impedance)\r\n            }\r\n            weight = weight.toFixed(1)\r\n\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n          // console.log('----秤', weight, impedance);\r\n\r\n          if (weight) {\r\n            // console.log(sameBiggieNum, keyboardBiggieFlog);\r\n            if (weight === this.state.biggieDate && this.state.devicesType === 'biggie') {\r\n\r\n              sameBiggieNum++\r\n              if (!keyboardBiggieFlog && sameBiggieNum === 6) {\r\n                console.log('键盘写入');\r\n                let { units, sendWeight, biggieDate } = this.state\r\n\r\n                let weight = units === '℃' ? sendWeight : biggieDate\r\n                ipcRenderer.send('keyboardWriting', weight)\r\n              }\r\n\r\n            } else {\r\n              sameBiggieNum = 0\r\n              keyboardBiggieFlog = false\r\n            }\r\n\r\n            this.setState({\r\n              biggieDate: weight,\r\n              impedance,\r\n              sendWeight,\r\n              isHaveBigieDate: true\r\n            })\r\n          }\r\n        } else if (bluName.indexOf('Tape') !== -1) {\r\n\r\n          let confirmBtn = parseInt(bluData[8], 16)     //十进制数字，值为160代表尺子拉动，值为161代表按了尺子确认按钮\r\n          let rulerUnitNum = parseInt(bluData[13], 16) //十进制数字，值大于等于80代表单位为in，小于80代表单位为cm\r\n          let newVal = null             //为测量数值，和单位匹配对应\r\n          const ITEMINDEX = 7\r\n          let units = rulerUnitNum >= 80 ? 'in' : 'cm'\r\n\r\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\r\n          let num1 = bluData[9]\r\n          let num2 = bluData[10]\r\n          let num = getVal(num1, num2)\r\n          try {\r\n            newVal = (parseInt(num) / 100)\r\n            if (newVal < 3) {\r\n              newVal = 0\r\n            }\r\n\r\n            if (rulerUnitNum >= 80) {\r\n              newVal = (newVal * 0.3937).toFixed(2)\r\n\r\n            } else {\r\n              newVal = newVal.toFixed(1)\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n\r\n\r\n\r\n          function getVal (shi, xiaoshuo) {\r\n\r\n            if (shi.length < 2) {\r\n              shi = `0${shi}`\r\n            }\r\n            if (xiaoshuo.length < 2) {\r\n              xiaoshuo = `0${xiaoshuo}`\r\n            }\r\n            return `0x${shi}${xiaoshuo}`\r\n          }\r\n\r\n          //点击了确认按钮\r\n          let { itemIndex, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n            h2tLength, torsoLength\r\n          } = this.state\r\n          if (confirmBtn === 161) {\r\n            if (!nextFlog) {\r\n              nextFlog = true\r\n\r\n              if (itemIndex === ITEMINDEX) {\r\n                this._updatePetAttributes()\r\n                return\r\n              }\r\n              let newitemIndex = itemIndex >= ITEMINDEX ? 1 : itemIndex + 1\r\n\r\n              let textValue = ''\r\n              switch (itemIndex) {\r\n                case 1: textValue = l2rarmDistance; break;\r\n                case 2: textValue = h2tLength; break;\r\n                case 3: textValue = torsoLength; break;\r\n                case 4: textValue = neckCircumference; break;\r\n                case 5: textValue = upperTorsoCircumference; break;\r\n                case 6: textValue = lowerTorsoCircumference; break;\r\n                default:\r\n                  break;\r\n              }\r\n\r\n              if (newVal !== textValue && parseInt(newVal) > 0) {\r\n                switch (itemIndex) {\r\n                  case 1: this.setState({ l2rarmDistance: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  case 2: this.setState({ h2tLength: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  case 3: this.setState({ torsoLength: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  case 4: this.setState({ neckCircumference: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  // case 5: this.setState({ bodyWidth: newVal, itemIndex: newitemIndex, units }); break;\r\n                  case 5: this.setState({ upperTorsoCircumference: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  case 6: this.setState({ lowerTorsoCircumference: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  default: this.setState({\r\n                    itemIndex: newitemIndex\r\n                    , rulerUnit: units\r\n                  })\r\n                    break;\r\n                }\r\n              } else {\r\n                this.setState({\r\n                  itemIndex: newitemIndex,\r\n                  rulerUnit: units\r\n                })\r\n              }\r\n\r\n\r\n\r\n            }\r\n          } else if (confirmBtn === 160) {\r\n            nextFlog = false\r\n            let textValue = ''\r\n\r\n\r\n            switch (itemIndex) {\r\n              case 1: textValue = l2rarmDistance; break;\r\n              case 2: textValue = h2tLength; break;\r\n              case 3: textValue = torsoLength; break;\r\n              case 4: textValue = neckCircumference; break;\r\n              case 5: textValue = upperTorsoCircumference; break;\r\n              case 6: textValue = lowerTorsoCircumference; break;\r\n            }\r\n\r\n            if (newVal !== textValue && parseInt(newVal) > 0) {\r\n              if (!avoidRepetition) {\r\n                avoidRepetition = true\r\n                this.avoidRepetition = setTimeout(() => {\r\n                  avoidRepetition = false\r\n                  this.avoidRepetition && clearTimeout(this.avoidRepetition)\r\n                }, 100);\r\n                switch (itemIndex) {\r\n                  case 1: this.setState({ l2rarmDistance: newVal, rulerUnit: units }); break;\r\n                  case 2: this.setState({ h2tLength: newVal, rulerUnit: units }); break;\r\n                  case 3: this.setState({ torsoLength: newVal, rulerUnit: units }); break;\r\n                  case 4: this.setState({ neckCircumference: newVal, rulerUnit: units }); break;\r\n                  case 5: this.setState({ upperTorsoCircumference: newVal, rulerUnit: units }); break;\r\n                  case 6: this.setState({ lowerTorsoCircumference: newVal, rulerUnit: units }); break;\r\n                  default:\r\n                    break;\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n        } else if (bluName.indexOf('Mella Measure') !== -1 && this.state.devicesType === 'biggie') {\r\n          //255\r\n          let { itemIndex, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n            h2tLength, torsoLength\r\n          } = this.state\r\n          // console.log('结束循环蓝牙名称', bluData)\r\n          let confirmBtn = bluData[8]     //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\r\n\r\n          let rulerUnitNum = parseInt(bluData[11], 16) //十进制数字，值等于11代表单位为in，00代表单位为cm\r\n          let newVal = null             //为测量数值，和单位匹配对应\r\n          const ITEMINDEX = 6\r\n          let units = rulerUnitNum === 0 ? 'cm' : 'in'\r\n\r\n\r\n          if (units !== this.state.rulerUnit) {\r\n            if (units === 'cm') {\r\n              l2rarmDistance = l2rarmDistance ? `${(parseFloat(l2rarmDistance) * 2.54).toFixed(1)}` : ''\r\n              neckCircumference = neckCircumference ? `${(parseFloat(neckCircumference) * 2.54).toFixed(1)}` : ''\r\n              upperTorsoCircumference = upperTorsoCircumference ? `${(parseFloat(upperTorsoCircumference) * 2.54).toFixed(1)}` : ''\r\n              lowerTorsoCircumference = lowerTorsoCircumference ? `${(parseFloat(lowerTorsoCircumference) * 2.54).toFixed(1)}` : ''\r\n              h2tLength = h2tLength ? `${(parseFloat(h2tLength) * 2.54).toFixed(1)}` : ''\r\n              torsoLength = torsoLength ? `${(parseFloat(torsoLength) * 2.54).toFixed(1)}` : ''\r\n            } else {\r\n              l2rarmDistance = l2rarmDistance ? `${(parseFloat(l2rarmDistance) / 2.54).toFixed(2)}` : ''\r\n              neckCircumference = neckCircumference ? `${(parseFloat(neckCircumference) / 2.54).toFixed(2)}` : ''\r\n              upperTorsoCircumference = upperTorsoCircumference ? `${(parseFloat(upperTorsoCircumference) / 2.54).toFixed(2)}` : ''\r\n              lowerTorsoCircumference = lowerTorsoCircumference ? `${(parseFloat(lowerTorsoCircumference) / 2.54).toFixed(2)}` : ''\r\n              h2tLength = h2tLength ? `${(parseFloat(h2tLength) / 2.54).toFixed(2)}` : ''\r\n              torsoLength = torsoLength ? `${(parseFloat(torsoLength) / 2.54).toFixed(2)}` : ''\r\n            }\r\n\r\n            this.setState({\r\n              l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n              h2tLength, torsoLength,\r\n              rulerUnit: units\r\n            })\r\n\r\n\r\n          }\r\n\r\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\r\n          let num1 = bluData[9]\r\n          let num2 = bluData[10]\r\n          let num = getVal(num1, num2)\r\n          try {\r\n            newVal = parseFloat(num)\r\n            if (rulerUnitNum === 17) {\r\n              newVal = newVal.toFixed(2)\r\n\r\n            } else {\r\n              newVal = newVal.toFixed(1)\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n\r\n\r\n\r\n          function getVal (shi, xiaoshuo) {\r\n            let num1 = parseInt(shi, 16)\r\n            let num2 = parseInt(xiaoshuo, 16)\r\n\r\n            return `${num1}.${num2}`\r\n          }\r\n\r\n          //点击了确认按钮\r\n\r\n          if (confirmBtn[1] === '2' && confirmBtn[0] !== confirmBtnFlog) {\r\n            confirmBtnFlog = confirmBtn[0]\r\n            if (!nextFlog) {\r\n              nextFlog = true\r\n\r\n              if (itemIndex === ITEMINDEX) {\r\n                this._updatePetAttributes()\r\n                return\r\n              }\r\n              let newitemIndex = itemIndex >= ITEMINDEX ? 1 : itemIndex + 1\r\n\r\n              let textValue = ''\r\n              try {\r\n                switch (itemIndex) {\r\n                  case 1: textValue = l2rarmDistance; this.input2 && this.input2.focus(); break;\r\n                  case 2: textValue = h2tLength; this.input3 && this.input3.focus(); break;\r\n                  case 3: textValue = torsoLength; this.input4 && this.input4.focus(); break;\r\n                  case 4: textValue = neckCircumference; this.input5 && this.input5.focus(); break;\r\n                  case 5: textValue = upperTorsoCircumference; this.input6 && this.input6.focus(); break;\r\n                  case 6: textValue = lowerTorsoCircumference; this.input7 && this.input7.focus(); break;\r\n                  default:\r\n                    break;\r\n                }\r\n              } catch (error) {\r\n                console.log(error);\r\n              }\r\n\r\n\r\n\r\n\r\n              if (newVal !== textValue && parseInt(newVal) >= 0) {\r\n                switch (itemIndex) {\r\n                  case 1: this.setState({ l2rarmDistance: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  case 2: this.setState({ h2tLength: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  case 3: this.setState({ torsoLength: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  case 4: this.setState({ neckCircumference: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  // case 5: this.setState({ bodyWidth: newVal, itemIndex: newitemIndex, units }); break;\r\n                  case 5: this.setState({ upperTorsoCircumference: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  case 6: this.setState({ lowerTorsoCircumference: newVal, itemIndex: newitemIndex, rulerUnit: units }); break;\r\n                  default: this.setState({\r\n                    itemIndex: newitemIndex\r\n                    , rulerUnit: units\r\n                  })\r\n                    break;\r\n                }\r\n              } else {\r\n                this.setState({\r\n                  itemIndex: newitemIndex,\r\n                  rulerUnit: units\r\n                })\r\n              }\r\n\r\n\r\n\r\n            }\r\n          } else if (confirmBtn === '01') {\r\n            nextFlog = false\r\n            let textValue = ''\r\n\r\n\r\n            switch (itemIndex) {\r\n              case 1: textValue = l2rarmDistance; break;\r\n              case 2: textValue = h2tLength; break;\r\n              case 3: textValue = torsoLength; break;\r\n              case 4: textValue = neckCircumference; break;\r\n              case 5: textValue = upperTorsoCircumference; break;\r\n              case 6: textValue = lowerTorsoCircumference; break;\r\n            }\r\n\r\n            if (newVal !== textValue && parseInt(newVal) >= 0) {\r\n              if (!avoidRepetition) {\r\n                avoidRepetition = true\r\n                this.avoidRepetition = setTimeout(() => {\r\n                  avoidRepetition = false\r\n                  this.avoidRepetition && clearTimeout(this.avoidRepetition)\r\n                }, 100);\r\n                try {\r\n                  switch (itemIndex) {\r\n                    case 1: this.setState({ l2rarmDistance: newVal, rulerUnit: units }); this.input1 && this.input1.focus(); break;\r\n                    case 2: this.setState({ h2tLength: newVal, rulerUnit: units }); this.input2 && this.input2.focus(); break;\r\n                    case 3: this.setState({ torsoLength: newVal, rulerUnit: units }); this.input3 && this.input3.focus(); break;\r\n                    case 4: this.setState({ neckCircumference: newVal, rulerUnit: units }); this.input4 && this.input4.focus(); break;\r\n                    case 5: this.setState({ upperTorsoCircumference: newVal, rulerUnit: units }); this.input5 && this.input5.focus(); break;\r\n                    case 6: this.setState({ lowerTorsoCircumference: newVal, rulerUnit: units }); this.input6 && this.input6.focus(); break;\r\n                    default:\r\n                      break;\r\n                  }\r\n                } catch (error) {\r\n                  console.log(error);\r\n                }\r\n\r\n              }\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        // if (bluName.indexOf('C19') !== -1 && bluData.length > 10) {\r\n        // console.log(bluData);\r\n\r\n        else if (bluName.indexOf('Biggie') !== -1 && this.state.devicesType === 'biggie' && bluData.length > 10) {\r\n          function getVal (shi) {\r\n            if (`${shi}`.length < 2) {\r\n              return `0${shi}`\r\n            }\r\n            return `${shi}`\r\n\r\n          }\r\n\r\n          let newArr = bluData\r\n\r\n          let weight = `${getVal(newArr[9].toString(16))}${getVal(newArr[10].toString(16))}`\r\n          weight = parseInt(weight, 16)\r\n\r\n\r\n          let impedance = `${getVal(newArr[12].toString(16))}${getVal(newArr[13].toString(16))}`\r\n          impedance = parseInt(impedance, 16)\r\n\r\n          let arr11 = getVal(newArr[11].toString(16))\r\n\r\n          weight = weight / Math.pow(10, parseInt(arr11[0]))\r\n          // console.log('重量为', weight);\r\n          let weightUnits = 'kg'\r\n          let sendWeight, biggieDate\r\n          switch (arr11[1]) {\r\n            case '0':\r\n              weightUnits = 'kg';\r\n              sendWeight = weight;\r\n              biggieDate = (weight * 2.2046).toFixed(2)\r\n              break;\r\n            case '1':\r\n              weightUnits = 'lb';\r\n              sendWeight = weight;\r\n              biggieDate = (weight * 2).toFixed(2)\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n\r\n          // if (`${getVal(newArr[8].toString(16))}` === '03') {\r\n          //   //进入了结束测量\r\n          //   if (!biggieSave) {\r\n          //     //第一条测量完成指令\r\n          //     console.log('键盘写入');\r\n          //     let { units, } = this.state\r\n\r\n          //     let weight = units === '℃' ? sendWeight : biggieDate\r\n          //     ipcRenderer.send('keyboardWriting', weight)\r\n\r\n          //   }\r\n          //   biggieSave = true\r\n          // } else {\r\n          //   biggieSave = false\r\n          // }\r\n          if (weight === this.state.biggieDate && this.state.devicesType === 'biggie') {\r\n\r\n            sameBiggieNum++\r\n            if (!keyboardBiggieFlog && sameBiggieNum === 6) {\r\n              console.log('键盘写入');\r\n              let { units, } = this.state\r\n\r\n              let weight = units === '℃' ? sendWeight : biggieDate\r\n              ipcRenderer.send('keyboardWriting', weight)\r\n            }\r\n\r\n          } else {\r\n            sameBiggieNum = 0\r\n            keyboardBiggieFlog = false\r\n          }\r\n\r\n\r\n\r\n          if (weight >= 0) {\r\n\r\n            this.setState({\r\n              biggieDate,\r\n              impedance,\r\n              sendWeight,\r\n              isHaveBigieDate: true\r\n            })\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n  }\r\n  testCheck = (arr) => {\r\n    if (arr.length < 7) {\r\n      return false\r\n    }\r\n    let i = 7\r\n    let checkFloag = arr[i];\r\n\r\n\r\n    for (i = 8; i < arr.length - 2; i++) {\r\n      checkFloag = checkFloag ^ arr[i];\r\n    }\r\n    return checkFloag;\r\n  }\r\n  getMac = (arr) => {\r\n    // console.log(arr);\r\n    let str = arr[1].toString(16)\r\n    if (str.length === 1) {\r\n      str = '0' + str\r\n    }\r\n    for (let i = 2; i < 7; i++) {\r\n\r\n      let item = arr[i].toString(16)\r\n      if (item.length === 1) {\r\n        item = '0' + item\r\n      }\r\n      str += `:${item}`\r\n      // }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return str\r\n  }\r\n  //15秒的预测程序\r\n  _time15 = (val) => {\r\n\r\n    let isDog = true\r\n    let { petSpeciesBreedId } = this.state\r\n    if (petSpeciesBreedId < 136) {\r\n      isDog = false\r\n    }\r\n    let parame = {\r\n      ambient_temperature: 25,\r\n      data: clinicalYuce,\r\n      deviceId: '11111111111111111111111111',\r\n\r\n      sampling_rate: '104ms'\r\n    }\r\n\r\n    console.log('预测传入数据', parame);\r\n\r\n    let url = !isDog ? '/clinical/dogPredict' : '/clinical/catPredict'\r\n    console.log(url)\r\n    console.log('预测发送只', parame);\r\n\r\n    fetchRequest(url, 'POST', parame)\r\n      .then((res) => {\r\n        // predictionFlog = false\r\n        if (res.message === 'Success') {\r\n          console.log('预测返回值：', res);\r\n\r\n          let prediction = res.result.prediction.toFixed(2)\r\n          temp15 = parseFloat(prediction)\r\n\r\n        } else {\r\n          console.log('system error')\r\n        }\r\n\r\n\r\n      })\r\n      .catch((err) => {\r\n        console.log(`:${err}`)\r\n\r\n      })\r\n\r\n\r\n\r\n  }\r\n  //预测程序\r\n  _prediction = (val) => {\r\n\r\n    let isDog = true\r\n    let { petSpeciesBreedId } = this.state\r\n    if (petSpeciesBreedId < 136) {\r\n      isDog = false\r\n    }\r\n    let parame = {\r\n      // ambient_temperature: this.state.huanwen,\r\n      ambient_temperature: 17,\r\n\r\n      data: clinicalYuce,\r\n      deviceId: `${this.state.probeId}`,\r\n      // deviceId: '11111111111111111111111111',\r\n\r\n      sampling_rate: '135ms'\r\n    }\r\n\r\n    console.log('预测传入数据', parame);\r\n\r\n    clinicalYuce = []\r\n    clinicalIndex = 0\r\n\r\n    let url = isDog ? '/clinical/dogv12Predict' : '/clinical/catv12Predict'\r\n    console.log(url, petSpeciesBreedId)\r\n    console.log('预测发送只', parame);\r\n\r\n    fetchRequest(url, 'POST', parame)\r\n      .then((res) => {\r\n        console.log('预测结果：', res);\r\n        // predictionFlog = false\r\n        if (res.message === 'Success') {\r\n          console.log('预测返回值：', res);\r\n\r\n          let prediction = res.result.prediction.toFixed(2)\r\n          console.log(prediction);\r\n\r\n\r\n          let tempArr = prediction.split('.')\r\n          let intNum = tempArr[0]\r\n          let flotNum = tempArr[1]\r\n          if (intNum.length < 2) {\r\n            intNum = '0' + intNum\r\n          }\r\n          if (flotNum.length < 2) {\r\n            flotNum = '0' + flotNum\r\n          }\r\n          endflog = false\r\n\r\n\r\n          //1.这里先注释掉,后面忘了取消注释\r\n          const timeID1 = setInterval(() => {\r\n            if (endflog) {\r\n              let Temp = parseFloat(prediction)\r\n              let progress = (Temp - 25) * 5\r\n              this.setState({\r\n                Temp,\r\n                progress\r\n              })\r\n              endflog = false\r\n\r\n              timeID1 && clearInterval(timeID1)\r\n            } else {\r\n              const timeID = setTimeout(() => {\r\n                ipcRenderer.send('usbdata', { command: '42', arr: [intNum, flotNum] })\r\n                timeID && clearTimeout(timeID)\r\n              }, 10)\r\n\r\n            }\r\n          }, 200)\r\n\r\n\r\n\r\n        } else {\r\n          const timeID = setTimeout(() => {\r\n            // this.sendData('41', [])\r\n            ipcRenderer.send('usbdata', { command: '41', arr: [] })\r\n\r\n            clearTimeout(timeID)\r\n          }, 10)\r\n          console.log('system error')\r\n        }\r\n\r\n\r\n      })\r\n      .catch((err) => {\r\n        // predictionFlog = false\r\n        console.log(err);\r\n        const timeID = setTimeout(() => {\r\n          // this.sendData('41', [])\r\n          ipcRenderer.send('usbdata', { command: '41', arr: [] })\r\n\r\n          clearTimeout(timeID)\r\n        }, 10)\r\n        console.log(`:${err}`)\r\n\r\n      })\r\n\r\n\r\n\r\n  }\r\n  _mearsurePort = () => {\r\n    switch (this.state.devicesType) {\r\n      case 'mella':\r\n        switch (this.state.mearsurePart) {\r\n          case 1: return (\r\n            <div >\r\n              <div className='part'>\r\n                Axillary\r\n                <img src={ye} alt=\"\" width=\"50px\" />\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n          case 2: return (\r\n            <div >\r\n              <div className='part'>\r\n                Rectal\r\n                <img src={gang} alt=\"\" width=\"50px\" />\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n          default: return (\r\n            <div >\r\n              <div className='part'>\r\n                Ear\r\n                <img src={er} alt=\"\" width=\"50px\" />\r\n\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n\r\n        break;\r\n      case 'biggie':\r\n        return (\r\n          <div className='part'>\r\n            Scale\r\n            <img src={scale} alt=\"\" width=\"50px\" />\r\n\r\n          </div>\r\n        )\r\n        break\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n  }\r\n  _getHistory = () => {\r\n    let historys = []\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    fetchRequest(`/pet/getPetExamByPetId/${this.state.petId}`, 'GET', '')  //userID要自动的\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true) {\r\n          let datas = res.data\r\n          console.log('-------', datas);\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            let data = datas[i]\r\n            let { petId, examId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo,\r\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime,\r\n              modifiedTime, fat, weight } = data\r\n            // console.log(createTime);\r\n            let time = null\r\n            if (storage.vetspireOrEzyvet === '2') {\r\n              time = modifiedTime\r\n              if (modifiedTime === '' || modifiedTime === null) {\r\n                time = createTime\r\n              }\r\n            } else {\r\n              time = createTime\r\n            }\r\n            let json = {\r\n              time,\r\n              Temp: temperature,\r\n              placement: petVitalTypeId,\r\n              note: memo,\r\n              historyId: examId,\r\n              bodyConditionScore,\r\n              heartRate,\r\n              respiratoryRate,\r\n              referenceRectalTemperature,\r\n              furLength,\r\n              roomTemperature,\r\n              bloodPressure,\r\n              petId,\r\n              userId,\r\n              fat, weight\r\n            }\r\n            // console.log(json);\r\n            historys.push(json)\r\n\r\n\r\n          }\r\n          console.log('----', historys);\r\n          let historyData = []\r\n          for (let i = 0; i < historys.length; i++) {\r\n            let history = historys[i]\r\n            let { bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId, examId, time, fat, weight } = history\r\n            let placement = history.placement\r\n            if (placement === null || placement === '') {\r\n              placement = 1\r\n            }\r\n            let str = {\r\n              date: moment(time).format('MMM DD'),\r\n              time: moment(time).format('hh:mm A'),\r\n              temp: history.Temp,\r\n              placement,\r\n              note: history.note,\r\n              historyId: history.historyId,\r\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId,\r\n              key: examId,\r\n              fat, weight\r\n            }\r\n            historyData.push(str)\r\n          }\r\n          console.log('historyData:', historyData);\r\n          this.setState({\r\n            historyData\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n  _getPetInfo = (value) => {\r\n    let datas = null\r\n\r\n    datas = {\r\n      patientId: this.state.patientId,\r\n      org: this.state.org\r\n    }\r\n\r\n\r\n\r\n    console.log('入参：', datas);\r\n    fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n      .then(res => {\r\n        console.log('宠物信息', res);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        if (res.flag === true) {\r\n          //有宠物，进入1\r\n          let { petId, petSpeciesBreedId } = res.data[0]\r\n          console.log('------------', petId);\r\n          this.setState({\r\n            petId,\r\n            petSpeciesBreedId\r\n          }, () => {\r\n            console.log('去获取历史记录');\r\n            this._getHistory()\r\n          })\r\n        } else {\r\n          //没有宠物，进入2\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n\r\n  draggleRef = React.createRef();\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n  _changeDeviceType = (val, e) => {\r\n    console.log(val, e)\r\n    this.setState({\r\n      devicesType: val\r\n    })\r\n\r\n    if (val === 'biggie' && this.state.isHaveBigieDate) {\r\n      this.setState({\r\n        isHaveBigieDate: false\r\n      })\r\n      keyboardBiggieFlog = false\r\n      sameBiggieNum = 0\r\n    }\r\n\r\n    temporaryStorage.devicesType = val\r\n\r\n\r\n\r\n\r\n  }\r\n  _refresh = () => {\r\n    console.log('点击了');\r\n    this.setState({\r\n      spin: true,  //\r\n      // addpatient_description: '',\r\n      // addpatient_petName: '',\r\n      // addpatient_species: 1\r\n    })\r\n    if (this.state.addpatient_patientId === '') {\r\n      this.setState({\r\n        spin: false\r\n      })\r\n    } else {\r\n      let list = electronStore.get('doctorExam')\r\n\r\n      let searchData = []\r\n      let keyWord = this.state.addpatient_patientId\r\n      for (let i = 0; i < list.length; i++) {\r\n        let patientId = list[i].patientId\r\n        if (`${patientId}` === keyWord) {\r\n          searchData.push(list[i])\r\n        }\r\n      }\r\n      console.log('搜索到的宠物为', searchData);\r\n      if (searchData.length > 0) {\r\n        let data = searchData[0]\r\n        let { l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n          h2tLength, torsoLength } = data\r\n\r\n        l2rarmDistance = l2rarmDistance ? `${l2rarmDistance}` : ''\r\n        neckCircumference = neckCircumference ? `${neckCircumference}` : ''\r\n        upperTorsoCircumference = upperTorsoCircumference ? `${upperTorsoCircumference}` : ''\r\n        lowerTorsoCircumference = lowerTorsoCircumference ? `${lowerTorsoCircumference}` : ''\r\n        h2tLength = h2tLength ? `${h2tLength}` : ''\r\n        torsoLength = torsoLength ? `${torsoLength}` : ''\r\n        let weight = data.weight\r\n        if (weight && weight !== 'unknown') {\r\n          weight = parseFloat(weight).toFixed(1)\r\n        }\r\n        let breedName = data.breed\r\n        if (!breedName) {\r\n          breedName = 'unknown'\r\n        }\r\n        switch (breedName) {\r\n          case 'defaultdog':\r\n            breedName = 'Dog'\r\n\r\n            break;\r\n          case 'defaultother':\r\n            breedName = 'Other'\r\n\r\n            break;\r\n          case 'defaultcat':\r\n            breedName = 'Cat'\r\n            break;\r\n\r\n        }\r\n        console.log('-----------', weight);\r\n        this.setState({\r\n          petName: data.petName,\r\n          owner: data.owner,\r\n          breedName,\r\n          weight,\r\n          age: data.age,\r\n          patientId: data.patientId,\r\n          petId: data.petId,\r\n          itemIndex: 1,\r\n          l2rarmDistance,\r\n          neckCircumference,\r\n          upperTorsoCircumference,\r\n          lowerTorsoCircumference,\r\n          h2tLength,\r\n          torsoLength,\r\n          isWalkIn: false\r\n        }, () => {\r\n          this._getHistory()\r\n        })\r\n      } else {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  selectWZ = (val) => {\r\n    switch (val) {\r\n      case 'dog':\r\n        this.setState({\r\n          catImg: cat1,\r\n          dogImg: redDog1,\r\n          otherImg: other,\r\n          selectWZ: val,\r\n        })\r\n\r\n        break;\r\n\r\n      case 'cat':\r\n        this.setState({\r\n          catImg: redCat1,\r\n          dogImg: dog1,\r\n          otherImg: other,\r\n          selectWZ: val,\r\n        })\r\n\r\n        break;\r\n\r\n      case 'other':\r\n        this.setState({\r\n          catImg: cat1,\r\n          dogImg: dog1,\r\n          otherImg: redother,\r\n          selectWZ: val,\r\n        })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  _topLeft = () => {\r\n    let { patientId, breedName, isMix, age, petName, owner, weight, url, speciesId, petId, isWalkIn, spin, dogImg, catImg, otherImg, addpatient_patientId } = this.state\r\n    if (isWalkIn) {\r\n\r\n      return (\r\n        <div className=\"l\">\r\n          <div className=\"petinfo\">\r\n            <div className=\"heard\"\r\n              style={{ height: px(50), marginTop: px(10), fontSize: px(24) }}\r\n            >\r\n\r\n              <div className=\"ltitle\" style={{ marginLeft: px(30) }}>\r\n                <p > {`Walk-In Exam`}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"walkPetinfo\"\r\n              style={{ marginTop: mTop(10), marginBottom: mTop(10), fontSize: px(16), paddingLeft: px(30), }}\r\n            >\r\n              <div className=\"patirntID\"\r\n                style={{ marginTop: px(10), }}\r\n              >\r\n                <p style={{ width: '80px', }}>Patient ID:</p>\r\n                <Input\r\n                  style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                  value={addpatient_patientId}\r\n                  bordered={false}\r\n                  onChange={(item) => {\r\n                    this.setState({\r\n                      addpatient_patientId: item.target.value.replace(/\\s/g, \"\")\r\n                    })\r\n                  }}\r\n                  onKeyDown={(e) => {\r\n                    // console.log('------', e);\r\n                    if (e.keyCode === 13) {\r\n                      this._refresh()\r\n                    }\r\n                  }}\r\n                />\r\n                <SyncOutlined className='refresh'\r\n                  style={{ fontSize: px(25) }}\r\n                  onClick={this._refresh} spin={spin} />\r\n              </div>\r\n\r\n              <div className='newPet'>\r\n                <div className=\"patirntID\"\r\n                  style={{ marginTop: px(10) }}\r\n                >\r\n                  <p style={{ width: '80px' }}>Pet Name*:</p>\r\n                  <Input\r\n                    // style={{ border: 'none', outline: 'medium' }}\r\n                    style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                    value={this.state.addpatient_petName}\r\n                    bordered={false}\r\n                    onChange={(item) => {\r\n                      // console.log(item);\r\n                      this.setState({\r\n                        addpatient_petName: item.target.value\r\n                      })\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"patirntID\"\r\n                  style={{ marginTop: px(10) }}\r\n                >\r\n                  <p style={{ width: '80px' }}>Description:</p>\r\n                  <Input\r\n                    // style={{ border: 'none', outline: 'medium' }}\r\n                    style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                    value={this.state.addpatient_description}\r\n                    bordered={false}\r\n                    onChange={(item) => {\r\n                      // console.log(item);\r\n                      this.setState({\r\n                        addpatient_description: item.target.value\r\n                      })\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n\r\n                <div className=\"species\" style={{ marginBottom: px(20), height: px(70), marginTop: px(10) }}>\r\n\r\n                  <ul>\r\n                    <li >\r\n                      <div className='speciesChild' >\r\n                        <div className='dog'\r\n\r\n                          onClick={() => { this.selectWZ('dog') }}>\r\n                          <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\r\n                        </div>\r\n                        Dog\r\n                      </div>\r\n                    </li>\r\n                    <li>\r\n                      <div className='speciesChild' >\r\n                        <div className='dog' onClick={() => { this.selectWZ('cat') }} >\r\n                          <img src={catImg} alt=\"\" style={{ height: px(40) }} />\r\n                        </div>\r\n                        Cat\r\n                      </div>\r\n                    </li>\r\n                    <li >\r\n                      <div className='speciesChild' >\r\n                        <div className='dog' onClick={() => { this.selectWZ('other') }} >\r\n                          <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\r\n                        </div>\r\n                        Other\r\n                      </div>\r\n                    </li>\r\n\r\n                  </ul>\r\n                </div>\r\n\r\n\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n          <div className=\"deviceInfo\">\r\n            <div className=\"heard1\"\r\n              style={{ height: px(40), marginTop: px(10), paddingRight: px(10), paddingLeft: px(30) }}\r\n            >\r\n              <span>Device Info</span>\r\n            </div>\r\n            <div className=\"devicesBody\"\r\n              style={{ marginTop: mTop(23) }}\r\n            >\r\n              <div className=\"devices\"\r\n                style={{ paddingLeft: px(31) }}\r\n              >\r\n                <p>Device:</p>\r\n                <Select\r\n                  value={this.state.devicesType}\r\n                  style={{ width: 120 }}\r\n                  size={'small'}\r\n                  onChange={this._changeDeviceType}\r\n                >\r\n                  <Option value=\"mella\">Mella</Option>\r\n                  <Option value=\"biggie\">Biggie</Option>\r\n                </Select>\r\n              </div>\r\n              {this._mearsurePort()}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n    }\r\n\r\n    if (breedName === null) {\r\n      breedName = ''\r\n    }\r\n    let mix = ''\r\n    if (isMix === true) {\r\n      mix = 'Mix'\r\n    }\r\n    let title = ''\r\n    if (petName && `${petName}`.toLowerCase() !== 'unknown') {\r\n      title += `${petName}`\r\n    }\r\n    if (petName && `${petName}`.toLowerCase() !== 'unknown' && patientId && `${patientId}`.toLowerCase() !== 'unknown') {\r\n      title += `, \\xa0 `\r\n    }\r\n    if (patientId && `${patientId}`.toLowerCase() !== 'unknown') {\r\n      title += `ID: ${patientId}`\r\n    }\r\n\r\n    let wei = (weight && `${weight}`.toLowerCase() !== 'unknown') ? `${weight}` : ''\r\n    if (wei && wei.indexOf(`kg`) === -1) {\r\n      wei += 'kg'\r\n    }\r\n    let image = `url(${other})`\r\n    if (url) {\r\n      image = `url(${url}?download=0&width=80)`\r\n    } else {\r\n      switch (speciesId) {\r\n        case 1: image = `url(${cat})`; break;\r\n        case 2: image = `url(${dog})`; break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className=\"l\">\r\n        <div className=\"petinfo\">\r\n          <div className=\"heard\"\r\n            style={{ height: px(50), marginTop: px(10), fontSize: px(24) }}\r\n          >\r\n            <div className=\"avaterBox\">\r\n              <div className='avatar'\r\n                style={{\r\n                  width: px(50),\r\n                  height: px(50),\r\n                  // marginRight: px(20),\r\n                  backgroundImage: image,\r\n                  marginLeft: px(20)\r\n\r\n\r\n                }}\r\n                onClick={() => {\r\n                  storage.goEditPet = 'nomalmeasurement'\r\n                  this.props.history.push({ pathname: '/page9', participate: { patientId, petName, petId } })\r\n                }}\r\n              >\r\n                {(storage.identity === '3') &&\r\n                  <img className='edit' src={edit} alt=\"\" width='18px' />}\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"ltitle\">\r\n              <p > {title}</p>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"info\"\r\n            style={{ marginTop: mTop(10), marginBottom: mTop(10), fontSize: px(16), paddingLeft: px(60) }}\r\n          >\r\n            <p>Owner: {(owner && `${owner}`.toLowerCase() !== 'unknown') ? `${owner}` : ''}</p>\r\n            <p>Breed: {(breedName && `${breedName}`.toLowerCase() !== 'unknown') ? `${breedName}  ${mix}` : ''}</p>\r\n            <p>Age: {((age && `${age}`.toLowerCase() !== 'unknown') || age === 0) ? `${age} yrs` : ''} </p>\r\n            <p>Weight: {wei}</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"deviceInfo\">\r\n          <div className=\"heard1\"\r\n            style={{ height: mTop(40), marginTop: mTop(10), paddingRight: px(10), paddingLeft: px(30) }}\r\n          >\r\n            <span>Device Info</span>\r\n          </div>\r\n          <div className=\"devicesBody\"\r\n            style={{ marginTop: mTop(23) }}\r\n          >\r\n            <div className=\"devices\"\r\n              style={{ paddingLeft: px(31) }}\r\n            >\r\n              <p>Device:</p>\r\n              <Select\r\n                value={this.state.devicesType}\r\n                style={{ width: 120 }}\r\n                size={'small'}\r\n                onChange={this._changeDeviceType}\r\n              >\r\n                <Option value=\"mella\">Mella</Option>\r\n                <Option value=\"biggie\">Biggie</Option>\r\n              </Select>\r\n            </div>\r\n            {this._mearsurePort()}\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n\r\n\r\n\r\n  }\r\n  handleChange = index => {\r\n    console.log('---------', index);\r\n    this.setState({\r\n      furLength: index\r\n    })\r\n  };\r\n  handleChange1 = index => {\r\n    console.log('---------', index);\r\n    this.setState({\r\n      bodyType: index\r\n    })\r\n  };\r\n\r\n  _foot = () => {\r\n\r\n    // console.log('所有的历史记录：', historyData);\r\n\r\n\r\n\r\n    let lbgc = '', rbgc = ''\r\n    if (this.state.isNotes) {\r\n      lbgc = 'rgba(25,173,228,0.5)'; rbgc = 'rgba(105,201,237,1)'\r\n    } else {\r\n      lbgc = 'rgba(105,201,237,1)'; rbgc = 'rgba(25,173,228,0.5)'\r\n    }\r\n\r\n    return (\r\n      <div className=\"clinical_foot\">\r\n        <div className=\"top\"\r\n          style={{ height: '10%', }}\r\n        >\r\n          <div className=\"foot_l\" style={{ backgroundColor: lbgc }} onClick={() => this.setState({ isNotes: true })}>\r\n            Notes\r\n          </div>\r\n          <div className=\"foot_l\" style={{ backgroundColor: rbgc }} onClick={() => this.setState({ isNotes: false })}>\r\n            History\r\n          </div>\r\n        </div>\r\n        {(this.state.isNotes) ? (\r\n          this._notes()\r\n        ) : (this._history())}\r\n\r\n      </div >\r\n    )\r\n  }\r\n  _notes = () => {\r\n    let { l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n      h2tLength, torsoLength, rulerUnit, updatePetAttributes } = this.state\r\n    function num (val) {\r\n      let weight = val.target.value\r\n      let newText = weight.replace(/[^\\d.]/g, \"\");\r\n      newText = newText.replace(/^\\./g, \"\");\r\n      newText = newText.replace(/\\.{2,}/g, \".\");\r\n      newText = newText.replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\");\r\n      newText = newText.replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3');//只能输入两个小数  \r\n      if (newText.indexOf(\".\") < 0 && newText != \"\") {//以上已经过滤，此处控制的是如果没有小数点，首位不能为类似于 01、02的金额  \r\n        newText = parseFloat(newText)\r\n      }\r\n      return `${newText}`\r\n\r\n    }\r\n    if (this.state.devicesType === 'mella') {\r\n      return (\r\n        <div className=\"note\" style={{ height: mTop(256), marginTop: mTop(10) }}>\r\n          <textarea\r\n            rows=\"10\"\r\n            cols=\"30\"\r\n            value={this.state.notes}\r\n            onChange={(val) => {\r\n              console.log(val);\r\n              this.setState({\r\n                notes: val.target.value\r\n              })\r\n            }}\r\n          >\r\n          </textarea>\r\n        </div>\r\n      )\r\n    } else {\r\n      let { speciesId } = this.state\r\n      let species = speciesId === 1 ? catcareacte : careacte\r\n      return (\r\n        <div className=\"characteristics flex\">\r\n          <div className=\"careacterL flex\">\r\n            <div className=\"item flex\">\r\n              <div className=\"textTitle\" style={{ fontSize: px(15) }}>Head Circumference:</div>\r\n              <div className=\"input flex\" style={{ height: px(30), borderRadius: px(40) }}>\r\n                <input type=\"text\"\r\n                  style={{\r\n                    borderRadius: px(40), fontSize: px(17),\r\n                    paddingRight: px(20)\r\n                  }}\r\n                  value={l2rarmDistance}\r\n                  ref={(input) => { this.input1 = input }}\r\n                  // autoFocus={true}\r\n                  onChange={(val) => {\r\n                    let data = num(val)\r\n                    console.log(data);\r\n                    this.setState({\r\n                      l2rarmDistance: data\r\n                    })\r\n\r\n\r\n                  }}\r\n                  onFocus={() => {\r\n                    this.setState({\r\n                      itemIndex: 1\r\n                    })\r\n                  }}\r\n                />\r\n                <div className=\"unit\" style={{ right: px(8), fontSize: px(15) }}>{rulerUnit}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"item flex\">\r\n              <div className=\"textTitle\" style={{ fontSize: px(15) }}>Heard to Tail Length:</div>\r\n              <div className=\"input flex\" style={{ height: px(30), borderRadius: px(40) }}>\r\n                <input type=\"text\"\r\n                  style={{ borderRadius: px(40), fontSize: px(17), paddingRight: px(20) }}\r\n                  ref={(input) => { this.input2 = input }}\r\n                  value={h2tLength}\r\n                  onChange={(val) => {\r\n                    let data = num(val)\r\n                    this.setState({\r\n                      h2tLength: data\r\n                    })\r\n                  }}\r\n                  onFocus={() => {\r\n                    this.setState({\r\n                      itemIndex: 2\r\n                    })\r\n                  }}\r\n                />\r\n                <div className=\"unit\" style={{ right: px(8), fontSize: px(17) }}>{rulerUnit}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"item flex\">\r\n              <div className=\"textTitle\" style={{ fontSize: px(15) }}>Neck to Tail Length:</div>\r\n              <div className=\"input flex\" style={{ height: px(30), borderRadius: px(40) }}>\r\n                <input type=\"text\"\r\n                  style={{ borderRadius: px(40), fontSize: px(17), paddingRight: px(20) }}\r\n                  ref={(input) => { this.input3 = input }}\r\n                  value={torsoLength}\r\n                  onChange={(val) => {\r\n                    let data = num(val)\r\n                    this.setState({\r\n                      torsoLength: data\r\n                    })\r\n\r\n\r\n                  }}\r\n                  onFocus={() => {\r\n                    this.setState({\r\n                      itemIndex: 3\r\n                    })\r\n                  }}\r\n                />\r\n                <div className=\"unit\" style={{ right: px(8), fontSize: px(17) }}>{rulerUnit}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"item flex\">\r\n              <div className=\"textTitle\" style={{ fontSize: px(15) }}>Neck:</div>\r\n              <div className=\"input flex\" style={{ height: px(30), borderRadius: px(40) }}>\r\n                <input type=\"text\"\r\n                  style={{ borderRadius: px(40), fontSize: px(17), paddingRight: px(20) }}\r\n                  ref={(input) => { this.input4 = input }}\r\n                  value={neckCircumference}\r\n                  onChange={(val) => {\r\n                    let data = num(val)\r\n                    this.setState({\r\n                      neckCircumference: data\r\n                    })\r\n\r\n\r\n                  }}\r\n                  onFocus={() => {\r\n                    this.setState({\r\n                      itemIndex: 4\r\n                    })\r\n                  }}\r\n                />\r\n                <div className=\"unit\" style={{ right: px(8), fontSize: px(17) }}>{rulerUnit}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"item flex\">\r\n              <div className=\"textTitle\" style={{ fontSize: px(15) }}>Upper Torso:</div>\r\n              <div className=\"input flex\" style={{ height: px(30), borderRadius: px(40) }}>\r\n                <input type=\"text\"\r\n                  style={{ borderRadius: px(40), fontSize: px(17), paddingRight: px(20) }}\r\n                  value={upperTorsoCircumference}\r\n                  ref={(input1) => { this.input5 = input1 }}\r\n                  onChange={(val) => {\r\n                    let data = num(val)\r\n                    this.setState({\r\n                      upperTorsoCircumference: data\r\n                    })\r\n\r\n\r\n                  }}\r\n                  onFocus={() => {\r\n                    this.setState({\r\n                      itemIndex: 5\r\n                    })\r\n                  }}\r\n                />\r\n                <div className=\"unit\" style={{ right: px(8), fontSize: px(17) }}>{rulerUnit}</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"item flex\">\r\n              <div className=\"textTitle\" style={{ fontSize: px(15) }}>Lower Torso:</div>\r\n              <div className=\"input flex\" style={{ height: px(30), borderRadius: px(40) }}>\r\n                <input type=\"text\"\r\n                  style={{ borderRadius: px(40), fontSize: px(17), paddingRight: px(20) }}\r\n                  value={`${lowerTorsoCircumference}`}\r\n                  ref={(input) => { this.input6 = input }}\r\n                  onChange={(val) => {\r\n                    let data = num(val)\r\n                    this.setState({\r\n                      lowerTorsoCircumference: data\r\n                    })\r\n                  }}\r\n                  onFocus={() => {\r\n                    this.setState({\r\n                      itemIndex: 6\r\n                    })\r\n                  }}\r\n                />\r\n                <div className=\"unit\" style={{ right: px(8), fontSize: px(17) }}>{rulerUnit}</div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n          <div className=\"careacterR flex\">\r\n            <div className=\"imgBox flex\" style={{ borderRadius: px(20) }}>\r\n              <img src={species} alt=\"\" style={{ width: '80%' }} />\r\n            </div>\r\n          </div>\r\n\r\n          <MyModal\r\n            visible={updatePetAttributes}\r\n            text={'Uploading pet information to database'}\r\n          />\r\n        </div >\r\n      )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n  //更新宠物的属性值，比如头尾、上躯干周长等\r\n  _updatePetAttributes = () => {\r\n    let { l2rarmDistance, lowerTorsoCircumference, upperTorsoCircumference, neckCircumference, rulerUnit, petId, h2tLength, torsoLength } = this.state\r\n\r\n\r\n    l2rarmDistance = newNum(l2rarmDistance)\r\n    lowerTorsoCircumference = newNum(lowerTorsoCircumference)\r\n    upperTorsoCircumference = newNum(upperTorsoCircumference)\r\n    neckCircumference = newNum(neckCircumference)\r\n    h2tLength = newNum(h2tLength)\r\n    torsoLength = newNum(torsoLength)\r\n\r\n    function newNum (val) {\r\n      if (val) {\r\n        if (rulerUnit === 'in') {\r\n          return parseFloat((parseFloat(val) * 2.54).toFixed(1))\r\n\r\n        } else {\r\n          return parseFloat(val)\r\n        }\r\n\r\n      } else {\r\n        return ''\r\n      }\r\n\r\n\r\n    }\r\n\r\n    let prams = {\r\n      l2rarmDistance: l2rarmDistance || null,\r\n      lowerTorsoCircumference: lowerTorsoCircumference || null,\r\n      upperTorsoCircumference: upperTorsoCircumference || null,\r\n      neckCircumference: neckCircumference || null,\r\n      h2tLength: h2tLength || null,\r\n      torsoLength: torsoLength || null,\r\n    }\r\n    this.setState({\r\n      updatePetAttributes: true\r\n    })\r\n    let url = `/pet/updatePetInfo/${storage.userId}/${this.state.petId}`\r\n    console.log('入参:', prams);\r\n    fetchRequest(url, 'POST', prams)\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          updatePetAttributes: false,\r\n          itemIndex: 1\r\n        })\r\n        this.input1.focus();\r\n\r\n        if (res.flag) {\r\n          message.success('Uploaded successfully')\r\n        } else {\r\n          message.error('upload failed')\r\n        }\r\n\r\n\r\n\r\n\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          updatePetAttributes: false\r\n        })\r\n        message.error('update failed')\r\n        console.log(err);\r\n\r\n\r\n      })\r\n  }\r\n  _history = () => {\r\n    const _del = (key, record) => {\r\n      console.log('删除', key, record);\r\n\r\n\r\n      /**------------这里还要删除后台的数据------------ */\r\n      fetchRequest(`/pet/deletePetExamByExamId/${key}`, 'DELETE')\r\n        .then(res => {\r\n          if (res.flag === true) {\r\n            console.log('删除成功');\r\n            const historyData = [...this.state.historyData];\r\n            console.log(historyData);\r\n            this.setState({\r\n              historyData: historyData.filter((item) => item.historyId !== key)\r\n            });\r\n          } else {\r\n            console.log('删除失败');\r\n          }\r\n        })\r\n    }\r\n    const _edit = (key, record) => {\r\n      console.log('编辑', key, record);\r\n      this.setState({\r\n        visible: true,\r\n        editId: key,\r\n        memo: record.note\r\n      })\r\n\r\n\r\n\r\n    }\r\n\r\n    let { historyData, devicesType } = this.state\r\n    let listData = [], columns = []\r\n    switch (devicesType) {\r\n      case 'biggie':\r\n        for (let i = 0; i < historyData.length; i++) {\r\n          const element = historyData[i];\r\n          if (element.weight) {\r\n            listData.push(element)\r\n          }\r\n\r\n        }\r\n\r\n        columns = [\r\n          {\r\n            title: '',\r\n            dataIndex: 'operation',\r\n            key: 'operation',\r\n            width: '15%',\r\n            render: (text, record, index) => {\r\n              // console.log('狩猎:', text, record, index);\r\n              //record:\r\n              return (\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', padding: `${px(18)}px 0` }}>\r\n                  <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\r\n                    <img src={del} alt=\"\" style={{ width: px(25) }} />\r\n                  </Popconfirm>\r\n                  <img src={edit} alt=\"\" style={{ width: px(25) }}\r\n                    onClick={() => _edit(record.historyId, record)}\r\n                  />\r\n                </div>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: '17%',\r\n            render: (text, record, index) => {\r\n\r\n              return (\r\n                <p style={{ textAlign: 'center' }}>{text}</p>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: 'Time',\r\n            dataIndex: 'time',\r\n            key: 'time',\r\n            width: '17%',\r\n            render: (text, record, index) => {\r\n\r\n              return (\r\n                <p style={{ textAlign: 'center' }}>{text}</p>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: `Weight`,\r\n            key: 'weight',\r\n            dataIndex: 'weight',\r\n            width: '13%',\r\n            render: (text, record, index) => {\r\n\r\n\r\n              let bag = '#58BDE6', tem = ''\r\n\r\n              if (this.state.units === '℃') {\r\n                if (text) {\r\n                  tem = `${text.toFixed(1)}kgs`\r\n                }\r\n              } else {\r\n\r\n                tem = `${(text * 2.2046).toFixed(1)}lbs`\r\n\r\n              }\r\n              return (\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n\r\n                  <p style={{ margin: 0, padding: 0, color: bag }}>{tem}</p>\r\n                </div>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: 'BF%',\r\n            dataIndex: 'fat',\r\n            key: 'fat',\r\n            align: 'center',\r\n            width: '11%',\r\n            render: (text, record, index) => {\r\n\r\n              return (\r\n                <p style={{ textAlign: 'center', color: '#58BDE6' }}>{text}</p>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: 'BCS',\r\n            dataIndex: 'bodyConditionScore',\r\n            key: 'bodyConditionScore',\r\n            align: 'center',\r\n            width: '18%',\r\n            render: (text, record, index) => {\r\n\r\n              return (\r\n                <p style={{ textAlign: 'center', color: '#58BDE6' }}>{text}</p>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: 'Note',\r\n            dataIndex: 'note',\r\n            key: 'note',\r\n            width: '11%',\r\n            render: (text, record, index) => {\r\n\r\n              return (\r\n                <p style={{ width: '70px' }}>{text}</p>\r\n              )\r\n\r\n            }\r\n          },\r\n        ];\r\n\r\n\r\n        break;\r\n      case 'mella':\r\n        for (let i = 0; i < historyData.length; i++) {\r\n          const element = historyData[i];\r\n          if (element.temp) {\r\n            listData.push(element)\r\n          }\r\n\r\n        }\r\n        columns = [\r\n          {\r\n            title: '',\r\n            dataIndex: 'operation',\r\n            key: 'operation',\r\n            width: '15%',\r\n            render: (text, record, index) => {\r\n              // console.log('狩猎:', text, record, index);\r\n              //record:\r\n              return (\r\n                <div style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-around', padding: `${px(18)}px 0` }}>\r\n                  <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\r\n                    <img src={del} alt=\"\" style={{ width: px(25) }} />\r\n                  </Popconfirm>\r\n                  <img src={edit} alt=\"\" style={{ width: px(25) }}\r\n                    onClick={() => _edit(record.historyId, record)}\r\n                  />\r\n                </div>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: 'Date',\r\n            dataIndex: 'date',\r\n            key: 'date',\r\n            width: '17%',\r\n            render: (text, record, index) => {\r\n\r\n              return (\r\n                <p style={{ textAlign: 'center' }}>{text}</p>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: 'Time',\r\n            dataIndex: 'time',\r\n            key: 'time',\r\n            width: '17%',\r\n            render: (text, record, index) => {\r\n\r\n              return (\r\n                <p style={{ textAlign: 'center' }}>{text}</p>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: `Temp(${this.state.units})`,\r\n            key: 'temp',\r\n            dataIndex: 'temp',\r\n            width: '17%',\r\n            render: (text, record, index) => {\r\n              // console.log(text, record);\r\n\r\n\r\n              /**\r\n              * bag：温度数值前的圆圈的背景颜色\r\n              * tem：展示的温度\r\n              * endvalue:将从后台得到的数据全部转化成华氏度\r\n              * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n              * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n              * \r\n              */\r\n\r\n              let bag = '', tem = ''\r\n\r\n              let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\r\n              let min = 99.5, max = 102.2\r\n              //99.5 = 37.5   102.2=39\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n              if (endValue > max) {\r\n                bag = '#E1206D'\r\n              } else if (endValue < min) {\r\n                bag = '#98DA86'\r\n              } else {\r\n                bag = '#58BDE6'\r\n              }\r\n\r\n\r\n\r\n              if (this.state.units === '℃') {\r\n                if (text) {\r\n                  tem = `${text.toFixed(1)}${this.state.units}`\r\n                }\r\n              } else {\r\n                if (text) {\r\n                  if (text > 55) {\r\n                    tem = `${text}${this.state.units}`\r\n                  } else {\r\n                    tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\r\n                  }\r\n\r\n                }\r\n              }\r\n              return (\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                  {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\r\n                  <p style={{ margin: 0, padding: 0 }}>{tem}</p>\r\n                </div>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: 'Placement',\r\n            dataIndex: 'placement',\r\n            key: 'placement',\r\n            align: 'center',\r\n            width: '18%',\r\n            render: (text, record, index) => {\r\n              // console.log(text, record, index);\r\n              /**\r\n               * old:   1:腋温  2：肛温 3：耳温\r\n               * new:   1.腋温  2：大腿温度 3.肛温  4：耳温\r\n               */\r\n              switch (record.placement) {\r\n                case 0: return (    //腋温\r\n                  <div>\r\n                    <img src={placement_er} alt=\"\" />\r\n                  </div>\r\n                )\r\n                case 1: return (    //腋温\r\n                  <div>\r\n                    <img src={palcement_ye} alt=\"\" />\r\n                  </div>\r\n                )\r\n                case 3: return (     //肛温\r\n                  <div>\r\n                    <img src={placement_gang} alt=\"\" />\r\n                  </div>\r\n                )\r\n                case 2: return (     //肛温\r\n                  <div>\r\n                    <img src={placement_gang} alt=\"\" />\r\n                  </div>\r\n                )\r\n                case 4: return (    //耳温\r\n                  <div>\r\n                    <img src={placement_er} alt=\"\" />\r\n                  </div>\r\n                )\r\n                default: break;\r\n              }\r\n              return (\r\n                <p style={{ textAlign: 'center' }}>{text}</p>\r\n              )\r\n\r\n            }\r\n          },\r\n          {\r\n            title: 'Note',\r\n            dataIndex: 'note',\r\n            key: 'note',\r\n            width: '16%',\r\n            render: (text, record, index) => {\r\n\r\n              return (\r\n                <p style={{ width: '100%', textAlign: 'left', }}>{text}</p>\r\n              )\r\n\r\n            }\r\n          },\r\n        ];\r\n\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const pas = window.screen.height < 1000 ? 2 : 3\r\n\r\n    let hisHe = mTop(200)\r\n    try {\r\n      let historyElement = document.querySelectorAll('#clinicalMeasure .historyTable')\r\n      hisHe = historyElement[0].clientHeight - mTop(100)\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='historyTable' style={{ height: '85%' }}>\r\n        <Table\r\n          loading={this.state.loading}\r\n          columns={columns}\r\n          dataSource={listData}\r\n          rowKey={columns => columns.historyId}\r\n          pagination={false}\r\n          scroll={{\r\n            y: hisHe\r\n          }}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  _ciral = () => {\r\n\r\n    let num = px(280)\r\n    let windowWidth = document.documentElement.clientHeight\r\n    if (windowWidth) {\r\n      num = windowWidth * 0.30\r\n    }\r\n    return (\r\n      <div className=\"crial\" style={{ marginTop: mTop(50), }}>\r\n        {!this.state.isconnected && <div className=\"bb1\"\r\n          style={{ top: mTop(-40) }}\r\n        >\r\n          <div className=\"btn5\"\r\n            style={{ width: px(230), height: mTop(30), fontSize: px(16), }}\r\n            onClick={() => {\r\n              console.log('点击了切换按钮');\r\n\r\n              if (isClick === true) {\r\n                isClick = false\r\n                console.log('发送给主进程切换按钮');\r\n                ipcRenderer.send('qiehuan')\r\n                // ipcRenderer.send('getSerialPort')\r\n                const time = setTimeout(() => {\r\n                  isClick = true\r\n                  clearTimeout(time)\r\n                }, 2500)\r\n              }\r\n            }}\r\n          >Re-sync Base</div>\r\n        </div>}\r\n        <div className='flex' >\r\n          <Progress\r\n\r\n            type=\"dashboard\"\r\n\r\n            strokeColor={{\r\n              \"100%\": \"#108ee9\",\r\n              \"30%\": \"#87d068\"\r\n            }}\r\n            format={() => ``}\r\n            percent={this.state.progress}\r\n            gapDegree={30}\r\n            width={num}\r\n            strokeWidth={10}\r\n            success={{ strokeColor: 'red' }}\r\n\r\n          />\r\n          <div className=\"crialtext\"\r\n          // style={{ height: mTop(50), top: mTop(135) }}\r\n          >\r\n            {this._crialText()}\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {this._btnEndTime()}\r\n      </div>\r\n    )\r\n  }\r\n  _save = () => {\r\n    if (this.state.isWalkIn) {\r\n      let { Temp, addpatient_description, addpatient_petName, addpatient_species } = this.state\r\n      let petVitalId = null\r\n      switch (this.state.petVitalTypeId) {\r\n        case '01': petVitalId = 1; break;\r\n        case '02': petVitalId = 3; break;\r\n        case '03': petVitalId = 4; break;\r\n        default: petVitalId = 1; break;\r\n      }\r\n      let datas = {\r\n\r\n        temperature: parseFloat(Temp),  //测量温度\r\n        doctorId: storage.userId,\r\n        memo: this.state.notes,\r\n        clinicalDataEntityList: [{\r\n          data0: parseFloat(Temp),\r\n          data1: parseFloat(Temp),\r\n          data2: parseFloat(Temp),\r\n        }],\r\n        petVitalTypeId: petVitalId,\r\n        petName: addpatient_petName,\r\n        description: addpatient_description,\r\n        speciesId: addpatient_species,\r\n\r\n      }\r\n      this.setState({\r\n        isWeightSave: true\r\n      })\r\n      console.log('入参', datas);\r\n\r\n      fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\r\n        .then(res => {\r\n          if (res.flag === true) {\r\n\r\n            let hardSet = electronStore.get('hardwareConfiguration')\r\n            let countdown = hardSet.is15 ? 15 : 30\r\n\r\n            this.setState({\r\n              initFlog: false,\r\n              endMeasure: false,\r\n              Temp: 0,\r\n              progress: 0,\r\n              countdown,\r\n              isWeightSave: false\r\n            })\r\n            temp15 = 0\r\n            message.success('Data successfully saved in Mella')\r\n\r\n          } else {\r\n            message.error('Save failed')\r\n            this.setState({\r\n              isWeightSave: false\r\n            })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          message.error('Save failed')\r\n          this.setState({\r\n            isWeightSave: false\r\n          })\r\n        })\r\n\r\n\r\n      return\r\n    }\r\n    console.log(storage.vetspireOrEzyvet);\r\n    if (storage.identity === '2') {\r\n      let parames = {\r\n        consult_id: this.state.consult_id,\r\n        temperature: this.state.Temp\r\n      }\r\n      if (this.state.macAddr) {\r\n        parames.macAddr = this.state.macAddr\r\n      }\r\n      console.log(parames, storage.ezyVetToken);\r\n      //petVitalId是宠物测量部位\r\n      let petVitalId = null\r\n      switch (this.state.petVitalTypeId) {\r\n        case '01': petVitalId = 1; break;\r\n        case '02': petVitalId = 3; break;\r\n        case '03': petVitalId = 4; break;\r\n        default: petVitalId = 1; break;\r\n      }\r\n      console.log('ezy请求地址：', `/EzyVet/healthstatus/${this.state.healthStatus}/${this.state.probeID}/${this.state.petVitalTypeId}/${petVitalId}`);\r\n      fetchToken(`/EzyVet/healthstatus/${this.state.healthStatus}/${petVitalId}`, 'PATCH', parames, `Bearer ${storage.ezyVetToken}`)\r\n        .then(res => {\r\n          console.log(res);\r\n          if (res.msg === 'success') {\r\n            console.log('成功');\r\n            message.success('Saved successfully')\r\n            let hardSet = electronStore.get('hardwareConfiguration')\r\n            let countdown = hardSet.is15 ? 15 : 30\r\n            this.setState({\r\n              initFlog: false,\r\n              endMeasure: false,\r\n              Temp: 0,\r\n              progress: 0,\r\n              countdown,\r\n            })\r\n            temp15 = 0\r\n            this._getHistory()\r\n\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n      return\r\n    } else if (storage.identity === '1') {\r\n      //这是vetspire的保存测量记录\r\n      let parames = {\r\n        APIkey: storage.API,\r\n        vitalId: storage.selectExamId,\r\n        temp: parseInt((this.state.Temp * 1.8 + 32) * 10) / 10\r\n\r\n\r\n      }\r\n\r\n      console.log('------------------', parames);\r\n\r\n      fetchRequest1('/VetSpire/updateVitalsTemperatureByVitalId', 'POST', parames)\r\n        .then(res => {\r\n          console.log(res);\r\n          if (res.flag === true) {\r\n            if (res.data.updateVitals !== null) {\r\n              message.success('Saved successfully')\r\n            } else {\r\n              message.error('Save failed')\r\n            }\r\n            let sendData = {\r\n              petId: this.state.petId,\r\n              temperature: this.state.Temp,\r\n              memo: this.state.notes,\r\n              petVitalTypeId: this.state.petVitalTypeId\r\n            }\r\n            console.log('send', sendData);\r\n            fetchRequest('/pet/savePetExam', 'POST', sendData)\r\n              .then(res => {\r\n                console.log(res);\r\n                if (res.flag === true) {\r\n                  let hardSet = electronStore.get('hardwareConfiguration')\r\n                  let countdown = hardSet.is15 ? 15 : 30\r\n                  this.setState({\r\n                    initFlog: false,\r\n                    endMeasure: false,\r\n                    Temp: 0,\r\n                    progress: 0,\r\n                    countdown,\r\n                  })\r\n                  temp15 = 0\r\n                  this._getHistory()\r\n                }\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n              })\r\n          } else {\r\n            message.error('Save failed')\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        })\r\n    } else {\r\n\r\n      //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\r\n      if (storage.lastOrganization === '34') {\r\n        console.log(this.state.patientId, this.state.petId);\r\n        let params = { query: `query { patient (id:\"${this.state.patientId}\") {  vitals { data{ id, weight{value}, temperature{value}, createdAt, updatedAt}}}}` }\r\n\r\n        this.setState({\r\n          isWeightSave: true\r\n        })\r\n        fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n          .then(res => {\r\n            console.log('---', res);\r\n\r\n\r\n            if (res.errors) {\r\n              message.error('Failed to obtain case list')\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n            } else {\r\n              let { vitals } = res.data.patient\r\n              let vitalArr = vitals.data\r\n              if (vitalArr.length > 0) {\r\n                vitalArr.sort((a, b) => {\r\n                  return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n                })\r\n                let temperature = parseInt((this.state.Temp * 1.8 + 32) * 10) / 10\r\n\r\n                let params = {}\r\n                if (vitalArr[0].weight && vitalArr[0].weight.value) {\r\n                  params = {\r\n                    query: `mutation {\r\n                      updateVital(      \r\n                          id:\"${vitalArr[0].id}\"\r\n                          input:{\r\n                            weight:{value:${vitalArr[0].weight.value}}\r\n                              temperature:{value:${temperature}}\r\n                              patientId:\"${this.state.patientId}\"\r\n                          }\r\n                      )\r\n                      {\r\n                          id,\r\n                          weight{value},\r\n                          temperature{value}\r\n                      }\r\n                  }`}\r\n                } else {\r\n                  params = {\r\n                    query: `mutation {\r\n                      updateVital(      \r\n                          id:\"${vitalArr[0].id}\"\r\n                          input:{\r\n                              temperature:{value:${temperature}}\r\n                              patientId:\"${this.state.patientId}\"\r\n                          }\r\n                      )\r\n                      {\r\n                          id,\r\n                          weight{value},\r\n                          temperature{value}\r\n                      }\r\n                  }`}\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n                console.log('---入参---', { patientID: this.state.patientId, vitalId: vitalArr[0].id, temperature });\r\n\r\n                fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n                  .then(res => {\r\n                    console.log(res);\r\n                    if (res.errors) {\r\n                      message.error('Data saving failed')\r\n                      this.setState({\r\n                        isWeightSave: false\r\n                      })\r\n                    } else {\r\n                      let hardSet = electronStore.get('hardwareConfiguration')\r\n                      let countdown = hardSet.is15 ? 15 : 30\r\n                      this.setState({\r\n                        initFlog: false,\r\n                        endMeasure: false,\r\n                        Temp: 0,\r\n                        progress: 0,\r\n                        countdown,\r\n                        isWeightSave: false\r\n                      })\r\n                      message.success('Data saved successfully')\r\n                    }\r\n\r\n\r\n                  })\r\n                  .catch(err => {\r\n                    message.error('Data saving failed')\r\n                    this.setState({\r\n                      isWeightSave: false\r\n                    })\r\n                    console.log(err);\r\n                  })\r\n\r\n              } else {\r\n                this.setState({\r\n                  isWeightSave: false\r\n                })\r\n                message.error('There is no case sheet for this pet')\r\n              }\r\n            }\r\n          })\r\n          .catch(err => {\r\n            this.setState({\r\n              isWeightSave: false\r\n            })\r\n            message.error('Failed to obtain case list')\r\n            console.log(err);\r\n          })\r\n        return\r\n      }\r\n\r\n\r\n\r\n\r\n      console.log('我是普通医生，不带集成的');\r\n      let petVitalId = null\r\n      switch (this.state.petVitalTypeId) {\r\n        case '01': petVitalId = 1; break;\r\n        case '02': petVitalId = 3; break;\r\n        case '03': petVitalId = 4; break;\r\n        default: petVitalId = 1; break;\r\n      }\r\n      let params = {\r\n        petId: this.state.petId,\r\n        doctorId: storage.userId,\r\n        temperature: this.state.Temp,\r\n        petVitalTypeId: petVitalId,\r\n        memo: this.state.notes\r\n      }\r\n      this.setState({\r\n        isWeightSave: true\r\n      })\r\n\r\n\r\n\r\n\r\n\r\n\r\n      fetchRequest('/exam/addClamantPetExam', 'POST', params)\r\n        .then(res => {\r\n          console.log('res', res);\r\n          if (res.flag === true) {\r\n\r\n            let hardSet = electronStore.get('hardwareConfiguration')\r\n            let countdown = hardSet.is15 ? 15 : 30\r\n\r\n            let copyTemp = this.state.Temp\r\n            this.setState({\r\n              initFlog: false,\r\n              endMeasure: false,\r\n              Temp: 0,\r\n              progress: 0,\r\n              countdown,\r\n            })\r\n            temp15 = 0\r\n            switch (storage.lastOrganization) {\r\n              case '3'://vetspire\r\n                this.updataVetspire(copyTemp)\r\n\r\n                break;\r\n\r\n              case '4'://ezyVet\r\n                this.updataEzyvet(copyTemp)\r\n                break;\r\n\r\n              default: message.success('Data successfully saved in Mella')\r\n                this.setState({\r\n                  isWeightSave: false\r\n                })\r\n                break;\r\n            }\r\n            this._getHistory()\r\n          } else {\r\n            message.error('Save failed')\r\n            this.setState({\r\n              isWeightSave: false\r\n            })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          message.error('Save failed')\r\n          this.setState({\r\n            isWeightSave: false\r\n          })\r\n        })\r\n    }\r\n  }\r\n\r\n  updataEzyvet = (Temp) => {\r\n    let { patientId } = this.state\r\n\r\n    let params = {\r\n      id: patientId\r\n    }\r\n    // this.setState({\r\n    //   isWeightSave: false\r\n    // })\r\n    console.log('入参:', params, storage.connectionKey);\r\n\r\n    fetchRequest4('/EzyVet/ezyvetGetPetLatestExam', \"GET\", params, `Bearer ${storage.connectionKey}`)\r\n      .then(res => {\r\n        console.log('宠物最新病历单获取:', res);\r\n        if (res.flag && res.data && res.data.items.length > 0) {\r\n          let data = res.data.items[0]\r\n          let { consult_id } = data\r\n          if (!consult_id) {\r\n            console.log('最新病历单获取失败');\r\n            this.setState({\r\n              isWeightSave: false\r\n            })\r\n            message.error('Failed to obtain the latest medical record, the data is saved in Mella')\r\n            return\r\n          }\r\n          let paramId = data.id\r\n          let temperature = Temp\r\n          // if (this.state.units === '℉') {\r\n          //   temperature = ((Temp - 32) / 1.8).toFixed(1)\r\n          // } else {\r\n          //   temperature = Temp\r\n          // }\r\n          let parames1 = {\r\n            consult_id,\r\n            temperature\r\n          }\r\n          let petVitalId = null\r\n          switch (this.state.petVitalTypeId) {\r\n            case '01': petVitalId = 1; break;\r\n            case '02': petVitalId = 3; break;\r\n            case '03': petVitalId = 4; break;\r\n            default: petVitalId = 1; break;\r\n          }\r\n          console.log('入参', parames1, storage.connectionKey);\r\n          fetchRequest2(`/EzyVet/healthstatus/${paramId}/${petVitalId}`, \"PATCH\", parames1, `Bearer ${storage.connectionKey}`)\r\n            .then(res => {\r\n              console.log('更新ezyvet的体重', res);\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n              if (res.flag) {\r\n                console.log('更新ezyvet的体重成功');\r\n                message.success('Data successfully saved in EzyVet')\r\n\r\n                //Toast.success('Temperature update successful')\r\n              } else {\r\n                //Toast.fail('Temperature update failed')\r\n                console.log('更新ezyvet的体重失败');\r\n                message.error('Data failed saved in EzyVet')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n              //Toast.fail('Temperature update failed')\r\n              console.log('更新ezyvet的体重', err);\r\n              message.error('Data failed saved in EzyVet')\r\n            })\r\n        } else {\r\n          this.setState({\r\n            isWeightSave: false\r\n          })\r\n          //Toast.fail('Temperature update failed')\r\n          message.error('Failed to obtain the latest medical record, the data is saved in Mella')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          isWeightSave: false\r\n        })\r\n        console.log('宠物最新病历单获取', err);\r\n        message.error('Failed to obtain the latest medical record, the data is saved in Mella')\r\n\r\n        //Toast.fail('Temperature update failed')\r\n      })\r\n\r\n\r\n  }\r\n  updataVetspire = (Temp) => {\r\n    let datas = {\r\n      APIkey: storage.connectionKey,\r\n      patientId: this.state.patientId\r\n    }\r\n    console.log('更新vetspire的数值', datas);\r\n    fetchRequest4('/VetSpire/vetspireGetPetLatestExam', \"POST\", datas)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.flag) {\r\n          let data = res.data.encounters[0].vitals\r\n          let encountersId = data.id\r\n\r\n          let temperature = parseInt((Temp * 1.8 + 32) * 10) / 10\r\n          // if (this.state.units === '℉') {\r\n          //   temperature = Temp\r\n          // } else {\r\n          //   temperature = (Temp * 1.8 + 32).toFixed(1)\r\n          // }\r\n          let params = {\r\n            vitalId: encountersId,\r\n            APIkey: storage.connectionKey,\r\n            temp: temperature\r\n          }\r\n          console.log('写数据到vetspire', params);\r\n          fetchRequest2(`/VetSpire/updateVitalsTemperatureByVitalId`, \"POST\", params)\r\n            .then(res => {\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n\r\n              console.log('写数据到vetspire', res);\r\n              if (res.flag) {\r\n                console.log('vetspire写成功');\r\n                message.success('Data successfully saved in Vetspire')\r\n              } else {\r\n                message.error('Data failed saved in Vetspire')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n\r\n              console.log('vetspire写失败', err);\r\n              message.error('Data failed saved in Vetspire')\r\n              //Toast.fail('Temperature update failed')\r\n            })\r\n        } else {\r\n          console.log('最新病历单获取失败');\r\n          this.setState({\r\n            isWeightSave: false\r\n          })\r\n          message.error('Failed to obtain the latest medical record, the data is saved in Mella')\r\n\r\n          //Toast.fail('Temperature update failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          isWeightSave: false\r\n        })\r\n\r\n\r\n        console.log('最新病历单获取失败', err);\r\n        message.error('Failed to obtain the latest medical record, the data is saved in Mella')\r\n      })\r\n\r\n  }\r\n\r\n\r\n  _btnEndTime = () => {\r\n    let { endMeasure, isconnected, initFlog } = this.state\r\n    if (initFlog === false) {\r\n      return\r\n    }\r\n\r\n    if (endMeasure === true) {\r\n      // if (isconnected === true) {\r\n      return (\r\n        <>\r\n          <div className=\"btn\"\r\n            style={{ marginTop: mTop(30) }}\r\n          >\r\n            <div className=\"btn1\"\r\n              style={{ width: px(120), height: mTop(35) }}\r\n              onClick={() => {\r\n                console.log('点击了Discard');\r\n                let hardSet = electronStore.get('hardwareConfiguration')\r\n                let countdown = hardSet.is15 ? 15 : 30\r\n                this.setState({\r\n                  endMeasure: false,\r\n                  Temp: 0,\r\n                  progress: 0,\r\n                  countdown,\r\n                  initFlog: false\r\n                })\r\n                temp15 = 0\r\n              }}\r\n            >\r\n              Discard\r\n            </div>\r\n\r\n            <div className=\"btn1\"\r\n              style={{ width: px(120), height: mTop(35) }}\r\n              onClick={() => {\r\n                this.timer && clearTimeout(this.timer)\r\n                this.timer = setTimeout(() => {\r\n                  this._save()\r\n                  clearTimeout(this.timer)\r\n                }, 500);\r\n              }}>\r\n              Save\r\n            </div>\r\n          </div>\r\n          {isconnected === true ? null : <p style={{ fontSize: px(30), color: '#3B3A3A', marginTop: mTop(10) }}> disconnected</p>}\r\n        </>\r\n      )\r\n    } else {\r\n      if (isconnected === true) {\r\n        if (this.state.isEarMeasure) {\r\n          return\r\n        }\r\n        return (\r\n          <div className=\"time\"\r\n            style={{ fontSize: px(32), marginTop: mTop(35) }}\r\n          >\r\n            <p>{`Measuring time  ${this.state.countdown}  s`}</p>\r\n          </div>\r\n        )\r\n      } else {\r\n        return (\r\n          null\r\n        )\r\n      }\r\n    }\r\n  }\r\n  _crialText = () => {\r\n    let { endMeasure, isMeasure, isconnected, Temp } = this.state\r\n    Temp = parseFloat(Temp)\r\n\r\n    let temp = this.state.units === '℉' ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1)\r\n    let text = '', temColor = ''\r\n    if (Temp > 15) {\r\n      if (Temp > 39) {\r\n        text = 'High'\r\n        temColor = '#E1206D'\r\n      } else if (Temp < 31) {\r\n        text = 'Low'\r\n        temColor = '#47C2ED'\r\n\r\n      } else {\r\n        text = 'Normal'\r\n        temColor = '#78D35D'\r\n      }\r\n    }\r\n    if (endMeasure === true) {\r\n      if (`${Temp}` === 'NaN' || `${Temp}` === '0') {\r\n        if (isconnected === true) {\r\n\r\n          return (\r\n            <p style={{ fontSize: px(30), color: '#3B3A3A' }}>connected</p>\r\n          )\r\n        }\r\n        else {\r\n          return (\r\n            <p style={{ fontSize: px(30), color: '#3B3A3A' }}>disconnected</p>\r\n          )\r\n        }\r\n      } else {\r\n\r\n\r\n        return (\r\n          <div style={{ color: temColor }}>\r\n            <span >{temp} <sup style={{ fontSize: px(18) }}>{this.state.units}</sup></span>\r\n            <span style={{ fontSize: px(22) }}>{text}</span>\r\n          </div>\r\n        )\r\n      }\r\n    } else {\r\n      if (isMeasure === true) {\r\n        return (\r\n          <>\r\n            <span style={{ fontSize: px(36), color: temColor, display: 'flex', alignItems: 'center' }}>\r\n              {temp} <sup style={{ fontSize: px(18) }}>{this.state.units}</sup></span>\r\n          </>\r\n        )\r\n      } else {\r\n        if (this.state.isEarMeasure) {\r\n          return (\r\n            <p style={{ fontSize: px(30), color: '#3B3A3A' }}>measuring</p>\r\n          )\r\n        } else {\r\n          if (isconnected === true) {\r\n\r\n            return (\r\n              <p style={{ fontSize: px(30), color: '#3B3A3A' }}>connected</p>\r\n            )\r\n          }\r\n          else {\r\n            return (\r\n              <p style={{ fontSize: px(30), color: '#3B3A3A' }}>disconnected</p>\r\n            )\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n      emerPatientID: ''\r\n    });\r\n  };\r\n  _modal = () => {\r\n    let that = this\r\n\r\n    function save () {\r\n      let datas = {\r\n        memo: that.state.memo\r\n      }\r\n\r\n      console.log('入参：', datas, that.state.editId);\r\n      fetchRequest(`/pet/updatePetExam/${that.state.editId}`, 'POST', datas)\r\n        .then(res => {\r\n          console.log(res);\r\n          that.setState({\r\n            visible: false,\r\n          })\r\n          that._getHistory()\r\n\r\n        })\r\n        .catch(err => {\r\n          that.setState({\r\n            spin: false\r\n          })\r\n          console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    let { disabled, bounds, visible } = this.state\r\n    return (\r\n      <Modal\r\n        title={\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              cursor: 'move',\r\n              height: '20px',\r\n              textAlign: 'center'\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          >\r\n            Edit Note\r\n          </div>\r\n        }\r\n        visible={visible}\r\n        // visible={true}\r\n        onCancel={this.handleCancel}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={\r\n          [] // 设置footer为空，去掉 取消 确定默认按钮\r\n        }\r\n        destroyOnClose={true}\r\n      >\r\n        <div id=\"selectEmergenciesModal\">\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '80px' }}>Notes</p>\r\n            {/* <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n              }}\r\n             \r\n            /> */}\r\n            <textarea\r\n              rows=\"5\"\r\n              cols=\"40\"\r\n              style={{ textIndent: '10px' }}\r\n              value={that.state.memo}\r\n              onChange={(val) => {\r\n                that.setState({\r\n                  memo: val.target.value\r\n                })\r\n              }}\r\n\r\n            >\r\n            </textarea>\r\n          </div>\r\n          <div className=\"btn\" style={{ width: '60%' }} onClick={save}>Save Changes</div>\r\n        </div>\r\n\r\n      </Modal>\r\n\r\n    )\r\n\r\n  }\r\n\r\n  biggie = () => {\r\n    let { isHaveBigieDate, biggieDate, sendWeight, impedance, units } = this.state\r\n    if (isHaveBigieDate) {\r\n      let bodyFat = impedance ? 20 : null\r\n      let score = impedance ? 5 : null\r\n\r\n      let isIbs = units === '℃' ? false : true\r\n      let weight = units === '℃' ? sendWeight : biggieDate\r\n\r\n      let issave = storage.connectionKey ? false : true\r\n      return (\r\n        <Biggie\r\n          issave={issave}\r\n          weight={`${weight}`}\r\n          onPress={this._saveWeight}\r\n          bodyFat={bodyFat}\r\n          score={score}\r\n          impedance={impedance}\r\n          isIbs={isIbs}\r\n          discardOnPress={() => {\r\n            this.setState({\r\n              isHaveBigieDate: false\r\n            })\r\n            keyboardBiggieFlog = false\r\n            sameBiggieNum = 0\r\n          }}\r\n        />\r\n      )\r\n    } else {\r\n      return (\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: '100%', height: '100%' }}>\r\n          <h1 style={{ fontWeight: 'bold', width: '80%', textAlign: 'center', }}>Ready, place pet onto scale</h1>\r\n        </div>\r\n\r\n      )\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  _saveWeight = () => {\r\n    console.log('开始去保存了', storage.lastOrganization, storage.connectionKey);\r\n\r\n\r\n    //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\r\n    if (storage.lastOrganization === '34') {\r\n      let params = { query: `query { patient (id:\"${this.state.patientId}\") {  vitals { data{ id, weight{value}, temperature{value}, createdAt, updatedAt}}}}` }\r\n\r\n      this.setState({\r\n        isWeightSave: true\r\n      })\r\n\r\n      fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n        .then(res => {\r\n          console.log('---', res);\r\n          if (res.errors) {\r\n            message.error('Failed to obtain case list')\r\n            this.setState({\r\n              isWeightSave: false\r\n            })\r\n          } else {\r\n            let { vitals } = res.data.patient\r\n            let vitalArr = vitals.data\r\n            if (vitalArr.length > 0) {\r\n              vitalArr.sort((a, b) => {\r\n                return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n              })\r\n\r\n              console.log('-----', vitalArr);\r\n\r\n\r\n              let params = {}\r\n              if (vitalArr[0].temperature && vitalArr[0].temperature.value) {\r\n                params = {\r\n                  query: `mutation {\r\n                      updateVital(\r\n                          id:\"${vitalArr[0].id}\"\r\n                          input:{\r\n                            weight:{value:${this.state.biggieDate}}\r\n                            temperature:{value:${vitalArr[0].temperature.value}}\r\n                              patientId:\"${this.state.patientId}\"\r\n                          }\r\n                      )\r\n                      {\r\n                          id,\r\n                          weight{value},\r\n                          temperature{value}\r\n                      }\r\n                  }`}\r\n              } else {\r\n                params = {\r\n                  query: `mutation {\r\n                      updateVital(\r\n                          id:\"${vitalArr[0].id}\"\r\n                          input:{\r\n                            weight:{value:${this.state.biggieDate}}\r\n                            \r\n                              patientId:\"${this.state.patientId}\"\r\n                          }\r\n                      )\r\n                      {\r\n                          id,\r\n                          weight{value},\r\n                          temperature{value}\r\n                      }\r\n                  }`}\r\n              }\r\n\r\n              console.log('---入参---', params);\r\n\r\n\r\n\r\n              fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n                .then(res => {\r\n                  console.log(res);\r\n                  if (res.errors) {\r\n                    this.setState({\r\n                      isWeightSave: false\r\n                    })\r\n                    message.error('Data saving failed')\r\n                  } else {\r\n                    this.setState({\r\n                      isHaveBigieDate: false,\r\n                      isWeightSave: false\r\n                    })\r\n                    keyboardBiggieFlog = false\r\n                    sameBiggieNum = 0\r\n                    message.success('Data saved successfully')\r\n                  }\r\n\r\n\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    isWeightSave: false\r\n                  })\r\n                  message.error('Data saving failed')\r\n                  console.log(err);\r\n                })\r\n\r\n\r\n            } else {\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n              message.error('There is no case sheet for this pet')\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          }\r\n        })\r\n        .catch(err => {\r\n          message.error('Failed to obtain case list')\r\n          this.setState({\r\n            isWeightSave: false\r\n          })\r\n          console.log(err);\r\n        })\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      return\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    this.setState({\r\n      isWeightSave: true\r\n    })\r\n    let fat = this.state.impedance ? 20 : null\r\n    let bodyConditionScore = this.state.impedance ? 5 : null\r\n\r\n    let params = {\r\n      petId: this.state.petId,\r\n      doctorId: storage.userId,\r\n      weight: this.state.sendWeight,\r\n      memo: this.state.notes,\r\n      fat,\r\n      bodyConditionScore\r\n    }\r\n    console.log('---体重保存入参--：', params);\r\n    fetchRequest('/exam/addClamantPetExam', 'POST', params)\r\n      .then(res => {\r\n        console.log('res', res);\r\n        if (res.flag === true) {\r\n          switch (storage.lastOrganization) {\r\n            case '3'://vetspire\r\n              this.updataWeightVetspire()\r\n\r\n              break;\r\n\r\n            case '4'://ezyVet\r\n              this.updataWeightEzyvet()\r\n              break;\r\n\r\n            default:\r\n              this.setState({\r\n                isHaveBigieDate: false,\r\n                isWeightSave: false\r\n              })\r\n              keyboardBiggieFlog = false\r\n              sameBiggieNum = 0\r\n              message.success('Data successfully saved in Mella')\r\n              break;\r\n          }\r\n\r\n          this._getHistory()\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  updataWeightVetspire = () => {\r\n    console.log('保存到vetspire');\r\n    this.setState({\r\n      isWeightSave: true\r\n    })\r\n\r\n    let datas = {\r\n      APIkey: storage.connectionKey,\r\n      patientId: this.state.patientId\r\n    }\r\n    console.log('更新vetspire的数值', datas);\r\n    fetchRequest4('/VetSpire/vetspireGetPetLatestExam', \"POST\", datas)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.flag) {\r\n\r\n          let data = res.data.encounters[0].vitals\r\n          let encountersId = data.id\r\n\r\n          let params = {\r\n            vitalId: encountersId,\r\n            APIkey: storage.connectionKey,\r\n            weight: this.state.biggieDate\r\n          }\r\n          console.log('写数据到vetspire', params);\r\n          fetchRequest4(`/VetSpire/vetspireUpdateWeight`, \"POST\", params)\r\n            .then(res => {\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n\r\n\r\n              console.log('写数据到vetspire', res);\r\n              if (res.flag) {\r\n                console.log('vetspire写成功');\r\n                this.setState({\r\n                  isHaveBigieDate: false\r\n                })\r\n                keyboardBiggieFlog = false\r\n                sameBiggieNum = 0\r\n                message.success('Data successfully saved in Vetspire')\r\n              } else {\r\n                message.error('Data failed saved in Vetspire')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n\r\n              console.log('vetspire写失败', err);\r\n              message.error('Data failed saved in Vetspire')\r\n              //Toast.fail('Temperature update failed')\r\n            })\r\n        } else {\r\n          console.log('最新病历单获取失败');\r\n          message.error('Failed to obtain the latest medical record')\r\n\r\n          // Toast.fail('Update failed')\r\n          this.setState({\r\n            isWeightSave: false\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n\r\n        console.log('最新病历单获取失败', err);\r\n        message.error('Failed to obtain the latest medical record')\r\n        this.setState({\r\n          isWeightSave: false\r\n        })\r\n      })\r\n\r\n  }\r\n  updataWeightEzyvet = () => {\r\n    console.log('保存到ezyVet');\r\n    this.setState({\r\n      isWeightSave: true\r\n    })\r\n\r\n    let { patientId } = this.state\r\n\r\n    let params = {\r\n      id: patientId\r\n    }\r\n    console.log('入参:', params, storage.connectionKey);\r\n\r\n    fetchRequest4('/EzyVet/ezyvetGetPetLatestExam', \"GET\", params, `Bearer ${storage.connectionKey}`)\r\n      .then(res => {\r\n        console.log('宠物最新病历单获取:', res);\r\n        if (res.flag && res.data && res.data.items.length > 0) {\r\n          let data = res.data.items[0]\r\n          let { consult_id } = data\r\n          if (!consult_id) {\r\n            console.log('最新病历单获取失败');\r\n            message.error('Failed to obtain the latest medical record, the data is saved in Mella')\r\n            return\r\n          }\r\n          let paramId = data.id\r\n          let parames1 = {\r\n            consult_id,\r\n            weight: this.state.sendWeight\r\n          }\r\n\r\n          console.log('入参', parames1, storage.connectionKey);\r\n          fetchRequest4(`/EzyVet/ezyvetUpdateWeight/${paramId}`, \"PATCH\", parames1, `Bearer ${storage.connectionKey}`)\r\n            .then(res => {\r\n              console.log('更新ezyvet的体重', res);\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n\r\n              if (res.flag) {\r\n                console.log('更新ezyvet的体重成功');\r\n                message.success('Data successfully saved in EzyVet')\r\n                this.setState({\r\n                  isHaveBigieDate: false\r\n                })\r\n                keyboardBiggieFlog = false\r\n                sameBiggieNum = 0\r\n                //Toast.success('Temperature update successful')\r\n              } else {\r\n                //Toast.fail('Temperature update failed')\r\n                console.log('更新ezyvet的体重失败');\r\n                message.error('Data failed saved in EzyVet')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.setState({\r\n                isWeightSave: false\r\n              })\r\n\r\n              //Toast.fail('Temperature update failed')\r\n              console.log('更新ezyvet的体重', err);\r\n              message.error('Data failed saved in EzyVet')\r\n            })\r\n        } else {\r\n          this.setState({\r\n            isWeightSave: false\r\n          })\r\n\r\n          //Toast.fail('Temperature update failed')\r\n          message.error('Failed to obtain the latest medical record')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('宠物最新病历单获取', err);\r\n        message.error('Failed to obtain the latest medical record')\r\n        this.setState({\r\n          isWeightSave: false\r\n        })\r\n        //Toast.fail('Temperature update failed')\r\n      })\r\n\r\n\r\n  }\r\n\r\n\r\n  render () {\r\n    const { closeColor, closebgc, minbgc, isWeightSave } = this.state\r\n    // console.dir(this.input1)\r\n    // try {\r\n    //   console.log(this.input1.checked)\r\n    // } catch (error) {\r\n\r\n    // }\r\n\r\n    return (\r\n      <div id=\"clinicalMeasure\">\r\n\r\n        <div style={{ height: '60%', }}>\r\n          <div className=\"heard\">\r\n            <Heard\r\n              onSearch={(data) => {\r\n                console.log('搜索到的宠物', data);\r\n                let { l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n                  h2tLength, torsoLength } = data\r\n\r\n                l2rarmDistance = l2rarmDistance ? `${l2rarmDistance}` : ''\r\n                neckCircumference = neckCircumference ? `${neckCircumference}` : ''\r\n                upperTorsoCircumference = upperTorsoCircumference ? `${upperTorsoCircumference}` : ''\r\n                lowerTorsoCircumference = lowerTorsoCircumference ? `${lowerTorsoCircumference}` : ''\r\n                h2tLength = h2tLength ? `${h2tLength}` : ''\r\n                torsoLength = torsoLength ? `${torsoLength}` : ''\r\n                let weight = data.weight\r\n                if (weight && weight !== 'unknown') {\r\n                  weight = parseFloat(weight).toFixed(1)\r\n                }\r\n                let breedName = data.breed\r\n                if (!breedName) {\r\n                  breedName = 'unknown'\r\n                }\r\n                switch (breedName) {\r\n                  case 'defaultdog':\r\n                    breedName = 'Dog'\r\n\r\n                    break;\r\n                  case 'defaultother':\r\n                    breedName = 'Other'\r\n\r\n                    break;\r\n                  case 'defaultcat':\r\n                    breedName = 'Cat'\r\n                    break;\r\n\r\n                }\r\n                console.log('-----------', weight);\r\n                this.setState({\r\n                  petName: data.petName,\r\n                  owner: data.owner,\r\n                  breedName,\r\n                  weight,\r\n                  age: data.age,\r\n                  patientId: data.patientId,\r\n                  petId: data.petId,\r\n                  itemIndex: 1,\r\n                  l2rarmDistance,\r\n                  neckCircumference,\r\n                  upperTorsoCircumference,\r\n                  lowerTorsoCircumference,\r\n                  h2tLength,\r\n                  torsoLength,\r\n                  isWalkIn: false\r\n                }, () => {\r\n                  this._getHistory()\r\n                })\r\n\r\n              }}\r\n              menu8Click={() => {\r\n                switch (storage.identity) {\r\n                  case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                    break;\r\n                  case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n                    break;\r\n                  case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                    break;\r\n\r\n                  default:\r\n                    break;\r\n                }\r\n              }}\r\n              onReturn={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n\r\n\r\n          {/* 宠物信息与圆环部分部分 */}\r\n          <div className='clinical_top'\r\n          // style={{ height: mTop(480) }}\r\n          >\r\n            {this._topLeft()}\r\n            <div className=\"r\"\r\n\r\n            >\r\n              {\r\n                this.state.devicesType === 'mella' ?\r\n                  this._ciral() :\r\n                  this.biggie()\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        {/* 底部宠物信息 */}\r\n        {this._foot()}\r\n        {this._modal()}\r\n        {/* {this._table()} */}\r\n\r\n        <Modal\r\n\r\n          visible={this.state.err07Visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          closable={false}\r\n          footer={[\r\n\r\n          ]}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"vetPrifileModal\"\r\n        >\r\n          <div id='vetPrifileModal'>\r\n            <div className=\"title\">prompt\r\n            </div>\r\n\r\n            <div className='text'>Please re-plug the base device</div>\r\n\r\n\r\n            <div className=\"btn\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '5px' }}>\r\n\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    err07Visible: false,\r\n\r\n                  })\r\n                  num07 = 0\r\n                }}\r\n              >OK</button>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n\r\n        <Modal\r\n\r\n          visible={this.state.err07Visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          closable={false}\r\n          footer={[\r\n\r\n          ]}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"vetPrifileModal\"\r\n        >\r\n          <div id='vetPrifileModal'>\r\n            <div className=\"title\">prompt\r\n            </div>\r\n\r\n            <div className='text'>Please re-plug the base device</div>\r\n\r\n\r\n            <div className=\"btn\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '5px' }}>\r\n\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    err07Visible: false,\r\n\r\n                  })\r\n                  num07 = 0\r\n                }}\r\n              >OK</button>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </Modal>\r\n\r\n\r\n        <MyModal\r\n          visible={isWeightSave}\r\n          element={\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n              <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\r\n                <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n              </div>\r\n              <p>\r\n                Data is being saved\r\n              </p>\r\n            </div>\r\n          }\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx",["400","401","402","403","404","405","406","407","408","409","410","411"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\FetchUtil.js",["412","413","414","415"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\help\\Help.jsx",["416"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\button\\Button.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx",["417","418","419","420","421","422","423","424","425"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\editPetInfo\\EditPetInfo.jsx",["426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447"],"import React, { Component } from 'react'\r\nimport { Input, Menu, message, Select, Calendar, Col, Row, Spin } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport dog from './../../assets/images/pinkdog.png'\r\nimport cat from './../../assets/images/pinkcat.png'\r\nimport redDog from './../../assets/images/reddog.png'\r\nimport redCat from './../../assets/images/redcat.png'\r\nimport redother from './../../assets/images/redother.png'\r\nimport other from './../../assets/images/other.png'\r\nimport selectphoto from './../../assets/images/sel.png'\r\n\r\nimport Close from './../../assets/img/close.png'\r\nimport nextImg from './../../assets/img/nextImg.png'\r\n\r\nimport dui from './../../assets/images/dui.png'\r\nimport female from './../../assets/images/female.png'\r\nimport male from './../../assets/images/male.png'\r\nimport { mTop, px, win } from '../../utils/px';\r\nimport Avatar from './../avatar/Avatar'\r\nimport './editPetInfo.less'\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport electronStore from '../../utils/electronStore';\r\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\r\nimport Button from './../../utils/button/Button'\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class EditPetInfo extends Component {\r\n  state = {\r\n    dogImg: dog,\r\n    catImg: cat,\r\n    otherImg: other,\r\n    selectWZ: '',\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    api: '',\r\n    id: '',\r\n    seleceID: '',//医生id\r\n    petSpecies: 0,\r\n    unit: 1,\r\n    gender: 0,\r\n    isMix: false,\r\n    imageId: -1,\r\n    imgurl: '',\r\n    breedArr: [],\r\n    petSpeciesBreedId: '',\r\n    dogData: [],\r\n    birthday: moment(new Date()).format('MMMM D, YYYY'),\r\n    patientId: '',\r\n    petName: '',\r\n\r\n    petId: '',\r\n    lastName: '',\r\n    firstName: '',\r\n    breedName: '',\r\n\r\n    initpetName: '',\r\n    initpetId: '',\r\n    initlastName: '',\r\n    initfirstName: '',\r\n    initbreedName: '',\r\n    spin: false,\r\n    dogBreed: [],\r\n    catBreed: [],\r\n\r\n    oldPatientId: '',\r\n    searchBreed: '',\r\n    selectBreedJson: {},\r\n    confirmSelectBreedJson: {},\r\n    selectBreed: false,\r\n\r\n    doctorArr: [],\r\n    selectUser: false,\r\n    selectUserJson: {},\r\n    selectUserId: '',\r\n    confirmSelectUserJson: {},\r\n    petUrl: ''\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big', win())\r\n\r\n    let path = this.props.history.location.pathname\r\n\r\n    console.log('444444444', path);\r\n\r\n\r\n    if (this.props.location.participate) {\r\n      let props = this.props.location.participate\r\n      console.log(props);\r\n      this.setState({\r\n        patientId: props.patientId,\r\n        petId: props.petId,\r\n        oldPatientId: props.patientId,\r\n\r\n      }, () => {\r\n        this._getPetInfo()\r\n      })\r\n      console.log(props);\r\n    } else {\r\n      this._getPetInfo()\r\n    }\r\n\r\n    let dogBreed = electronStore.get('dogBreed') || []\r\n    let catBreed = electronStore.get('catBreed') || []\r\n    this.setState({\r\n      dogBreed,\r\n      catBreed\r\n    })\r\n    this.getBreed('cat')\r\n    this.getBreed('dog')\r\n    this.getUser()\r\n\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  getBreed = (val) => {\r\n    let data = {}\r\n    switch (val) {\r\n      case 'dog':\r\n        data.speciesId = 2; break;\r\n\r\n      case 'cat':\r\n        data.speciesId = 1; break;\r\n    }\r\n\r\n    fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n      .then(res => {\r\n        // console.log('---', res);\r\n        if (res.code === 0) {\r\n          let arr = []\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName\r\n            }\r\n            arr.push(data)\r\n          })\r\n          if (val === 'dog') {\r\n            this.setState({\r\n              dogBreed: arr\r\n            })\r\n            electronStore.set('dogBreed', arr)\r\n          } else if (val === 'cat') {\r\n            this.setState({\r\n              catBreed: arr\r\n            })\r\n            electronStore.set('catBreed', arr)\r\n          }\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  getUser = () => {\r\n    let params = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    fetchRequest(`/organization/listDoctorsByAdmin/${storage.lastOrganization}`, 'GET', params)\r\n      .then(res => {\r\n        console.log('人员列表', res);\r\n\r\n        if (res.flag === true && res.code === 20000) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              breedName: `${lastName} ${firstName}`,\r\n              petSpeciesBreedId: userId,\r\n              email,\r\n              birthday,\r\n              isLimit,\r\n              isDeleted,\r\n              phone,\r\n              url,\r\n              firstName, lastName, roleId\r\n            }\r\n            data.push(json)\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            doctorArr: data,\r\n            // parentList: data //这里只是测试，后期删除\r\n\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n\r\n      })\r\n  }\r\n\r\n  _getPetInfo = () => {\r\n    let { patientId, petId } = this.state\r\n    let datas = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      datas.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      datas.org = storage.lastOrganization\r\n    }\r\n    if (patientId && patientId !== 'undefined') {\r\n      datas.patientId = patientId\r\n    }\r\n    if (petId) {\r\n      datas.petId = petId\r\n    }\r\n    this.setState({\r\n      spin: true\r\n    })\r\n\r\n\r\n\r\n    console.log('入参：', datas);\r\n    fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n      .then(res => {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        console.log('>>>>>>>>>>>>>>', res);\r\n        if (res.flag === true) {\r\n          //有宠物，进入1\r\n          let datas = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            if (res.data[i].petId === this.state.petId) {\r\n              datas = res.data[i]\r\n              break\r\n            }\r\n          }\r\n          console.log('获取到宠物', datas);\r\n          let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url, gender, speciesId, petSpeciesBreedId } = datas\r\n\r\n          if (isMix !== true) {\r\n            isMix = false\r\n          }\r\n          petName = isNull(petName)\r\n          lastName = isNull(lastName)\r\n          firstName = isNull(firstName)\r\n          breedName = isNull(breedName)\r\n\r\n          let confirmSelectBreedJson = {}\r\n          if (petSpeciesBreedId || petSpeciesBreedId === 0) {\r\n            confirmSelectBreedJson = {\r\n              name: breedName,\r\n              petSpeciesBreedId\r\n            }\r\n          }\r\n\r\n          url = isNull(url)\r\n          if (birthday != null) {\r\n            birthday = moment(birthday).format('MMMM D, YYYY')\r\n          }\r\n          else {\r\n            birthday = ''\r\n          }\r\n          if (gender === null || gender === NaN || `${gender}` === 'null' || `${gender}` === 'NaN') {\r\n            gender = 0\r\n          }\r\n          if (weight) {\r\n            weight = (weight * 2.2046).toFixed(1)\r\n          } else {\r\n            weight = ''\r\n          }\r\n\r\n\r\n          this.setState({\r\n            petId,\r\n            petName,\r\n            lastName,\r\n            firstName,\r\n            breedName,\r\n            isMix,\r\n            birthday,\r\n            weight,\r\n            imgurl: url,\r\n            gender,\r\n            petSpecies: speciesId,\r\n\r\n\r\n            initpetName: petName,\r\n            initlastName: lastName,\r\n            initfirstName: firstName,\r\n            confirmSelectBreedJson,\r\n            petSpeciesBreedId\r\n          })\r\n          switch (speciesId) {\r\n            case 1: this.selectWZ('cat'); break;\r\n            case 2: this.selectWZ('dog'); break;\r\n\r\n            default: this.selectWZ('other'); break;\r\n          }\r\n\r\n        } else {\r\n          message.destroy()\r\n          message.error('data load failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        console.log(err);\r\n        message.destroy()\r\n        message.error('data load failed')\r\n      })\r\n    const isNull = (value) => {\r\n      if (value === null || value === NaN || `${value}` === 'null' || `${value}` === 'NaN') {\r\n        return ''\r\n      } else {\r\n        return value\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n  /**------------------顶部end------------------------ */\r\n  selectWZ = (val) => {\r\n    let { catBreed, dogBreed } = this.state\r\n    switch (val) {\r\n      case 'dog':\r\n        this.setState({\r\n          catImg: cat,\r\n          dogImg: redDog,\r\n          otherImg: other,\r\n          selectWZ: val,\r\n          breedArr: [].concat(dogBreed)\r\n        })\r\n\r\n        break;\r\n\r\n      case 'cat':\r\n        this.setState({\r\n          catImg: redCat,\r\n          dogImg: dog,\r\n          otherImg: other,\r\n          selectWZ: val,\r\n          breedArr: [].concat(catBreed)\r\n        })\r\n\r\n        break;\r\n\r\n      case 'other':\r\n        this.setState({\r\n          catImg: cat,\r\n          dogImg: dog,\r\n          otherImg: redother,\r\n          selectWZ: val,\r\n          breedArr: []\r\n        })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  _petSpecies = () => {\r\n    let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\r\n\r\n    this.avatar = imgurl ? imgurl : selectphoto\r\n\r\n    return (\r\n      <div className=\"petSpecies\"\r\n        style={{ marginTop: mTop(30) }}\r\n      >\r\n        <div className=\"l\">\r\n          <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\r\n          <div className=\"selectSpecies\">\r\n            <ul>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog'\r\n\r\n                    onClick={() => { this.selectWZ('dog') }}>\r\n                    <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\r\n                  </div>\r\n                  Dog\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this.selectWZ('cat') }} >\r\n                    <img src={catImg} alt=\"\" style={{ width: px(40) }} />\r\n                  </div>\r\n                  Cat\r\n                </div>\r\n              </li>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this.selectWZ('other') }} >\r\n                    <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\r\n                  </div>\r\n                  Other\r\n                </div>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"r\">\r\n          {/* <div className=\"img\"\r\n                    style={{ width: px(110), height: px(110) }}\r\n                >\r\n                    <div className=\"ciral\" onClick={() => {\r\n                        let file = document.getElementById('f')\r\n                        file.click();\r\n                    }}>\r\n                        <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                        <input type=\"file\" accept=\"image/gif,image/jpeg,image/jpg,image/png,image/svg\" className=\"uploadImg\" id=\"f\" onChange={(e) => {\r\n                            console.log(e);\r\n                            let $target = e.target || e.srcElement\r\n                            if ($target.files.length === 0) {\r\n                                return;\r\n                            }\r\n                            let file = $target.files[0]\r\n                            var reader = new FileReader()                   //创建文件阅读器实例\r\n                            reader.readAsDataURL(file)\r\n                            reader.onload = (data) => {\r\n                                let res = data.target || data.srcElement\r\n                                console.dir(document.getElementById('touxiang'));\r\n                                document.getElementById('touxiang').src = res.result\r\n\r\n\r\n                                const formData = new FormData();\r\n                                formData.append('img', file);\r\n                                fetch(`${url}/image/uploadImage`, {\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                    },\r\n                                    body: formData\r\n                                })\r\n                                    .then((response) => response.json())\r\n                                    .then((res) => {\r\n                                        console.log(res);\r\n                                        if (res.flag === true) {\r\n                                            this.setState({\r\n                                                imageId: res.data.imageId,\r\n                                                imgurl: res.data.url\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        console.log(err);\r\n                                    });\r\n                            }\r\n\r\n                        }} />\r\n                        <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                    </div>\r\n                </div> */}\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n              getAllInfo={(val) => {\r\n                console.log('所有的信息', val);\r\n                if (val.url) {\r\n                  this.setState({\r\n                    petUrl: val.url\r\n                  })\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _petName = () => {\r\n\r\n    const onPanelChange = (value, mode) => {\r\n      console.log('-----', value, mode);\r\n    }\r\n    let birthday = this.state.birthday\r\n    let birthdayValue = birthday ? moment(birthday) : moment(new Date())\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\r\n        <div className=\"l\">\r\n          <p >Pet Name</p>\r\n          <div className=\"infoInput\">\r\n            <Input\r\n              bordered={false}\r\n              value={this.state.initpetName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  petName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n                  initpetName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <p >Pet Birthday</p>\r\n          <div className=\"infoInput\" >\r\n            <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\r\n              document.getElementById('calendar').style.display = 'block'\r\n            }}>{this.state.birthday}</p>\r\n            <div className=\"calendar\" id=\"calendar\">\r\n              <Calendar\r\n                fullscreen={false}\r\n                headerRender={({ value, type, onChange, onTypeChange }) => {\r\n                  const start = 0;\r\n                  const end = 12;\r\n                  const monthOptions = [];\r\n\r\n                  const current = value.clone();\r\n                  const localeData = value.localeData();\r\n                  const months = [];\r\n                  for (let i = 0; i < 12; i++) {\r\n                    current.month(i);\r\n                    months.push(localeData.monthsShort(current));\r\n                  }\r\n\r\n                  for (let index = start; index < end; index++) {\r\n                    monthOptions.push(\r\n                      <Select.Option className=\"month-item\" key={`${index}`}>\r\n                        {months[index]}\r\n                      </Select.Option>\r\n                    );\r\n                  }\r\n                  const month = value.month();\r\n\r\n                  const year = value.year();\r\n                  const options = [];\r\n                  for (let i = year - 10; i < year + 10; i += 1) {\r\n                    options.push(\r\n                      <Select.Option key={i} value={i} className=\"year-item\">\r\n                        {i}\r\n                      </Select.Option>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <div style={{ padding: 8 }}>\r\n                      <Row gutter={8}>\r\n                        <Col>\r\n                          <Select\r\n                            size=\"small\"\r\n                            dropdownMatchSelectWidth={false}\r\n                            className=\"my-year-select\"\r\n                            onChange={(newYear) => {\r\n                              const now = value.clone().year(newYear);\r\n                              onChange(now);\r\n                            }}\r\n                            value={String(year)}\r\n                          >\r\n                            {options}\r\n                          </Select>\r\n                        </Col>\r\n                        <Col>\r\n                          <Select\r\n                            size=\"small\"\r\n                            dropdownMatchSelectWidth={false}\r\n                            value={String(month)}\r\n                            onChange={(selectedMonth) => {\r\n                              const newValue = value.clone();\r\n                              newValue.month(parseInt(selectedMonth, 10));\r\n                              onChange(newValue);\r\n                            }}\r\n                          >\r\n                            {monthOptions}\r\n                          </Select>\r\n                        </Col>\r\n                        {/* <Col>\r\n                          <div className=\"btn\" onClick={() => {\r\n                            document.getElementById('calendar').style.display = 'none'\r\n                          }}>\r\n                            Choose this date\r\n                          </div>\r\n\r\n                        </Col> */}\r\n                      </Row>\r\n                    </div>\r\n                  );\r\n                }}\r\n                value={birthdayValue}\r\n                onSelect={(value) => {\r\n                  console.log(value);\r\n                  this.setState({\r\n                    birthday: moment(value).format('MMMM D, YYYY')\r\n                  })\r\n                  document.getElementById('calendar').style.display = 'none'\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _ownName = () => {\r\n    let { confirmSelectUserJson } = this.state\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(18), alignItems: 'flex-end' }}\r\n      >\r\n        <div className=\"l\">\r\n\r\n          <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\r\n          <div className=\"infoInput\">\r\n            <Input bordered={false}\r\n              value={this.state.patientId}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  patientId: item.target.value.replace(/\\s/g, \"\"),\r\n                  intFlog: true\r\n\r\n                })\r\n                if (item.target.value !== errPatientId) {\r\n                  message.destroy()\r\n                }\r\n              }}\r\n              onBlur={() => {\r\n                message.destroy()\r\n                console.log('我离开光标了');\r\n                if (this.state.patientId === this.state.oldPatientId) {\r\n                  return\r\n                }\r\n\r\n                let params = {\r\n                  patientId: this.state.patientId,\r\n                  doctorId: storage.userId\r\n                }\r\n                if (storage.lastWorkplaceId) {\r\n                  params.workplaceId = storage.lastWorkplaceId\r\n                }\r\n\r\n                fetchRequest(`/pet/checkPatientId`, \"GET\", params)\r\n                  .then(res => {\r\n                    console.log(res);\r\n                    if (res.flag === false) {\r\n                      errPatientId = params.patientId\r\n                      message.destroy()\r\n                      message.error('This patient ID is already occupied, please change to a new one', 0)\r\n                    } else {\r\n                      errPatientId = ''\r\n                    }\r\n\r\n                  })\r\n                  .catch(err => {\r\n                    console.log(err);\r\n\r\n                  })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"r\">\r\n          <div className=\"infoInput flex\"\r\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer', }}\r\n            onClick={() => {\r\n\r\n              this.setState({\r\n                // selectUser: true\r\n              })\r\n            }}\r\n          >\r\n\r\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectUserJson.name ? confirmSelectUserJson.name : 'My Parents'}</div>\r\n            <div className=\"nextimg\" >\r\n              <img src={nextImg} style={{ height: px(15) }} />\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n    // return (\r\n    //   <div className=\"petName\" style={{ marginTop: mTop(30) }}>\r\n    //     <div className=\"l\">\r\n    //       <p >Owner First Name</p>\r\n    //       <div className=\"infoInput\">\r\n    //         <Input bordered={false}\r\n    //           value={this.state.initfirstName}\r\n    //           onChange={(item) => {\r\n\r\n    //             this.setState({\r\n    //               firstName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n    //               initfirstName: item.target.value\r\n    //             })\r\n    //           }}\r\n\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n\r\n    //     <div className=\"r\">\r\n    //       <p >Owner Last Name</p>\r\n    //       <div className=\"infoInput\">\r\n    //         <Input bordered={false}\r\n    //           value={this.state.initlastName}\r\n    //           onChange={(item) => {\r\n\r\n    //             this.setState({\r\n    //               lastName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n    //               initlastName: item.target.value\r\n    //             })\r\n    //           }}\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n\r\n    // )\r\n  }\r\n  _select = (value, data) => {\r\n    console.log(value, data);  //value的值为id\r\n    this.setState({\r\n      petSpeciesBreedId: value,\r\n      breedName: data.children\r\n    })\r\n  }\r\n  _primaryBreed = () => {\r\n    let options = null\r\n    // switch (this.state.petSpecies) {\r\n    //     case 2: options = this.state.catData.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>); break;\r\n    //     case 1: options = this.state.dogData.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>); break;\r\n    // }\r\n    options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\r\n    let { breedName, confirmSelectBreedJson } = this.state\r\n    // console.log('-----breedName:', confirmSelectBreedJson);\r\n\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(30), alignItems: 'flex-end', }}>\r\n        <div className=\"l\">\r\n          {/* <p >Primary Breed</p>\r\n          <div className=\"infoInput\">\r\n            <Select\r\n              showSearch\r\n              style={{ width: '100%' }}\r\n              bordered={false}\r\n              value={breedName}\r\n              // size = {'small'}        \r\n              placeholder=\"Search to Select\"\r\n              optionFilterProp=\"children\"\r\n              listHeight={256}\r\n              onSelect={(value, data) => this._select(value, data)}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n            >\r\n              {options}\r\n            </Select>\r\n          </div> */}\r\n          <div className=\"infoInput flex\"\r\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\r\n            onClick={() => {\r\n              this.setState({\r\n                selectBreed: true\r\n              })\r\n            }}\r\n          >\r\n\r\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'}</div>\r\n            <div className=\"nextimg\" >\r\n              <img src={nextImg} style={{ height: px(15) }} />\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"r\" >\r\n          <div className=\"max\">\r\n            Mix?\r\n            <div className=\"selected\"\r\n              onClick={() => this.setState({\r\n                isMix: !this.state.isMix\r\n              })}\r\n            >\r\n              {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _weight = () => {\r\n    let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\r\n    switch (this.state.unit) {\r\n      case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\r\n      case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\r\n    }\r\n\r\n    switch (this.state.gender) {\r\n      case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\r\n      case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\r\n        <div className=\"l\">\r\n          <p >Pet Weight</p>\r\n          <div className=\"infoInput\">\r\n            <Input bordered={false}\r\n              value={this.state.weight}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  weight: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n            <div className=\"ibKg\">\r\n              <div className=\"ibs\"\r\n                style={{ backgroundColor: ibBgcColor, color: ibCor }}\r\n                onClick={() => {\r\n                  if (this.state.unit === 2) {\r\n\r\n                    this.setState({\r\n                      unit: 1,\r\n                      weight: (this.state.weight * 2.2046).toFixed(1)\r\n                    })\r\n                  }\r\n                }}\r\n              >Ibs</div>\r\n              <div className=\"kgs\"\r\n                style={{ backgroundColor: kgBgcColor, color: kgCor }}\r\n                onClick={() => {\r\n\r\n                  if (this.state.unit === 1) {\r\n\r\n                    this.setState({\r\n                      unit: 1,\r\n                      weight: (this.state.weight / 2.2046).toFixed(1)\r\n                    })\r\n                  }\r\n                  this.setState({ unit: 2 })\r\n                }}\r\n              >kgs</div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\r\n          <div className=\"gender\">\r\n            <div className=\"selectGender\">\r\n              <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\r\n                <div className=\"femaleCiral\"\r\n                  style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\r\n                  onClick={() => this.setState({ gender: 1 })}\r\n                >\r\n                  <img src={female} alt=\"\" style={{ width: px(15) }} />\r\n                </div>\r\n                Female\r\n              </div>\r\n              <div className=\"male\" style={{ fontSize: px(18) }}>\r\n                <div className=\"maleCiral\"\r\n                  style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\r\n                  onClick={() => this.setState({ gender: 0 })}\r\n                >\r\n                  <img src={male} alt=\"\" style={{ width: px(20) }} />\r\n                </div>\r\n                Male\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { closeColor, closebgc, minbgc } = this.state\r\n\r\n    return (\r\n      <div id=\"editPetInfo\">\r\n        {/* 头部 */}\r\n        <div className=\"close1\">\r\n          {/* 菜单 */}\r\n          <div className=\"menu\">\r\n\r\n            <MyIcon type='icon-fanhui4' className=\"icon\" onClick={() => {\r\n              if (storage.goEditPet === \"mesasure\") {\r\n                this.props.history.push({ pathname: 'page8', participate: { patientId: this.state.patientId } })\r\n              } else {\r\n                this.props.history.goBack()\r\n              }\r\n            }} />\r\n          </div>\r\n          <div className=\"text\">mella</div>\r\n          <div className='maxmin'>\r\n            <div\r\n              className=\"min iconfont icon-64\"\r\n              onClick={this._min}\r\n              onMouseEnter={this._minMove}\r\n              onMouseLeave={this._minLeave}\r\n              style={{ backgroundColor: minbgc }}\r\n            ></div>\r\n\r\n            <div\r\n              className=\"max iconfont icon-guanbi2\"\r\n              onClick={this._close}\r\n              onMouseEnter={this._closeMove}\r\n              onMouseLeave={this._closeLeave}\r\n              style={{ backgroundColor: closebgc, color: closeColor }}\r\n            ></div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"editPetInfo_top\">\r\n          <div className=\"title\">{`${this.state.patientId}, ${this.state.petName}`}</div>\r\n          {this._petSpecies()}\r\n          {this._petName()}\r\n          {this._ownName()}\r\n          {this._primaryBreed()}\r\n          {this._weight()}\r\n        </div>\r\n        <div className=\"editPetInfo_foot\">\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              let { petName, birthday, firstName, lastName, petSpeciesBreedId, isMix, weight, gender, unit, imageId, breedName, petId, confirmSelectBreedJson, confirmSelectUserJson } = this.state\r\n              console.log('生日：', birthday);\r\n              if (unit === 1) {\r\n                weight = (0.45359 * weight).toFixed(2)\r\n              }\r\n\r\n              let data = {\r\n                petName,\r\n                weight: parseFloat(weight),\r\n                gender,\r\n                firstName,\r\n                lastName,\r\n              }\r\n              if (birthday) {\r\n                data.birthday = moment(birthday).format('YYYY-MM-DD')\r\n              }\r\n              if (imageId !== -1) {\r\n                data.imageId = imageId\r\n              }\r\n              // if (breedName) {\r\n              //   data.breedName = breedName\r\n              // }\r\n              if (confirmSelectBreedJson.name) {\r\n                data.breedName = confirmSelectBreedJson.name\r\n              }\r\n              if (confirmSelectUserJson.petSpeciesBreedId) {\r\n                data.userId = confirmSelectUserJson.petSpeciesBreedId\r\n              }\r\n\r\n              console.log('------', data);\r\n              this.setState({\r\n                spin: true\r\n              })\r\n              fetchRequest(`/pet/updatePetInfo/${petId}`, 'POST', data)\r\n                .then(res => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  console.log(res);\r\n                  if (res.flag === true) {\r\n                    try {\r\n                      if (storage.identity === '3') {\r\n                        let data = JSON.parse(storage.doctorExam)\r\n                        data.petName = petName\r\n                        data.weight = weight\r\n                        data.gender = gender\r\n                        data.patientId = this.state.patientId\r\n                        if (birthday) {\r\n                          data.age = moment(new Date()).diff(moment(birthday), 'years')\r\n                        }\r\n                        if (confirmSelectBreedJson.name) {\r\n                          data.breed = confirmSelectBreedJson.name\r\n                        }\r\n                        if (this.state.petUrl) {\r\n                          data.url = this.state.petUrl\r\n                        }\r\n\r\n                        storage.doctorExam = JSON.stringify(data)\r\n\r\n\r\n                      }\r\n                    } catch (error) {\r\n\r\n                    }\r\n                    console.log('从哪来', storage.goEditPet);\r\n                    if (storage.goEditPet === \"mesasure\") {\r\n                      this.props.history.replace({ pathname: 'page8', participate: { patientId: this.state.patientId } })\r\n                    } else {\r\n                      this.props.history.goBack()\r\n                    }\r\n\r\n\r\n\r\n                  } else {\r\n                    message.error('Update failed')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  console.log(err);\r\n                })\r\n            }}\r\n\r\n          >Save Changes</div>\r\n\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n        <MyModal\r\n          // visible={true}\r\n          visible={this.state.selectBreed}\r\n          element={\r\n            <div className='myfindOrg' >\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div>\r\n\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        selectBreed: false,\r\n                        selectBreedJson: {}\r\n                      })\r\n                    }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"text\" >Choose Breed</div>\r\n\r\n                <div className=\"searchBox\">\r\n\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search name\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.searchBreed}\r\n                    onChange={(item) => {\r\n\r\n                      this.setState({\r\n                        searchBreed: item.target.value\r\n                      })\r\n                    }}\r\n\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"list\" >\r\n                <PhoneBook\r\n                  listDate={this.state.breedArr}\r\n                  confirmSelectBreed={this.state.petSpeciesBreedId}\r\n                  selectFun={(val) => {\r\n                    // console.log('从子组件传来的数据', val);\r\n                    this.setState({\r\n                      selectBreedJson: val,\r\n                      petSpeciesBreedId: val.petSpeciesBreedId\r\n                    })\r\n\r\n\r\n                  }}\r\n                  searchText={this.state.searchBreed}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"foot\">\r\n                <Button\r\n                  text={'Select'}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      confirmSelectBreedJson: this.state.selectBreedJson,\r\n                      selectBreed: false\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <MyModal\r\n          visible={true}\r\n          visible={this.state.selectUser}\r\n          element={\r\n            <div className='myfindOrg' >\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div>\r\n\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        selectUser: false,\r\n                        selectUserJson: {}\r\n                      })\r\n                    }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"text\" >Choose Parents</div>\r\n\r\n                <div className=\"searchBox\">\r\n\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search name\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.searchBreed}\r\n                    onChange={(item) => {\r\n\r\n                      this.setState({\r\n                        searchBreed: item.target.value\r\n                      })\r\n                    }}\r\n\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"list\" >\r\n                <PhoneBook\r\n                  listDate={this.state.doctorArr}\r\n                  confirmSelectBreed={this.state.selectUserId}\r\n                  selectFun={(val) => {\r\n\r\n                    this.setState({\r\n                      selectUserJson: val,\r\n                      selectUserId: val.petSpeciesBreedId\r\n                    })\r\n\r\n\r\n                  }}\r\n                  searchText={this.state.searchBreed}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"foot\">\r\n                <Button\r\n                  text={'Select'}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      confirmSelectUserJson: this.state.selectUserJson,\r\n                      selectUser: false\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n\r\n            </div>\r\n          }\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}",["448","449"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx",["450","451","452","453","454","455","456","457"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx",["458","459"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\FetchUtil4.js",["460","461","462","463"],"\r\nlet COMMON_URL = 'https://www.mellaserver.com/big/mellabiggie';//内部负载均衡\r\n\r\n//let COMMON_URL = 'http://34.206.181.105:31668/mellabiggie';//内部负载均衡\r\n\r\n// let COMMON_URL = 'http://192.168.0.36:9090/mellabiggie';//本地测试\r\nlet token = '';\r\n\r\n\r\nexport async function fetchRequest4 (url, method, params = '', Authorization = '', isLogin) {\r\n\r\n  // if (isLogin) {\r\n\r\n  //     COMMON_URL = 'http://34.206.181.105:31667/mellaserver'\r\n  // } else {\r\n  //     COMMON_URL = 'https://www.mellaserver.com/big/mellabiggie'\r\n  // }\r\n  console.log(COMMON_URL, url);\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          headers: {\r\n            Authorization\r\n          },\r\n          method: method,\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      console.log(COMMON_URL + url);\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": 'text/plain',\r\n            Authorization\r\n          },\r\n\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n",["464","465"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx",["466","467","468","469","470","471","472","473","474","475","476","477"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx",["478","479","480","481","482","483","484","485","486","487"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\px.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\doctorSelectExam\\AddYuding.jsx",["488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx",["520","521","522"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\utils\\FetchUtil1.js",["523","524","525","526"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\components\\doctorAddPet\\DoctorAddPet.jsx",["527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551"],"C:\\Users\\nonagon\\Desktop\\workCode\\mella-usb\\mella-usb\\src\\pages\\biggiePage\\Biggie.jsx",["552","553","554","555","556","557","558","559","560"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js",["561","562","563","564","565","566","567","568","569","570","571","572","573","574","575"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\measure\\WalkInMesasure.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\signIn\\SignIn.jsx",["576","577","578","579","580","581","582","583","584","585","586","587","588","589","590"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx",["591","592","593","594","595"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx",["596","597","598","599","600","601","602","603","604","605"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\avatar\\Avatar.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\index.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\workPlace\\WorkPlace.jsx",["606","607","608","609","610","611","612","613","614"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectExam\\SelectExam.jsx",["615","616","617","618"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\temporaryStorage.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\minClose\\MinClose.js",["619","620","621"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642"],{"ruleId":"643","severity":1,"message":"644","line":3,"column":10,"nodeType":"645","messageId":"646","endLine":3,"endColumn":23},{"ruleId":"643","severity":1,"message":"647","line":14,"column":8,"nodeType":"645","messageId":"646","endLine":14,"endColumn":17},{"ruleId":"643","severity":1,"message":"648","line":19,"column":8,"nodeType":"645","messageId":"646","endLine":19,"endColumn":22},{"ruleId":"649","replacedBy":"650"},{"ruleId":"651","replacedBy":"652"},{"ruleId":"643","severity":1,"message":"653","line":8,"column":10,"nodeType":"645","messageId":"646","endLine":8,"endColumn":30},{"ruleId":"643","severity":1,"message":"654","line":8,"column":32,"nodeType":"645","messageId":"646","endLine":8,"endColumn":44},{"ruleId":"643","severity":1,"message":"655","line":14,"column":20,"nodeType":"645","messageId":"646","endLine":14,"endColumn":22},{"ruleId":"643","severity":1,"message":"656","line":6,"column":3,"nodeType":"645","messageId":"646","endLine":6,"endColumn":8},{"ruleId":"643","severity":1,"message":"657","line":7,"column":3,"nodeType":"645","messageId":"646","endLine":7,"endColumn":10},{"ruleId":"643","severity":1,"message":"658","line":8,"column":3,"nodeType":"645","messageId":"646","endLine":8,"endColumn":7},{"ruleId":"643","severity":1,"message":"659","line":15,"column":10,"nodeType":"645","messageId":"646","endLine":15,"endColumn":14},{"ruleId":"643","severity":1,"message":"655","line":15,"column":16,"nodeType":"645","messageId":"646","endLine":15,"endColumn":18},{"ruleId":"643","severity":1,"message":"653","line":17,"column":10,"nodeType":"645","messageId":"646","endLine":17,"endColumn":30},{"ruleId":"643","severity":1,"message":"654","line":17,"column":32,"nodeType":"645","messageId":"646","endLine":17,"endColumn":44},{"ruleId":"643","severity":1,"message":"660","line":17,"column":46,"nodeType":"645","messageId":"646","endLine":17,"endColumn":61},{"ruleId":"643","severity":1,"message":"661","line":18,"column":10,"nodeType":"645","messageId":"646","endLine":18,"endColumn":22},{"ruleId":"649","replacedBy":"662"},{"ruleId":"651","replacedBy":"663"},{"ruleId":"643","severity":1,"message":"664","line":2,"column":10,"nodeType":"645","messageId":"646","endLine":2,"endColumn":15},{"ruleId":"643","severity":1,"message":"665","line":2,"column":17,"nodeType":"645","messageId":"646","endLine":2,"endColumn":23},{"ruleId":"643","severity":1,"message":"666","line":2,"column":48,"nodeType":"645","messageId":"646","endLine":2,"endColumn":56},{"ruleId":"643","severity":1,"message":"667","line":2,"column":58,"nodeType":"645","messageId":"646","endLine":2,"endColumn":61},{"ruleId":"643","severity":1,"message":"668","line":2,"column":63,"nodeType":"645","messageId":"646","endLine":2,"endColumn":66},{"ruleId":"643","severity":1,"message":"658","line":2,"column":68,"nodeType":"645","messageId":"646","endLine":2,"endColumn":72},{"ruleId":"643","severity":1,"message":"669","line":3,"column":8,"nodeType":"645","messageId":"646","endLine":3,"endColumn":17},{"ruleId":"643","severity":1,"message":"660","line":6,"column":32,"nodeType":"645","messageId":"646","endLine":6,"endColumn":47},{"ruleId":"643","severity":1,"message":"670","line":11,"column":8,"nodeType":"645","messageId":"646","endLine":11,"endColumn":13},{"ruleId":"643","severity":1,"message":"671","line":12,"column":8,"nodeType":"645","messageId":"646","endLine":12,"endColumn":14},{"ruleId":"643","severity":1,"message":"672","line":15,"column":8,"nodeType":"645","messageId":"646","endLine":15,"endColumn":11},{"ruleId":"643","severity":1,"message":"673","line":16,"column":8,"nodeType":"645","messageId":"646","endLine":16,"endColumn":14},{"ruleId":"643","severity":1,"message":"674","line":17,"column":8,"nodeType":"645","messageId":"646","endLine":17,"endColumn":12},{"ruleId":"643","severity":1,"message":"675","line":23,"column":9,"nodeType":"645","messageId":"646","endLine":23,"endColumn":16},{"ruleId":"643","severity":1,"message":"676","line":24,"column":9,"nodeType":"645","messageId":"646","endLine":24,"endColumn":15},{"ruleId":"643","severity":1,"message":"677","line":25,"column":7,"nodeType":"645","messageId":"646","endLine":25,"endColumn":13},{"ruleId":"643","severity":1,"message":"678","line":28,"column":5,"nodeType":"645","messageId":"646","endLine":28,"endColumn":12},{"ruleId":"643","severity":1,"message":"679","line":29,"column":5,"nodeType":"645","messageId":"646","endLine":29,"endColumn":17},{"ruleId":"643","severity":1,"message":"680","line":30,"column":5,"nodeType":"645","messageId":"646","endLine":30,"endColumn":8},{"ruleId":"643","severity":1,"message":"680","line":92,"column":61,"nodeType":"645","messageId":"646","endLine":92,"endColumn":64},{"ruleId":"643","severity":1,"message":"681","line":92,"column":66,"nodeType":"645","messageId":"646","endLine":92,"endColumn":75},{"ruleId":"682","severity":1,"message":"683","line":277,"column":15,"nodeType":"684","endLine":283,"endColumn":16},{"ruleId":"649","replacedBy":"685"},{"ruleId":"651","replacedBy":"686"},{"ruleId":"643","severity":1,"message":"687","line":4,"column":5,"nodeType":"645","messageId":"646","endLine":4,"endColumn":10},{"ruleId":"688","severity":1,"message":"689","line":16,"column":16,"nodeType":"690","messageId":"691","endLine":16,"endColumn":18},{"ruleId":"688","severity":1,"message":"689","line":67,"column":16,"nodeType":"690","messageId":"691","endLine":67,"endColumn":18},{"ruleId":"688","severity":1,"message":"689","line":101,"column":16,"nodeType":"690","messageId":"691","endLine":101,"endColumn":18},{"ruleId":"643","severity":1,"message":"692","line":13,"column":10,"nodeType":"645","messageId":"646","endLine":13,"endColumn":12},{"ruleId":"643","severity":1,"message":"655","line":13,"column":14,"nodeType":"645","messageId":"646","endLine":13,"endColumn":16},{"ruleId":"643","severity":1,"message":"693","line":2,"column":10,"nodeType":"645","messageId":"646","endLine":2,"endColumn":20},{"ruleId":"643","severity":1,"message":"694","line":4,"column":5,"nodeType":"645","messageId":"646","endLine":4,"endColumn":9},{"ruleId":"643","severity":1,"message":"695","line":5,"column":5,"nodeType":"645","messageId":"646","endLine":5,"endColumn":12},{"ruleId":"643","severity":1,"message":"665","line":6,"column":5,"nodeType":"645","messageId":"646","endLine":6,"endColumn":11},{"ruleId":"643","severity":1,"message":"656","line":7,"column":5,"nodeType":"645","messageId":"646","endLine":7,"endColumn":10},{"ruleId":"643","severity":1,"message":"659","line":15,"column":10,"nodeType":"645","messageId":"646","endLine":15,"endColumn":14},{"ruleId":"643","severity":1,"message":"696","line":15,"column":20,"nodeType":"645","messageId":"646","endLine":15,"endColumn":24},{"ruleId":"643","severity":1,"message":"697","line":16,"column":8,"nodeType":"645","messageId":"646","endLine":16,"endColumn":21},{"ruleId":"698","severity":1,"message":"699","line":49,"column":36,"nodeType":"700","messageId":"701","endLine":49,"endColumn":38},{"ruleId":"698","severity":1,"message":"699","line":65,"column":32,"nodeType":"700","messageId":"701","endLine":65,"endColumn":34},{"ruleId":"698","severity":1,"message":"699","line":74,"column":37,"nodeType":"700","messageId":"701","endLine":74,"endColumn":39},{"ruleId":"698","severity":1,"message":"699","line":80,"column":23,"nodeType":"700","messageId":"701","endLine":80,"endColumn":25},{"ruleId":"698","severity":1,"message":"699","line":82,"column":31,"nodeType":"700","messageId":"701","endLine":82,"endColumn":33},{"ruleId":"688","severity":1,"message":"689","line":86,"column":32,"nodeType":"690","messageId":"691","endLine":86,"endColumn":34},{"ruleId":"702","severity":1,"message":"703","line":104,"column":8,"nodeType":"704","endLine":104,"endColumn":10,"suggestions":"705"},{"ruleId":"698","severity":1,"message":"699","line":114,"column":39,"nodeType":"700","messageId":"701","endLine":114,"endColumn":41},{"ruleId":"698","severity":1,"message":"699","line":115,"column":49,"nodeType":"700","messageId":"701","endLine":115,"endColumn":51},{"ruleId":"688","severity":1,"message":"706","line":124,"column":39,"nodeType":"690","messageId":"691","endLine":124,"endColumn":41},{"ruleId":"698","severity":1,"message":"699","line":137,"column":39,"nodeType":"700","messageId":"701","endLine":137,"endColumn":41},{"ruleId":"702","severity":1,"message":"707","line":152,"column":8,"nodeType":"704","endLine":152,"endColumn":20,"suggestions":"708"},{"ruleId":"682","severity":1,"message":"709","line":202,"column":21,"nodeType":"684","endLine":207,"endColumn":22},{"ruleId":"649","replacedBy":"710"},{"ruleId":"651","replacedBy":"711"},{"ruleId":"643","severity":1,"message":"664","line":3,"column":3,"nodeType":"645","messageId":"646","endLine":3,"endColumn":8},{"ruleId":"643","severity":1,"message":"657","line":5,"column":3,"nodeType":"645","messageId":"646","endLine":5,"endColumn":10},{"ruleId":"643","severity":1,"message":"712","line":10,"column":8,"nodeType":"645","messageId":"646","endLine":10,"endColumn":17},{"ruleId":"643","severity":1,"message":"661","line":12,"column":10,"nodeType":"645","messageId":"646","endLine":12,"endColumn":22},{"ruleId":"643","severity":1,"message":"658","line":6,"column":3,"nodeType":"645","messageId":"646","endLine":6,"endColumn":7},{"ruleId":"643","severity":1,"message":"653","line":10,"column":10,"nodeType":"645","messageId":"646","endLine":10,"endColumn":30},{"ruleId":"643","severity":1,"message":"654","line":10,"column":32,"nodeType":"645","messageId":"646","endLine":10,"endColumn":44},{"ruleId":"713","severity":1,"message":"714","line":78,"column":11,"nodeType":"715","messageId":"716","endLine":103,"endColumn":12},{"ruleId":"717","severity":1,"message":"718","line":94,"column":13,"nodeType":"719","messageId":"720","endLine":101,"endColumn":20},{"ruleId":"721","severity":1,"message":"722","line":101,"column":15,"nodeType":"723","messageId":"724","endLine":101,"endColumn":20},{"ruleId":"649","replacedBy":"725"},{"ruleId":"651","replacedBy":"726"},{"ruleId":"643","severity":1,"message":"727","line":4,"column":3,"nodeType":"645","messageId":"646","endLine":4,"endColumn":9},{"ruleId":"643","severity":1,"message":"728","line":13,"column":8,"nodeType":"645","messageId":"646","endLine":13,"endColumn":14},{"ruleId":"643","severity":1,"message":"665","line":14,"column":8,"nodeType":"645","messageId":"646","endLine":14,"endColumn":14},{"ruleId":"643","severity":1,"message":"697","line":15,"column":8,"nodeType":"645","messageId":"646","endLine":15,"endColumn":21},{"ruleId":"643","severity":1,"message":"729","line":16,"column":8,"nodeType":"645","messageId":"646","endLine":16,"endColumn":24},{"ruleId":"643","severity":1,"message":"730","line":20,"column":8,"nodeType":"645","messageId":"646","endLine":20,"endColumn":11},{"ruleId":"643","severity":1,"message":"731","line":21,"column":8,"nodeType":"645","messageId":"646","endLine":21,"endColumn":11},{"ruleId":"643","severity":1,"message":"732","line":22,"column":8,"nodeType":"645","messageId":"646","endLine":22,"endColumn":13},{"ruleId":"643","severity":1,"message":"676","line":32,"column":9,"nodeType":"645","messageId":"646","endLine":32,"endColumn":15},{"ruleId":"643","severity":1,"message":"733","line":55,"column":11,"nodeType":"645","messageId":"646","endLine":55,"endColumn":17},{"ruleId":"643","severity":1,"message":"734","line":55,"column":19,"nodeType":"645","messageId":"646","endLine":55,"endColumn":24},{"ruleId":"643","severity":1,"message":"735","line":71,"column":9,"nodeType":"645","messageId":"646","endLine":71,"endColumn":22},{"ruleId":"643","severity":1,"message":"736","line":154,"column":18,"nodeType":"645","messageId":"646","endLine":154,"endColumn":27},{"ruleId":"643","severity":1,"message":"737","line":154,"column":29,"nodeType":"645","messageId":"646","endLine":154,"endColumn":37},{"ruleId":"738","severity":1,"message":"739","line":558,"column":19,"nodeType":"684","endLine":565,"endColumn":61},{"ruleId":"682","severity":1,"message":"683","line":573,"column":19,"nodeType":"684","endLine":581,"endColumn":30},{"ruleId":"643","severity":1,"message":"669","line":8,"column":8,"nodeType":"645","messageId":"646","endLine":8,"endColumn":17},{"ruleId":"643","severity":1,"message":"653","line":9,"column":10,"nodeType":"645","messageId":"646","endLine":9,"endColumn":30},{"ruleId":"643","severity":1,"message":"659","line":20,"column":10,"nodeType":"645","messageId":"646","endLine":20,"endColumn":14},{"ruleId":"643","severity":1,"message":"655","line":20,"column":16,"nodeType":"645","messageId":"646","endLine":20,"endColumn":18},{"ruleId":"643","severity":1,"message":"740","line":24,"column":7,"nodeType":"645","messageId":"646","endLine":24,"endColumn":14},{"ruleId":"643","severity":1,"message":"741","line":321,"column":21,"nodeType":"645","messageId":"646","endLine":321,"endColumn":29},{"ruleId":"643","severity":1,"message":"742","line":321,"column":31,"nodeType":"645","messageId":"646","endLine":321,"endColumn":37},{"ruleId":"682","severity":1,"message":"683","line":481,"column":36,"nodeType":"684","endLine":481,"endColumn":71},{"ruleId":"649","replacedBy":"743"},{"ruleId":"651","replacedBy":"744"},{"ruleId":"643","severity":1,"message":"658","line":11,"column":3,"nodeType":"645","messageId":"646","endLine":11,"endColumn":7},{"ruleId":"643","severity":1,"message":"745","line":18,"column":8,"nodeType":"645","messageId":"646","endLine":18,"endColumn":15},{"ruleId":"643","severity":1,"message":"746","line":26,"column":10,"nodeType":"645","messageId":"646","endLine":26,"endColumn":23},{"ruleId":"643","severity":1,"message":"655","line":47,"column":16,"nodeType":"645","messageId":"646","endLine":47,"endColumn":18},{"ruleId":"643","severity":1,"message":"675","line":50,"column":9,"nodeType":"645","messageId":"646","endLine":50,"endColumn":16},{"ruleId":"643","severity":1,"message":"747","line":63,"column":5,"nodeType":"645","messageId":"646","endLine":63,"endColumn":8},{"ruleId":"643","severity":1,"message":"748","line":455,"column":22,"nodeType":"645","messageId":"646","endLine":455,"endColumn":26},{"ruleId":"713","severity":1,"message":"714","line":1156,"column":9,"nodeType":"715","messageId":"716","endLine":1160,"endColumn":10},{"ruleId":"717","severity":1,"message":"718","line":1580,"column":7,"nodeType":"719","messageId":"720","endLine":1655,"endColumn":15},{"ruleId":"713","severity":1,"message":"714","line":1823,"column":5,"nodeType":"715","messageId":"716","endLine":1836,"endColumn":6},{"ruleId":"643","severity":1,"message":"749","line":2302,"column":17,"nodeType":"645","messageId":"646","endLine":2302,"endColumn":29},{"ruleId":"750","severity":1,"message":"751","line":2319,"column":59,"nodeType":"752","messageId":"753","endLine":2319,"endColumn":60,"suggestions":"754"},{"ruleId":"750","severity":1,"message":"755","line":2319,"column":165,"nodeType":"752","messageId":"753","endLine":2319,"endColumn":166,"suggestions":"756"},{"ruleId":"750","severity":1,"message":"751","line":2335,"column":59,"nodeType":"752","messageId":"753","endLine":2335,"endColumn":60,"suggestions":"757"},{"ruleId":"750","severity":1,"message":"755","line":2335,"column":165,"nodeType":"752","messageId":"753","endLine":2335,"endColumn":166,"suggestions":"758"},{"ruleId":"750","severity":1,"message":"751","line":2354,"column":59,"nodeType":"752","messageId":"753","endLine":2354,"endColumn":60,"suggestions":"759"},{"ruleId":"750","severity":1,"message":"755","line":2354,"column":165,"nodeType":"752","messageId":"753","endLine":2354,"endColumn":166,"suggestions":"760"},{"ruleId":"750","severity":1,"message":"751","line":2387,"column":59,"nodeType":"752","messageId":"753","endLine":2387,"endColumn":60,"suggestions":"761"},{"ruleId":"750","severity":1,"message":"755","line":2387,"column":165,"nodeType":"752","messageId":"753","endLine":2387,"endColumn":166,"suggestions":"762"},{"ruleId":"750","severity":1,"message":"751","line":2403,"column":59,"nodeType":"752","messageId":"753","endLine":2403,"endColumn":60,"suggestions":"763"},{"ruleId":"750","severity":1,"message":"755","line":2403,"column":165,"nodeType":"752","messageId":"753","endLine":2403,"endColumn":166,"suggestions":"764"},{"ruleId":"750","severity":1,"message":"751","line":2421,"column":59,"nodeType":"752","messageId":"753","endLine":2421,"endColumn":60,"suggestions":"765"},{"ruleId":"750","severity":1,"message":"755","line":2421,"column":165,"nodeType":"752","messageId":"753","endLine":2421,"endColumn":166,"suggestions":"766"},{"ruleId":"643","severity":1,"message":"767","line":2841,"column":11,"nodeType":"645","messageId":"646","endLine":2841,"endColumn":21},{"ruleId":"643","severity":1,"message":"768","line":2841,"column":23,"nodeType":"645","messageId":"646","endLine":2841,"endColumn":31},{"ruleId":"643","severity":1,"message":"769","line":2841,"column":33,"nodeType":"645","messageId":"646","endLine":2841,"endColumn":39},{"ruleId":"643","severity":1,"message":"770","line":2841,"column":65,"nodeType":"645","messageId":"646","endLine":2841,"endColumn":78},{"ruleId":"643","severity":1,"message":"771","line":2985,"column":30,"nodeType":"645","messageId":"646","endLine":2985,"endColumn":37},{"ruleId":"643","severity":1,"message":"737","line":2985,"column":39,"nodeType":"645","messageId":"646","endLine":2985,"endColumn":47},{"ruleId":"643","severity":1,"message":"736","line":2985,"column":49,"nodeType":"645","messageId":"646","endLine":2985,"endColumn":58},{"ruleId":"643","severity":1,"message":"772","line":2985,"column":60,"nodeType":"645","messageId":"646","endLine":2985,"endColumn":69},{"ruleId":"643","severity":1,"message":"773","line":2985,"column":71,"nodeType":"645","messageId":"646","endLine":2985,"endColumn":76},{"ruleId":"643","severity":1,"message":"774","line":2985,"column":78,"nodeType":"645","messageId":"646","endLine":2985,"endColumn":86},{"ruleId":"643","severity":1,"message":"775","line":2985,"column":88,"nodeType":"645","messageId":"646","endLine":2985,"endColumn":94},{"ruleId":"643","severity":1,"message":"680","line":2985,"column":96,"nodeType":"645","messageId":"646","endLine":2985,"endColumn":99},{"ruleId":"750","severity":1,"message":"751","line":3278,"column":59,"nodeType":"752","messageId":"753","endLine":3278,"endColumn":60,"suggestions":"776"},{"ruleId":"750","severity":1,"message":"755","line":3278,"column":165,"nodeType":"752","messageId":"753","endLine":3278,"endColumn":166,"suggestions":"777"},{"ruleId":"750","severity":1,"message":"751","line":3295,"column":59,"nodeType":"752","messageId":"753","endLine":3295,"endColumn":60,"suggestions":"778"},{"ruleId":"750","severity":1,"message":"755","line":3295,"column":165,"nodeType":"752","messageId":"753","endLine":3295,"endColumn":166,"suggestions":"779"},{"ruleId":"643","severity":1,"message":"687","line":6,"column":5,"nodeType":"645","messageId":"646","endLine":6,"endColumn":10},{"ruleId":"688","severity":1,"message":"689","line":18,"column":16,"nodeType":"690","messageId":"691","endLine":18,"endColumn":18},{"ruleId":"688","severity":1,"message":"689","line":61,"column":16,"nodeType":"690","messageId":"691","endLine":61,"endColumn":18},{"ruleId":"688","severity":1,"message":"689","line":95,"column":16,"nodeType":"690","messageId":"691","endLine":95,"endColumn":18},{"ruleId":"643","severity":1,"message":"780","line":2,"column":35,"nodeType":"645","messageId":"646","endLine":2,"endColumn":42},{"ruleId":"643","severity":1,"message":"781","line":13,"column":10,"nodeType":"645","messageId":"646","endLine":13,"endColumn":21},{"ruleId":"643","severity":1,"message":"655","line":43,"column":20,"nodeType":"645","messageId":"646","endLine":43,"endColumn":22},{"ruleId":"643","severity":1,"message":"675","line":50,"column":9,"nodeType":"645","messageId":"646","endLine":50,"endColumn":16},{"ruleId":"643","severity":1,"message":"677","line":52,"column":7,"nodeType":"645","messageId":"646","endLine":52,"endColumn":13},{"ruleId":"643","severity":1,"message":"782","line":79,"column":5,"nodeType":"645","messageId":"646","endLine":79,"endColumn":15},{"ruleId":"643","severity":1,"message":"783","line":212,"column":48,"nodeType":"645","messageId":"646","endLine":212,"endColumn":54},{"ruleId":"713","severity":1,"message":"714","line":331,"column":9,"nodeType":"715","messageId":"716","endLine":344,"endColumn":10},{"ruleId":"713","severity":1,"message":"714","line":744,"column":9,"nodeType":"715","messageId":"716","endLine":748,"endColumn":10},{"ruleId":"643","severity":1,"message":"784","line":752,"column":9,"nodeType":"645","messageId":"646","endLine":752,"endColumn":27},{"ruleId":"785","severity":1,"message":"786","line":798,"column":7,"nodeType":"787","messageId":"691","endLine":798,"endColumn":10},{"ruleId":"713","severity":1,"message":"714","line":1051,"column":11,"nodeType":"715","messageId":"716","endLine":1058,"endColumn":12},{"ruleId":"713","severity":1,"message":"714","line":1274,"column":13,"nodeType":"715","messageId":"716","endLine":1281,"endColumn":14},{"ruleId":"713","severity":1,"message":"714","line":1431,"column":13,"nodeType":"715","messageId":"716","endLine":1438,"endColumn":14},{"ruleId":"643","severity":1,"message":"788","line":1502,"column":15,"nodeType":"645","messageId":"646","endLine":1502,"endColumn":26},{"ruleId":"721","severity":1,"message":"722","line":1789,"column":9,"nodeType":"723","messageId":"724","endLine":1789,"endColumn":15},{"ruleId":"721","severity":1,"message":"722","line":1798,"column":9,"nodeType":"723","messageId":"724","endLine":1798,"endColumn":14},{"ruleId":"713","severity":1,"message":"714","line":2024,"column":9,"nodeType":"715","messageId":"716","endLine":2037,"endColumn":10},{"ruleId":"750","severity":1,"message":"755","line":2430,"column":36,"nodeType":"752","messageId":"753","endLine":2430,"endColumn":37,"suggestions":"789"},{"ruleId":"688","severity":1,"message":"706","line":2431,"column":47,"nodeType":"690","messageId":"691","endLine":2431,"endColumn":49},{"ruleId":"643","severity":1,"message":"790","line":2632,"column":107,"nodeType":"645","messageId":"646","endLine":2632,"endColumn":112},{"ruleId":"643","severity":1,"message":"791","line":3057,"column":11,"nodeType":"645","messageId":"646","endLine":3057,"endColumn":14},{"ruleId":"643","severity":1,"message":"792","line":3694,"column":17,"nodeType":"645","messageId":"646","endLine":3694,"endColumn":23},{"ruleId":"643","severity":1,"message":"767","line":4322,"column":13,"nodeType":"645","messageId":"646","endLine":4322,"endColumn":23},{"ruleId":"643","severity":1,"message":"768","line":4322,"column":25,"nodeType":"645","messageId":"646","endLine":4322,"endColumn":33},{"ruleId":"643","severity":1,"message":"769","line":4322,"column":35,"nodeType":"645","messageId":"646","endLine":4322,"endColumn":41},{"ruleId":"713","severity":1,"message":"714","line":4355,"column":17,"nodeType":"715","messageId":"716","endLine":4368,"endColumn":18},{"ruleId":"643","severity":1,"message":"727","line":4,"column":3,"nodeType":"645","messageId":"646","endLine":4,"endColumn":9},{"ruleId":"643","severity":1,"message":"728","line":12,"column":8,"nodeType":"645","messageId":"646","endLine":12,"endColumn":14},{"ruleId":"643","severity":1,"message":"665","line":13,"column":8,"nodeType":"645","messageId":"646","endLine":13,"endColumn":14},{"ruleId":"643","severity":1,"message":"697","line":14,"column":8,"nodeType":"645","messageId":"646","endLine":14,"endColumn":21},{"ruleId":"643","severity":1,"message":"729","line":15,"column":8,"nodeType":"645","messageId":"646","endLine":15,"endColumn":24},{"ruleId":"643","severity":1,"message":"659","line":16,"column":10,"nodeType":"645","messageId":"646","endLine":16,"endColumn":14},{"ruleId":"643","severity":1,"message":"793","line":25,"column":10,"nodeType":"645","messageId":"646","endLine":25,"endColumn":22},{"ruleId":"643","severity":1,"message":"676","line":27,"column":9,"nodeType":"645","messageId":"646","endLine":27,"endColumn":15},{"ruleId":"643","severity":1,"message":"733","line":43,"column":11,"nodeType":"645","messageId":"646","endLine":43,"endColumn":17},{"ruleId":"643","severity":1,"message":"734","line":43,"column":19,"nodeType":"645","messageId":"646","endLine":43,"endColumn":24},{"ruleId":"643","severity":1,"message":"735","line":59,"column":9,"nodeType":"645","messageId":"646","endLine":59,"endColumn":22},{"ruleId":"643","severity":1,"message":"794","line":78,"column":11,"nodeType":"645","messageId":"646","endLine":78,"endColumn":19},{"ruleId":"643","severity":1,"message":"687","line":6,"column":5,"nodeType":"645","messageId":"646","endLine":6,"endColumn":10},{"ruleId":"643","severity":1,"message":"795","line":12,"column":13,"nodeType":"645","messageId":"646","endLine":12,"endColumn":19},{"ruleId":"688","severity":1,"message":"689","line":15,"column":20,"nodeType":"690","messageId":"691","endLine":15,"endColumn":22},{"ruleId":"688","severity":1,"message":"689","line":59,"column":20,"nodeType":"690","messageId":"691","endLine":59,"endColumn":22},{"ruleId":"643","severity":1,"message":"796","line":58,"column":9,"nodeType":"645","messageId":"646","endLine":58,"endColumn":12},{"ruleId":"643","severity":1,"message":"659","line":25,"column":10,"nodeType":"645","messageId":"646","endLine":25,"endColumn":14},{"ruleId":"643","severity":1,"message":"665","line":28,"column":8,"nodeType":"645","messageId":"646","endLine":28,"endColumn":14},{"ruleId":"785","severity":1,"message":"797","line":62,"column":5,"nodeType":"787","messageId":"691","endLine":62,"endColumn":13},{"ruleId":"643","severity":1,"message":"735","line":77,"column":9,"nodeType":"645","messageId":"646","endLine":77,"endColumn":22},{"ruleId":"643","severity":1,"message":"735","line":117,"column":9,"nodeType":"645","messageId":"646","endLine":117,"endColumn":22},{"ruleId":"698","severity":1,"message":"699","line":219,"column":41,"nodeType":"700","messageId":"701","endLine":219,"endColumn":43},{"ruleId":"698","severity":1,"message":"699","line":233,"column":47,"nodeType":"700","messageId":"701","endLine":233,"endColumn":49},{"ruleId":"643","severity":1,"message":"790","line":420,"column":23,"nodeType":"645","messageId":"646","endLine":420,"endColumn":28},{"ruleId":"643","severity":1,"message":"798","line":462,"column":83,"nodeType":"645","messageId":"646","endLine":462,"endColumn":98},{"ruleId":"643","severity":1,"message":"658","line":2,"column":60,"nodeType":"645","messageId":"646","endLine":2,"endColumn":64},{"ruleId":"643","severity":1,"message":"669","line":3,"column":8,"nodeType":"645","messageId":"646","endLine":3,"endColumn":17},{"ruleId":"643","severity":1,"message":"654","line":6,"column":32,"nodeType":"645","messageId":"646","endLine":6,"endColumn":44},{"ruleId":"643","severity":1,"message":"660","line":6,"column":46,"nodeType":"645","messageId":"646","endLine":6,"endColumn":61},{"ruleId":"643","severity":1,"message":"675","line":29,"column":9,"nodeType":"645","messageId":"646","endLine":29,"endColumn":16},{"ruleId":"643","severity":1,"message":"680","line":36,"column":5,"nodeType":"645","messageId":"646","endLine":36,"endColumn":8},{"ruleId":"713","severity":1,"message":"714","line":145,"column":5,"nodeType":"715","messageId":"716","endLine":151,"endColumn":6},{"ruleId":"698","severity":1,"message":"699","line":158,"column":41,"nodeType":"700","messageId":"701","endLine":158,"endColumn":43},{"ruleId":"799","severity":1,"message":"800","line":302,"column":34,"nodeType":"690","messageId":"801","endLine":302,"endColumn":48},{"ruleId":"799","severity":1,"message":"800","line":353,"column":29,"nodeType":"690","messageId":"801","endLine":353,"endColumn":42},{"ruleId":"643","severity":1,"message":"802","line":441,"column":11,"nodeType":"645","messageId":"646","endLine":441,"endColumn":21},{"ruleId":"643","severity":1,"message":"803","line":574,"column":11,"nodeType":"645","messageId":"646","endLine":574,"endColumn":24},{"ruleId":"738","severity":1,"message":"739","line":770,"column":15,"nodeType":"684","endLine":770,"endColumn":63},{"ruleId":"643","severity":1,"message":"740","line":834,"column":5,"nodeType":"645","messageId":"646","endLine":834,"endColumn":12},{"ruleId":"643","severity":1,"message":"772","line":835,"column":11,"nodeType":"645","messageId":"646","endLine":835,"endColumn":20},{"ruleId":"738","severity":1,"message":"739","line":870,"column":15,"nodeType":"684","endLine":870,"endColumn":63},{"ruleId":"713","severity":1,"message":"714","line":901,"column":5,"nodeType":"715","messageId":"716","endLine":904,"endColumn":6},{"ruleId":"713","severity":1,"message":"714","line":906,"column":5,"nodeType":"715","messageId":"716","endLine":909,"endColumn":6},{"ruleId":"643","severity":1,"message":"804","line":1042,"column":61,"nodeType":"645","messageId":"646","endLine":1042,"endColumn":78},{"ruleId":"643","severity":1,"message":"773","line":1042,"column":80,"nodeType":"645","messageId":"646","endLine":1042,"endColumn":85},{"ruleId":"643","severity":1,"message":"772","line":1042,"column":118,"nodeType":"645","messageId":"646","endLine":1042,"endColumn":127},{"ruleId":"805","severity":1,"message":"806","line":1212,"column":11,"nodeType":"807","endLine":1212,"endColumn":42},{"ruleId":"649","replacedBy":"808"},{"ruleId":"651","replacedBy":"809"},{"ruleId":"643","severity":1,"message":"656","line":5,"column":3,"nodeType":"645","messageId":"646","endLine":5,"endColumn":8},{"ruleId":"643","severity":1,"message":"669","line":8,"column":8,"nodeType":"645","messageId":"646","endLine":8,"endColumn":17},{"ruleId":"643","severity":1,"message":"654","line":11,"column":32,"nodeType":"645","messageId":"646","endLine":11,"endColumn":44},{"ruleId":"643","severity":1,"message":"810","line":132,"column":32,"nodeType":"645","messageId":"646","endLine":132,"endColumn":48},{"ruleId":"643","severity":1,"message":"811","line":154,"column":15,"nodeType":"645","messageId":"646","endLine":154,"endColumn":28},{"ruleId":"643","severity":1,"message":"742","line":353,"column":21,"nodeType":"645","messageId":"646","endLine":353,"endColumn":27},{"ruleId":"682","severity":1,"message":"683","line":519,"column":17,"nodeType":"684","endLine":519,"endColumn":54},{"ruleId":"682","severity":1,"message":"683","line":577,"column":17,"nodeType":"684","endLine":577,"endColumn":60},{"ruleId":"643","severity":1,"message":"810","line":133,"column":32,"nodeType":"645","messageId":"646","endLine":133,"endColumn":48},{"ruleId":"643","severity":1,"message":"811","line":150,"column":15,"nodeType":"645","messageId":"646","endLine":150,"endColumn":28},{"ruleId":"643","severity":1,"message":"687","line":7,"column":5,"nodeType":"645","messageId":"646","endLine":7,"endColumn":10},{"ruleId":"643","severity":1,"message":"795","line":20,"column":9,"nodeType":"645","messageId":"646","endLine":20,"endColumn":15},{"ruleId":"688","severity":1,"message":"689","line":23,"column":16,"nodeType":"690","messageId":"691","endLine":23,"endColumn":18},{"ruleId":"688","severity":1,"message":"689","line":74,"column":16,"nodeType":"690","messageId":"691","endLine":74,"endColumn":18},{"ruleId":"649","replacedBy":"812"},{"ruleId":"651","replacedBy":"813"},{"ruleId":"643","severity":1,"message":"669","line":9,"column":8,"nodeType":"645","messageId":"646","endLine":9,"endColumn":17},{"ruleId":"643","severity":1,"message":"653","line":10,"column":10,"nodeType":"645","messageId":"646","endLine":10,"endColumn":30},{"ruleId":"643","severity":1,"message":"814","line":10,"column":32,"nodeType":"645","messageId":"646","endLine":10,"endColumn":47},{"ruleId":"643","severity":1,"message":"815","line":14,"column":8,"nodeType":"645","messageId":"646","endLine":14,"endColumn":16},{"ruleId":"643","severity":1,"message":"659","line":19,"column":10,"nodeType":"645","messageId":"646","endLine":19,"endColumn":14},{"ruleId":"713","severity":1,"message":"714","line":85,"column":25,"nodeType":"715","messageId":"716","endLine":114,"endColumn":26},{"ruleId":"717","severity":1,"message":"718","line":103,"column":29,"nodeType":"719","messageId":"720","endLine":104,"endColumn":68},{"ruleId":"717","severity":1,"message":"718","line":105,"column":29,"nodeType":"719","messageId":"720","endLine":112,"endColumn":39},{"ruleId":"643","severity":1,"message":"810","line":214,"column":42,"nodeType":"645","messageId":"646","endLine":214,"endColumn":58},{"ruleId":"643","severity":1,"message":"811","line":235,"column":29,"nodeType":"645","messageId":"646","endLine":235,"endColumn":42},{"ruleId":"643","severity":1,"message":"816","line":270,"column":49,"nodeType":"645","messageId":"646","endLine":270,"endColumn":63},{"ruleId":"643","severity":1,"message":"817","line":270,"column":65,"nodeType":"645","messageId":"646","endLine":270,"endColumn":79},{"ruleId":"643","severity":1,"message":"669","line":9,"column":8,"nodeType":"645","messageId":"646","endLine":9,"endColumn":17},{"ruleId":"643","severity":1,"message":"653","line":10,"column":10,"nodeType":"645","messageId":"646","endLine":10,"endColumn":30},{"ruleId":"643","severity":1,"message":"814","line":10,"column":32,"nodeType":"645","messageId":"646","endLine":10,"endColumn":47},{"ruleId":"643","severity":1,"message":"815","line":14,"column":8,"nodeType":"645","messageId":"646","endLine":14,"endColumn":16},{"ruleId":"643","severity":1,"message":"659","line":19,"column":10,"nodeType":"645","messageId":"646","endLine":19,"endColumn":14},{"ruleId":"713","severity":1,"message":"714","line":85,"column":25,"nodeType":"715","messageId":"716","endLine":114,"endColumn":26},{"ruleId":"717","severity":1,"message":"718","line":103,"column":29,"nodeType":"719","messageId":"720","endLine":104,"endColumn":68},{"ruleId":"717","severity":1,"message":"718","line":105,"column":29,"nodeType":"719","messageId":"720","endLine":112,"endColumn":39},{"ruleId":"643","severity":1,"message":"816","line":290,"column":49,"nodeType":"645","messageId":"646","endLine":290,"endColumn":63},{"ruleId":"643","severity":1,"message":"817","line":290,"column":65,"nodeType":"645","messageId":"646","endLine":290,"endColumn":79},{"ruleId":"643","severity":1,"message":"818","line":4,"column":3,"nodeType":"645","messageId":"646","endLine":4,"endColumn":8},{"ruleId":"643","severity":1,"message":"664","line":5,"column":3,"nodeType":"645","messageId":"646","endLine":5,"endColumn":8},{"ruleId":"643","severity":1,"message":"665","line":6,"column":3,"nodeType":"645","messageId":"646","endLine":6,"endColumn":9},{"ruleId":"643","severity":1,"message":"819","line":7,"column":3,"nodeType":"645","messageId":"646","endLine":7,"endColumn":8},{"ruleId":"643","severity":1,"message":"656","line":10,"column":3,"nodeType":"645","messageId":"646","endLine":10,"endColumn":8},{"ruleId":"643","severity":1,"message":"820","line":11,"column":3,"nodeType":"645","messageId":"646","endLine":11,"endColumn":9},{"ruleId":"643","severity":1,"message":"821","line":12,"column":3,"nodeType":"645","messageId":"646","endLine":12,"endColumn":17},{"ruleId":"643","severity":1,"message":"669","line":15,"column":8,"nodeType":"645","messageId":"646","endLine":15,"endColumn":17},{"ruleId":"643","severity":1,"message":"822","line":16,"column":8,"nodeType":"645","messageId":"646","endLine":16,"endColumn":15},{"ruleId":"643","severity":1,"message":"823","line":17,"column":8,"nodeType":"645","messageId":"646","endLine":17,"endColumn":14},{"ruleId":"643","severity":1,"message":"654","line":20,"column":10,"nodeType":"645","messageId":"646","endLine":20,"endColumn":22},{"ruleId":"643","severity":1,"message":"824","line":21,"column":8,"nodeType":"645","messageId":"646","endLine":21,"endColumn":14},{"ruleId":"643","severity":1,"message":"825","line":24,"column":8,"nodeType":"645","messageId":"646","endLine":24,"endColumn":19},{"ruleId":"643","severity":1,"message":"826","line":25,"column":10,"nodeType":"645","messageId":"646","endLine":25,"endColumn":24},{"ruleId":"643","severity":1,"message":"781","line":26,"column":10,"nodeType":"645","messageId":"646","endLine":26,"endColumn":21},{"ruleId":"643","severity":1,"message":"827","line":28,"column":8,"nodeType":"645","messageId":"646","endLine":28,"endColumn":14},{"ruleId":"643","severity":1,"message":"729","line":29,"column":8,"nodeType":"645","messageId":"646","endLine":29,"endColumn":24},{"ruleId":"643","severity":1,"message":"696","line":30,"column":10,"nodeType":"645","messageId":"646","endLine":30,"endColumn":14},{"ruleId":"643","severity":1,"message":"659","line":30,"column":16,"nodeType":"645","messageId":"646","endLine":30,"endColumn":20},{"ruleId":"643","severity":1,"message":"655","line":30,"column":22,"nodeType":"645","messageId":"646","endLine":30,"endColumn":24},{"ruleId":"643","severity":1,"message":"828","line":31,"column":10,"nodeType":"645","messageId":"646","endLine":31,"endColumn":20},{"ruleId":"643","severity":1,"message":"829","line":32,"column":10,"nodeType":"645","messageId":"646","endLine":32,"endColumn":23},{"ruleId":"643","severity":1,"message":"830","line":33,"column":10,"nodeType":"645","messageId":"646","endLine":33,"endColumn":23},{"ruleId":"643","severity":1,"message":"831","line":34,"column":8,"nodeType":"645","messageId":"646","endLine":34,"endColumn":15},{"ruleId":"643","severity":1,"message":"832","line":35,"column":8,"nodeType":"645","messageId":"646","endLine":35,"endColumn":16},{"ruleId":"643","severity":1,"message":"833","line":36,"column":8,"nodeType":"645","messageId":"646","endLine":36,"endColumn":21},{"ruleId":"643","severity":1,"message":"834","line":37,"column":8,"nodeType":"645","messageId":"646","endLine":37,"endColumn":15},{"ruleId":"643","severity":1,"message":"835","line":38,"column":8,"nodeType":"645","messageId":"646","endLine":38,"endColumn":20},{"ruleId":"643","severity":1,"message":"697","line":46,"column":8,"nodeType":"645","messageId":"646","endLine":46,"endColumn":21},{"ruleId":"643","severity":1,"message":"836","line":47,"column":10,"nodeType":"645","messageId":"646","endLine":47,"endColumn":17},{"ruleId":"643","severity":1,"message":"675","line":50,"column":9,"nodeType":"645","messageId":"646","endLine":50,"endColumn":16},{"ruleId":"643","severity":1,"message":"677","line":51,"column":7,"nodeType":"645","messageId":"646","endLine":51,"endColumn":13},{"ruleId":"643","severity":1,"message":"837","line":1,"column":17,"nodeType":"645","messageId":"646","endLine":1,"endColumn":25},{"ruleId":"643","severity":1,"message":"838","line":8,"column":8,"nodeType":"645","messageId":"646","endLine":8,"endColumn":17},{"ruleId":"839","severity":1,"message":"840","line":16,"column":20,"nodeType":"841","messageId":"691","endLine":16,"endColumn":23},{"ruleId":"643","severity":1,"message":"687","line":4,"column":5,"nodeType":"645","messageId":"646","endLine":4,"endColumn":10},{"ruleId":"643","severity":1,"message":"795","line":10,"column":13,"nodeType":"645","messageId":"646","endLine":10,"endColumn":19},{"ruleId":"688","severity":1,"message":"689","line":13,"column":20,"nodeType":"690","messageId":"691","endLine":13,"endColumn":22},{"ruleId":"688","severity":1,"message":"689","line":61,"column":20,"nodeType":"690","messageId":"691","endLine":61,"endColumn":22},{"ruleId":"643","severity":1,"message":"658","line":2,"column":60,"nodeType":"645","messageId":"646","endLine":2,"endColumn":64},{"ruleId":"643","severity":1,"message":"669","line":3,"column":8,"nodeType":"645","messageId":"646","endLine":3,"endColumn":17},{"ruleId":"643","severity":1,"message":"660","line":6,"column":32,"nodeType":"645","messageId":"646","endLine":6,"endColumn":47},{"ruleId":"643","severity":1,"message":"675","line":31,"column":9,"nodeType":"645","messageId":"646","endLine":31,"endColumn":16},{"ruleId":"643","severity":1,"message":"677","line":33,"column":7,"nodeType":"645","messageId":"646","endLine":33,"endColumn":13},{"ruleId":"643","severity":1,"message":"680","line":38,"column":5,"nodeType":"645","messageId":"646","endLine":38,"endColumn":8},{"ruleId":"785","severity":1,"message":"842","line":75,"column":9,"nodeType":"787","messageId":"691","endLine":75,"endColumn":15},{"ruleId":"713","severity":1,"message":"714","line":116,"column":9,"nodeType":"715","messageId":"716","endLine":122,"endColumn":10},{"ruleId":"698","severity":1,"message":"699","line":129,"column":51,"nodeType":"700","messageId":"701","endLine":129,"endColumn":53},{"ruleId":"698","severity":1,"message":"699","line":168,"column":51,"nodeType":"700","messageId":"701","endLine":168,"endColumn":53},{"ruleId":"643","severity":1,"message":"802","line":277,"column":15,"nodeType":"645","messageId":"646","endLine":277,"endColumn":25},{"ruleId":"643","severity":1,"message":"843","line":277,"column":53,"nodeType":"645","messageId":"646","endLine":277,"endColumn":59},{"ruleId":"643","severity":1,"message":"803","line":350,"column":15,"nodeType":"645","messageId":"646","endLine":350,"endColumn":28},{"ruleId":"738","severity":1,"message":"739","line":554,"column":29,"nodeType":"684","endLine":554,"endColumn":77},{"ruleId":"643","severity":1,"message":"740","line":577,"column":9,"nodeType":"645","messageId":"646","endLine":577,"endColumn":16},{"ruleId":"643","severity":1,"message":"772","line":578,"column":15,"nodeType":"645","messageId":"646","endLine":578,"endColumn":24},{"ruleId":"738","severity":1,"message":"739","line":612,"column":29,"nodeType":"684","endLine":612,"endColumn":77},{"ruleId":"713","severity":1,"message":"714","line":643,"column":9,"nodeType":"715","messageId":"716","endLine":646,"endColumn":10},{"ruleId":"713","severity":1,"message":"714","line":648,"column":9,"nodeType":"715","messageId":"716","endLine":651,"endColumn":10},{"ruleId":"643","severity":1,"message":"767","line":732,"column":17,"nodeType":"645","messageId":"646","endLine":732,"endColumn":27},{"ruleId":"643","severity":1,"message":"768","line":732,"column":29,"nodeType":"645","messageId":"646","endLine":732,"endColumn":37},{"ruleId":"643","severity":1,"message":"769","line":732,"column":39,"nodeType":"645","messageId":"646","endLine":732,"endColumn":45},{"ruleId":"643","severity":1,"message":"741","line":732,"column":47,"nodeType":"645","messageId":"646","endLine":732,"endColumn":55},{"ruleId":"643","severity":1,"message":"773","line":798,"column":97,"nodeType":"645","messageId":"646","endLine":798,"endColumn":102},{"ruleId":"643","severity":1,"message":"844","line":798,"column":135,"nodeType":"645","messageId":"646","endLine":798,"endColumn":157},{"ruleId":"643","severity":1,"message":"837","line":1,"column":17,"nodeType":"645","messageId":"646","endLine":1,"endColumn":25},{"ruleId":"643","severity":1,"message":"845","line":1,"column":27,"nodeType":"645","messageId":"646","endLine":1,"endColumn":36},{"ruleId":"643","severity":1,"message":"654","line":3,"column":10,"nodeType":"645","messageId":"646","endLine":3,"endColumn":22},{"ruleId":"643","severity":1,"message":"653","line":3,"column":24,"nodeType":"645","messageId":"646","endLine":3,"endColumn":44},{"ruleId":"643","severity":1,"message":"826","line":4,"column":10,"nodeType":"645","messageId":"646","endLine":4,"endColumn":24},{"ruleId":"738","severity":1,"message":"739","line":44,"column":11,"nodeType":"684","endLine":47,"endColumn":13},{"ruleId":"738","severity":1,"message":"739","line":53,"column":13,"nodeType":"684","endLine":56,"endColumn":15},{"ruleId":"738","severity":1,"message":"739","line":61,"column":11,"nodeType":"684","endLine":64,"endColumn":13},{"ruleId":"738","severity":1,"message":"739","line":74,"column":11,"nodeType":"684","endLine":77,"endColumn":13},{"ruleId":"643","severity":1,"message":"846","line":102,"column":9,"nodeType":"645","messageId":"646","endLine":102,"endColumn":15},{"ruleId":"643","severity":1,"message":"847","line":191,"column":25,"nodeType":"645","messageId":"646","endLine":191,"endColumn":32},{"ruleId":"643","severity":1,"message":"848","line":191,"column":34,"nodeType":"645","messageId":"646","endLine":191,"endColumn":49},{"ruleId":"643","severity":1,"message":"849","line":191,"column":51,"nodeType":"645","messageId":"646","endLine":191,"endColumn":55},{"ruleId":"643","severity":1,"message":"850","line":192,"column":25,"nodeType":"645","messageId":"646","endLine":192,"endColumn":44},{"ruleId":"643","severity":1,"message":"851","line":192,"column":46,"nodeType":"645","messageId":"646","endLine":192,"endColumn":62},{"ruleId":"643","severity":1,"message":"852","line":192,"column":64,"nodeType":"645","messageId":"646","endLine":192,"endColumn":84},{"ruleId":"643","severity":1,"message":"853","line":192,"column":86,"nodeType":"645","messageId":"646","endLine":192,"endColumn":96},{"ruleId":"854","severity":1,"message":"855","line":281,"column":33,"nodeType":"645","messageId":"856","endLine":281,"endColumn":37},{"ruleId":"750","severity":1,"message":"857","line":350,"column":55,"nodeType":"858","messageId":"753","endLine":350,"endColumn":56,"suggestions":"859"},{"ruleId":"750","severity":1,"message":"857","line":350,"column":69,"nodeType":"858","messageId":"753","endLine":350,"endColumn":70,"suggestions":"860"},{"ruleId":"643","severity":1,"message":"861","line":548,"column":15,"nodeType":"645","messageId":"646","endLine":548,"endColumn":21},{"ruleId":"643","severity":1,"message":"862","line":560,"column":28,"nodeType":"645","messageId":"646","endLine":560,"endColumn":31},{"ruleId":"643","severity":1,"message":"863","line":560,"column":33,"nodeType":"645","messageId":"646","endLine":560,"endColumn":35},{"ruleId":"643","severity":1,"message":"864","line":560,"column":37,"nodeType":"645","messageId":"646","endLine":560,"endColumn":45},{"ruleId":"643","severity":1,"message":"665","line":2,"column":17,"nodeType":"645","messageId":"646","endLine":2,"endColumn":23},{"ruleId":"643","severity":1,"message":"865","line":2,"column":40,"nodeType":"645","messageId":"646","endLine":2,"endColumn":47},{"ruleId":"643","severity":1,"message":"654","line":3,"column":32,"nodeType":"645","messageId":"646","endLine":3,"endColumn":44},{"ruleId":"643","severity":1,"message":"661","line":10,"column":10,"nodeType":"645","messageId":"646","endLine":10,"endColumn":22},{"ruleId":"643","severity":1,"message":"746","line":13,"column":10,"nodeType":"645","messageId":"646","endLine":13,"endColumn":23},{"ruleId":"643","severity":1,"message":"659","line":14,"column":10,"nodeType":"645","messageId":"646","endLine":14,"endColumn":14},{"ruleId":"643","severity":1,"message":"696","line":14,"column":20,"nodeType":"645","messageId":"646","endLine":14,"endColumn":24},{"ruleId":"643","severity":1,"message":"655","line":14,"column":26,"nodeType":"645","messageId":"646","endLine":14,"endColumn":28},{"ruleId":"643","severity":1,"message":"866","line":17,"column":20,"nodeType":"645","messageId":"646","endLine":17,"endColumn":29},{"ruleId":"643","severity":1,"message":"677","line":19,"column":7,"nodeType":"645","messageId":"646","endLine":19,"endColumn":13},{"ruleId":"643","severity":1,"message":"867","line":379,"column":11,"nodeType":"645","messageId":"646","endLine":379,"endColumn":17},{"ruleId":"785","severity":1,"message":"868","line":392,"column":69,"nodeType":"787","messageId":"691","endLine":392,"endColumn":76},{"ruleId":"643","severity":1,"message":"869","line":447,"column":19,"nodeType":"645","messageId":"646","endLine":447,"endColumn":26},{"ruleId":"643","severity":1,"message":"870","line":448,"column":9,"nodeType":"645","messageId":"646","endLine":448,"endColumn":13},{"ruleId":"682","severity":1,"message":"683","line":575,"column":69,"nodeType":"684","endLine":575,"endColumn":104},{"ruleId":"643","severity":1,"message":"664","line":4,"column":3,"nodeType":"645","messageId":"646","endLine":4,"endColumn":8},{"ruleId":"643","severity":1,"message":"871","line":5,"column":3,"nodeType":"645","messageId":"646","endLine":5,"endColumn":7},{"ruleId":"643","severity":1,"message":"819","line":7,"column":3,"nodeType":"645","messageId":"646","endLine":7,"endColumn":8},{"ruleId":"643","severity":1,"message":"653","line":13,"column":10,"nodeType":"645","messageId":"646","endLine":13,"endColumn":30},{"ruleId":"643","severity":1,"message":"872","line":19,"column":10,"nodeType":"645","messageId":"646","endLine":19,"endColumn":23},{"ruleId":"643","severity":1,"message":"669","line":9,"column":8,"nodeType":"645","messageId":"646","endLine":9,"endColumn":17},{"ruleId":"643","severity":1,"message":"653","line":10,"column":10,"nodeType":"645","messageId":"646","endLine":10,"endColumn":30},{"ruleId":"643","severity":1,"message":"814","line":10,"column":32,"nodeType":"645","messageId":"646","endLine":10,"endColumn":47},{"ruleId":"643","severity":1,"message":"815","line":14,"column":8,"nodeType":"645","messageId":"646","endLine":14,"endColumn":16},{"ruleId":"643","severity":1,"message":"659","line":19,"column":10,"nodeType":"645","messageId":"646","endLine":19,"endColumn":14},{"ruleId":"713","severity":1,"message":"714","line":85,"column":25,"nodeType":"715","messageId":"716","endLine":114,"endColumn":26},{"ruleId":"717","severity":1,"message":"718","line":103,"column":29,"nodeType":"719","messageId":"720","endLine":104,"endColumn":68},{"ruleId":"717","severity":1,"message":"718","line":105,"column":29,"nodeType":"719","messageId":"720","endLine":112,"endColumn":39},{"ruleId":"643","severity":1,"message":"816","line":290,"column":49,"nodeType":"645","messageId":"646","endLine":290,"endColumn":63},{"ruleId":"643","severity":1,"message":"817","line":290,"column":65,"nodeType":"645","messageId":"646","endLine":290,"endColumn":79},{"ruleId":"643","severity":1,"message":"656","line":6,"column":3,"nodeType":"645","messageId":"646","endLine":6,"endColumn":8},{"ruleId":"643","severity":1,"message":"657","line":7,"column":3,"nodeType":"645","messageId":"646","endLine":7,"endColumn":10},{"ruleId":"643","severity":1,"message":"658","line":8,"column":3,"nodeType":"645","messageId":"646","endLine":8,"endColumn":7},{"ruleId":"643","severity":1,"message":"659","line":15,"column":10,"nodeType":"645","messageId":"646","endLine":15,"endColumn":14},{"ruleId":"643","severity":1,"message":"655","line":15,"column":16,"nodeType":"645","messageId":"646","endLine":15,"endColumn":18},{"ruleId":"643","severity":1,"message":"653","line":17,"column":10,"nodeType":"645","messageId":"646","endLine":17,"endColumn":30},{"ruleId":"643","severity":1,"message":"654","line":17,"column":32,"nodeType":"645","messageId":"646","endLine":17,"endColumn":44},{"ruleId":"643","severity":1,"message":"660","line":17,"column":46,"nodeType":"645","messageId":"646","endLine":17,"endColumn":61},{"ruleId":"643","severity":1,"message":"661","line":18,"column":10,"nodeType":"645","messageId":"646","endLine":18,"endColumn":22},{"ruleId":"643","severity":1,"message":"746","line":18,"column":10,"nodeType":"645","messageId":"646","endLine":18,"endColumn":23},{"ruleId":"643","severity":1,"message":"862","line":358,"column":28,"nodeType":"645","messageId":"646","endLine":358,"endColumn":31},{"ruleId":"643","severity":1,"message":"863","line":358,"column":33,"nodeType":"645","messageId":"646","endLine":358,"endColumn":35},{"ruleId":"643","severity":1,"message":"864","line":358,"column":37,"nodeType":"645","messageId":"646","endLine":358,"endColumn":45},{"ruleId":"643","severity":1,"message":"845","line":2,"column":27,"nodeType":"645","messageId":"646","endLine":2,"endColumn":36},{"ruleId":"643","severity":1,"message":"693","line":3,"column":10,"nodeType":"645","messageId":"646","endLine":3,"endColumn":20},{"ruleId":"643","severity":1,"message":"659","line":8,"column":14,"nodeType":"645","messageId":"646","endLine":8,"endColumn":18},{"ruleId":"643","severity":1,"message":"693","line":2,"column":10,"nodeType":"645","messageId":"646","endLine":2,"endColumn":20},{"ruleId":"643","severity":1,"message":"694","line":4,"column":5,"nodeType":"645","messageId":"646","endLine":4,"endColumn":9},{"ruleId":"643","severity":1,"message":"695","line":5,"column":5,"nodeType":"645","messageId":"646","endLine":5,"endColumn":12},{"ruleId":"643","severity":1,"message":"665","line":6,"column":5,"nodeType":"645","messageId":"646","endLine":6,"endColumn":11},{"ruleId":"643","severity":1,"message":"656","line":7,"column":5,"nodeType":"645","messageId":"646","endLine":7,"endColumn":10},{"ruleId":"643","severity":1,"message":"659","line":15,"column":10,"nodeType":"645","messageId":"646","endLine":15,"endColumn":14},{"ruleId":"643","severity":1,"message":"696","line":15,"column":20,"nodeType":"645","messageId":"646","endLine":15,"endColumn":24},{"ruleId":"643","severity":1,"message":"697","line":16,"column":8,"nodeType":"645","messageId":"646","endLine":16,"endColumn":21},{"ruleId":"698","severity":1,"message":"699","line":49,"column":36,"nodeType":"700","messageId":"701","endLine":49,"endColumn":38},{"ruleId":"698","severity":1,"message":"699","line":65,"column":32,"nodeType":"700","messageId":"701","endLine":65,"endColumn":34},{"ruleId":"698","severity":1,"message":"699","line":74,"column":37,"nodeType":"700","messageId":"701","endLine":74,"endColumn":39},{"ruleId":"698","severity":1,"message":"699","line":80,"column":23,"nodeType":"700","messageId":"701","endLine":80,"endColumn":25},{"ruleId":"698","severity":1,"message":"699","line":82,"column":31,"nodeType":"700","messageId":"701","endLine":82,"endColumn":33},{"ruleId":"688","severity":1,"message":"689","line":86,"column":32,"nodeType":"690","messageId":"691","endLine":86,"endColumn":34},{"ruleId":"702","severity":1,"message":"703","line":104,"column":8,"nodeType":"704","endLine":104,"endColumn":10,"suggestions":"873"},{"ruleId":"698","severity":1,"message":"699","line":114,"column":39,"nodeType":"700","messageId":"701","endLine":114,"endColumn":41},{"ruleId":"698","severity":1,"message":"699","line":115,"column":49,"nodeType":"700","messageId":"701","endLine":115,"endColumn":51},{"ruleId":"688","severity":1,"message":"706","line":124,"column":39,"nodeType":"690","messageId":"691","endLine":124,"endColumn":41},{"ruleId":"698","severity":1,"message":"699","line":137,"column":39,"nodeType":"700","messageId":"701","endLine":137,"endColumn":41},{"ruleId":"702","severity":1,"message":"707","line":152,"column":8,"nodeType":"704","endLine":152,"endColumn":20,"suggestions":"874"},{"ruleId":"682","severity":1,"message":"709","line":202,"column":21,"nodeType":"684","endLine":207,"endColumn":22},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Praviders' is defined but never used.","'WalkInMesasure' is defined but never used.","no-native-reassign",["875"],"no-negated-in-lhs",["876"],"'createFromIconfontCN' is defined but never used.","'SyncOutlined' is defined but never used.","'pX' is defined but never used.","'Modal' is defined but never used.","'message' is defined but never used.","'Spin' is defined but never used.","'mTop' is defined but never used.","'LoadingOutlined' is defined but never used.","'fetchRequest' is defined but never used.",["875"],["876"],"'Input' is defined but never used.","'Button' is defined but never used.","'Calendar' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Draggable' is defined but never used.","'horse' is defined but never used.","'rabbit' is defined but never used.","'dui' is defined but never used.","'female' is defined but never used.","'male' is defined but never used.","'SubMenu' is assigned a value but never used.","'Option' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'storage' is assigned a value but never used.","'errPatientId' is assigned a value but never used.","'url' is assigned a value but never used.","'userImage' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["875"],["876"],"'token' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'px' is defined but never used.","'useHistory' is defined but never used.","'Menu' is defined but never used.","'Popover' is defined but never used.","'MTop' is defined but never used.","'electronStore' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.","ArrayExpression",["877"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["878"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["875"],["876"],"'mellaLogo' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["875"],["876"],"'Switch' is defined but never used.","'Slider' is defined but never used.","'temporaryStorage' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'options' is assigned a value but never used.","'disabled' is assigned a value but never used.","'bounds' is assigned a value but never used.",["875"],["876"],"'echarts' is defined but never used.","'fetchRequest1' is defined but never used.","'num' is assigned a value but never used.","'wen1' is assigned a value but never used.","'placeholder1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["879","880"],"Unnecessary escape character: \\-.",["881","882"],["883","884"],["885","886"],["887","888"],["889","890"],["891","892"],["893","894"],["895","896"],["897","898"],["899","900"],["901","902"],"'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'measuerStatus' is assigned a value but never used.","'petName' is assigned a value but never used.","'breedName' is assigned a value but never used.","'isMix' is assigned a value but never used.","'birthday' is assigned a value but never used.","'weight' is assigned a value but never used.",["903","904"],["905","906"],["907","908"],["909","910"],"'Tooltip' is defined but never used.","'FetchEszVet' is defined but never used.","'biggieSave' is assigned a value but never used.","'gender' is assigned a value but never used.","'lastConnectionTime' is assigned a value but never used.","no-dupe-keys","Duplicate key '194'.","ObjectExpression","'weightUnits' is assigned a value but never used.",["911","912"],"'petId' is assigned a value but never used.","'pas' is assigned a value but never used.","'temp15' is assigned a value but never used.","'parseGeoJSON' is defined but never used.","'isUnKnow' is assigned a value but never used.","'header' is assigned a value but never used.","'mar' is assigned a value but never used.","Duplicate key 'disabled'.","'assignOwnerName' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","'petSpecies' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["875"],["876"],"'lastOrganization' is assigned a value but never used.","'connectionKey' is assigned a value but never used.",["875"],["876"],"'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'Table' is defined but never used.","'Space' is defined but never used.","'Select' is defined but never used.","'ConfigProvider' is defined but never used.","'Button1' is defined but never used.","'moment' is defined but never used.","'MaxMin' is defined but never used.","'Highlighter' is defined but never used.","'SearchOutlined' is defined but never used.","'gender' is defined but never used.","'stopBubble' is defined but never used.","'fetchRequest4' is defined but never used.","'fetchRhapsody' is defined but never used.","'jinggao' is defined but never used.","'redclose' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'SelectionBox' is defined but never used.","'options' is defined but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","Duplicate key 'imgurl'.","'imgurl' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","'useEffect' is defined but never used.","'params' is assigned a value but never used.","'bree_id' is assigned a value but never used.","'animalcolour_id' is assigned a value but never used.","'guid' is assigned a value but never used.","'referring_clinic_id' is assigned a value but never used.","'referring_vet_id' is assigned a value but never used.","'residence_contact_id' is assigned a value but never used.","'species_id' is assigned a value but never used.","no-const-assign","'name' is constant.","const","Unnecessary escape character: \\\".","TemplateElement",["913","914"],["915","916"],"'chazhi' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'BackTop' is defined but never used.","'addQRCode' is defined but never used.","'isCode' is assigned a value but never used.","Duplicate key 'opacity'.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","'Form' is defined but never used.","'fetchRequest2' is defined but never used.",["917"],["918"],"no-global-assign","no-unsafe-negation",{"desc":"919","fix":"920"},{"desc":"921","fix":"922"},{"messageId":"923","fix":"924","desc":"925"},{"messageId":"926","fix":"927","desc":"928"},{"messageId":"923","fix":"929","desc":"925"},{"messageId":"926","fix":"930","desc":"928"},{"messageId":"923","fix":"931","desc":"925"},{"messageId":"926","fix":"932","desc":"928"},{"messageId":"923","fix":"933","desc":"925"},{"messageId":"926","fix":"934","desc":"928"},{"messageId":"923","fix":"935","desc":"925"},{"messageId":"926","fix":"936","desc":"928"},{"messageId":"923","fix":"937","desc":"925"},{"messageId":"926","fix":"938","desc":"928"},{"messageId":"923","fix":"939","desc":"925"},{"messageId":"926","fix":"940","desc":"928"},{"messageId":"923","fix":"941","desc":"925"},{"messageId":"926","fix":"942","desc":"928"},{"messageId":"923","fix":"943","desc":"925"},{"messageId":"926","fix":"944","desc":"928"},{"messageId":"923","fix":"945","desc":"925"},{"messageId":"926","fix":"946","desc":"928"},{"messageId":"923","fix":"947","desc":"925"},{"messageId":"926","fix":"948","desc":"928"},{"messageId":"923","fix":"949","desc":"925"},{"messageId":"926","fix":"950","desc":"928"},{"messageId":"923","fix":"951","desc":"925"},{"messageId":"926","fix":"952","desc":"928"},{"messageId":"923","fix":"953","desc":"925"},{"messageId":"926","fix":"954","desc":"928"},{"messageId":"923","fix":"955","desc":"925"},{"messageId":"926","fix":"956","desc":"928"},{"messageId":"923","fix":"957","desc":"925"},{"messageId":"926","fix":"958","desc":"928"},{"messageId":"923","fix":"959","desc":"925"},{"messageId":"926","fix":"960","desc":"928"},{"messageId":"923","fix":"961","desc":"925"},{"messageId":"926","fix":"962","desc":"928"},{"messageId":"923","fix":"963","desc":"925"},{"messageId":"926","fix":"964","desc":"928"},{"desc":"919","fix":"965"},{"desc":"921","fix":"966"},"Update the dependencies array to be: [listDate]",{"range":"967","text":"968"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"969","text":"970"},"removeEscape",{"range":"971","text":"972"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"973","text":"974"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"975","text":"972"},{"range":"976","text":"974"},{"range":"977","text":"972"},{"range":"978","text":"974"},{"range":"979","text":"972"},{"range":"980","text":"974"},{"range":"981","text":"972"},{"range":"982","text":"974"},{"range":"983","text":"972"},{"range":"984","text":"974"},{"range":"985","text":"972"},{"range":"986","text":"974"},{"range":"987","text":"972"},{"range":"988","text":"974"},{"range":"989","text":"972"},{"range":"990","text":"974"},{"range":"991","text":"972"},{"range":"992","text":"974"},{"range":"993","text":"972"},{"range":"994","text":"974"},{"range":"995","text":"972"},{"range":"996","text":"974"},{"range":"997","text":"972"},{"range":"998","text":"974"},{"range":"999","text":"972"},{"range":"1000","text":"974"},{"range":"1001","text":"972"},{"range":"1002","text":"974"},{"range":"1003","text":"972"},{"range":"1004","text":"974"},{"range":"1005","text":"972"},{"range":"1006","text":"974"},{"range":"1007","text":"972"},{"range":"1008","text":"974"},{"range":"1009","text":"972"},{"range":"1010","text":"974"},{"range":"1011","text":"968"},{"range":"1012","text":"970"},[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]",[68657,68658],"",[68657,68657],"\\",[68763,68764],[68763,68763],[69601,69602],[69601,69601],[69707,69708],[69707,69707],[70563,70564],[70563,70563],[70669,70670],[70669,70669],[71973,71974],[71973,71973],[72079,72080],[72079,72079],[72879,72880],[72879,72879],[72985,72986],[72985,72985],[73880,73881],[73880,73880],[73986,73987],[73986,73986],[99071,99072],[99071,99071],[99177,99178],[99177,99177],[99764,99765],[99764,99764],[99870,99871],[99870,99870],[75103,75104],[75103,75103],[12789,12790],[12789,12789],[12803,12804],[12803,12803],[3366,3368],[5113,5125]]