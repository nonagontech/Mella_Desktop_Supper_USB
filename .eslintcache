[{"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/choose/index.jsx":"1","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addYuding/index.jsx":"2","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/advancedSettings/index.jsx":"3","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/px.jsx":"4","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/hardWareTypeUI.jsx":"5","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/EzyVet.js":"6","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/vetSpire.js":"7","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/petall.js":"8","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorAddPet/index.jsx":"9","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/invite/index.jsx":"10","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/settings/index.jsx":"11","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/ezyvetApi.js":"12","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/PetsUI.jsx":"13","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/ezyVetLogin/index.jsx":"14","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/editPetInfo/index.jsx":"15","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/measure/index.jsx":"16","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/selectLocation/index.jsx":"17","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signIn/index.jsx":"18","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/editParent/index.jsx":"19","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/index.js":"20","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/organization.js":"21","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measuredData.jsx":"22","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/ishavePMS/index.jsx":"23","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/team/index.jsx":"24","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/index.js":"25","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/VetSpire.js":"26","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/HardListModal.jsx":"27","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/index.jsx":"28","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorSelectScheduledExam/index.jsx":"29","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/index.js":"30","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/AddDevice.jsx":"31","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/resetPassword/index.jsx":"32","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/config/config.js":"33","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/user.js":"34","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/pet.js":"35","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/api.js":"36","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorSelectAllExam/index.jsx":"37","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scheduledPetsPage/index.jsx":"38","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/home/index.jsx":"39","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/workPlace/index.jsx":"40","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/user.js":"41","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/admin_VetProfile/index.jsx":"42","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/components/Biggie.jsx":"43","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/selectMella/index.jsx":"44","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/user.js":"45","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/ezyVetSelectTime/index.jsx":"46","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addDevice/index.jsx":"47","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/index.js":"48","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/apiKey/index.jsx":"49","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/connectWorkplace/index.jsx":"50","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/HardAndPetsUI.jsx":"51","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/userfeedback.js":"52","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/EzyVet.js":"53","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/clinical.js":"54","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/pet.js":"55","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectPetBreedModal/index.jsx":"56","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/forgotPassword/index.jsx":"57","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/workplace.js":"58","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/new.js":"59","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/VetSpire.js":"60","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/myModal/MyModal.jsx":"61","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/petTable/index.jsx":"62","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/selectionBox/SelectionBox.jsx":"63","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/combineScales/index.jsx":"64","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/swabPetEar/index.jsx":"65","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/mouseDiv/MouseDiv.js":"66","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/help/index.jsx":"67","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/petAndParents/index.jsx":"68","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/unassigned/index.jsx":"69","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/App.js":"70","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js":"71","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanCodeLogin/index.jsx":"72","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/InitDate.js":"73","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signUpVetProfile/index.jsx":"74","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/minClose/MinClose.js":"75","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/experimental/index.jsx":"76","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectPetModal/index.jsx":"77","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/linkEquipment.jsx":"78","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measurement.jsx":"79","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/timer/index.jsx":"80","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/index.js":"81","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/index.js":"82","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/historyTable/index.jsx":"83","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/addPetModal/index.jsx":"84","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx":"85","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/selectExam/index.jsx":"86","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/axios/http.js":"87","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/scanPet.jsx":"88","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil5.js":"89","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addScheduledPet/index.jsx":"90","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/numericInput.jsx":"91","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/electronStore.js":"92","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/hardwareAction.js":"93","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/joinOrganizationByOption/index.jsx":"94","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signUpVerifyEmail/index.jsx":"95","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/newOrganization/index.jsx":"96"},{"size":3586,"mtime":1661422186052,"results":"97","hashOfConfig":"98"},{"size":11450,"mtime":1661478629083,"results":"99","hashOfConfig":"98"},{"size":8816,"mtime":1661476986897,"results":"100","hashOfConfig":"98"},{"size":2934,"mtime":1661422186108,"results":"101","hashOfConfig":"98"},{"size":5176,"mtime":1661422186079,"results":"102","hashOfConfig":"98"},{"size":830,"mtime":1661424659840,"results":"103","hashOfConfig":"98"},{"size":589,"mtime":1661422186037,"results":"104","hashOfConfig":"98"},{"size":643,"mtime":1661422186036,"results":"105","hashOfConfig":"98"},{"size":28933,"mtime":1661478638079,"results":"106","hashOfConfig":"98"},{"size":6370,"mtime":1661423889418,"results":"107","hashOfConfig":"98"},{"size":24379,"mtime":1661477068420,"results":"108","hashOfConfig":"98"},{"size":2130,"mtime":1661422186030,"results":"109","hashOfConfig":"98"},{"size":13656,"mtime":1661422186079,"results":"110","hashOfConfig":"98"},{"size":7028,"mtime":1661423728951,"results":"111","hashOfConfig":"98"},{"size":36243,"mtime":1661422186062,"results":"112","hashOfConfig":"98"},{"size":108009,"mtime":1661478745220,"results":"113","hashOfConfig":"98"},{"size":9667,"mtime":1661425290306,"results":"114","hashOfConfig":"98"},{"size":17548,"mtime":1661424537056,"results":"115","hashOfConfig":"98"},{"size":10423,"mtime":1661478718651,"results":"116","hashOfConfig":"98"},{"size":87,"mtime":1661422186030,"results":"117","hashOfConfig":"98"},{"size":1031,"mtime":1661422186035,"results":"118","hashOfConfig":"98"},{"size":16795,"mtime":1661424762613,"results":"119","hashOfConfig":"98"},{"size":1469,"mtime":1661422186076,"results":"120","hashOfConfig":"98"},{"size":9864,"mtime":1661424600212,"results":"121","hashOfConfig":"98"},{"size":96,"mtime":1661422186031,"results":"122","hashOfConfig":"98"},{"size":638,"mtime":1661422186031,"results":"123","hashOfConfig":"98"},{"size":7893,"mtime":1661422186078,"results":"124","hashOfConfig":"98"},{"size":40159,"mtime":1661422186080,"results":"125","hashOfConfig":"98"},{"size":36697,"mtime":1661478782815,"results":"126","hashOfConfig":"98"},{"size":231,"mtime":1661422186034,"results":"127","hashOfConfig":"98"},{"size":13859,"mtime":1661422186078,"results":"128","hashOfConfig":"98"},{"size":7255,"mtime":1661422186090,"results":"129","hashOfConfig":"98"},{"size":604,"mtime":1661480662589,"results":"130","hashOfConfig":"98"},{"size":2790,"mtime":1661480624095,"results":"131","hashOfConfig":"98"},{"size":3581,"mtime":1661422186036,"results":"132","hashOfConfig":"98"},{"size":2093,"mtime":1661422186028,"results":"133","hashOfConfig":"98"},{"size":35656,"mtime":1661481480348,"results":"134","hashOfConfig":"98"},{"size":6676,"mtime":1661478861058,"results":"135","hashOfConfig":"98"},{"size":4176,"mtime":1661422186073,"results":"136","hashOfConfig":"98"},{"size":8691,"mtime":1661422980171,"results":"137","hashOfConfig":"98"},{"size":1283,"mtime":1661424870869,"results":"138","hashOfConfig":"98"},{"size":14904,"mtime":1661422186045,"results":"139","hashOfConfig":"98"},{"size":4001,"mtime":1661422186049,"results":"140","hashOfConfig":"98"},{"size":3790,"mtime":1661422186094,"results":"141","hashOfConfig":"98"},{"size":557,"mtime":1661422186032,"results":"142","hashOfConfig":"98"},{"size":4758,"mtime":1661476326369,"results":"143","hashOfConfig":"98"},{"size":13078,"mtime":1661422186041,"results":"144","hashOfConfig":"98"},{"size":74,"mtime":1661424306039,"results":"145","hashOfConfig":"98"},{"size":8435,"mtime":1661422186049,"results":"146","hashOfConfig":"98"},{"size":6986,"mtime":1661477000001,"results":"147","hashOfConfig":"98"},{"size":3315,"mtime":1661422186078,"results":"148","hashOfConfig":"98"},{"size":562,"mtime":1661422186037,"results":"149","hashOfConfig":"98"},{"size":637,"mtime":1661422186031,"results":"150","hashOfConfig":"98"},{"size":731,"mtime":1661422186033,"results":"151","hashOfConfig":"98"},{"size":550,"mtime":1661422186032,"results":"152","hashOfConfig":"98"},{"size":3695,"mtime":1661425039668,"results":"153","hashOfConfig":"98"},{"size":11842,"mtime":1661422186071,"results":"154","hashOfConfig":"98"},{"size":865,"mtime":1661483894368,"results":"155","hashOfConfig":"98"},{"size":968,"mtime":1661422186035,"results":"156","hashOfConfig":"98"},{"size":908,"mtime":1661425317872,"results":"157","hashOfConfig":"98"},{"size":1357,"mtime":1655269876167,"results":"158","hashOfConfig":"98"},{"size":9487,"mtime":1660530346046,"results":"159","hashOfConfig":"98"},{"size":3261,"mtime":1655269876169,"results":"160","hashOfConfig":"98"},{"size":8628,"mtime":1660730474721,"results":"161","hashOfConfig":"98"},{"size":2695,"mtime":1659954544669,"results":"162","hashOfConfig":"98"},{"size":1383,"mtime":1655269876164,"results":"163","hashOfConfig":"98"},{"size":9200,"mtime":1661478728211,"results":"164","hashOfConfig":"98"},{"size":11151,"mtime":1661477056272,"results":"165","hashOfConfig":"98"},{"size":34681,"mtime":1661477711465,"results":"166","hashOfConfig":"98"},{"size":5510,"mtime":1661484480406,"results":"167","hashOfConfig":"98"},{"size":52637,"mtime":1661478173321,"results":"168","hashOfConfig":"98"},{"size":5037,"mtime":1661479231261,"results":"169","hashOfConfig":"98"},{"size":69,"mtime":1655269876086,"results":"170","hashOfConfig":"98"},{"size":13351,"mtime":1661483269596,"results":"171","hashOfConfig":"98"},{"size":2352,"mtime":1660013964308,"results":"172","hashOfConfig":"98"},{"size":2508,"mtime":1659954544667,"results":"173","hashOfConfig":"98"},{"size":7132,"mtime":1661425079480,"results":"174","hashOfConfig":"98"},{"size":6751,"mtime":1660530346064,"results":"175","hashOfConfig":"98"},{"size":3569,"mtime":1660530346067,"results":"176","hashOfConfig":"98"},{"size":1201,"mtime":1659954544669,"results":"177","hashOfConfig":"98"},{"size":349,"mtime":1661422186041,"results":"178","hashOfConfig":"98"},{"size":89,"mtime":1655452097264,"results":"179","hashOfConfig":"98"},{"size":11866,"mtime":1661422186039,"results":"180","hashOfConfig":"98"},{"size":6753,"mtime":1661423008886,"results":"181","hashOfConfig":"98"},{"size":5553,"mtime":1661422980174,"results":"182","hashOfConfig":"98"},{"size":12171,"mtime":1661424328578,"results":"183","hashOfConfig":"98"},{"size":803,"mtime":1655269876151,"results":"184","hashOfConfig":"98"},{"size":16047,"mtime":1661422186091,"results":"185","hashOfConfig":"98"},{"size":3528,"mtime":1655269876085,"results":"186","hashOfConfig":"98"},{"size":12370,"mtime":1661422186042,"results":"187","hashOfConfig":"98"},{"size":1314,"mtime":1655726378406,"results":"188","hashOfConfig":"98"},{"size":326,"mtime":1655269876160,"results":"189","hashOfConfig":"98"},{"size":3753,"mtime":1656491264783,"results":"190","hashOfConfig":"98"},{"size":17030,"mtime":1661484048905,"results":"191","hashOfConfig":"98"},{"size":4324,"mtime":1661483368990,"results":"192","hashOfConfig":"98"},{"size":15326,"mtime":1661483674149,"results":"193","hashOfConfig":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},"1brez7n",{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"206"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"225"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"221"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"237"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"221"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"250"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"258"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"221"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"231"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"225"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"237"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"210"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"221"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"202"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"210"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"221"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"231"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"324"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"241"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"202"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"206"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"221"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"221"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"206"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"202"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"206"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"206"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"393","messages":"394","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"397","messages":"398","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"399","usedDeprecatedRules":"210"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"405","messages":"406","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"407","messages":"408","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"409","usedDeprecatedRules":"221"},{"filePath":"410","messages":"411","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"412","usedDeprecatedRules":"210"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/choose/index.jsx",[],["435","436"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addYuding/index.jsx",["437"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/advancedSettings/index.jsx",["438"],"\nimport React, { Component } from 'react'\nimport { message } from 'antd';\nimport Heart from '../../utils/heard/Heard'\nimport { px, win } from '../../utils/px'\nimport MyModal from '../../utils/myModal/MyModal.jsx'\nimport './index.less';\n\nlet ipcRenderer = window.electron.ipcRenderer\nlet storage = window.localStorage;\nlet uploadType = ''\nexport default class AdvancedSettings extends Component {\n\n  state = {\n    isHaveBase: true,\n    uploadText: '',\n    isUpload: false,\n    progress: 0\n  }\n\n  componentDidMount() {\n    ipcRenderer.send('Lowbig', win())\n    ipcRenderer.on('usbDetect', this.usbDetect)\n    ipcRenderer.on('noUSB', this._noUSB)\n    ipcRenderer.on('uploadBaseInfo', this._uploadBaseInfo)\n    ipcRenderer.on('sned', this._send)\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n    ipcRenderer.send('reUpload', {})\n  }\n  componentWillUnmount() {\n    ipcRenderer.removeListener('usbDetect', this.usbDetect)\n    ipcRenderer.removeListener('noUSB', this._noUSB)\n    ipcRenderer.removeListener('uploadBaseInfo', this._uploadBaseInfo)\n    ipcRenderer.removeListener('sned', this._send)\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('Lowbig', win())\n    this.setState({\n\n    })\n  }\n  _send = (event, data) => {\n    //data就是测量的数据，是十进制的数字\n    console.log(data);\n    let { isUpload } = this.state\n\n    if (data[2] === 54) {\n      if (isUpload) {\n        if (data[3] === 0) {\n          console.log('这是已经在升级状态下的, 要他重新插拔底座然后再去发送指令');\n          this.setState({\n            uploadText: 'Start the upgrade after re-plugging the base'\n          })\n          ipcRenderer.send('startUpload', {})\n        }\n      }\n\n    } else if (data[2] === 182) {\n      //这是底座正常的情况，要去发送开始升级的指令\n\n      if (data[3] === 0) {\n        if (isUpload) {\n          console.log('开始去发送进入升级状态指令');\n          ipcRenderer.send('enterUpgrade', { command: '38', arr: ['5A'] })\n        }\n\n      }\n    }\n\n  }\n  /**\n   *\n   *usb插拔检测（不一定是底座设备插拔），为true代表插上了设备，false代表拔出了设备\n   */\n  usbDetect = (event, data) => {\n\n  }\n  //是否插上底座设备，为true则代表插上了底座设备，反之为拔掉了底座设备\n  _noUSB = (e, data) => {\n    console.log('没有USB设备：', data);\n    let { isUpload, progress } = this.state\n    if (data === false) {\n\n      this.setState({\n        isHaveBase: true\n      })\n      if (isUpload) {\n        if (progress === 0) {\n          console.log('正在升级过程中检测到了拔插 前去发送升级文件', uploadType);\n          if (uploadType === 'base') {\n            console.log('底座升级');\n            ipcRenderer.send('updateBase', { state: 'base' })\n          } else if (uploadType === 'reset') {\n            console.log('底座出厂设置');\n            ipcRenderer.send('updateBase', { state: 'reset' })\n          }\n        } else if (progress === 100) {\n          this.failTimer && clearTimeout(this.failTimer)\n          this.setState({\n            isUpload: false,\n            progress: 0,\n          })\n          message.destroy()\n          message.success('Update Successful');\n          ipcRenderer.send('reUpload', {})\n        } else {\n          this.setState({\n            isUpload: false,\n            progress: 0,\n          })\n          message.destroy()\n          message.error('Upgrade failed')\n          ipcRenderer.send('reUpload', {})\n        }\n\n\n      }\n\n    } else {\n\n      if (this.state.isHaveBase) {\n        this.setState({\n          isHaveBase: false\n        })\n      }\n      if (isUpload) {\n        if (progress > 0 && progress < 100) {\n          this.setState({\n            isUpload: false,\n            progress: 0,\n          })\n          message.destroy()\n          message.error('Upgrade failed')\n          ipcRenderer.send('reUpload', {})\n        }\n      }\n\n\n    }\n  }\n  _uploadBaseInfo = (e, data) => {\n    console.log('升级过程中的信息：', data);\n    switch (data.status) {\n      case 'error':\n        this.setState({\n          isUpload: false,\n          progress: 0,\n        })\n        message.destroy()\n        message.error(data.data)\n        ipcRenderer.send('reUpload', {})\n        break;\n      case 'error1':\n        this.setState({\n          isUpload: false,\n          progress: 0,\n        })\n        message.destroy()\n        message.error('Upgrade failed, please try again')\n        ipcRenderer.send('reUpload', {})\n        break;\n\n\n      case 'normal':\n        this.setState({\n          uploadText: data.data,\n          progress: data.progress\n        })\n        if (data.progress === 100) {\n          console.log('进度到达100了');\n          this.failTimer && clearTimeout(this.failTimer)\n          this.failTimer = setTimeout(() => {\n\n            this.setState({\n              isUpload: false,\n              progress: 0,\n            })\n            message.destroy()\n            message.error('Upgrade failed')\n            ipcRenderer.send('reUpload', {})\n          }, 5000);\n        }\n        break;\n\n      case 'success':\n        this.setState({\n          isUpload: false\n        })\n        message.destroy()\n        message.success(data.data)\n        ipcRenderer.send('reUpload', {})\n\n        break;\n\n      default:\n        break;\n    }\n\n\n\n  }\n  _upload = (val) => {\n\n    let { isHaveBase } = this.state\n    if (!isHaveBase) {\n      this.setState({\n        isUpload: false\n      })\n      message.destroy()\n      message.error('No base device found, please plug it in and try again')\n    } else {\n      console.log('---我插入底座了，准备去升级, 这里就可以打开modal框了');\n      this.setState({\n        uploadText: 'Detect upgrade environment',\n        isUpload: true,\n        progress: 0\n      })\n      uploadType = val\n      //第一步，发送一个关闭通信的指令，看是否能够收到，如果收不到则判定底座已经在升级状态下，直接去发送文件\n      const timer = setTimeout(() => {\n        console.log('发送指令查看底座是否已经在升级状态');\n        ipcRenderer.send('usbdata', { command: '36', arr: ['00'] })\n        clearTimeout(timer)\n      }, 100);\n\n      //2.如果能收到关闭指令，则发送开始升级指令\n\n      //3.如果如果测试检测到usb插拔，则去发送文件\n\n\n\n    }\n  }\n\n  render() {\n\n    return (\n      <div id='advancedsettings'>\n        <div className=\"heard\">\n          <Heart\n            onReturn={() => { this.props.history.goBack() }}\n\n          />\n          <div className=\"title\">\n            <h2>Advanced Settings</h2>\n          </div>\n\n        </div>\n\n        <div className=\"body\">\n          <div className=\"item\">\n            <div className=\"ltext\">\n              <p style={{ fontSize: px(18) }}>\n                Factory Reset<br /><br />\n\n                This will erase all data from your Mella<br /> device, including:<br />\n                - All installed updates<br />\n                - User preferences and Settings<br />\n              </p>\n            </div>\n            <div className=\"rbtn\"\n              // onClick={this._reset}\n              onClick={() => this._upload('reset')}\n            >\n              <div className=\"btn\">Erase all data and reset device</div>\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"ltext\">\n              <p style={{ fontSize: px(18) }}>\n                Mella Base\n              </p>\n            </div>\n            <div className=\"rbtn\"\n              // onClick={this._updateBase}\n              onClick={() => this._upload('base')}\n            >\n              <div className=\"btn\">Update Mella Charging Base</div>\n            </div>\n          </div>\n\n          <div className=\"item\">\n            <div className=\"ltext\">\n              <p style={{ fontSize: px(18) }}>\n                MellaPro Thermometer\n              </p>\n            </div>\n            <div className=\"rbtn\"\n              onClick={() => {\n                // ipcRenderer.send('usbdata', { command: '01', arr: ['11'] })\n              }}\n            >\n              <div className=\"btn\">Connect Bluetooth and Update</div>\n            </div>\n          </div>\n        </div>\n\n        <MyModal\n          visible={this.state.isUpload}\n          // visible={true}\n          element={\n            <div style={{ height: px(200), borderRadius: px(20) }} className=\"upload\">\n\n              {/* <p>{this.state.uploadText} </p> */}\n              <p style={{ color: '#000', padding: 0, margin: 0 }}>{this.state.uploadText}</p>\n            </div>\n          }\n        />\n      </div>\n    )\n  }\n}\n",["439","440"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/px.jsx",["441","442","443","444","445","446"],"/**\n *\n * 获取屏幕分辨率宽高\n * let width = parseInt(window.screen.width)\n * let height = parseInt(window.screen.height)\n *\n * 获取应用窗口大小\n * document.documentElement.clientHeight\n * document.documentElement.clientWidth\n */\n//\n\n//\n\nconst devWidth = 1920;\nconst devHeight = 1040;\n\nlet size = window.screen\n// console.log('-------------------------分辨率的大小-----------------', size);\nlet width = parseInt(window.screen.availWidth);\nlet height = parseInt(window.screen.availHeight);\nif (width < height) {\n  let a = width;\n  width = height;\n  height = a;\n}\n\nexport const px = (val) => {\n  return val\n  // let width = parseInt(window.screen.availWidth);\n  // let height = parseInt(window.screen.availHeight);\n\n\n\n  // if (width < height) {\n  //   let a = width;\n  //   width = height;\n  //   height = a;\n  // }\n\n  // return parseInt((val / devWidth) * width);\n};\n\nexport const mTop = (val) => {\n  return val\n  let width = parseInt(window.screen.availWidth);\n  let height = parseInt(window.screen.availHeight);\n  if (width < height) {\n    let a = width;\n    width = height;\n    height = a;\n  }\n\n  // console.log('mTop',val, parseInt(val / devHeight * height))\n  return parseInt((val / devHeight) * height);\n};\n\nexport const fs = (val) => {\n  let width = parseInt(window.screen.availWidth);\n  let height = parseInt(window.screen.availHeight);\n  if (width < height) {\n    let a = width;\n    width = height;\n    height = a;\n  }\n};\nexport const pX = (val) => {\n  let windowWidth = document.documentElement.clientWidth;\n  // console.log('px', window.screen,)\n  return parseInt((windowWidth / 650) * val);\n};\nexport const MTop = (val) => {\n  return val\n  let windowWidth = document.documentElement.clientHeight;\n  console.log(\"px\", windowWidth);\n  return parseInt((windowWidth / 375) * val);\n};\n\nlet windowssize = {\n  width: 0,\n  height: 0,\n};\n\nexport const win = () => {\n  let width = parseInt(window.screen.availWidth);\n  let height = parseInt(window.screen.availHeight);\n  if (width < height) {\n    let a = width;\n    width = height;\n    height = a;\n  }\n  // let win1 = JSON.stringify({\n  //   width, height\n  // })\n\n  return {\n    width: 1920,\n    height: 1080,\n  };\n};\n\nlet timer = null;\nexport const timerFun = () => {\n  // console.log(\"jianting1------------\");\n  // timer && clearInterval(timer);\n  // timer = setInterval(() => {\n  //   let width = parseInt(window.screen.availWidth);\n  //   let height = parseInt(window.screen.availHeight);\n  //   if (width < height) {\n  //     let a = width;\n  //     width = height;\n  //     height = a;\n  //   }\n  //   // console.log('jianting1', windowssize, { width, height });\n  //   if (width !== windowssize.width || height !== windowssize.height) {\n  //     windowssize.width = width;\n  //     windowssize.height = height;\n  //     let ipcRenderer = window.electron.ipcRenderer;\n  //     ipcRenderer.send(\"changeFenBianLv\", windowssize);\n  //   }\n  // }, 2000);\n};\n",["447","448"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/hardWareTypeUI.jsx",["449"],"import React, {  useEffect } from \"react\";\n\nimport mellaPro from \"./../../assets/img/hardList-mella.png\";\nimport biggie from \"./../../assets/img/hardList-biggie.png\";\nimport rfid from \"./../../assets/img/hardList-rfid.png\";\nimport tape from \"./../../assets/img/hardList-tape.png\";\nimport add from \"./../../assets/img/hardList-add.png\";\nimport maeBowl from \"./../../assets/img/hardList-maeBowl.png\";\nimport otterEQ from \"./../../assets/img/hardList-otterEQ.png\";\n\nimport electronStore from \"../../utils/electronStore\";\nimport { px } from \"../../utils/px\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareInfoFun,\n  setSelectHardwareType,\n  setMenuNum,\n} from \"./../../store/actions\";\n\nlet storage = window.localStorage;\n//devicesTypeList是index传过来的硬件种类以及种类下的所有硬件\nconst HardWareTypeUI = ({\n  bodyHeight,\n  devicesTypeList,\n  selectHardwareInfoFun,\n  setSelectHardwareType,\n  selectHardwareType,\n  setMenuNum,\n  menuNum,\n}) => {\n  //根据左侧列表的设备类型，获取当前选中的设备类型下选中的硬件,先看本地有没有存,没存就拿第一个展示\n\n  let options = devicesTypeList.map((item, index) => {\n    let img = null;\n    switch (item.type) {\n      case \"mellaPro\":\n        img = mellaPro;\n        break;\n\n      case \"biggie\":\n        img = biggie;\n        break;\n\n      case \"rfid\":\n        img = rfid;\n        break;\n\n      case \"tape\":\n        img = tape;\n        break;\n      case \"maeBowl\":\n        img = maeBowl;\n        break;\n      case \"add\":\n        img = add;\n        break;\n\n      case \"otterEQ\":\n        img = otterEQ;\n        break;\n      default:\n        break;\n    }\n    let borderStyle = ``;\n    if (item.type === selectHardwareType) {\n      borderStyle = ` 2px solid #3B3A3A`;\n    }\n\n    return (\n      <li\n        key={`${index}`}\n        style={{ padding: `${px(10)}px 0` }}\n        onClick={() => {\n          console.log(item.type);\n          if (menuNum !== \"6\"&&!electronStore.get(`${storage.userId}-isClical`)) {\n            setMenuNum(\"1\");\n            setSelectHardwareType(item.type);\n            if (item.type === \"add\") {\n            } else {\n              let devicesInfo = electronStore.get(\n                `${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`\n              );\n\n              //要做个处理,看保存的数据是否和当前的一致，如果不一致，就把当前的保存下来\n\n              if (!devicesInfo && item.devices[0]) {\n                devicesInfo = item.devices[0];\n                electronStore.set(\n                  `${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`,\n                  devicesInfo\n                );\n              }\n\n              selectHardwareInfoFun(devicesInfo);\n            }\n          } else {\n            setSelectHardwareType(\"mellaPro\");\n          }\n        }}\n      >\n        <div\n          style={{ border: borderStyle, padding: px(2), borderRadius: px(10) }}\n        >\n          <img src={img} alt=\"\" width={px(55)} />\n        </div>\n      </li>\n    );\n  });\n\n  useEffect(() => {\n    let Index = null;\n    for (let i = 0; i < devicesTypeList.length; i++) {\n      const element = devicesTypeList[i];\n      if (element.type === selectHardwareType) {\n        Index = i;\n        break;\n      }\n    }\n    if (Index === null) {\n      return;\n    }\n\n    let hard = devicesTypeList[Index];\n    if (hard && hard.type !== \"add\") {\n      let devicesInfo = electronStore.get(\n        `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`\n      );\n\n      if (!devicesInfo) {\n        devicesInfo = hard.devices[0];\n        electronStore.set(\n          `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`,\n          devicesInfo\n        );\n      } else {\n        let sameFlag = false;\n        console.log(\"============\", hard.devices, devicesInfo);\n        for (let i = 0; i < hard.devices.length; i++) {\n          const element = hard.devices[i];\n          if (\n            element.mac === devicesInfo.mac &&\n            element.name === devicesInfo.name\n          ) {\n            sameFlag = true;\n            break;\n          }\n        }\n        if (!sameFlag) {\n          devicesInfo = hard.devices[0];\n          electronStore.set(\n            `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`,\n            devicesInfo\n          );\n        }\n      }\n\n      console.log(\"保存的折本信息\", devicesInfo);\n\n      selectHardwareInfoFun(devicesInfo);\n    }\n  }, [devicesTypeList]);\n\n  return (\n    <div className=\"hardwareType\" style={{ width: px(80), height: bodyHeight }}>\n      <ul>{options}</ul>\n    </div>\n  );\n};\n\nHardWareTypeUI.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array,\n};\n//默认值\nHardWareTypeUI.defaultProps = {\n  bodyHeight: 0,\n  devicesTypeList: [],\n};\n\nexport default connect(\n  (state) => ({\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    menuNum: state.userReduce.menuNum,\n  }),\n  { selectHardwareInfoFun, setSelectHardwareType, setMenuNum }\n)(HardWareTypeUI);\n",["450","451"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/EzyVet.js",["452"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/vetSpire.js",["453","454"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/petall.js",["455","456"],"/**\n * @file petall.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/petall 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del } from '../api'\nimport { mellaserverBaseUrl } from '../../config/config'\nconst baseURL = `${mellaserverBaseUrl}/petall`\n\n\n\n/**\n * @dec 根据组织获取所有宠物\n * @param {str} lastOrganization 组织id\n * @param {*} params \n * @returns \n */\nexport const pet_petall = (lastOrganization, params) => {\n    return postJson(`${baseURL}/pet${lastOrganization}/petall`, params)\n}\n\n\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorAddPet/index.jsx",["457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480"],"import React, { Component } from 'react'\nimport { Input, message, Select, Calendar, Col, Row, Spin, Modal } from 'antd';\n\nimport dog from '../../assets/images/pinkdog.png'\nimport cat from '../../assets/images/pinkcat.png'\nimport redDog from '../../assets/images/reddog.png'\nimport redCat from '../../assets/images/redcat.png'\nimport redother from '../../assets/images/redother.png'\nimport other from '../../assets/images/other.png'\nimport Close from './../../assets/img/close.png'\nimport nextImg from '../../assets/img/nextImg.png'\nimport selectphoto from '../../assets/images/sel.png'\nimport dui from '../../assets/images/dui.png'\nimport female from '../../assets/images/female.png'\nimport male from '../../assets/images/male.png'\n\nimport electronStore from '../../utils/electronStore';\nimport { mTop, px, win } from '../../utils/px';\nimport MyModal from '../../utils/myModal/MyModal';\nimport Heard from '../../utils/heard/Heard';\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\nimport Button from '../../utils/button/Button';\nimport Avatar from '../../components/avatar/Avatar';\nimport SelectPetBreed from \"../../components/selectPetBreedModal\";\n\nimport { connect } from 'react-redux';\nimport { petDetailInfoFun, setMenuNum, } from '../../store/actions';\nimport moment from 'moment';\n\nimport './index.less';\nimport { addDeskPet, checkPatientId, getPetInfoByPatientIdAndPetId, selectBreedBySpeciesId } from '../../api';\n\nconst { Option } = Select;\nlet storage = window.localStorage;\nlet errPatientId = ''\nclass DoctorAddPet extends Component {\n  state = {\n    dogImg: dog,\n    catImg: cat,\n    otherImg: other,\n    selectWZ: '',\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    api: '',\n    id: '',\n    seleceID: '',//医生id\n    petSpecies: 0,\n    unit: 1,\n    gender: 0,\n    isMix: false,\n    imageId: -1,\n    imgurl: '',\n    catData: [],\n    petSpeciesBreedId: '',\n    dogData: [],\n    breedArr: [],\n    birthday: moment(new Date()).format('MMMM D, YYYY'),\n    patientId: '',\n    petName: '',\n    petId: '',\n    lastName: '',\n    firstName: '',\n    breedName: '',\n    owner: '',\n    intFlog: false,\n    spin: false,\n    visible: false,\n    dogBreed: [],\n    catBreed: [],\n    searchBreed: '',\n    selectBreedJson: {},\n    confirmSelectBreedJson: {},\n    selectBreed: false,\n    isModalVisible: false,\n    confirmLoading: false,\n    selectBreedVisible: false,\n  }\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big', win())\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n    let dogBreed = electronStore.get('dogBreed') || []\n    let catBreed = electronStore.get('catBreed') || []\n    this.setState({\n      dogBreed,\n      catBreed\n    })\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big', win())\n    this.setState({\n\n    })\n  }\n  getBreed = (val) => {\n    let data = {}\n    switch (val) {\n      case 'dog':\n        data.speciesId = 2; break;\n\n      case 'cat':\n        data.speciesId = 1; break;\n    }\n\n    selectBreedBySpeciesId(data)\n      .then(res => {\n        console.log('---', res);\n        if (res.code === 0) {\n          let arr = []\n          res.petlist.map((item, index) => {\n            let data = {\n              petSpeciesBreedId: item.petSpeciesBreedId,\n              breedName: item.breedName\n            }\n            arr.push(data)\n          })\n          if (val === 'dog') {\n            this.setState({\n              dogBreed: arr\n            })\n            electronStore.set('dogBreed', arr)\n          } else if (val === 'cat') {\n            this.setState({\n              catBreed: arr\n            })\n            electronStore.set('catBreed', arr)\n          }\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n  _getData = (val) => {\n    this.setState({\n      petSpecies: val,\n      breedName: ''\n    })\n    let data = {\n      speciesId: val\n    }\n    selectBreedBySpeciesId(data)\n      .then(res => {\n        console.log('--获取品种返回的数据-', res);\n        if (res.code === 0) {\n          let arr = []\n          res.petlist.map((item, index) => {\n            let data = {\n              petSpeciesBreedId: item.petSpeciesBreedId,\n              breedName: item.breedName\n            }\n            arr.push(data)\n          })\n          console.log(arr);\n          this.setState({\n            breedArr: arr\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n\n  }\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n  handleClick = e => {\n    console.log('click ', e);\n    const { api, id, seleceID } = this.state\n    if (e.key === '1') {\n      this.props.history.push({ pathname: '/page6', query: { api, id, seleceID } })\n    }\n    if (e.key === '2') {\n      this.props.history.push('/')\n    }\n\n  };\n  /**------------------顶部end------------------------ */\n  selectWZ = (val) => {\n    let { catBreed, dogBreed } = this.state\n    switch (val) {\n      case 'dog':\n        this.setState({\n          catImg: cat,\n          dogImg: redDog,\n          otherImg: other,\n          selectWZ: val,\n          breedArr: [].concat(dogBreed)\n        })\n\n        break;\n\n      case 'cat':\n        this.setState({\n          catImg: redCat,\n          dogImg: dog,\n          otherImg: other,\n          selectWZ: val,\n          breedArr: [].concat(catBreed)\n        })\n\n        break;\n\n      case 'other':\n        this.setState({\n          catImg: cat,\n          dogImg: dog,\n          otherImg: redother,\n          selectWZ: val,\n          breedArr: []\n        })\n        break;\n\n      default:\n        break;\n    }\n  }\n  _petSpecies = () => {\n    let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\n    this.avatar = selectphoto\n    return (\n      <div className=\"petSpecies\"\n        style={{ height: mTop(80), }}\n      >\n        <div className=\"l\">\n          <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\n          <div className=\"selectSpecies\">\n            <ul>\n              <li >\n                <div className='speciesChild' >\n                  <div className='dog'\n                    onClick={() => { this.selectWZ('dog') }}>\n                    <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Dog\n                </div>\n              </li>\n              <li>\n                <div className='speciesChild' >\n                  <div className='dog' onClick={() => { this.selectWZ('cat') }} >\n                    <img src={catImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Cat\n                </div>\n              </li>\n              <li >\n                <div className='speciesChild' >\n                  <div className='dog' onClick={() => { this.selectWZ('other') }} >\n                    <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Other\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"r\">\n          <div className=\"img\">\n            <Avatar\n              init={\n                <div className=\"ciral \">\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\n                </div>\n              }\n              getinfo={(val) => {\n                console.log('我是父组件，从子组件获取到的数据位：', val);\n                if (val) {\n                  this.setState({\n                    imageId: val\n                  })\n                }\n              }}\n            />\n          </div>\n\n        </div>\n\n      </div>\n\n    )\n  }\n  _petName = () => {\n    let birthday = this.state.birthday\n    let birthdayValue = birthday ? moment(birthday) : moment(new Date())\n    return (\n      <div className=\"petName\"\n        style={{ marginTop: mTop(18) }}\n      >\n        <div className=\"r\">\n          <p >Pet Name</p>\n          <div className=\"infoInput\">\n            <Input\n              bordered={false}\n              value={this.state.petName}\n              onChange={(item) => {\n\n                this.setState({\n                  petName: item.target.value\n                })\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"r\">\n          <p >Pet Birthday</p>\n          <div className=\"infoInput\" >\n            <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\n              document.getElementById('calendar').style.display = 'block'\n            }}>{this.state.birthday}</p>\n            <div className=\"calendar\" id=\"calendar\" style={{ left: px(-50), top: px(-50) }}>\n              <Calendar\n                fullscreen={false}\n                headerRender={({ value, type, onChange, onTypeChange }) => {\n                  const start = 0;\n                  const end = 12;\n                  const monthOptions = [];\n                  const current = value.clone();\n                  const localeData = value.localeData();\n                  const months = [];\n                  for (let i = 0; i < 12; i++) {\n                    current.month(i);\n                    months.push(localeData.monthsShort(current));\n                  }\n                  for (let index = start; index < end; index++) {\n                    monthOptions.push(\n                      <Select.Option className=\"month-item\" key={`${index}`}>\n                        {months[index]}\n                      </Select.Option>\n                    );\n                  }\n                  const month = value.month();\n                  const year = value.year();\n                  const options = [];\n                  for (let i = moment(new Date()).year(); i > moment(new Date()).year() - 40; i -= 1) {\n                    options.push(\n                      <Select.Option key={i} value={i} className=\"year-item\">\n                        {i}\n                      </Select.Option>\n                    );\n                  }\n                  return (\n                    <div style={{ padding: 8 }}>\n                      <Row gutter={8}>\n                        <Col>\n                          <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            className=\"my-year-select\"\n                            onChange={(newYear) => {\n                              const now = value.clone().year(newYear);\n                              onChange(now);\n                            }}\n                            value={String(year)}\n                          >\n                            {options}\n                          </Select>\n                        </Col>\n                        <Col>\n                          <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            value={String(month)}\n                            onChange={(selectedMonth) => {\n                              const newValue = value.clone();\n                              newValue.month(parseInt(selectedMonth, 10));\n                              onChange(newValue);\n                            }}\n                          >\n                            {monthOptions}\n                          </Select>\n                        </Col>\n                      </Row>\n                    </div>\n                  );\n                }}\n                value={birthdayValue}\n                onSelect={(value) => {\n                  console.log(value);\n                  this.setState({\n                    birthday: moment(value).format('MMMM D, YYYY')\n\n                  })\n                  document.getElementById('calendar').style.display = 'none'\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n\n    )\n  }\n  _ownName = () => {\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(18) }}\n      >\n        <div className=\"l\">\n          <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\n          <div className=\"infoInput\">\n            <Input bordered={false}\n              value={this.state.patientId}\n              onChange={(item) => {\n                this.setState({\n                  patientId: item.target.value.replace(/\\s/g, \"\"),\n                  intFlog: true\n                })\n                if (item.target.value !== errPatientId) {\n                  message.destroy()\n                }\n              }}\n              onBlur={() => {\n                if (this.state.patientId === '') {\n                  message.error('The pet ID cannot be empty');\n                  return\n                }\n                this.setState({\n                  spin: true\n                });\n                let params = {\n                  patientId: this.state.patientId,\n                  doctorId: storage.userId\n                }\n                if (storage.lastWorkplaceId) {\n                  params.workplaceId = storage.lastWorkplaceId\n                }\n                if (storage.lastOrganization) {\n                  params.organizationId = storage.lastOrganization\n                }\n                checkPatientId(params)\n                  .then(res => {\n                    if (res.flag === false) {\n                      errPatientId = params.patientId;\n                      this.setState({\n                        isModalVisible: true,\n                        spin: false,\n                      })\n                    } else {\n                      errPatientId = '';\n                      message.success('This pet ID will work');\n                      this.setState({\n                        spin: false,\n                      })\n                    }\n                  })\n                  .catch(err => {\n                    this.setState({\n                      spin: false\n                    });\n                  })\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"r\">\n          <div className=\"infoInput flex\"\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\n            onClick={() => {\n              // this.setState({\n              //     selectBreed: true\n              // })\n            }}\n          >\n\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{'My Parents'}</div>\n            <div className=\"nextimg\" >\n              <img src={nextImg} style={{ height: px(15) }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _select = (value, data) => {\n    console.log(value, data);  //value的值为id\n    this.setState({\n      petSpeciesBreedId: value,\n      breedName: data.children\n    })\n  }\n  //选择宠物品种\n  _primaryBreed = () => {\n    let { confirmSelectBreedJson } = this.state\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(18) }}>\n        <div className=\"l\" >\n          <div className=\"infoInput flex\"\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\n            onClick={() => {\n              this.setState({\n                selectBreedVisible: true\n              })\n            }}\n          >\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'}</div>\n            <div className=\"nextimg\" >\n              <img src={nextImg} style={{ height: px(15) }} />\n            </div>\n          </div>\n        </div>\n        <div className=\"r\" style={{ paddingTop: mTop(40) }}>\n          <div className=\"max\">\n            Mix?\n            <div className=\"selected\"\n              onClick={() => this.setState({\n                isMix: !this.state.isMix\n              })}\n            >\n              {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _weight = () => {\n    let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\n    switch (this.state.unit) {\n      case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\n      case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\n    }\n    switch (this.state.gender) {\n      case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\n      case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\n    }\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(18) }}>\n        <div className=\"l\">\n          <p >Pet Weight</p>\n          <div className=\"infoInput\">\n            <Input bordered={false}\n              value={this.state.weight}\n              onChange={(item) => {\n\n                this.setState({\n                  weight: item.target.value\n                })\n              }}\n\n            />\n            <div className=\"ibKg\">\n              <div className=\"ibs\"\n                style={{ backgroundColor: ibBgcColor, color: ibCor }}\n                onClick={() => {\n                  if (this.state.unit === 2) {\n\n                    this.setState({\n                      unit: 1,\n                      weight: (this.state.weight * 2.2046).toFixed(1)\n                    })\n                  }\n                }}\n              >Ibs</div>\n              <div className=\"kgs\"\n                style={{ backgroundColor: kgBgcColor, color: kgCor }}\n                onClick={() => {\n\n                  if (this.state.unit === 1) {\n\n                    this.setState({\n                      unit: 1,\n                      weight: (this.state.weight / 2.2046).toFixed(1)\n                    })\n                  }\n                  this.setState({ unit: 2 })\n                }}\n              >kgs</div>\n\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"r\">\n          <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\n          <div className=\"gender\">\n            <div className=\"selectGender\">\n              <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\n                <div className=\"femaleCiral\"\n                  style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\n                  onClick={() => this.setState({ gender: 1 })}\n                >\n                  <img src={female} alt=\"\" style={{ width: px(15) }} />\n                </div>\n                Female\n              </div>\n              <div className=\"male\" style={{ fontSize: px(18) }}>\n                <div className=\"maleCiral\"\n                  style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\n                  onClick={() => this.setState({ gender: 0 })}\n                >\n                  <img src={male} alt=\"\" style={{ width: px(20) }} />\n                </div>\n                Male\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n  handleOk = () => {\n    let params = {\n      patientId: this.state.patientId,\n      doctorId: storage.userId\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.org = storage.lastOrganization\n    }\n    this.setState({\n      confirmLoading: true\n    });\n    getPetInfoByPatientIdAndPetId(params)\n      .then((res) => {\n        this.setState({\n          confirmLoading: false,\n          isModalVisible: false\n        });\n        if (res.flag === true) {\n          let oldList = res.data[0];\n          let {\n            age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender,\n            petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\n            h2tLength, torsoLength\n          } = oldList;\n          const isUnKnow = (val) => {\n            if (val) {\n              return val\n            } else {\n              return 'unknown'\n            }\n          }\n          let owner = ''\n          patientId = isUnKnow(patientId)\n          petName = isUnKnow(petName)\n          breedName = isUnKnow(breedName)\n          age = isUnKnow(age)\n          weight = isUnKnow(weight)\n          if (!firstName) {\n            firstName = ''\n          }\n          if (!lastName) {\n            lastName = ''\n          }\n          if (lastName === '' && firstName === '') {\n            owner = 'unknown'\n          } else {\n            owner = `${lastName} ${firstName}`\n          }\n          createTime = moment(createTime).format('X')\n          let petGender = ''\n          switch (`${gender}`) {\n            case '1': petGender = 'F'\n              break;\n            case '0': petGender = \"M\"\n              break;\n            default: petGender = 'unknown'\n              break;\n          }\n          let petAge = 'unknown'\n          if (birthday) {\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\n          }\n\n          let json = {\n            insertedAt: createTime,\n            patientId: this.state.patientId,\n            petName,\n            owner,\n            breed: breedName,\n            gender: petGender,\n            age: petAge,\n            petId,\n            weight,\n            rfid,\n            url,\n            speciesId,\n            l2rarmDistance,\n            neckCircumference,\n            upperTorsoCircumference,\n            lowerTorsoCircumference,\n            h2tLength,\n            torsoLength,\n            pethubId,\n            macId,\n          }\n          this.props.setMenuNum('1');\n          this.props.petDetailInfoFun(json);\n          this.props.history.push(\"/MainBody\");\n        } else {\n          message.error(res.msg);\n        }\n      })\n      .catch(err => {\n        message.error('Jump Failure');\n      })\n  };\n  handleCancel = () => {\n    this.setState({\n      isModalVisible: false\n    })\n  };\n\n  render() {\n    const { closeColor, closebgc, minbgc, disabled, petSpeciesBreedId, isModalVisible, confirmLoading } = this.state\n    return (\n      <Spin spinning={this.state.spin} size=\"large\">\n        <div id=\"doctorAddPet\">\n          <div className=\"heard\">\n            <Heard />\n          </div>\n          <div className=\"editPetInfo_top\" >\n            <div className=\"title\" style={{ marginBottom: px(20), marginTop: px(20) }}>{`New Pet`}</div>\n            {this._petSpecies()}\n            {this._petName()}\n            {this._ownName()}\n            {this._primaryBreed()}\n            {this._weight()}\n          </div>\n          <div className=\"editPetInfo_foot\"  >\n            <div className=\"save\"\n              onClick={() => {\n                if (!this.state.patientId) {\n                  message.error('Please enter patient ID')\n                  return\n                }\n                let params = {\n                  patientId: this.state.patientId,\n                  doctorId: storage.userId\n                }\n                if (storage.lastWorkplaceId) {\n                  params.workplaceId = storage.lastWorkplaceId\n                }\n                if (storage.lastOrganization) {\n                  params.organizationId = storage.lastOrganization\n                }\n\n                this.setState({\n                  spin: true\n                })\n                checkPatientId(params)\n                  .then(res => {\n                    console.log(res);\n                    if (res.flag === false) {\n                      this.setState({\n                        spin: false\n                      }, () => {\n                        errPatientId = params.patientId\n                        message.error('This patient ID is already occupied, please change to a new one')\n                      })\n                    } else {\n                      let { petSpecies, petName, birthday, petSpeciesBreedId, isMix, weight, gender, unit, imageId, confirmSelectBreedJson, owner, patientId, selectWZ } = this.state\n                      let species = null\n                      if (petSpeciesBreedId) {\n                        species = petSpeciesBreedId\n                      } else {\n                        // 11001 是cat 12001是dog 13001是other\n                        switch (selectWZ) {\n                          case 'cat': species = 11001; break;\n                          case 'dog': species = 12001; break;\n                          default: species = 13001;\n                            break;\n                        }\n                      }\n                      let data = {\n                        petName,\n                        birthday: moment(birthday).format('YYYY-MM-DD'),\n                        gender,\n                        owner,\n                        petSpeciesBreedId: species,\n                        doctorId: storage.userId\n                      }\n                      if (weight) {\n                        if (unit === 1) {\n                          weight = (0.45359 * weight).toFixed(2)\n                        }\n                        data.weight = parseFloat(weight)\n                      }\n                      if (imageId !== -1 && imageId) {\n                        data.imageId = imageId\n                      }\n                      if (storage.lastWorkplaceId) {\n                        data.workplaceId = storage.lastWorkplaceId\n                      }\n                      if (storage.lastOrganization) {\n                        data.organizationId = storage.lastOrganization\n                      }\n                      addDeskPet(patientId, data)\n                        .then(res => {\n                          this.setState({\n                            spin: false\n                          })\n                          console.log(res);\n                          if (res.flag === true) {\n                            message.success('Added successfully')\n                            this.handleOk();\n                            // this.props.history.goBack()\n                          }\n                          else {\n                            message.error('add failed')\n                          }\n                        })\n                        .catch(err => {\n                          this.setState({\n                            spin: false\n                          })\n                          message.error('add failed')\n                          console.log(err);\n                        })\n                    }\n                  })\n                  .catch(err => {\n                    this.setState({\n                      spin: false\n                    })\n                    console.log(err);\n                  })\n              }}\n            >Save</div>\n          </div>\n          <Modal\n            title=\"\"\n            visible={isModalVisible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            centered\n            destroyOnClose\n            maskClosable={false}\n            confirmLoading={confirmLoading}\n          >\n            <div style={{ padding: px(24), fontSize: px(16) }}>\n              This patient ID is already occupied ! <br />Whether to switch to the pet measurement screen ?\n            </div>\n          </Modal>\n          <SelectPetBreed\n            visible={this.state.selectBreedVisible}\n            destroyOnClose\n            width={400}\n            value={this.state.petSpeciesBreedId}\n            onSelect={(value) => {\n              this.setState({\n                selectBreedVisible: false,\n                selectBreedJson: value,\n                petSpeciesBreedId: value.petSpeciesBreedId,\n                confirmSelectBreedJson: value,\n              })\n            }}\n            onCancel={() => {\n              this.setState({\n                selectBreedVisible: false,\n              })\n            }}\n          />\n        </div>\n      </Spin>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n\n  }),\n  { petDetailInfoFun, setMenuNum, }\n)(DoctorAddPet)\n",["481","482"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/invite/index.jsx",["483"],"import React, { Component, } from 'react'\nimport {\n  Tag,\n  Input,\n  Tooltip,\n  message,\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\n\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport { px } from '../../utils/px';\nimport Button from '../../utils/button/Button'\nimport MyModal from '../../utils/myModal/MyModal';\n\nimport './index.less';\nimport { checkUser } from '../../api';\nimport { inviteUserByEmail } from '../../api/melladesk/user';\n\nlet storage = window.localStorage;\n\nexport default class Invite extends Component {\n\n  state = {\n\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n    visible: false\n  }\n\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n    this.setState({\n\n    })\n  }\n\n\n  handleClose = removedTag => {\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\n    console.log(tags);\n    this.setState({ tags });\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n    const { inputValue } = this.state;\n    let { tags } = this.state;\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      console.log('输入的内容为：', inputValue);\n      message.destroy()\n      checkUser(inputValue)\n        .then(res => {\n          console.log(res);\n          if (res.code === 11011) {\n            console.log('邮箱号以被注册，是否忘记密码');\n            tags = [...tags, inputValue];\n            console.log(tags);\n\n            this.setState({\n              tags,\n              inputVisible: false,\n              inputValue: '',\n            });\n          }\n          else {\n            message.error('This mailbox was not found!', 3)\n            this.setState({\n              inputVisible: false,\n              inputValue: '',\n            });\n          }\n        })\n        .catch(err => {\n          message.error(`Error:${err.message}`)\n          console.log('检测邮箱号的接口出错了', err);\n        })\n\n\n    }\n\n  };\n\n\n  saveInputRef = input => {\n    this.input = input;\n  };\n\n  saveEditInputRef = input => {\n    this.editInput = input;\n  };\n\n  _next = () => {\n    message.destroy()\n    let { tags } = this.state\n    let userId = storage.userId\n    let organizationId = storage.lastOrganization\n    console.log({ tags, userId, organizationId });\n    if (tags.length === 0) {\n      message.error('Please enter the invitation email')\n      return\n    }\n    this.setState({\n      visible: true\n    })\n\n    inviteUserByEmail(userId, organizationId, tags)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          visible: false\n        })\n        if (res.flag === true) {\n          console.log('成功，跳转');\n          message.success('Invitation successful', 3)\n          this.props.history.goBack()\n\n        } else {\n          message.error('Invitation failed')\n\n        }\n\n      })\n      .catch(err => {\n        this.setState({\n          visible: false\n        })\n        console.log(err);\n        message.error(err.message, 3)\n      })\n  }\n  render() {\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\n    console.log('---', editInputIndex);\n    return (\n      <div id=\"inviteTeam\" >\n        {/* 关闭缩小 */}\n        <div className=\"heard\">\n          <MaxMin\n            onClick={() => { this.props.history.push('/') }}\n            onClick1={() => this.props.history.goBack()}\n          />\n          <div className=\"text\">Invite your Team</div>\n\n          <div className=\"addF\">\n            <p>To:</p>\n            <div className=\"add\">\n\n              <>\n                {tags.map((tag, index) => {\n                  const isLongTag = tag.length > 25;  //标签里面的字符串的长度\n\n                  const tagElem = (\n                    <Tag\n                      className=\"edit-tag\"\n                      key={tag}\n                      closable={true}\n                      onClose={() => this.handleClose(tag)}\n                    >\n                      <span>\n                        {isLongTag ? `${tag.slice(0, 25)}...` : tag}\n                      </span>\n                    </Tag>\n                  );\n                  return isLongTag ? (\n                    <Tooltip title={tag} key={tag}>\n                      {tagElem}\n                    </Tooltip>\n                  ) : (\n                    tagElem\n                  );\n                })}\n                {inputVisible && (\n                  <Input\n                    ref={this.saveInputRef}\n                    type=\"text\"\n                    size=\"small\"\n                    className=\"tag-input\"\n                    value={inputValue}\n                    onChange={this.handleInputChange}\n                    onBlur={this.handleInputConfirm}\n                    onPressEnter={this.handleInputConfirm}\n                  />\n                )}\n                {!inputVisible && (\n                  <Tag className=\"site-tag-plus\" onClick={this.showInput}>\n                    <PlusOutlined />Press Enter to add mailbox\n                  </Tag>\n                )}\n              </>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"btn\"\n          style={{ padding: `${px(40)}px 0` }}\n        >\n\n          {/* <Button\n            type=\"primary\"\n            shape=\"round\"\n            size='large'\n            htmlType=\"submit\"\n            onClick={this._next}\n            text={'Send'}\n          >\n\n          </Button> */}\n\n          <Button\n\n            onClick={this._next}\n            text={'Send'}\n            textBoxStyle={{ height: px(45), width: '45%' }}\n          >\n\n          </Button>\n        </div>\n        <MyModal visible={this.state.visible} />\n\n      </div>\n\n\n    )\n  }\n}\n",["484","485"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/settings/index.jsx",["486","487","488","489","490","491","492"],"\nimport React, { Component } from 'react'\nimport {\n  Switch,\n  Select,\n  message\n} from 'antd'\n\nimport redJinggao from '../../assets/img/redjinggao.png'\n\nimport Heart from '../../utils/heard/Heard'\nimport Slider from '../../utils/slider/Slider'\nimport Button from '../../utils/button/Button'\nimport electronStore from '../../utils/electronStore'\nimport { px, win } from '../../utils/px';\nimport MyModal from '../../utils/myModal/MyModal'\n\nimport './index.less'\n\nconst { Option } = Select;\nlet storage = window.localStorage\nexport default class Settings extends Component {\n\n  state = {\n    self_tarting: false,      //自启动，\n    isHua: true,              //为true代表为华氏度，为false代表℃\n    is15: true,               //腋温测量时长，为true则是15秒，为false则是35秒\n    isClicleStudy: false,     //是否处于临床测试，为true则在处于，false则不处于\n    isBacklight: true,        //是否开启背光，为true则是开启背光，为false则是关闭背光\n    isBeep: true,             //是否开启蜂鸣器，为true则是开启蜂鸣器，反之则是关闭蜂鸣器\n    backlightTimer: { length: 140, number: '45' },//背光时长，长度指的是在滑轨上面的距离，number指的是显示的秒数\n    autoOff: { length: 0, number: '30' },  //无操作自动关机，长度指的是在滑轨上面的距离，number指的是关闭的秒数\n\n\n    oldIsHua: true,\n    oldIs15: true,\n    oldIsBacklight: true,\n    oldIsBeep: true,\n    oldBacklightTimer: { length: 140, number: '45' },\n    oldAutoOff: { length: 0, number: '30' },\n    oldIsClicleStudy: false,\n\n    isSave: false,\n\n    num0: '',\n    num1: '',\n    num2: '',\n    num3: '',\n    num4: '',\n    num5: '',\n    verifyNum: '',\n\n    maxLength: 1, //验证码长度\n    valueA: \"\", //验证码第一位\n    valueB: \"\", //二\n    valueC: \"\", //三\n    valueD: \"\", //四\n    valueE: \"\", //5\n    valueF: \"\", //6\n    isClicleStudyModal: false\n  }\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    // if (windowsHeight < 900) {\n    //   ipcRenderer.send('table', win())\n    // } else {\n    //   ipcRenderer.send('setting', win())\n    // }\n    ipcRenderer.send('big', win())\n    //这里要根据保存的时候存到哪个位置的，然后拿出来更新state\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`)\n    console.log('----', hardSet);\n    let isClicleStudy = storage.isClinical === 'true' ? true : false\n    if (hardSet) {\n      console.log('不是第一次进来，有设置的');\n      let { isHua, is15, isBacklight, isBeep, backlightTimer, autoOff } = hardSet\n\n      this.setState({\n        isHua,\n        is15,\n        isBacklight,\n        isBeep,\n        backlightTimer,\n        autoOff,\n        // isClicleStudy: temporaryStorage.isClicleStudy,\n        isClicleStudy,\n\n        oldIsHua: isHua,\n        oldIs15: is15,\n        oldIsBacklight: isBacklight,\n        oldIsBeep: isBeep,\n        oldBacklightTimer: backlightTimer,\n        oldAutoOff: autoOff,\n        // oldIsClicleStudy: temporaryStorage.isClicleStudy,\n        oldIsClicleStudy: isClicleStudy,\n\n      })\n    } else {\n      let settings = {\n        isHua: true,\n        is15: true,\n        self_tarting: false,  //自启动\n        isBacklight: true,\n        isBeep: true,\n        backlightTimer: { length: 140, number: '45' },\n        autoOff: { length: 0, number: '30' },\n      }\n      electronStore.set(`${storage.userId}-hardwareConfiguration`, settings)\n      let { isHua, is15, isBacklight, isBeep, backlightTimer, autoOff } = settings\n      this.setState({\n        isHua,\n        is15,\n        isBacklight,\n        isBeep,\n        backlightTimer,\n        autoOff,\n        // isClicleStudy: temporaryStorage.isClicleStudy,\n        isClicleStudy,\n\n        oldIsHua: isHua,\n        oldIs15: is15,\n        oldIsBacklight: isBacklight,\n        oldIsBeep: isBeep,\n        oldBacklightTimer: backlightTimer,\n        oldAutoOff: autoOff,\n        // oldIsClicleStudy: temporaryStorage.isClicleStudy,\n        oldIsClicleStudy: isClicleStudy\n\n\n      })\n    }\n\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    this.setState({\n\n    })\n  }\n\n  _save = () => {\n    console.log('点击保存');\n    /**\n     * 分别两部分保存保存，\n     * 本地存储：程序自启动、测量单位、背光、蜂鸣器、背光时间、硬件自动关机时间、腋温测量时间\n     * 临时存储：处于临床测试状态\n     */\n    this.setState({\n      isSave: false\n    })\n    let { self_tarting, isHua, isClicleStudy, isBacklight, isBeep, backlightTimer, autoOff, is15 } = this.state\n    // console.log({ self_tarting, isHua, isClicleStudy, isBacklight, isBeep, backlightTimer, autoOff, is15 });\n    let settings = {\n      isHua,\n      is15,\n      self_tarting,\n      isBacklight,\n      isBeep,\n      backlightTimer,\n      autoOff,\n    }\n    electronStore.set(`${storage.userId}-hardwareConfiguration`, settings)\n    // temporaryStorage.isClicleStudy = isClicleStudy\n    storage.isClinical = `${isClicleStudy}`\n    let ipcRenderer = window.electron.ipcRenderer\n    if (self_tarting) {\n      ipcRenderer.send('openAutoStart')\n    } else {\n      ipcRenderer.send('closeAutoStart')\n    }\n    let setArr = ['03', 'ed', '07', 'dd', autoOff.number, isBacklight ? backlightTimer.number : '00', isBeep ? '11' : '00', isHua ? '00' : '01']\n    console.log('setArr', setArr);\n\n\n\n    ipcRenderer.send('usbdata', { command: '21', arr: setArr })\n\n    this.props.history.goBack()\n  }\n  _goback = () => {\n    console.log('返回');\n    let { isHua, is15, isBacklight, isBeep, backlightTimer, autoOff, isClicleStudy,\n      oldAutoOff, oldBacklightTimer, oldIs15, oldIsBacklight, oldIsBeep, oldIsClicleStudy, oldIsHua, } = this.state\n    if (isHua !== oldIsHua || is15 !== oldIs15 || isBacklight !== oldIsBacklight || isBeep !== oldIsBeep || backlightTimer !== oldBacklightTimer\n      || autoOff !== oldAutoOff || isClicleStudy !== oldIsClicleStudy) {\n      console.log('做了更改');\n      this.setState({\n        isSave: true\n      })\n\n    } else {\n      this.props.history.goBack()\n    }\n\n  }\n\n  //验证码光标后移\n  handleInputValue = (e, type) => {\n\n    const { value = \"\" } = e.target;\n    switch (type) {\n      case \"A\":\n        if (value) this.secondFoucs.focus();\n\n        this.setState({\n          valueA: value.slice(0, 1)\n        });\n\n\n        break;\n\n\n      case \"B\":\n        if (value) this.tridFoucs.focus();\n\n        this.setState({\n          valueB: value.slice(0, 1)\n        });\n\n\n        break;\n\n      case \"C\":\n        if (value) this.fourFoucs.focus();\n\n        this.setState({\n          valueC: value.slice(0, 1)\n        });\n\n\n        break;\n\n      case \"D\":\n        if (value) this.fiveFoucs.focus();\n\n        this.setState({\n          valueD: value.slice(0, 1)\n        });\n\n\n        break;\n\n      case \"E\":\n        if (value) this.sixFoucs.focus();\n\n        this.setState({\n          valueE: value.slice(0, 1)\n        });\n\n\n        break;\n      default:\n        this.setState({\n          valueF: value.slice(0, 1),\n          isShow: true\n        });\n        break;\n    }\n\n  };\n  //删除验证码\n  handleDel = e => {\n    const BACK_SPACE = 8;\n    const isBackSpaceKey = e.keyCode === BACK_SPACE;\n    if (isBackSpaceKey && e.target.value.length === 0) {\n      let previous = e.target;\n      //上一个兄弟节点\n      previous = previous.previousElementSibling;\n      if (previous !== null && previous.tagName.toLowerCase() === \"input\") {\n        previous.focus();\n      }\n    }\n  };\n\n\n  moceCursor = (index) => {\n    let inputs = document.querySelectorAll('#settings .verify input')\n    if (index < 5) {\n      inputs[++index].focus()\n    }\n  }\n  backCursor = (index) => {\n    let inputs = document.querySelectorAll('#settings .verify input')\n    inputs[--index].focus()\n  }\n  _device = () => {\n\n    let userId = storage.userId\n    let deviceList = electronStore.get(`${userId}-deviceList`)\n    console.log('---', deviceList);\n    if (!deviceList) {\n      let str = `${getRamNumber()}`\n      for (let i = 0; i < 5; i++) {\n        str += `:${getRamNumber()}`\n      }\n      console.log('随机生成的mac地址:', str);\n      deviceList = [{ name: 'MellaPro', deviceType: 'mellaPro', macId: str }]\n      electronStore.set(`${userId}-deviceList`, deviceList)\n    }\n\n\n    function getRamNumber() {\n      var result = '';\n      for (var i = 0; i < 2; i++) {\n        result += Math.floor(Math.random() * 16).toString(16);//获取0-15并通过toString转16进制\n      }\n      //默认字母小写，手动转大写\n      return result.toLowerCase();//另toLowerCase()转小写\n    }\n    let deviceArr = []\n    let selectDevice = electronStore.get(`${storage.userId}-selectDevice`)\n    let selectDeviceName = ''\n    for (let i = 0; i < deviceList.length; i++) {\n      const element = deviceList[i];\n      let json = {\n        key: element.macId, value: element.name\n      }\n      deviceArr.push(json)\n      if (selectDevice === element.macId) {\n        selectDeviceName = element.name\n      }\n    }\n\n\n\n    return (\n      // <div className=\"item\" style={{ marginTop: px(15) }}>\n      <div className=\"title\">\n        <div className=\"hardSetting\">{`Hardware Settings`}</div>\n      </div>\n      // </div>\n    )\n  }\n\n\n  render() {\n    let { isClicleStudy, isBacklight, isBeep, backlightTimer, valueA, valueB, valueC, valueD, isClicleStudyModal, valueE, valueF, maxLength, sortBy, showsortBy } = this.state\n\n    let bodyHeight = '90%'\n    try {\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\n    } catch (error) {\n\n    }\n\n\n    return (\n      <div id=\"settings\">\n        <div className=\"heard\">\n          <Heart\n            onReturn={this._goback}\n\n          />\n        </div>\n\n\n        <div className=\"body\">\n          <div className=\"setting\">\n            {/* 桌面设计 */}\n            <div className=\"desk\">\n              <div className=\"title\">Desktop Settings</div>\n\n              <div className=\"item\" style={{ marginBottom: px(10) }}>\n                <div className=\"l\">\n                  <div className=\"text\">Launch Mella on Computer Startup</div>\n                  <div className=\"icon\"\n                    onClick={() => this.setState({ self_tarting: !this.state.self_tarting })}\n                  >\n                    {(this.state.self_tarting) && <span  >&#xe619;</span>}\n\n                  </div>\n\n                </div>\n\n\n                <div className=\"l\" style={{ paddingLeft: px(50), paddingRight: px(50) }}>\n                  <div className=\"text\">Units:</div>\n                  <div className=\"unit\">\n\n\n                    <div className=\"one\"\n\n                      onClick={() => { this.setState({ isHua: true }) }}\n                    >\n                      <div className=\"check\">\n                        {(this.state.isHua) && <div className=\"ciral\" />}\n                      </div>\n                      <div className=\"unitsText\">°F / lbs</div>\n                    </div>\n                    <div className=\"one\"\n\n                      onClick={() => { this.setState({ isHua: false }) }}\n                    >\n                      <div className=\"check\">\n                        {(!this.state.isHua) && <div className=\"ciral\" />}\n                      </div>\n                      <div className=\"unitsText\">°C / kg</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"item\" style={{ marginBottom: px(10) }}>\n                {/* <div className=\"l\">\n                  <div className=\"text\">Clinical Study Mode</div>\n                  <div className=\"switch\">\n                    <Switch\n                      checked={isClicleStudy}\n                      onClick={() => {\n                        if (isClicleStudy === false) {\n                          this.setState({\n                            isClicleStudy: !isClicleStudy,\n                            isClicleStudyModal: true\n                          })\n                        } else {\n                          this.setState({\n                            isClicleStudy: !isClicleStudy\n                          })\n                          // temporaryStorage.isClicleStudy = false\n                          storage.isClinical = `${false}`\n\n                          this.props.history.push({ pathname: '/page10' })\n                        }\n\n                      }}\n                      size='small'\n                    />\n                  </div>\n\n                </div> */}\n\n                {/*\n                <div className=\"l\" style={{ height: '50px' }}>\n\n                </div> */}\n              </div>\n\n            </div>\n\n            {/* 用户设计 */}\n            {\n              // storage.roleId === '3' &&\n              <div className=\"desk\">\n                <div className=\"title user\">User Admin</div>\n\n                <div className=\"item\" style={{ marginBottom: px(10) }}>\n                  <div className=\"l\" onClick={() => { this.props.history.push('/menuOptions/ConnectWorkplace') }}>\n                    <div className=\"text\">{`Org & Practice Profiles`}</div>\n                    <div className=\"rightIcon\">&#xe60c;</div>\n\n                  </div>\n\n\n                  <div className=\"l\" onClick={() => { this.props.history.push('/menuOptions/invite') }}>\n                    <div className=\"text\">Invite Your Team</div>\n                    <div className=\"rightIcon\">&#xe60c;</div>\n                  </div>\n                </div>\n\n                <div className=\"item\" style={{ marginBottom: px(10) }}>\n                  <div className=\"l\"\n                    onClick={() => {\n                      console.log(storage.roleId);\n                      message.destroy()\n                      if (storage.roleId === '3') {\n                        this.props.history.push('/menuOptions/veterinarians')\n                      } else {\n                        message.error('You do not have administrator rights')\n                      }\n                    }}\n\n                  >\n                    <div className=\"text\">Vet Profile Management</div>\n                    <div className=\"rightIcon\">&#xe60c;</div>\n                  </div>\n\n\n                  <div className=\"l \"\n                    onClick={() => this.props.history.push('/menuOptions/petAndParents')}\n\n                    style={{ marginTop: '25px', }}>\n                    <div className=\"text\">Pet and Parents Profile Management</div>\n                    <div className=\"rightIcon\">&#xe60c;</div>\n                  </div>\n                </div>\n\n              </div>\n            }\n\n\n            {/* 硬件设置 */}\n\n            <div className=\"desk\">\n\n              {this._device()}\n              <div className=\"item\">\n                <div className=\"l\">\n                  <div className=\"text\">Backlight</div>\n                  <Switch\n                    checked={isBacklight}\n                    onClick={() => this.setState({ isBacklight: !isBacklight })}\n                    size='small'\n                  />\n                </div>\n\n\n                <div className=\"l\">\n                  <div className=\"text\">Action Beep</div>\n                  <Switch\n                    checked={isBeep}\n                    onClick={() => this.setState({ isBeep: !isBeep })}\n                    size='small'\n                  />\n                </div>\n              </div>\n\n\n              <div className=\"item\">\n                <div className=\"l\">\n                  <div className=\"backlight\" style={{ width: px(300) }} >\n                    <div className=\"text\">Backlight Timer</div>\n                    <div className=\"solid\">\n                      10 Secs\n                      <div className=\"slider\" >\n                        <Slider\n                          min={10}\n                          max={60}\n                          railWidth={px(200)}\n                          getData={(e) => { console.log(e); this.setState({ backlightTimer: e }) }}\n                          left={backlightTimer.length}\n                        />\n                      </div>\n                      60 Secs\n                    </div>\n\n                  </div>\n                </div>\n\n\n                <div className=\"l\" >\n                  <div className=\"backlight\" style={{ width: px(300) }} >\n                    <div className=\"text\">Auto Off After</div>\n                    <div className=\"solid\">\n                      30 Secs\n                      <div className=\"slider\">\n                        <Slider\n                          min={30}\n                          max={60}\n                          railWidth={px(200)}\n                          getData={(e) => { this.setState({ autoOff: e }) }}\n                          left={this.state.autoOff.length}\n                        />\n                      </div>\n                      60 Secs\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"item\">\n\n\n\n                <div className=\"l\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n                  <div className=\"text\">Measurement Time for Axillary Sensor</div>\n                  <div className=\"unit\">\n\n\n                    <div className=\"one\"\n                      onClick={() => { this.setState({ is15: true }) }}\n                    >\n                      <div className=\"check\">\n                        {(this.state.is15) && <div className=\"ciral\" />}\n                      </div>\n                      <div className=\"unitsText\">15 Secs</div>\n                    </div>\n                    <div className=\"one\"\n                      onClick={() => { this.setState({ is15: false }) }}\n                    >\n                      <div className=\"check\">\n                        {(!this.state.is15) && <div className=\"ciral\" />}\n                      </div>\n                      <div className=\"unitsText\">30 Secs</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"l\" onClick={() => this.props.history.push('/menuOptions/advancedsettings')}>\n                  <div className=\"text\">Advanced Settings</div>\n                  <div className=\"rightIcon\">&#xe60c;</div>\n                </div>\n              </div>\n\n\n            </div>\n\n          </div>\n\n\n          <div className=\"btnSave\">\n            <Button\n              text={'Save Changes'}\n              onClick={this._save}\n            />\n          </div>\n        </div>\n\n        <MyModal\n          visible={this.state.isSave}\n          element={\n            <div className='isSave'\n            //  style={{ borderRadius: `${px(20)}px`, backgroundColor: '#fff' }}\n            >\n              <img src={redJinggao} alt=\"\" style={{ width: px(50), margin: `${px(25)}px 0` }} />\n              <p>Settings changed - save?</p>\n              <div className=\"btn\" style={{ margin: `${px(30)}px 0` }} >\n                <Button\n                  text={'Cancel'}\n                  onClick={() => {\n                    this.setState({\n                      isSave: false\n                    })\n                  }}\n                  textBoxStyle={{\n                    width: '40%',\n                    height: px(40)\n                  }}\n                />\n                <Button\n                  text={'OK'}\n                  onClick={this._save}\n                  textBoxStyle={{\n                    width: '40%',\n                    height: px(40)\n                  }}\n                />\n              </div>\n            </div>\n          }\n        />\n\n\n        <MyModal\n          visible={isClicleStudyModal}\n          element={\n            <div className='isSave'\n              style={{ width: '40%' }}\n            >\n\n              <div className=\"title\" style={{ marginTop: px(60) }}>\n                Are you sure you want to enter<br />\n                Clinical Study Mode?<br />\n                Please enter code to enter.\n              </div>\n\n\n\n              <div className='verify' style={{ margin: `${px(20)}px 0` }}>\n\n                <input\n\n                  ref={ref => {\n                    this.firstFoucs = ref;\n                  }}\n                  value={valueA}\n                  maxLength={maxLength}\n                  onKeyDown={maxLength ? this.handleDel : null}\n                  onChange={e => this.handleInputValue(e, \"A\")}\n                  autoFocus={'autofocus'}\n                />\n                <input\n\n                  ref={ref => {\n                    this.secondFoucs = ref;\n                  }}\n                  value={valueB}\n                  maxLength={maxLength}\n                  onKeyDown={maxLength ? this.handleDel : null}\n                  onChange={e => this.handleInputValue(e, \"B\")}\n                />\n                <input\n                  foucs\n\n                  ref={ref => {\n                    this.tridFoucs = ref;\n                  }}\n                  value={valueC}\n                  maxLength={maxLength}\n                  onKeyDown={maxLength ? this.handleDel : null}\n                  onChange={e => this.handleInputValue(e, \"C\")}\n                />\n                <input\n\n                  ref={ref => {\n                    this.fourFoucs = ref;\n                  }}\n                  value={valueD}\n                  maxLength={maxLength}\n                  onKeyDown={maxLength ? this.handleDel : null}\n                  onChange={e => this.handleInputValue(e, \"D\")}\n                />\n\n\n\n                <input\n\n                  ref={ref => {\n                    this.fiveFoucs = ref;\n                  }}\n                  value={valueE}\n                  maxLength={maxLength}\n                  onKeyDown={maxLength ? this.handleDel : null}\n                  onChange={e => this.handleInputValue(e, \"E\")}\n                />\n                <input\n\n                  ref={ref => {\n                    this.sixFoucs = ref;\n                  }}\n                  value={valueF}\n                  maxLength={maxLength}\n                  onKeyDown={maxLength ? this.handleDel : null}\n                  onChange={e => this.handleInputValue(e, \"F\")}\n                />\n              </div>\n\n\n\n\n              <div className=\"btn\" style={{ margin: `${px(30)}px 0` }} >\n                <Button\n                  text={'Cancel'}\n                  onClick={() => {\n                    this.setState({\n                      isClicleStudyModal: false,\n                      isClicleStudy: false,\n                      valueA: '',\n                      valueB: '',\n                      valueC: '',\n                      valueD: '',\n                      valueE: '',\n                      valueF: ''\n                    })\n                  }}\n                  textBoxStyle={{\n                    width: '40%',\n                    height: px(40)\n                  }}\n                />\n                <Button\n                  text={'OK'}\n                  onClick={() => {\n                    if (valueA && valueB && valueC && valueD && valueE && valueF) {\n                      this.setState({\n                        isClicleStudyModal: false\n                      })\n                      // temporaryStorage.isClicleStudy = true\n\n                      // let storage = window.localStorage;\n                      storage.isClinical = `${true}`\n                      this.props.history.push({ pathname: '/page8', identity: storage.identity });\n                    }\n\n\n                  }}\n                  textBoxStyle={{\n                    width: '40%',\n                    height: px(40)\n                  }}\n                />\n              </div>\n            </div>\n          }\n        />\n\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/ezyvetApi.js",[],["493","494"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/PetsUI.jsx",["495","496","497","498","499","500","501","502"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/ezyVetLogin/index.jsx",["503"],"import React, { Component, } from 'react'\nimport {\n    Button,\n    Input,\n    Form,\n    Select\n} from 'antd';\n\nimport dui from '../../assets/images/dui.png'\n\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\n\nimport './index.less';\nimport { ezyvetauth } from '../../api/melladesk/EzyVet';\n\nlet storage = window.localStorage;\nconst { Option } = Select;\nexport default class EzyNetLogin extends Component {\n\n    state = {\n        isRemember: false,\n        client_id: '',\n        client_secret: '',\n        partner_id: ''\n    }\n\n    componentDidMount() {\n        let ipcRenderer = window.electron.ipcRenderer\n        ipcRenderer.send('middle')\n        storage.ezyVetToken = ''\n    }\n    componentWillMount() {\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin1 !== '', storage.ezyVetToken1 !== undefined, `${storage.ezyVetToken1}` !== 'undefined');\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin !== '', storage.ezyVetToken !== undefined, `${storage.ezyVetToken}` !== 'undefined');\n        if (storage.ezyVetLogin !== '' && storage.ezyVetToken !== undefined && `${storage.ezyVetToken}` !== 'undefined') {\n            try {\n                let data = JSON.parse(storage.ezyVetLogin)\n                console.log('--', data);\n                this.setState({\n                    isRemember: data.isRemember,\n                    client_id: data.client_id,\n                    client_secret: data.client_secret,\n                    partner_id: data.partner_id\n                })\n            } catch (error) {\n                console.log(error);\n            }\n\n        }\n    }\n\n\n    render() {\n        const formItemLayout = {\n            labelCol: {\n                xs: { span: 10 },\n                sm: { span: 6 },\n            },\n            wrapperCol: {\n                xs: { span: 24 },\n                sm: { span: 14 },\n            },\n        };\n        const tailFormItemLayout = {\n            wrapperCol: {\n                xs: {\n                    span: 10,\n                    offset: 0,\n                },\n                sm: {\n                    span: 8,\n                    offset: 7,\n                },\n            },\n        };\n\n        const _next = (values) => {\n            console.log('Received values of form: ', values);\n            let parames = {\n                clientId: values.client_id,\n                clientSecret: values.client_secret,\n                partnerId: values.partner_id,\n            }\n            console.log(parames);\n            ezyvetauth(parames)\n                .then((res) => {\n                    console.log(res);\n                    if (res && res.msg === 'success') {\n\n                        storage.ezyVetToken = res.data\n                        if (this.state.isRemember) {\n                            storage.ezyVetLogin = JSON.stringify({\n                                client_id: values.client_id,\n                                client_secret: values.client_secret,\n                                partner_id: values.partner_id,\n                                isRemember: this.state.isRemember\n                            })\n                        } else {\n                            storage.ezyVetLogin = ''\n                        }\n                        storage.selectTime = ''\n                        storage.ezyVetReLogin = JSON.stringify({  //如果令牌过期了，需要重新输入信息重新获取令牌\n                            client_id: values.client_id,\n                            client_secret: values.client_secret,\n                            partner_id: values.partner_id,\n                        })\n\n                        this.props.history.push('EzyVetSelectTime')\n                    }\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n\n        }\n        let { client_id, client_secret, partner_id } = this.state\n\n        return (\n            <div id=\"eszVetLogin\">\n                {/* 关闭缩小 */}\n                <MaxMin\n                    onClick={() => { this.props.history.push('/') }}\n                    onClick1={() => this.props.history.push('/page1')}\n                />\n                <div className=\"text\">\n                    Please enter your user information\n                </div>\n                <div className=\"form\">\n                    <Form\n                        {...formItemLayout}\n                        name=\"register\"\n                        onFinish={_next}\n                        initialValues={{\n                            client_id, client_secret, partner_id\n                        }}\n\n                        scrollToFirstError\n                    >\n                        <Form.Item\n                            name=\"client_id\"\n                            label=\"Client ID\"\n                            rules={[{ required: true, message: 'Please input your Client ID!', whitespace: true }]}\n\n                        >\n                            <Input className='inp' />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"client_secret\"\n                            label=\"Client Secret\"\n                            rules={[{ required: true, message: 'Please input your Client Secret!', whitespace: true }]}\n                            hasFeedback\n                        >\n                            <Input.Password className='inp' />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"partner_id\"\n                            label=\"Partner ID\"\n                            rules={[{ required: true, message: 'Please input your Partner ID!', whitespace: true }]}\n                        >\n                            <Input className='inp' />\n                        </Form.Item>\n\n                        <Form.Item\n                            {...tailFormItemLayout}\n                        >\n                            <div className=\"btn\">\n                                <Button\n                                    type=\"primary\"\n                                    shape=\"round\"\n                                    size='large'\n                                    htmlType=\"submit\"\n                                >\n                                    Next\n                                </Button>\n                            </div>\n                        </Form.Item>\n                    </Form>\n                </div>\n                <div className=\"remember\">\n                    <p>Stay Signed In:</p>\n                    <div className=\"box\" onClick={() => {\n                        let { isRemember } = this.state\n                        this.setState({\n                            isRemember: !isRemember\n                        })\n                        storage.isRemember = !isRemember\n                    }}>\n                        {this.state.isRemember && <img src={dui} alt=\"\" />}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n",["504","505"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/editPetInfo/index.jsx",["506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522"],"import React, { Component } from 'react'\nimport { Input, Menu, message, Select, Calendar, Col, Row } from 'antd';\nimport { createFromIconfontCN } from '@ant-design/icons';\n\nimport dog from '../../assets/images/pinkdog.png'\nimport cat from '../../assets/images/pinkcat.png'\nimport redDog from '../../assets/images/reddog.png'\nimport redCat from '../../assets/images/redcat.png'\nimport redother from '../../assets/images/redother.png'\nimport other from '../../assets/images/other.png'\nimport selectphoto from '../../assets/images/sel.png'\nimport Close from '../../assets/img/close.png'\nimport nextImg from '../../assets/img/nextImg.png'\nimport dui from '../../assets/images/dui.png'\nimport female from '../../assets/images/female.png'\nimport male from '../../assets/images/male.png'\n\nimport { mTop, px, win } from '../../utils/px';\nimport MyModal from '../../utils/myModal/MyModal';\nimport electronStore from '../../utils/electronStore';\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\nimport Button from '../../utils/button/Button';\nimport Avatar from '../../components/avatar/Avatar';\n\nimport { connect } from 'react-redux';\nimport { petDetailInfoFun } from '../../store/actions';\nimport moment from 'moment';\n\nimport './index.less';\nimport { checkPatientId, getPetInfoByPatientIdAndPetId, selectBreedBySpeciesId, updatePetInfo } from '../../api/mellaserver/pet';\nimport { listDoctorsByAdmin } from '../../api/mellaserver/organization';\n\nconst { SubMenu } = Menu;\nconst { Option } = Select;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\nlet storage = window.localStorage;\nlet errPatientId = ''\nlet url = 'https://www.mellaserver.com/api/mellaserver'\n// let url = 'http://192.168.0.36:8080/mellaserver'\nclass EditPetInfo extends Component {\n  state = {\n    dogImg: dog,\n    catImg: cat,\n    otherImg: other,\n    selectWZ: '',\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    api: '',\n    id: '',\n    seleceID: '',//医生id\n    petSpecies: 0,\n    unit: 1,\n    gender: 0,\n    isMix: false,\n    imageId: -1,\n    imgurl: '',\n    breedArr: [],\n    petSpeciesBreedId: '',\n    dogData: [],\n    birthday: moment(new Date()).format('MMMM D, YYYY'),\n    patientId: '',\n    petName: '',\n\n    petId: '',\n    lastName: '',\n    firstName: '',\n    breedName: '',\n\n    initpetName: '',\n    initpetId: '',\n    initlastName: '',\n    initfirstName: '',\n    initbreedName: '',\n    spin: false,\n    dogBreed: [],\n    catBreed: [],\n\n    oldPatientId: '',\n    searchBreed: '',\n    selectBreedJson: {},\n    confirmSelectBreedJson: {},\n    selectBreed: false,\n\n    doctorArr: [],\n    selectUser: false,\n    selectUserJson: {},\n    selectUserId: '',\n    confirmSelectUserJson: {},\n    petUrl: ''\n\n\n  }\n\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big', win())\n    // if (this.props.location.participate) {\n    //   let props = this.props.location.participate\n    //   console.log(props);\n    //   this.setState({\n    //     patientId: props.patientId,\n    //     petId: props.petId,\n    //     oldPatientId: props.patientId,\n\n    //   }, () => {\n    //     this._getPetInfo()\n    //   })\n    //   console.log(props);\n    // } else {\n    //   this._getPetInfo()\n    // }\n    let { petDetailInfo } = this.props\n    let { petId, patientId, petName, lastName, firstName, breedName, isWalkIn } = petDetailInfo\n    if (!isWalkIn) {\n      if (!patientId || patientId === 'unknown') {\n        patientId = null\n      }\n      this.setState({\n        patientId,\n        petId,\n        oldPatientId: patientId,\n        breedName: breedName\n\n      }, () => {\n        this._getPetInfo()\n      })\n    }\n\n\n    let dogBreed = electronStore.get('dogBreed') || []\n    let catBreed = electronStore.get('catBreed') || []\n    this.setState({\n      dogBreed,\n      catBreed\n    })\n    this.getBreed('cat')\n    this.getBreed('dog')\n    this.getUser()\n\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big', win())\n    this.setState({\n\n    })\n  }\n  getBreed = (val) => {\n    let data = {}\n    switch (val) {\n      case 'dog':\n        data.speciesId = 2; break;\n\n      case 'cat':\n        data.speciesId = 1; break;\n    }\n\n    selectBreedBySpeciesId(data)\n      .then(res => {\n        // console.log('---', res);\n        if (res.code === 0) {\n          let arr = []\n          res.petlist.map((item, index) => {\n            let data = {\n              petSpeciesBreedId: item.petSpeciesBreedId,\n              breedName: item.breedName\n            }\n            arr.push(data)\n          })\n          if (val === 'dog') {\n            this.setState({\n              dogBreed: arr\n            })\n            electronStore.set('dogBreed', arr)\n          } else if (val === 'cat') {\n            this.setState({\n              catBreed: arr\n            })\n            electronStore.set('catBreed', arr)\n          }\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n  getUser = () => {\n    let params = {\n      doctorId: storage.userId,\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n\n    console.log('查询宠物的入参', params);\n\n\n    listDoctorsByAdmin(storage.lastOrganization, params)\n      .then(res => {\n        console.log('人员列表', res);\n\n        if (res.flag === true && res.code === 20000) {\n          let data = []\n          for (let i = 0; i < res.data.length; i++) {\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\n\n            let json = {\n              insertedAt: createTime,\n              breedName: `${lastName} ${firstName}`,\n              petSpeciesBreedId: userId,\n              email,\n              birthday,\n              isLimit,\n              isDeleted,\n              phone,\n              url,\n              firstName, lastName, roleId\n            }\n            data.push(json)\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          this.setState({\n            doctorArr: data,\n            // parentList: data //这里只是测试，后期删除\n\n          })\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n\n      })\n  }\n\n  _getPetInfo = () => {\n    let { patientId, petId } = this.state\n    let datas = {\n      doctorId: storage.userId,\n    }\n    if (storage.lastWorkplaceId) {\n      datas.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      datas.org = storage.lastOrganization\n    }\n    if (patientId && patientId !== 'undefined') {\n      datas.patientId = patientId\n    }\n    if (petId) {\n      datas.petId = petId\n    }\n    this.setState({\n      spin: true\n    })\n    console.log('入参：', datas);\n    getPetInfoByPatientIdAndPetId(datas)\n    getPetInfoByPatientIdAndPetId(datas)\n      .then(res => {\n        this.setState({\n          spin: false\n        })\n        console.log('>>>>>>>>>>>>>>', res);\n        if (res.flag === true) {\n          //有宠物，进入1\n          let datas = []\n          for (let i = 0; i < res.data.length; i++) {\n            if (res.data[i].petId === this.state.petId) {\n              datas = res.data[i]\n              break\n            }\n          }\n          console.log('获取到宠物', datas);\n          let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url, gender, speciesId, petSpeciesBreedId } = datas\n\n          if (isMix !== true) {\n            isMix = false\n          }\n          // petName = isNull(petName)\n          lastName = isNull(lastName)\n          firstName = isNull(firstName)\n          // breedName = isNull(breedName)\n\n          let confirmSelectBreedJson = {}\n          if (petSpeciesBreedId || petSpeciesBreedId === 0) {\n            confirmSelectBreedJson = {\n              name: breedName,\n              petSpeciesBreedId\n            }\n          }\n\n          url = isNull(url)\n          if (birthday != null) {\n            birthday = moment(birthday).format('MMMM D, YYYY')\n          }\n          else {\n            birthday = ''\n          }\n          if (gender === null || isNaN(gender) || `${gender}` === 'null' || `${gender}` === 'NaN') {\n            gender = 0\n          }\n          if (weight) {\n            weight = (weight * 2.2046).toFixed(1)\n          } else {\n            weight = ''\n          }\n          this.setState({\n            petId,\n            petName,\n            lastName,\n            firstName,\n            breedName,\n            isMix,\n            birthday,\n            weight,\n            imgurl: url,\n            gender,\n            petSpecies: speciesId,\n            initpetName: petName,\n            initlastName: lastName,\n            initfirstName: firstName,\n            confirmSelectBreedJson,\n            petSpeciesBreedId\n          })\n          switch (speciesId) {\n            case 1: this.selectWZ('cat'); break;\n            case 2: this.selectWZ('dog'); break;\n\n            default: this.selectWZ('other'); break;\n          }\n\n        } else {\n          message.destroy()\n          message.error('data load failed')\n        }\n      })\n      .catch(err => {\n        this.setState({\n          spin: false\n        })\n        console.log(err);\n        message.destroy()\n        message.error('data load failed')\n      })\n    const isNull = (value) => {\n      if (value === null || isNaN(value) || `${value}` === 'null' || `${value}` === 'NaN') {\n        return ''\n      } else {\n        return value\n      }\n    }\n\n  }\n\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n\n  /**------------------顶部end------------------------ */\n  selectWZ = (val) => {\n    let { catBreed, dogBreed } = this.state\n    if (this.state.selectWZ !== val) {\n      switch (val) {\n        case 'dog':\n          this.setState({\n            catImg: cat,\n            dogImg: redDog,\n            otherImg: other,\n            selectWZ: val,\n            breedArr: [].concat(dogBreed),\n            confirmSelectBreedJson: {\n              name: \"defaultdog\",\n              petSpeciesBreedId: 12001\n            }\n          })\n\n          break;\n\n        case 'cat':\n          this.setState({\n            catImg: redCat,\n            dogImg: dog,\n            otherImg: other,\n            selectWZ: val,\n            breedArr: [].concat(catBreed),\n            confirmSelectBreedJson: {\n              name: \"defaultcat\",\n              petSpeciesBreedId: 11001\n            }\n          })\n\n          break;\n\n        case 'other':\n          this.setState({\n            catImg: cat,\n            dogImg: dog,\n            otherImg: redother,\n            selectWZ: val,\n            breedArr: [],\n            confirmSelectBreedJson: {\n              name: \"defaultother\",\n              petSpeciesBreedId: 13001\n            }\n          })\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n  _petSpecies = () => {\n    let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\n\n    this.avatar = imgurl ? imgurl : selectphoto\n\n    return (\n      <div className=\"petSpecies\"\n        style={{ marginTop: mTop(30) }}\n      >\n        <div className=\"l\">\n          <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\n          <div className=\"selectSpecies\">\n            <ul>\n              <li >\n                <div className='speciesChild' >\n                  <div className='dog'\n\n                    onClick={() => { this.selectWZ('dog') }}>\n                    <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Dog\n                </div>\n              </li>\n              <li>\n                <div className='speciesChild' >\n                  <div className='dog' onClick={() => { this.selectWZ('cat') }} >\n                    <img src={catImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Cat\n                </div>\n              </li>\n              <li >\n                <div className='speciesChild' >\n                  <div className='dog' onClick={() => { this.selectWZ('other') }} >\n                    <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Other\n                </div>\n              </li>\n\n            </ul>\n          </div>\n        </div>\n        <div className=\"r\">\n          <div className=\"img\">\n            <Avatar\n              init={\n                <div className=\"ciral \">\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\n                </div>\n              }\n              getinfo={(val) => {\n                if (val) {\n                  this.setState({\n                    imageId: val\n                  })\n                }\n\n              }}\n              getAllInfo={(val) => {\n                if (val.url) {\n                  this.setState({\n                    petUrl: val.url\n                  })\n                }\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _petName = () => {\n    let birthday = this.state.birthday\n    let birthdayValue = birthday ? moment(birthday) : moment(new Date())\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\n        <div className=\"l\">\n          <p >Pet Name</p>\n          <div className=\"infoInput\">\n            <Input\n              bordered={false}\n              value={this.state.initpetName}\n              onChange={(item) => {\n                this.setState({\n                  petName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\n                  initpetName: item.target.value\n                })\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"r\">\n          <p >Pet Birthday</p>\n          <div className=\"infoInput\" >\n            <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\n              document.getElementById('calendar').style.display = 'block'\n            }}>{this.state.birthday}</p>\n            <div className=\"calendar\" id=\"calendar\">\n              <Calendar\n                fullscreen={false}\n                headerRender={({ value, type, onChange, onTypeChange }) => {\n                  const start = 0;\n                  const end = 12;\n                  const monthOptions = [];\n\n                  const current = value.clone();\n                  const localeData = value.localeData();\n                  const months = [];\n                  for (let i = 0; i < 12; i++) {\n                    current.month(i);\n                    months.push(localeData.monthsShort(current));\n                  }\n\n                  for (let index = start; index < end; index++) {\n                    monthOptions.push(\n                      <Select.Option className=\"month-item\" key={`${index}`}>\n                        {months[index]}\n                      </Select.Option>\n                    );\n                  }\n                  const month = value.month();\n\n                  const year = value.year();\n                  const options = [];\n                  for (let i = year - 10; i < year + 10; i += 1) {\n                    options.push(\n                      <Select.Option key={i} value={i} className=\"year-item\">\n                        {i}\n                      </Select.Option>\n                    );\n                  }\n                  return (\n                    <div style={{ padding: 8 }}>\n                      <Row gutter={8}>\n                        <Col>\n                          <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            className=\"my-year-select\"\n                            onChange={(newYear) => {\n                              const now = value.clone().year(newYear);\n                              onChange(now);\n                            }}\n                            value={String(year)}\n                          >\n                            {options}\n                          </Select>\n                        </Col>\n                        <Col>\n                          <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            value={String(month)}\n                            onChange={(selectedMonth) => {\n                              const newValue = value.clone();\n                              newValue.month(parseInt(selectedMonth, 10));\n                              onChange(newValue);\n                            }}\n                          >\n                            {monthOptions}\n                          </Select>\n                        </Col>\n                        {/* <Col>\n                          <div className=\"btn\" onClick={() => {\n                            document.getElementById('calendar').style.display = 'none'\n                          }}>\n                            Choose this date\n                          </div>\n\n                        </Col> */}\n                      </Row>\n                    </div>\n                  );\n                }}\n                value={birthdayValue}\n                onSelect={(value) => {\n                  console.log(value);\n                  this.setState({\n                    birthday: moment(value).format('MMMM D, YYYY')\n                  })\n                  document.getElementById('calendar').style.display = 'none'\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n  _ownName = () => {\n    let { confirmSelectUserJson } = this.state\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(18), alignItems: 'flex-end' }}\n      >\n        <div className=\"l\">\n          <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\n          <div className=\"infoInput\">\n            <Input bordered={false}\n              value={this.state.patientId}\n              onChange={(item) => {\n                this.setState({\n                  patientId: item.target.value.replace(/\\s/g, \"\"),\n                  intFlog: true\n                })\n                if (item.target.value !== errPatientId) {\n                  message.destroy()\n                }\n              }}\n              onBlur={() => {\n                if (this.state.patientId === this.state.oldPatientId) {\n                  return\n                }\n                if (this.state.patientId === '') {\n                  message.error('The pet ID cannot be empty');\n                  return\n                }\n                let params = {\n                  patientId: this.state.patientId,\n                  doctorId: storage.userId\n                }\n                if (storage.lastWorkplaceId) {\n                  params.workplaceId = storage.lastWorkplaceId\n                }\n                if (storage.lastOrganization) {\n                  params.organizationId = storage.lastOrganization\n                }\n\n                checkPatientId(params)\n                  .then(res => {\n                    if (res.flag === false) {\n                      errPatientId = params.patientId\n                      message.error('This patient ID is already occupied, please change to a new one');\n                    } else {\n                      errPatientId = '';\n                      message.success('This pet ID will work');\n                    }\n                  })\n                  .catch(err => {\n                    console.log(err);\n\n                  })\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"r\">\n          <div className=\"infoInput flex\"\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer', }}\n            onClick={() => {\n\n              this.setState({\n                // selectUser: true\n              })\n            }}\n          >\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectUserJson.name ? confirmSelectUserJson.name : 'My Parents'}</div>\n            <div className=\"nextimg\" >\n              <img src={nextImg} style={{ height: px(15) }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _select = (value, data) => {\n    console.log(value, data);  //value的值为id\n    this.setState({\n      petSpeciesBreedId: value,\n      breedName: data.children\n    })\n  }\n  _primaryBreed = () => {\n\n    let options = null\n    options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\n    let { breedName, confirmSelectBreedJson } = this.state\n    console.log('=============', confirmSelectBreedJson);\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(30), alignItems: 'flex-end', }}>\n        <div className=\"l\">\n          <div className=\"infoInput flex\"\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\n            onClick={() => {\n              this.setState({\n                selectBreed: true\n              })\n            }}\n          >\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>\n              {\n                confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'\n              }\n            </div>\n            <div className=\"nextimg\" >\n              <img src={nextImg} style={{ height: px(15) }} />\n            </div>\n          </div>\n        </div>\n        <div className=\"r\" >\n          <div className=\"max\">\n            Mix?\n            <div className=\"selected\"\n              onClick={() => this.setState({\n                isMix: !this.state.isMix\n              })}\n            >\n              {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n  _weight = () => {\n    let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\n    switch (this.state.unit) {\n      case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\n      case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\n    }\n    switch (this.state.gender) {\n      case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\n      case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\n    }\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\n        <div className=\"l\">\n          <p >Pet Weight</p>\n          <div className=\"infoInput\">\n            <Input bordered={false}\n              value={this.state.weight}\n              onChange={(item) => {\n\n                this.setState({\n                  weight: item.target.value\n                })\n              }}\n            />\n            <div className=\"ibKg\">\n              <div className=\"ibs\"\n                style={{ backgroundColor: ibBgcColor, color: ibCor }}\n                onClick={() => {\n                  if (this.state.unit === 2) {\n\n                    this.setState({\n                      unit: 1,\n                      weight: (this.state.weight * 2.2046).toFixed(1)\n                    })\n                  }\n                }}\n              >Ibs</div>\n              <div className=\"kgs\"\n                style={{ backgroundColor: kgBgcColor, color: kgCor }}\n                onClick={() => {\n\n                  if (this.state.unit === 1) {\n\n                    this.setState({\n                      unit: 1,\n                      weight: (this.state.weight / 2.2046).toFixed(1)\n                    })\n                  }\n                  this.setState({ unit: 2 })\n                }}\n              >kgs</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"r\">\n          <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\n          <div className=\"gender\">\n            <div className=\"selectGender\">\n              <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\n                <div className=\"femaleCiral\"\n                  style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\n                  onClick={() => this.setState({ gender: 1 })}\n                >\n                  <img src={female} alt=\"\" style={{ width: px(15) }} />\n                </div>\n                Female\n              </div>\n              <div className=\"male\" style={{ fontSize: px(18) }}>\n                <div className=\"maleCiral\"\n                  style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\n                  onClick={() => this.setState({ gender: 0 })}\n                >\n                  <img src={male} alt=\"\" style={{ width: px(20) }} />\n                </div>\n                Male\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n\n  render() {\n    const { closeColor, closebgc, minbgc } = this.state\n\n\n    return (\n      <div id=\"editPetInfo\">\n        {/* 头部 */}\n        <div className=\"close1\">\n          {/* 菜单 */}\n          <div className=\"menu\">\n            <MyIcon type='icon-fanhui4' className=\"icon\" onClick={() => {\n              // if (storage.goEditPet === \"mesasure\") {\n              //   this.props.history.push({ pathname: 'page8', participate: { patientId: this.state.patientId } })\n              // } else {\n              //   this.props.history.goBack()\n              // }\n              this.props.history.goBack()\n            }} />\n          </div>\n          <div className=\"text\">mella</div>\n          <div className='maxmin'>\n            <div\n              className=\"min iconfont icon-64\"\n              onClick={this._min}\n              onMouseEnter={this._minMove}\n              onMouseLeave={this._minLeave}\n              style={{ backgroundColor: minbgc }}\n            ></div>\n\n            <div\n              className=\"max iconfont icon-guanbi2\"\n              onClick={this._close}\n              onMouseEnter={this._closeMove}\n              onMouseLeave={this._closeLeave}\n              style={{ backgroundColor: closebgc, color: closeColor }}\n            ></div>\n          </div>\n        </div>\n        <div className=\"editPetInfo_top\">\n          <div className=\"title\">{`${this.state.patientId}, ${this.state.petName}`}</div>\n          {this._petSpecies()}\n          {this._petName()}\n          {this._ownName()}\n          {this._primaryBreed()}\n          {this._weight()}\n        </div>\n        <div className=\"editPetInfo_foot\">\n          <div className=\"save\"\n            onClick={() => {\n              let { petName, birthday, firstName, lastName, petSpeciesBreedId, isMix, weight, gender, unit, imageId, breedName, petId, confirmSelectBreedJson, confirmSelectUserJson } = this.state\n              console.log('生日：', birthday);\n              if (unit === 1) {\n                weight = (0.45359 * weight).toFixed(2)\n              }\n              let data = {}\n              if (this.state.patientId === this.state.oldPatientId) {\n                data = {\n                  petName,\n                  weight: parseFloat(weight),\n                  gender,\n                  firstName,\n                  lastName,\n                  // patientId: this.state.patientId,\n                }\n              } else {\n                data = {\n                  petName,\n                  weight: parseFloat(weight),\n                  gender,\n                  firstName,\n                  lastName,\n                  patientId: this.state.patientId,\n                }\n              }\n\n\n              if (birthday) {\n                data.birthday = moment(birthday).format('YYYY-MM-DD')\n              }\n              if (imageId !== -1) {\n                data.imageId = imageId\n              }\n              // if (breedName) {\n              //   data.breedName = breedName\n              // }\n              if (confirmSelectBreedJson.name) {\n                data.breedName = confirmSelectBreedJson.name\n              }\n              if (confirmSelectUserJson.petSpeciesBreedId) {\n                data.userId = confirmSelectUserJson.petSpeciesBreedId\n              }\n              if (storage.lastOrganization) {\n                data.organizationId = storage.lastOrganization\n              }\n              if (this.state.patientId === '') {\n                message.error('The pet ID cannot be empty');\n              } else {\n                this.setState({\n                  spin: true\n                })\n                // console.log('--------入参', data);\n                updatePetInfo(petId, data)\n                  .then(res => {\n                    this.setState({\n                      spin: false\n                    })\n                    console.log(res);\n                    if (res.flag === true) {\n                      try {\n                        if (storage.identity === '3') {\n                          let data = JSON.parse(storage.doctorExam)\n                          data.petName = petName\n                          data.weight = weight\n                          data.gender = gender\n                          data.patientId = this.state.patientId\n                          if (birthday) {\n                            data.age = moment(new Date()).diff(moment(birthday), 'years')\n                          }\n                          if (confirmSelectBreedJson.name) {\n                            data.breed = confirmSelectBreedJson.name\n                          }\n                          if (this.state.petUrl) {\n                            data.url = this.state.petUrl\n                          }\n\n                          storage.doctorExam = JSON.stringify(data)\n                        }\n                      } catch (error) {\n\n                      }\n                      this.props.petDetailInfoFun({ ...this.props.petDetailInfo, petName, birthday, patientId: this.state.patientId })\n                      this.props.history.goBack()\n                    } else {\n                      message.error('This patient ID is already occupied, please change to a new one')\n                    }\n                  })\n                  .catch(err => {\n                    this.setState({\n                      spin: false\n                    })\n                    console.log(err);\n                  })\n              }\n            }}\n\n          >Save Changes</div>\n\n        </div>\n        <MyModal\n          visible={this.state.spin}\n        />\n        <MyModal\n          // visible={true}\n          visible={this.state.selectBreed}\n          element={\n            <div className='myfindOrg' >\n              <div className=\"orgHeard\">\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\n                  <div>\n\n                  </div>\n                  <div\n                    onClick={() => {\n                      this.setState({\n                        selectBreed: false,\n                        selectBreedJson: {}\n                      })\n                    }}\n                  >\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\n                  </div>\n                </div>\n                <div className=\"text\" >Choose Breed</div>\n\n                <div className=\"searchBox\">\n\n                  <Input\n                    placeholder=\" &#xe61b; Search name\"\n                    bordered={false}\n                    allowClear={true}\n                    value={this.state.searchBreed}\n                    onChange={(item) => {\n\n                      this.setState({\n                        searchBreed: item.target.value\n                      })\n                    }}\n\n                  />\n\n                </div>\n              </div>\n\n\n              <div className=\"list\" >\n                <PhoneBook\n                  listDate={this.state.breedArr}\n                  confirmSelectBreed={this.state.petSpeciesBreedId}\n                  selectFun={(val) => {\n                    // console.log('从子组件传来的数据', val);\n                    this.setState({\n                      selectBreedJson: val,\n                      petSpeciesBreedId: val.petSpeciesBreedId\n                    })\n\n\n                  }}\n                  searchText={this.state.searchBreed}\n                />\n              </div>\n\n              <div className=\"foot\">\n                <Button\n                  text={'Select'}\n                  onClick={() => {\n                    this.setState({\n                      confirmSelectBreedJson: this.state.selectBreedJson,\n                      selectBreed: false\n                    })\n                  }}\n                />\n\n              </div>\n\n            </div>\n          }\n        />\n\n        <MyModal\n          visible={this.state.selectUser}\n          element={\n            <div className='myfindOrg' >\n              <div className=\"orgHeard\">\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\n                  <div>\n\n                  </div>\n                  <div\n                    onClick={() => {\n                      this.setState({\n                        selectUser: false,\n                        selectUserJson: {}\n                      })\n                    }}\n                  >\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\n                  </div>\n                </div>\n                <div className=\"text\" >Choose Parents</div>\n\n                <div className=\"searchBox\">\n\n                  <Input\n                    placeholder=\" &#xe61b; Search name\"\n                    bordered={false}\n                    allowClear={true}\n                    value={this.state.searchBreed}\n                    onChange={(item) => {\n\n                      this.setState({\n                        searchBreed: item.target.value\n                      })\n                    }}\n\n                  />\n\n                </div>\n              </div>\n\n\n              <div className=\"list\" >\n                <PhoneBook\n                  listDate={this.state.doctorArr}\n                  confirmSelectBreed={this.state.selectUserId}\n                  selectFun={(val) => {\n\n                    this.setState({\n                      selectUserJson: val,\n                      selectUserId: val.petSpeciesBreedId\n                    })\n\n\n                  }}\n                  searchText={this.state.searchBreed}\n                />\n              </div>\n\n              <div className=\"foot\">\n                <Button\n                  text={'Select'}\n                  onClick={() => {\n                    this.setState({\n                      confirmSelectUserJson: this.state.selectUserJson,\n                      selectUser: false\n                    })\n                  }}\n                />\n\n              </div>\n\n            </div>\n          }\n        />\n\n      </div>\n    )\n  }\n}\nexport default connect(\n  state => ({\n    petDetailInfo: state.petReduce.petDetailInfo\n  }),\n  { petDetailInfoFun }\n)(EditPetInfo)\n",["523","524"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/measure/index.jsx",["525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558"],"import React, { Component } from 'react'\nimport {\n  Input,\n  Menu,\n  Modal,\n  Table,\n  Popconfirm,\n  Tooltip,\n  message,\n  Select,\n} from 'antd';\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport ye from './../../assets/images/ye1.png'\nimport er from './../../assets/images/er3.png'\nimport gang from './../../assets/images/gang3.png'\nimport dog from './../../assets/images/dog.png'\nimport cat from './../../assets/images/cat.png'\nimport other from './../../assets/images/other.png'\nimport edit from './../../assets/images/edit.png'\nimport del from './../../assets/images/del.png'\nimport start from './../../assets/img/start.png'\nimport redjinggao from './../../assets/img/redjinggao.png'\nimport placement_gang from './../../assets/images/placement_gang.png'\nimport placement_er from './../../assets/images/placement_er.png'\nimport palcement_ye from './../../assets/images/palcement_ye.png'\nimport close from './../../assets/img/close.png'\n\nimport MyModal from './../../utils/myModal/MyModal'\nimport electronStore from './../../utils/electronStore'\nimport { mTop, px, MTop, win } from '../../utils/px';\nimport Heard from '../../utils/heard/Heard';\n\nimport Draggable from \"react-draggable\";\nimport moment from 'moment';\nimport ReactECharts from 'echarts-for-react';// 引入 ECharts 主模块\nimport 'echarts/lib/chart/bar';// 引入柱状图\nimport 'echarts/lib/component/tooltip';// 引入提示框和标题组件\nimport 'echarts/lib/component/title';\n\nimport './index.less';\nimport { addAndSavePetExam, addDeskPet, deletePetExamByExamId, getPetExamAndClinicalByPetId, getPetExamByDoctorId, getPetInfoByPatientIdAndPetId, updatePetExam } from '../../api/mellaserver/pet';\nimport { addAllClinical } from '../../api/mellaserver/clinical';\nimport { getClinicalDataByExamId } from '../../api';\n\nconst { SubMenu } = Menu;\nconst { Option } = Select;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\n\nlet storage = window.localStorage;\nlet echartCi = 0\nlet saveHistoryTime = null, getSerialTime = null\nlet ipcRenderer = window.electron.ipcRenderer\nlet detectTimer = null, countdownTimer = null;\n\nlet resyncDeviceIsClick = true //用于控制多次点击重新配对按钮\nlet num = 0, is97Time = null, is193Time = null, initTime = null\n\nlet num07 = 0       //接收到07命令行的次数\nlet indexNum = 0\nlet meetCondition = false //满足第一次测量在76.6与85之间\nlet tempArr = []\nlet dropNum = 0\n\nlet lastMeasureTemp = 0, lastMeasureBig = true\n\nlet firstMeasure = true  //用户反馈刚到这个界面测量就会显示测量温度过高,因此在这里做一个限制,第一次测量不进入温度过高提示\nexport default class Mesasure extends Component {\n  state = {\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    value: '',\n    api: '',\n    id: '',\n    dataArr: [],\n    seleceID: '',//医生id\n    data: { ci: [''], wen: [] },\n    echarsData: {\n      Eci: [],\n      wen0: [],\n      wen1: []\n    },\n    temColor: '',\n    Temp: '',\n    isMeasure: false,     //腋温正在测量中\n\n    mearsurePart: 1,\n    historyData: [],\n    patientId: '',\n    spin: false,        //patientId后面的刷新按钮是否旋转\n    petName: '',\n    notes: '',\n    addpatient_petName: '',\n    addpatient_description: '',\n    addpatient_species: 1,\n    roomTemperature: '',\n    referenceRectalTemperature: '',\n    bodyConditionScore: '',\n    furLength: '',\n    bodyType: '',\n    heartRate: '',\n    bloodPressure: '',\n    respiratoryRate: '',\n    visible: false,       //nodel框是否显示\n    disabled: true,       //model是否可拖拽\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\n\n    editVisible: false,\n    err07Visible: false,\n\n    leftStatus: 3,         //1代表着有宠物信息，2代表着添加宠物信息，3代表着初始化，没有填入patientId\n\n    selectPet: {\n      petId: '',\n      petName: '',\n      owner: '',\n      breedName: '',\n      isMix: false,\n      age: '',\n      weight: '',\n      birthday: ''\n    },\n    units: '℉',\n    measuerStatus: 'disconnected',\n    isconnected: false,\n    countdown: 60,\n    isPetCharacteristics: true,\n    isEmergency: false,\n    seleceEmergencies: {},\n    emerPatientID: '',\n    emerData: [],         //临床测试所有数据,用于传到mella后台\n    petVitalTypeId: '01',  //测量部位\n\n\n\n    memo: '',\n    editRectal: '',\n    editRoomTemperature: '',\n    editHeartRate: '',\n    editRespiratoryRate: '',\n    editBloodPressure: '',\n    editBodyConditionScore: '',\n    editFurLength: '',\n\n    noUSB: false,  //是否有usb底座，为true代表没有\n\n\n    tip: '',\n    tipSpin: false,\n    loading: false,\n    showHistoryEchart: false,  //在展示历史曲线的时候为true，当开始测量为false\n    tempHeight: false,           //第一次温度过高,需要冷却一下\n  }\n\n  componentWillMount() {\n    try {\n      console.log('-----------------===============-------------', this.props.location.isconnected);\n      if (this.props.location.isconnected === false || this.props.location.isconnected === true) {\n        if (this.props.location.isconnected === false) {\n\n        } else {\n          this.setState({\n            measuerStatus: 'connented',\n            isconnected: true\n\n          })\n          is97Time = new Date()\n        }\n      }\n    } catch (error) {\n\n    }\n  }\n  componentDidMount() {\n    firstMeasure = true\n\n\n    ipcRenderer.send('Lowbig', win())\n    console.log(this.props);\n    storage.isClinical = 'true'\n\n    //这里是为了从编辑宠物界面回来的时候能够直接展示这个宠物\n    if (this.props.location.participate) {\n      let props = this.props.location.participate\n\n      this.setState({\n        patientId: props.patientId\n      }, () => {\n        this._getPetInfo()\n      })\n    } else {\n      if (storage.measurepatientId) {\n        console.log('有上级传来的数据:', storage.measurepatientId);\n        this.setState({\n          patientId: storage.measurepatientId\n        }, () => {\n          this._getPetInfo()\n        })\n      }\n    }\n\n    //这里是记录从哪里传过来的，是普通医生、ezyVet、vetspire\n    if (this.props.location.identity) {\n      switch (this.props.location.identity) {\n        case '1':\n          console.log('这是从vetspire来的')\n\n          break;\n        case '2':\n          console.log('这是从ezyVet来的')\n          if (this.props.location.patientId) {\n            this.setState({\n              patientId: this.props.location.patientId\n            }, () => {\n              this._getPetInfo()\n            })\n          }\n\n          break;\n        case '3':\n          console.log('这是从普通医生来的来的');\n          // if (this.props.location.patientId) {\n          //   this.setState({\n          //     patientId: this.props.location.patientId\n          //   }, () => {\n          //     this._getPetInfo()\n          //   })\n          // }\n          this._getPetInfoBySave()\n          break;\n        default: console.log('暂未定义');\n          break;\n      }\n    }\n\n    let hardSet = electronStore.get('hardwareConfiguration')\n\n    if (!hardSet) {\n      let settings = {\n        isHua: true,\n        is15: true,\n        self_tarting: false,\n        isBacklight: true,\n        isBeep: true,\n        backlightTimer: { length: 140, number: '45' },\n        autoOff: { length: 0, number: '30' },\n      }\n      electronStore.set('hardwareConfiguration', settings)\n      this.setState({\n        units: '℉'\n      })\n    } else {\n      let units = hardSet.isHua ? '℉' : '℃'\n      this.setState({\n        units\n      })\n    }\n\n\n\n    ipcRenderer.on('sned', this._send)\n    ipcRenderer.on('usbDetect', this.usbDetect)\n    ipcRenderer.on('noUSB', this._noUSB)\n    //分辨率改变后窗口自动改变\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n    //检测有没有充电桩、温度计\n\n\n    this._whether_to_connect_to_mella()\n    countdownTimer && clearInterval(countdownTimer)\n\n  }\n\n  componentWillUnmount() {\n    ipcRenderer.removeListener('sned', this._send)\n    ipcRenderer.removeListener('usbDetect', this.usbDetect)\n    ipcRenderer.removeListener('noUSB', this._noUSB)\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n    detectTimer && clearInterval(detectTimer)\n    this.timer && clearTimeout(this.timer)\n    countdownTimer && clearInterval(countdownTimer)\n    getSerialTime && clearTimeout(getSerialTime)\n    this.detectTimer && clearInterval(this.detectTimer)\n    message.destroy()\n    firstMeasure = true\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('Lowbig', win())\n    this.setState({\n\n    })\n  }\n  usbDetect = (event, data) => {\n    if (data === true) {\n      this._whether_to_connect_to_mella()\n    } else {\n      this.detectTimer && clearInterval(this.detectTimer)\n      num07 = 0\n    }\n  }\n\n  _send = (event, data) => {\n    //data就是测量的数据，是十进制的数字\n\n    this.command(data)()\n  }\n  _noUSB = (e, data) => {\n    console.log('没有USB设备：', data);\n    if (data === false) {\n      message.destroy()\n      this.setState({\n        noUSB: false\n      })\n    } else {\n      if (!this.state.noUSB) {\n        message.error('The base is not detected. Please insert the base', 0)\n        this.setState({\n          noUSB: true,\n          measuerStatus: 'disconnected',\n          countdown: 60,\n          isMeasure: false,\n          isconnected: false,\n          echarsData: {\n            Eci: [],\n            wen0: [],\n            wen1: []\n          },\n          Temp: '',\n          emerData: []\n        })\n        echartCi = 0\n        meetCondition = false\n      }\n\n    }\n  }\n  _whether_to_connect_to_mella = () => {\n    this.detectTimer && clearInterval(this.detectTimer)\n    message.destroy()\n    this.detectTimer = setInterval(() => {\n      if (this.state.isMeasure) {\n        return\n      }\n      // console.log(initTime);\n      if (!initTime) {\n        console.log('断开连接');\n        this.setState({\n          measuerStatus: 'disconnected',\n          countdown: 0,\n          isMeasure: false,\n          isconnected: false,\n          isEarMeasure: false\n        })\n        initTime = new Date()\n        meetCondition = false\n      } else {\n        // if (this.state.measuerStatus === 'disconnected') {\n        //   ipcRenderer.send('usbdata', { command: '07', arr: [] })\n        // }\n        ipcRenderer.send('usbdata', { command: '07', arr: [] })\n\n        if (new Date() - initTime < 5000) {\n          console.log('连接成功', indexNum);\n          if (indexNum++ % 5 === 1) {\n            console.log('去询问探头');\n            ipcRenderer.send('usbdata', { command: '31', arr: [] })\n          }\n\n\n\n        } else {\n\n          console.log('2断开连接');\n          this.setState({\n            measuerStatus: 'disconnected',\n            countdown: 0,\n            isMeasure: false,\n            isconnected: false,\n            isEarMeasure: false\n          })\n          meetCondition = false\n        }\n      }\n    }, 2000);\n\n\n\n  }\n\n\n\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n\n  getOption = () => {\n    let { units } = this.state\n    let min, max;\n    if (units === '℃') {\n      min = 25\n      max = 45\n    } else {\n      min = 75\n      max = 115\n    }\n    let { echarsData } = this.state\n    let { Eci, wen0, wen1 } = echarsData\n    let that = this\n    let option = {\n      color: ['#81b22f'],\n      tooltip: {\n        /*返回需要的信息*/\n        trigger: 'axis',\n        triggerOn: 'mousemove',\n        enterable: true,\n        formatter: function (param) {\n          var value = param[0].value;\n          // console.log('----para', param);\n          return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(1)}${that.state.units}</div>`\n        }\n      },\n      xAxis: {\n        name: 'SPL',\n        nameLocation: 'end',\n        nameTextStyle: {\n          align: 'left',\n        },\n        type: 'category',\n        // data: [\"\", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,],\n        data: Eci,\n        // data:['','15miao','30miao'],\n        axisLine: {\n          lineStyle: {\n            // 设置x轴颜色\n            color: '#A0A0A0',\n            show: true\n          }\n        },\n        // 设置X轴数据旋转倾斜\n        axisLabel: {\n          rotate: 0, // 旋转角度\n          interval: 29  //设置X轴数据间隔几个显示一个，为0表示都显示\n\n        },\n\n      },\n      yAxis: {\n        name: 'temperature',\n        type: 'value',\n        min, // 设置y轴刻度的最小值\n        max,  // 设置y轴刻度的最大值\n        splitNumber: 0,  // 设置y轴刻度间隔个数\n        nameTextStyle: {\n          padding: [0, 0, 0, 8],\n          // backgroundColor: 'pink',\n          width: '1200px',\n          // fontSize: 20,\n          align: 'left',\n        },\n\n        axisLine: {\n          lineStyle: {\n            // 设置x轴颜色\n            color: '#A0A0A0',\n            show: true\n          }\n        },\n        splitLine: {\n          show: false\n        },\n      },\n      series: [{\n        name: '模拟数据',\n        type: 'line',\n        showSymbol: false,\n        hoverAnimation: false,\n        // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\n        data: wen0,\n        smooth: 0.5,\n        symbol: 'none',\n        itemStyle: {\n          normal: {\n            lineStyle: {        // 系列级个性化折线样式\n              width: 2,\n              type: 'solid',\n              color: {\n                type: 'linear',\n                x: 0,\n                y: 1,\n                x2: 0,\n                y2: 0,\n                colorStops: [{\n                  offset: 0.5, color: '#47C2ED' // 0% 处的颜色  蓝\n                }, {\n                  offset: 1, color: '#78D35D' // 50% 处的颜色  绿\n                },\n                  // {\n                  //   offset: 1, color: 'red' // 100% 处的颜色   红\n                  // }\n                ],\n                globalCoord: false // 缺省为 false\n              }\n            },\n          }\n        }\n      }]\n    }\n    return option;\n  }\n\n  handleClick = e => {\n    console.log('---------------身份', storage.identity);\n\n    switch (e.key) {\n      case '1':\n        //  storage.measurepatientId = this.state.patientId; console.log('返回前的问题查看：', this.props.history); this.props.history.goBack()\n        switch (storage.identity) {   //1是vetspire   2是ezyvet   3是医生\n          case '1': this.props.history.push('/VetSpireSelectExam')\n\n            break;\n\n\n          case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\n\n            break;\n\n\n\n          default:\n            break;\n        }\n        break;\n      case '2': storage.measurepatientId = ''; this.props.history.push('/')\n        break;\n      case '3': storage.measurepatientId = this.state.patientId; this.props.history.push('/page12');\n        break;\n      case '4': storage.measurepatientId = this.state.patientId; this.props.history.push({ pathname: '/page10', isconnected: this.state.isconnected })\n        break;\n      case '5': this.props.history.push('/menuOptions/settings'); break;\n      default: console.log('这个选项还没有做呢');\n\n\n    }\n\n  };\n\n  command = (newArr) => {\n    const instruction = [209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 7, 99]\n    let dataArr1 = newArr.map(item => {\n      if (item.toString(16).length < 2) {\n        return '0' + item.toString(16)\n      } else {\n        return item.toString(16)\n      }\n    })\n    if (newArr[2] !== 7) {\n      initTime = new Date()\n      num07 = 0\n    } else {\n      num07++\n    }\n\n\n    const commandArr = {\n      209: () => {  //腋温\n\n        let temp1 = parseFloat(`${dataArr1[3]}.${(dataArr1[4])}`)\n        let temp0 = parseFloat(`${dataArr1[5]}.${(dataArr1[6])}`)\n        let temp2 = parseFloat(`${dataArr1[7]}.${(dataArr1[8])}`)\n        let pdt0 = parseFloat(`${dataArr1[9]}.${(dataArr1[10])}`)\n        let pdt1 = parseFloat(`${dataArr1[11]}.${(dataArr1[12])}`)\n        let alpha0 = parseFloat(`${dataArr1[13]}.${(dataArr1[14])}`)\n        let alpha1 = parseFloat(`${dataArr1[15]}.${(dataArr1[16])}`)\n        let Temp = temp0\n\n        if (Temp === 0 || Temp === null || Temp === undefined) {\n          return\n        }\n\n        if (this.state.isMeasure === false) {\n          ipcRenderer.send('usbdata', { command: '31', arr: [] })\n          this.setState({\n            echarsData: {\n              Eci: [],\n              wen0: [],\n              wen1: []\n            },\n            countdown: 60\n\n          })\n          echartCi = 0\n\n        }\n\n\n\n        //需要做第一次温度,判断,如果温度低于76.6(24.8)则界面显示low,并且不记录上传到后台的临床测试数据emerData\n        //需要第一次做温度判断,如果温度高于85(29.4)℉,则跳出高温弹窗,不记录上传到后台的临床测试数据emerDate,并且第一次测量也为true\n\n        if (!meetCondition) {\n          dropNum = 0\n          tempArr = []\n          if (Temp >= 24.8 && Temp <= 29.4) {\n            meetCondition = true\n\n            if (countdownTimer) {\n              console.log('有定时器了，清理掉');\n              clearInterval(countdownTimer)\n              this.setState((prestate, props) => ({\n                countdown: 60\n              }));\n            }\n            countdownTimer = setInterval(() => {\n              console.log('进入定时器');\n              let { countdown, isconnected } = this.state\n              if (countdown <= 0) {\n                countdown = 60\n              }\n              this.setState({\n                countdown: countdown - 1\n\n              })\n              if (countdown <= 1) {\n                clearInterval(countdownTimer)\n                console.log('我要去发送了');\n                ipcRenderer.send('usbdata', { command: '41', arr: [] })\n              }\n              if (isconnected === false) {\n                clearInterval(countdownTimer)\n              }\n            }, 1000);\n\n\n\n            let emerData = this.state.emerData\n            let str = {\n              data0: temp0,\n              data1: temp1,\n              data2: temp2,\n              pdt0,\n              pdt1,\n              Alpha0: alpha0,\n              Alpha1: alpha1,\n            }\n            emerData.push(str)\n\n            let { echarsData } = this.state\n            let { wen0, wen1, Eci } = echarsData\n            Eci.push((echartCi++))\n            if (this.state.units === '℃') {\n              wen0.push(temp0)\n              wen1.push(temp1)\n            } else {\n              wen0.push(temp0 * 1.8 + 32)\n              wen1.push(temp1 * 1.8 + 32)\n            }\n\n            this.setState({\n              Temp,\n              echarsData,\n              isMeasure: true,\n              measuerStatus: 'connented',\n              isconnected: true,\n              showHistoryEchart: false,\n              emerData,\n              tempHeight: false\n            }, () => {\n              const option = this.getOption();\n              this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n            })\n\n          } else {\n\n            meetCondition = false\n            lastMeasureBig = true\n            lastMeasureTemp = temp0\n            if (Temp < 24.8) {\n              let { echarsData } = this.state\n              let { wen0, wen1, Eci } = echarsData\n              Eci.push((echartCi++))\n              if (this.state.units === '℃') {\n                wen0.push(temp0)\n                wen1.push(temp1)\n              } else {\n                wen0.push(temp0 * 1.8 + 32)\n                wen1.push(temp1 * 1.8 + 32)\n              }\n\n              this.setState({\n                Temp,\n                echarsData,\n                isMeasure: true,\n                measuerStatus: 'connented',\n                isconnected: true,\n                showHistoryEchart: false,\n                countdown: 60,\n                tempHeight: false,\n              }, () => {\n                const option = this.getOption();\n                this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n              })\n            } else {\n              if (!firstMeasure) {\n                if (!this.state.tempHeight) {\n                  this.setState({\n                    tempHeight: true\n                  })\n                }\n              } else {\n                meetCondition = true\n                firstMeasure = false\n\n                if (countdownTimer) {\n                  console.log('有定时器了，清理掉');\n                  clearInterval(countdownTimer)\n                  this.setState((prestate, props) => ({\n                    countdown: 60\n                  }));\n                }\n                countdownTimer = setInterval(() => {\n                  console.log('进入定时器');\n                  let { countdown, isconnected } = this.state\n                  if (countdown <= 0) {\n                    countdown = 60\n                  }\n                  this.setState({\n                    countdown: countdown - 1\n\n                  })\n                  if (countdown <= 1) {\n                    clearInterval(countdownTimer)\n                    console.log('我要去发送了');\n                    ipcRenderer.send('usbdata', { command: '41', arr: [] })\n                  }\n                  if (isconnected === false) {\n                    clearInterval(countdownTimer)\n                  }\n                }, 1000);\n\n\n\n                let emerData = this.state.emerData\n                let str = {\n                  data0: temp0,\n                  data1: temp1,\n                  data2: temp2,\n                  pdt0,\n                  pdt1,\n                  Alpha0: alpha0,\n                  Alpha1: alpha1,\n                }\n                emerData.push(str)\n\n                let { echarsData } = this.state\n                let { wen0, wen1, Eci } = echarsData\n                Eci.push((echartCi++))\n                if (this.state.units === '℃') {\n                  wen0.push(temp0)\n                  wen1.push(temp1)\n                } else {\n                  wen0.push(temp0 * 1.8 + 32)\n                  wen1.push(temp1 * 1.8 + 32)\n                }\n\n                this.setState({\n                  Temp,\n                  echarsData,\n                  isMeasure: true,\n                  measuerStatus: 'connented',\n                  isconnected: true,\n                  showHistoryEchart: false,\n                  emerData,\n                  tempHeight: false\n                }, () => {\n                  const option = this.getOption();\n                  this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n                })\n              }\n\n            }\n\n            console.log('不满足');\n          }\n        } else {\n          console.log('差值', temp0, lastMeasureTemp, temp0 - lastMeasureTemp);\n          if (temp0 - lastMeasureTemp <= -0.03) {\n            console.log('本次测量要小于上次测量,不计入里面');\n            countdownTimer && clearInterval(countdownTimer)\n            lastMeasureBig = false\n            return\n          }\n          if (!lastMeasureBig) {\n            countdownTimer = setInterval(() => {\n              console.log('进入定时器');\n              let { countdown, isconnected } = this.state\n              if (countdown <= 0) {\n                countdown = 60\n              }\n              this.setState({\n                countdown: countdown - 1\n\n              })\n              if (countdown <= 1) {\n                clearInterval(countdownTimer)\n                console.log('我要去发送了');\n                ipcRenderer.send('usbdata', { command: '41', arr: [] })\n              }\n              if (isconnected === false) {\n                clearInterval(countdownTimer)\n              }\n            }, 1000);\n          }\n\n\n\n\n\n\n          lastMeasureBig = true\n          lastMeasureTemp = temp0\n          let emerData = this.state.emerData\n          let str = {\n            data0: temp0,\n            data1: temp1,\n            data2: temp2,\n            pdt0,\n            pdt1,\n            Alpha0: alpha0,\n            Alpha1: alpha1,\n          }\n          emerData.push(str)\n\n          let { echarsData } = this.state\n          let { wen0, wen1, Eci } = echarsData\n          Eci.push((echartCi++))\n          if (this.state.units === '℃') {\n            wen0.push(temp0)\n            wen1.push(temp1)\n          } else {\n            wen0.push(temp0 * 1.8 + 32)\n            wen1.push(temp1 * 1.8 + 32)\n          }\n\n          tempArr.push(temp0)\n          if (tempArr.length > 10) {\n            let k = (tempArr[tempArr.length - 1] - tempArr[tempArr.length - 11]) / 10\n            console.log('斜率', k);\n            if (k < -0.035) {\n              console.log('下降的有点狠了');\n              dropNum++\n            } else {\n              dropNum = 0\n            }\n            if (dropNum > 10) {\n              message.destroy()\n              message.error('Measurement failed')\n              dropNum = 0\n            }\n          }\n\n\n          this.setState({\n            Temp,\n            echarsData,\n            isMeasure: true,\n            measuerStatus: 'connented',\n            isconnected: true,\n            showHistoryEchart: false,\n            emerData,\n            tempHeight: false\n          }, () => {\n            const option = this.getOption();\n            this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n          })\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      },\n      208: () => {  //耳温\n\n\n\n        //现在探头0可能不存在，所以把探头0改为探头1\n\n        let temp0 = parseFloat(`${dataArr1[7]}.${(dataArr1[8])}`)\n\n\n        let Temp = Math.floor(temp0 * 10) / 10\n        console.log('------------gangwen--------------', Temp);\n\n        let emerData = this.state.emerData\n\n        let str = {\n          data0: temp0,\n\n        }\n        emerData.push(str)\n        this.setState({\n          emerData,\n          Temp,\n          isMeasure: false,\n          mearsurePart: 3,\n          measuerStatus: 'measuring',\n          isconnected: true\n        })\n        meetCondition = false\n\n      },\n      193: () => {  //硬件发送结束命令\n        let time = new Date() - is193Time\n        lastMeasureTemp = 0\n        lastMeasureBig = true\n        console.log(time);\n        if (time < 1000) {\n          is193Time = new Date()\n          console.log('我直接抛出');\n          return;\n        } else {\n          console.log('---------------------------', time);\n          is193Time = new Date()\n\n          countdownTimer && clearInterval(countdownTimer)\n\n\n          saveHistoryTime && clearTimeout(saveHistoryTime)\n\n          saveHistoryTime = setTimeout(() => { //防止连续向后台发送数据\n            countdownTimer && clearInterval(countdownTimer)\n\n            meetCondition = false\n\n\n\n            let { roomTemperature, referenceRectalTemperature, bodyConditionScore,\n              furLength, heartRate, bloodPressure, respiratoryRate, Temp, emerData } = this.state\n            if (emerData.length < 10) {\n              console.log('临床数据太少,不做保存');\n              return\n            }\n\n            if (bodyConditionScore === '') {\n              bodyConditionScore = null\n            } else {\n              bodyConditionScore = parseFloat(bodyConditionScore)\n            }\n\n            if (heartRate === '') {\n              heartRate = null\n            } else {\n              heartRate = parseFloat(heartRate)\n            }\n\n            if (respiratoryRate === '') {\n              respiratoryRate = null\n            } else {\n              respiratoryRate = parseFloat(respiratoryRate)\n            }\n\n            if (roomTemperature === '') {\n              roomTemperature = null\n            } else {\n              roomTemperature = ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2)\n            }\n\n            if (referenceRectalTemperature === '') {\n              referenceRectalTemperature = null\n            } else {\n              referenceRectalTemperature = ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2)\n            }\n\n            if (furLength === '') {\n              furLength = null\n            } else {\n              furLength = parseFloat(furLength)\n            }\n            let petVitalId = null\n            switch (this.state.petVitalTypeId) {\n              case '01': petVitalId = 1; break;\n              case '02': petVitalId = 3; break;\n              case '03': petVitalId = 4; break;\n              default: petVitalId = 1; break;\n            }\n            let datas = {\n\n              temperature: parseFloat(Temp),  //测量温度\n              roomTemperature,//室温\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              bloodPressure,\n              memo: this.state.notes,\n              petVitalTypeId: petVitalId,\n              clinicalDataEntityList: emerData\n            }\n            if (storage.roleId === `1`) {\n              datas.userId = storage.userId\n            } else {\n              datas.doctorId = storage.userId\n              datas.userId = storage.userId\n            }\n\n            if (this.state.selectPet.petId !== '' && this.state.isEmergency === false) {\n\n              datas.petId = this.state.selectPet.petId\n\n\n              console.log('临床测试入参：', datas);\n              //把数据保存进入云端\n              addAllClinical(datas)\n                .then(res => {\n                  console.log(res);\n                  meetCondition = false\n                  if (res.flag === true) {\n                    console.log('上传成功');\n                    // message.success('Uploaded successfully')\n                    this.setState({\n                      emerData: [],\n                      isMeasure: false\n                    })\n\n                    message.success('Uploaded successfully')\n                    this._getHistory11(this.state.selectPet.petId)\n                  } else {\n                    console.log('上传失败');\n                    this.setState({\n                      emerData: [],\n                      isMeasure: false\n                    })\n                    message.error('upload failed')\n                  }\n                })\n                .catch(err => {\n                  console.log(err);\n                  // message.error(err)\n                  this.setState({\n                    emerData: [],\n                    isMeasure: false\n                  })\n                  meetCondition = false\n                })\n            } else if (this.state.isEmergency === true) {\n\n              console.log('温度数据保存入参：', datas);\n\n              addAllClinical(datas)\n                .then(res => {\n                  console.log(res);\n                  meetCondition = false\n                  if (res.flag === true) {\n                    console.log('上传成功');\n                    message.success('Uploaded successfully')\n                    this.setState({\n                      emerData: [],\n                      isMeasure: false\n                    })\n                    // this._getHistory11(this.state.selectPet.petId)\n                    this._getEmergencyHistory()\n                  } else {\n                    console.log('上传失败');\n                    message.error('upload failed')\n                    this.setState({\n                      emerData: [],\n                      isMeasure: false\n                    })\n                  }\n                })\n                .catch(err => {\n                  console.log(err);\n                  message.error(err)\n                  this.setState({\n                    emerData: [],\n                    isMeasure: false\n                  })\n                  meetCondition = false\n                })\n            }\n\n            clearTimeout(saveHistoryTime)\n          }, 500);\n\n\n\n\n\n        }\n\n\n      },\n\n      192: () => {   //开始测量返回结果\n        switch (newArr[3]) {\n          case 90: console.log('有探头，开始测量的返回指令·'); break;\n          case 11: console.log('没有探头，开始测量的返回值'); break;\n\n        }\n      },\n      129: () => {      //返回硬件版本号\n        console.log(`返回的版本号为${newArr[3]}`);\n        this.setState({\n          measuerStatus: 'connented',\n          isconnected: true\n\n        })\n      },\n      135: () => {          //硬件的一些配置信息\n        /**\n         * ______________新版、旧版没法控制温度计__________________\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\n         * newArr[7] 无操作关机时间        bcd码\n         * newArr[8] 背光时间              bcd码\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\n         * newArr[10] 测量单位    01代表℃，00代表℉\n         */\n        countdownTimer && clearInterval(countdownTimer)\n        this.setState({\n          measuerStatus: 'connented',\n          isconnected: true\n\n        })\n        let hardSet = electronStore.get('hardwareConfiguration')\n        let beep = hardSet.isBeep ? '11' : '00'\n        let unit = hardSet.isHua ? '00' : '01'\n\n        if (dataArr1[7] === hardSet.autoOff.number && dataArr1[8] === hardSet.backlightTimer.number &&\n          dataArr1[9] === beep && dataArr1[10] === unit) {\n        } else {\n          console.log('不相同，去发送命令');\n          let setArr = ['03', 'ed', '07', 'dd', hardSet.autoOff.number, hardSet.isBacklight ? hardSet.backlightTimer.number : '00', hardSet.isBeep ? '11' : '00', hardSet.isHua ? '00' : '01']\n          ipcRenderer.send('usbdata', { command: '21', arr: setArr })\n        }\n        // if (newArr[10] === 0) {\n        //   this.setState({\n        //     units: '℉'\n        //   })\n        // } else {\n        //   this.setState({\n        //     units: '℃'\n        //   })\n        // }\n\n\n      },\n      238: () => {     //探头松动\n        console.log('探头松动');\n        this.setState({\n          isMeasure: false\n        })\n        meetCondition = false\n        message.error('The probe is loose, please re-install and measure again', 5)\n        clearInterval(countdownTimer)\n      },\n      98: () => { //蓝牙连接断开\n        console.log('断开连接---断开连接---断开连接---断开连接---断开连接---断开连接');\n\n        console.log(new Date() - is97Time);\n        if (new Date() - is97Time < 800) {\n          return\n        }\n        this.setState({\n          measuerStatus: 'disconnected',\n          countdown: 60,\n          isMeasure: false,\n          isconnected: false,\n          echarsData: {\n            Eci: [],\n            wen0: [],\n            wen1: []\n          },\n          Temp: '',\n          emerData: []\n        })\n        echartCi = 0\n        meetCondition = false\n\n      },\n      97: () => {       //蓝牙连接\n        console.log('连接成功---连接成功---连接成功---连接成功---连接成功---连接成功');\n        this.setState({\n          measuerStatus: 'connented',\n          isconnected: true\n\n        })\n        is97Time = new Date()\n      },\n      130: () => {   //获取到mac地址\n        let dataArr = newArr.map(item => {\n          if (item.toString(16).length < 2) {\n            return '0' + item.toString(16)\n          } else {\n            return item.toString(16)\n          }\n        })\n        let str = ''\n        for (let i = 3; i < dataArr.length - 2; i++) {\n\n          str += dataArr[i]\n\n        }\n        // console.log(str);\n        this.setState({\n          notes: `${str}\n          `\n        })\n      },\n      177: () => {         //探头id\n        let dataArr1 = newArr.map(item => {\n          if (item.toString(16).length < 2) {\n            return '0' + item.toString(16)\n          } else {\n            return item.toString(16)\n          }\n        })\n        let id = ''\n        for (let i = 3; i < dataArr1.length - 2; i++) {\n          id += dataArr1[i]\n\n        }\n        console.log(id, dataArr1[7]);\n\n        this.setState({\n          probeID: id,\n          petVitalTypeId: dataArr1[7]\n        })\n        if (dataArr1[7] === '01') {\n          this.setState({\n            mearsurePart: 1\n          })\n        } else if (dataArr1[7] === '02') {\n          this.setState({\n            mearsurePart: 2\n          })\n        } else if (dataArr1[7] === '03') {\n          this.setState({\n            mearsurePart: 3\n          })\n        }\n\n\n\n      },\n      7: () => {  //发什么收什么，需要去重新插拔底座\n        console.log('重新插拔底座');\n        if (num07 === 3 && this.state.err07Visible === false) {\n          this.setState({\n            err07Visible: true\n          })\n        }\n      },\n\n\n    }\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]]\n    } else {\n      return () => {\n        console.log('没有控制命令', commandArr);\n      }\n    }\n\n  }\n\n  _mearsurePort = () => {\n    switch (this.state.mearsurePart) {\n      case 1: return (\n        <div >\n          <div className='part'>\n            Axillary\n            <img src={ye} alt=\"\" width={px(50)} />\n\n          </div>\n        </div>\n      );\n      case 2: return (\n        <div >\n          <div className='part'>\n            Rectal\n            <img src={gang} alt=\"\" width={px(50)} />\n\n          </div>\n        </div>\n      );\n      default: return (\n        <div >\n          <div className='part'>\n            Ear\n            <img src={er} alt=\"\" width={px(50)} />\n\n          </div>\n        </div>\n      );\n    }\n  }\n\n  _getEmergencyHistory = () => {\n\n    //封装的日期排序方法\n    function ForwardRankingDate(data, p) {\n      for (let i = 0; i < data.length - 1; i++) {\n        for (let j = 0; j < data.length - 1 - i; j++) {\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\n            var temp = data[j];\n            data[j] = data[j + 1];\n            data[j + 1] = temp;\n          }\n        }\n      }\n      return data;\n    }\n    let historys = []\n    this.setState({\n      loading: true\n    })\n\n    getPetExamByDoctorId(storage.userId)\n      .then(res => {\n        // console.log('获取的宠物记录列表1', res);\n        this.setState({\n          loading: false\n        })\n        if (res.flag === true) {\n          let datas = res.data\n          for (let i = datas.length - 1; i >= 0; i--) {\n            if (datas[i].petId === null) {\n              let { petId, examId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo, clinicalDatagroupId,\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity } = datas[i]\n              let Tem = temperature\n              try {\n                Tem = temperature || clinicalDataEntity.data0\n              } catch (error) {\n                console.log('抛出的异常', error);\n              }\n\n\n              let str = {\n                clinicalDatagroupId,\n                createTime,\n                date: moment(createTime).format('MMM DD'),\n                time: moment(createTime).format('hh:mm A'),\n                temp: parseInt(Tem * 10) / 10,\n                placement: petVitalTypeId,\n                note: memo,\n                historyId: examId,\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\n              }\n\n              historys.push(str)\n            }\n          }\n\n          //把所有数据拿完后做个排序\n\n          let historyData = ForwardRankingDate(historys, \"createTime\");\n          console.log('historyData:', historyData);\n          this.setState({\n            historyData\n          })\n        }\n      })\n      .catch(err => {\n        this.setState({\n          loading: false\n        })\n        console.log(err);\n      })\n\n  }\n\n  _getHistory11 = (petId) => {\n    let historys = []\n    this.setState({\n      loading: true\n    })\n\n    getPetExamAndClinicalByPetId(petId)\n      .then(res => {\n        console.log('获取历史记录', res);\n        this.setState({\n          loading: false\n        })\n        if (res.flag === true) {\n          let datas = res.data\n          console.log('-------', datas);\n          for (let i = datas.length - 1; i >= 0; i--) {\n\n            let data = datas[i]\n\n            let { petId, examId, clinicalDatagroupId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo,\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity, modifiedTime } = data\n\n            if (!clinicalDatagroupId) {\n              continue\n            }\n            let Tem = temperature\n            if (clinicalDataEntity) {\n              Tem = Tem || clinicalDataEntity.data0\n            }\n            // console.log('==============', Tem);\n            Tem = Tem ? Tem : 0\n\n\n            let time = null\n            if (modifiedTime && `${modifiedTime}` !== '' && `${modifiedTime}` !== `undefined`) {\n              time = modifiedTime\n            } else {\n              time = createTime\n            }\n            let json = {\n              time,\n              Temp: Tem,\n              placement: petVitalTypeId,\n              note: memo,\n              historyId: examId,\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\n            }\n            historys.push(json)\n\n\n          }\n          console.log('---', historys);\n          let historyData = []\n          for (let i = 0; i < historys.length; i++) {\n            let history = historys[i]\n            let { bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId, examId } = history\n            // console.log('--------', history.placement);\n            let placement = history.placement\n            if (placement === null || placement === '') {\n              placement = 1\n            }\n            let str = {\n              date: moment(history.time).format('MMM DD'),\n              time: moment(history.time).format('hh:mm A'),\n              temp: history.Temp,\n              placement,\n              note: history.note,\n              historyId: history.historyId,\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId,\n              key: examId\n            }\n            historyData.push(str)\n          }\n          this.setState({\n            historyData\n          })\n        }\n      })\n      .catch(err => {\n        this.setState({\n          loading: false\n        })\n        console.log(err);\n      })\n\n  }\n\n  _refresh = () => {\n    console.log('点击了');\n    // ipcRenderer.send('usbdata', { command: '07', arr: [] })\n    this.setState({\n      spin: true,  //\n      addpatient_description: '',\n      addpatient_petName: '',\n      addpatient_species: 1\n    })\n    if (this.state.patientId === '') {\n      this.setState({\n        spin: false\n      })\n    } else {\n      this._getPetInfo()\n    }\n\n\n  }\n\n\n  _getPetInfoBySave = () => {\n    let data = JSON.parse(storage.doctorExam)\n    console.log('从列表里面传过来的数据', data);\n    if (!data) {\n      console.log('从walk-in来的');\n    } else {\n      let { petId, petName, owner, breed, isMix, age, weight, url, patientId } = data\n      if (weight === 'unknown') {\n        weight = null\n      }\n      let selectPet = {\n        petId,\n        petName,\n        owner,\n        breedName: breed,\n        isMix,\n        age,\n        weight,\n        // birthday,\n        url,\n\n\n      }\n      this.setState({\n        selectPet,\n        leftStatus: 1,\n        patientId\n      })\n      this._getHistory11(petId)\n    }\n  }\n\n\n  _getPetInfo = () => {\n\n    switch (storage.identity) {\n      // case '1':\n      //   console.log('我是vetspire查找');\n\n\n\n      case '2':\n        console.log('我是ezyVet查找');\n        let params = {\n          animalId: this.state.patientId,\n          organizationId: 4\n        }\n        let paramsArray = [];\n        Object.keys(params).forEach(key =>\n          paramsArray.push(key + \"=\" + params[key])\n        );\n        let url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId'\n        // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\n        if (url.search(/\\?/) === -1) {\n          url = url + \"?\" + paramsArray.join(\"&\");\n        } else {\n          url = url + \"&\" + paramsArray.join(\"&\");\n        }\n        console.log('ezyVet集成查找宠物入参-请求地址', params, url);\n        fetch(url, {\n          method: \"GET\",\n          headers: {\n            'authorization': `Bearer ${storage.ezyVetToken}`,\n          }\n        }).then((response) => response.json())\n          .then((res) => {\n            console.log('res', res);\n            this.setState({\n              spin: false\n            })\n            if (res.flag === true) {\n              //有宠物，进入1\n              let petArr = res.data\n              if (petArr.length > 1) {\n                petArr.sort(function (a, b) {\n                  return a.createTime > b.createTime ? 1 : -1;\n                })\n              }\n\n\n              console.log(petArr);\n\n              let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr\n              if (isMix !== true) {\n                isMix = false\n              }\n              let age = moment(new Date()).diff(birthday, 'year')\n              let selectPet = {\n                petId,\n                petName,\n                owner: `${lastName}  ${firstName}`,\n                breedName,\n                isMix,\n                age,\n                weight,\n                birthday,\n                url\n\n              }\n              this.setState({\n                selectPet,\n                leftStatus: 1,\n              })\n              this._getHistory11(petId)\n\n            } else {\n              //没有宠物，进入2\n              this.setState({\n                leftStatus: 2\n              })\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n\n        break;\n\n      case '3':\n        console.log('我是一般医生查找');\n        let datas = {\n          patientId: this.state.patientId,\n          doctorId: storage.userId,\n        }\n        if (storage.lastWorkplaceId) {\n          datas.workplaceId = storage.lastWorkplaceId\n        }\n        if (storage.lastOrganization) {\n          datas.org = storage.lastOrganization\n        }\n        console.log('入参：', datas);\n\n        getPetInfoByPatientIdAndPetId(datas)\n          .then(res => {\n            console.log(res);\n            this.setState({\n              spin: false\n            })\n            if (res.flag === true) {\n              //有宠物，进入1\n              let petArr = res.data\n              if (petArr.length > 1) {\n                petArr.sort(function (a, b) {\n                  return a.createTime > b.createTime ? 1 : -1;\n                })\n              }\n\n              console.log(petArr);\n\n              let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr[0]\n              if (isMix !== true) {\n                isMix = false\n              }\n              let age = moment(new Date()).diff(birthday, 'year')\n              let selectPet = {\n                petId,\n                petName,\n                owner: `${lastName}  ${firstName}`,\n                breedName,\n                isMix,\n                age,\n                weight,\n                birthday,\n                url\n\n              }\n              this.setState({\n                selectPet,\n                leftStatus: 1,\n              })\n              this._getHistory11(petId)\n\n            } else {\n              //没有宠物，进入2\n              this.setState({\n                leftStatus: 2\n              })\n            }\n          })\n          .catch(err => {\n            this.setState({\n              spin: false\n            })\n            console.log(err);\n          })\n        break;\n\n      default:\n        break;\n    }\n\n\n  }\n\n  draggleRef = React.createRef();\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleOk = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n      emerPatientID: ''\n    });\n  };\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n      emerPatientID: ''\n    });\n  };\n\n  onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\n      }\n    });\n  };\n\n  _addPatient = () => {\n    console.log(222);\n    let { addpatient_description, addpatient_petName, addpatient_species, patientId } = this.state\n    let speciesId = 3, petSpeciesBreedId = 13001\n\n    // speciesId   狗：2   猫：1    其他：3\n    switch (addpatient_species) {\n      case 1: speciesId = 2; petSpeciesBreedId = 12001; break;\n      case 2: speciesId = 1; petSpeciesBreedId = 11001; break;\n      default: speciesId = 3; petSpeciesBreedId = 13001;\n    }\n    // 11001 是cat 12001是dog 13001是other\n    //\n    let datas = {\n\n      petName: addpatient_petName,\n      description: addpatient_description,\n      speciesId,\n      doctorId: storage.userId,\n      petSpeciesBreedId\n\n\n    }\n    if (storage.lastWorkplaceId) {\n      datas.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      datas.organizationId = storage.lastOrganization\n    }\n\n    console.log(datas);\n    addDeskPet(patientId, datas)\n      .then((res) => {\n        console.log(res);\n        if (res.flag === true) {\n          message.success('Patient id created successfully')\n          this._refresh()\n        } else {\n          console.log('创建Patient id 失败');\n          message.error('Patient id creation failed')\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        message.error('Patient id creation failed')\n      })\n  }\n\n  _topLeft = () => {\n    let { historyData, spin, selectPet, patientId } = this.state\n    let { petName, owner, breedName, isMix, age, weight, url, speciesId } = selectPet\n    if (!breedName) {\n      breedName = ''\n    }\n    switch (breedName) {\n      case 'defaultdog':\n        breedName = 'Dog'\n\n        break;\n      case 'defaultother':\n        breedName = 'Other'\n\n        break;\n      case 'defaultcat':\n        breedName = 'Cat'\n        break;\n\n    }\n\n    let image = `url(${other})`\n\n    if (url) {\n      image = `url(${url}?download=0&width=80)`\n    } else {\n      switch (speciesId) {\n        case 1: image = `url(${cat})`; break;\n        case 2: image = `url(${dog})`; break;\n\n        default:\n          break;\n      }\n    }\n\n\n    let mix = ''\n    if (isMix === true) {\n      mix = 'Mix'\n    }\n    if (weight === null) {\n      weight = ''\n    } else {\n      weight = (2.2046 * parseFloat(weight)).toFixed(1) + 'lbs'\n    }\n\n    if (`${age}` === `NaN` || `${age}` === `null`) {\n      age = ''\n    } else {\n      age = `${age} yrs`\n    }\n    let datas = []\n    for (let i = 0; i < historyData.length; i++) {\n      if (i < 3) {\n        datas.push(historyData[i])\n      } else {\n        break;\n      }\n    }\n    let dogbgc = '', catbgc = '', otherbgc = '';\n\n    switch (this.state.addpatient_species) {\n      case 1: dogbgc = '#E1206D'; catbgc = '#F08FB6'; otherbgc = '#F08FB6'; break;\n      case 2: dogbgc = '#F08FB6'; catbgc = '#E1206D'; otherbgc = '#F08FB6'; break;\n      case 3: dogbgc = '#F08FB6'; catbgc = '#F08FB6'; otherbgc = '#E1206D'; break;\n      default: break;\n    }\n\n    if (owner === `null  null`) {\n      // owner = 'unknown'\n      owner = ''\n    }\n    if (breedName === '' || breedName === null || breedName === undefined) {\n      // breedName = 'unknown'\n      breedName = ''\n    }\n    let title = ''\n    if (patientId) {\n      title += `ID: ${patientId}`\n    }\n    if (patientId && petName) {\n      title += ` , `\n    }\n    if (petName) {\n      title += `${petName}`\n    }\n    switch (this.state.leftStatus) {\n      case 1: return (\n        <div className=\"l\">\n          <div className=\"petinfo\">\n            <div className=\"heard\"\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\n            >\n              <Tooltip placement='bottom' title='Switch pet'>\n                <MyIcon\n                  type='icon-qiehuanchengshi'\n                  className=\"icon\"\n                  style={{ marginRight: px(10), textAlign: 'center', }}\n                  onClick={() => {\n                    this.setState({\n                      leftStatus: 3,\n                      isMeasure: false,\n                      selectPet: {\n                        petId: '',\n                        petName: '',\n                        owner: '',\n                        breedName: '',\n                        isMix: false,\n                        age: '',\n                        weight: '',\n                        birthday: '',\n                      },\n                      patientId: '',\n                      historyData: [],\n                    })\n                    meetCondition = false\n                  }} />\n              </Tooltip>\n\n              <div className='avatar'\n                style={{\n                  width: px(50),\n                  height: px(50),\n                  marginRight: px(10),\n                  backgroundImage: image,\n                }}\n\n              >\n\n                {/* <img src={image} width={px(80)} alt=\"\" /> */}\n\n                {(storage.identity === '3') &&\n                  <img className='edit' src={edit} alt=\"\" width='18px'\n                    onClick={() => {\n                      storage.goEditPet = 'mesasure'\n                      this.props.history.push({ pathname: '/page9', participate: { patientId, petName, petId: this.state.selectPet.petId } })\n                    }}\n\n                  />}\n\n\n              </div>\n              <div className=\"ltitle\">\n                <p > {title}</p>\n              </div>\n            </div>\n\n            <div className=\"info\"\n              style={{ marginTop: mTop(10), marginBottom: mTop(20), paddingLeft: px(80) }}\n            >\n              Owner: {`${owner}`} <br />\n              {`Breed:  ${breedName}  ${mix}`}<br />\n              Age: {`${age}`}<br />\n              Weight: {`${weight}`}<br />\n            </div>\n          </div>\n          <div className=\"history\">\n            <div className=\"heard1\"\n              style={{ height: mTop(40), marginTop: mTop(10) }}\n              onClick={() => { this.setState({ visible: true }) }}>\n              <span>Device Info</span>\n            </div>\n            <div className=\"historyBody\">\n              {/* <div className=\"devices\">\n                <p>Device:</p>\n                <Select defaultValue=\"Mella-684h2\" style={{ width: 120 }} size={'small'}\n                // onChange={handleChange}\n                >\n                  <Option value=\"device1\">Mella-684h2</Option>\n                  <Option value=\"device2\">Mella-587j0</Option>\n                  <Option value=\"device3\">Mella-742k3</Option>\n                </Select>\n              </div> */}\n              {this._mearsurePort()}\n            </div>\n\n          </div>\n        </div>\n      )\n\n      case 2: return (\n        <div className=\"l\">\n          <div className=\"petinfo\">\n            <div className=\"heard\"\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\n\n            >\n              {`Clinical Study Mode`}\n            </div>\n            <div className=\"patirntID\"\n              style={{ marginTop: px(18) }}\n            >\n              <p style={{ width: '80px' }}>Patient ID:</p>\n              <Input\n                // style={{ border: 'none', outline: 'medium' }}\n                style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\n\n                value={this.state.patientId}\n                bordered={false}\n                onChange={(item) => {\n                  this.setState({\n                    patientId: item.target.value.replace(/\\s/g, \"\")\n                  })\n                }}\n                onKeyDown={(e) => {\n                  // console.log('------', e);\n                  if (e.keyCode === 13) {\n                    this._refresh()\n                  }\n                }}\n              />\n              <SyncOutlined className='refresh'\n                style={{ fontSize: px(25) }}\n                onClick={this._refresh} spin={spin} />\n            </div>\n\n            <div className='newPet'>\n              <p style={{ color: '#E1206D', fontSize: px(18), fontWeight: 'bold', marginTop: mTop(10), paddingLeft: px(30) }}>Yay! You got a new patient!</p>\n              <div className=\"patirntID\"\n                style={{ marginTop: px(18) }}\n              >\n                <p style={{ width: '80px' }}>Pet Name:</p>\n                <Input\n                  // style={{ border: 'none', outline: 'medium' }}\n                  style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\n\n                  value={this.state.addpatient_petName}\n                  bordered={false}\n                  onChange={(item) => {\n                    // console.log(item);\n                    this.setState({\n                      addpatient_petName: item.target.value\n                    })\n                  }}\n                />\n              </div>\n              <div className=\"patirntID\"\n                style={{ marginTop: px(18) }}\n              >\n                <p style={{ width: '80px' }}>Description:</p>\n                <Input\n                  // style={{ border: 'none', outline: 'medium' }}\n                  style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\n\n                  value={this.state.addpatient_description}\n                  bordered={false}\n                  onChange={(item) => {\n                    // console.log(item);\n                    this.setState({\n                      addpatient_description: item.target.value\n                    })\n                  }}\n                />\n              </div>\n              <div className=\"species\">\n\n                <ul>\n                  <li >\n                    <div className='speciesChild'\n                      style={{ width: px(50), }}\n                    >\n                      <div className='dog'\n                        style={{ width: px(50), height: px(50), backgroundColor: dogbgc }}\n                        onClick={() => { this.setState({ addpatient_species: 1 }) }} >\n                        <img src={dog} alt=\"\" style={{ width: px(38) }} />\n                      </div>\n                      Dog\n                    </div>\n                  </li>\n                  <li >\n                    <div className='speciesChild'\n                      style={{ width: px(50) }}\n                    >\n                      <div className='dog'\n                        style={{ width: px(50), height: px(50), backgroundColor: catbgc }}\n                        onClick={() => { this.setState({ addpatient_species: 2 }) }}  >\n                        <img src={cat} alt=\"\" style={{ width: px(38) }} />\n                      </div>\n                      Cat\n                    </div>\n                  </li>\n                  <li >\n                    <div className='speciesChild'\n                      style={{ width: px(50) }}\n                    >\n                      <div className='dog'\n                        style={{ width: px(50), height: px(50), backgroundColor: otherbgc }}\n\n                        onClick={() => { this.setState({ addpatient_species: 3 }) }}>\n                        <img src={other} alt=\"\" style={{ width: px(38), color: '#FFF' }} />\n                      </div>\n                      Other\n                    </div>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"savebtn\"\n                style={{ marginTop: mTop(20) }}\n              >\n                <p\n                  style={{ width: px(180), height: px(40), marginLeft: px(70), fontSize: px(16) }}\n                  onClick={() => { this._addPatient() }}>Add New Patient</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n      case 3: return (\n        <div className=\"l\">\n          <div className=\"petinfo\">\n            <div className=\"heard\"\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\n\n            >\n              {`Clinical Study Mode`}\n            </div>\n            <div className=\"patirntID\">\n              <p style={{ width: '80px' }}>Patient ID:</p>\n              <Input\n                // style={{ border: 'none', outline: 'medium' }}\n                style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\n\n                value={this.state.patientId}\n                bordered={false}\n                onChange={(item) => {\n                  // console.log(item);\n                  this.setState({\n                    patientId: item.target.value.replace(/\\s/g, \"\")\n                  })\n                }}\n                onKeyDown={(e) => {\n                  // console.log('------', e);\n                  if (e.keyCode === 13) {\n                    this._refresh()\n                  }\n                }}\n              />\n              <SyncOutlined className='refresh' onClick={this._refresh} spin={spin} />\n            </div>\n            <div className=\"emergency\"\n              style={{ marginTop: mTop(10) }}\n              onClick={() => {\n                this.setState({ leftStatus: 4, isEmergency: true })\n                this._getEmergencyHistory()\n              }}>\n              <div className=\"btn\"\n                style={{ width: px(180), height: px(40) }}\n              >\n                Emergency\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n      case 4: return (\n        <div className=\"l\">\n          <div className=\"petinfo\">\n            <div className=\"heard\"\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\n\n            >\n              {`Clinical Study Mode`}\n            </div>\n            <div className=\"emergencyText\">\n              <p style={{ fontSize: px(20), marginTop: mTop(10), margin: 0, padding: 0 }}>\n                You are in an emergency now,\n                you can click History in this mode to assign history records</p>\n\n            </div>\n            <div className=\"emergency\" onClick={() => {\n              this.setState({ leftStatus: 3, isEmergency: false, historyData: [] })\n\n            }}>\n              <div className=\"btn\"\n                style={{ width: px(180), height: px(40), fontSize: px(25) }}\n              >\n                Exit\n              </div>\n            </div>\n\n            <div className=\"history\">\n              <div className=\"heard1\"\n                style={{ height: mTop(40), marginTop: mTop(10) }}\n                onClick={() => { this.setState({ visible: true }) }}>\n                <span>Device Info</span>\n              </div>\n              <div className=\"historyBody\">\n                <div className=\"devices\">\n                  <p>Device:</p>\n                  <Select defaultValue=\"Mella-684h2\" style={{ width: 120 }} size={'small'}\n                  // onChange={handleChange}\n                  >\n                    <Option value=\"device1\">Mella-684h2</Option>\n                    <Option value=\"device2\">Mella-587j0</Option>\n                    <Option value=\"device3\">Mella-742k3</Option>\n                  </Select>\n                </div>\n                {this._mearsurePort()}\n              </div>\n\n            </div>\n          </div>\n        </div>\n      )\n      default: return null;\n\n    }\n\n\n  }\n\n  handleChange = index => {\n    console.log('---------', index);\n    this.setState({\n      furLength: index\n    })\n  };\n\n  handleChange1 = index => {\n    console.log('---------', index);\n    let bodyType = document.querySelectorAll('#_bodyType .ant-select-selector')\n    switch (`${index}`) {\n      case '1': bodyType[0].style.width = \"105px\"\n\n        break;\n      case '2': bodyType[0].style.width = \"130px\"\n\n        break;\n      case '3': bodyType[0].style.width = \"120px\"\n\n        break;\n\n      default: bodyType[0].style.width = \"105px\"\n        break;\n    }\n\n    // bodyType[0].style.width = \"120px\"\n    console.dir(bodyType)\n    this.setState({\n      bodyType: index\n    })\n  };\n\n  _foot = () => {\n    let lbgc = '', rbgc = ''\n    if (this.state.isPetCharacteristics) {\n      lbgc = 'rgba(25,173,228,0.5)'; rbgc = 'rgba(105,201,237,1)'\n    } else {\n      lbgc = 'rgba(105,201,237,1)'; rbgc = 'rgba(25,173,228,0.5)'\n    }\n    return (\n      <div className=\"clinical_foot\" >\n        <div className=\"top\"\n          style={{ height: '10%', }}\n        >\n\n          <div className=\"foot_l\" style={{ backgroundColor: lbgc }} onClick={() => this.setState({ isPetCharacteristics: true })}>\n            Pet Characteristics\n          </div>\n          <div className=\"foot_l\" style={{ backgroundColor: rbgc }} onClick={() => this.setState({ isPetCharacteristics: false })}>\n            History\n          </div>\n        </div>\n        {this.state.isPetCharacteristics ?\n          this._petCharacteristics() :\n          this._history()\n        }\n      </div >\n    )\n  }\n  _petCharacteristics = () => {\n\n    let { furLength, bodyType } = this.state\n    let placeholder = '', placeholder1 = ''\n    switch (`${furLength}`) {\n      case '1': placeholder = 'smooth'; break;\n      case '2': placeholder = 'short'; break;\n      case '3': placeholder = 'medium'; break;\n      case '4': placeholder = 'long'; break;\n      default: break;\n    }\n\n    switch (`${bodyType}`) {\n      case '1': placeholder1 = 'small'; break;\n      case '2': placeholder1 = 'barrel chested'; break;\n      case '3': placeholder1 = 'keel chested'; break;\n      default: break;\n    }\n    return (\n      <div className=\"petChaeacteristics\"\n        style={{ paddingLeft: px(10), paddingRight: px(10), height: '90%' }}\n      >\n        <div className=\"child\" style={{ marginTop: mTop(30), }}>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n            <p style={{ width: '150px' }}>Room Temperature: </p>\n            <Input className='inp'\n              // style={{ border: 'none', outline: 'medium' }}\n              // style={{ width: px(105), height: mTop(33), fontSize: px(18), marginRight: px(6) }}\n\n              value={`${this.state.roomTemperature}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  roomTemperature: str\n                })\n              }}\n            />\n            <span style={{ position: 'absolute', top: \"5%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n            <p style={{ width: '150px' }}>Reference Rectal Temperature: </p>\n            <Input className='inp'\n              // style={{ border: 'none', outline: 'medium' }}\n\n              value={`${this.state.referenceRectalTemperature}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  referenceRectalTemperature: str\n                })\n              }}\n            />\n            <span style={{ position: 'absolute', top: \"10%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\n          </div>\n\n        </div>\n        <div className=\"child\">\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <p style={{ width: '150px' }}>Body Condition Score:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n\n              value={this.state.bodyConditionScore}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  bodyConditionScore: str\n                })\n              }}\n            />\n          </div>\n          <div className='furLength' >\n            <p style={{ width: '150px' }}>Fur Length: </p>\n            <Select\n              // showSearch\n              placeholder\n              onChange={this.handleChange}\n              style={{ width: '105px', borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n              value={placeholder}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n\n\n        </div>\n        <div className=\"child\">\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\n            <p style={{ width: '150px' }}>Heart Rate:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n              value={`${this.state.heartRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  heartRate: str\n                })\n              }}\n\n            />\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n            <p style={{ width: '150px' }}>Blood Pressure:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n              value={this.state.bloodPressure}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  bloodPressure: str\n                })\n              }}\n            />\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>mm</span>\n          </div>\n\n        </div>\n        <div className=\"child\" style={{ marginBottom: px(40) }}>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\n            <p style={{ width: '150px' }}>Respiratory Rate:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n              value={`${this.state.respiratoryRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  respiratoryRate: str\n                })\n              }}\n\n            />\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\n          </div>\n          <div className='furLength' id='_bodyType'  >\n            {/* <p style={{ width: '150px' }}>Body Type: </p>\n            <Select\n              // showSearch\n              placeholder\n              onChange={this.handleChange1}\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n              value={placeholder1}\n              dropdownMatchSelectWidth={120}\n\n            >\n              <Option value=\"1\">small</Option>\n              <Option value=\"2\">barrel chested</Option>\n              <Option value=\"3\">keel chested</Option>\n            </Select> */}\n          </div>\n        </div>\n        {/* <div className=\"note\">\n          <p>Notes:</p>\n          <textarea\n            rows=\"2\"\n            cols=\"30\"\n            value={this.state.notes}\n            onChange={(val) => {\n              console.log(val);\n              this.setState({\n                notes: val.target.value\n              })\n            }}\n\n          >\n          </textarea>\n        </div> */}\n\n      </div>\n    )\n  }\n  _history = () => {\n\n    const _del = (key, record) => {\n      console.log('删除', key, record);\n\n\n      /**------------这里还要删除后台的数据------------ */\n      deletePetExamByExamId(key)\n        .then(res => {\n          if (res.flag === true) {\n            console.log('删除成功');\n            const historyData = [...this.state.historyData];\n            console.log(historyData);\n            this.setState({\n              historyData: historyData.filter((item) => item.historyId !== key)\n            });\n          } else {\n            console.log('删除失败');\n          }\n        })\n    }\n    const _edit = (key, record) => {\n      console.log('编辑', key, record);\n      let { heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature, bodyConditionScore, furLength, } = record\n      console.log('转换前：', heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature);\n      let editHeartRate = (heartRate !== null && heartRate !== undefined) ? heartRate : ''\n      let editBloodPressure = (bloodPressure !== null && bloodPressure !== undefined) ? bloodPressure : ''\n      let editRespiratoryRate = (respiratoryRate !== null && respiratoryRate !== undefined) ? respiratoryRate : ''\n      let editRectal = (referenceRectalTemperature !== null && referenceRectalTemperature !== undefined) ? (referenceRectalTemperature * 1.8 + 32).toFixed(1) : ''\n      let editRoomTemperature = (roomTemperature !== null && roomTemperature !== undefined) ? (roomTemperature * 1.8 + 32).toFixed(1) : ''\n      let editBodyConditionScore = (bodyConditionScore !== null && bodyConditionScore !== undefined) ? bodyConditionScore : ''\n      let editFurLength = furLength\n\n      console.log(editRectal,\n        editRoomTemperature,\n        editHeartRate,\n        editBloodPressure,\n        editRespiratoryRate);\n      this.setState({\n        editRectal,\n        editRoomTemperature,\n        editHeartRate,\n        editBloodPressure,\n        editRespiratoryRate,\n        editVisible: true,\n        editId: key,\n        memo: record.note,\n        editBodyConditionScore,\n        editFurLength\n      })\n\n\n\n\n\n\n    }\n    const see = (id, record) => {\n      console.log(id, record);\n      this.setState({\n        tip: 'data is loading',\n        tipSpin: true\n      })\n\n      getClinicalDataByExamId(id)\n        .then(res => {\n          console.log('此条记录的全部数据：', res);\n          this.setState({\n            tip: '',\n            tipSpin: false\n          })\n          if (res.flag) {\n            let datas = res.data.clinicalDataEntityList\n\n\n            if (datas) {\n\n              let echarsData = {\n                Eci: [],\n                wen0: [],\n                wen1: []\n              }\n              // let { echarsData } = this.state\n              let { wen0, wen1, Eci } = echarsData\n              for (let i = 0; i < datas.length; i++) {\n                let { data0, data1 } = datas[i]\n\n\n                Eci.push(i)\n                if (this.state.units === '℃') {\n                  wen0.push(data0)\n                  wen1.push(data1)\n\n                } else {\n                  wen0.push(data0 * 1.8 + 32)\n                  wen1.push(data1 * 1.8 + 32)\n                }\n\n              }\n              let Temp = datas[datas.length - 1].data0 || ''\n              console.log('----------------', Temp);\n              this.setState({\n                echarsData,\n                Temp,\n                showHistoryEchart: true\n              }, () => {\n                const option = this.getOption();\n                this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n              })\n            }\n\n          }\n        })\n        .catch(err => {\n          this.setState({\n            tip: '',\n            tipSpin: false\n          })\n          console.log(err);\n        })\n    }\n    const isflog = window.screen.height < 1000 ? true : false\n\n    const columns = [\n      {\n        title: '',\n        dataIndex: 'operation',\n        key: 'operation',\n        width: '16%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n          // console.log('狩猎:', text, record, index);\n          //record:\n          return (\n            <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', padding: `${px(18)}px 0` }} >\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\n                <img src={del} alt=\"\" style={{ width: px(25) }} />\n              </Popconfirm>\n              {\n                (this.state.isEmergency) ? (\n                  <div className=\"assign\"\n                    style={{ width: mTop(60), height: mTop(28), fontSize: px(14) }}\n\n                    onClick={() => {\n                      console.log(text, record, index);\n                      this.setState({\n                        visible: true,\n                        seleceEmergencies: record\n                      })\n                    }}>Assign</div>\n                ) : (\n                  <>\n                    <img src={edit} alt=\"\" style={{ width: px(25) }}\n                      onClick={() => _edit(record.historyId, record)}\n                    />\n\n                    <img src={start} alt=\"\" style={{ width: px(25) }}\n                      onClick={() => see(record.historyId, record)}\n                    />\n\n                    {/* <div\n                      onClick={() => see(record.historyId, record)}\n                      className='see'\n                      style={{ width: px(25), height: px(25) }}\n                    >\n                      <MyIcon type={'icon-mimaxiaoyanjing-copy'} className=\"icon \" style={{ color: '#fff', fontSize: px(13) }} />\n                    </div> */}\n                  </>\n                )\n              }\n\n\n            </div>\n          )\n\n        }\n      },\n      {\n        title: 'Date',\n        dataIndex: 'date',\n        key: 'date',\n        width: '14%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n\n          return (\n            <p style={{ textAlign: 'center' }}>{text}</p>\n          )\n\n        }\n      },\n      {\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time',\n        width: '14%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n\n          return (\n            <p style={{ textAlign: 'center' }}>{text}</p>\n          )\n\n        }\n      },\n      {\n        title: `Temp(${this.state.units})`,\n        // title: `Temp(℉)`,\n        key: 'temp',\n        dataIndex: 'temp',\n        className: `${isflog ? 'operation' : ''}`,\n        width: '14%',\n        render: (text, record, index) => {\n          // console.log(text, record);\n\n          /**\n          * bag：温度数值前的圆圈的背景颜色\n          * tem：展示的温度\n          * endvalue:将从后台得到的数据全部转化成华氏度\n          * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n          * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n          *\n          */\n\n\n          let bag = '', tem = ''\n\n          let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\n          let min = 100.4, max = 102.56\n\n\n\n\n\n\n          if (endValue > max) {\n            bag = '#E1206D'\n          } else if (endValue < min) {\n            bag = '#98DA86'\n          } else {\n            bag = '#58BDE6'\n          }\n\n          if (this.state.units === '℃') {\n            if (text) {\n              tem = `${text}${this.state.units}`\n              if (text > 55) {\n\n                tem = `${((text - 32) / 1.8).toFixed(1)}${this.state.units}`\n              }\n            }\n          } else {\n            if (text) {\n              if (text > 55) {\n                tem = `${text}${this.state.units}`\n              } else {\n                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\n              }\n\n            }\n          }\n          return (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\n              <p style={{ margin: 0, padding: 0 }}>{tem}</p>\n            </div>\n          )\n\n        }\n      },\n      {\n        title: `Rectal Temperature`,\n        key: 'referenceRectalTemperature',\n        dataIndex: 'referenceRectalTemperature',\n        width: '15%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n          // console.log('肛温的值：', text);\n          let num = text\n          if (text !== null) {\n            num = (text * 1.8 + 32).toFixed(1)\n          }\n\n          return (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              {text !== null && <p style={{ margin: 0, padding: 0 }}>{num} <span>{'℉'}</span></p>}\n\n            </div>\n          )\n\n        }\n      },\n      {\n        title: 'Placement',\n        dataIndex: 'placement',\n        key: 'placement',\n        align: 'center',\n        width: '15%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n          switch (record.placement) {\n            case 1: return (    //腋温\n              <div>\n                <img src={palcement_ye} alt=\"\" />\n              </div>\n            )\n            case 3: return (     //肛温\n              <div>\n                <img src={placement_gang} alt=\"\" />\n              </div>\n            )\n            case 2: return (     //肛温\n              <div>\n                <img src={placement_gang} alt=\"\" />\n              </div>\n            )\n            case 4: return (    //耳温\n              <div>\n                <img src={placement_er} alt=\"\" />\n              </div>\n            )\n            default: return null;\n          }\n\n        }\n      },\n      {\n        title: 'Note',\n        dataIndex: 'note',\n        key: 'note',\n        width: '12%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n\n          return (\n            <p style={{ width: '70px' }}>{text}</p>\n          )\n\n        }\n      },\n    ];\n\n\n\n    let hisHe = mTop(200)\n    try {\n      let historyElement = document.querySelectorAll('#clinicalMeasure11 .historyTable')\n      hisHe = historyElement[0].clientHeight - mTop(100)\n    } catch (error) {\n\n    }\n\n\n\n    return (\n      <div className='historyTable' style={{ height: '90%' }}>\n        <Table\n          columns={columns}\n          loading={this.state.loading}\n          dataSource={this.state.historyData}\n          rowKey={columns => columns.historyId}\n          // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\n          pagination={false}\n          scroll={{\n            y: hisHe\n          }}\n        />\n      </div>\n\n    )\n  }\n\n\n  _status = () => {\n    let { closeColor, closebgc, minbgc, units, isMeasure, Temp, measuerStatus, isconnected, showHistoryEchart } = this.state\n    let text = '', unit = '', temColor = ''\n\n    Temp = parseFloat(Temp)\n\n    if (isconnected === false) {\n      if (!showHistoryEchart) {\n        Temp = ''\n        text = 'disconnected'\n        temColor = '#3B3A3A'\n      } else {\n        text = 'disconnected'\n        temColor = '#3B3A3A'\n      }\n\n    } else {\n      text = 'connected'\n      temColor = '#3B3A3A'\n      if (Temp > 15) {\n        unit = units\n        if (Temp > 39) {\n          text = 'High'\n          temColor = '#E1206D'\n        } else if (Temp < 31) {\n          text = 'Low'\n          temColor = '#47C2ED'\n        } else {\n          text = 'Normal'\n          temColor = '#78D35D'\n        }\n      }\n    }\n\n\n\n    let temp = ''\n\n    if (`${Temp}` !== 'NaN' && Temp !== '') {\n      temp = units === '℉' ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1)\n    }\n    let lowFlog = false\n    if (unit === '℃') {\n      if (temp < 24.8) {\n        lowFlog = true\n      }\n    } else {\n      if (temp < 76.6) {\n        lowFlog = true\n      }\n    }\n\n\n\n\n\n    return (\n      <div className='Tem' style={{ color: temColor, right: px(30), bottom: mTop(120) }}>\n\n        {(!isMeasure) ? (\n          showHistoryEchart ? <>\n            <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{units}</sup></span><br />\n            {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\n\n            <span style={{ fontSize: px(22), color: '#8a8a8a' }}>{`History`}</span>\n          </> :\n\n            <>\n              <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\n              <span style={{ fontSize: px(22) }}>{text}</span>\n            </>\n        ) : (\n          lowFlog ? (\n            <>\n              <span style={{ fontSize: px(36) }}>{'Low'}</span><br />\n\n            </>\n          ) : (\n            <>\n              <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\n\n            </>\n          )\n\n        )}\n\n\n      </div>\n\n    )\n  }\n\n  _modal = () => {\n    let that = this\n\n    function save() {\n\n\n      switch (storage.identity) {\n        case '1':\n          console.log('我是vetspire查找');\n\n          break;\n\n        case '2':\n          console.log('我是ezyVet查找');\n          let params = {\n            animalId: that.state.emerPatientID,\n            organizationId: 4\n          }\n          let paramsArray = [];\n          Object.keys(params).forEach(key =>\n            paramsArray.push(key + \"=\" + params[key])\n          );\n          let url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId'\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\n          if (url.search(/\\?/) === -1) {\n            url = url + \"?\" + paramsArray.join(\"&\");\n          } else {\n            url = url + \"&\" + paramsArray.join(\"&\");\n          }\n          console.log('ezyVet集成查找宠物入参-请求地址', params, url);\n          fetch(url, {\n            method: \"GET\",\n            headers: {\n              'authorization': `Bearer ${storage.ezyVetToken}`,\n            }\n          }).then((response) => response.json())\n            .then((res) => {\n              console.log('res', res);\n              this.setState({\n                spin: false\n              })\n              if (res.flag === true) {\n                //有宠物，进入1\n                let petArr = res.data\n                if (petArr.length > 1) {\n                  petArr.sort(function (a, b) {\n                    return a.createTime > b.createTime ? 1 : -1;\n                  })\n                }\n\n\n                console.log(petArr);\n\n                let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr\n                assign(petId)\n\n              } else {\n                //没有宠物\n                message.error('There are no pets under this patientID')\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n              message.error('There are no pets under this patientID')\n            });\n\n          break;\n\n        case '3':\n          console.log('我是一般医生查找');\n          let datas = {\n            patientId: that.state.emerPatientID,\n            doctorId: storage.userId,\n          }\n          if (storage.lastWorkplaceId) {\n            datas.workplaceId = storage.lastWorkplaceId\n          }\n          console.log('入参：', datas);\n\n          getPetInfoByPatientIdAndPetId(datas)\n            .then(res => {\n\n              if (res.flag === true) {\n                //有宠物，进入1\n                let petArr = res.data\n                if (petArr.length > 1) {\n                  petArr.sort(function (a, b) {\n                    return a.createTime > b.createTime ? 1 : -1;\n                  })\n                }\n\n                console.log(petArr);\n\n                let { petId, } = petArr[0]\n                assign(petId)\n              } else {\n\n                message.error('There are no pets under this patientID')\n              }\n            })\n            .catch(err => {\n              message.error('There are no pets under this patientID')\n              console.log(err);\n            })\n          break;\n\n        default:\n          break;\n      }\n\n      const assign = (petId) => {\n        let parmes = {\n          petId,\n          clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId\n        }\n\n        addAndSavePetExam(that.state.seleceEmergencies.historyId, parmes)\n          .then(res => {\n            console.log('----------', res);\n            if (res.flag === true) {\n              console.log('分配成功');\n              message.success('Assigned successfully')\n              that._getEmergencyHistory()\n              that.setState({\n                visible: false,\n                emerPatientID: ''\n              })\n            } else {\n              message.success('Assignment failed')\n            }\n\n          })\n          .catch(err => {\n            console.log(err);\n            message.success('Assignment failed')\n          })\n      }\n\n\n\n\n    }\n\n\n    let { disabled, bounds, visible } = this.state\n    return (\n      <Modal\n        title={\n          <div\n            style={{\n              width: '100%',\n              cursor: 'move',\n              height: '20px',\n              textAlign: 'center'\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                this.setState({\n                  disabled: false,\n                });\n              }\n            }}\n            onMouseOut={() => {\n              this.setState({\n                disabled: true,\n              });\n            }}\n\n            onFocus={() => { }}\n            onBlur={() => { }}\n          // end\n          >\n            Distribute the history of emergencies\n          </div>\n        }\n        visible={visible}\n        // visible={true}\n        onOk={this.handleOk}\n        onCancel={this.handleCancel}\n\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div ref={this.draggleRef}>{modal}</div>\n          </Draggable>\n        )}\n        footer={\n          [] // 设置footer为空，去掉 取消 确定默认按钮\n        }\n        destroyOnClose={true}\n      >\n        <div id=\"selectEmergenciesModal\">\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '80px' }}>Patient ID</p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              value={this.state.emerPatientID}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  emerPatientID: item.target.value.replace(/\\s/g, \"\")\n                })\n              }}\n              onKeyDown={(e) => {\n                // console.log('------', e);\n                if (e.keyCode === 13) {\n                  save()\n                }\n              }}\n            />\n          </div>\n          <div className=\"btn\" onClick={save}>Save</div>\n        </div>\n\n      </Modal>\n\n    )\n\n  }\n\n  _editModal = () => {\n    let that = this\n\n    function save() {\n      let { editBodyConditionScore, editFurLength, editHeartRate, editBloodPressure, editRespiratoryRate } = that.state\n      let datas = {\n        memo: that.state.memo,\n        bodyConditionScore: parseInt(editBodyConditionScore),\n        furLength: parseInt(editFurLength),\n        heartRate: editHeartRate,\n        bloodPressure: editBloodPressure,\n        respiratoryRate: editRespiratoryRate\n        // roomTemperature: that.state.editRoomTemperature,\n        // referenceRectalTemperature: that.state.editRectal\n      }\n      if (that.state.editRoomTemperature) {\n        datas.roomTemperature = ((parseFloat(that.state.editRoomTemperature) - 32) / 1.8).toFixed(2)\n      }\n      if (that.state.editRectal) {\n        datas.referenceRectalTemperature = ((parseFloat(that.state.editRectal) - 32) / 1.8).toFixed(2)\n      }\n\n      console.log('入参：', datas, that.state.editId);\n      that.setState({\n        editVisible: false,\n        tip: 'Data is being modified',\n        tipSpin: true,\n\n      })\n      updatePetExam(that.state.editId, datas)\n        .then(res => {\n          console.log(res);\n          that.setState({\n\n            tip: '',\n            tipSpin: false\n          })\n          message.success('Data modified successfully')\n\n          that._getHistory11(that.state.selectPet.petId)\n        })\n        .catch(err => {\n          that.setState({\n            spin: false,\n            tip: '',\n            tipSpin: false\n          })\n          message.success(' Data modification failed')\n\n          console.log(err);\n        })\n\n    }\n\n\n    let { disabled, bounds, editVisible, editFurLength } = this.state\n    let furLength = ''\n    if (editFurLength !== null && editFurLength !== undefined) {\n      switch (`${editFurLength}`) {\n        case '1': furLength = 'smooth'; break;\n        case '2': furLength = 'short'; break;\n        case '3': furLength = 'medium'; break;\n        case '4': furLength = 'long'; break;\n\n        default:\n          break;\n      }\n    }\n\n    return (\n      <Modal\n        title={\n          <div\n            style={{\n              width: '100%',\n              cursor: 'move',\n              height: '20px',\n              textAlign: 'center'\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                this.setState({\n                  disabled: false,\n                });\n              }\n            }}\n            onMouseOut={() => {\n              this.setState({\n                disabled: true,\n              });\n            }}\n\n            onFocus={() => { }}\n            onBlur={() => { }}\n          // end\n          >\n            Modification history information\n          </div>\n        }\n        visible={editVisible}\n        // visible={true}\n        onCancel={() => { that.setState({ editVisible: false, }); }}\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div ref={this.draggleRef}>{modal}</div>\n          </Draggable>\n        )}\n        footer={\n          [] // 设置footer为空，去掉 取消 确定默认按钮\n        }\n        destroyOnClose={true}\n      >\n        <div id=\"selectEmergenciesModal\">\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Room Temperature </p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editRoomTemperature}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  editRoomTemperature: str\n                })\n              }}\n\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Rectal Temperature</p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editRectal}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  editRectal: str\n                })\n              }}\n\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Body Condition Score</p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editBodyConditionScore}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, '')\n                this.setState({\n                  editBodyConditionScore: str\n                })\n              }}\n\n            />\n          </div>\n\n          <div className='bodyType11' >\n            <p style={{ width: '140px' }}>Fur Length: </p>\n            <Select\n              placeholder\n              onChange={(index) => {\n                console.log(index);\n                this.setState({\n                  editFurLength: index\n                })\n              }}\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n              value={furLength}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n\n\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Heart Rate: </p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editHeartRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, '')\n\n                this.setState({\n                  editHeartRate: str\n                })\n              }}\n\n            />\n            <span>bpm</span>\n          </div>\n\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Blood Pressure </p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editBloodPressure}\n              onChange={(item) => {\n                this.setState({\n                  editBloodPressure: item.target.value\n                })\n              }}\n\n            />\n            <span>mm</span>\n          </div>\n\n\n\n\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Respiratory Rate: </p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editRespiratoryRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, '')\n\n                this.setState({\n                  editRespiratoryRate: str\n                })\n              }}\n\n            />\n            <span>bpm</span>\n          </div>\n\n\n\n\n\n\n\n          {/* <div className='bodyType11' >\n            <p style={{ width: '140px' }}>Body Type: </p>\n            <Select\n              // showSearch\n              placeholder\n              onChange={this.handleChange1}\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n              // value={placeholder1}\n              dropdownMatchSelectWidth={120}\n\n            >\n              <Option value=\"1\">small</Option>\n              <Option value=\"2\">barrel chested</Option>\n              <Option value=\"3\">keel chested</Option>\n            </Select>\n          </div> */}\n\n\n\n\n\n\n\n\n\n\n\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '80px' }}>Notes</p>\n            <textarea\n              rows=\"2\"\n              cols=\"40\"\n              style={{ textIndent: '10px' }}\n              value={that.state.memo}\n              onChange={(val) => {\n                that.setState({\n                  memo: val.target.value\n                })\n              }}\n\n            >\n            </textarea>\n          </div>\n\n          <div className=\"btn\" onClick={save}>Save</div>\n        </div>\n\n      </Modal>\n\n\n\n    )\n\n  }\n\n  render() {\n    console.log('-----', this.state.Temp);\n    return (\n      <div id=\"clinicalMeasure11\">\n        <div style={{ height: '60%' }}>\n\n          <div className=\"heard\">\n            <Heard />\n          </div>\n\n\n          {/* 宠物信息与折线图部分 */}\n          <div className='clinical_top'\n          // style={{ height: mTop(480) }}\n          >\n            {this._topLeft()}\n            <div className=\"r\" >\n              {!this.state.isconnected && <div className=\"bb1\"\n                style={{ left: px(150) }}\n              >\n                <div className=\"btn78\"\n                  style={{ width: px(220), height: mTop(30), fontSize: px(16) }}\n                  onClick={() => {\n                    console.log('点击了切换按钮');\n\n                    if (resyncDeviceIsClick === true) {\n                      resyncDeviceIsClick = false\n                      console.log('发送给主进程切换按钮');\n                      ipcRenderer.send('qiehuan')\n                      // ipcRenderer.send('getSerialPort')\n                      const time = setTimeout(() => {\n                        resyncDeviceIsClick = true\n                        clearTimeout(time)\n                      }, 2500)\n                    }\n\n\n\n                  }}\n                >Re-sync Base</div>\n              </div>}\n\n\n              <div id='myCharts'\n                style={{ marginTop: mTop(50) }}\n\n              >\n                <ReactECharts\n\n                  option={this.getOption()} theme=\"Imooc\" style={{ height: mTop(430), }}\n                  notMerge={true}\n                  lazyUpdate={true}\n                  // theme={\"theme_name\"}\n                  ref={(e) => { this.echartsElement = e }}\n                />\n              </div>\n\n              {this._status()}\n              {/* {this._mearsurePort()} */}\n              <div className=\"time\"\n                style={{ bottom: mTop(20), left: px(70) }}\n              >\n                {(this.state.isconnected) ? (<p style={{ fontSize: px(25) }}>{`Measurement Timer  ${this.state.countdown} s`}</p>) : null}\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n\n\n        {/* 底部宠物信息 */}\n        {this._foot()}\n        {this._modal()}\n        {this._editModal()}\n\n\n        <Modal\n\n          visible={this.state.err07Visible}\n          // visible={true}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          width={330}\n          closable={false}\n          footer={[\n\n          ]}\n          destroyOnClose={true}\n          wrapClassName=\"vetPrifileModal\"\n        >\n          <div id='vetPrifileModal'>\n            <div className=\"title\">prompt\n            </div>\n\n            <div className='text'>Please re-plug the base device</div>\n\n\n            <div className=\"btn\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '5px' }}>\n\n              <button\n                onClick={() => {\n                  this.setState({\n                    err07Visible: false,\n                  })\n                  num07 = 0\n\n                }}\n              >OK</button>\n\n\n            </div>\n          </div>\n\n\n        </Modal>\n\n        {\n          this.state.tipSpin &&\n          // true &&\n          <div className=\"modal\">\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\n\n\n            </div>\n            <p>\n              data is loading...\n            </p>\n          </div>\n        }\n        <MyModal\n          visible={this.state.tempHeight}\n          element={\n            <div className=\"tempHeight\">\n              <div className=\"tempHeightImg\">\n                <img src={redjinggao} alt=\"\" style={{ width: px(60), }} />\n              </div>\n              <div className=\"tempText\" style={{ fontSize: px(24), marginBottom: px(60) }}>If the initial temperature reading is too high, the measurement may be inaccurate. Consider letting the thermometer cool down to 85°F and try again</div>\n\n              <div className=\"tempBtn flex\" style={{ height: px(45), fontSize: px(24), marginBottom: px(20) }}\n                onClick={() => { this.setState({ tempHeight: false }) }}\n              >\n                OK\n              </div>\n\n              <div className=\"close\" style={{ top: px(20), right: px(20) }}\n                onClick={() => { this.setState({ tempHeight: false }) }}\n              >\n                <img src={close} alt=\"\" style={{ width: px(30) }} />\n              </div>\n\n\n            </div>\n          }\n        />\n\n\n\n      </div>\n    )\n  }\n\n\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/selectLocation/index.jsx",["559","560","561","562","563","564"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signIn/index.jsx",["565","566","567","568","569","570"],"import React, { Component } from \"react\";\nimport { Input, message, Spin } from \"antd\";\nimport {\n  createFromIconfontCN,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\n\nimport mellaLogo from \"./../../assets/images/mellaLogo.png\";\nimport dui from \"./../../assets/images/dui.png\";\nimport back_white from \"./../../assets/img/back-white.png\";\nimport back_hui from \"./../../assets/img/back-hui.png\";\n\nimport { getLoginQRcode, loginWithQRcode, mellaLogin } from \"./../../api\"\n\nimport temporaryStorage from \"../../utils/temporaryStorage\";\nimport { px, win } from \"../../utils/px\";\nimport MinClose from \"./../../utils/minClose/MinClose\";\nimport MouseDiv from \"./../../utils/mouseDiv/MouseDiv\";\nimport { addLogin } from \"../../utils/axios\";\n\nimport \"./index.less\";\n\nlet storage = window.localStorage;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js\",\n});\nlet num = 0;\n//有可能出现,登录成功跳转后获取到了二维码,这样就会导致出现一直轮询,未解决这个问题设置变量isSign\nlet isSign = true;\n\nexport default class SignIn extends Component {\n  state = {\n    isRemember: false,\n    email: \"\",\n    hash: \"\",\n    isCode: false,\n    baseUrl: \"\",\n    QRToken: \"\",\n    isExpired: false, //二维码是否过期\n    spin: false,\n    isLoadQrCode: false, //是否正在加载二维码\n  };\n  componentDidMount() {\n    isSign = true;\n    storage.lastOrganization = \"\";\n    //通知main.js渲染一个small窗口\n    let ipcRenderer = window.electron.ipcRenderer;\n    ipcRenderer.send(\"small\", win());\n    //如果有保存的账号密码则展示出来\n    if (storage.signIn !== undefined && storage.signIn !== \"\") {\n      let data = storage.signIn;\n      data = JSON.parse(data);\n      this.setState({\n        email: data.email,\n        hash: data.hash,\n        QRToken: \"\",\n      });\n    }\n    //是否勾选了保持登录\n    if (storage.isRemember !== undefined) {\n      let isRemember = storage.isRemember === \"true\" ? true : false;\n      this.setState({\n        isRemember,\n      });\n    }\n    // 监听分辨率是否改变\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    //清空本地的注册界面的信息\n    temporaryStorage.logupVetInfo = {};\n    this._getQRCode();\n  }\n  componentWillUnmount() {\n    isSign = false;\n    this.timer && clearInterval(this.timer);\n    let ipcRenderer = window.electron.ipcRenderer;\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer;\n    // ipcRenderer.send('small')\n    ipcRenderer.send(\"small\", win());\n    this.setState({});\n  };\n  _getQRCode = () => {\n    this.setState({\n      isLoadQrCode: true,\n    });\n    num = 0;\n\n    getLoginQRcode()\n      // addQRCode()\n      .then((res) => {\n        message.destroy();\n\n        console.log(\"---获取二维码\", res);\n        if (res.flag === true) {\n          this.setState({\n            baseUrl: res.data.QRcode,\n            QRToken: res.data.QRToken,\n            isLoadQrCode: false,\n          });\n          this.timer = setInterval(() => {\n            if (!isSign) {\n              this.timer && clearInterval(this.timer);\n            }\n            num++;\n            console.log(\"lunxin\");\n            this._polling();\n\n            if (num > 280) {\n              //超过280秒则去显示二维码过期，要重新获取\n              this.setState({\n                isExpired: true,\n              });\n              num = 0;\n              this.timer && clearInterval(this.timer);\n            }\n          }, 1000);\n        } else {\n          message.error(\"Failed to obtain QR code\", 10);\n          this.setState({\n            isLoadQrCode: false,\n          });\n        }\n      })\n      .catch((err) => {\n        message.error(\"Failed to obtain QR code\", 10);\n        this.setState({\n          isLoadQrCode: false,\n        });\n        console.log(err);\n      });\n  };\n  //轮询\n  _polling = () => {\n\n    loginWithQRcode(this.state.QRToken)\n      .then((res) => {\n        console.log(\"轮询结果：\", res);\n        if (res.flag === true) {\n          switch (res.code) {\n            case 10001:\n              console.log(\"未扫码\");\n\n              break;\n\n            case 11033:\n              console.log(\"扫码未点击登录\");\n              this.timer && clearInterval(this.timer);\n              temporaryStorage.QRToken = this.state.QRToken;\n              let { name, url } = res.data;\n              this.props.history.replace({\n                pathname: \"/user/login/scanCodeLogin\",\n                params: { name, url },\n              });\n\n              break;\n\n            case 11023:\n              console.log(\"过期\");\n              this.setState({\n                isExpired: true,\n              });\n              num = 0;\n              this.timer && clearInterval(this.timer);\n\n              break;\n\n            default:\n              break;\n          }\n        }\n        console.log(\"code\", res.code);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //登录接口\n  _continue = () => {\n    const { email, hash, isRemember } = this.state;\n\n    message.destroy();\n    let params = {\n      email: email.replace(/(^\\s*)/g, \"\"),\n      hash,\n      identityTypeId: \"1\",\n    };\n    if (email === \"\") {\n      message.error(\"please input your email\");\n      return;\n    }\n    if (hash === \"\") {\n      message.error(\"please input your password\");\n      return;\n    }\n    console.log(params);\n    this.setState({\n      spin: true,\n    });\n    mellaLogin(params)\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          spin: false,\n        });\n        if (res.status && res.status === 404) {\n          message.error(\"system error\");\n          return;\n        }\n        if (res.status === 500) {\n          message.error(\"system error\");\n\n          return;\n        }\n        if (res.code === 10001 && res.msg === \"账号错误\") {\n          message.error(\"Account error\");\n          return;\n        }\n        if (res.code === 10002 && res.msg === \"密码错误\") {\n          message.error(\"wrong password\");\n          return;\n        }\n        if (\n          res.code === 0 &&\n          res.msg === \"success\" &&\n          res.success.roleId === 1\n        ) {\n          message.error(\n            \"You do not have the authority of a doctor, please contact the administrator or customer service\",\n            10\n          );\n          return;\n        }\n        if (res.code === 10004 && res.msg === \"账号被限制\") {\n          message.error(\n            \"The account is restricted, please contact the management\",\n            10\n          );\n          return;\n        }\n        if (res.code === 10003) {\n          message.error(\"The password or email is incorrect, please re-enter\");\n          return;\n        }\n\n        if (res.code === 0 && res.msg === \"success\") {\n          this.timer && clearInterval(this.timer);\n          console.log(\"账号密码正确，登录进去了\");\n          let { userWorkplace, lastOrganization, token } = res.success;\n          storage.token = token;\n          storage.userId = \"\";\n          let data = {\n            email: email.replace(/(^\\s*)/g, \"\"),\n            hash,\n          };\n          data = JSON.stringify(data);\n          if (isRemember === true) {\n            storage.signIn = data;\n          } else {\n            storage.signIn = \"\";\n          }\n          storage.saveSign = data;\n\n          storage.userId = res.success.userId;\n          storage.roleId = res.success.roleId;\n\n          //每次登陆后清空宠物列表缓存的数据\n          storage.doctorList = \"\";\n          storage.defaultCurrent = \"\";\n\n          //由于后台接口原因，导致这里的最后工作场所可能不是自己的，因此下面全注释掉。改成如果有多个工作场所则跳转到选择工作场所界面，不是多个则跳转到选择宠物界面\n          if (res.success.lastWorkplaceId) {\n            storage.lastWorkplaceId = res.success.lastWorkplaceId;\n          } else {\n            storage.lastWorkplaceId = \"\";\n          }\n\n          if (res.success.lastOrganization) {\n            storage.lastOrganization = res.success.lastOrganization;\n          } else {\n            storage.lastOrganization = \"\";\n          }\n\n          // console.log(\"----------\", userWorkplace, userWorkplace.length);\n\n          if (userWorkplace) {\n            storage.userWorkplace = JSON.stringify(userWorkplace);\n            let connectionKey = \"\";\n            for (let i = 0; i < userWorkplace.length; i++) {\n              const element = userWorkplace[i];\n              if (element.organizationEntity) {\n                if (\n                  element.organizationEntity.organizationId === lastOrganization\n                ) {\n                  if (element.organizationEntity.connectionKey) {\n                    connectionKey = element.organizationEntity.connectionKey;\n                  }\n                  if (element.roleId) {\n                    console.log(element.roleId);\n                    storage.roleId = element.roleId;\n                  }\n\n                  break;\n                }\n              }\n            }\n            console.log(\"----------key值为：\", connectionKey);\n            storage.connectionKey = connectionKey;\n          } else {\n            storage.userWorkplace = \"\";\n            storage.connectionKey = \"\";\n          }\n\n          this.props.history.push(\"/MainBody\");\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          spin: false,\n        });\n        console.log(err);\n      });\n  };\n\n  _signUp = (e) => {\n    e.preventDefault();\n    this.props.history.push(\"/uesr/logUp/VetPrifile\");\n  };\n  _change = () => {\n    let { isCode } = this.state;\n    message.destroy();\n    if (isCode === false) {\n      this._getQRCode();\n    } else {\n      this.timer && clearInterval(this.timer);\n      num = 0;\n      this.setState({\n        isExpired: false,\n      });\n    }\n    this.setState({ isCode: !this.state.isCode });\n  };\n  //二维码界面\n  _qrCode = () => {\n    let { isCode, baseUrl, isExpired, isLoadQrCode } = this.state;\n    let imgOpacity = isLoadQrCode ? (baseUrl ? 0.1 : 0.5) : 1;\n\n    if (!isExpired) {\n      const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n      return (\n        <div className=\"qrcode\">\n          <img\n            src={`data:image/jpeg;base64,${baseUrl}`}\n            alt=\"\"\n            style={{\n              width: px(120),\n              height: px(120),\n              opacity: imgOpacity,\n            }}\n          />\n          {isLoadQrCode && (\n            // true &&\n\n            <div className=\"err\">\n              <Spin\n                indicator={antIcon}\n                tip=\"Loading...\"\n                style={{ fontSize: 16, color: \"#e1206d\" }}\n              />\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"qrcode\">\n          <img\n            src={`data:image/jpeg;base64,${baseUrl}`}\n            alt=\"\"\n            style={{ opacity: \"0.1\", width: px(120), height: px(120) }}\n          />\n\n          <div className=\"err\">\n            <div className=\"errText\">QR code has expired</div>\n            <div\n              className=\"btn\"\n              style={{ width: px(145), height: px(35), marginTop: px(10) }}\n              onClick={this.refresh}\n            >\n              Refresh\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n  //点击refresh按钮\n  refresh = () => {\n    this.setState({\n      isExpired: false,\n    });\n    num = 0;\n    this._getQRCode();\n  };\n  beforeDiv = () => {\n    return <img src={back_hui} alt=\"\" style={{ width: px(15) }} />;\n  };\n  afterDiv = () => {\n    return <img src={back_white} alt=\"\" style={{ width: px(15) }} />;\n  };\n\n  render() {\n    let { isCode, baseUrl } = this.state;\n    let code = isCode ? \"icon-diannao-copy\" : \"icon-erweima-copy\";\n    return (\n      <div id=\"signIn\">\n        <div\n          className=\"heaed\"\n          style={{ paddingTop: px(10), paddingRight: px(20) }}\n        >\n          <div className=\"l\">\n            <MouseDiv\n              className=\"mouseDiv\"\n              beforeDiv={this.beforeDiv}\n              afterDiv={this.afterDiv}\n              divClick={() => {\n                this.props.history.push(\"/\");\n              }}\n            />\n          </div>\n          <div className=\"r\">\n            <MinClose />\n          </div>\n        </div>\n\n        <div className=\"body\">\n          <div className=\"logo\">\n            <img src={mellaLogo} alt=\"\" />\n          </div>\n          <div className=\"body\" style={{ position: \"relative\" }}>\n            <div\n              className=\"text\"\n            // style={{\n            //   fontSize: px(28),\n            //   marginBottom: px(20),\n            //   marginTop: px(30),\n            // }}\n            >\n              Please enter email <br />\n              and password\n            </div>\n\n            <div className=\"inpF\">\n              <Input\n                className=\"inp\"\n                // style={{\n                //   width: px(310),\n                //   height: px(45),\n                //   fontSize: px(18),\n                // }}\n                value={this.state.email}\n                placeholder=\"rachel@friends.com\"\n                bordered={false}\n                onChange={(item) => {\n                  let str = item.target.value;\n                  this.setState({\n                    email: str,\n                  });\n                }}\n              />\n              <Input.Password\n                className=\"inp\"\n                // style={{\n                //   width: px(310),\n                //   height: px(45),\n                //   marginLeft: px(6),\n                //   marginBottom: px(18),\n                //   fontSize: px(18),\n                // }}\n                visibilityToggle={false}\n                value={this.state.hash}\n                placeholder=\"********\"\n                bordered={false}\n                onChange={(item) => {\n                  let str = item.target.value;\n                  this.setState({\n                    hash: str,\n                  });\n                }}\n                onKeyDown={(e) => {\n                  if (e.keyCode === 13) {\n                    this._continue();\n                  }\n                }}\n              />\n\n              <div\n                className=\"text\"\n              // style={{\n              //   fontSize: px(28),\n              //   lineHeight: px(1),\n              //   marginTop: px(10),\n              //   marginBottom: px(20),\n              // }}\n              >\n                {\"Or scan QR Code\"}\n              </div>\n            </div>\n\n            {this._qrCode()}\n            <div\n              className=\"littleText flex\"\n              style={{\n                fontSize: px(12),\n                marginTop: px(10),\n                marginBottom: px(10),\n              }}\n            >\n              Go to your Mella mobile app to access\n              <br />\n              the QR scanner\n            </div>\n            <div className=\"stay\">\n              <div className=\"remember\">\n                <p style={{ fontSize: px(16) }}>Stay Signed In</p>\n                <div\n                  className=\"box\"\n                  style={{ width: px(20), height: px(20), marginLeft: px(12) }}\n                  onClick={() => {\n                    let { isRemember } = this.state;\n                    this.setState({\n                      isRemember: !isRemember,\n                    });\n                    storage.isRemember = !isRemember;\n                  }}\n                >\n                  {this.state.isRemember && <img src={dui} alt=\"\" />}\n                </div>\n              </div>\n              <div\n                className=\"forgot\"\n                style={{ fontSize: px(16) }}\n                onMouseDown={() => {\n                  let forget = document.querySelectorAll(\"#signIn .forgot\");\n                  forget[0].style.opacity = 0.5;\n                }}\n                onMouseUp={() => {\n                  document.querySelectorAll(\n                    \"#signIn .forgot\"\n                  )[0].style.opacity = 1;\n                  if (this.state.email) {\n                    temporaryStorage.forgotPassword_email = this.state.email;\n                  }\n\n                  this.props.history.push(\"/user/login/forgotPassword\");\n                }}\n              >\n                Forgot?\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div\n          className=\"button11\"\n          style={{ backgroundColor: \"#E7E7E7\" }}\n        >\n          <div\n            className=\"btn1 flex\"\n            onClick={this._continue}\n          // style={{ height: px(40) }}\n          >\n            <p>{`CONTINUE`}</p>\n          </div>\n\n          <div className=\"text2\" style={{ marginTop: px(12) }}>\n            <p style={{ fontSize: px(17) }}>\n              Do not have an account?{\" \"}\n              <a href=\"#\" onClick={this._signUp}>\n                Sign Up\n              </a>\n            </p>\n          </div>\n        </div>\n\n        {this.state.spin && (\n          <div className=\"modal\">\n            <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\n              <LoadingOutlined\n                style={{ fontSize: 30, color: \"#fff\", marginTop: px(-30) }}\n              />\n            </div>\n            <p>loading...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n",["571","572"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/editParent/index.jsx",["573","574","575","576","577","578","579","580","581"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/organization.js",["582"],"/**\n * @file organization.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/organization 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del } from '../api'\nimport { mellaserverBaseUrl } from '../../config/config'\nconst baseURL = `${mellaserverBaseUrl}/organization`\n\n\n\n/**\n * @dec  管理员获取组织下的所有医生\n * @param {string} lastOrganization 组织id\n * @param {*} params \n * @returns \n */\n\nexport const listDoctorsByAdmin = (lastOrganization, params) => {\n    return get(`${baseURL}/listDoctorsByAdmin${lastOrganization}`, params)\n}\n\n/**\n * @dec 获取所有组织\n * @returns \n * \n */\nexport const listAll = () => {\n    return get(`${baseURL}/listAll`, '')\n}\n\n\n\n/**\n * @dec 创建一个组织\n * @param {str} userId 用户id\n * @param {*} params \n * @returns \n */\nexport const addOrganization = (userId, params) => {\n    return postJson(`${baseURL}/listAll/${userId}`, params)\n}\n",["583","584"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measuredData.jsx",["585","586","587","588","589","590","591","592","593","594","595","596","597"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/ishavePMS/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/team/index.jsx",["598","599","600"],"import React, { Component, } from 'react'\nimport {\n  Tag,\n  Input,\n  Tooltip,\n  message,\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport temporaryStorage from '../../utils/temporaryStorage'\nimport { px } from '../../utils/px';\nimport Button from '../../utils/button/Button';\nimport MyModal from '../../utils/myModal/MyModal';\n\nimport './index.less';\nimport { checkUser, inviteUserByEmail, mellaLogin } from '../../api';\n\nexport default class Team extends Component {\n\n  state = {\n\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n    visible: false\n  }\n\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n    this.setState({\n\n    })\n  }\n\n\n  handleClose = removedTag => {\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\n    console.log(tags);\n    this.setState({ tags });\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n    const { inputValue } = this.state;\n    let { tags } = this.state;\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      console.log('输入的内容为：', inputValue);\n      message.destroy()\n      checkUser(inputValue)\n        .then(res => {\n\n\n          console.log('检测邮箱存不存在', res);\n\n          if (res.code) {\n            switch (res.code) {\n\n              case 11011:\n                console.log('邮箱存在，发送邮件');\n                tags = [...tags, inputValue];\n                console.log(tags);\n\n                this.setState({\n                  tags,\n                  inputVisible: false,\n                  inputValue: '',\n                });\n                break;\n              // case 11012:\n              //     console.log('账号被限制、注册未激活状态');\n\n\n\n              // case 11013:\n              //     console.log('邮箱未被注册，跳出弹框询问是否前往注册');\n              case 11014:\n                console.log('邮箱被注销或者封停，跳出弹框询问是否前往注册');\n                message.error('This mailbox was not found!', 3)\n                this.setState({\n                  inputVisible: false,\n                  inputValue: '',\n                });\n                break;\n\n            }\n          } else {\n            console.log('系统错误', res);\n            message.error('system error')\n            this.setState({\n              spin: false\n            })\n          }\n\n\n        })\n        .catch(err => {\n          message.error(`Error:${err.message}`)\n          console.log('检测邮箱号的接口出错了', err);\n        })\n\n\n    }\n\n  };\n\n\n  saveInputRef = input => {\n    this.input = input;\n  };\n\n  saveEditInputRef = input => {\n    this.editInput = input;\n  };\n\n  _next = () => {\n    message.destroy()\n    let { tags } = this.state\n    let { userId } = temporaryStorage.logupSuccessData\n    let { organizationId } = temporaryStorage.logupOrganization\n    console.log({ tags, userId, organizationId });\n    if (tags.length === 0) {\n      this._logIn()\n    }\n    this.setState({\n      visible: true\n    })\n    console.log('入参:', tags);\n    inviteUserByEmail(userId, organizationId, tags)\n      .then(res => {\n        console.log(res);\n        if (res.flag === true) {\n          console.log('成功，跳转');\n          message.success('Invitation successful', 3)\n          this._logIn()\n        } else {\n          this.setState({\n            visible: false\n          })\n        }\n\n      })\n      .catch(err => {\n        this.setState({\n          visible: false\n        })\n        console.log(err);\n        message.error(err.message, 3)\n      })\n  }\n  _logIn = () => {\n\n    let storage = window.localStorage;\n    let sign = storage.saveSign\n    try {\n      sign = JSON.parse(sign)\n    } catch (error) {\n\n    }\n\n    let { email, hash } = sign\n    let params = {\n      email: email.replace(/(^\\s*)/g, \"\"),\n      hash,\n      identityTypeId: '1'\n    }\n    console.log('登录入参:', params);\n    mellaLogin(params)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          visible: false\n        })\n        if (res.status && res.status === 404) {\n          message.error('system error');\n          return\n        }\n        if (res.code === 10001 && res.msg === '账号错误') {\n          message.error('Account error');\n          return\n        }\n        if (res.code === 10002 && res.msg === '密码错误') {\n          message.error('wrong password')\n          return;\n        }\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\n          return\n        }\n\n        if (res.code === 0 && res.msg === 'success') {\n          console.log('账号密码正确，登录进去了');\n          let { userWorkplace, lastOrganization, token } = res.success\n          storage.token = token\n          storage.userId = ''\n\n          storage.userId = res.success.userId\n          storage.roleId = res.success.roleId\n\n          //每次登陆后清空宠物列表缓存的数据\n          storage.doctorList = ''\n          storage.defaultCurrent = ''\n\n\n\n\n          if (userWorkplace) {\n            storage.userWorkplace = JSON.stringify(userWorkplace)\n            let connectionKey = ''\n            for (let i = 0; i < userWorkplace.length; i++) {\n              const element = userWorkplace[i];\n              if (element.organizationEntity) {\n                if (element.organizationEntity.organizationId === lastOrganization) {\n\n                  if (element.organizationEntity.connectionKey) {\n                    connectionKey = element.organizationEntity.connectionKey\n                  }\n                  if (element.roleId) {\n                    console.log(element.roleId);\n                    storage.roleId = element.roleId\n                  }\n\n                  break\n                }\n              }\n\n            }\n            console.log('----------key值为：', connectionKey);\n            storage.connectionKey = connectionKey\n\n          } else {\n            storage.userWorkplace = ''\n            storage.connectionKey = ''\n\n          }\n\n\n\n\n\n\n\n          this.props.history.push('/menuOptions/ConnectWorkplace')\n\n\n        }\n      })\n      .catch(err => {\n        this.setState({\n          visible: false\n        })\n        console.log(err);\n      })\n  }\n\n\n\n\n\n\n  render() {\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\n    // console.log('---', editInputIndex);\n    return (\n      <div id=\"inviteTeam\" >\n        {/* 关闭缩小 */}\n        <div className=\"heard\">\n          <MaxMin\n            onClick={() => { this.props.history.push('/') }}\n            onClick1={() => this.props.history.goBack()}\n          />\n          <div className=\"text\">Invite your Team</div>\n\n          <div className=\"addF\">\n            <p>To:</p>\n            <div className=\"add\">\n\n              <>\n                {tags.map((tag, index) => {\n                  const isLongTag = tag.length > 25;  //标签里面的字符串的长度\n\n                  const tagElem = (\n                    <Tag\n                      className=\"edit-tag\"\n                      key={tag}\n                      closable={true}\n                      onClose={() => this.handleClose(tag)}\n                    >\n                      <span>\n                        {isLongTag ? `${tag.slice(0, 25)}...` : tag}\n                      </span>\n                    </Tag>\n                  );\n                  return isLongTag ? (\n                    <Tooltip title={tag} key={tag}>\n                      {tagElem}\n                    </Tooltip>\n                  ) : (\n                    tagElem\n                  );\n                })}\n                {inputVisible && (\n                  <Input\n                    ref={this.saveInputRef}\n                    type=\"text\"\n                    size=\"small\"\n                    className=\"tag-input\"\n                    value={inputValue}\n                    onChange={this.handleInputChange}\n                    onBlur={this.handleInputConfirm}\n                    onPressEnter={this.handleInputConfirm}\n                  />\n                )}\n                {!inputVisible && (\n                  <Tag className=\"site-tag-plus\" onClick={this.showInput}>\n                    <PlusOutlined />Press Enter to add mailbox\n                  </Tag>\n                )}\n              </>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"btn\"\n          style={{ padding: `${px(40)}px 0` }}\n        >\n          <Button\n            type=\"primary\"\n            shape=\"round\"\n            size='large'\n            htmlType=\"submit\"\n            onClick={this._logIn}\n            text={'Skip'}\n          >\n            Skip\n          </Button>\n          <Button\n            type=\"primary\"\n            shape=\"round\"\n            size='large'\n            htmlType=\"submit\"\n            onClick={this._next}\n            text={'Send'}\n          >\n\n          </Button>\n        </div>\n        <MyModal visible={this.state.visible} />\n\n      </div>\n\n\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/VetSpire.js",["601","602","603"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/HardListModal.jsx",["604"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/index.jsx",["605","606","607","608","609","610","611","612"],"import React, { Component } from \"react\";\nimport { Modal, message } from \"antd\";\n\nimport Heard from \"../../utils/heard/Heard\";\nimport { px, win, timerFun } from \"../../utils/px\";\nimport electronStore from \"../../utils/electronStore\";\nimport { compareObject } from \"../../utils/current\";\nimport { compareArray } from \"../../utils/current\";\n\nimport HardAndPetsUI from \"./HardAndPetsUI\";\nimport HardWareTypeUI from \"./hardWareTypeUI\";\nimport AddDevice from \"./AddDevice\";\n\nimport BiggiePage from \"../../pages/biggiePage\";\nimport ScanPage from \"../../pages/scanPage\";\nimport AllPets from \"../../pages/allPetsPage\";\nimport ScheduledPetPage from \"../../pages/scheduledPetsPage\";\nimport AddScheduledPet from \"../../pages/addScheduledPet\";\nimport ClininalStudy from \"../../pages/clinicalStudyPage\";\nimport CombineScales from \"../../pages/combineScales\";\nimport OtterEQPage from '../../pages/otterEQ';\nimport MyAccount from \"../../pages/myAccount\";\nimport TemperaturePage from \"../../pages/temperaturePage\";\n\n\nimport { connect } from \"react-redux\";\nimport {\n  setHardwareList,\n  selectHardwareModalShowFun,\n  setIsHaveUsbDeviceFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n  setMellaDeviceIdFun,\n  setMellaMeasureNumFun,\n  setBiggieConnectStatusFun,\n  setBiggieBodyFatFun,\n  setBiggieBodyWeightFun,\n  setBiggieUnitFun,\n  setBiggieSameWeightCountFun,\n  setRulerConnectStatusFun,\n  setRulerMeasureValueFun,\n  setRulerUnitFun,\n  setRulerConfirmCountFun,\n  setReceiveBroadcastHardwareInfoFun,\n} from \"../../store/actions\";\n\nimport \"./mainbody.less\";\n\n\nlet ipcRenderer = window.require(\"electron\").ipcRenderer;\nlet isMeasure = false; //是否正在测量,用于判断是否需要发送指定指令给USB,查看硬件是否连接\nlet initTime = 0; //初始化时间,用来计算底座没有回应温度计的时间差,如果时间差大于6秒代表断开连接\nlet num07 = 0; //接收到07命令行的次数,次数大于3跳出弹框\nlet firstEar = true; //为true代表一组数据测量完成,下组测量数据\nlet is97Time = null; //为了防抖，因为有时候断开连接和连接成功总是连续的跳出来，展示就会一直闪烁，因此引入时间差大于800ms才展示\nlet exchangeNum = 0; //奇数发送查询探头id指令，偶数发送询问配置\nlet time194 = 0\n\n//用于预测的东西\nlet clinicalYuce = [],\n  clinicalIndex = 0;\n\nlet storage = window.localStorage;\n\nclass App extends Component {\n  state = {\n    //body部分窗口高度\n    bodyHeight: 0,\n    //本地保存的硬件类型数组,不包括Add这个类型\n    devicesTypeList: [],\n    //展示硬件类型的数组\n    showHardWareTypeList: [],\n    //是否有USB设备\n    isHaveUsbDevice: true,\n    //mella温度计测量状态\n    mellaMeasureStatus: \"disconnected\", //connected,disconnected,isMeasuring,complete\n\n    //点击菜单的序号\n    clickMenuIndex: \"1\",\n    err07Visible: false,\n    units: '℉'\n  };\n  componentDidMount() {\n    ipcRenderer.send(\"big\", win());\n    timerFun();\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    //获取窗口高度\n    this.resize();\n    //react监听屏幕窗口改变\n    window.addEventListener(\"resize\", this.resize);\n\n    //获取设备类型\n    this.getDevicesType();\n\n    //检测USB设备发来的信息\n    ipcRenderer.on(\"sned\", this._send);\n    //检测是否有USB设备\n    ipcRenderer.on(\"noUSB\", this._noUSB);\n    //定时查看mella温度计是否与底座连接或断开\n    this._whether_to_connect_to_mella();\n\n    //获取本地设置\n    this.getLocalSetting();\n    //获取单位\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`) || {}\n    console.log('----', hardSet);\n    let { isHua, } = hardSet\n    if (isHua === false) {\n      this.setState({\n        units: '℃'\n      })\n    } else {\n      this.setState({\n        units: '℉'\n      })\n    }\n\n\n  }\n  componentWillUnmount() {\n    //组件销毁，取消监听\n    window.removeEventListener(\"resize\", this.resize);\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n    ipcRenderer.removeListener(\"sned\", this._send);\n    ipcRenderer.removeListener(\"noUSB\", this._noUSB);\n    this.detectTimer && clearInterval(this.detectTimer);\n    this.rulerTimer && clearTimeout(this.rulerTimer);\n    message.destroy();\n  }\n  //检测到props里的hardwareList更新\n  UNSAFE_componentWillReceiveProps(prevProps) {\n    //对比props里的hardwareList和state里的hardwareList是否相同\n\n    if (!compareArray(prevProps.hardwareList, this.state.devicesTypeList)) {\n      let showHardWareTypeList = [].concat(prevProps.hardwareList);\n      showHardWareTypeList.push({\n        type: \"add\",\n        devices: [],\n      });\n      this.setState({\n        devicesTypeList: prevProps.hardwareList,\n        showHardWareTypeList,\n      });\n    }\n    if (!compareObject(prevProps.menuNum, this.state.clickMenuIndex)) {\n      this.setState({\n        clickMenuIndex: prevProps.menuNum,\n      });\n    }\n  }\n\n  changeFenBianLv = (e) => {\n    let ipcRenderer = window.electron.ipcRenderer;\n    // ipcRenderer.send('small')\n    ipcRenderer.send(\"big\", win());\n    // this.setState({}, () => {\n    //   if (this.props.test) {\n    //     if (this.props.test.current) {\n    //       this.props.test.current.getEchartsInstance().dispose();\n    //       this.props.test.current.getEchartsInstance().clear();\n    //       setTimeout(() => {\n    //         this.props.test.current.getEchartsInstance().resize();\n    //       }, 500);\n    //     }\n    //   }\n    // });\n\n  };\n  //获取本地设置\n  getLocalSetting = () => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (!hardSet) {\n      let settings = {\n        isHua: true,\n        is15: true,\n        self_tarting: false, //自启动\n        isBacklight: true,\n        isBeep: true,\n        backlightTimer: { length: 140, number: \"45\" },\n        autoOff: { length: 0, number: \"30\" },\n      };\n      electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\n    }\n  };\n  //检测USB设备发来的信息\n  _send = (e, data) => {\n    // console.log('检测USB设备发来的信息', data)\n    //data就是测量的数据，是十进制的数字\n    this.command(data)();\n  };\n  //监听是否有USB设备,true代表没有USB设备，false代表有USB设备\n  _noUSB = (e, data) => {\n    if (data === false) {\n      message.destroy();\n    } else {\n      if (this.state.isHaveUsbDevice) {\n        message.destroy();\n        message.error(\"The base is not detected. Please insert the base\", 0);\n      }\n    }\n    if (data === this.props.isHaveUsbDevice) {\n      this.props.setIsHaveUsbDeviceFun(!data);\n    }\n    if (data === this.state.isHaveUsbDevice) {\n      this.setState({\n        isHaveUsbDevice: !data,\n      });\n    }\n  };\n  //监听mella温度计是否与底座连接或断开\n  _whether_to_connect_to_mella = () => {\n    console.log(\"监听mella温度计是否与底座连接或断开\");\n    message.destroy();\n    this.detectTimer && clearInterval(this.detectTimer);\n    //2秒检测一次\n    this.detectTimer = setInterval(() => {\n      exchangeNum++;\n      //如果正在测量或者没有USB设备，不检测\n      if (isMeasure || !this.state.isHaveUsbDevice) {\n        return;\n      }\n      if (exchangeNum % 2 === 0) {\n        //让底座发送查询温度计信息指令\n        ipcRenderer.send(\"usbdata\", { command: \"07\", arr: [\"5A\"] });\n      } else {\n        ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n      }\n\n      //如果底座没有回应，则计算时间差,时间差大于5秒，则没与温度计连接\n      if (new Date() - initTime > 6000) {\n        this._disconnect_to_mella();\n      } else {\n      }\n    }, 2000);\n  };\n  //底座与温度计断开连接\n  _disconnect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus, setMellaDeviceIdFun } =\n      this.props;\n    if (mellaConnectStatus !== \"disconnected\") {\n      setMellaConnectStatusFun(\"disconnected\");\n    }\n    setMellaDeviceIdFun(\"\");\n  };\n  //底座与温度计连接\n  _connect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus } = this.props;\n    if (mellaConnectStatus !== \"connected\") {\n      setMellaConnectStatusFun(\"connected\");\n    }\n  };\n\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  command = (newArr) => {\n    let dataArr1 = newArr.map((item) => {\n      if (item.toString(16).length < 2) {\n        return \"0\" + item.toString(16);\n      } else {\n        return item.toString(16);\n      }\n    });\n    //除了255,其他都是温度计的数据\n    let {\n      setMellaConnectStatusFun,\n      setMellaMeasureValueFun,\n      setMellaPredictValueFun,\n      setMellaMeasurePartFun,\n      mellaMeasurePart,\n      mellaConnectStatus,\n      setBiggieBodyFatFun,\n      setBiggieBodyWeightFun,\n      setBiggieConnectStatusFun,\n      setBiggieUnitFun,\n      setBiggieSameWeightCountFun,\n    } = this.props;\n    let {\n      biggieConnectStatus,\n      biggieBodyFat,\n      biggieBodyWeight,\n      biggieUnit,\n      biggieSameWeightCount,\n    } = this.props.hardwareReduce;\n\n    const instruction = [\n      209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 194, 7, 99, 255, 182,\n    ];\n\n    if (newArr[2] !== 7 && newArr[2] !== 255 && newArr[2] !== 182) {\n      initTime = new Date();\n      num07 = 0;\n      if (mellaConnectStatus === \"disconnected\") {\n        this._connect_to_mella();\n      }\n    } else {\n      num07++;\n    }\n\n    const commandArr = {\n      209: () => {\n        //腋温\n        //第一次测量去获取探头ID\n        if (firstEar) {\n          firstEar = false;\n          console.log(\"去获取探头id\");\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        let temp1 = parseFloat(`${dataArr1[3]}.${dataArr1[4]}`);\n        let temp0 = parseFloat(`${dataArr1[5]}.${dataArr1[6]}`);\n        let Temp = temp0;\n        if (\n          Temp === 24.7 ||\n          Temp === 0 ||\n          Temp === null ||\n          Temp === undefined\n        ) {\n          return;\n        }\n\n        let dataS = {\n          sample: clinicalIndex++,\n          data0: temp0,\n          data1: temp1,\n        };\n        clinicalYuce.push(dataS);\n        if (clinicalYuce.length >= 30) {\n          setMellaPredictValueFun(clinicalYuce);\n        }\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n\n        if (mellaMeasurePart !== \"腋温\" || mellaMeasurePart !== \"肛温\") {\n          setMellaMeasurePartFun(\"腋温\");\n        }\n        this.props.setMellaMeasureNumFun(this.props.mellaMeasureNum + 1);\n      },\n      208: () => {\n        //耳温\n\n        if (firstEar) {\n          firstEar = false;\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        //现在探头0可能不存在，所以把探头0改为探头1\n        let temp0 = parseFloat(`${dataArr1[7]}.${dataArr1[8]}`);\n        let Temp = temp0;\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n\n        if (mellaMeasurePart !== \"耳温\") {\n          setMellaMeasurePartFun(\"耳温\");\n        }\n      },\n      193: () => {\n        //指令结束\\自动结束后\\温度计收到预测数据后温度计返回值,结束后可能还会粘一组测量中的数据\n        //为了清除黏贴的数据，使用定时器\n        this.time193 && clearTimeout(this.time193);\n        this.time193 = setTimeout(() => {\n          if (new Date() - time194 < 1000) {\n            this.time193 && clearTimeout(this.time193);\n            return;\n          }\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaMeasureValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            console.log('要去写了', units, temp);\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          this.time193 && clearTimeout(this.time193);\n        }, 500);\n      },\n      194: () => {\n        //硬件收到机器学习结果并停止测量，\n        this.time193 && clearTimeout(this.time193);\n        time194 = new Date()\n        console.log(\"---机器学习\", newArr);\n        if (mellaConnectStatus !== \"complete\") {\n          setMellaConnectStatusFun(\"complete\");\n        }\n        const timer = setTimeout(() => {\n          setMellaMeasureValueFun(this.props.mellaPredictReturnValue);\n\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaPredictReturnValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          clearTimeout(timer);\n        }, 80);\n        clinicalYuce = [];\n        clinicalIndex = 0;\n      },\n      192: () => {\n        //温度计收到40开始数据后返回的指令\n        switch (newArr[3]) {\n          case 90:\n            console.log(\"有探头，开始测量的返回指令·\");\n            break;\n          case 11:\n            console.log(\"没有探头，开始测量的返回值\");\n            break;\n        }\n      },\n      129: () => {\n        //返回硬件版本号\n        console.log(`返回的版本号为${newArr[3]}`);\n      },\n      135: () => {\n        //硬件的一些基本信息\n        /**\n         * ______________新版、旧版没法控制温度计__________________\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\n         * newArr[7] 无操作关机时间\n         * newArr[8] 背光时间\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\n         * newArr[10] 测量单位    01代表℃，00代表℉\n         */\n\n        let hardSet = electronStore.get(\n          `${storage.userId}-hardwareConfiguration`\n        );\n        if (!hardSet) {\n          hardSet = {\n            isHua: true,\n            is15: true,\n            self_tarting: false, //自启动\n            isBacklight: true,\n            isBeep: true,\n            backlightTimer: { length: 140, number: \"45\" },\n            autoOff: { length: 0, number: \"30\" },\n          };\n        }\n\n        let beep = hardSet.isBeep ? \"11\" : \"00\";\n        let unit = hardSet.isHua ? \"00\" : \"01\";\n\n        if (\n          dataArr1[7] === hardSet.autoOff.number &&\n          dataArr1[8] === hardSet.backlightTimer.number &&\n          dataArr1[9] === beep &&\n          dataArr1[10] === unit\n        ) {\n        } else {\n          console.log(\"不相同，去发送命令\");\n          let setArr = [\n            \"03\",\n            \"ed\",\n            \"07\",\n            \"dd\",\n            hardSet.autoOff.number,\n            hardSet.isBacklight ? hardSet.backlightTimer.number : \"00\",\n            hardSet.isBeep ? \"11\" : \"00\",\n            hardSet.isHua ? \"00\" : \"01\",\n          ];\n          ipcRenderer.send(\"usbdata\", { command: \"21\", arr: setArr });\n        }\n      },\n      238: () => {\n        //探头松动\n        console.log(\"探头松动\");\n        message.error(\n          \"The probe is loose, please re-install and measure again\",\n          5\n        );\n      },\n\n      98: () => {\n        //蓝牙连接断开\n        console.log(\n          \"断开连接---断开连接---断开连接---断开连接---断开连接---断开连接\"\n        );\n        firstEar = true;\n        // console.log(new Date() - is97Time);\n        if (new Date() - is97Time < 1300) {\n          return;\n        }\n        this._disconnect_to_mella();\n      },\n      97: () => {\n        //蓝牙连接\n        console.log(\n          \"连接成功---连接成功---连接成功---连接成功---连接成功---连接成功\"\n        );\n        this.getIdTimer && clearTimeout(this.getIdTimer);\n        this.getIdTimer = setTimeout(() => {\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n          this.getIdTimer && clearTimeout(this.getIdTimer);\n        }, 50);\n\n\n        is97Time = new Date();\n        this._connect_to_mella();\n      },\n      177: () => {\n        //探头id\n        let dataArr1 = newArr.map((item) => {\n          if (item.toString(16).length < 2) {\n            return \"0\" + item.toString(16);\n          } else {\n            return item.toString(16);\n          }\n        });\n\n        let id = \"\";\n        for (let i = 3; i < dataArr1.length - 2; i++) {\n          id += dataArr1[i];\n        }\n        // console.log(id, dataArr1[7]);\n        setMellaDeviceIdFun(id);\n        // this.setState({\n        //   probeID: id,\n        //   petVitalTypeId: dataArr1[7]\n        // })\n        if (dataArr1[7] === \"01\") {\n          if (mellaMeasurePart !== \"腋温\") {\n            setMellaMeasurePartFun(\"腋温\");\n          }\n        } else if (dataArr1[7] === \"02\") {\n          if (mellaMeasurePart !== \"肛温\") {\n            setMellaMeasurePartFun(\"肛温\");\n          }\n        } else if (dataArr1[7] === \"03\") {\n          if (mellaMeasurePart !== \"耳温\") {\n            setMellaMeasurePartFun(\"耳温\");\n          }\n        }\n      },\n      7: () => {\n        //发什么收什么，需要去重新插拔底座\n        console.log(\"重新插拔底座\");\n        if (num07 === 3 && this.state.err07Visible === false) {\n          this.setState({\n            err07Visible: true,\n          });\n        }\n      },\n      255: () => {\n        let length = newArr.length;\n        let frameLength = newArr[1]; //帧长\n        let itemLength = newArr[3] + 1; //数据位的长度   13\n        let dataIndex = 0;\n        let bluName = \"\";\n        let bluData = [];\n\n        while (itemLength < length && itemLength + 3 <= frameLength) {\n          let itemData = [];\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5]);\n          }\n          // console.log('--剪切的数据---', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              let str = \"\";\n              for (let i = 0; i < itemData.length; i++) {\n                let item = parseInt(itemData[i], 16);\n                str += String.fromCharCode(item);\n              }\n              bluName = str;\n              // console.log('--蓝牙名称:', bluName);\n\n              break;\n\n            case 255:\n              bluData = itemData;\n              break;\n            case 7:\n              console.log(\"---UUID\");\n              break;\n            case 239:\n              // console.log('---mac地址');\n              break;\n\n            case 3:\n              // console.log('----尺子的,不知道什么用');\n              break;\n\n            default:\n              console.log(\"直接跳出循环\");\n              return;\n          }\n          dataIndex = itemLength;\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\n        }\n        // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n        let { setReceiveBroadcastHardwareInfoFun, hardwareReduce } = this.props;\n\n        let { receiveBroadcastHardwareInfo } = hardwareReduce;\n\n        if (bluName.indexOf(\"C19\") !== -1 && bluData.length > 10) {\n          let json = {\n            deviceType: \"biggie\",\n            macId: \"00:00:00:00:00:00\",\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          let weight = `0x${bluData[10]}${bluData[11]}`;\n          let impedance = `0x${bluData[12]}${bluData[13]}`;\n          let sendWeight = null;\n          //C19发送的体重值单位只是KG\n          try {\n            weight = parseInt(weight) / 100;\n            if (impedance) {\n              impedance = parseInt(impedance);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n          if (weight === biggieBodyWeight) {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          } else {\n            setBiggieSameWeightCountFun(0);\n            setBiggieBodyWeightFun(weight);\n          }\n          if (impedance) {\n            setBiggieBodyFatFun(impedance);\n          }\n          if (biggieConnectStatus !== \"isMeasuring\") {\n            setBiggieConnectStatusFun(\"isMeasuring\");\n          }\n          if (biggieUnit !== \"kg\") {\n            setBiggieUnitFun(\"kg\");\n          }\n        } else if (bluName.indexOf(\"Mella Measure\") !== -1) {\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          // console.log('结束循环蓝牙名称', bluData)\n          let confirmBtn = bluData[8]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[11], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[9];\n          let num2 = bluData[10];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n        } else if (bluName.indexOf(\"Biggie\") !== -1 && bluData.length > 13) {\n          // console.log(\"biggie\", bluData);\n          if (bluData[0] !== \"aa\") {\n            return;\n          }\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n\n          let newArr = bluData;\n\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n\n          let json = {\n            deviceType: \"biggie\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n          //定义体重的控制字符\n          let weightControl = newArr[8];\n          //定义体重的值\n          let weight = `${getVal(newArr[9].toString(16))}${getVal(\n            newArr[10].toString(16)\n          )}`;\n          weight = parseInt(weight, 16);\n          //定义体脂值\n          let impedance = `${getVal(newArr[12].toString(16))}${getVal(\n            newArr[13].toString(16)\n          )}`;\n          impedance = parseInt(impedance, 16);\n          let arr11 = getVal(newArr[11].toString(16));\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n\n          let weightUnits = arr11[1] === \"1\" ? \"lb\" : \"kg\";\n          let biggieStatus = \"isMeasuring\";\n          switch (weightControl) {\n            case 1:\n              biggieStatus = \"connected\";\n              break;\n            case 2:\n              biggieStatus = \"isMeasuring\";\n              break;\n            case 3:\n              biggieStatus = \"complete\";\n              break;\n            default:\n              break;\n          }\n          if (biggieStatus !== biggieConnectStatus) {\n            setBiggieConnectStatusFun(biggieStatus);\n          }\n          if (weightUnits !== biggieUnit) {\n            setBiggieUnitFun(weightUnits);\n          }\n          if (weight !== biggieBodyWeight) {\n            setBiggieBodyWeightFun(weight);\n            setBiggieSameWeightCountFun(0);\n          } else {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          }\n          if (impedance !== biggieBodyFat) {\n            setBiggieBodyFatFun(impedance);\n          }\n        } else if (bluName.indexOf(\"MaeBowl\") !== -1 && bluData.length > 10) {\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          //定义硬件版本号\n          let hardwareVersion = bluData[7] + bluData[8];\n          //定义软件版本号\n          let softwareVersion = bluData[9];\n          //定义wifi标志位\n          let wifiFlag = bluData[10];\n          //定义控制字\n          let control = bluData[11];\n          //定义重量\n          let weight = `${getVal(bluData[12].toString(16))}${getVal(\n            bluData[13].toString(16)\n          )}`\n          weight = parseInt(weight, 16);\n          let arr11 = bluData[14]\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n          let weightUnits = null\n          switch (arr11[1]) {\n            case '0':\n              weightUnits = 'kg'\n\n              break;\n            case '1':\n              weightUnits = 'lb'\n\n              break;\n            case '2':\n              weightUnits = 'g'\n\n              break;\n            case '3':\n              weightUnits = 'ml'\n\n              break;\n            case '4':\n              weightUnits = 'oz'\n\n              break;\n\n            default:\n              break;\n          }\n          console.log({\n            // mac,\n            // hardwareVersion,\n            // softwareVersion,\n            wifiFlag,\n            control,\n            weight,\n            weightUnits,\n          });\n\n\n        } else if (bluName.indexOf(\"Tabby\") !== -1 && bluData.length > 10) {\n          // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          let confirmBtn = bluData[10]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[13], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[11];\n          let num2 = bluData[12];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n\n\n\n\n        }\n      },\n      182: () => {\n        console.log(\"打开了底座通信\");\n      },\n    };\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]];\n    } else {\n      return () => {\n        console.log(\"没有控制命令\", commandArr);\n      };\n    }\n  };\n\n  testCheck = (arr) => {\n    if (arr.length < 7) {\n      return false;\n    }\n    let i = 7;\n    let checkFloag = arr[i];\n\n    for (i = 8; i < arr.length - 2; i++) {\n      checkFloag = checkFloag ^ arr[i];\n    }\n    return checkFloag;\n  };\n  getMac = (arr) => {\n    // console.log(arr);\n    let str = arr[1].toString(16);\n    if (str.length === 1) {\n      str = \"0\" + str;\n    }\n    for (let i = 2; i < 7; i++) {\n      let item = arr[i].toString(16);\n      if (item.length === 1) {\n        item = \"0\" + item;\n      }\n      str += `:${item}`;\n      // }\n    }\n\n    return str;\n  };\n\n  //监听屏幕窗口改变\n  resize = () => {\n    let { offsetWidth, offsetHeight } = this.mainbody;\n    // console.log('resize', this.mainbody, { offsetWidth, offsetHeight });\n    if (offsetHeight !== this.state.bodyHeight) {\n      this.setState({\n        bodyHeight: offsetHeight - px(50),\n      });\n    }\n  };\n  //获取设备类型(渲染左侧硬件种类侧边栏)\n  getDevicesType = () => {\n    // let devicesTypeList = [\n    //   {\n    //     type: 'mellaPro',\n    //     devices: [\n    //       {\n    //         name: 'mellaPro',\n    //         mac: '',\n    //         deviceType: 'mellaPro',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'biggie',\n    //     devices: [\n    //       {\n    //         name: 'biggie',\n    //         mac: '',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       },\n    //       {\n    //         name: 'biggie002',\n    //         mac: '1253',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'otterEQ',\n    //     devices: [\n    //       {\n    //         name: 'otterEQ',\n    //         mac: '',\n    //         deviceType: 'otterEQ',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n\n    //   {\n    //     type: 'rfid',\n    //     devices: [\n    //       {\n    //         name: 'rfid',\n    //         mac: '',\n    //         deviceType: 'rfid',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'tape',\n    //     devices: [\n    //       {\n    //         name: 'tape',\n    //         mac: '',\n    //         deviceType: 'tape',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'maeBowl',\n    //     devices: [\n    //       {\n    //         name: 'maeBowl',\n    //         mac: '',\n    //         deviceType: 'maeBowl',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   }\n    // ]\n\n    let devicesTypeList =\n      electronStore.get(\n        `${storage.lastOrganization}-${storage.userId}-devicesTypeList`\n      ) || [];\n    // console.log(\"获取的设22222备列表\", devicesTypeList);\n    if (devicesTypeList.length === 0) {\n      devicesTypeList.push({\n        type: \"mellaPro\",\n        devices: [\n          {\n            name: \"mellaPro\",\n            mac: \"\",\n            deviceType: \"mellaPro\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"biggie\",\n        devices: [\n          {\n            name: \"biggie\",\n            mac: \"\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n          {\n            name: \"biggie002\",\n            mac: \"1253\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"tape\",\n        devices: [\n          {\n            name: \"tape\",\n            mac: \"45264\",\n            deviceType: \"tape\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"otterEQ\",\n        devices: [\n          {\n            name: \"otterEQ\",\n            mac: \"375082\",\n            deviceType: \"otterEQ\",\n            examRoom: \"\",\n          },\n        ],\n      });\n    }\n\n    let hardList = [].concat(devicesTypeList);\n    this.props.setHardwareList(hardList);\n    let showHardWareTypeList = [].concat(devicesTypeList);\n    showHardWareTypeList.push({\n      type: \"add\",\n      devices: [],\n    });\n\n    this.setState({\n      devicesTypeList,\n      showHardWareTypeList,\n    });\n  };\n  body = () => {\n    let { selectHardwareType } = this.props;\n\n    let { bodyHeight, clickMenuIndex } = this.state;\n    let measurePage = null;\n    switch (clickMenuIndex) {\n      case \"1\":\n        if (electronStore.get(`${storage.userId}-isClical`)) {\n          return (\n            <>\n              <HardAndPetsUI bodyHeight={bodyHeight} />\n              <ClininalStudy bodyHeight={bodyHeight} />\n            </>\n          );\n        } else {\n          switch (selectHardwareType) {\n            case \"mellaPro\":\n              measurePage = <TemperaturePage bodyHeight={bodyHeight} />;\n\n              break;\n            case \"biggie\":\n              measurePage = <BiggiePage bodyHeight={bodyHeight} />;\n              break;\n\n            case \"tape\":\n              measurePage = <ScanPage bodyHeight={bodyHeight} />;\n              break;\n            case \"otterEQ\":\n              measurePage = <OtterEQPage bodyHeight={bodyHeight} />;\n              break;\n\n            default:\n              break;\n          }\n          if (selectHardwareType === \"add\") {\n            return <AddDevice bodyHeight={bodyHeight} />;\n          } else {\n            return (\n              <>\n                <HardAndPetsUI bodyHeight={bodyHeight} />\n                {measurePage}\n              </>\n            );\n          }\n        }\n      case \"2\":\n        return <AllPets bodyHeight={bodyHeight} />;\n      case \"CombineScales\":\n        return <CombineScales bodyHeight={bodyHeight} />;\n      case \"AddDevice\":\n        return <AddDevice bodyHeight={bodyHeight} />;\n      case \"3\":\n        return <ScheduledPetPage bodyHeight={bodyHeight} />;\n\n      case \"AddScheduledPet\":\n        return <AddScheduledPet bodyHeight={bodyHeight} />;\n      case \"6\":\n        return (\n          <>\n            <HardAndPetsUI bodyHeight={bodyHeight} />\n            <ClininalStudy bodyHeight={bodyHeight} />\n          </>\n        );\n\n      case \"4\":\n        return (\n          <MyAccount bodyHeight={bodyHeight} />\n        );\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    let { bodyHeight } = this.state;\n\n    return (\n      <div\n        className=\"flex\"\n        id=\"mainbody\"\n        ref={(val) => (this.mainbody = val)}\n        onClick={() => {\n          if (this.props.selectHardwareModalShowFun) {\n            this.props.selectHardwareModalShowFun(false);\n          }\n        }}\n      >\n        <Heard />\n        <div className=\"mainbody-body\">\n          <HardWareTypeUI\n            bodyHeight={bodyHeight}\n            devicesTypeList={this.state.showHardWareTypeList}\n          />\n          {this.body()}\n        </div>\n        <Modal\n          visible={this.state.err07Visible}\n          // visible={true}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          width={330}\n          closable={false}\n          footer={[]}\n          destroyOnClose={true}\n          wrapClassName=\"vetPrifileModal\"\n        >\n          <div id=\"vetPrifileModal\">\n            <div className=\"title\">prompt</div>\n\n            <div className=\"text\">Please re-plug the base device</div>\n\n            <div\n              className=\"btn\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginBottom: \"5px\",\n              }}\n            >\n              <button\n                onClick={() => {\n                  this.setState({\n                    err07Visible: false,\n                  });\n                  num07 = 0;\n                }}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\n    mellaMeasurePart: state.hardwareReduce.mellaMeasurePart,\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    hardwareReduce: state.hardwareReduce,\n    hardwareList: state.hardwareReduce.hardwareList,\n    hardwareInfo: state.hardwareReduce.selectHardwareInfo,\n    menuNum: state.userReduce.menuNum,\n    mellaPredictReturnValue: state.hardwareReduce.mellaPredictReturnValue,\n    test: state.userReduce.test\n  }),\n  {\n    setHardwareList,\n    selectHardwareModalShowFun,\n    setIsHaveUsbDeviceFun,\n\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n    setMellaDeviceIdFun,\n    setBiggieConnectStatusFun,\n    setBiggieBodyFatFun,\n    setBiggieBodyWeightFun,\n    setBiggieUnitFun,\n    setBiggieSameWeightCountFun,\n    setRulerConnectStatusFun,\n    setRulerMeasureValueFun,\n    setRulerUnitFun,\n    setRulerConfirmCountFun,\n    setReceiveBroadcastHardwareInfoFun,\n    setMellaMeasureNumFun,\n  }\n)(App);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorSelectScheduledExam/index.jsx",["613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/AddDevice.jsx",["632","633"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/resetPassword/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/config/config.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/user.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/pet.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/api.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorSelectAllExam/index.jsx",["634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scheduledPetsPage/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/home/index.jsx",["653"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/workPlace/index.jsx",["654","655","656"],"\nimport React, { Component, } from 'react'\nimport {\n  Select,\n  Button,\n} from 'antd';\n\nimport logo from '../../assets/images/mellaLogo.png';\n\nimport { px, win } from '../../utils/px';\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\nimport MyModal from '../../utils/myModal/MyModal';\n\nimport './index.less';\nimport { changeLatestWorkplace } from '../../api';\n\nconst { Option } = Select;\nlet storage = window.localStorage;\nexport default class WorkPlace extends Component {\n  state = {\n    organization: '',\n    workplaceList: [],\n    spin: false,\n    orgArr: [],\n    workplaceJson: {},\n    workplaceId: '',\n    workplaceName: '',\n    organizationId: '',\n    organizationName: '',\n    connectionKey: '',\n    selectRoleId: ''\n\n  }\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('Lowbig', win())\n\n    let userWorkplace = []\n    try {\n      userWorkplace = JSON.parse(storage.userWorkplace) || []\n      console.log(userWorkplace);\n    } catch (error) {\n      console.log('字符串转对象失败', error);\n    }\n    /*orgArr的格式为[{\n      organizationId:1,\n      organizationName:'11111',\n      connectionKey:''\n    }]\n\n     workplace:{\n       1:{\n          workplaceId:1,\n          workplaceName:'122334\n        },\n     }\n    */\n    let orgArr = [], workplaceJson = {}\n    console.log('存储的工作场所和组织id', storage.lastWorkplaceId, storage.lastOrganization);\n    for (let i = 0; i < userWorkplace.length; i++) {\n      let element = userWorkplace[i]\n      // console.log('每一项的值：', element);\n      if (element.organizationEntity && element.workplaceEntity) {\n        let { organizationEntity, workplaceEntity, roleId } = element\n        const { name, organizationId, connectionKey } = organizationEntity\n        const { workplaceName, workplaceId } = workplaceEntity\n\n        if (`${workplaceId}` === storage.lastWorkplaceId) {\n          this.setState({\n            workplaceName,\n            workplaceId: storage.lastWorkplaceId\n          })\n        }\n\n        if (`${organizationId}` === storage.lastOrganization) {\n          this.setState({\n            organizationName: name,\n            organizationId: storage.lastOrganization\n          })\n        }\n\n        let orgRepeatFlog = false, repeatFlogNum = -1\n        for (let j = 0; j < orgArr.length; j++) {\n          console.log(orgArr[j].organizationId, organizationId);\n          if (orgArr[j].organizationId === organizationId) {\n            orgRepeatFlog = true\n            repeatFlogNum = j\n            break;\n          }\n\n        }\n        if (orgRepeatFlog) {\n          let workplace = {\n            workplaceName, workplaceId\n          }\n          let id = orgArr[repeatFlogNum].organizationId\n          let sameflog = false\n          console.log(workplaceJson[`${id}`], workplace);\n          for (let k = 0; k < workplaceJson[`${id}`].length; k++) {\n            const element = workplaceJson[`${id}`][k];\n            if (element.workplaceId === workplace.workplaceId && element.workplaceName === workplace.workplaceName) {\n              sameflog = true\n              break\n            }\n\n          }\n          if (!sameflog) {\n            workplaceJson[`${id}`].push(workplace)\n          }\n\n        } else {\n          let connectKey = connectionKey || ''\n          let json = {\n            organizationId,\n            organizationName: name,\n            connectionKey: connectKey,\n            roleId\n          }\n          let workplace = [{\n            workplaceName, workplaceId\n          }]\n          workplaceJson[`${organizationId}`] = workplace\n\n          orgArr.push(json)\n        }\n      }\n    }\n    console.log('-----转换后的组织信息--', orgArr, workplaceJson);\n    this.setState({\n      orgArr,\n      workplaceJson,\n      connectionKey: storage.connectionKey,\n      selectRoleId: storage.roleId\n    })\n    //分辨率改变后窗口自动改变\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n  }\n\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('Lowbig', win())\n    this.setState({\n\n    })\n  }\n  _select = (value, e) => {\n    console.log(value, e);  //value的值为id\n\n  }\n\n  _next = () => {\n    // this.props.history.push('/page8')\n\n    let { workplaceId, organizationId, connectionKey, selectRoleId } = this.state\n    console.log({ workplaceId, organizationId, connectionKey, selectRoleId });\n\n\n    this.setState({\n      spin: true\n    })\n    console.log('入参', { userId: storage.userId, roleId: storage.roleId, workplaceId });\n\n    changeLatestWorkplace(storage.userId, workplaceId)\n      .then(res => {\n        console.log('切换成功', res);\n        storage.lastWorkplaceId = `${workplaceId}`\n        storage.lastOrganization = organizationId\n        storage.connectionKey = connectionKey\n\n        if (selectRoleId) {\n          storage.roleId = selectRoleId\n        }\n\n        this.props.history.push('/uesr/selectExam')\n\n      })\n      .catch(err => {\n        console.log(err);\n        storage.lastWorkplaceId = workplaceId\n        storage.lastOrganization = organizationId\n        storage.connectionKey = connectionKey\n\n        this.props.history.push('/uesr/selectExam')\n\n      })\n  }\n  render() {\n\n    let { orgArr, organizationName, workplaceName, workplaceJson, organizationId } = this.state\n    let orgOptions = orgArr.map(item => <Option key={item.organizationId} connectionkey={item.connectionKey} roleid={item.roleId} >{item.organizationName}</Option>)\n    let workplaceArr = []\n    if (workplaceJson[`${organizationId}`]) {\n      workplaceArr = workplaceJson[`${organizationId}`]\n      console.log('workArr = ', workplaceArr);\n    }\n    let workplaceOptions = workplaceArr.map(item => <Option key={item.workplaceId}>{item.workplaceName}</Option>)\n    return (\n      <div id=\"workplace\">\n        {/* 关闭缩小 */}\n        <div className=\"header\">\n          <MaxMin\n            onClick={() => { this.props.history.push('/') }}\n            onClick1={() => this.props.history.goBack()}\n          />\n        </div>\n        <div className=\"body flex\">\n          <div className=\"img flex\">\n            <img src={logo} alt=\"\" style={{ width: px(130) }} />\n          </div>\n\n          <div className=\"title\">\n            <div className=\"text\" style={{ fontSize: px(28), marginBottom: px(40) }}>Verify Organization Information</div>\n            <div className=\"text2\" style={{ fontSize: px(24), textAlign: 'center' }}>Good Pets</div>\n          </div>\n\n\n          <div className=\"selectAll\" style={{ marginBottom: px(160) }}>\n\n            <div className=\"select\" >\n              <p style={{ fontSize: px(18) }}>Select Organization:</p>\n              <Select style={{ width: '40%' }}\n                value={organizationName}\n                onChange={(val, e) => {\n                  console.log(val, e)\n                  let workplace = workplaceJson[e.key]\n                  console.log(workplace);\n                  this.setState({\n                    organizationId: e.key,\n                    organizationName: e.children,\n                    connectionKey: e.connectionkey,\n                    workplaceId: workplace[0].workplaceId,\n                    workplaceName: workplace[0].workplaceName,\n                    selectRoleId: e.roleid\n                  })\n                }}>\n                {/* <Option value=\"1\">UGA Veterinary Teaching Hospital</Option> */}\n                {orgOptions}\n              </Select>\n            </div>\n\n            <div className=\"select\" >\n              <p style={{ fontSize: px(18) }}>Select Location:</p>\n              <Select style={{ width: '40%' }}\n                value={workplaceName}\n                onChange={(val, e) => {\n                  console.log(val, e)\n                  this.setState({\n                    workplaceId: e.key,\n                    workplaceName: e.children\n                  })\n                }}>\n                {workplaceOptions}\n              </Select>\n            </div>\n\n\n          </div>\n\n        </div>\n\n        <div className=\"foot flex\">\n          <div className=\"btn\">\n            <Button\n              type=\"primary\"\n              shape=\"round\"\n              size='large'\n              onClick={this._next}\n            >\n              Verify\n            </Button>\n          </div>\n\n\n        </div>\n\n\n\n\n\n        <MyModal\n          visible={this.state.spin}\n        />\n\n\n      </div>\n\n    )\n  }\n}\n\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/user.js",["657","658"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/admin_VetProfile/index.jsx",["659","660","661","662","663","664","665","666"],"\nimport React, { Component } from 'react'\nimport {\n  Select,\n  message\n} from 'antd'\n\nimport parent from '../../assets/img/parent.png'\nimport selectphoto from '../../assets/images/sel.png'\nimport close from '../../assets/img/close.png'\nimport dui from '../../assets/images/dui.png'\n\nimport Heart from '../../utils/heard/Heard'\nimport { mTop, px } from '../../utils/px';\nimport MyModal from '../../utils/myModal/MyModal'\nimport Avatar from '../../components/avatar/Avatar'\nimport moment from 'moment'\nimport './index.less';\nimport { listDoctorsByAdmin } from '../../api/mellaserver/organization'\nimport { admin_users } from '../../api/mellaserver/new'\n\nconst { Option } = Select;\nlet storage = window.localStorage;\n\nexport default class Veterinarians extends Component {\n\n  state = {\n    parentList: [],\n    petList: [],\n    loading: false,\n    parentSearchArr: [],\n    petSearchArr: [],\n    searchText: '',\n    clickVet: false,\n    userList: [],\n    clickUserItem: {},\n    isAdmin: false,\n    imageId: null,\n    imgUrl: '',\n    doctorArr: [],\n    dockerSearchArr: []\n  }\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    ipcRenderer.send('Lowbig')\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n    this._getExam()\n\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    ipcRenderer.send('Lowbig')\n    this.setState({\n\n    })\n  }\n\n  _getExam = async () => {\n    console.log('进来了');\n    this.setState({\n      loading: true,\n      spin: false\n    })\n    let params = {\n      doctorId: storage.userId,\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n\n    console.log('查询宠物的入参', params);\n\n\n    listDoctorsByAdmin(storage.lastOrganization, params)\n      .then(res => {\n        console.log('人员列表', res);\n        this.setState({\n          loading: false\n        })\n        if (res.flag === true && res.code === 20000) {\n          let data = []\n          for (let i = 0; i < res.data.length; i++) {\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\n\n            let json = {\n              insertedAt: createTime,\n              name: `${lastName} ${firstName}`,\n              userId,\n              email,\n              birthday,\n              isLimit,\n              isDeleted,\n              phone,\n              url,\n              firstName, lastName, roleId\n            }\n            data.push(json)\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          this.setState({\n            doctorArr: data,\n            // parentList: data //这里只是测试，后期删除\n\n          })\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        })\n      })\n\n\n\n  }\n\n\n\n  list = () => {\n    let { doctorArr, dockerSearchArr, searchText } = this.state\n    let data = searchText.length > 0 ? dockerSearchArr : doctorArr\n\n\n\n\n    let options = data.map((item, index) => {\n      let { url, firstName, lastName } = item\n      let images = `url(${url}?download=0&width=150)`\n      if (!url) {\n        images = `url(${parent})`\n      }\n\n\n      return (\n        <li\n          key={`${index}`}\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20), float: `${index % 2 === 0 ? 'left' : 'right'}` }}\n          onClick={() => {\n            console.log(item);\n            let { name, email, phone, roleId } = item\n            let isAdmin = roleId === '3' ? true : false\n\n            this.setState({\n              clickVet: true,\n              clickUserItem: item,\n              name,\n              email,\n              phone,\n              isAdmin,\n              imgUrl: ''\n            })\n\n          }}\n        >\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\n            <div\n              className='img'\n              style={{\n                width: px(50),\n                height: px(50),\n                marginRight: px(20),\n                borderRadius: px(60),\n                backgroundImage: images,\n              }}>\n\n              <div\n                className=\"green\"\n                style={{\n                  width: px(8),\n                  height: px(8),\n                  borderRadius: px(8),\n                  backgroundColor: '#7ED266',\n                  right: px(-5),\n                  top: px(-3)\n\n                }}\n\n              />\n\n            </div>\n\n            <div className='petInfo' >\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\n            </div>\n          </div>\n        </li >\n      )\n\n    })\n\n    let liStyle = { backgroundColor: '#fff', }\n    if (this.state.petList.length > 16) {\n      liStyle = { height: px(750), overflowY: 'auto', }\n    }\n\n\n    return (\n      <div className='petList'>\n        <ul style={liStyle}>\n          {options}\n        </ul>\n      </div>\n    )\n\n  }\n  inputChange = (text) => {\n    let search = text.target.value\n    this.setState({\n      searchText: search\n    })\n\n    let { doctorArr } = this.state\n\n    let keyWord = search\n\n    let parentSearchData = []\n\n    for (let i = 0; i < doctorArr.length; i++) {\n      let { email, phone, name, } = doctorArr[i]\n      email = email ? email.toLowerCase() : ''\n      phone = phone ? phone.toLowerCase() : ''\n      name = name ? name.toLowerCase() : ''\n      let keyLower = keyWord.toLowerCase()\n      if (`${email}`.indexOf(keyLower) !== -1 || `${phone}`.indexOf(keyLower) !== -1 || `${name}`.indexOf(keyLower) !== -1) {\n        parentSearchData.push(doctorArr[i])\n      }\n    }\n\n\n    this.setState({\n\n      dockerSearchArr: parentSearchData\n    })\n\n\n  }\n  _petSpecies = () => {\n\n\n    let { clickUserItem, isAdmin } = this.state\n    let { url } = clickUserItem\n    this.avatar = url ? url : selectphoto\n    return (\n      <div className=\"petSpecies\">\n\n        <div className=\"r\">\n\n          <div className=\"img\">\n            <Avatar\n              init={\n                <div className=\"ciral \">\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" style={{ height: px(100) }} />\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\n                </div>\n              }\n              getinfo={(val) => {\n                console.log('我是父组件，从子组件获取到的数据位：', val);\n                if (val) {\n                  this.setState({\n                    imageId: val\n                  })\n                }\n\n              }}\n              getAllInfo={(val) => {\n                console.log('图片信息', val);\n                this.setState({\n                  imgUrl: val.url\n                })\n              }}\n            />\n          </div>\n\n        </div>\n\n        <div className=\"l\">\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\n            <p>Set Role:</p>\n\n            <div className=\"ones\" style={{ marginTop: px(8) }}>\n              {/* <div className=\"one\">\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\n                  <img src={dui} alt=\"\" />\n                </div>\n                <p>User</p>\n              </div> */}\n              <div className=\"one\"\n                onClick={() => {\n                  this.setState({\n                    isAdmin: !this.state.isAdmin\n                  })\n                }}\n              >\n                <div\n                  className=\"chect\"\n                  style={{ width: px(18), height: px(18), marginRight: px(15) }}\n\n                >\n                  {isAdmin && <img src={dui} alt=\"\" />}\n\n                </div>\n                <p>Admin</p>\n              </div>\n\n              {/* <div className=\"one\">\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\n                  <img src={dui} alt=\"\" />\n                </div>\n                <p>Owner</p>\n              </div> */}\n            </div>\n\n\n\n          </div>\n\n\n\n\n        </div>\n\n      </div>\n\n    )\n  }\n\n  _petName = () => {\n    let { name, email } = this.state\n\n    return (\n      <div className=\"petSpecies\" style={{ marginTop: px(60) }}>\n        <div className=\"l\">\n          <div className=\"firstName\" style={{ marginBottom: px(50), }}>\n            <p>Name</p>\n            <input\n              type=\"text\"\n              value={name}\n              onChange={(item) => {\n\n                this.setState({\n                  name: item.target.value\n                })\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"l\">\n          <div className=\"firstName\" style={{ marginBottom: px(50) }}>\n            <p>Email</p>\n            <input\n              type=\"text\"\n              value={email}\n              disabled={true}\n              onChange={(item) => {\n\n                this.setState({\n                  email: item.target.value\n                })\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n  _phone = () => {\n    let { areas, phone } = this.state\n\n    return (\n      <div className=\"petSpecies\">\n        <div className=\"l\">\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\n            <p>Phone</p>\n            <input\n              type=\"text\"\n              value={phone}\n              onChange={(item) => {\n\n                this.setState({\n                  phone: item.target.value\n                })\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"l\">\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\n            <p>Areas of Expertise</p>\n            <input\n              type=\"text\"\n              value={areas}\n              onChange={(item) => {\n\n                this.setState({\n                  areas: item.target.value\n                })\n              }}\n\n            />\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n\n  changeUserInfo = () => {\n    let { name, email, phone, clickUserItem, imageId, isAdmin, petList, imgUrl } = this.state\n    let { userId } = clickUserItem\n    let roleId = isAdmin ? '3' : '2'\n    let params = {\n      firstName: '',\n      lastName: name,\n      email,\n      phone,\n\n      roleId\n    }\n    if (imageId) {\n      params.imageId = imageId\n    }\n    message.destroy()\n    this.setState({\n      clickVet: false,\n      loading: true\n    })\n    console.log('入参', params);\n    admin_users(userId, params)\n      .then(res => {\n        console.log(res);\n        if (res.flag && res.code === 20000) {\n          for (let i = 0; i < petList.length; i++) {\n            const element = petList[i];\n            if (clickUserItem.userId === element.userId) {\n              element.name = name\n              element.email = email\n              element.phone = phone\n              if (imageId) {\n                element.url = imgUrl\n              }\n\n              break\n            }\n\n          }\n          this.setState({\n            loading: false,\n            petList\n          })\n          message.success('User information changed successfully')\n        } else {\n          this.setState({\n            loading: false\n          })\n          message.error('User information change failed')\n        }\n      })\n      .catch(err => {\n        this.setState({\n          loading: false\n        })\n        message.error('User information change failed')\n        console.log(err);\n      })\n  }\n\n  render() {\n    let bodyHeight = '92%'\n    try {\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\n    } catch (error) {\n\n    }\n    return (\n      <div id=\"veterinarians\">\n        <div className=\"heard\">\n          <Heart\n            onReturn={() => {\n              this.props.history.goBack()\n            }}\n          />\n        </div>\n\n\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\n          <div className=\"title\">\n            <h1 style={{ fontSize: px(38) }}>{`Veterinarians`}</h1>\n            <div className=\"btn\" style={{ fontSize: px(24), height: px(45) }}>+ New Vet</div>\n          </div>\n\n          <div className=\"search\">\n            <div className=\"searchL\">\n              <input\n                type=\"text\"\n                style={{ paddingLeft: px(25), height: px(34) }}\n                placeholder=\"&#xe62c; Search \"\n                value={this.state.searchText}\n                onChange={(text) => {\n                  this.inputChange(text)\n                }}\n              />\n            </div>\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\n              Search\n            </div>\n          </div>\n\n\n          <div className=\"lists\">\n            {/* <div className=\"listsL\"> */}\n            {this.list()}\n            {/* </div> */}\n\n\n          </div>\n        </div>\n\n\n        <MyModal visible={this.state.loading} />\n\n        <MyModal\n          visible={this.state.clickVet}\n          element={\n            <div className='vetInfo'>\n\n              <div className=\"info\" >\n                <div className=\"close\" style={{ height: px(50) }}>\n                  <img\n                    onClick={() => {\n                      this.setState({\n                        clickVet: false\n                      })\n                    }}\n\n                    src={close} style={{ width: px(20) }} />\n                </div>\n                {this._petSpecies()}\n                {this._petName()}\n                {this._phone()}\n              </div>\n              <div className=\"fotBtn\">\n                <div className=\"text\">\n                  <a\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.setState({\n                        clickVet: false\n                      })\n                    }}\n\n                    href=\"#\">Delete </a>\n                  &nbsp;<p>{` ${this.state.name} from Workplace`}</p>\n                </div>\n                <div className=\"btn\"\n                  style={{ marginTop: px(10) }}\n                  onClick={this.changeUserInfo}\n\n                >Save </div>\n\n              </div>\n            </div>\n          }\n        />\n\n\n\n\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/components/Biggie.jsx",["667","668","669","670"],"import React, { } from 'react'\nimport PropTypes from 'prop-types';\nimport { px, mTop } from '../../../utils/px'\nimport cir from '../../../assets/images/cir.png'\nimport xia from '../../../assets/img/xia.png'\nimport './biggie.less'\n/**\n *\n * @param {string} weight   体重值\n * @param {string} bodyFat   体脂\n * @param {string} score   健康指数\n * @param {string} impedance   阻抗值\n * @param {boolean} issave   按钮文本，为true展示save，为false展示send to pms\n * @param {function} onPress   点击按钮调用的函数\n * @returns\n */\nconst Biggie = ({ weight, bodyFat, score, impedance, issave, onPress, discardOnPress, isIbs, isHaveSaveBtn = true }) => {\n  let lTColor = bodyFat !== null && bodyFat >= 0 ? '#87C563' : '#D8D9D9'\n  let rTColor = score !== null && score >= 0 ? '#87C563' : '#D8D9D9'\n  let lTtext = bodyFat !== null && bodyFat >= 0 ? `${bodyFat}%` : `Not Available`\n  let lTtextSize = bodyFat !== null && bodyFat >= 0 ? px(16) : px(15)\n  let rTtext = score !== null && score >= 0 ? `${score}` : `Not\\nAvailable`\n  let rTtextSize = score !== null && score >= 0 ? px(16) : px(15)\n\n  return (\n    <div className=\"biggie\" >\n      <div className=\"top\">\n\n        <div style={{ borderRadius: px(150) }} className='biggiel'>\n          <div style={{ backgroundColor: lTColor, borderRadius: px(75), }} className='lT'>\n            <div className='lTText' style={{ fontSize: lTtextSize }}>{lTtext}</div>\n          </div>\n          <div style={{ fontSize: px(14) }}>{`Body Fat\\nPercent`}</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(5) }}\n          />\n        </div>\n\n\n        <div style={{  borderRadius: px(150) }} className='cen'>\n          <div style={{ borderRadius: px(75) }} className='lT'>\n            <img\n              src={cir}\n              width={'100%'}\n            />\n          </div>\n          <div className='cTText' style={{ fontWeight: '800' }}>{weight}</div>\n          <div className='cTTextUnit'>{`${isIbs ? 'lbs' : 'kgs'}`}</div>\n          <div className='cenCText'>Weight</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(6) }}\n          />\n        </div>\n\n\n\n        <div style={{ borderRadius: px(150) }} className='biggiel'>\n          <div style={{ backgroundColor: rTColor, borderRadius: px(75) }} className='lT'>\n            <div className='lTText' style={{ fontSize: rTtextSize }}>{rTtext}</div>\n          </div>\n          <div style={{ fontSize: px(14) }}>{`Body\\nCondition\\nScore`}</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(5) }}\n          />\n        </div>\n      </div>\n\n\n\n\n      <div className='biggiefoot'>\n        {isHaveSaveBtn &&\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', width: '100%' }}>\n            <div\n              className='biggiefootbtn'\n              // style={{ height: px(36), }}\n              onClick={() => {\n                discardOnPress()\n              }}\n            >\n              <div style={{ color: '#fff', fontSize: px(16) }}>{`Discard`}</div>\n            </div>\n\n\n            <div\n              className='biggiefootbtn'\n              // style={{ height: px(36), }}\n              onClick={() => {\n                onPress()\n              }}\n            >\n              <div style={{ color: '#fff', fontSize: px(16) }}>{issave ? `Save` : `Send to PMS`}</div>\n            </div>\n\n\n          </div>\n        }\n\n\n        {(impedance && impedance > 0) ? <div style={{ color: '#000', fontSize: px(18), marginTop: mTop(10) }}>{`Impedance ${impedance} Ohms`}</div> : null}\n      </div>\n    </div>\n  )\n\n}\n\nBiggie.propTypes = {\n  weight: PropTypes.string || PropTypes.number,\n  bodyFat: PropTypes.number || PropTypes.string,\n  score: PropTypes.number || PropTypes.string,\n  impedance: PropTypes.number || PropTypes.string,\n  issave: PropTypes.bool,\n  onPress: PropTypes.func,\n  isIbs: PropTypes.bool\n}\nexport default Biggie\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/selectMella/index.jsx",["671"],"import React, { Component } from 'react'\nimport {\n  Button,\n} from 'antd';\n\nimport dui from './../../assets/images/dui.png';\n\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\n\nimport './index.less';\nexport default class SelectMella extends Component {\n\n  state = {\n    radiobgc1: '#E1206D',\n    radiobgc2: '',\n    radiobgc3: '',\n    chooseNum: 1,\n    isNotAsk: false,\n    isDefault: true\n  }\n  componentDidMount () {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n  }\n  _radio = (i) => {\n    console.log(i);\n    switch (i) {\n      case 1:\n        this.setState({\n          radiobgc1: '#E1206D',\n          radiobgc2: '',\n          radiobgc3: '',\n          chooseNum: 1\n        })\n        break;\n\n      case 2:\n        this.setState({\n          radiobgc1: '',\n          radiobgc2: '#E1206D',\n          radiobgc3: '',\n          chooseNum: 2\n        })\n        break;\n      case 3:\n        this.setState({\n          radiobgc1: '',\n          radiobgc2: '',\n          radiobgc3: '#E1206D',\n          chooseNum: 3\n        })\n        break;\n\n      default:\n        break;\n    }\n\n\n  }\n  _next = () => {\n    const { chooseNum } = this.state\n    this.props.history.push({ pathname: '/VetSpireSelectExam' })\n  }\n  render () {\n    const { radiobgc1, radiobgc2, radiobgc3 } = this.state\n    return (\n      <div id=\"selectMella\">\n        {/* 关闭缩小 */}\n        <MaxMin\n          onClick1={() => { this.props.history.push('/page3') }}\n          onClick={() => this.props.history.push('/')}\n        />\n\n        {/* 文本 */}\n        <div className=\"text\">Select Your Mella</div>\n\n        {/* 单选框 */}\n        <div className=\"radios\">\n          <div\n            className=\"radio1\"\n            onClick={() => this._radio(1)}>\n            <div className=\"radioText1\">Mella 001</div>\n            <div className=\"radioBtn1\">\n              <div style={{ backgroundColor: radiobgc1 }}></div>\n            </div>\n          </div>\n          <div\n            className=\"radio1\"\n            onClick={() => this._radio(2)}>\n            <div className=\"radioText1\">Mella 002</div>\n            <div className=\"radioBtn1\">\n              <div style={{ backgroundColor: radiobgc2 }}></div>\n            </div>\n          </div>\n          <div\n            className=\"radio1\"\n            onClick={() => this._radio(3)}>\n            <div className=\"radioText1\">Mella 003</div>\n            <div className=\"radioBtn1\">\n              <div style={{ backgroundColor: radiobgc3 }}></div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"select\">\n          <div className=\"notAsk\">\n            <div\n              className=\"zheng\"\n              onClick={() => {\n                console.log(123);\n                this.setState({\n                  isNotAsk: !this.state.isNotAsk\n                })\n              }}>\n              {(this.state.isNotAsk) ? (<img src={dui} alt='' width='40px' />) : (null)}\n            </div>\n            <p>Don’t ask again</p>\n          </div>\n        </div>\n\n        <div className=\"select\">\n          <div className=\"notAsk\">\n            <div className=\"zheng\" onClick={() => this.setState({ isDefault: !this.state.isDefault })}>\n              {(this.state.isDefault) ? (<img src={dui} alt='' width='40px' />) : (null)}\n            </div>\n            <p>Default Device &nbsp; </p>\n          </div>\n        </div>\n\n\n\n\n        {/* 按钮 */}\n        <div className=\"btn\">\n          <Button\n            type=\"primary\"\n            shape=\"round\"\n            size='large'>\n            New Device\n          </Button>\n          <Button\n            type=\"primary\"\n            shape=\"round\"\n            size='large'\n            onClick={this._next}>\n            Connect\n          </Button>\n        </div>\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/user.js",["672","673","674"],"/**\n * @file user.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/user 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del, patch } from '../ezyvetApi'\nimport { biggieBaseUrl } from '../../config/config'\nconst baseURL = `${biggieBaseUrl}/user`\n\n\nexport const changeLatestWorkplace = (userId, workplaceId, roleId = 2) => {\n    return get(`${baseURL}/changeLatestWorkplace/${userId}/${roleId}/${workplaceId}`,\n        '')\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/ezyVetSelectTime/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addDevice/index.jsx",["675","676"],"import React, { Component } from 'react'\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport MinClose from '../../utils/minClose/MinClose'\nimport MouseDiv from '../../utils/mouseDiv/MouseDiv'\nimport { mTop, px, MTop, } from '../../utils/px';\nimport electronStore from '../../utils/electronStore';\n\nimport back_white from '../../assets/img/back-white.png';\nimport back_hui from '../../assets/img/back-hui.png';\nimport redclose from '../../assets/img/redclose.png';\n\nimport './index.less';\n\nlet storage = window.localStorage;\nlet ipcRenderer = window.electron.ipcRenderer\n\nlet num07 = 0       //接收到07命令行的次数\n\n\nexport default class AddDevice extends Component {\n\n  state = {\n    noUSB: false,\n    devicesList: [],\n    selectDevice: null,\n    // selectDevice: true,\n    reName: '',\n    saveDeviceMac: []  //这是已经保存过的设备的macid\n\n  }\n\n  componentDidMount() {\n    message.destroy()\n\n    ipcRenderer.send('small')\n    // 监听分辨率是否改变\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n    //这里做了个监听，当有数据发过来的时候直接在这里接收\n    ipcRenderer.on('sned', this._send)\n    ipcRenderer.on('noUSB', this._noUSB)\n    let devicesList = electronStore.get(`${storage.userId}-deviceList`)\n    if (devicesList) {\n      let saveDeviceMac = []\n      for (let i = 0; i < devicesList.length; i++) {\n        const element = devicesList[i];\n        saveDeviceMac.push(element.macId)\n      }\n      this.setState({\n        saveDeviceMac\n      })\n    }\n\n\n\n    // const timer = setTimeout(() => {\n    //   let deviceList = [\n    //     // { name: 'Add Device', deviceType: 'add', macId: '0' },\n    //     { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\n    //     { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:55:66' },\n    //     { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\n    //     { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\n    //     { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\n    //     { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:55:66' },\n    //   ]\n    //   this.setState({\n    //     devicesList: deviceList\n    //   })\n    //   clearTimeout(timer)\n    // }, 500);\n\n  }\n  componentWillUnmount() {\n    ipcRenderer.removeListener('sned', this._send)\n    ipcRenderer.removeListener('noUSB', this._noUSB)\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  _noUSB = (e, data) => {\n    console.log('没有USB设备：', data);\n    if (data === false) {\n      message.destroy()\n      this.setState({\n        noUSB: false\n      })\n    } else {\n      if (!this.state.noUSB) {\n        // message.error('The base is not detected. Please insert the base', 0)\n        this.setState({\n          noUSB: true\n        })\n      }\n    }\n  }\n\n  _send = (event, data) => {\n    //data就是测量的数据，是十进制的数字\n    // console.log(data);\n    this.command(data)()\n  }\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  command = (newArr) => {\n    const instruction = [255]\n    let dataArr1 = newArr.map(item => {\n      if (item.toString(16).length < 2) {\n        return '0' + item.toString(16)\n      } else {\n        return item.toString(16)\n      }\n    })\n    // console.log(dataArr1);\n    const commandArr = {\n      255: () => {//蓝牙软尺广播的数据\n        let length = newArr.length\n        let frameLength = newArr[1]   //帧长\n        let itemLength = newArr[3] + 1  //数据位的长度   13\n        let dataIndex = 0\n\n        let bluName = ''\n        let bluData = []\n        //[\"aa\", \"25\", \"ff\", |\"03\", \"03\", \"b0\", \"ff\",| \"0f\", \"ff\", \"ac\", \"d2\", \"0b\", \"72\", \"c1\", \"7d\", \"3e\", \"d0\", \"a0\", \"00\", \"05\", \"09\", \"00\", \"2e\",| \"05\", \"09\", \"54\", \"61\", \"70\", \"65\", |\"06\", \"ef\", \"d0\", \"3e\", \"7d\", \"c1\", \"72\", |\"0b\", \"5c\", \"55\"]\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\n          let itemData = []\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5])\n          }\n          // console.log('--剪切的数据---', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              let str = ''\n              for (let i = 0; i < itemData.length; i++) {\n                let item = parseInt(itemData[i], 16)\n                str += String.fromCharCode(item)\n              }\n              bluName = str\n              break;\n            case 255:\n              bluData = itemData\n              break;\n            case 7: console.log('---UUID'); break;\n            case 239:\n              // console.log('---mac地址');\n              break;\n            case 3: console.log('----尺子的,不知道什么用'); break;\n            default: console.log('直接跳出循环'); return;\n          }\n          dataIndex = itemLength\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\n        }\n        console.log('硬件名称', bluName, '-----硬件数据', bluData);\n        let macId = ''\n        if (bluData.length > 7) {\n          macId = this.getMac(bluName, bluData)\n        }\n\n\n        let sameFlog = this.state.devicesList.some((device, index) => {\n          return device.macId === macId\n        })\n        if (sameFlog || !macId) {   //重复直接退出\n          return\n        }\n        let deviceType = ''\n        switch (bluName) {\n          case 'Biggie':        //这是体脂称\n            deviceType = 'biggie'\n\n            break;\n          case 'C19':        //这是体脂称\n            deviceType = 'biggie'\n\n            break;\n\n          case 'MaeBowl':   //这是称量碗\n            deviceType = 'maeBowl'\n            break;\n\n          case 'Mella Measure': //这是蓝牙尺\n            deviceType = 'tape'\n            break;\n\n        }\n        if (macId && deviceType && bluName) {\n          let json = {\n            name: bluName,\n            deviceType,\n            macId\n          }\n          let deviceArr = [].concat(this.state.devicesList)\n          deviceArr.push(json)\n          this.setState({\n            devicesList: deviceArr\n          })\n        }\n\n\n      }\n\n\n\n\n    }\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]]\n    } else {\n      return () => {\n        console.log('没有控制命令', commandArr);\n      }\n    }\n  }\n  getMac = (bluName, bluData) => {\n    switch (bluName) {\n      case 'Biggie':\n      case 'MaeBowl':\n      case 'Mella Measure':\n      case 'C19':\n        let str = bluData[1]\n        for (let i = 2; i < 7; i++) {\n          str += `:${bluData[i]}`\n        }\n        return str\n\n\n      default:\n        break;\n    }\n\n  }\n\n\n\n  changeFenBianLv = (e) => {\n    ipcRenderer.send('small')\n    this.setState({\n    })\n  }\n  beforeDiv = () => {\n    return (\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\n    )\n  }\n  afterDiv = () => {\n    return (\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\n    )\n\n  }\n\n  body = () => {\n    let { noUSB, devicesList, selectDevice, reName } = this.state\n    if (selectDevice) {\n      return <div className=\"addDevice flex\">\n        <div className=\"addDeviceTop flex\">\n          <div className=\"title\" style={{ fontSize: px(30), marginBottom: px(40) }}>Would you like to name<br />\n            this Mella device?</div>\n\n          <div className=\"input flex\" style={{ marginBottom: px(60) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={reName}\n              onChange={(value) => {\n                this.setState({\n                  reName: value.target.value\n                })\n              }}\n            />\n          </div>\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\n            on the Exam Room. Write the name\n            on the sticker provided so it is easy\n            to select your device in the future.</div>\n        </div>\n        <div className=\"addDeviceFoot flex\">\n          <div className=\"btn\"\n            onClick={() => {\n              let { reName, selectDevice } = this.state\n              console.log(reName, selectDevice);\n              if (reName) {\n                selectDevice.name = reName\n              }\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\n              console.log('---', deviceList);\n              deviceList.push(selectDevice)\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\n              let { saveDeviceMac } = this.state\n              saveDeviceMac.push(selectDevice.macId)\n              this.setState({\n                saveDeviceMac,\n                selectDevice: null,\n                reName: ''\n              })\n\n            }}\n          >\n            <p className='btnText'>Add Another</p>\n          </div>\n          <div className=\"btn\"\n            onClick={() => {\n              let { reName, selectDevice } = this.state\n              console.log(reName, selectDevice);\n              if (reName) {\n                selectDevice.name = reName\n              }\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\n              deviceList.push(selectDevice)\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\n              this.props.history.goBack()\n\n            }}\n          >\n            <p className='btnText'>Finish</p>\n          </div>\n        </div>\n\n\n      </div>\n    } else {\n      if (noUSB) {\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\n\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\n        </div>\n      } else {\n        if (devicesList.length === 0) {\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n            {/* < MyModal\n              visible={true}\n              element={\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n                  <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\n                  </div>\n                  <p>\n                    {'searching...'}\n                  </p>\n                </div>\n              }\n            /> */}\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\n              <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\n              </div>\n              <p>\n                {'searching...'}\n              </p>\n            </div>\n          </div>\n        } else {\n          let options = devicesList.map((item, index) => {\n            let { saveDeviceMac } = this.state\n            let flog = saveDeviceMac.some((device, index) => {\n              return device === item.macId\n            })\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\n            return <li\n              className='flex'\n              style={{ marginBottom: px(20) }}\n              key={`${index}`}\n              onClick={() => {\n                if (!flog) {\n                  this.setState({\n                    selectDevice: item\n                  })\n                } else {\n                  message.destroy();\n                  message.error('This device has already been added')\n                }\n\n              }}\n            >\n\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\n\n            </li>\n          })\n          return <div className='deviceList'>\n            <ul>\n              {options}\n            </ul>\n          </div>\n        }\n      }\n    }\n\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div id=\"addDevice\">\n        <div className=\"heaed\">\n          <div className=\"l\"\n          >\n            <MouseDiv\n              className='mouseDiv'\n              beforeDiv={this.beforeDiv}\n              afterDiv={this.afterDiv}\n              divClick={() => {\n                let { selectDevice } = this.state\n                if (selectDevice) {\n                  this.setState({\n                    selectDevice: null\n                  })\n                } else {\n                  this.props.history.goBack()\n                }\n\n              }}\n            />\n          </div>\n          <div className=\"r\">\n\n            < MinClose\n\n            />\n          </div>\n        </div>\n\n        <div className=\"body flex\">\n          {this.body()}\n        </div>\n\n\n\n\n\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/apiKey/index.jsx",["677"],"import React, { Component, } from 'react'\nimport {\n    Button,\n    Input,\n    Spin,\n    Form,\n    Modal\n} from 'antd';\nimport { createFromIconfontCN } from '@ant-design/icons';\n\nimport dui from '../../assets/images/dui.png'\n\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport { mTop } from '../../utils/px';\n\nimport './index.less';\nimport { selectLocationsByOrganization } from './../../api/mellaserver/vetSpire';\n\nconst MyIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_2326495_ryrpg35knb.js'\n})\nlet storage = window.localStorage;\nexport default class APIKey extends Component {\n    state = {\n        value: '',\n        loading: false,\n        id: '', // location 的ID\n        name: '',\n        flog: false,\n        visible: false,\n        modalText: '',\n        api: '',\n        selectApi: false\n    }\n    componentDidMount() {\n        let ipcRenderer = window.electron.ipcRenderer\n        ipcRenderer.send('big')\n    }\n    componentWillMount() {\n        if (storage.selectApi === `true`) {\n            if (`${storage.API}` !== `undefined`) {\n                this.setState({\n                    api: storage.API\n                })\n            }\n            this.setState({\n                selectApi: storage.selectApi\n            })\n        }\n        console.log('----------', storage.selectApi, storage.API);\n\n    }\n    onFinish = values => {\n        console.log(\"Success:\", values);\n        console.log('跳转');\n        if (values) {\n            this.setState({\n                loading: true\n            })\n            let params = {\n                APIkey: values.api\n            }\n            console.log('传入的数据：', params);\n\n            selectLocationsByOrganization(params)\n                .then(res => {\n                    console.log('接收到的数据', res);\n                    this.setState({\n                        loading: false\n                    })\n                    if (res.code === 14002) {\n\n\n                        storage.selectApi = this.state.selectApi\n                        console.log(this.state.selectApi);\n                        storage.API = values.api\n                        console.log(res.message);\n                        let data = res.data.org\n                        console.log(data);\n                        this.setState({\n                            id: data.id,\n                            name: data.name,\n                            flog: true,\n                            api: params.APIkey\n                        })\n                        storage.id = data.id\n                        console.log(storage.id);\n                        this.props.history.push({ pathname: '/page3', })\n                    } else {\n                        this.setState({\n                            visible: true,\n                            modalText: 'The input API is wrong',\n                            flog: false\n                        })\n                    }\n                })\n                .catch(err => {\n                    console.log('错误', err);\n                    this.setState({\n                        loading: false,\n                        visible: true,\n                        modalText: `${err}`,\n                        flog: false\n                    })\n                })\n\n        }\n    };\n    onFinishFailed = errorInfo => {\n        console.log(\"Failed:\", errorInfo);\n    };\n    render() {\n        const { api, id } = this.state\n        return (\n            <div id=\"inputAPI\">\n                {/* 关闭缩小 */}\n                <MaxMin\n                    onClick={() => { this.props.history.push('/') }}\n                    onClick1={() => this.props.history.push('/page1')}\n                />\n\n\n                <Spin tip=\"Loading...\" spinning={this.state.loading} delay={500}>\n\n                    {/* 文本 */}\n                    <div className=\"text\"\n                        style={{ marginTop: mTop(100), marginBottom: mTop(80) }}\n                    >Enter your Vetspire API key<br />and we’ll take care of the rest.</div>\n\n\n                    <Form\n                        name=\"basic\"\n                        initialValues={{\n                            remember: true\n                        }}\n                        onFinish={(value) => this.onFinish(value)}\n                        onFinishFailed={(value) => this.onFinishFailed(value)}\n                    >\n                        <div className=\"inptDiv\">\n                            <Form.Item\n                                name=\"api\"\n                                initialValue={this.state.api}\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please input your vetspire API key!\"\n                                    }\n                                ]}\n                            >\n                                <Input\n                                    className='input'\n                                    placeholder=\"Your Vetspire API Key\"\n\n                                />\n\n                            </Form.Item>\n                        </div>\n                        <div className=\"remember\">\n                            <div className=\"text1\">Remember Me</div>\n                            <div className=\"square\" onClick={() => {\n                                this.setState({ selectApi: !this.state.selectApi })\n                            }}>\n                                {(this.state.selectApi) ? (<img src={dui} width={'40px'} alt=\"\" />) : (null)}\n                            </div>\n                        </div>\n\n                        {/* {(!this.state.flog) ? ( */}\n                        {(true) ? (\n                            <Form.Item>\n                                <div className=\"btn\"\n                                    style={{ marginTop: mTop(280) }}\n                                >\n                                    <Button\n                                        type=\"primary\"\n                                        shape=\"round\"\n                                        size='large'\n                                        htmlType=\"submit\"\n                                    >\n                                        Connect\n                                    </Button>\n                                </div>\n                            </Form.Item>\n                        ) : (null)}\n\n                    </Form>\n\n                </Spin>\n\n                {/* {(this.state.flog) ? ( */}\n                {(false) ? (\n                    <div>\n                        <div className=\"text2\"> Verify Organization<br />Information</div>\n                        <div className=\"text9\">Business Name <span>{this.state.name}</span></div>\n                        <div className=\"btns\">\n                            <div className=\"btn1\">\n                                <Button\n                                    type=\"primary\"\n                                    shape=\"round\"\n                                    size='large'\n                                    onClick={() => this.setState({ flog: false })}\n                                >\n                                    Try Again\n                                </Button>\n                            </div>\n                            <div className=\"btn2\">\n                                <Button\n                                    type=\"primary\"\n                                    shape=\"round\"\n                                    size='large'\n                                    onClick={() => {\n                                        console.log('点击了');\n                                        this.props.history.push({ pathname: '/page4', query: { api, id } })\n                                    }}\n                                >\n                                    Verify\n                                </Button>\n                            </div>\n                        </div>\n                    </div>\n\n                ) : (null)}\n\n\n                <Modal\n                    title='err'\n                    visible={this.state.visible}\n                    footer={[]}\n                    onCancel={() => this.setState({ visible: false })}\n                >\n                    {this.state.modalText}\n                </Modal>\n\n\n\n\n            </div>\n        )\n    }\n}\n",["678","679"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/connectWorkplace/index.jsx",["680","681","682","683"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/HardAndPetsUI.jsx",["684","685"],"import React, { useState, useEffect } from 'react'\n\nimport xia from './../../assets/img/xia.png'\n\nimport { px } from '../../utils/px'\n\nimport PetsUI from './PetsUI.jsx'\nimport HardListModal from './HardListModal'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { selectHardwareModalShowFun } from './../../store/actions';\n\nimport './mainbody.less';\n\nlet storage = window.localStorage\nconst HardAndPetsUI = ({ bodyHeight, selectHardwareType, selectHardwareModalShow, hardwareList, selectHardwareModalShowFun,hardwareInfo }) => {\n  //定义选择的硬件详细信息\n  const [selectHardwareDetail, setSelectHardwareDetail] = useState({})\n  useEffect(() => {\n    console.log('初始化硬件和宠物界面', hardwareList);\n    //根据设备类型获取到此类型下的所有硬件,并用来展示\n    for (let i = 0; i < hardwareList.length; i++) {\n      const element = hardwareList[i];\n      if (element.type === selectHardwareType) {\n        let list = element.devices || []\n        //获取被选中的硬件的详细信息\n        let selectHardwareInfo = hardwareInfo || {}\n        console.log('------=========--------', selectHardwareInfo);\n        if (selectHardwareInfo === {}) {\n          let selectHardwareInfo = list[0] || {}\n          setSelectHardwareDetail(selectHardwareInfo)\n        } else {\n          let sameFlag = false\n          for (let i = 0; i < list.length; i++) {\n            const element = list[i];\n            if (element.name === selectHardwareInfo.name && element.mac === selectHardwareInfo.mac) {\n              setSelectHardwareDetail(selectHardwareInfo)\n              sameFlag = true\n              break\n            }\n          }\n          console.log('sameFlag', sameFlag);\n          if (!sameFlag) {\n            console.log('设置了默认值');\n            let selectHardwareInfo = list[0] || {}\n            setSelectHardwareDetail(selectHardwareInfo)\n          }\n        }\n        break\n      }\n    }\n  }, [selectHardwareType, hardwareList,])\n\n\n\n  return (\n    <div className='deviceAndPets' style={{ width: px(200), height: bodyHeight }}>\n      <div className='deviceAndPets-title'\n        onClick={(e) => {\n          //react阻止冒泡\n          e.stopPropagation()\n          selectHardwareModalShowFun(!selectHardwareModalShow)\n        }}\n      >\n        <div className=\"devicesName\" style={{ fontSize: px(26) }}>\n          {selectHardwareDetail.name}\n        </div>\n        <div className=\"imgBox\" style={{ marginLeft: px(7) }}>\n          <img src={xia} alt=\"\" width={px(32)} />\n        </div>\n        {selectHardwareModalShow && <HardListModal setInfo={(item) => {\n          setSelectHardwareDetail(item)\n        }} />}\n      </div>\n      <PetsUI\n        bodyHeight={bodyHeight}\n      />\n    </div >\n  )\n}\n\n\nHardAndPetsUI.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n//默认值\nHardAndPetsUI.defaultProps = {\n  bodyHeight: 0,\n  devicesTypeList: []\n}\nexport default connect(\n  state => ({\n    selectHardwareModalShow: state.hardwareReduce.selectHardwareModalShow,\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    hardwareList: state.hardwareReduce.hardwareList,\n    hardwareInfo: state.hardwareReduce.selectHardwareInfo,\n  }),\n  { selectHardwareModalShowFun }\n)(HardAndPetsUI)\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/userfeedback.js",["686","687"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/EzyVet.js",["688","689"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/clinical.js",["690","691"],"/**\n * @file clinical.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/clinical 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del } from '../api'\nimport { mellaserverBaseUrl } from '../../config/config'\nconst baseURL = `${mellaserverBaseUrl}/clinical`\n\n\n/**\n * @dec 体重保存\n * @param {*} params \n * @returns \n */\nexport const addAllClinical = (params) => {\n    return postJson(`${baseURL}/addAllClinical`, params)\n}\n\n/**\n * @dec 1.2版本的猫预测\n * @param {*} params \n * @returns \n */\nexport const catv12Predict = (params) => {\n    return postJson(`${baseURL}/catv12Predict`, params)\n}","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/pet.js",["692","693","694"],"/**\n * @file pet.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/pet 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del, patch } from '../ezyvetApi'\nimport { biggieBaseUrl } from '../../config/config'\nconst baseURL = `${biggieBaseUrl}/pet`\n\n\n\n\n\nexport const getPetInfoByRFID = (heardSearchText, lastOrganization) => {\n    return get(`${baseURL}/getPetInfoByRFID/${heardSearchText}/${lastOrganization}`, '')\n}\n\n\n\n\n\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectPetBreedModal/index.jsx",["695"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/forgotPassword/index.jsx",["696"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/workplace.js",["697"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/new.js",["698","699"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/VetSpire.js",["700","701","702"],"/**\n * @file VetSpire.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/VetSpire 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del, patch } from '../ezyvetApi'\nimport { melladeskBaseUrl } from '../../config/config'\nconst baseURL = `${melladeskBaseUrl}/VetSpire`\n\n\n\nexport const selectExamByPatientId = (parames) => {\n    return postJson(`${baseURL}/selectExamByPatientId`, parames)\n}\n\n\nexport const updateVitalsTemperatureByVitalId = (parames) => {\n    return postJson(`${baseURL}/updateVitalsTemperatureByVitalId`, parames)\n}\n\n\nexport const selectLocations = (parames) => {\n    return postJson(`${baseURL}/selectLocations`, parames)\n}\n\n\nexport const selectProvidersByLocationId = (parames) => {\n    return postJson(`${baseURL}/selectProvidersByLocationId`, parames)\n}\n\n\n\n\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/myModal/MyModal.jsx",["703","704"],"\n/**\n * \n * @param {boolean} visible 控制modal框是否显示\n * @param {element} element 自定义modal框里面的内容，默认是组件是加载中。。。\n * @returns {element} 这是自己写的一个modal框\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport './myModal.less'\nimport { px, pX, MTop, mTop } from '../px'\n\nclass MyModal extends Component {\n\n  render () {\n    let { visible, element, text } = this.props\n    // console.log('---上层组件传来的值---', this.props);\n\n    if (visible) {\n      let body = element ? element :\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n          <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n            <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\n          </div>\n          <p>\n            {text ? text : 'loading...'}\n          </p>\n        </div>\n      return (\n        <div className=\"myModal\">\n          {body}\n        </div>\n      )\n    } else {\n      return (null)\n    }\n\n  }\n}\n\nMyModal.propTypes = {\n  visible: PropTypes.bool,\n  element: PropTypes.element,\n  text: PropTypes.string\n\n}\nMyModal.defaultProps = {\n  visible: false,\n  text: 'loading...'\n}\n\nexport default MyModal","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/petTable/index.jsx",["705","706","707","708","709","710","711","712"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/selectionBox/SelectionBox.jsx",["713"],"\n\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './selectionBox.less'\nimport { px } from './../px'\nimport { stopBubble } from './../current'\n\nimport blackTriangle from './../../assets/img/blackTriangle.png'\n\n\nconst SelectionBox = ({ listArr, clickItem, clickitemBgc, clickItemColor, initSelectVale }) => {\n    const [selectValue, setSelectValue] = useState('')\n    const [mouseValue, setMouseValue] = useState('')\n    const [showSelect, setShowSelect] = useState(false)\n    // const [bacColor, setBacColor] = useState('#fff')\n    // const [textColor, setTextColor] = useState('#000')\n\n    useEffect(() => {\n        console.log(listArr[0]);\n        setSelectValue(listArr[0].value)\n        setMouseValue(listArr[0].value)\n        if (initSelectVale) {\n            setSelectValue(initSelectVale)\n        }\n    }, [])\n\n    const selection = () => {\n        let option = listArr.map((item, index) => {\n            let bacColor = item.value === selectValue ? clickitemBgc : item.value === mouseValue ? '#e7e7e7' : '#fff'\n            let textColor = item.value === selectValue ? clickItemColor : '#000'\n\n\n            // setBacColor(bacColor1)\n            // setTextColor(textColor1)\n            return <li\n                key={item.key}\n                style={{ paddingTop: px(5), paddingBottom: px(5), backgroundColor: bacColor, color: textColor }}\n                onClick={() => {\n                    setSelectValue(item.value)\n                    setShowSelect(false)\n                    clickItem(item)\n                }}\n                onMouseMove={() => {\n                    console.log();\n                    if (item.value !== selectValue) {\n                        setMouseValue(item.value)\n                    }\n                }}\n                onMouseLeave={() => {\n                    if (item.value !== selectValue) {\n                        // setBacColor('#fff')\n                        setMouseValue('')\n                    }\n                }}\n            >{item.value}</li>\n        })\n        return (\n            <ul>\n                {option}\n            </ul>\n        )\n\n\n    }\n    return (\n        <div className='selectionbox'>\n\n            <div className=\"select flex\" style={{ height: px(26) }}>\n                <div className=\"flex box\" onClick={(e) => {\n                    setShowSelect(true)\n                    stopBubble(e)\n                }}>\n                    <p style={{ fontSize: px(16), }}>{selectValue}</p>\n                    <img src={blackTriangle} alt=\"\" style={{ height: '50%' }} />\n                </div>\n\n                {\n                    showSelect &&\n                    true &&\n                    <div className=\"sortList\" style={{ top: px(26), }}>\n                        {selection()}\n                    </div>\n                }\n\n\n            </div>\n\n        </div>\n    )\n\n}\nSelectionBox.propTypes = {\n    listArr: PropTypes.array.isRequired,\n    clickItem: PropTypes.func,\n    clickitemBgc: PropTypes.string,\n    clickItemColor: PropTypes.string,\n    initSelectVale: PropTypes.string\n\n\n}\nSelectionBox.defaultProps = {\n    clickitemBgc: '#e1206d',\n    clickItemColor: '#fff',\n    initSelectVale: '',\n    clickItem: () => {\n\n    }\n}\nexport default SelectionBox","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/combineScales/index.jsx",["714","715","716","717","718","719"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Layout,\n  Avatar,\n  Button,\n  Card,\n  Space,\n  message,\n  Input,\n  Modal,\n} from \"antd\";\nimport {\n  CheckCircleFilled,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport {\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n} from \"../../store/actions\";\nimport _ from \"lodash\";\nimport { devicesTitleHeight } from \"../../utils/InitDate\";\nimport scaleImage from \"./../../assets/img/scaleImage.png\";\nimport combinedscales from \"./../../assets/img/combinedscales.png\";\nimport { px } from \"../../utils/px\";\nimport \"./index.less\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Meta } = Card;\nconst { confirm } = Modal;\nconst CombineScales = ({\n  petMessage,\n  hardwareMessage,\n  userMessage,\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n}) => {\n  let { hardwareList } = hardwareMessage;\n  const [biggieList, setBiggieList] = useState([]); //体重秤仪器列表\n  const [confirmType, setConfirmType] = useState(false); //确认选择\n  const [checkHardwareList, setcheckHardwareList] = useState([]); //存储用户点击选择的体重秤信息\n  const [saveName, setSaveName] = useState(\"\"); //保存用户的更改的名字\n\n  //点击卡片选择效果\n  const onClick = (index, data) => {\n    console.log(data);\n    let changeClassName = document.getElementById(index).classList;\n    let iconClassName = document.getElementById(`${\"icon\" + index}`);\n    let cardClassNametype = document\n      .getElementById(index)\n      .classList.contains(\"cardBoxClick\");\n    cardClassNametype\n      ? changeClassName.remove(\"cardBoxClick\")\n      : changeClassName.add(\"cardBoxClick\");\n    cardClassNametype\n      ? (iconClassName.style.display = \"none\")\n      : (iconClassName.style.display = \"\");\n    let oldData = checkHardwareList;\n    setcheckHardwareList(_.xorWith([data], oldData, _.isEqual));\n  };\n  //确认选择两个体重秤\n  const onChangeScales = () => {\n    if (_.size(checkHardwareList) > 1) {\n      setConfirmType(true);\n    } else {\n      message.error({\n        content: \"Please choose more than two scales\",\n        style: {\n          marginTop: \"20vh\",\n        },\n      });\n    }\n  };\n  //保存用户更改的名字\n  const saveChangeName = (e) => {\n    setSaveName(e.target.value);\n  };\n\n  //跳转准备测量\n  const startMeasuring = () => {\n    confirm({\n      title: \"Are you sure to incorporate the body fat scale?\",\n      icon: <ExclamationCircleOutlined />,\n      style: {\n        marginTop: \"20vh\",\n      },\n      width: 480,\n      onOk() {\n        let mac = _.join(_.map(checkHardwareList, \"mac\"), \"/\");\n        let newData = {\n          name: _.isEmpty(saveName) ? \"CompositeScale\" : saveName,\n          mac: mac,\n          deviceType: \"biggie\",\n          examRoom: \"\",\n        };\n        let newHardwareList = hardwareList;\n        newHardwareList[1].devices.push({ ...newData });\n        selectHardwareList(newHardwareList);\n        selectHardwareInfoFun(newData);\n        setMenuNum(\"1\");\n      },\n    });\n  };\n\n  useEffect(() => {\n    let newData = [];\n    _.forIn(_.find(hardwareList, [\"type\", \"biggie\"]).devices, (item) => {\n      if (item.mac.indexOf(\"/\") === -1) {\n        newData.push(item);\n      }\n    });\n    setBiggieList(newData);\n    return () => { };\n  }, []);\n\n  return (\n    <>\n      <Layout className=\"mergePage\">\n        <Header className=\"mergeHeaderBox\">\n          <span className=\"headerTitle\">\n            {confirmType ? \"Scales Combined As One\" : \"Combine Scales\"}\n          </span>\n        </Header>\n        <Content className=\"combineContentBox\">\n          <div>\n            <div className=\"tipTitleBox\">\n              {!confirmType ? (\n                <span>\n                  Select the scales you'd\n                  <br />\n                  like to combine\n                </span>\n              ) : (\n                <span>\n                  These two scales are now combined.\n                  <br />\n                  Please give this combination a name\n                </span>\n              )}\n            </div>\n            {confirmType ? (\n              <div className=\"asOneCardBox\">\n                <Space>\n                  {_.map(checkHardwareList, (item, index) => {\n                    return (\n                      <Card className=\"asOneCard\">\n                        <Meta\n                          avatar={<Avatar src={scaleImage} size={53} />}\n                          description={\n                            <div style={{ display: \"grid\" }}>\n                              <span>Device Name:{item.name}</span>\n                              <span>\n                                {item.deviceType === \"biggie\"\n                                  ? \"Biggie Pro Scale\"\n                                  : \"Biggie Home Scale\"}\n                              </span>\n                              <span>SN:{item.mac}</span>\n                            </div>\n                          }\n                        />\n                      </Card>\n                    );\n                  })}\n                </Space>\n                <div className=\"acOneImageBox\">\n                  <img src={combinedscales} />\n                </div>\n              </div>\n            ) : (\n              <div className=\"selectScalesBox\">\n                <div>\n                  {_.map(biggieList, (item, index) => {\n                    return (\n                      <Card\n                        className=\"cardBox\"\n                        hoverable\n                        onClick={() => onClick(`${index}`, item)}\n                        id={`${index}`}\n                        key={index}\n                      >\n                        <div className=\"cardBodyBox\">\n                          <Meta\n                            avatar={<Avatar src={scaleImage} size={53} />}\n                            description={\n                              <div style={{ display: \"grid\" }}>\n                                <span>Device Name:{item.name}</span>\n                                <span>\n                                  {item.deviceType === \"biggie\"\n                                    ? \"Biggie Pro Scale\"\n                                    : \"Biggie Home Scale\"}\n                                </span>\n                                <span>SN:{item.mac}</span>\n                              </div>\n                            }\n                          />\n                          <CheckCircleFilled\n                            id={`${\"icon\" + index}`}\n                            style={{\n                              color: \"#5cbbe0\",\n                              fontSize: \"20px\",\n                              display: \"none\",\n                            }}\n                          />\n                        </div>\n                      </Card>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {confirmType ? (\n              <>\n                <div className=\"inputBox\">\n                  <Input\n                    placeholder=\"Combined Scale Name\"\n                    className=\"inputName\"\n                    maxLength={25}\n                    onChange={saveChangeName}\n                  />\n                </div>\n                <div className=\"scalesBtnBox\">\n                  <Button\n                    type=\"primary\"\n                    className=\"scalesBtn\"\n                    shape=\"round\"\n                    onClick={() => startMeasuring()}\n                  >\n                    Save & Start Measuring\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <Space className=\"scalesBtnBox\">\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => setMenuNum(\"AddDevice\")}\n                >\n                  Add New Scale\n                </Button>\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => onChangeScales()}\n                >\n                  Combine Scales\n                </Button>\n              </Space>\n            )}\n          </div>\n        </Content>\n      </Layout>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n    userMessage: state.userReduce,\n  }),\n  {\n    setMenuNum,\n    selectHardwareInfoFun,\n    selectHardwareList,\n  }\n)(CombineScales);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/swabPetEar/index.jsx",["720","721","722","723","724"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport DogLeftEar from \"../../../../assets/img/DogLeftEar.png\";\nimport DogRightEar from \"../../../../assets/img/DogRightEar.png\";\nimport CatLeftEar from \"../../../../assets/img/CatLeftEar.png\";\nimport CatRightEar from \"../../../../assets/img/CatRightEar.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\n\nconst SwabPetEar = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  let {\n    petSpeciesBreedId,\n  } = petMessage;\n  const [value, setValue] = useState(1);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const imagetypeEvent = () => {\n    if (value === 1) {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatRightEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogRightEar} alt=\"\" />;\n      } else {\n        return <img src={DogRightEar} alt=\"\" />;\n      }\n    } else {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatLeftEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogLeftEar} alt=\"\" />;\n      } else {\n        return <img src={DogLeftEar} alt=\"\" />;\n      }\n    }\n  }\n\n  const onClick = () => {\n    if (value === 1) {\n      setValue(2);\n    } else {\n      cutPageType('experimentalPage');\n    }\n  }\n\n  // useEffect(() => {\n  //   imagetypeEvent();\n  // },[value])\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          Swab Pet's Ear\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {imagetypeEvent()}\n      </div>\n      <div className=\"radioBox\">\n        <Radio.Group onChange={onChange} value={value}>\n          <Radio value={1}>Right Ear</Radio>\n          <Radio value={2}>Left Ear</Radio>\n        </Radio.Group>\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>Next</Button>\n      </div>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(SwabPetEar);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/mouseDiv/MouseDiv.js",["725","726"],"\nimport React, { useState, useEffect } from 'react'\n\n\nimport PropTypes from 'prop-types';\n\nimport { px, mTop } from './../px'\nimport './mouseDiv.less'\n\n/**\n * \n * @param {string} minHeight 最小化、最大化方块的宽高 \n * @param {number} imgWidth 最小化、最大化图片的高度 \n * @returns  封装了最小化和关闭按钮，有鼠标移入、移出的动画\n */\nconst MinClose = ({ minHeight, beforeDiv, afterDiv, divClick }) => {\n  const [minbgc, setMinbgc] = useState('')\n  const [rMin, setRMin] = useState(beforeDiv)\n\n  const minMouseEnter = () => {\n    setMinbgc('rgba(70, 70, 70, 0.5)')\n    setRMin(afterDiv)\n  }\n  const minMouseLeave = () => {\n    setMinbgc('')\n    setRMin(beforeDiv)\n  }\n  const minClock = () => {\n    setMinbgc('')\n    setRMin(beforeDiv)\n    divClick()\n\n  }\n\n\n\n\n  return (\n    <div id='mouseDiv'>\n      <div\n        className='min_icon'\n        onClick={minClock}\n        style={{ backgroundColor: minbgc, height: minHeight, width: minHeight }}\n        onMouseEnter={minMouseEnter}\n        onMouseLeave={minMouseLeave}\n      >\n        {rMin}\n      </div>\n\n    </div>\n  )\n}\n\nMinClose.propTypes = {\n  minHeight: PropTypes.string,\n  imgWidth: PropTypes.number,\n  divClick: PropTypes.func,\n  afterDiv: PropTypes.func,\n  beforeDiv: PropTypes.func,\n\n\n}\nMinClose.defaultProps = {\n  minHeight: '40px',\n  imgWidth: px(20)\n\n}\n\nexport default MinClose","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/help/index.jsx",["727","728","729","730","731","732"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/petAndParents/index.jsx",["733","734","735","736","737"],"\nimport React, { Component } from 'react'\nimport {\n  Select,\n} from 'antd'\n\nimport parent from '../../assets/img/parent.png'\nimport dog from '../../assets/images/reddog.png'\nimport cat from '../../assets/images/redcat.png'\nimport other from '../../assets/images/redother.png'\n\nimport Heart from '../../utils/heard/Heard'\nimport { px } from '../../utils/px';\nimport MyModal from '../../utils/myModal/MyModal'\n\nimport moment from 'moment'\n\nimport './index.less';\nimport { pet_petall } from '../../api'\n\nconst { Option } = Select;\nlet storage = window.localStorage;\n\nexport default class PetAndParents extends Component {\n\n  state = {\n    parentList: [],       //宠物主人列表\n    petList: [],          //宠物列表\n    loading: false,       //加载中\n    parentSearchArr: [],  //搜索后的宠物主人列表\n    petSearchArr: [],     //搜索后的宠物列表\n    searchText: '',        //搜索文本\n    parentAndPetList: [],  //宠物主人下的所有宠物,\n  }\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    ipcRenderer.send('Lowbig')\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n    this._getExam()\n\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    ipcRenderer.send('Lowbig')\n    this.setState({\n\n    })\n  }\n\n  _getExam = async () => {\n    console.log('进来了');\n    this.setState({\n      loading: true,\n      spin: false\n    })\n    let params = {\n      offset: 0,\n      size: 500,\n    }\n\n    console.log('查询宠物的入参', params);\n    const isUnKnow = (val) => {\n      if (val) {\n        return val\n      } else {\n        return 'unknown'\n      }\n    }\n\n\n    pet_petall(storage.lastOrganization, params)\n      .then(res => {\n        console.log('查询到的宠物列表', res);\n        this.setState({\n          loading: false\n        })\n        if (res.flag === true) {\n          let data = []\n          let list = res.data.list\n          let owerList = []\n          let parentAndPetList = []\n          for (let i = 0; i < list.length; i++) {\n            let { url, patientId, speciesId, petName, petId, rfid, createTime, userId, firstName, lastName, phone, email, userImageUrl, birthday, breedName, gender } = list[i]\n            petName = petName ? petName : (patientId ? patientId : 'unknown')\n            let json = {\n              insertedAt: createTime,\n              name: petName,\n              petId,\n              rfid,\n              url,\n              speciesId,\n              type: 'pet',\n              patientId,\n              petBirthday: birthday,\n              breedName,\n              gender\n            }\n            data.push(json)\n            if (userId) {\n              let flogNum = -1\n\n              for (let i = 0; i < owerList.length; i++) {\n                let ower = owerList[i]\n                if (ower.userId === userId) {\n                  flogNum = i\n                  break;\n                }\n\n              }\n              if (flogNum === -1) {     //这是一个不在数组里的宠物主人\n                let owerJson = {\n                  userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\n                }\n                owerList.push(owerJson)\n                let parentAndPetJson = {\n                  parent: owerJson,\n                  pets: [json]\n                }\n                // console.log('-----', parentAndPetJson);\n                parentAndPetList.push(parentAndPetJson)\n              } else {\n                parentAndPetList[flogNum].pets.push(json)\n              }\n\n\n\n\n\n            }\n            // if (userId) {\n            //   let sameFlog = owerList.some((ower => {\n            //     return ower.userId === userId\n            //   }))\n            //   if (!sameFlog) {\n            //     let owerJson = {\n            //       userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\n            //     }\n            //     owerList.push(owerJson)\n            //   }\n            // }\n          }\n          // console.log(parentAndPetList);\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          this.setState({\n            petList: data,\n            parentList: owerList,\n            parentAndPetList\n          })\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        })\n      })\n\n\n\n  }\n\n\n\n  list = (value) => {\n    let { petList, parentList, petSearchArr, parentSearchArr, searchText, parentAndPetList } = this.state\n    let data = []\n    if (value === 'parent') {\n      if (searchText.length > 0) {\n        data = parentSearchArr\n      } else {\n        data = parentList\n      }\n    } else {\n      if (searchText.length > 0) {\n        data = petSearchArr\n      } else {\n        data = petList\n      }\n    }\n\n    let options = data.map((item, index) => {\n      let { speciesId, url, userImageUrl, patientId, petId, name } = item\n      let images = null\n      if (value === 'parent') {\n        images = `url(${userImageUrl}?download=0&width=150)`\n        if (!userImageUrl) {\n          images = `url(${parent})`\n        }\n      } else {\n        images = `url(${url}?download=0&width=150)`\n        if (!url) {\n          switch (speciesId) {\n            case 1: images = `url(${cat})`\n              break;\n            case 2: images = `url(${dog})`\n              break\n            default: images = `url(${other})`\n              break;\n          }\n        }\n      }\n\n\n\n      return (\n        <li\n          key={`${index}`}\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20) }}\n          onClick={() => {\n            if (item.type !== 'pet') {\n              // console.log('跳转到宠物用户详情页', item,);\n              let params = []\n              for (let i = 0; i < parentAndPetList.length; i++) {\n                if (item.userId === parentAndPetList[i].parent.userId) {\n\n                  params = parentAndPetList[i]\n                  break\n                }\n\n              }\n\n\n              this.props.history.push({ pathname: '/menuOptions/editParent', parent: params })\n            } else {\n              console.log(item);\n              this.props.history.push({ pathname: '/page9', participate: { patientId, petName: name, petId } })\n\n            }\n          }}\n        >\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\n            <div\n              className='img'\n              style={{\n                width: px(50),\n                height: px(50),\n                marginRight: px(20),\n                borderRadius: px(60),\n                backgroundImage: images,\n              }}>\n            </div>\n\n            <div className='petInfo' >\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{name}</p>\n            </div>\n          </div>\n        </li >\n      )\n\n    })\n\n    let liStyle = { backgroundColor: '#fff', }\n    if (this.state.petList.length > 6) {\n      liStyle = { height: px(560), overflowY: 'auto' }\n    }\n\n\n    return (\n      <div className='petList'>\n        <ul style={liStyle}>\n          {options}\n        </ul>\n      </div>\n    )\n\n  }\n  inputChange = (text) => {\n    let search = text.target.value\n    this.setState({\n      searchText: search\n    })\n\n    let { parentList, petList } = this.state\n    console.log(parentList, petList);\n    let keyWord = search\n\n    let parentSearchData = []\n    for (let i = 0; i < parentList.length; i++) {\n      let petName = parentList[i].name.toLowerCase() || ''\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1) {\n        parentSearchData.push(parentList[i])\n      }\n    }\n\n    let petSearchData = []\n    for (let i = 0; i < petList.length; i++) {\n      let petName = petList[i].name ? petList[i].name.toLowerCase() : ''\n      let patientId = petList[i].patientId ? petList[i].patientId.toLowerCase() : ''\n      let rfid = petList[i].rfid ? petList[i].rfid : ''\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${rfid}`.indexOf(keyWord) !== -1\n      ) {\n        petSearchData.push(petList[i])\n      }\n    }\n    this.setState({\n      petSearchArr: petSearchData,\n      parentSearchArr: parentSearchData\n    })\n\n\n  }\n\n  render() {\n    let bodyHeight = '92%'\n    try {\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\n    } catch (error) {\n\n    }\n    return (\n      <div id=\"PetAndParents\">\n        <div className=\"heard\">\n          <Heart\n            onReturn={() => {\n              this.props.history.goBack()\n            }}\n            onSearch={(data) => {\n\n              storage.doctorExam = JSON.stringify(data)\n\n              storage.doctorList = JSON.stringify(this.state.data)\n              if (storage.isClinical === 'true') {\n                this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\n              } else {\n                this.props.history.push({ pathname: '/page10', })\n              }\n            }}\n\n          />\n        </div>\n\n\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\n          <h1 style={{ fontSize: px(38) }}>{`Pet & Parents Profile Management`}</h1>\n          <div className=\"search\">\n            <div className=\"searchL\">\n              <input\n                type=\"text\"\n                style={{ paddingLeft: px(25), height: px(34) }}\n                placeholder=\"&#xe62c; Search \"\n                value={this.state.searchText}\n                onChange={(text) => {\n                  this.inputChange(text)\n                }}\n              />\n            </div>\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\n              Search\n            </div>\n          </div>\n          <div className=\"btns\">\n            <div className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}>\n              + New Parent\n            </div>\n            <div\n              className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}\n              onClick={() => {\n                this.props.history.push('/pet/doctorAddPet')\n              }}\n\n            >\n              + New Pet\n            </div>\n          </div>\n\n          <div className=\"lists\">\n            <div className=\"listsL\">\n              {this.list('parent')}\n            </div>\n\n            <div className=\"listsL\">\n              {this.list('pet')}\n            </div>\n          </div>\n        </div>\n\n\n        <MyModal visible={this.state.loading} />\n\n\n\n\n\n\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/unassigned/index.jsx",["738","739","740","741","742"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/App.js",["743"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js",["744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Menu, Popover, Button, Modal } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { SyncOutlined, createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\nimport { SearchOutlined } from '@ant-design/icons';\nimport moment from 'moment'\nimport MyModal from './../myModal/MyModal'\nimport { connect } from 'react-redux'\nimport { setMenuNum, setSelectHardwareType, petDetailInfoFun } from '../../store/actions';\n\n//import 'antd/dist/antd.css';\nimport \"./heard.less\";\nimport help from \"./../../assets/images/help.png\";\nimport message from \"./../../assets/images/message.png\";\nimport triangle from \"./../../assets/img/triangle.png\";\nimport { mTop, px, MTop } from \"../px\";\nimport electronStore from \"../electronStore\";\nimport dog from \"./../../assets/images/reddog.png\";\nimport cat from \"./../../assets/images/redcat.png\";\nimport other from \"./../../assets/images/redother.png\";\nimport menu from \"./../../assets/img/menu.png\";\nimport heardLeft from \"./../../assets/img/heardLeft.png\";\nimport blueSearchPng from \"./../../assets/img/blueSearch.png\";\nimport close from \"./../../assets/img/close.png\";\nimport MinClose from \"../../utils/minClose/MinClose\";\nimport jinggao from \"./../../assets/img/jinggao.png\";\nimport redclose from \"./../../assets/img/redclose.png\";\n\nimport rMin_red from \"./../../assets/img/min-red.png\";\nimport rClose_red from \"./../../assets/img/close-red.png\";\n\nimport rMin_white from \"./../../assets/img/min-white.png\";\nimport rClose_white from \"./../../assets/img/close-white.png\";\nimport mellaLogo from \"./../../assets/images/mellaLogo.png\";\nimport { version, updateTime } from \"./../appversion\";\nimport Button1 from \"../button/Button\";\nimport { getPetInfoByRFID } from \"../../api\";\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js\",\n});\n\nconst allPetList = electronStore.get(\"doctorExam\");\nlet storage = window.localStorage;\nlet ipcRenderer = window.electron.ipcRenderer;\n\nlet mouseoutTimer = null;\nlet matchingTimer = null;\n\n/**\n *\n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns\n */\n\nconst Heard = ({\n  onReturn,\n  onSearch,\n\n  blueSearch,\n  setMenuNum,\n  menuNum,\n  setSelectHardwareType,\n  petListArr,\n  petDetailInfoFun\n}) => {\n  const [minbgc, setMinbgc] = useState('')        //最小化的背景颜色\n  const [closebgc, setClosebgc] = useState('')    //关闭按钮的背景色\n  const [rMin, setRMin] = useState(rMin_red)      //最小化的图标\n  const [rClose, setRClose] = useState(rClose_red) //关闭按钮图标\n  const [value, setValue] = useState('')          //搜索框输入的内容\n  const [visible, setVisible] = useState(false)   //搜索框下面的搜索model\n  const [loading, setLoading] = useState(false)     //搜索宠物过程中的加载图标\n  const [petList, setPetList] = useState([])        //搜索到的宠物列表\n  const [menuVisible, setMenuVisible] = useState(false)//菜单图标下面的菜单内容图标\n  const [menuMouseOverIndex, setMenuMouseOverIndex] = useState('')//用来定位鼠标滑到哪个菜单选项\n\n\n  const [modalvisible, setModalVisible] = useState(false)       //关于的弹窗\n  const [modalVis, setModalVis] = useState(false)               //RFID搜索是否有宠物的弹窗\n  const [isNotFound, setIsNotFound] = useState(false)           //是否找到RFID对应的图标\n  const [deviceModel, setDeviceModel] = useState(false)         //我的设备弹窗\n\n  const [noUSB, setNoUSB] = useState(false)                 //没有底座设备\n  const [searchMac, setSearchMac] = useState(false)         //是否展示狗牌mac搜索图标下面的Modal框\n  const [bluDevice, setBluDevice] = useState([])            //搜索到的狗牌设备mac地址\n\n  const [isShowBlePetList, setIsShowBlePetList] = useState(false)  //是否展示狗牌对应宠物\n  const [isMatchPet, setIsMatchPet] = useState(false)      //正在匹配狗牌对应的宠物\n  const [macMatchPetList, setMacMatchPetList] = useState([])\n  const [updateStatus, setUpdateStatus] = useState('init')\n  const [lastVersion, setLastVersion] = useState(version)\n  const [downLoadNum, setDownLoadingNum] = useState(0)\n  const [selectDeviceMac, setSelectDeviceMac] = useState('')\n  const [clickType, setClickType] = useState(false);\n\n  //这里是为了模拟数据所做出来的,后期要改成接口\n  const testPetList = [\n    {\n      macId: \"E0:7C:62:30:08:08\",\n      petName: \"Mella\",\n      petId: \"b9de0868-9202-4fc9-9f1b-325220ceeccf\",\n    },\n    {\n      macId: \"E0:7C:62:03:75:32\",\n      petName: \"Possum\",\n      petId: \"e4b11580-1277-4b10-bd64-46b097f6f882\",\n    },\n    {\n      macId: \"E0:7D:EA:A8:8D:7E\",\n      petName: \"Charlie\",\n      petId: \"b4e7a185-1c7e-4885-ab95-4a7d2d2ada83\",\n    },\n    {\n      macId: \"E0:7C:62:32:76:8C\",\n      petName: \"Noah\",\n      petId: \"01b34bf2-47e6-4036-884f-47299447cb6a\",\n    },\n\n    {\n      macId: \"84:C2:E4:03:C3:06\",\n      petName: \"Whitey\",\n      petId: \"f713a238-f5df-4c85-8c4f-5766b0770c07\",\n    },\n  ];\n  const [size, setSize] = useState({ height: px(47) });\n  const [headerRef, setHeaderRef] = useState();\n\n  const uploadMessage = (e, data) => {\n    switch (data.payload.status) {\n      case -1:\n        console.log('查询异常');\n        setUpdateStatus('error')\n        break;\n\n      case 0:\n        console.log(\"正在检查应用程序更新\");\n        setUpdateStatus(\"check\");\n        break;\n\n      case 2:\n        console.log(\"正在检查应用程序更新\");\n        setUpdateStatus(\"lastVersion\");\n        break;\n\n      case 1:\n        console.log(\"检测到新版本\");\n        let version = data.output.version;\n        setLastVersion(version);\n\n        setUpdateStatus(\"newVersion\");\n        break;\n\n      // case 3:\n      //   console.log(\"下载新版成功\");\n      // case 4:\n      //   console.log(\"取消背景下载\");\n      case 5:\n        console.log(\"取消安装\");\n        setUpdateStatus(\"init\");\n        break;\n      case 6:\n        console.log(\"正在下载\");\n        setUpdateStatus(\"downLoading\");\n        let loadNum = data.output.percent\n          ? (data.output.percent / 100).toFixed(1)\n          : 0;\n        setDownLoadingNum(loadNum);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const _noUSB = (e, data) => {\n    console.log(\"没有USB设备：\", data);\n    if (data === false) {\n      setNoUSB(false);\n    } else {\n      if (!noUSB) {\n        setNoUSB(true);\n      }\n    }\n  };\n  const _send = (event, data) => {\n    command(data)();\n  };\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  const command = (newArr) => {\n    let dataArr1 = newArr.map((item) => {\n      if (item.toString(16).length < 2) {\n        return \"0\" + item.toString(16);\n      } else {\n        return item.toString(16);\n      }\n    });\n    console.log(dataArr1);\n    const instruction = [255];\n    const commandArr = {\n      255: () => {\n        // console.log(dataArr1);\n        // console.log(bluDevice);\n        let length = newArr.length;\n        let frameLength = newArr[1]; //帧长\n        let itemLength = newArr[3] + 1; //数据位的长度   13\n        let dataIndex = 0;\n\n        let MAC = \"\";\n        let bluData = [];\n        let UUID = \"\";\n        while (itemLength < length && itemLength + 3 <= frameLength) {\n          let itemData = [];\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5]);\n          }\n          // console.log('循环得到的数据', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              break;\n            case 255:\n              break;\n            case 3:\n              break;\n            case 239:\n              // console.log('---mac地址');\n              let str = itemData[0];\n              for (let i = 1; i < itemData.length; i++) {\n                str += `:${itemData[i]}`;\n              }\n              MAC = str.toUpperCase();\n\n              break;\n            case 7:\n              console.log(\"uuid\");\n              let uuid = \"\";\n              for (let i = 0; i < itemData.length; i++) {\n                uuid += `${itemData[i]}`;\n              }\n              UUID = uuid;\n              break;\n            default:\n              return;\n          }\n          dataIndex = itemLength;\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\n\n          // console.log(itemLength, itemLength < length && (itemLength + 3 <= frameLength));\n        }\n        console.log(\"----mac\", MAC, \"-----uuid\", UUID);\n        if (UUID === \"d7895ab1acc74de3b9919e825c24c809\") {\n          // console.log('uuid相等', bluDevice, bluDevice.indexOf(MAC) === -1,);\n          if (bluDevice.indexOf(MAC) === -1) {\n            let dataArr = [].concat(bluDevice);\n            dataArr.push(MAC);\n            setBluDevice(dataArr);\n          }\n        }\n      },\n    };\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]];\n    } else {\n      return () => {\n        console.log(\"没有控制命令\", commandArr);\n      };\n    }\n  };\n\n  let history = useHistory();\n  //最小化，关闭的\n  const MINCOLOSE = {\n    minMouseEnter: () => {\n      setMinbgc(\"rgba(70, 70, 70, 0.5)\");\n      setRMin(rMin_white);\n    },\n    minMouseLeave: () => {\n      setMinbgc(\"\");\n      setRMin(rMin_red);\n    },\n    minClock: () => {\n      setMinbgc(\"\");\n      setRMin(rMin_red);\n      let ipcRenderer = window.electron.ipcRenderer;\n      ipcRenderer.send(\"window-min\");\n    },\n    closeMouseEnter: () => {\n      setClosebgc(\"rgba(232,17,35)\");\n      setRClose(rClose_white);\n    },\n    closeMouseLeave: () => {\n      setClosebgc(\"\");\n      setRClose(rClose_red);\n    },\n    closeClock: () => {\n      let ipcRenderer = window.electron.ipcRenderer;\n      ipcRenderer.send(\"window-close\");\n    },\n  };\n\n  //搜索框内容\n  const searchPetBody = () => {\n    if (loading) {\n      //加载中\n      return (\n        <div className=\"searchPetLoading\" style={{ padding: `${20}px 0` }}>\n          <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n            <LoadingOutlined\n              style={{ fontSize: 30, color: \"#e1206d\", marginTop: mTop(-30) }}\n            />\n          </div>\n          <p style={{ color: \"#e1206d\", marginTop: px(5) }}>loading...</p>\n        </div>\n      );\n    } else {\n      // console.log('-----展示', petList.length);\n      if (petList.length > 0) {\n        //找到了宠物，展示出来\n\n        // let petList = electronStore.get('doctorExam')\n        // console.log(petList);\n\n        let option = petList.map((item, index) => {\n          let { speciesId, url } = item;\n\n          let images = `url(${url}?download=0&width=150)`;\n          if (!url) {\n            switch (speciesId) {\n              case 1:\n                images = `url(${cat})`;\n\n                break;\n              case 2:\n                images = `url(${dog})`;\n                break;\n              default:\n                images = `url(${other})`;\n                break;\n            }\n          }\n          return (\n            <li\n              key={`${index}`}\n              style={{ margin: `${px(20)}px 0` }}\n              onClick={() => {\n                setValue('')\n                setVisible(false)\n                setPetList([])\n                petDetailInfoFun(item)\n                // onSearch(item)\n                history.push('/MainBody')\n              }}\n            >\n              <div className=\"item\" style={{ paddingLeft: px(40) }}>\n                <div\n                  className=\"img\"\n                  style={{\n                    width: px(50),\n                    height: px(50),\n                    marginRight: px(40),\n                    borderRadius: px(60),\n                    backgroundImage: images,\n                  }}\n                >\n\n                </div>\n\n                <div className=\"petInfo\">\n                  <p\n                    style={{\n                      color: \"#141414\",\n                      fontWeight: 600,\n                      fontSize: px(20),\n                    }}\n                  >\n                    {item.petName}\n                  </p>\n                  <p\n                    style={{ color: \"#797979\", fontSize: px(18) }}\n                  >{`Patient ID: ${item.patientId}`}</p>\n                  <p\n                    style={{ color: \"#797979\", fontSize: px(18) }}\n                  >{`Owner: ${item.owner}`}</p>\n                </div>\n              </div>\n            </li>\n          );\n        });\n        let liStyle = { backgroundColor: \"#fff\" };\n        if (petList.length > 4) {\n          liStyle = { height: px(500), overflowY: \"auto\" };\n        }\n\n        return (\n          <div className=\"searchPetList\">\n            <ul style={liStyle}>{option}</ul>\n          </div>\n        );\n      } else {\n        //没有发现这个宠物\n        return (\n          <div className=\"searchPetLoading\" style={{ padding: `${10}px 0` }}>\n            <p style={{ width: \"80%\", fontSize: px(18) }}>\n              Pet not found. Would you like to add a new patient?\n            </p>\n\n            <div\n              className=\"searchPetBtn\"\n              style={{ fontSize: px(18) }}\n              onClick={() => {\n                history.push(\"/pet/doctorAddPet\");\n              }}\n            >\n              <p style={{ padding: `${px(8)}px 0` }}>+ New Patient</p>\n            </div>\n          </div>\n        );\n      }\n    }\n  };\n\n  const inputChange = (text) => {\n    function isNumber(val) {\n      var regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\n      var regNeg =\n        /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\n      if (regPos.test(val) || regNeg.test(val)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    //去除前后空格\n    let search = text.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\");\n    setValue(search);\n    if (search.length > 0) {\n      setVisible(true);\n      setLoading(true);\n\n      //搜索分成两种，一种是通过手输入数据搜索，一种是通过RFID扫描过后搜索\n\n      if (search.length === 15 && isNumber(search)) {\n        //这是RFID扫描后的搜索\n\n        getPetInfoByRFID(search, storage.lastOrganization)\n          .then((res) => {\n            console.log(\"----RFID搜索结果\", res);\n\n            if (res.flag === true && res.data) {\n              let {\n                createTime,\n                patientId,\n                petName,\n                firstName,\n                lastName,\n                url,\n                speciesId,\n                breedName,\n                gender,\n                birthday,\n                petId,\n                rfid,\n                weight,\n              } = res.data;\n              patientId = patientId || \"unknown\";\n              petName = petName || \"unknown\";\n              breedName = breedName || \"unknown\";\n              weight = weight || \"unknown\";\n              let owner = \"\";\n              if (!firstName) {\n                firstName = \"\";\n              }\n              if (!lastName) {\n                lastName = \"\";\n              }\n              if (lastName === \"\" && firstName === \"\") {\n                owner = \"unknown\";\n              } else {\n                owner = `${lastName} ${firstName}`;\n              }\n              createTime = moment(createTime).format(\"X\");\n              let petGender = \"\";\n              switch (`${gender}`) {\n                case \"1\":\n                  petGender = \"F\";\n\n                  break;\n                case \"0\":\n                  petGender = \"M\";\n                  break;\n                default:\n                  petGender = \"unknown\";\n                  break;\n              }\n              let petAge = \"unknown\";\n              if (birthday) {\n                petAge = moment(new Date()).diff(moment(birthday), \"years\");\n                // console.log('petAge', petAge);\n              }\n              let json = {\n                insertedAt: createTime,\n                patientId,\n                petName,\n                owner,\n                breed: breedName,\n                gender: petGender,\n                age: petAge,\n                petId,\n                id: 0,\n                weight,\n                rfid,\n                url,\n                speciesId,\n              };\n              let searchData = [];\n              searchData.push(json);\n              setLoading(false);\n              setPetList(searchData);\n            } else if (\n              res.flag === true &&\n              res.msg === \"该组织下无此宠物信息\"\n            ) {\n              console.log(\"找到了但是不是在这个组织下\");\n              setLoading(false);\n              setModalVis(true);\n              setIsNotFound(false);\n              setValue(\"\");\n              setVisible(false);\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: false,\n              //   heardSearchText: ''\n              // })\n            } else {\n              console.log(\"没有找到\");\n              setLoading(false);\n              setModalVis(true);\n              setIsNotFound(true);\n              setValue(\"\");\n              setVisible(false);\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: true,\n              //   heardSearchText: ''\n              // })\n            }\n          })\n          .catch((err) => {\n            console.log(\"抛出异常:\", err);\n            setLoading(false);\n          });\n        return;\n      }\n\n      /**\n       * 使用indexof方法实现模糊查询\n       *     语法：stringObject.indexOf(searchvalue, fromindex)\n       *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n       *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n       *\n       * list         原数组\n       * keyWord      查询关键词\n       * searchData   查询的结果\n       *\n       * toLowerCase（）方法：将字符串统一转成小写\n       * toUpperCase（）方法：将字符串统一转成大写\n       *\n       */\n      // let list = allPetList\n      let list = petListArr || []\n\n      let searchData = [];\n      let keyWord = search;\n      for (let i = 0; i < list.length; i++) {\n        let petName = list[i].petName ? list[i].petName.toLowerCase() : ''\n        let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : ''\n        let rfid = list[i].rfid || ''\n        if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${rfid}`.indexOf(keyWord) !== -1\n        ) {\n          searchData.push(list[i]);\n        }\n      }\n      // console.log('找到的宠物', searchData);\n      console.log(\n        \"---搜索词：\",\n        search,\n        \"---搜索数组：\",\n        list,\n        \"----搜索结果：\",\n        searchData\n      );\n      setLoading(false);\n      setPetList(searchData);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  //左侧菜单栏\n  const menuList = () => {\n    let name = electronStore.get(`${storage.userId}-isClical`) ? 'Exit Clinical Study Mode' : 'Enter Clinical Study Mode'\n    let menulistArr = [\n      { name: \"Home\", index: \"1\" },\n      { name: \"All Patients\", index: \"2\" },\n      { name: \"Scheduled Patients\", index: \"3\" },\n      { name: \"My Account\", index: \"4\" },\n      { name: \"Org & Practice Profiles\", index: \"10\" },\n      { name: \"Settings\", index: \"5\" },\n      { name: name, index: \"6\" },\n      { name: `Billing & Subscriptions`, index: \"7\" },\n      { name: \"About Mella\", index: \"8\" },\n      { name: \"Log Out\", index: \"9\" },\n    ];\n    let menuOption = menulistArr.map((item, index) => {\n      let pColor = menuMouseOverIndex === item.index ? \"#e1206d\" : \"#1a1a1a\";\n      return (\n        <li\n          key={item.index}\n          style={{ padding: `${px(15)}px ${px(20)}px` }}\n          onClick={() => {\n            menulistClick(item);\n          }}\n          onMouseOver={(e) => {\n            setMenuMouseOverIndex(item.index);\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOver();\n          }}\n          onMouseOut={(e) => {\n            setMenuMouseOverIndex(\"\");\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOut();\n          }}\n        >\n          <div className=\"item\">\n            <p style={{ color: pColor }}>{item.name}</p>\n          </div>\n        </li>\n      );\n    });\n\n    return <ul>{menuOption}</ul>;\n  };\n  const menulistClick = (e) => {\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    setMenuVisible(false);\n    setMenuMouseOverIndex(\"\");\n    console.log(\"click \", e);\n\n    switch (e.index) {\n      case \"1\":\n        history.push(\"/MainBody\");\n        setMenuNum(e.index);\n        break;\n      case \"2\":\n        history.push(\"/MainBody\");\n        console.log(\"全部的宠物\");\n        setMenuNum(e.index);\n        break;\n      case \"3\":\n        history.push(\"/MainBody\");\n        console.log(\"预约宠物\");\n        setMenuNum(e.index);\n        break;\n      case \"4\":\n        history.push(\"/MainBody\");\n        setMenuNum(e.index);\n        break;\n      case \"5\":\n        //跳转到设置\n        // menu5Click()\n        history.push(\"/menuOptions/settings\");\n        // setMenuNum(e.index)\n        break;\n      case \"6\":\n        if (e.name === \"Exit Clinical Study Mode\") {\n          setMenuNum('1');\n          electronStore.set(`${storage.userId}-isClical`, false)\n        } else {\n          setMenuNum(e.index);\n          electronStore.set(`${storage.userId}-isClical`, true)\n          setSelectHardwareType(\"mellaPro\");\n        }\n        history.push(\"/MainBody\");\n        console.log(\"临床测试\");\n        break;\n      case \"7\":\n        console.log(\"billing\");\n        break;\n\n      case \"8\":\n        setModalVisible(true);\n        console.log(\"关于\");\n        break;\n      case \"9\":\n        console.log(\"退出登录\");\n        storage.userId = \"\";\n        storage.roleId = \"\";\n        storage.userWorkplace = \"\";\n        storage.lastOrganization = \"\";\n        storage.lastWorkplaceId = \"\";\n        storage.connectionKey = \"\";\n        storage.isClinical = \"false\";\n        setMenuNum(\"1\");\n        history.push(\"/\");\n        break;\n\n      case \"10\":\n        history.push('/menuOptions/ConnectWorkplace');\n        break;\n\n      default:\n        break;\n    }\n  };\n  const menuMouseOut = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    mouseoutTimer = setTimeout(() => {\n      setMenuVisible(false);\n      mouseoutTimer && clearTimeout(mouseoutTimer);\n    }, 1000);\n  };\n  const menuMouseOver = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    setMenuVisible(true);\n  };\n  const updatePage = () => {\n    switch (updateStatus) {\n      case \"init\":\n        return (\n          <div\n            className=\"updateBtn\"\n            style={{ height: px(40) }}\n            onClick={() => {\n              setDownLoadingNum(0);\n              setUpdateStatus(\"check\");\n\n              ipcRenderer.send(\"clickUpdateBtn\");\n            }}\n          >\n            Check for Updates\n          </div>\n        );\n      case \"check\":\n        return (\n          <div className=\"updateLoading flex\">\n            <div className=\"loadIcon1\">\n              <LoadingOutlined\n                style={{ fontSize: 30, color: \"#e1206d\", marginRight: px(20) }}\n              />\n            </div>\n            <p style={{ color: \"#e1206d\" }}>Checking for updates</p>\n          </div>\n        );\n      case \"lastVersion\":\n        return (\n          <div style={{ fontSize: px(22), }}>\n            already the latest version\n          </div>\n        )\n      case 'error':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            Failed to get the latest version, please try again later\n          </div>\n        )\n\n\n      case \"newVersion\":\n        return (\n          <div style={{ fontSize: px(22) }}>\n            {`Found new version V${lastVersion}`}\n          </div>\n        );\n      case \"downLoading\":\n        return (\n          <div style={{ fontSize: px(22) }}>\n            {`Download progress: ${downLoadNum}%`}\n          </div>\n        );\n\n      default:\n        break;\n    }\n  };\n  //关于界面\n  const modal = () => {\n    return (\n      <div\n        className=\"settingModal\"\n        style={{ height: `${document.documentElement.clientHeight}px` }}\n      >\n        <div className=\"writeBox\" style={{ borderRadius: px(25) }}>\n          <div className=\"modalHeadr\">\n            <div className=\"close\">\n              <div\n                className=\"imgBox\"\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => {\n                  setModalVisible(false);\n                  setUpdateStatus(\"init\");\n                }}\n              >\n                <img src={close} style={{ width: px(23) }} />\n              </div>\n            </div>\n            <div className=\"heaerCenter\">\n              <div className=\"heaerCenterL\">\n                <img src={mellaLogo} style={{ width: \"80%\" }} />\n              </div>\n              <div className=\"heaerCenterR\">\n                <h1 style={{ fontSize: px(45), marginBottom: px(10) }}>\n                  About the System\n                </h1>\n                <div className=\"version\">\n                  <div\n                    className=\"versionL\"\n                    style={{ fontSize: px(22), width: px(180) }}\n                  >\n                    Version\n                  </div>\n                  <div className=\"versionR\" style={{ fontSize: px(24) }}>\n                    {version}\n                  </div>\n                </div>\n                <div className=\"version\">\n                  <div\n                    className=\"versionL\"\n                    style={{ fontSize: px(22), width: px(180) }}\n                  >\n                    Last Checked\n                  </div>\n                  <div className=\"versionR\" style={{ fontSize: px(24) }}>\n                    {updateTime}\n                  </div>\n                </div>\n\n                <div className=\"check\" style={{ marginTop: px(20) }}>\n                  {updatePage()}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"modalfoot\">\n            <div\n              className=\"about\"\n              style={{ marginTop: px(40), fontSize: px(18) }}\n            >\n              Nanjing Jiubian Technology Co., Ltd. was founded in 2019, located\n              in Nanjing Yuhuatai Software Valley Branch City, the company\n              brings together medical sensors, mobile Internet and other\n              industry's top professionals, business areas covering artificial\n              intelligence, smart medical, pet health, sleep monitoring, etc.,\n              is a design, research and development, production, sales, service\n              in one of the high-tech companies. The nine-sided science and\n              technology to \"the number of heavens and earths, starting from\n              one, finally nine\" as the cultural concept, adhering to the\n              essence of Chinese artisans, with an international vision, always\n              standing in the forefront of bio-intelligent medical monitoring\n              technology.\n            </div>\n\n            <div className=\"aLable\">\n              <a\n                href=\"#\"\n                style={{ fontSize: px(18), marginRight: px(50) }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >\n                Terms and Agreements\n              </a>\n              <a\n                href=\"#\"\n                style={{ fontSize: px(18) }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >\n                Privacy Policy\n              </a>\n            </div>\n\n            <div className=\"foot\" style={{ marginBottom: px(40) }}>\n              © 2021 Mella Pet Care All RIghts Reserved\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //设备列表界面\n  const devices = () => {\n    let userId = storage.userId;\n    // electronStore.delete(`${userId}-deviceList`)\n    let deviceList = electronStore.get(`${userId}-deviceList`);\n    console.log(\"---\", deviceList);\n    if (!deviceList) {\n      let str = `${getRamNumber()}`;\n      for (let i = 0; i < 5; i++) {\n        str += `:${getRamNumber()}`;\n      }\n      console.log(\"随机生成的mac地址:\", str);\n      deviceList = [{ name: \"MellaPro\", deviceType: \"mellaPro\", macId: str }];\n      electronStore.set(`${userId}-deviceList`, deviceList);\n    }\n\n    function getRamNumber() {\n      var result = \"\";\n      for (var i = 0; i < 2; i++) {\n        result += Math.floor(Math.random() * 16).toString(16); //获取0-15并通过toString转16进制\n      }\n      //默认字母小写，手动转大写\n      return result.toLowerCase(); //另toLowerCase()转小写\n    }\n\n    // deviceList = [\n    //   // { name: 'Add Device', deviceType: 'add', macId: '0' },\n    //   { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\n    //   { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:51:66' },\n    //   { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:35:66' },\n    //   { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:24:33:44:55:66' },\n    //   { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:25:66' },\n    //   { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:56:66' },\n    // ]\n\n    let options = deviceList.map((item, index) => {\n      return (\n        <li\n          className=\"flex\"\n          key={`${index}`}\n          style={{ marginBottom: px(15), marginTop: px(5) }}\n          onClick={() => {\n            console.log(item.macId);\n            setSelectDeviceMac(item.macId);\n          }}\n        >\n          <div className=\"liLeft\" style={{ fontSize: px(16) }}>\n            {item.name}\n          </div>\n          <div className=\"liCenter\" style={{ fontSize: px(16) }}>\n            {item.macId}\n          </div>\n          <div className=\"liRight\">\n            <div\n              className=\"circle flex\"\n              style={{ width: px(18), height: px(18) }}\n            >\n              {selectDeviceMac === item.macId && <div className=\"redCircle\" />}\n            </div>\n          </div>\n        </li>\n      );\n    });\n\n    return (\n      <div\n        className=\"settingModal\"\n        style={{ height: `${document.documentElement.clientHeight}px` }}\n      >\n        <div\n          className=\"writeBox devices\"\n          style={{ borderRadius: px(25), width: px(400) }}\n        >\n          <div className=\"deviceHeadr\">\n            <div className=\"close\">\n              <div\n                className=\"imgBox\"\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => setDeviceModel(false)}\n              >\n                <img src={close} style={{ width: px(23) }} />\n              </div>\n            </div>\n            <div className=\"logo flex\">\n              <img src={mellaLogo} style={{ width: px(60) }} />\n              <div style={{ fontSize: px(22), marginTop: px(30) }}>Devices</div>\n              <div\n                className=\"bodyText\"\n                style={{ fontSize: px(18), marginTop: px(40) }}\n              >\n                Select the device you would\n                <br />\n                like to use or add a new device.\n              </div>\n            </div>\n          </div>\n\n          <div className=\"deviceCenter\">\n            <ul>{options}</ul>\n          </div>\n          <div\n            className=\"deviceFooter flex\"\n            style={{\n              borderBottomLeftRadius: px(25),\n              borderBottomRightRadius: px(25),\n            }}\n          >\n            <div\n              className=\"btn\"\n              style={{ height: px(40) }}\n              onMouseDown={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[0].style.opacity = \"0.5\";\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[0].style.opacity = \"1\";\n              }}\n              onClick={() => {\n                setDeviceModel(false);\n                history.push(\"/menuOptions/AddDevice\");\n              }}\n            >\n              <p className=\"btnText\" style={{ fontSize: px(18) }}>\n                New Device\n              </p>\n            </div>\n            <div\n              className=\"btn\"\n              style={{ height: px(40) }}\n              onMouseDown={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[1].style.opacity = \"0.5\";\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[1].style.opacity = \"1\";\n              }}\n              onClick={() => {\n                electronStore.set(\n                  `${storage.userId}-selectDevice`,\n                  selectDeviceMac\n                );\n                setDeviceModel(false);\n              }}\n            >\n              <p className=\"btnText\" style={{ fontSize: px(18) }}>\n                Connect\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //点击蓝牙搜索图标\n  const blueClick = () => {\n    console.log(\"点击了蓝牙图标\");\n    setIsShowBlePetList(false);\n    setSearchMac(true);\n  };\n  //点击取消链接\n  const cencleClick = (e) => {\n    console.log(\"mac列表为空,点击取消\");\n    setBluDevice([]);\n    setSearchMac(false);\n    setIsShowBlePetList(false);\n    setIsMatchPet(false);\n    setMacMatchPetList([]);\n    if (e) {\n      e.preventDefault();\n    }\n    matchingTimer && clearTimeout(matchingTimer);\n  };\n  //搜索狗牌的蓝牙\n  const blusearchBody = () => {\n    console.log(\"搜索狗牌的蓝牙\", searchMac, bluDevice);\n    if (isShowBlePetList) {\n      if (isMatchPet) {\n        return (\n          <div\n            className=\"searchPetLoading\"\n            style={{ padding: `${20}px 0`, width: \"100%\" }}\n          >\n            <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n              <LoadingOutlined\n                style={{ fontSize: 30, color: \"#e1206d\", marginTop: mTop(-30) }}\n              />\n            </div>\n            <p style={{ color: \"#e1206d\", marginTop: px(5), width: \"80%\" }}>\n              matching...\n            </p>\n\n            <a\n              href=\"#\"\n              style={{ color: \"#e1206d\", marginTop: px(30) }}\n              onClick={cencleClick}\n            >\n              Cencle\n            </a>\n          </div>\n        );\n      } else {\n        if (macMatchPetList.length > 0) {\n          let option = macMatchPetList.map((item, index) => {\n            let { speciesId, url } = item;\n\n            let images = `url(${url}?download=0&width=150)`;\n            if (!url) {\n              switch (speciesId) {\n                case 1:\n                  images = `url(${cat})`;\n                  break;\n                case 2:\n                  images = `url(${dog})`;\n                  break;\n                default:\n                  images = `url(${other})`;\n                  break;\n              }\n            }\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  cencleClick();\n                  onSearch(item);\n                }}\n              >\n                <div className=\"item\" style={{ paddingLeft: px(40) }}>\n                  <div\n                    className=\"img\"\n                    style={{\n                      width: px(50),\n                      height: px(50),\n                      marginRight: px(40),\n                      borderRadius: px(60),\n                      backgroundImage: images,\n                    }}\n                  >\n                    {/* <img src={images} style={{ width: px(40) }} /> */}\n                  </div>\n\n                  <div className=\"petInfo\">\n                    <p\n                      style={{\n                        color: \"#141414\",\n                        fontWeight: 600,\n                        fontSize: px(20),\n                        textAlign: \"start\",\n                      }}\n                    >\n                      {item.petName}\n                    </p>\n                    <p\n                      style={{ color: \"#797979\", fontSize: px(18) }}\n                    >{`Patient ID: ${item.patientId}`}</p>\n                    <p\n                      style={{ color: \"#797979\", fontSize: px(18) }}\n                    >{`Owner: ${item.owner}`}</p>\n                  </div>\n                </div>\n              </li>\n            );\n          });\n          let liStyle = { backgroundColor: \"#fff\" };\n          if (petList.length > 4) {\n            liStyle = { height: px(500), overflowY: \"auto\" };\n          }\n\n          return (\n            <div className=\"searchPetList flex\">\n              <ul style={liStyle}>{option}</ul>\n              <a\n                href=\"#\"\n                style={{\n                  color: \"#e1206d\",\n                  marginTop: px(10),\n                  marginBottom: px(21),\n                }}\n                onClick={cencleClick}\n              >\n                Cencle\n              </a>\n            </div>\n          );\n        }\n      }\n    } else {\n      if (noUSB) {\n        return (\n          <div className=\"searchPetLoading\" style={{ padding: `${10}px 0` }}>\n            <p style={{ width: \"80%\", fontSize: px(18) }}>\n              Please insert address and scan\n            </p>\n\n            <a href=\"#\" style={{ color: \"#e1206d\" }} onClick={cencleClick}>\n              Cencle\n            </a>\n          </div>\n        );\n      } else {\n        if (bluDevice.length > 0) {\n          let option = bluDevice.map((item, index) => {\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  console.log(\"mac列表为空,点击列表内容\");\n                  setBluDevice([]);\n                  // setSearchMac(false)\n                  setIsShowBlePetList(true);\n                  setIsMatchPet(true);\n                  matchingTimer && clearTimeout(matchingTimer);\n                  matchingTimer = setTimeout(() => {\n                    let haveFlog = false,\n                      index = -1;\n                    for (let i = 0; i < testPetList.length; i++) {\n                      if (testPetList[i].macId === item) {\n                        haveFlog = true;\n                        index = i;\n                        break;\n                      }\n                    }\n                    if (haveFlog) {\n                      if (storage.lastOrganization === \"1\") {\n                        matchPet(testPetList[index].petId);\n                      } else {\n                        setModalVis(true);\n                        setIsNotFound(false);\n                        cencleClick();\n                      }\n                    } else {\n                      setModalVis(true);\n                      setIsNotFound(true);\n                      cencleClick();\n                    }\n\n                    setIsMatchPet(false);\n                    matchingTimer && clearTimeout(matchingTimer);\n                  }, 2000);\n                }}\n              >\n                <div className=\"item\" style={{ paddingLeft: px(40) }}>\n                  <div className=\"petInfo\">\n                    <p\n                      style={{\n                        color: \"#141414\",\n                        fontWeight: 600,\n                        fontSize: px(20),\n                      }}\n                    >\n                      mac:{item}\n                    </p>\n                  </div>\n                </div>\n              </li>\n            );\n          });\n          let liStyle = { backgroundColor: \"#fff\" };\n          if (bluDevice.length > 4) {\n            liStyle = { height: px(500), overflowY: \"auto\" };\n          }\n          return (\n            <div className=\"searchPetList\" style={{ flexDirection: \"column\" }}>\n              <ul style={liStyle}>{option}</ul>\n              <a\n                href=\"#\"\n                style={{\n                  color: \"#e1206d\",\n                  marginTop: px(10),\n                  marginBottom: px(21),\n                }}\n                onClick={cencleClick}\n              >\n                Cencle\n              </a>\n            </div>\n          );\n        } else {\n          return (\n            <div\n              className=\"searchPetLoading\"\n              style={{ padding: `${20}px 0`, width: \"100%\" }}\n            >\n              <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n                <LoadingOutlined\n                  style={{\n                    fontSize: 30,\n                    color: \"#e1206d\",\n                    marginTop: mTop(-30),\n                  }}\n                />\n              </div>\n              <p style={{ color: \"#e1206d\", marginTop: px(5), width: \"80%\" }}>\n                scanning...\n              </p>\n\n              <a\n                href=\"#\"\n                style={{ color: \"#e1206d\", marginTop: px(30) }}\n                onClick={cencleClick}\n              >\n                Cencle\n              </a>\n            </div>\n          );\n        }\n      }\n    }\n  };\n  const matchPet = (searchValue) => {\n    console.log(\"搜索词:\", searchValue);\n    let list = electronStore.get(\"doctorExam\");\n\n    let searchData = [];\n    let keyWord = searchValue;\n    for (let i = 0; i < list.length; i++) {\n      let petName = `${list[i].petId}`;\n      if (keyWord === petName) {\n        searchData.push(list[i]);\n      }\n    }\n\n    setIsMatchPet(false);\n\n    setMacMatchPetList(searchData);\n  };\n  const resize = () => {\n    setSize()\n    // let { offsetWidth, offsetHeight } = heardRef;\n    // console.log(\"resize\", heardRef);\n    // if (offsetHeight !== this.state.bodyHeight) {\n    //   this.setState({\n    //     bodyHeight: offsetHeight - px(50),\n    //   });\n    // }\n  };\n\n  useEffect(() => {\n    console.log(\"mac列表为空,初始化\");\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    setBluDevice([]);\n    return () => {\n      matchingTimer && clearTimeout(matchingTimer);\n    };\n  }, []);\n  useEffect(() => {\n    ipcRenderer.on(\"uploadMessage\", uploadMessage);\n    return () => {\n      ipcRenderer.removeListener(\"uploadMessage\", uploadMessage);\n    };\n  }, []);\n  useEffect(() => {\n    if (blueSearch) {\n      console.log(\"---渲染时执行----??????\");\n      ipcRenderer.on(\"sned\", _send);\n      ipcRenderer.on(\"noUSB\", _noUSB);\n      return () => {\n        console.log(\"----卸载----?????????/\");\n        ipcRenderer.removeListener(\"sned\", _send);\n        ipcRenderer.removeListener(\"noUSB\", _noUSB);\n      };\n    }\n  }, []);\n  useEffect(() => {\n    //监听屏幕窗口改变\n    setSize({ height: 47 });\n  }, [window.screen.availWidth])\n\n  return (\n    <div id=\"heardUI\">\n      <div id=\"heardUITop\" />\n      <div\n        id=\"heard\"\n        style={size}\n        ref={(val) => {\n          setHeaderRef(val);\n        }}\n      >\n        <div className=\"l\">\n          <div\n            className=\"menuF\"\n            style={{ marginLeft: px(40), marginRight: px(40) }}\n          >\n            <div\n              className=\"menu\"\n              onMouseOver={menuMouseOver}\n              onMouseOut={menuMouseOut}\n            >\n              <img src={menu} style={{ width: px(20) }} />\n              {menuVisible ? (\n                // true\n                <div className=\"manuBody\" style={{ top: px(20), left: px(-40) }}>\n                  <div\n                    className=\"triangle\"\n                    style={{\n                      borderLeft: `${px(10)}px solid transparent`,\n                      borderRight: `${px(10)}px solid transparent`,\n                      borderBottom: `${px(13)}px solid #fff`,\n                      left: px(40),\n                    }}\n                  />\n\n                  <div className=\"manuBodyList\" style={{ marginTop: px(13) }}>\n                    {menuList()}\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <div className=\"search\" style={{ width: px(300) }}>\n            <input\n              placeholder=\"Search Pet    &#xe63f;\"\n              style={{ fontSize: px(16), paddingLeft: px(20) }}\n              value={value}\n              onChange={(text) => {\n                inputChange(text);\n              }}\n              onKeyUp={(e) => {\n                // console.log(e);\n                if (e.keyCode === 13) {\n                  console.log(\"回车,去搜索\");\n                }\n                if (e.keyCode === 27) {\n                  console.log(\"清空\");\n                  setValue(\"\");\n                  setVisible(false);\n                }\n              }}\n            />\n            {blueSearch ? (\n              <div\n                className=\"searchIconFa bluSearch\"\n              // style={{ cursor: 'pointer', backgroundColor: 'pink' }}\n              // onClick={blueClick}\n              >\n                <div onClick={blueClick}>\n                  {/* <img src={blueSearchPng} style={{ width: '50%' }} /> */}\n                  <span\n                    className=\" iconfont icon-sousuo searchIcon\"\n                    style={{ fontSize: px(25) }}\n                  />\n                </div>\n\n                {searchMac ? (\n                  // true ?\n                  <div className=\"searchPet flex\" style={{ width: px(400) }}>\n                    <div\n                      className=\"triangle\"\n                      style={{\n                        borderLeft: `${px(20)}px solid transparent`,\n                        borderRight: `${px(20)}px solid transparent`,\n                        borderBottom: `${px(25)}px solid #fff`,\n                        // marginLeft: px(30),\n                        zIndex: 999,\n                      }}\n                    />\n\n                    <div className=\"searchPetBody\" style={{ width: \"100%\" }}>\n                      {blusearchBody()}\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            ) : (\n              <div className=\"searchIconFa\">\n                <span\n                  className=\" iconfont icon-sousuo searchIcon\"\n                  style={{ fontSize: px(25) }}\n                />\n              </div>\n            )}\n\n            {visible ? (\n              // true ?\n              <div className=\"searchPet\" style={{ top: px(35), width: px(400) }}>\n                <div\n                  className=\"triangle\"\n                  style={{\n                    borderLeft: `${px(20)}px solid transparent`,\n                    borderRight: `${px(20)}px solid transparent`,\n                    borderBottom: `${px(25)}px solid #fff`,\n                    marginLeft: px(30),\n                    zIndex: 999,\n                  }}\n                />\n\n                <div className=\"searchPetBody\">{searchPetBody()}</div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n\n        <div className=\"r\">\n          <div className=\"heardCenter\">\n            <div\n              className=\"message\"\n              onClick={() => history.push(\"/menuOptions/unassigned\")}\n            >\n              <img\n                src={message}\n                alt=\"\"\n                style={{ height: px(25), width: px(25) }}\n              />\n            </div>\n            <div\n              className=\"help\"\n              style={{ margin: `0 ${px(25)}px` }}\n              onClick={() => history.push(\"/menuOptions/help\")}\n            >\n              <img src={help} alt=\"\" style={{ height: px(25) }} />\n            </div>\n          </div>\n          <div className=\"min_close\" style={{ paddingRight: px(15) }}>\n            <div\n              className=\"min_icon\"\n              onClick={MINCOLOSE.minClock}\n              style={{ backgroundColor: minbgc, height: px(50), width: px(50) }}\n              onMouseEnter={MINCOLOSE.minMouseEnter}\n              onMouseLeave={MINCOLOSE.minMouseLeave}\n            >\n              <img src={rMin} alt=\"\" style={{ width: px(20) }} />\n            </div>\n            <div\n              className=\"min_icon\"\n              onClick={MINCOLOSE.closeClock}\n              style={{ backgroundColor: closebgc, height: px(50), width: px(50) }}\n              onMouseEnter={MINCOLOSE.closeMouseEnter}\n              onMouseLeave={MINCOLOSE.closeMouseLeave}\n            >\n              <img src={rClose} alt=\"\" style={{ width: px(20) }} />\n            </div>\n          </div>\n        </div>\n\n        {modalvisible && modal()}\n        {deviceModel && devices()}\n\n        <MyModal\n          // visible={true}\n          visible={modalVis}\n          element={\n            <div\n              className=\"tip\"\n              style={{ width: px(420), height: px(480), borderRadius: px(20) }}\n            >\n              <div\n                className=\"close\"\n                style={{ height: px(60) }}\n                onClick={() => setModalVis(false)}\n              >\n                <div className=\"flex\" style={{ height: px(60), width: px(60) }}>\n                  <img src={close} alt=\"\" style={{ width: px(20) }} />\n                </div>\n              </div>\n              <div className=\"text\">\n                <h1 style={{ fontSize: px(36), marginTop: px(30) }}>\n                  {\" \"}\n                  {isNotFound ? \"Pet not found!\" : \"Pet found!\"}\n                </h1>\n              </div>\n              <div className=\"flex\" style={{ margin: `${px(20)}px 0` }}>\n                {isNotFound ? (\n                  <img src={redclose} width=\"50px\" />\n                ) : (\n                  <img src={jinggao} width=\"50px\" />\n                )}\n              </div>\n              <div\n                className=\"textbody\"\n                style={{ marginTop: px(30), color: \"#000\" }}\n              >\n                {isNotFound ? (\n                  <p style={{ fontSize: px(22) }}>\n                    {\" \"}\n                    This pet is not on your database\n                  </p>\n                ) : (\n                  <p style={{ fontSize: px(22) }}>\n                    Pet Identified but does not <br /> belong to your\n                    organization.\n                  </p>\n                )}\n              </div>\n\n              <div className=\"flex\" style={{ marginTop: px(30), width: \"100%\" }}>\n                <div\n                  className=\"btn flex\"\n                  style={{ height: px(40) }}\n                  onClick={() => {\n                    setModalVis(false);\n                    cencleClick();\n                  }}\n                >\n                  <p>OK</p>\n                </div>\n              </div>\n            </div>\n          }\n        />\n      </div>\n    </div>\n\n  );\n};\n\nHeard.propTypes = {\n  onReturn: PropTypes.func,\n  onSearch: PropTypes.func,\n\n  blueSearch: PropTypes.bool,\n};\n// let userHistory = useHistory()\nHeard.defaultProps = {\n  onSearch: () => { },\n  onReturn: () => { },\n\n  blueSearch: false,\n};\n\nexport default connect(\n  state => ({\n    menuNum: state.userReduce.menuNum,\n    petListArr: state.petReduce.petListArr,\n  }),\n  { setMenuNum, setSelectHardwareType, petDetailInfoFun }\n)(Heard)\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanCodeLogin/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/InitDate.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signUpVetProfile/index.jsx",["778","779","780","781","782","783"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/minClose/MinClose.js",["784","785","786"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/experimental/index.jsx",["787","788","789","790","791","792","793"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport swirl from \"../../../../assets/img/swirl.png\";\nimport BreakSeal from \"../../../../assets/img/Break-Seal.png\";\nimport label from \"../../../../assets/img/label.png\";\nimport Incubator from \"../../../../assets/img/Incubator.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\nconst ExperimentalPage = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  const [value, setValue] = useState(1);\n\n  const cutTitle = () => {\n    switch (value) {\n      case 1:\n        return (<>{`${'Swirl sample in'}`}<br />{`${'solution'}`}</>);\n      case 2:\n        return (<>{`${'Break off stem and'}`}<br />{`${'seal collection tube'}`} </>);\n      case 3:\n        return (<>{`${'Affix label to'}`}<br />{`${'collection tube'}`} </>);\n      case 4:\n        return (<>{`${'Place tube in'}`}<br />{`${'incubator'}`} </>);\n      default:\n        break;\n    }\n  }\n\n  const cutImage = () => {\n    switch (value) {\n      case 1:\n        return <img src={swirl} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 2:\n        return <img src={BreakSeal} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 3:\n        return <img src={label} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 4:\n        return <img src={Incubator} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      default:\n        break;\n    }\n  }\n\n  const onClick = () => {\n    if (value !== 4) {\n      setValue(value + 1)\n    } else {\n      cutPageType('timerPage');\n    }\n  }\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          {cutTitle()}\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {cutImage()}\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>{value !== 4 ? 'Next' : 'Start Timer'}</Button>\n      </div>\n    </>\n  );\n\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(ExperimentalPage);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectPetModal/index.jsx",["794","795","796"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/linkEquipment.jsx",["797","798","799","800","801","802","803","804"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measurement.jsx",["805","806","807","808","809","810","811","812","813","814","815"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/timer/index.jsx",["816","817","818","819","820"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Progress } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\nconst TimerPage = ({ petMessage, hardwareMessage, cutPageType }) => {\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          Results Processing\n        </p>\n      </div>\n      <div className=\"middleBox\" style={{margin:px(-100)}}>\n        <p className=\"middleTitle\" style={{ fontSize: px(30) }}>\n          Please wait for\n          <br />\n          accurate results\n        </p>\n      </div>\n      <div>\n        <Progress type=\"circle\" percent={60} format={() => '06:01:59'} width={270} strokeWidth={12} />\n      </div>\n    </>\n  );\n\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(TimerPage);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/index.js",["821"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ConfigProvider } from 'antd';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App';\n// import App from './components/mainbody/index'\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n\n  ,\n  document.getElementById('root'))\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/historyTable/index.jsx",["822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/addPetModal/index.jsx",["845","846","847","848","849","850","851"],"import React, { useEffect, useState } from 'react'\nimport {\n  Modal,\n  Input,\n  message,\n  Spin,\n  Button,\n  Select,\n} from \"antd\";\nimport { SearchOutlined } from '@ant-design/icons';\n\nimport UploadImg from \"../../utils/uploadImg/UploadImg\";\n\nimport {\n  checkPatientId,\n} from '../../api';\n\nimport _ from 'lodash';\n\nimport './index.less';\n\nconst AddPetModal = ({ visible, width, title, destroyOnClose, value, onSelect, onCancel }) => {\n  const { Option } = Select;\n  let storage = window.localStorage;\n  const [isModalVisible, setIsModalVisible] = useState(false);//控制弹窗的显隐\n  const [isdestroyOnClose, setIsdestroyOnClose] = useState(false);//是否清除弹窗里面的内容\n  const [isWidth, setIsWidth] = useState(520);//弹窗的宽度\n  const [loading, setLoading] = useState(false);//加载\n  const [breedList, setBreedList] = useState([]);//\n  const [imageId, setImageId] = useState('');//上传后图片id\n  const [patientId, setPatientId] = useState('');//用户输入的病人id\n  const [petName, setPetName] = useState('');//用户输入的宠物名字\n  const [ownerName, setOwnerName] = useState('');//用户输入的主人名字\n  const [breedId, setBreedId] = useState();//用户选择的宠物品种id\n  const [petAge, setPetAge] = useState();//用户输入的宠物年龄\n  const [petWeight, setPetWeight] = useState();//用户输入的宠物体重\n\n\n  //确认选择\n  const handleOk = () => {\n    setIsModalVisible(visible);\n  };\n  //关闭弹窗\n  const handleCancel = () => {\n    onCancel(false);\n    setIsModalVisible(visible);\n  };\n  //判断用户输入的patientId是否存在\n  const getPetInfoByPatientId = () => {\n    let datas = {\n      patientId: patientId,\n      doctorId: storage.userId\n    }\n    if (storage.lastWorkplaceId) {\n      datas.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      datas.organizationId = storage.lastOrganization\n    }\n    checkPatientId(datas).then((res) => {\n      console.log('res: ', res);\n    })\n\n  }\n\n  useEffect(() => {\n    if (visible === true || visible === false) {\n      setIsModalVisible(visible);\n    } else {\n      setIsModalVisible(false);\n    }\n    return (() => { })\n  }, [visible]);\n\n  useEffect(() => {\n    if (destroyOnClose === true) {\n      setIsdestroyOnClose(destroyOnClose);\n    }\n    if (_.isNumber(width)) {\n      setIsWidth(width)\n    }\n    return (() => { })\n  }, []);\n\n\n  return (\n    <>\n      <Modal\n        title=\"Add a Pet\"\n        visible={isModalVisible}\n        onCancel={handleCancel}\n        centered\n        maskClosable={false}\n        footer={null}\n        width={isWidth}\n        destroyOnClose={isdestroyOnClose}\n        className=\"addPetModal\"\n      >\n        <Spin spinning={loading}>\n          <div className='modalContentBox'>\n            <div className='petMsgBox'>\n              <div className='addPhoto'>\n                <UploadImg\n                  getImg={(val) => {\n                    setImageId(val.imageId);\n                  }}\n                />\n              </div>\n              <div className=\"item\">\n                <p>Patient ID:</p>\n                <Input\n                  value={patientId}\n                  bordered={false}\n                  onChange={(e) => {\n                    setPatientId(e.target.value)\n                  }}\n                  onBlur={() => {\n                    if (patientId.length > 0) {\n                      getPetInfoByPatientId();\n                    }\n                  }}\n                />\n              </div>\n              <div className=\"item\">\n                <p>Pet Name:</p>\n                <Input\n                  value={petName}\n                  bordered={false}\n                  onChange={(e) => {\n                    setPetName(e.target.value)\n                  }}\n                />\n              </div>\n              <div className=\"item\">\n                <p>Owner Name:</p>\n                <Input\n                  value={ownerName}\n                  bordered={false}\n                  onChange={(e) => {\n                    setOwnerName(e.target.value)\n                  }}\n                />\n              </div>\n\n              <div className=\"item\">\n                <p>Breed:</p>\n                <div className='selectBox'>\n                  <Select\n                    showSearch\n                    style={{ width: \"100%\" }}\n                    bordered={false}\n                    value={breedId}\n                    placeholder=\"Search to Select\"\n                    optionFilterProp=\"children\"\n                    listHeight={256}\n                    // onSelect={(value, data) => this._select(value, data)}\n                    filterOption={(input, option) =>\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                      0\n                    }\n                    filterSort={(optionA, optionB) =>\n                      optionA.children\n                        .toLowerCase()\n                        .localeCompare(optionB.children.toLowerCase())\n                    }\n                  >\n                    {\n                      _.map(breedList, (item, index) => {\n                        <Option key={item.petSpeciesBreedId}>{item.breedName}</Option>\n                      })\n                    }\n                  </Select>\n                </div>\n              </div>\n\n              <div className=\"item\">\n                <p>Pet Age:</p>\n                <Input\n                  value={petAge}\n                  bordered={false}\n                  onChange={(e) => {\n                    setPetAge(e.target.value)\n                  }}\n                />\n              </div>\n              <div className=\"item\">\n                <p>Pet Weight:</p>\n                <Input\n                  value={petWeight}\n                  bordered={false}\n                  onChange={(e) => {\n                    setPetWeight(e.target.value)\n                  }}\n                />\n                <div className=\"unit\">{`kg`}</div>\n              </div>\n            </div>\n            <div className='foot'>\n              <div className=\"btnBox\">\n                <Button\n                  type=\"primary\"\n                  shape=\"round\"\n                  size=\"large\"\n                  block\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type=\"primary\"\n                  shape=\"round\"\n                  size=\"large\"\n                  block\n                  onClick={handleOk}\n                >\n                  Confirm\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Spin>\n      </Modal>\n    </>\n  );\n\n};\n\nexport default AddPetModal;\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx",["852","853","854","855","856","857","858","859","860"],"import React, { useState, useEffect } from 'react'\nimport {\n  Menu,\n  Popover,\n  Button,\n  Modal\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport pinyin from 'pinyin';\nimport './phoneBook.less'\nimport { px } from '../px';\n/**\n *\n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns\n */\n\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\n  const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\n  const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\n  const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\n  const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\n  const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\n\n  const _phoneList = () => {\n    let option = phoneList.map((item, index) => {\n      let data = item.data\n      let option1 = data.map((value, index1) => {\n        return (\n          <li\n            key={`option1${index1}`}\n            onClick={() => {\n              setSelectBreed(value.petSpeciesBreedId)\n              selectFun(value)\n            }}>\n            {value.name}\n            {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\n          </li>\n        )\n      })\n      return (\n        <div className=\"phoneBody\">\n          <div className=\"title\" id={`${item.title}`} >{item.title} </div>\n          <ul>\n            {option1}\n          </ul>\n        </div>\n      )\n    })\n    return (\n      <ul>\n        {option}\n      </ul>\n    )\n  }\n  const _letterList = () => {\n\n    let option = letterList.map((item, index) => {\n\n\n      return (\n        <li\n          key={`${index}`}\n\n          style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\n          <a\n\n            onClick={() => {\n              litterClick(item)\n            }}\n          >{item}</a>\n        </li>\n      )\n\n    })\n\n    return (\n      <ul className=\"letterUL\">\n        {option}\n      </ul>\n    )\n  }\n  const litterClick = (anchorName) => {\n    // console.log(anchorName);\n    if (anchorName) {\n      // 找到锚点\n      let anchorElement = document.getElementById(anchorName);\n      // console.log(anchorElement);\n      // 如果对应id的锚点存在，就跳转到锚点\n      if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\n    }\n    // e.preventDefault();\n  }\n\n  useEffect(() => {\n    if (confirmSelectBreed !== -1) {\n      setSelectBreed(confirmSelectBreed)\n    }\n  }, [confirmSelectBreed]);\n\n  useEffect(() => {\n    let test = []\n    listDate.forEach((item, index) => {\n      let data = {\n        name: item.breedName,\n        hidden: false,\n        petSpeciesBreedId: item.petSpeciesBreedId\n      }\n      test.push(data)\n    })\n    //获取联系人列表\n    let list = test;\n    let sections = [], letterArr = [];\n    // 右侧字母栏数据处理\n    list.forEach((item, index) => {\n      letterArr.push(pinyin(item.name.substring(0, 1), {\n        style: pinyin.STYLE_FIRST_LETTER,\n      })[0][0].toUpperCase());\n\n      letterArr = [...new Set(letterArr)].sort();\n    });\n    // 分组数据处理\n    letterArr.forEach((item, index) => {\n      sections.push({\n        title: item,\n        data: []\n      })\n    });\n    list.forEach(item => {\n      let listItem = item;\n      sections.forEach(item => {\n        let first = listItem.name.substring(0, 1);\n        let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\n        if (item.title == test) {\n          item.data.push({\n            firstName: first,\n            name: listItem.name,\n            hidden: listItem.hidden,\n            petSpeciesBreedId: listItem.petSpeciesBreedId\n          });\n        }\n      })\n    });\n    setPhoneList(sections)\n    setPhoneListCopy(sections)\n    setLetterList(letterArr)\n    setLetterListCopy(letterArr)\n  }, [listDate]);\n\n  useEffect(() => {\n    if (letterListCopy.length > 0) {\n      let allData = phoneListCopy\n      let newArr = []\n      let arr = []\n      if (searchText.length > 0) {\n        allData.map((item, i) => {\n          item.data.forEach((data, index) => {\n            let dataName = data.name ? data.name.toUpperCase() : ''\n            let keyData = searchText ? searchText.toUpperCase() : ''\n            if (dataName.search(keyData) !== -1) {\n              newArr.push(data)\n            }\n          })\n          if (newArr.length != 0) {\n            let oneGreep = {\n              title: item.title,\n              data: newArr\n            }\n            arr.push(oneGreep)\n          }\n          newArr = []\n        })\n        let letterArr = []\n        arr.forEach((item, index) => {\n          letterArr.push(item.title)\n        })\n        setPhoneList(arr)\n        setLetterList(letterArr)\n      } else {\n        setPhoneList(phoneListCopy)\n        setLetterList(letterListCopy)\n      }\n    }\n  }, [searchText]);\n\n  return (\n    <div id=\"phoneBook\">\n      <div className=\"phone\">\n        {_phoneList()}\n      </div>\n      <div className=\"litter\">\n        {_letterList()}\n      </div>\n    </div >\n  )\n}\n\nPhoneBook.propTypes = {\n  listDate: PropTypes.array,\n  selectFun: PropTypes.func,\n  searchText: PropTypes.string,\n  confirmSelectBreed: PropTypes.number\n}\nPhoneBook.defaultProps = {\n  listDate: [],\n  selectFun: () => { },\n  searchText: '',\n  confirmSelectBreed: -1,\n}\n\nexport default PhoneBook\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/selectExam/index.jsx",["861","862","863"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/axios/http.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/scanPet.jsx",["864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil5.js",["898","899","900","901"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addScheduledPet/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/numericInput.jsx",["902","903"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/electronStore.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/hardwareAction.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/joinOrganizationByOption/index.jsx",["904","905","906","907","908","909"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signUpVerifyEmail/index.jsx",["910"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/newOrganization/index.jsx",[],{"ruleId":"911","replacedBy":"912"},{"ruleId":"913","replacedBy":"914"},{"ruleId":"915","severity":1,"message":"916","line":22,"column":9,"nodeType":"917","messageId":"918","endLine":22,"endColumn":16},{"ruleId":"915","severity":1,"message":"919","line":10,"column":5,"nodeType":"917","messageId":"918","endLine":10,"endColumn":12},{"ruleId":"911","replacedBy":"920"},{"ruleId":"913","replacedBy":"921"},{"ruleId":"915","severity":1,"message":"922","line":15,"column":7,"nodeType":"917","messageId":"918","endLine":15,"endColumn":15},{"ruleId":"915","severity":1,"message":"923","line":18,"column":5,"nodeType":"917","messageId":"918","endLine":18,"endColumn":9},{"ruleId":"924","severity":1,"message":"925","line":46,"column":3,"nodeType":"926","messageId":"927","endLine":55,"endColumn":47},{"ruleId":"924","severity":1,"message":"925","line":74,"column":3,"nodeType":"926","messageId":"927","endLine":76,"endColumn":46},{"ruleId":"915","severity":1,"message":"928","line":79,"column":5,"nodeType":"917","messageId":"918","endLine":79,"endColumn":16},{"ruleId":"915","severity":1,"message":"929","line":102,"column":5,"nodeType":"917","messageId":"918","endLine":102,"endColumn":10},{"ruleId":"911","replacedBy":"930"},{"ruleId":"913","replacedBy":"931"},{"ruleId":"932","severity":1,"message":"933","line":163,"column":6,"nodeType":"934","endLine":163,"endColumn":23,"suggestions":"935"},{"ruleId":"911","replacedBy":"936"},{"ruleId":"913","replacedBy":"937"},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"939","line":9,"column":10,"nodeType":"917","messageId":"918","endLine":9,"endColumn":13},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"939","line":9,"column":10,"nodeType":"917","messageId":"918","endLine":9,"endColumn":13},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"940","line":10,"column":8,"nodeType":"917","messageId":"918","endLine":10,"endColumn":13},{"ruleId":"915","severity":1,"message":"941","line":19,"column":8,"nodeType":"917","messageId":"918","endLine":19,"endColumn":15},{"ruleId":"915","severity":1,"message":"942","line":21,"column":8,"nodeType":"917","messageId":"918","endLine":21,"endColumn":17},{"ruleId":"915","severity":1,"message":"943","line":22,"column":8,"nodeType":"917","messageId":"918","endLine":22,"endColumn":14},{"ruleId":"915","severity":1,"message":"944","line":33,"column":9,"nodeType":"917","messageId":"918","endLine":33,"endColumn":15},{"ruleId":"945","severity":1,"message":"946","line":103,"column":5,"nodeType":"947","messageId":"948","endLine":109,"endColumn":6},{"ruleId":"949","severity":1,"message":"950","line":116,"column":41,"nodeType":"951","messageId":"952","endLine":116,"endColumn":43},{"ruleId":"949","severity":1,"message":"950","line":154,"column":41,"nodeType":"951","messageId":"952","endLine":154,"endColumn":43},{"ruleId":"915","severity":1,"message":"953","line":261,"column":11,"nodeType":"917","messageId":"918","endLine":261,"endColumn":21},{"ruleId":"915","severity":1,"message":"954","line":261,"column":49,"nodeType":"917","messageId":"918","endLine":261,"endColumn":55},{"ruleId":"955","severity":1,"message":"956","line":511,"column":15,"nodeType":"957","endLine":511,"endColumn":63},{"ruleId":"955","severity":1,"message":"956","line":541,"column":15,"nodeType":"957","endLine":541,"endColumn":63},{"ruleId":"945","severity":1,"message":"946","line":562,"column":5,"nodeType":"947","messageId":"948","endLine":565,"endColumn":6},{"ruleId":"945","severity":1,"message":"946","line":566,"column":5,"nodeType":"947","messageId":"948","endLine":569,"endColumn":6},{"ruleId":"915","severity":1,"message":"958","line":682,"column":32,"nodeType":"917","messageId":"918","endLine":682,"endColumn":41},{"ruleId":"915","severity":1,"message":"959","line":685,"column":26,"nodeType":"917","messageId":"918","endLine":685,"endColumn":29},{"ruleId":"915","severity":1,"message":"960","line":753,"column":13,"nodeType":"917","messageId":"918","endLine":753,"endColumn":23},{"ruleId":"915","severity":1,"message":"961","line":753,"column":25,"nodeType":"917","messageId":"918","endLine":753,"endColumn":33},{"ruleId":"915","severity":1,"message":"962","line":753,"column":35,"nodeType":"917","messageId":"918","endLine":753,"endColumn":41},{"ruleId":"915","severity":1,"message":"963","line":753,"column":43,"nodeType":"917","messageId":"918","endLine":753,"endColumn":51},{"ruleId":"915","severity":1,"message":"964","line":753,"column":53,"nodeType":"917","messageId":"918","endLine":753,"endColumn":70},{"ruleId":"915","severity":1,"message":"953","line":800,"column":29,"nodeType":"917","messageId":"918","endLine":800,"endColumn":39},{"ruleId":"915","severity":1,"message":"965","line":800,"column":79,"nodeType":"917","messageId":"918","endLine":800,"endColumn":84},{"ruleId":"915","severity":1,"message":"966","line":800,"column":117,"nodeType":"917","messageId":"918","endLine":800,"endColumn":139},{"ruleId":"911","replacedBy":"967"},{"ruleId":"913","replacedBy":"968"},{"ruleId":"915","severity":1,"message":"969","line":158,"column":61,"nodeType":"917","messageId":"918","endLine":158,"endColumn":75},{"ruleId":"911","replacedBy":"970"},{"ruleId":"913","replacedBy":"971"},{"ruleId":"915","severity":1,"message":"944","line":20,"column":9,"nodeType":"917","messageId":"918","endLine":20,"endColumn":15},{"ruleId":"915","severity":1,"message":"972","line":65,"column":9,"nodeType":"917","messageId":"918","endLine":65,"endColumn":22},{"ruleId":"915","severity":1,"message":"973","line":337,"column":9,"nodeType":"917","messageId":"918","endLine":337,"endColumn":25},{"ruleId":"915","severity":1,"message":"974","line":354,"column":11,"nodeType":"917","messageId":"918","endLine":354,"endColumn":24},{"ruleId":"915","severity":1,"message":"975","line":354,"column":142,"nodeType":"917","messageId":"918","endLine":354,"endColumn":148},{"ruleId":"915","severity":1,"message":"976","line":354,"column":150,"nodeType":"917","messageId":"918","endLine":354,"endColumn":160},{"ruleId":"915","severity":1,"message":"977","line":358,"column":7,"nodeType":"917","messageId":"918","endLine":358,"endColumn":17},{"ruleId":"911","replacedBy":"978"},{"ruleId":"913","replacedBy":"979"},{"ruleId":"915","severity":1,"message":"980","line":46,"column":10,"nodeType":"917","messageId":"918","endLine":46,"endColumn":23},{"ruleId":"915","severity":1,"message":"981","line":48,"column":10,"nodeType":"917","messageId":"918","endLine":48,"endColumn":22},{"ruleId":"915","severity":1,"message":"982","line":49,"column":10,"nodeType":"917","messageId":"918","endLine":49,"endColumn":23},{"ruleId":"915","severity":1,"message":"983","line":50,"column":10,"nodeType":"917","messageId":"918","endLine":50,"endColumn":21},{"ruleId":"915","severity":1,"message":"984","line":52,"column":10,"nodeType":"917","messageId":"918","endLine":52,"endColumn":24},{"ruleId":"915","severity":1,"message":"985","line":52,"column":26,"nodeType":"917","messageId":"918","endLine":52,"endColumn":43},{"ruleId":"945","severity":1,"message":"946","line":175,"column":5,"nodeType":"947","messageId":"948","endLine":194,"endColumn":6},{"ruleId":"932","severity":1,"message":"986","line":344,"column":6,"nodeType":"934","endLine":344,"endColumn":8,"suggestions":"987"},{"ruleId":"915","severity":1,"message":"944","line":17,"column":9,"nodeType":"917","messageId":"918","endLine":17,"endColumn":15},{"ruleId":"911","replacedBy":"988"},{"ruleId":"913","replacedBy":"989"},{"ruleId":"915","severity":1,"message":"916","line":33,"column":9,"nodeType":"917","messageId":"918","endLine":33,"endColumn":16},{"ruleId":"915","severity":1,"message":"990","line":40,"column":5,"nodeType":"917","messageId":"918","endLine":40,"endColumn":8},{"ruleId":"915","severity":1,"message":"991","line":116,"column":29,"nodeType":"917","messageId":"918","endLine":116,"endColumn":36},{"ruleId":"915","severity":1,"message":"992","line":116,"column":38,"nodeType":"917","messageId":"918","endLine":116,"endColumn":46},{"ruleId":"915","severity":1,"message":"993","line":116,"column":48,"nodeType":"917","messageId":"918","endLine":116,"endColumn":57},{"ruleId":"945","severity":1,"message":"946","line":160,"column":5,"nodeType":"947","messageId":"948","endLine":166,"endColumn":6},{"ruleId":"949","severity":1,"message":"950","line":173,"column":41,"nodeType":"951","messageId":"952","endLine":173,"endColumn":43},{"ruleId":"915","severity":1,"message":"953","line":464,"column":11,"nodeType":"917","messageId":"918","endLine":464,"endColumn":21},{"ruleId":"955","severity":1,"message":"956","line":724,"column":15,"nodeType":"957","endLine":724,"endColumn":63},{"ruleId":"915","severity":1,"message":"994","line":741,"column":5,"nodeType":"917","messageId":"918","endLine":741,"endColumn":12},{"ruleId":"915","severity":1,"message":"995","line":742,"column":11,"nodeType":"917","messageId":"918","endLine":742,"endColumn":20},{"ruleId":"955","severity":1,"message":"956","line":761,"column":15,"nodeType":"957","endLine":761,"endColumn":63},{"ruleId":"945","severity":1,"message":"946","line":783,"column":5,"nodeType":"947","messageId":"948","endLine":786,"endColumn":6},{"ruleId":"945","severity":1,"message":"946","line":787,"column":5,"nodeType":"947","messageId":"948","endLine":790,"endColumn":6},{"ruleId":"915","severity":1,"message":"964","line":914,"column":61,"nodeType":"917","messageId":"918","endLine":914,"endColumn":78},{"ruleId":"915","severity":1,"message":"965","line":914,"column":80,"nodeType":"917","messageId":"918","endLine":914,"endColumn":85},{"ruleId":"915","severity":1,"message":"995","line":914,"column":118,"nodeType":"917","messageId":"918","endLine":914,"endColumn":127},{"ruleId":"911","replacedBy":"996"},{"ruleId":"913","replacedBy":"997"},{"ruleId":"915","severity":1,"message":"916","line":46,"column":9,"nodeType":"917","messageId":"918","endLine":46,"endColumn":16},{"ruleId":"915","severity":1,"message":"998","line":59,"column":5,"nodeType":"917","messageId":"918","endLine":59,"endColumn":8},{"ruleId":"915","severity":1,"message":"999","line":451,"column":22,"nodeType":"917","messageId":"918","endLine":451,"endColumn":26},{"ruleId":"945","severity":1,"message":"946","line":1150,"column":9,"nodeType":"947","messageId":"948","endLine":1154,"endColumn":10},{"ruleId":"945","severity":1,"message":"946","line":1820,"column":5,"nodeType":"947","messageId":"948","endLine":1833,"endColumn":6},{"ruleId":"915","severity":1,"message":"1000","line":2299,"column":17,"nodeType":"917","messageId":"918","endLine":2299,"endColumn":29},{"ruleId":"1001","severity":1,"message":"1002","line":2316,"column":59,"nodeType":"1003","messageId":"1004","endLine":2316,"endColumn":60,"suggestions":"1005"},{"ruleId":"1001","severity":1,"message":"1006","line":2316,"column":165,"nodeType":"1003","messageId":"1004","endLine":2316,"endColumn":166,"suggestions":"1007"},{"ruleId":"1001","severity":1,"message":"1002","line":2332,"column":59,"nodeType":"1003","messageId":"1004","endLine":2332,"endColumn":60,"suggestions":"1008"},{"ruleId":"1001","severity":1,"message":"1006","line":2332,"column":165,"nodeType":"1003","messageId":"1004","endLine":2332,"endColumn":166,"suggestions":"1009"},{"ruleId":"1001","severity":1,"message":"1002","line":2351,"column":59,"nodeType":"1003","messageId":"1004","endLine":2351,"endColumn":60,"suggestions":"1010"},{"ruleId":"1001","severity":1,"message":"1006","line":2351,"column":165,"nodeType":"1003","messageId":"1004","endLine":2351,"endColumn":166,"suggestions":"1011"},{"ruleId":"1001","severity":1,"message":"1002","line":2384,"column":59,"nodeType":"1003","messageId":"1004","endLine":2384,"endColumn":60,"suggestions":"1012"},{"ruleId":"1001","severity":1,"message":"1006","line":2384,"column":165,"nodeType":"1003","messageId":"1004","endLine":2384,"endColumn":166,"suggestions":"1013"},{"ruleId":"1001","severity":1,"message":"1002","line":2400,"column":59,"nodeType":"1003","messageId":"1004","endLine":2400,"endColumn":60,"suggestions":"1014"},{"ruleId":"1001","severity":1,"message":"1006","line":2400,"column":165,"nodeType":"1003","messageId":"1004","endLine":2400,"endColumn":166,"suggestions":"1015"},{"ruleId":"1001","severity":1,"message":"1002","line":2418,"column":59,"nodeType":"1003","messageId":"1004","endLine":2418,"endColumn":60,"suggestions":"1016"},{"ruleId":"1001","severity":1,"message":"1006","line":2418,"column":165,"nodeType":"1003","messageId":"1004","endLine":2418,"endColumn":166,"suggestions":"1017"},{"ruleId":"915","severity":1,"message":"960","line":2838,"column":11,"nodeType":"917","messageId":"918","endLine":2838,"endColumn":21},{"ruleId":"915","severity":1,"message":"961","line":2838,"column":23,"nodeType":"917","messageId":"918","endLine":2838,"endColumn":31},{"ruleId":"915","severity":1,"message":"962","line":2838,"column":33,"nodeType":"917","messageId":"918","endLine":2838,"endColumn":39},{"ruleId":"915","severity":1,"message":"1018","line":2838,"column":65,"nodeType":"917","messageId":"918","endLine":2838,"endColumn":78},{"ruleId":"915","severity":1,"message":"991","line":2982,"column":30,"nodeType":"917","messageId":"918","endLine":2982,"endColumn":37},{"ruleId":"915","severity":1,"message":"992","line":2982,"column":39,"nodeType":"917","messageId":"918","endLine":2982,"endColumn":47},{"ruleId":"915","severity":1,"message":"993","line":2982,"column":49,"nodeType":"917","messageId":"918","endLine":2982,"endColumn":58},{"ruleId":"915","severity":1,"message":"995","line":2982,"column":60,"nodeType":"917","messageId":"918","endLine":2982,"endColumn":69},{"ruleId":"915","severity":1,"message":"965","line":2982,"column":71,"nodeType":"917","messageId":"918","endLine":2982,"endColumn":76},{"ruleId":"915","severity":1,"message":"1019","line":2982,"column":78,"nodeType":"917","messageId":"918","endLine":2982,"endColumn":86},{"ruleId":"915","severity":1,"message":"1020","line":2982,"column":88,"nodeType":"917","messageId":"918","endLine":2982,"endColumn":94},{"ruleId":"915","severity":1,"message":"990","line":2982,"column":96,"nodeType":"917","messageId":"918","endLine":2982,"endColumn":99},{"ruleId":"1001","severity":1,"message":"1002","line":3277,"column":59,"nodeType":"1003","messageId":"1004","endLine":3277,"endColumn":60,"suggestions":"1021"},{"ruleId":"1001","severity":1,"message":"1006","line":3277,"column":165,"nodeType":"1003","messageId":"1004","endLine":3277,"endColumn":166,"suggestions":"1022"},{"ruleId":"1001","severity":1,"message":"1002","line":3294,"column":59,"nodeType":"1003","messageId":"1004","endLine":3294,"endColumn":60,"suggestions":"1023"},{"ruleId":"1001","severity":1,"message":"1006","line":3294,"column":165,"nodeType":"1003","messageId":"1004","endLine":3294,"endColumn":166,"suggestions":"1024"},{"ruleId":"915","severity":1,"message":"1025","line":52,"column":29,"nodeType":"917","messageId":"918","endLine":52,"endColumn":36},{"ruleId":"915","severity":1,"message":"1026","line":52,"column":38,"nodeType":"917","messageId":"918","endLine":52,"endColumn":49},{"ruleId":"915","severity":1,"message":"1027","line":52,"column":57,"nodeType":"917","messageId":"918","endLine":52,"endColumn":68},{"ruleId":"1028","severity":1,"message":"1029","line":246,"column":33,"nodeType":"1030","messageId":"1031","endLine":246,"endColumn":35},{"ruleId":"1028","severity":1,"message":"1029","line":246,"column":92,"nodeType":"1030","messageId":"1031","endLine":246,"endColumn":94},{"ruleId":"1028","severity":1,"message":"1029","line":246,"column":130,"nodeType":"1030","messageId":"1031","endLine":246,"endColumn":132},{"ruleId":"915","severity":1,"message":"1032","line":19,"column":10,"nodeType":"917","messageId":"918","endLine":19,"endColumn":18},{"ruleId":"915","severity":1,"message":"1033","line":24,"column":7,"nodeType":"917","messageId":"918","endLine":24,"endColumn":13},{"ruleId":"915","severity":1,"message":"1034","line":348,"column":11,"nodeType":"917","messageId":"918","endLine":348,"endColumn":17},{"ruleId":"915","severity":1,"message":"1035","line":416,"column":19,"nodeType":"917","messageId":"918","endLine":416,"endColumn":26},{"ruleId":"915","severity":1,"message":"1036","line":417,"column":9,"nodeType":"917","messageId":"918","endLine":417,"endColumn":13},{"ruleId":"1037","severity":1,"message":"1038","line":582,"column":15,"nodeType":"957","endLine":582,"endColumn":50},{"ruleId":"911","replacedBy":"1039"},{"ruleId":"913","replacedBy":"1040"},{"ruleId":"915","severity":1,"message":"916","line":21,"column":9,"nodeType":"917","messageId":"918","endLine":21,"endColumn":16},{"ruleId":"915","severity":1,"message":"944","line":22,"column":9,"nodeType":"917","messageId":"918","endLine":22,"endColumn":15},{"ruleId":"915","severity":1,"message":"1033","line":23,"column":7,"nodeType":"917","messageId":"918","endLine":23,"endColumn":13},{"ruleId":"915","severity":1,"message":"919","line":26,"column":5,"nodeType":"917","messageId":"918","endLine":26,"endColumn":12},{"ruleId":"915","severity":1,"message":"1041","line":27,"column":5,"nodeType":"917","messageId":"918","endLine":27,"endColumn":17},{"ruleId":"915","severity":1,"message":"990","line":28,"column":5,"nodeType":"917","messageId":"918","endLine":28,"endColumn":8},{"ruleId":"915","severity":1,"message":"990","line":86,"column":61,"nodeType":"917","messageId":"918","endLine":86,"endColumn":64},{"ruleId":"915","severity":1,"message":"1042","line":86,"column":66,"nodeType":"917","messageId":"918","endLine":86,"endColumn":75},{"ruleId":"1037","severity":1,"message":"1038","line":271,"column":15,"nodeType":"957","endLine":277,"endColumn":16},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"911","replacedBy":"1043"},{"ruleId":"913","replacedBy":"1044"},{"ruleId":"915","severity":1,"message":"1045","line":5,"column":3,"nodeType":"917","messageId":"918","endLine":5,"endColumn":8},{"ruleId":"915","severity":1,"message":"1046","line":7,"column":3,"nodeType":"917","messageId":"918","endLine":7,"endColumn":6},{"ruleId":"915","severity":1,"message":"1047","line":54,"column":16,"nodeType":"917","messageId":"918","endLine":54,"endColumn":20},{"ruleId":"915","severity":1,"message":"1048","line":59,"column":5,"nodeType":"917","messageId":"918","endLine":59,"endColumn":10},{"ruleId":"955","severity":1,"message":"956","line":113,"column":18,"nodeType":"957","endLine":113,"endColumn":47},{"ruleId":"955","severity":1,"message":"956","line":115,"column":18,"nodeType":"957","endLine":115,"endColumn":47},{"ruleId":"955","severity":1,"message":"956","line":117,"column":18,"nodeType":"957","endLine":117,"endColumn":47},{"ruleId":"955","severity":1,"message":"956","line":119,"column":18,"nodeType":"957","endLine":119,"endColumn":47},{"ruleId":"955","severity":1,"message":"956","line":142,"column":11,"nodeType":"957","endLine":150,"endColumn":13},{"ruleId":"955","severity":1,"message":"956","line":155,"column":13,"nodeType":"957","endLine":155,"endColumn":63},{"ruleId":"1028","severity":1,"message":"1029","line":220,"column":28,"nodeType":"1030","messageId":"1031","endLine":220,"endColumn":30},{"ruleId":"932","severity":1,"message":"1049","line":461,"column":6,"nodeType":"934","endLine":461,"endColumn":18,"suggestions":"1050"},{"ruleId":"932","severity":1,"message":"1051","line":469,"column":6,"nodeType":"934","endLine":469,"endColumn":8,"suggestions":"1052"},{"ruleId":"945","severity":1,"message":"946","line":81,"column":13,"nodeType":"947","messageId":"948","endLine":110,"endColumn":14},{"ruleId":"915","severity":1,"message":"1053","line":286,"column":45,"nodeType":"917","messageId":"918","endLine":286,"endColumn":59},{"ruleId":"915","severity":1,"message":"969","line":286,"column":61,"nodeType":"917","messageId":"918","endLine":286,"endColumn":75},{"ruleId":"915","severity":1,"message":"939","line":9,"column":10,"nodeType":"917","messageId":"918","endLine":9,"endColumn":13},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"1054","line":9,"column":30,"nodeType":"917","messageId":"918","endLine":9,"endColumn":35},{"ruleId":"932","severity":1,"message":"1055","line":235,"column":6,"nodeType":"934","endLine":235,"endColumn":26,"suggestions":"1056"},{"ruleId":"945","severity":1,"message":"946","line":424,"column":9,"nodeType":"947","messageId":"948","endLine":431,"endColumn":10},{"ruleId":"915","severity":1,"message":"1057","line":631,"column":15,"nodeType":"917","messageId":"918","endLine":631,"endColumn":25},{"ruleId":"915","severity":1,"message":"1058","line":675,"column":17,"nodeType":"917","messageId":"918","endLine":675,"endColumn":26},{"ruleId":"915","severity":1,"message":"1059","line":816,"column":13,"nodeType":"917","messageId":"918","endLine":816,"endColumn":16},{"ruleId":"915","severity":1,"message":"1060","line":819,"column":15,"nodeType":"917","messageId":"918","endLine":819,"endColumn":30},{"ruleId":"915","severity":1,"message":"1061","line":821,"column":15,"nodeType":"917","messageId":"918","endLine":821,"endColumn":30},{"ruleId":"915","severity":1,"message":"1058","line":889,"column":17,"nodeType":"917","messageId":"918","endLine":889,"endColumn":26},{"ruleId":"915","severity":1,"message":"1062","line":998,"column":11,"nodeType":"917","messageId":"918","endLine":998,"endColumn":22},{"ruleId":"915","severity":1,"message":"916","line":35,"column":9,"nodeType":"917","messageId":"918","endLine":35,"endColumn":16},{"ruleId":"915","severity":1,"message":"1033","line":36,"column":7,"nodeType":"917","messageId":"918","endLine":36,"endColumn":13},{"ruleId":"915","severity":1,"message":"1063","line":159,"column":9,"nodeType":"917","messageId":"918","endLine":159,"endColumn":16},{"ruleId":"915","severity":1,"message":"1020","line":169,"column":15,"nodeType":"917","messageId":"918","endLine":169,"endColumn":21},{"ruleId":"915","severity":1,"message":"1064","line":622,"column":15,"nodeType":"917","messageId":"918","endLine":622,"endColumn":24},{"ruleId":"915","severity":1,"message":"1065","line":899,"column":15,"nodeType":"917","messageId":"918","endLine":899,"endColumn":21},{"ruleId":"915","severity":1,"message":"1066","line":903,"column":15,"nodeType":"917","messageId":"918","endLine":903,"endColumn":22},{"ruleId":"915","severity":1,"message":"1067","line":987,"column":28,"nodeType":"917","messageId":"918","endLine":987,"endColumn":31},{"ruleId":"915","severity":1,"message":"1068","line":987,"column":33,"nodeType":"917","messageId":"918","endLine":987,"endColumn":35},{"ruleId":"915","severity":1,"message":"1069","line":987,"column":37,"nodeType":"917","messageId":"918","endLine":987,"endColumn":45},{"ruleId":"915","severity":1,"message":"960","line":987,"column":53,"nodeType":"917","messageId":"918","endLine":987,"endColumn":63},{"ruleId":"915","severity":1,"message":"961","line":987,"column":65,"nodeType":"917","messageId":"918","endLine":987,"endColumn":73},{"ruleId":"915","severity":1,"message":"962","line":987,"column":75,"nodeType":"917","messageId":"918","endLine":987,"endColumn":81},{"ruleId":"915","severity":1,"message":"975","line":987,"column":111,"nodeType":"917","messageId":"918","endLine":987,"endColumn":117},{"ruleId":"915","severity":1,"message":"976","line":987,"column":119,"nodeType":"917","messageId":"918","endLine":987,"endColumn":129},{"ruleId":"1037","severity":1,"message":"1038","line":999,"column":11,"nodeType":"957","endLine":1007,"endColumn":12},{"ruleId":"945","severity":1,"message":"946","line":1070,"column":19,"nodeType":"947","messageId":"948","endLine":1089,"endColumn":20},{"ruleId":"955","severity":1,"message":"956","line":1199,"column":17,"nodeType":"957","endLine":1199,"endColumn":52},{"ruleId":"955","severity":1,"message":"956","line":1200,"column":17,"nodeType":"957","endLine":1200,"endColumn":51},{"ruleId":"932","severity":1,"message":"1070","line":55,"column":8,"nodeType":"934","endLine":55,"endColumn":10,"suggestions":"1071"},{"ruleId":"932","severity":1,"message":"1072","line":97,"column":8,"nodeType":"934","endLine":97,"endColumn":38,"suggestions":"1073"},{"ruleId":"915","severity":1,"message":"916","line":33,"column":9,"nodeType":"917","messageId":"918","endLine":33,"endColumn":16},{"ruleId":"915","severity":1,"message":"1033","line":34,"column":7,"nodeType":"917","messageId":"918","endLine":34,"endColumn":13},{"ruleId":"915","severity":1,"message":"1063","line":158,"column":9,"nodeType":"917","messageId":"918","endLine":158,"endColumn":16},{"ruleId":"915","severity":1,"message":"1020","line":167,"column":15,"nodeType":"917","messageId":"918","endLine":167,"endColumn":21},{"ruleId":"915","severity":1,"message":"1064","line":588,"column":15,"nodeType":"917","messageId":"918","endLine":588,"endColumn":24},{"ruleId":"915","severity":1,"message":"1065","line":863,"column":15,"nodeType":"917","messageId":"918","endLine":863,"endColumn":21},{"ruleId":"915","severity":1,"message":"1066","line":867,"column":15,"nodeType":"917","messageId":"918","endLine":867,"endColumn":22},{"ruleId":"915","severity":1,"message":"1067","line":951,"column":28,"nodeType":"917","messageId":"918","endLine":951,"endColumn":31},{"ruleId":"915","severity":1,"message":"1068","line":951,"column":33,"nodeType":"917","messageId":"918","endLine":951,"endColumn":35},{"ruleId":"915","severity":1,"message":"1069","line":951,"column":37,"nodeType":"917","messageId":"918","endLine":951,"endColumn":45},{"ruleId":"915","severity":1,"message":"960","line":951,"column":53,"nodeType":"917","messageId":"918","endLine":951,"endColumn":63},{"ruleId":"915","severity":1,"message":"961","line":951,"column":65,"nodeType":"917","messageId":"918","endLine":951,"endColumn":73},{"ruleId":"915","severity":1,"message":"962","line":951,"column":75,"nodeType":"917","messageId":"918","endLine":951,"endColumn":81},{"ruleId":"915","severity":1,"message":"975","line":951,"column":111,"nodeType":"917","messageId":"918","endLine":951,"endColumn":117},{"ruleId":"915","severity":1,"message":"976","line":951,"column":119,"nodeType":"917","messageId":"918","endLine":951,"endColumn":129},{"ruleId":"1037","severity":1,"message":"1038","line":963,"column":11,"nodeType":"957","endLine":979,"endColumn":12},{"ruleId":"945","severity":1,"message":"946","line":1042,"column":19,"nodeType":"947","messageId":"948","endLine":1061,"endColumn":20},{"ruleId":"955","severity":1,"message":"956","line":1155,"column":17,"nodeType":"957","endLine":1155,"endColumn":52},{"ruleId":"955","severity":1,"message":"956","line":1156,"column":17,"nodeType":"957","endLine":1156,"endColumn":51},{"ruleId":"915","severity":1,"message":"1074","line":4,"column":3,"nodeType":"917","messageId":"918","endLine":4,"endColumn":10},{"ruleId":"915","severity":1,"message":"1075","line":12,"column":10,"nodeType":"917","messageId":"918","endLine":12,"endColumn":30},{"ruleId":"915","severity":1,"message":"1076","line":12,"column":32,"nodeType":"917","messageId":"918","endLine":12,"endColumn":44},{"ruleId":"915","severity":1,"message":"1077","line":12,"column":46,"nodeType":"917","messageId":"918","endLine":12,"endColumn":61},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"1054","line":9,"column":30,"nodeType":"917","messageId":"918","endLine":9,"endColumn":35},{"ruleId":"915","severity":1,"message":"944","line":22,"column":9,"nodeType":"917","messageId":"918","endLine":22,"endColumn":15},{"ruleId":"915","severity":1,"message":"1078","line":45,"column":11,"nodeType":"917","messageId":"918","endLine":45,"endColumn":17},{"ruleId":"915","severity":1,"message":"1079","line":45,"column":19,"nodeType":"917","messageId":"918","endLine":45,"endColumn":24},{"ruleId":"915","severity":1,"message":"972","line":61,"column":9,"nodeType":"917","messageId":"918","endLine":61,"endColumn":22},{"ruleId":"915","severity":1,"message":"993","line":144,"column":18,"nodeType":"917","messageId":"918","endLine":144,"endColumn":27},{"ruleId":"915","severity":1,"message":"992","line":144,"column":29,"nodeType":"917","messageId":"918","endLine":144,"endColumn":37},{"ruleId":"955","severity":1,"message":"956","line":548,"column":19,"nodeType":"957","endLine":555,"endColumn":61},{"ruleId":"1037","severity":1,"message":"1038","line":563,"column":19,"nodeType":"957","endLine":571,"endColumn":30},{"ruleId":"955","severity":1,"message":"956","line":34,"column":11,"nodeType":"957","endLine":37,"endColumn":13},{"ruleId":"955","severity":1,"message":"956","line":43,"column":13,"nodeType":"957","endLine":46,"endColumn":15},{"ruleId":"955","severity":1,"message":"956","line":51,"column":11,"nodeType":"957","endLine":54,"endColumn":13},{"ruleId":"955","severity":1,"message":"956","line":64,"column":11,"nodeType":"957","endLine":67,"endColumn":13},{"ruleId":"915","severity":1,"message":"1080","line":61,"column":13,"nodeType":"917","messageId":"918","endLine":61,"endColumn":22},{"ruleId":"915","severity":1,"message":"1081","line":9,"column":15,"nodeType":"917","messageId":"918","endLine":9,"endColumn":23},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"1054","line":9,"column":30,"nodeType":"917","messageId":"918","endLine":9,"endColumn":35},{"ruleId":"915","severity":1,"message":"1082","line":19,"column":5,"nodeType":"917","messageId":"918","endLine":19,"endColumn":10},{"ruleId":"945","severity":1,"message":"946","line":165,"column":9,"nodeType":"947","messageId":"948","endLine":183,"endColumn":10},{"ruleId":"915","severity":1,"message":"1033","line":19,"column":7,"nodeType":"917","messageId":"918","endLine":19,"endColumn":13},{"ruleId":"911","replacedBy":"1083"},{"ruleId":"913","replacedBy":"1084"},{"ruleId":"915","severity":1,"message":"944","line":7,"column":9,"nodeType":"917","messageId":"918","endLine":7,"endColumn":15},{"ruleId":"915","severity":1,"message":"1078","line":20,"column":11,"nodeType":"917","messageId":"918","endLine":20,"endColumn":17},{"ruleId":"915","severity":1,"message":"1079","line":20,"column":19,"nodeType":"917","messageId":"918","endLine":20,"endColumn":24},{"ruleId":"915","severity":1,"message":"972","line":109,"column":9,"nodeType":"917","messageId":"918","endLine":109,"endColumn":22},{"ruleId":"915","severity":1,"message":"919","line":16,"column":5,"nodeType":"917","messageId":"918","endLine":16,"endColumn":12},{"ruleId":"932","severity":1,"message":"1085","line":53,"column":6,"nodeType":"934","endLine":53,"endColumn":41,"suggestions":"1086"},{"ruleId":"915","severity":1,"message":"939","line":9,"column":10,"nodeType":"917","messageId":"918","endLine":9,"endColumn":13},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"1081","line":9,"column":15,"nodeType":"917","messageId":"918","endLine":9,"endColumn":23},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"939","line":9,"column":10,"nodeType":"917","messageId":"918","endLine":9,"endColumn":13},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"1081","line":9,"column":15,"nodeType":"917","messageId":"918","endLine":9,"endColumn":23},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"1054","line":9,"column":30,"nodeType":"917","messageId":"918","endLine":9,"endColumn":35},{"ruleId":"932","severity":1,"message":"1087","line":85,"column":6,"nodeType":"934","endLine":85,"endColumn":8,"suggestions":"1088"},{"ruleId":"945","severity":1,"message":"946","line":77,"column":11,"nodeType":"947","messageId":"948","endLine":98,"endColumn":12},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"939","line":9,"column":10,"nodeType":"917","messageId":"918","endLine":9,"endColumn":13},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"939","line":9,"column":10,"nodeType":"917","messageId":"918","endLine":9,"endColumn":13},{"ruleId":"915","severity":1,"message":"938","line":9,"column":25,"nodeType":"917","messageId":"918","endLine":9,"endColumn":28},{"ruleId":"915","severity":1,"message":"1054","line":9,"column":30,"nodeType":"917","messageId":"918","endLine":9,"endColumn":35},{"ruleId":"915","severity":1,"message":"1089","line":13,"column":10,"nodeType":"917","messageId":"918","endLine":13,"endColumn":12},{"ruleId":"915","severity":1,"message":"1090","line":13,"column":14,"nodeType":"917","messageId":"918","endLine":13,"endColumn":16},{"ruleId":"915","severity":1,"message":"1091","line":1,"column":27,"nodeType":"917","messageId":"918","endLine":1,"endColumn":36},{"ruleId":"915","severity":1,"message":"1092","line":8,"column":10,"nodeType":"917","messageId":"918","endLine":8,"endColumn":14},{"ruleId":"915","severity":1,"message":"1093","line":8,"column":20,"nodeType":"917","messageId":"918","endLine":8,"endColumn":24},{"ruleId":"915","severity":1,"message":"1094","line":18,"column":7,"nodeType":"917","messageId":"918","endLine":18,"endColumn":14},{"ruleId":"915","severity":1,"message":"1065","line":63,"column":13,"nodeType":"917","messageId":"918","endLine":63,"endColumn":19},{"ruleId":"915","severity":1,"message":"1066","line":67,"column":13,"nodeType":"917","messageId":"918","endLine":67,"endColumn":20},{"ruleId":"1037","severity":1,"message":"1038","line":155,"column":9,"nodeType":"957","endLine":171,"endColumn":10},{"ruleId":"945","severity":1,"message":"946","line":219,"column":15,"nodeType":"947","messageId":"948","endLine":238,"endColumn":16},{"ruleId":"932","severity":1,"message":"1095","line":27,"column":8,"nodeType":"934","endLine":27,"endColumn":10,"suggestions":"1096"},{"ruleId":"915","severity":1,"message":"1097","line":23,"column":10,"nodeType":"917","messageId":"918","endLine":23,"endColumn":28},{"ruleId":"915","severity":1,"message":"1089","line":26,"column":10,"nodeType":"917","messageId":"918","endLine":26,"endColumn":12},{"ruleId":"915","severity":1,"message":"1098","line":29,"column":26,"nodeType":"917","messageId":"918","endLine":29,"endColumn":32},{"ruleId":"915","severity":1,"message":"1099","line":29,"column":34,"nodeType":"917","messageId":"918","endLine":29,"endColumn":39},{"ruleId":"932","severity":1,"message":"1100","line":116,"column":6,"nodeType":"934","endLine":116,"endColumn":8,"suggestions":"1101"},{"ruleId":"955","severity":1,"message":"956","line":168,"column":19,"nodeType":"957","endLine":168,"endColumn":47},{"ruleId":"915","severity":1,"message":"1091","line":1,"column":17,"nodeType":"917","messageId":"918","endLine":1,"endColumn":26},{"ruleId":"915","severity":1,"message":"1102","line":1,"column":38,"nodeType":"917","messageId":"918","endLine":1,"endColumn":44},{"ruleId":"915","severity":1,"message":"1103","line":2,"column":10,"nodeType":"917","messageId":"918","endLine":2,"endColumn":16},{"ruleId":"915","severity":1,"message":"1104","line":2,"column":26,"nodeType":"917","messageId":"918","endLine":2,"endColumn":31},{"ruleId":"915","severity":1,"message":"1105","line":17,"column":8,"nodeType":"917","messageId":"918","endLine":17,"endColumn":14},{"ruleId":"915","severity":1,"message":"1091","line":2,"column":27,"nodeType":"917","messageId":"918","endLine":2,"endColumn":36},{"ruleId":"915","severity":1,"message":"1092","line":7,"column":14,"nodeType":"917","messageId":"918","endLine":7,"endColumn":18},{"ruleId":"915","severity":1,"message":"1106","line":50,"column":7,"nodeType":"917","messageId":"918","endLine":50,"endColumn":10},{"ruleId":"915","severity":1,"message":"1094","line":51,"column":7,"nodeType":"917","messageId":"918","endLine":51,"endColumn":14},{"ruleId":"915","severity":1,"message":"1107","line":54,"column":10,"nodeType":"917","messageId":"918","endLine":54,"endColumn":18},{"ruleId":"915","severity":1,"message":"1108","line":54,"column":20,"nodeType":"917","messageId":"918","endLine":54,"endColumn":31},{"ruleId":"915","severity":1,"message":"1109","line":121,"column":9,"nodeType":"917","messageId":"918","endLine":121,"endColumn":18},{"ruleId":"1110","severity":1,"message":"1111","line":291,"column":59,"nodeType":"1030","messageId":"1112","endLine":291,"endColumn":60},{"ruleId":"915","severity":1,"message":"944","line":21,"column":9,"nodeType":"917","messageId":"918","endLine":21,"endColumn":15},{"ruleId":"915","severity":1,"message":"1078","line":37,"column":11,"nodeType":"917","messageId":"918","endLine":37,"endColumn":17},{"ruleId":"915","severity":1,"message":"1079","line":37,"column":19,"nodeType":"917","messageId":"918","endLine":37,"endColumn":24},{"ruleId":"915","severity":1,"message":"972","line":53,"column":9,"nodeType":"917","messageId":"918","endLine":53,"endColumn":22},{"ruleId":"915","severity":1,"message":"1113","line":72,"column":11,"nodeType":"917","messageId":"918","endLine":72,"endColumn":19},{"ruleId":"915","severity":1,"message":"972","line":57,"column":9,"nodeType":"917","messageId":"918","endLine":57,"endColumn":22},{"ruleId":"915","severity":1,"message":"972","line":87,"column":9,"nodeType":"917","messageId":"918","endLine":87,"endColumn":22},{"ruleId":"949","severity":1,"message":"950","line":199,"column":41,"nodeType":"951","messageId":"952","endLine":199,"endColumn":43},{"ruleId":"949","severity":1,"message":"950","line":212,"column":47,"nodeType":"951","messageId":"952","endLine":212,"endColumn":49},{"ruleId":"915","severity":1,"message":"1114","line":417,"column":23,"nodeType":"917","messageId":"918","endLine":417,"endColumn":28},{"ruleId":"915","severity":1,"message":"1115","line":2,"column":10,"nodeType":"917","messageId":"918","endLine":2,"endColumn":23},{"ruleId":"915","severity":1,"message":"1116","line":3,"column":16,"nodeType":"917","messageId":"918","endLine":3,"endColumn":23},{"ruleId":"915","severity":1,"message":"943","line":3,"column":25,"nodeType":"917","messageId":"918","endLine":3,"endColumn":31},{"ruleId":"915","severity":1,"message":"1117","line":3,"column":33,"nodeType":"917","messageId":"918","endLine":3,"endColumn":38},{"ruleId":"915","severity":1,"message":"1076","line":5,"column":10,"nodeType":"917","messageId":"918","endLine":5,"endColumn":22},{"ruleId":"915","severity":1,"message":"1118","line":6,"column":10,"nodeType":"917","messageId":"918","endLine":6,"endColumn":24},{"ruleId":"915","severity":1,"message":"1119","line":16,"column":8,"nodeType":"917","messageId":"918","endLine":16,"endColumn":16},{"ruleId":"915","severity":1,"message":"1120","line":23,"column":8,"nodeType":"917","messageId":"918","endLine":23,"endColumn":17},{"ruleId":"915","severity":1,"message":"1121","line":24,"column":8,"nodeType":"917","messageId":"918","endLine":24,"endColumn":21},{"ruleId":"915","severity":1,"message":"1122","line":26,"column":8,"nodeType":"917","messageId":"918","endLine":26,"endColumn":16},{"ruleId":"915","severity":1,"message":"1123","line":37,"column":8,"nodeType":"917","messageId":"918","endLine":37,"endColumn":15},{"ruleId":"915","severity":1,"message":"916","line":40,"column":9,"nodeType":"917","messageId":"918","endLine":40,"endColumn":16},{"ruleId":"915","severity":1,"message":"1033","line":41,"column":7,"nodeType":"917","messageId":"918","endLine":41,"endColumn":13},{"ruleId":"915","severity":1,"message":"1124","line":45,"column":7,"nodeType":"917","messageId":"918","endLine":45,"endColumn":17},{"ruleId":"915","severity":1,"message":"1125","line":98,"column":10,"nodeType":"917","messageId":"918","endLine":98,"endColumn":19},{"ruleId":"915","severity":1,"message":"1126","line":98,"column":21,"nodeType":"917","messageId":"918","endLine":98,"endColumn":33},{"ruleId":"915","severity":1,"message":"1127","line":130,"column":10,"nodeType":"917","messageId":"918","endLine":130,"endColumn":19},{"ruleId":"915","severity":1,"message":"1128","line":213,"column":13,"nodeType":"917","messageId":"918","endLine":213,"endColumn":20},{"ruleId":"955","severity":1,"message":"956","line":815,"column":17,"nodeType":"957","endLine":815,"endColumn":62},{"ruleId":"955","severity":1,"message":"956","line":820,"column":17,"nodeType":"957","endLine":820,"endColumn":65},{"ruleId":"1037","severity":1,"message":"1038","line":875,"column":15,"nodeType":"957","endLine":881,"endColumn":16},{"ruleId":"1037","severity":1,"message":"1038","line":884,"column":15,"nodeType":"957","endLine":890,"endColumn":16},{"ruleId":"955","severity":1,"message":"956","line":984,"column":17,"nodeType":"957","endLine":984,"endColumn":62},{"ruleId":"955","severity":1,"message":"956","line":988,"column":15,"nodeType":"957","endLine":988,"endColumn":64},{"ruleId":"1037","severity":1,"message":"1038","line":1106,"column":13,"nodeType":"957","endLine":1110,"endColumn":14},{"ruleId":"1037","severity":1,"message":"1038","line":1187,"column":15,"nodeType":"957","endLine":1195,"endColumn":16},{"ruleId":"1037","severity":1,"message":"1038","line":1210,"column":13,"nodeType":"957","endLine":1210,"endColumn":76},{"ruleId":"1037","severity":1,"message":"1038","line":1281,"column":15,"nodeType":"957","endLine":1289,"endColumn":16},{"ruleId":"1037","severity":1,"message":"1038","line":1313,"column":15,"nodeType":"957","endLine":1317,"endColumn":16},{"ruleId":"915","severity":1,"message":"1129","line":1343,"column":9,"nodeType":"917","messageId":"918","endLine":1343,"endColumn":15},{"ruleId":"932","severity":1,"message":"1130","line":1379,"column":6,"nodeType":"934","endLine":1379,"endColumn":8,"suggestions":"1131"},{"ruleId":"932","severity":1,"message":"1132","line":1383,"column":6,"nodeType":"934","endLine":1383,"endColumn":32,"suggestions":"1133"},{"ruleId":"955","severity":1,"message":"956","line":1405,"column":15,"nodeType":"957","endLine":1405,"endColumn":59},{"ruleId":"955","severity":1,"message":"956","line":1580,"column":19,"nodeType":"957","endLine":1580,"endColumn":54},{"ruleId":"955","severity":1,"message":"956","line":1582,"column":19,"nodeType":"957","endLine":1582,"endColumn":53},{"ruleId":"915","severity":1,"message":"1134","line":16,"column":10,"nodeType":"917","messageId":"918","endLine":16,"endColumn":19},{"ruleId":"915","severity":1,"message":"1135","line":16,"column":21,"nodeType":"917","messageId":"918","endLine":16,"endColumn":37},{"ruleId":"915","severity":1,"message":"994","line":22,"column":7,"nodeType":"917","messageId":"918","endLine":22,"endColumn":14},{"ruleId":"915","severity":1,"message":"963","line":213,"column":21,"nodeType":"917","messageId":"918","endLine":213,"endColumn":29},{"ruleId":"915","severity":1,"message":"1136","line":213,"column":31,"nodeType":"917","messageId":"918","endLine":213,"endColumn":37},{"ruleId":"1037","severity":1,"message":"1038","line":373,"column":36,"nodeType":"957","endLine":373,"endColumn":71},{"ruleId":"915","severity":1,"message":"1091","line":2,"column":27,"nodeType":"917","messageId":"918","endLine":2,"endColumn":36},{"ruleId":"915","severity":1,"message":"1137","line":3,"column":10,"nodeType":"917","messageId":"918","endLine":3,"endColumn":20},{"ruleId":"915","severity":1,"message":"1092","line":8,"column":14,"nodeType":"917","messageId":"918","endLine":8,"endColumn":18},{"ruleId":"915","severity":1,"message":"1091","line":1,"column":17,"nodeType":"917","messageId":"918","endLine":1,"endColumn":26},{"ruleId":"915","severity":1,"message":"1102","line":1,"column":38,"nodeType":"917","messageId":"918","endLine":1,"endColumn":44},{"ruleId":"915","severity":1,"message":"1103","line":2,"column":10,"nodeType":"917","messageId":"918","endLine":2,"endColumn":16},{"ruleId":"915","severity":1,"message":"1104","line":2,"column":26,"nodeType":"917","messageId":"918","endLine":2,"endColumn":31},{"ruleId":"915","severity":1,"message":"1138","line":2,"column":33,"nodeType":"917","messageId":"918","endLine":2,"endColumn":38},{"ruleId":"915","severity":1,"message":"1105","line":17,"column":8,"nodeType":"917","messageId":"918","endLine":17,"endColumn":14},{"ruleId":"915","severity":1,"message":"1139","line":18,"column":8,"nodeType":"917","messageId":"918","endLine":18,"endColumn":9},{"ruleId":"932","severity":1,"message":"1140","line":145,"column":6,"nodeType":"934","endLine":145,"endColumn":8,"suggestions":"1141"},{"ruleId":"932","severity":1,"message":"1142","line":152,"column":6,"nodeType":"934","endLine":152,"endColumn":19,"suggestions":"1143"},{"ruleId":"932","severity":1,"message":"1087","line":162,"column":6,"nodeType":"934","endLine":162,"endColumn":8,"suggestions":"1144"},{"ruleId":"915","severity":1,"message":"1145","line":2,"column":10,"nodeType":"917","messageId":"918","endLine":2,"endColumn":15},{"ruleId":"915","severity":1,"message":"1089","line":15,"column":10,"nodeType":"917","messageId":"918","endLine":15,"endColumn":12},{"ruleId":"915","severity":1,"message":"1105","line":28,"column":8,"nodeType":"917","messageId":"918","endLine":28,"endColumn":14},{"ruleId":"915","severity":1,"message":"1146","line":31,"column":18,"nodeType":"917","messageId":"918","endLine":31,"endColumn":24},{"ruleId":"932","severity":1,"message":"1147","line":76,"column":6,"nodeType":"934","endLine":76,"endColumn":21,"suggestions":"1148"},{"ruleId":"955","severity":1,"message":"956","line":120,"column":17,"nodeType":"957","endLine":120,"endColumn":74},{"ruleId":"955","severity":1,"message":"956","line":138,"column":21,"nodeType":"957","endLine":138,"endColumn":69},{"ruleId":"955","severity":1,"message":"956","line":158,"column":25,"nodeType":"957","endLine":165,"endColumn":27},{"ruleId":"915","severity":1,"message":"943","line":2,"column":10,"nodeType":"917","messageId":"918","endLine":2,"endColumn":16},{"ruleId":"915","severity":1,"message":"1149","line":2,"column":36,"nodeType":"917","messageId":"918","endLine":2,"endColumn":44},{"ruleId":"915","severity":1,"message":"1150","line":3,"column":10,"nodeType":"917","messageId":"918","endLine":3,"endColumn":22},{"ruleId":"915","severity":1,"message":"1146","line":24,"column":18,"nodeType":"917","messageId":"918","endLine":24,"endColumn":24},{"ruleId":"915","severity":1,"message":"1151","line":28,"column":10,"nodeType":"917","messageId":"918","endLine":28,"endColumn":17},{"ruleId":"915","severity":1,"message":"1152","line":28,"column":19,"nodeType":"917","messageId":"918","endLine":28,"endColumn":29},{"ruleId":"955","severity":1,"message":"956","line":63,"column":16,"nodeType":"957","endLine":63,"endColumn":41},{"ruleId":"955","severity":1,"message":"956","line":65,"column":16,"nodeType":"957","endLine":65,"endColumn":41},{"ruleId":"955","severity":1,"message":"956","line":67,"column":16,"nodeType":"957","endLine":67,"endColumn":41},{"ruleId":"955","severity":1,"message":"956","line":69,"column":16,"nodeType":"957","endLine":69,"endColumn":41},{"ruleId":"932","severity":1,"message":"1153","line":75,"column":3,"nodeType":"917","endLine":75,"endColumn":12,"suggestions":"1154"},{"ruleId":"915","severity":1,"message":"1091","line":1,"column":17,"nodeType":"917","messageId":"918","endLine":1,"endColumn":26},{"ruleId":"915","severity":1,"message":"1155","line":1,"column":28,"nodeType":"917","messageId":"918","endLine":1,"endColumn":36},{"ruleId":"915","severity":1,"message":"1102","line":1,"column":38,"nodeType":"917","messageId":"918","endLine":1,"endColumn":44},{"ruleId":"915","severity":1,"message":"1105","line":11,"column":8,"nodeType":"917","messageId":"918","endLine":11,"endColumn":14},{"ruleId":"915","severity":1,"message":"1139","line":12,"column":8,"nodeType":"917","messageId":"918","endLine":12,"endColumn":9},{"ruleId":"915","severity":1,"message":"1156","line":3,"column":10,"nodeType":"917","messageId":"918","endLine":3,"endColumn":24},{"ruleId":"915","severity":1,"message":"943","line":3,"column":3,"nodeType":"917","messageId":"918","endLine":3,"endColumn":9},{"ruleId":"915","severity":1,"message":"1157","line":4,"column":3,"nodeType":"917","messageId":"918","endLine":4,"endColumn":11},{"ruleId":"915","severity":1,"message":"1045","line":5,"column":3,"nodeType":"917","messageId":"918","endLine":5,"endColumn":8},{"ruleId":"915","severity":1,"message":"1046","line":7,"column":3,"nodeType":"917","messageId":"918","endLine":7,"endColumn":6},{"ruleId":"915","severity":1,"message":"1089","line":30,"column":10,"nodeType":"917","messageId":"918","endLine":30,"endColumn":12},{"ruleId":"915","severity":1,"message":"1158","line":43,"column":9,"nodeType":"917","messageId":"918","endLine":43,"endColumn":26},{"ruleId":"915","severity":1,"message":"1159","line":43,"column":28,"nodeType":"917","messageId":"918","endLine":43,"endColumn":46},{"ruleId":"915","severity":1,"message":"1160","line":43,"column":48,"nodeType":"917","messageId":"918","endLine":43,"endColumn":64},{"ruleId":"915","severity":1,"message":"1047","line":45,"column":16,"nodeType":"917","messageId":"918","endLine":45,"endColumn":20},{"ruleId":"915","severity":1,"message":"1048","line":51,"column":5,"nodeType":"917","messageId":"918","endLine":51,"endColumn":10},{"ruleId":"915","severity":1,"message":"1161","line":58,"column":10,"nodeType":"917","messageId":"918","endLine":58,"endColumn":18},{"ruleId":"915","severity":1,"message":"1162","line":58,"column":20,"nodeType":"917","messageId":"918","endLine":58,"endColumn":31},{"ruleId":"955","severity":1,"message":"956","line":136,"column":11,"nodeType":"957","endLine":143,"endColumn":13},{"ruleId":"955","severity":1,"message":"956","line":148,"column":13,"nodeType":"957","endLine":148,"endColumn":33},{"ruleId":"955","severity":1,"message":"956","line":196,"column":18,"nodeType":"957","endLine":196,"endColumn":47},{"ruleId":"955","severity":1,"message":"956","line":198,"column":18,"nodeType":"957","endLine":198,"endColumn":47},{"ruleId":"955","severity":1,"message":"956","line":200,"column":18,"nodeType":"957","endLine":200,"endColumn":47},{"ruleId":"955","severity":1,"message":"956","line":202,"column":18,"nodeType":"957","endLine":202,"endColumn":47},{"ruleId":"955","severity":1,"message":"956","line":226,"column":11,"nodeType":"957","endLine":233,"endColumn":13},{"ruleId":"955","severity":1,"message":"956","line":238,"column":13,"nodeType":"957","endLine":238,"endColumn":63},{"ruleId":"932","severity":1,"message":"1049","line":346,"column":6,"nodeType":"934","endLine":346,"endColumn":18,"suggestions":"1163"},{"ruleId":"932","severity":1,"message":"1164","line":354,"column":6,"nodeType":"934","endLine":354,"endColumn":15,"suggestions":"1165"},{"ruleId":"932","severity":1,"message":"1051","line":362,"column":6,"nodeType":"934","endLine":362,"endColumn":8,"suggestions":"1166"},{"ruleId":"915","severity":1,"message":"1074","line":5,"column":3,"nodeType":"917","messageId":"918","endLine":5,"endColumn":10},{"ruleId":"915","severity":1,"message":"1118","line":10,"column":10,"nodeType":"917","messageId":"918","endLine":10,"endColumn":24},{"ruleId":"915","severity":1,"message":"1167","line":28,"column":19,"nodeType":"917","messageId":"918","endLine":28,"endColumn":29},{"ruleId":"915","severity":1,"message":"1168","line":29,"column":21,"nodeType":"917","messageId":"918","endLine":29,"endColumn":33},{"ruleId":"915","severity":1,"message":"1169","line":30,"column":10,"nodeType":"917","messageId":"918","endLine":30,"endColumn":17},{"ruleId":"915","severity":1,"message":"1170","line":34,"column":19,"nodeType":"917","messageId":"918","endLine":34,"endColumn":29},{"ruleId":"932","severity":1,"message":"1087","line":83,"column":6,"nodeType":"934","endLine":83,"endColumn":8,"suggestions":"1171"},{"ruleId":"915","severity":1,"message":"1172","line":3,"column":3,"nodeType":"917","messageId":"918","endLine":3,"endColumn":7},{"ruleId":"915","severity":1,"message":"1116","line":4,"column":3,"nodeType":"917","messageId":"918","endLine":4,"endColumn":10},{"ruleId":"915","severity":1,"message":"943","line":5,"column":3,"nodeType":"917","messageId":"918","endLine":5,"endColumn":9},{"ruleId":"915","severity":1,"message":"1117","line":6,"column":3,"nodeType":"917","messageId":"918","endLine":6,"endColumn":8},{"ruleId":"1037","severity":1,"message":"1173","line":67,"column":11,"nodeType":"957","endLine":72,"endColumn":12},{"ruleId":"1028","severity":1,"message":"1174","line":135,"column":24,"nodeType":"1030","messageId":"1031","endLine":135,"endColumn":26},{"ruleId":"949","severity":1,"message":"950","line":157,"column":31,"nodeType":"951","messageId":"952","endLine":157,"endColumn":33},{"ruleId":"1028","severity":1,"message":"1029","line":165,"column":29,"nodeType":"1030","messageId":"1031","endLine":165,"endColumn":31},{"ruleId":"932","severity":1,"message":"1175","line":185,"column":6,"nodeType":"934","endLine":185,"endColumn":18,"suggestions":"1176"},{"ruleId":"915","severity":1,"message":"1067","line":355,"column":28,"nodeType":"917","messageId":"918","endLine":355,"endColumn":31},{"ruleId":"915","severity":1,"message":"1068","line":355,"column":33,"nodeType":"917","messageId":"918","endLine":355,"endColumn":35},{"ruleId":"915","severity":1,"message":"1069","line":355,"column":37,"nodeType":"917","messageId":"918","endLine":355,"endColumn":45},{"ruleId":"915","severity":1,"message":"1102","line":1,"column":38,"nodeType":"917","messageId":"918","endLine":1,"endColumn":44},{"ruleId":"915","severity":1,"message":"1172","line":5,"column":3,"nodeType":"917","messageId":"918","endLine":5,"endColumn":7},{"ruleId":"915","severity":1,"message":"1177","line":6,"column":3,"nodeType":"917","messageId":"918","endLine":6,"endColumn":13},{"ruleId":"915","severity":1,"message":"1149","line":13,"column":3,"nodeType":"917","messageId":"918","endLine":13,"endColumn":11},{"ruleId":"915","severity":1,"message":"1178","line":39,"column":8,"nodeType":"917","messageId":"918","endLine":39,"endColumn":18},{"ruleId":"915","severity":1,"message":"941","line":42,"column":8,"nodeType":"917","messageId":"918","endLine":42,"endColumn":15},{"ruleId":"915","severity":1,"message":"1146","line":45,"column":18,"nodeType":"917","messageId":"918","endLine":45,"endColumn":24},{"ruleId":"915","severity":1,"message":"958","line":55,"column":28,"nodeType":"917","messageId":"918","endLine":55,"endColumn":37},{"ruleId":"915","severity":1,"message":"1179","line":56,"column":58,"nodeType":"917","messageId":"918","endLine":56,"endColumn":76},{"ruleId":"915","severity":1,"message":"1180","line":60,"column":10,"nodeType":"917","messageId":"918","endLine":60,"endColumn":17},{"ruleId":"915","severity":1,"message":"1181","line":60,"column":19,"nodeType":"917","messageId":"918","endLine":60,"endColumn":29},{"ruleId":"915","severity":1,"message":"1182","line":68,"column":10,"nodeType":"917","messageId":"918","endLine":68,"endColumn":19},{"ruleId":"915","severity":1,"message":"1183","line":69,"column":10,"nodeType":"917","messageId":"918","endLine":69,"endColumn":25},{"ruleId":"915","severity":1,"message":"1184","line":69,"column":27,"nodeType":"917","messageId":"918","endLine":69,"endColumn":45},{"ruleId":"955","severity":1,"message":"956","line":160,"column":11,"nodeType":"957","endLine":160,"endColumn":29},{"ruleId":"955","severity":1,"message":"956","line":162,"column":11,"nodeType":"957","endLine":162,"endColumn":32},{"ruleId":"955","severity":1,"message":"956","line":166,"column":11,"nodeType":"957","endLine":166,"endColumn":29},{"ruleId":"955","severity":1,"message":"956","line":168,"column":11,"nodeType":"957","endLine":168,"endColumn":32},{"ruleId":"955","severity":1,"message":"956","line":172,"column":11,"nodeType":"957","endLine":172,"endColumn":30},{"ruleId":"955","severity":1,"message":"956","line":174,"column":11,"nodeType":"957","endLine":174,"endColumn":33},{"ruleId":"955","severity":1,"message":"956","line":178,"column":11,"nodeType":"957","endLine":178,"endColumn":30},{"ruleId":"955","severity":1,"message":"956","line":180,"column":11,"nodeType":"957","endLine":180,"endColumn":33},{"ruleId":"955","severity":1,"message":"956","line":184,"column":11,"nodeType":"957","endLine":184,"endColumn":29},{"ruleId":"955","severity":1,"message":"956","line":186,"column":11,"nodeType":"957","endLine":186,"endColumn":32},{"ruleId":"955","severity":1,"message":"956","line":190,"column":11,"nodeType":"957","endLine":190,"endColumn":29},{"ruleId":"955","severity":1,"message":"956","line":192,"column":11,"nodeType":"957","endLine":192,"endColumn":32},{"ruleId":"955","severity":1,"message":"956","line":196,"column":11,"nodeType":"957","endLine":196,"endColumn":29},{"ruleId":"955","severity":1,"message":"956","line":198,"column":11,"nodeType":"957","endLine":198,"endColumn":32},{"ruleId":"915","severity":1,"message":"1185","line":245,"column":9,"nodeType":"917","messageId":"918","endLine":245,"endColumn":21},{"ruleId":"932","severity":1,"message":"1186","line":279,"column":6,"nodeType":"934","endLine":279,"endColumn":18,"suggestions":"1187"},{"ruleId":"932","severity":1,"message":"1188","line":301,"column":6,"nodeType":"934","endLine":301,"endColumn":25,"suggestions":"1189"},{"ruleId":"932","severity":1,"message":"1190","line":332,"column":6,"nodeType":"934","endLine":332,"endColumn":13,"suggestions":"1191"},{"ruleId":"932","severity":1,"message":"1192","line":359,"column":6,"nodeType":"934","endLine":359,"endColumn":44,"suggestions":"1193"},{"ruleId":"932","severity":1,"message":"1194","line":370,"column":6,"nodeType":"934","endLine":370,"endColumn":17,"suggestions":"1195"},{"ruleId":"915","severity":1,"message":"1196","line":4,"column":5,"nodeType":"917","messageId":"918","endLine":4,"endColumn":10},{"ruleId":"1028","severity":1,"message":"1174","line":16,"column":16,"nodeType":"1030","messageId":"1031","endLine":16,"endColumn":18},{"ruleId":"1028","severity":1,"message":"1174","line":67,"column":16,"nodeType":"1030","messageId":"1031","endLine":67,"endColumn":18},{"ruleId":"1028","severity":1,"message":"1174","line":101,"column":16,"nodeType":"1030","messageId":"1031","endLine":101,"endColumn":18},{"ruleId":"915","severity":1,"message":"1139","line":4,"column":8,"nodeType":"917","messageId":"918","endLine":4,"endColumn":9},{"ruleId":"915","severity":1,"message":"1091","line":6,"column":10,"nodeType":"917","messageId":"918","endLine":6,"endColumn":19},{"ruleId":"915","severity":1,"message":"1117","line":4,"column":3,"nodeType":"917","messageId":"918","endLine":4,"endColumn":8},{"ruleId":"915","severity":1,"message":"1197","line":130,"column":32,"nodeType":"917","messageId":"918","endLine":130,"endColumn":48},{"ruleId":"915","severity":1,"message":"980","line":152,"column":15,"nodeType":"917","messageId":"918","endLine":152,"endColumn":28},{"ruleId":"915","severity":1,"message":"1136","line":351,"column":21,"nodeType":"917","messageId":"918","endLine":351,"endColumn":27},{"ruleId":"1037","severity":1,"message":"1038","line":517,"column":17,"nodeType":"957","endLine":517,"endColumn":54},{"ruleId":"1037","severity":1,"message":"1038","line":575,"column":17,"nodeType":"957","endLine":575,"endColumn":60},{"ruleId":"915","severity":1,"message":"1198","line":30,"column":9,"nodeType":"917","messageId":"918","endLine":30,"endColumn":16},"no-native-reassign",["1199"],"no-negated-in-lhs",["1200"],"no-unused-vars","'SubMenu' is assigned a value but never used.","Identifier","unusedVar","'storage' is assigned a value but never used.",["1199"],["1200"],"'devWidth' is assigned a value but never used.","'size' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'windowssize' is assigned a value but never used.","'timer' is assigned a value but never used.",["1199"],["1200"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["1201"],["1199"],["1200"],"'del' is defined but never used.","'get' is defined but never used.","'Close' is defined but never used.","'MyModal' is defined but never used.","'PhoneBook' is defined but never used.","'Button' is defined but never used.","'Option' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'patientId' is assigned a value but never used.","'age' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'disabled' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.",["1199"],["1200"],"'editInputValue' is assigned a value but never used.",["1199"],["1200"],"'windowsHeight' is assigned a value but never used.","'selectDeviceName' is assigned a value but never used.","'isClicleStudy' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.",["1199"],["1200"],"'connectionKey' is assigned a value but never used.","'selectRoleId' is assigned a value but never used.","'workplaceName' is assigned a value but never used.","'workplaceId' is assigned a value but never used.","'organizationId' is assigned a value but never used.","'setOrganizationId' is assigned a value but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["1202"],["1199"],["1200"],"'url' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.",["1199"],["1200"],"'num' is assigned a value but never used.","'wen1' is assigned a value but never used.","'placeholder1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1203","1204"],"Unnecessary escape character: \\-.",["1205","1206"],["1207","1208"],["1209","1210"],["1211","1212"],["1213","1214"],["1215","1216"],["1217","1218"],["1219","1220"],["1221","1222"],["1223","1224"],["1225","1226"],"'measuerStatus' is assigned a value but never used.","'birthday' is assigned a value but never used.","'weight' is assigned a value but never used.",["1227","1228"],["1229","1230"],["1231","1232"],["1233","1234"],"'address' is assigned a value but never used.","'displayName' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'addLogin' is defined but never used.","'MyIcon' is assigned a value but never used.","'isCode' is assigned a value but never used.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["1199"],["1200"],"'errPatientId' is assigned a value but never used.","'userImage' is assigned a value but never used.",["1199"],["1200"],"'Space' is defined but never used.","'Tag' is defined but never used.","'memo' is assigned a value but never used.","'hisHe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["1235"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["1236"],"'editInputIndex' is assigned a value but never used.","'patch' is defined but never used.","React Hook useEffect has missing dependencies: 'hardwareList' and 'selectHardwareInfo'. Either include them or remove the dependency array.",["1237"],"'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'mac' is assigned a value but never used.","'hardwareVersion' is assigned a value but never used.","'softwareVersion' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","'dataArr' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1238"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["1239"],"'message' is defined but never used.","'createFromIconfontCN' is defined but never used.","'SyncOutlined' is defined but never used.","'LoadingOutlined' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'chooseNum' is assigned a value but never used.","'postJson' is defined but never used.","'num07' is assigned a value but never used.",["1199"],["1200"],"React Hook useEffect has a missing dependency: 'hardwareInfo'. Either include it or remove the dependency array.",["1240"],"React Hook useEffect has missing dependencies: 'destroyOnClose' and 'width'. Either include them or remove the dependency array. If 'setIsdestroyOnClose' needs the current value of 'destroyOnClose', you can also switch to useReducer instead of useState and read 'destroyOnClose' in the reducer.",["1241"],"'px' is defined but never used.","'pX' is defined but never used.","'useEffect' is defined but never used.","'mTop' is defined but never used.","'MTop' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["1242"],"'devicesTitleHeight' is defined but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["1243"],"'useRef' is defined but never used.","'Layout' is defined but never used.","'Input' is defined but never used.","'moment' is defined but never used.","'mar' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'getBase64' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'isUnKnow' is assigned a value but never used.","'petId' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Popover' is defined but never used.","'Modal' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","'bluData' is assigned a value but never used.","'resize' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["1244"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1245"],"'checkUser' is defined but never used.","'deskRegistAWSSNS' is defined but never used.","'bounds' is assigned a value but never used.","'useHistory' is defined but never used.","'Radio' is defined but never used.","'_' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllPet'. Either include it or remove the dependency array.",["1246"],"React Hook useEffect has a missing dependency: 'searchPetByPetNameOrPatientId'. Either include it or remove the dependency array.",["1247"],["1248"],"'Image' is defined but never used.","'Header' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["1249"],"'Carousel' is defined but never used.","'PlusOutlined' is defined but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["1250"],"'useState' is defined but never used.","'ConfigProvider' is defined but never used.","'Progress' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'mellaConnectStatus' is assigned a value but never used.","'mellaMeasurePart' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.",["1251"],"React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["1252"],["1253"],"'setLoading' is assigned a value but never used.","'setBreedList' is assigned a value but never used.","'imageId' is assigned a value but never used.","'setBreedId' is assigned a value but never used.",["1254"],"'Menu' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["1255"],"'PageHeader' is defined but never used.","'redjinggao' is defined but never used.","'rulerConnectStatus' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'selectPetDetail' is assigned a value but never used.","'setSelectPetDetail' is assigned a value but never used.","'onClickModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["1256"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1257"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["1258"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["1259"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1260"],"'token' is assigned a value but never used.","'lastOrganization' is assigned a value but never used.","'_resend' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1261","fix":"1262"},{"desc":"1263","fix":"1264"},{"messageId":"1265","fix":"1266","desc":"1267"},{"messageId":"1268","fix":"1269","desc":"1270"},{"messageId":"1265","fix":"1271","desc":"1267"},{"messageId":"1268","fix":"1272","desc":"1270"},{"messageId":"1265","fix":"1273","desc":"1267"},{"messageId":"1268","fix":"1274","desc":"1270"},{"messageId":"1265","fix":"1275","desc":"1267"},{"messageId":"1268","fix":"1276","desc":"1270"},{"messageId":"1265","fix":"1277","desc":"1267"},{"messageId":"1268","fix":"1278","desc":"1270"},{"messageId":"1265","fix":"1279","desc":"1267"},{"messageId":"1268","fix":"1280","desc":"1270"},{"messageId":"1265","fix":"1281","desc":"1267"},{"messageId":"1268","fix":"1282","desc":"1270"},{"messageId":"1265","fix":"1283","desc":"1267"},{"messageId":"1268","fix":"1284","desc":"1270"},{"messageId":"1265","fix":"1285","desc":"1267"},{"messageId":"1268","fix":"1286","desc":"1270"},{"messageId":"1265","fix":"1287","desc":"1267"},{"messageId":"1268","fix":"1288","desc":"1270"},{"messageId":"1265","fix":"1289","desc":"1267"},{"messageId":"1268","fix":"1290","desc":"1270"},{"messageId":"1265","fix":"1291","desc":"1267"},{"messageId":"1268","fix":"1292","desc":"1270"},{"messageId":"1265","fix":"1293","desc":"1267"},{"messageId":"1268","fix":"1294","desc":"1270"},{"messageId":"1265","fix":"1295","desc":"1267"},{"messageId":"1268","fix":"1296","desc":"1270"},{"messageId":"1265","fix":"1297","desc":"1267"},{"messageId":"1268","fix":"1298","desc":"1270"},{"messageId":"1265","fix":"1299","desc":"1267"},{"messageId":"1268","fix":"1300","desc":"1270"},{"desc":"1301","fix":"1302"},{"desc":"1303","fix":"1304"},{"desc":"1305","fix":"1306"},{"desc":"1307","fix":"1308"},{"desc":"1309","fix":"1310"},{"desc":"1311","fix":"1312"},{"desc":"1313","fix":"1314"},{"desc":"1315","fix":"1316"},{"desc":"1317","fix":"1318"},{"desc":"1319","fix":"1320"},{"desc":"1321","fix":"1322"},{"desc":"1323","fix":"1324"},{"desc":"1325","fix":"1326"},{"desc":"1313","fix":"1327"},{"desc":"1328","fix":"1329"},{"desc":"1330","fix":"1331"},{"desc":"1301","fix":"1332"},{"desc":"1333","fix":"1334"},{"desc":"1303","fix":"1335"},{"desc":"1313","fix":"1336"},{"desc":"1337","fix":"1338"},{"desc":"1339","fix":"1340"},{"desc":"1341","fix":"1342"},{"desc":"1343","fix":"1344"},{"desc":"1345","fix":"1346"},{"desc":"1347","fix":"1348"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"1349","text":"1350"},"Update the dependencies array to be: [_getExam]",{"range":"1351","text":"1352"},"removeEscape",{"range":"1353","text":"1354"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1355","text":"1356"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1357","text":"1354"},{"range":"1358","text":"1356"},{"range":"1359","text":"1354"},{"range":"1360","text":"1356"},{"range":"1361","text":"1354"},{"range":"1362","text":"1356"},{"range":"1363","text":"1354"},{"range":"1364","text":"1356"},{"range":"1365","text":"1354"},{"range":"1366","text":"1356"},{"range":"1367","text":"1354"},{"range":"1368","text":"1356"},{"range":"1369","text":"1354"},{"range":"1370","text":"1356"},{"range":"1371","text":"1354"},{"range":"1372","text":"1356"},{"range":"1373","text":"1354"},{"range":"1374","text":"1356"},{"range":"1375","text":"1354"},{"range":"1376","text":"1356"},{"range":"1377","text":"1354"},{"range":"1378","text":"1356"},{"range":"1379","text":"1354"},{"range":"1380","text":"1356"},{"range":"1381","text":"1354"},{"range":"1382","text":"1356"},{"range":"1383","text":"1354"},{"range":"1384","text":"1356"},{"range":"1385","text":"1354"},{"range":"1386","text":"1356"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1387","text":"1388"},"Update the dependencies array to be: [storage.userId]",{"range":"1389","text":"1390"},"Update the dependencies array to be: [hardwareList, selectHardwareInfo, selectHardwareType]",{"range":"1391","text":"1392"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1393","text":"1394"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1395","text":"1396"},"Update the dependencies array to be: [selectHardwareType, hardwareList, hardwareInfo]",{"range":"1397","text":"1398"},"Update the dependencies array to be: [destroyOnClose, width]",{"range":"1399","text":"1400"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"1401","text":"1402"},"Update the dependencies array to be: [hardwareList]",{"range":"1403","text":"1404"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1405","text":"1406"},"Update the dependencies array to be: []",{"range":"1407","text":"1408"},"Update the dependencies array to be: [getAllPet]",{"range":"1409","text":"1410"},"Update the dependencies array to be: [searchPetByPetNameOrPatientId, searchValue]",{"range":"1411","text":"1412"},{"range":"1413","text":"1400"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1414","text":"1415"},"Add dependencies array: [callBack, timers]",{"range":"1416","text":"1417"},{"range":"1418","text":"1388"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1419","text":"1420"},{"range":"1421","text":"1390"},{"range":"1422","text":"1400"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1423","text":"1424"},"Update the dependencies array to be: [finishScan, inputIndex, newData]",{"range":"1425","text":"1426"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1427","text":"1428"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1429","text":"1430"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"1431","text":"1432"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"1433","text":"1434"},[4384,4401],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[9946,9948],"[_getExam]",[66004,66005],"",[66004,66004],"\\",[66110,66111],[66110,66110],[66932,66933],[66932,66932],[67038,67039],[67038,67038],[67875,67876],[67875,67875],[67981,67982],[67981,67981],[69252,69253],[69252,69252],[69358,69359],[69358,69358],[70142,70143],[70142,70142],[70248,70249],[70248,70248],[71125,71126],[71125,71125],[71231,71232],[71231,71231],[95297,95298],[95297,95297],[95403,95404],[95403,95403],[95973,95974],[95973,95973],[96079,96080],[96079,96079],[12700,12712],"[getPetTemperatureData, petMessage]",[12900,12902],"[storage.userId]",[6999,7019],"[hardwareList, selectHardwareInfo, selectHardwareType]",[2172,2174],"[setReceiveBroadcastHardwareInfoFun]",[3441,3471],"[devicesList, receiveBroadcastHardwareInfo]",[1854,1889],"[selectHardwareType, hardwareList, hardwareInfo]",[2079,2081],"[destroyOnClose, width]",[859,861],"[initSelectVale, listArr]",[3213,3215],"[hardwareList]",[42486,42488],"[_noUSB, _send, blueSearch]",[42560,42586],"[]",[3888,3890],"[getAllPet]",[4021,4034],"[searchPetByPetNameOrPatientId, searchValue]",[4229,4231],[2356,2371],"[callBack, carouselIndex]",[2257,2257],", [callBack, timers]",[9059,9071],[9219,9228],"[getPetTemperatureData, reRender, saveNum]",[9416,9418],[2198,2200],[4834,4846],"[letterListCopy, phoneListCopy, searchText]",[7269,7281],"[finishScan, inputIndex, newData]",[7732,7751],"[inputIndex, rulerConfirmCount]",[8578,8585],"[petId, petLengthDataConvert, petMessage]",[9200,9238],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[9662,9673],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]"]