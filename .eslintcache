[{"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"2","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"3","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\App.js":"4","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx":"5","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx":"6","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\apiKey\\APIKey.jsx":"7","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx":"8","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx":"9","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx":"10","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx":"11","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx":"12","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx":"13","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\settings\\Settings.jsx":"14","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx":"15","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\addDevice\\AddDevice.jsx":"16","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx":"17","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js":"18","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil1.js":"19","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js":"20","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js":"21","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx":"22","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js":"23","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js":"24","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx":"25","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx":"26","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx":"27","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx":"28","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js":"29","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js":"30","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx":"31","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"32","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx":"33","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js":"34","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"35","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js":"36","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js":"37","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js":"38","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"39","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js":"40","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\home\\Home.jsx":"41","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"42","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\AddYuding.jsx":"43","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx":"44","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx":"45","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx":"46","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx":"47","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx":"48","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx":"49","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx":"50","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil2.js":"51","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js":"52","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js":"53","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js":"54","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\current.js":"55","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js":"56","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx":"57","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx":"58","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx":"59","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx":"60","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js":"61","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx":"62","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"63","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx":"64","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js":"65","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil5.js":"66","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"67","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx":"68","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectMella\\SelectMella.jsx":"69","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\SignIn.jsx":"70","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx":"71","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\help\\Help.jsx":"72","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\invite\\Invite.jsx":"73","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx":"74","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\px.js":"75","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\index.js":"76","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.js":"77","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"78","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx":"79","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js":"80","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\praviders\\Praviders.jsx":"81","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx":"82","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx":"83","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx":"84","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js":"85","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx":"86","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx":"87","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\userAction.js":"88","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx":"89","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js":"90","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx":"91"},{"size":35125,"mtime":1657530192370,"results":"92","hashOfConfig":"93"},{"size":54576,"mtime":1657530922999,"results":"94","hashOfConfig":"93"},{"size":6362,"mtime":1657530881460,"results":"95","hashOfConfig":"93"},{"size":7424,"mtime":1655467295798,"results":"96","hashOfConfig":"93"},{"size":3737,"mtime":1655168677392,"results":"97","hashOfConfig":"93"},{"size":7357,"mtime":1655168677429,"results":"98","hashOfConfig":"93"},{"size":8762,"mtime":1655168677387,"results":"99","hashOfConfig":"93"},{"size":38409,"mtime":1655793172098,"results":"100","hashOfConfig":"93"},{"size":141874,"mtime":1655377730766,"results":"101","hashOfConfig":"93"},{"size":6007,"mtime":1655168677501,"results":"102","hashOfConfig":"93"},{"size":3459,"mtime":1655168677395,"results":"103","hashOfConfig":"93"},{"size":6453,"mtime":1657269085098,"results":"104","hashOfConfig":"93"},{"size":13023,"mtime":1655168677410,"results":"105","hashOfConfig":"93"},{"size":26779,"mtime":1656498255349,"results":"106","hashOfConfig":"93"},{"size":12616,"mtime":1655168677474,"results":"107","hashOfConfig":"93"},{"size":13651,"mtime":1655168677451,"results":"108","hashOfConfig":"93"},{"size":13496,"mtime":1655168677468,"results":"109","hashOfConfig":"93"},{"size":152,"mtime":1655168677794,"results":"110","hashOfConfig":"93"},{"size":3460,"mtime":1655168677527,"results":"111","hashOfConfig":"93"},{"size":2445,"mtime":1655168677803,"results":"112","hashOfConfig":"93"},{"size":18925,"mtime":1655168677533,"results":"113","hashOfConfig":"93"},{"size":14696,"mtime":1656047826772,"results":"114","hashOfConfig":"93"},{"size":4641,"mtime":1656498255379,"results":"115","hashOfConfig":"93"},{"size":91,"mtime":1655467295880,"results":"116","hashOfConfig":"93"},{"size":8490,"mtime":1656067629344,"results":"117","hashOfConfig":"93"},{"size":7652,"mtime":1655467295863,"results":"118","hashOfConfig":"93"},{"size":1243,"mtime":1657530192378,"results":"119","hashOfConfig":"93"},{"size":1909,"mtime":1657505508782,"results":"120","hashOfConfig":"93"},{"size":2103,"mtime":1656498255375,"results":"121","hashOfConfig":"93"},{"size":89,"mtime":1655467295873,"results":"122","hashOfConfig":"93"},{"size":1232,"mtime":1657530960234,"results":"123","hashOfConfig":"93"},{"size":12463,"mtime":1657272421270,"results":"124","hashOfConfig":"93"},{"size":4595,"mtime":1655727114179,"results":"125","hashOfConfig":"93"},{"size":532,"mtime":1655467295881,"results":"126","hashOfConfig":"93"},{"size":12293,"mtime":1657530192346,"results":"127","hashOfConfig":"93"},{"size":3044,"mtime":1655168677819,"results":"128","hashOfConfig":"93"},{"size":3126,"mtime":1655168677530,"results":"129","hashOfConfig":"93"},{"size":80,"mtime":1657530192381,"results":"130","hashOfConfig":"93"},{"size":846,"mtime":1655168677772,"results":"131","hashOfConfig":"93"},{"size":356,"mtime":1655467295857,"results":"132","hashOfConfig":"93"},{"size":6456,"mtime":1657592310184,"results":"133","hashOfConfig":"93"},{"size":5178,"mtime":1655168677434,"results":"134","hashOfConfig":"93"},{"size":12945,"mtime":1655467295802,"results":"135","hashOfConfig":"93"},{"size":41509,"mtime":1655723373489,"results":"136","hashOfConfig":"93"},{"size":39743,"mtime":1655168677418,"results":"137","hashOfConfig":"93"},{"size":7651,"mtime":1655168677499,"results":"138","hashOfConfig":"93"},{"size":2615,"mtime":1655168677801,"results":"139","hashOfConfig":"93"},{"size":16452,"mtime":1655168677407,"results":"140","hashOfConfig":"93"},{"size":39382,"mtime":1656498255353,"results":"141","hashOfConfig":"93"},{"size":10219,"mtime":1655168677467,"results":"142","hashOfConfig":"93"},{"size":2667,"mtime":1655168677528,"results":"143","hashOfConfig":"93"},{"size":343,"mtime":1655168677793,"results":"144","hashOfConfig":"93"},{"size":1041,"mtime":1655168677775,"results":"145","hashOfConfig":"93"},{"size":249,"mtime":1655467295885,"results":"146","hashOfConfig":"93"},{"size":1150,"mtime":1655427981745,"results":"147","hashOfConfig":"93"},{"size":358,"mtime":1655467295910,"results":"148","hashOfConfig":"93"},{"size":5382,"mtime":1657265484940,"results":"149","hashOfConfig":"93"},{"size":8118,"mtime":1657530192355,"results":"150","hashOfConfig":"93"},{"size":13008,"mtime":1655467295861,"results":"151","hashOfConfig":"93"},{"size":5037,"mtime":1657530192372,"results":"152","hashOfConfig":"93"},{"size":71,"mtime":1655257026122,"results":"153","hashOfConfig":"93"},{"size":8152,"mtime":1656067360425,"results":"154","hashOfConfig":"93"},{"size":15336,"mtime":1656643617950,"results":"155","hashOfConfig":"93"},{"size":1365,"mtime":1655880805276,"results":"156","hashOfConfig":"93"},{"size":4449,"mtime":1655168677816,"results":"157","hashOfConfig":"93"},{"size":3658,"mtime":1655168677531,"results":"158","hashOfConfig":"93"},{"size":8196,"mtime":1655168677810,"results":"159","hashOfConfig":"93"},{"size":1232,"mtime":1657530988475,"results":"160","hashOfConfig":"93"},{"size":3973,"mtime":1655168677493,"results":"161","hashOfConfig":"93"},{"size":18524,"mtime":1657269098742,"results":"162","hashOfConfig":"93"},{"size":1678,"mtime":1655168677403,"results":"163","hashOfConfig":"93"},{"size":4924,"mtime":1655168677462,"results":"164","hashOfConfig":"93"},{"size":6972,"mtime":1655168677464,"results":"165","hashOfConfig":"93"},{"size":15939,"mtime":1655168677454,"results":"166","hashOfConfig":"93"},{"size":3099,"mtime":1657529778832,"results":"167","hashOfConfig":"93"},{"size":431,"mtime":1655168677773,"results":"168","hashOfConfig":"93"},{"size":8796,"mtime":1655467295870,"results":"169","hashOfConfig":"93"},{"size":56819,"mtime":1657266687368,"results":"170","hashOfConfig":"93"},{"size":12104,"mtime":1655467295852,"results":"171","hashOfConfig":"93"},{"size":1451,"mtime":1655168677805,"results":"172","hashOfConfig":"93"},{"size":6450,"mtime":1655168677482,"results":"173","hashOfConfig":"93"},{"size":17372,"mtime":1655168677415,"results":"174","hashOfConfig":"93"},{"size":4706,"mtime":1655168677413,"results":"175","hashOfConfig":"93"},{"size":11451,"mtime":1655168677459,"results":"176","hashOfConfig":"93"},{"size":1275,"mtime":1655168677817,"results":"177","hashOfConfig":"93"},{"size":3371,"mtime":1655168677813,"results":"178","hashOfConfig":"93"},{"size":3566,"mtime":1656065358361,"results":"179","hashOfConfig":"93"},{"size":293,"mtime":1655467295883,"results":"180","hashOfConfig":"93"},{"size":1562,"mtime":1657271071421,"results":"181","hashOfConfig":"93"},{"size":224,"mtime":1655467295875,"results":"182","hashOfConfig":"93"},{"size":2998,"mtime":1655168677390,"results":"183","hashOfConfig":"93"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"187"},"1wlgw0n",{"filePath":"188","messages":"189","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"193"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"193"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"187"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"193"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"202"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"193"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"193"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"193"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"202"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"193"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"193"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"261","messages":"262","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"202"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"202"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"275","messages":"276","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"193"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"292","messages":"293","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"193"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"202"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"193"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"202"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"202"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"193"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"327","usedDeprecatedRules":"202"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"193"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"335","messages":"336","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"193"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"202"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"202"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"355","messages":"356","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"373","usedDeprecatedRules":"193"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"193"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"393","messages":"394","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx",["399","400","401","402","403","404","405"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Heard from \"../../utils/heard/Heard\";\r\nimport { mTop, px, pX, win, timerFun } from \"../../utils/px\";\r\nimport HardAndPetsUI from \"./HardAndPetsUI\";\r\nimport HardWareTypeUI from \"./hardWareTypeUI\";\r\nimport TemperaturePage from \"../../pages/temperaturePage\";\r\nimport {\r\n  setHardwareList,\r\n  selectHardwareModalShowFun,\r\n  setIsHaveUsbDeviceFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n  setMellaDeviceIdFun,\r\n  setMellaMeasureNumFun,\r\n  setBiggieConnectStatusFun,\r\n  setBiggieBodyFatFun,\r\n  setBiggieBodyWeightFun,\r\n  setBiggieUnitFun,\r\n  setBiggieSameWeightCountFun,\r\n  setRulerConnectStatusFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConfirmCountFun,\r\n  setReceiveBroadcastHardwareInfoFun,\r\n} from \"../../store/actions\";\r\nimport \"./mainbody.less\";\r\nimport { message } from \"antd\";\r\nimport electronStore from \"../../utils/electronStore\";\r\nimport AddDevice from \"./AddDevice\";\r\nimport BiggiePage from \"../../pages/biggiePage\";\r\nimport ScanPage from \"../../pages/scanPage\";\r\nimport { compareObject } from \"../../utils/current\";\r\nimport { compareArray } from \"../../utils/current\";\r\nimport AllPets from \"../../pages/allPetsPage\";\r\nimport ScheduledPetPage from \"../../pages/scheduledPetsPage\";\r\nimport AddScheduledPet from \"../../pages/addScheduledPet\";\r\nimport ClininalStudy from \"../../pages/clinicalStudyPage\";\r\nimport CombineScales from \"../../pages/combineScales\";\r\nimport { Modal } from \"antd\";\r\n\r\nlet ipcRenderer = window.require(\"electron\").ipcRenderer;\r\nlet isMeasure = false; //是否正在测量,用于判断是否需要发送指定指令给USB,查看硬件是否连接\r\nlet initTime = 0; //初始化时间,用来计算底座没有回应温度计的时间差,如果时间差大于6秒代表断开连接\r\nlet num07 = 0; //接收到07命令行的次数,次数大于3跳出弹框\r\nlet firstEar = true; //为true代表一组数据测量完成,下组测量数据\r\nlet is97Time = null; //为了防抖，因为有时候断开连接和连接成功总是连续的跳出来，展示就会一直闪烁，因此引入时间差大于800ms才展示\r\nlet exchangeNum = 0; //奇数发送查询探头id指令，偶数发送询问配置\r\n\r\n//用于预测的东西\r\nlet clinicalYuce = [],\r\n  clinicalIndex = 0;\r\n\r\nlet storage = window.localStorage;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    //body部分窗口高度\r\n    bodyHeight: 0,\r\n    //本地保存的硬件类型数组,不包括Add这个类型\r\n    devicesTypeList: [],\r\n    //展示硬件类型的数组\r\n    showHardWareTypeList: [],\r\n    //是否有USB设备\r\n    isHaveUsbDevice: true,\r\n    //mella温度计测量状态\r\n    mellaMeasureStatus: \"disconnected\", //connected,disconnected,isMeasuring,complete\r\n\r\n    //点击菜单的序号\r\n    clickMenuIndex: \"1\",\r\n    err07Visible: false,\r\n  };\r\n  componentDidMount() {\r\n    ipcRenderer.send(\"big\", win());\r\n    timerFun();\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n    //获取窗口高度\r\n    this.resize();\r\n    //react监听屏幕窗口改变\r\n    window.addEventListener(\"resize\", this.resize);\r\n\r\n    //获取设备类型\r\n    this.getDevicesType();\r\n\r\n    //检测USB设备发来的信息\r\n    ipcRenderer.on(\"sned\", this._send);\r\n    //检测是否有USB设备\r\n    ipcRenderer.on(\"noUSB\", this._noUSB);\r\n    //定时查看mella温度计是否与底座连接或断开\r\n    this._whether_to_connect_to_mella();\r\n\r\n    //获取本地设置\r\n    this.getLocalSetting();\r\n  }\r\n  componentWillUnmount() {\r\n    //组件销毁，取消监听\r\n    window.removeEventListener(\"resize\", this.resize);\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n    ipcRenderer.removeListener(\"sned\", this._send);\r\n    ipcRenderer.removeListener(\"noUSB\", this._noUSB);\r\n    this.detectTimer && clearInterval(this.detectTimer);\r\n    this.rulerTimer && clearTimeout(this.rulerTimer);\r\n  }\r\n  //检测到props里的hardwareList更新\r\n  UNSAFE_componentWillReceiveProps(prevProps) {\r\n    //对比props里的hardwareList和state里的hardwareList是否相同\r\n\r\n    if (!compareArray(prevProps.hardwareList, this.state.devicesTypeList)) {\r\n      let showHardWareTypeList = [].concat(prevProps.hardwareList);\r\n      showHardWareTypeList.push({\r\n        type: \"add\",\r\n        devices: [],\r\n      });\r\n      this.setState({\r\n        devicesTypeList: prevProps.hardwareList,\r\n        showHardWareTypeList,\r\n      });\r\n    }\r\n    if (!compareObject(prevProps.menuNum, this.state.clickMenuIndex)) {\r\n      this.setState({\r\n        clickMenuIndex: prevProps.menuNum,\r\n      });\r\n    }\r\n  }\r\n\r\n  changeFenBianLv = (e) => {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    // ipcRenderer.send('small')\r\n    ipcRenderer.send(\"big\", win());\r\n    this.setState({});\r\n  };\r\n  //获取本地设置\r\n  getLocalSetting = () => {\r\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\r\n    if (!hardSet) {\r\n      let settings = {\r\n        isHua: true,\r\n        is15: true,\r\n        self_tarting: false, //自启动\r\n        isBacklight: true,\r\n        isBeep: true,\r\n        backlightTimer: { length: 140, number: \"45\" },\r\n        autoOff: { length: 0, number: \"30\" },\r\n      };\r\n      electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\r\n    }\r\n  };\r\n  //检测USB设备发来的信息\r\n  _send = (e, data) => {\r\n    // console.log('检测USB设备发来的信息', data)\r\n    //data就是测量的数据，是十进制的数字\r\n    this.command(data)();\r\n  };\r\n  //监听是否有USB设备,true代表没有USB设备，false代表有USB设备\r\n  _noUSB = (e, data) => {\r\n    if (data === false) {\r\n      message.destroy();\r\n    } else {\r\n      if (this.state.isHaveUsbDevice) {\r\n        message.destroy();\r\n        message.error(\"The base is not detected. Please insert the base\", 0);\r\n      }\r\n    }\r\n    if (data === this.props.isHaveUsbDevice) {\r\n      this.props.setIsHaveUsbDeviceFun(!data);\r\n    }\r\n    if (data === this.state.isHaveUsbDevice) {\r\n      this.setState({\r\n        isHaveUsbDevice: !data,\r\n      });\r\n    }\r\n  };\r\n  //监听mella温度计是否与底座连接或断开\r\n  _whether_to_connect_to_mella = () => {\r\n    console.log(\"监听mella温度计是否与底座连接或断开\");\r\n    message.destroy();\r\n    this.detectTimer && clearInterval(this.detectTimer);\r\n    //2秒检测一次\r\n    this.detectTimer = setInterval(() => {\r\n      exchangeNum++;\r\n      //如果正在测量或者没有USB设备，不检测\r\n      if (isMeasure || !this.state.isHaveUsbDevice) {\r\n        return;\r\n      }\r\n      if (exchangeNum % 2 === 0) {\r\n        //让底座发送查询温度计信息指令\r\n        ipcRenderer.send(\"usbdata\", { command: \"07\", arr: [\"5A\"] });\r\n      } else {\r\n        ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\r\n      }\r\n\r\n      //如果底座没有回应，则计算时间差,时间差大于5秒，则没与温度计连接\r\n      if (new Date() - initTime > 6000) {\r\n        this._disconnect_to_mella();\r\n      } else {\r\n      }\r\n    }, 2000);\r\n  };\r\n  //底座与温度计断开连接\r\n  _disconnect_to_mella = () => {\r\n    let { setMellaConnectStatusFun, mellaConnectStatus, setMellaDeviceIdFun } =\r\n      this.props;\r\n    if (mellaConnectStatus !== \"disconnected\") {\r\n      setMellaConnectStatusFun(\"disconnected\");\r\n    }\r\n    setMellaDeviceIdFun(\"\");\r\n  };\r\n  //底座与温度计连接\r\n  _connect_to_mella = () => {\r\n    let { setMellaConnectStatusFun, mellaConnectStatus } = this.props;\r\n    if (mellaConnectStatus !== \"connected\") {\r\n      setMellaConnectStatusFun(\"connected\");\r\n    }\r\n  };\r\n\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  command = (newArr) => {\r\n    let dataArr1 = newArr.map((item) => {\r\n      if (item.toString(16).length < 2) {\r\n        return \"0\" + item.toString(16);\r\n      } else {\r\n        return item.toString(16);\r\n      }\r\n    });\r\n    //除了255,其他都是温度计的数据\r\n    let {\r\n      setMellaConnectStatusFun,\r\n      setMellaMeasureValueFun,\r\n      setMellaPredictValueFun,\r\n      setMellaMeasurePartFun,\r\n      mellaMeasurePart,\r\n      mellaConnectStatus,\r\n      setBiggieBodyFatFun,\r\n      setBiggieBodyWeightFun,\r\n      setBiggieConnectStatusFun,\r\n      setBiggieUnitFun,\r\n      setBiggieSameWeightCountFun,\r\n    } = this.props;\r\n    let {\r\n      biggieConnectStatus,\r\n      biggieBodyFat,\r\n      biggieBodyWeight,\r\n      biggieUnit,\r\n      biggieSameWeightCount,\r\n    } = this.props.hardwareReduce;\r\n\r\n    const instruction = [\r\n      209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 194, 7, 99, 255, 182,\r\n    ];\r\n\r\n    if (newArr[2] !== 7 && newArr[2] !== 255 && newArr[2] !== 182) {\r\n      initTime = new Date();\r\n      num07 = 0;\r\n      if (mellaConnectStatus === \"disconnected\") {\r\n        this._connect_to_mella();\r\n      }\r\n    } else {\r\n      num07++;\r\n    }\r\n\r\n    const commandArr = {\r\n      209: () => {\r\n        //腋温\r\n        //第一次测量去获取探头ID\r\n        if (firstEar) {\r\n          firstEar = false;\r\n          console.log(\"去获取探头id\");\r\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\r\n          //重新测量,清空预测值\r\n          clinicalYuce = [];\r\n          clinicalIndex = 0;\r\n        }\r\n        let temp1 = parseFloat(`${dataArr1[3]}.${dataArr1[4]}`);\r\n        let temp0 = parseFloat(`${dataArr1[5]}.${dataArr1[6]}`);\r\n        let Temp = temp0;\r\n        if (\r\n          Temp === 24.7 ||\r\n          Temp === 0 ||\r\n          Temp === null ||\r\n          Temp === undefined\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        let dataS = {\r\n          sample: clinicalIndex++,\r\n          data0: temp0,\r\n          data1: temp1,\r\n        };\r\n        clinicalYuce.push(dataS);\r\n        if (clinicalYuce.length >= 30) {\r\n          setMellaPredictValueFun(clinicalYuce);\r\n        }\r\n        setMellaMeasureValueFun(Temp);\r\n        if (mellaConnectStatus !== \"isMeasuring\") {\r\n          setMellaConnectStatusFun(\"isMeasuring\");\r\n        }\r\n\r\n        if (mellaMeasurePart !== \"腋温\" || mellaMeasurePart !== \"肛温\") {\r\n          setMellaMeasurePartFun(\"腋温\");\r\n        }\r\n        this.props.setMellaMeasureNumFun(this.props.mellaMeasureNum + 1);\r\n      },\r\n      208: () => {\r\n        //耳温\r\n\r\n        if (firstEar) {\r\n          firstEar = false;\r\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\r\n          //重新测量,清空预测值\r\n          clinicalYuce = [];\r\n          clinicalIndex = 0;\r\n        }\r\n        //现在探头0可能不存在，所以把探头0改为探头1\r\n        let temp0 = parseFloat(`${dataArr1[7]}.${dataArr1[8]}`);\r\n        let Temp = temp0;\r\n        setMellaMeasureValueFun(Temp);\r\n        if (mellaConnectStatus !== \"isMeasuring\") {\r\n          setMellaConnectStatusFun(\"isMeasuring\");\r\n        }\r\n\r\n        if (mellaMeasurePart !== \"耳温\") {\r\n          setMellaMeasurePartFun(\"耳温\");\r\n        }\r\n      },\r\n      193: () => {\r\n        //指令结束\\自动结束后\\温度计收到预测数据后温度计返回值,结束后可能还会粘一组测量中的数据\r\n        //为了清除黏贴的数据，使用定时器\r\n        this.time193 && clearTimeout(this.time193);\r\n        this.time193 = setTimeout(() => {\r\n          firstEar = true;\r\n          if (mellaConnectStatus !== \"complete\") {\r\n            setMellaConnectStatusFun(\"complete\");\r\n          }\r\n\r\n          let { units } = this.state;\r\n          let Temp = this.props.mellaMeasureValue;\r\n          let temp =\r\n            units === \"℉\"\r\n              ? parseInt((Temp * 1.8 + 32) * 10) / 10\r\n              : Temp.toFixed(1);\r\n          if (this.props.selectHardwareType === \"mellaPro\") {\r\n            ipcRenderer.send(\"keyboardWriting\", temp);\r\n          }\r\n          this.time193 && clearTimeout(this.time193);\r\n        }, 500);\r\n      },\r\n      194: () => {\r\n        //硬件收到机器学习结果并停止测量，\r\n        this.time193 && clearTimeout(this.time193);\r\n        console.log(\"---机器学习\", newArr);\r\n        if (mellaConnectStatus !== \"complete\") {\r\n          setMellaConnectStatusFun(\"complete\");\r\n        }\r\n        const timer = setTimeout(() => {\r\n          setMellaMeasureValueFun(this.props.mellaPredictReturnValue);\r\n\r\n          firstEar = true;\r\n          if (mellaConnectStatus !== \"complete\") {\r\n            setMellaConnectStatusFun(\"complete\");\r\n          }\r\n\r\n          let { units } = this.state;\r\n          let Temp = this.props.mellaPredictReturnValue;\r\n          let temp =\r\n            units === \"℉\"\r\n              ? parseInt((Temp * 1.8 + 32) * 10) / 10\r\n              : Temp.toFixed(1);\r\n          if (this.props.selectHardwareType === \"mellaPro\") {\r\n            ipcRenderer.send(\"keyboardWriting\", temp);\r\n          }\r\n          clearTimeout(timer);\r\n        }, 80);\r\n        clinicalYuce = [];\r\n        clinicalIndex = 0;\r\n      },\r\n      192: () => {\r\n        //温度计收到40开始数据后返回的指令\r\n        switch (newArr[3]) {\r\n          case 90:\r\n            console.log(\"有探头，开始测量的返回指令·\");\r\n            break;\r\n          case 11:\r\n            console.log(\"没有探头，开始测量的返回值\");\r\n            break;\r\n        }\r\n      },\r\n      129: () => {\r\n        //返回硬件版本号\r\n        console.log(`返回的版本号为${newArr[3]}`);\r\n      },\r\n      135: () => {\r\n        //硬件的一些基本信息\r\n        /**\r\n         * ______________新版、旧版没法控制温度计__________________\r\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\r\n         * newArr[7] 无操作关机时间\r\n         * newArr[8] 背光时间\r\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\r\n         * newArr[10] 测量单位    01代表℃，00代表℉\r\n         */\r\n\r\n        let hardSet = electronStore.get(\r\n          `${storage.userId}-hardwareConfiguration`\r\n        );\r\n        if (!hardSet) {\r\n          hardSet = {\r\n            isHua: true,\r\n            is15: true,\r\n            self_tarting: false, //自启动\r\n            isBacklight: true,\r\n            isBeep: true,\r\n            backlightTimer: { length: 140, number: \"45\" },\r\n            autoOff: { length: 0, number: \"30\" },\r\n          };\r\n        }\r\n\r\n        let beep = hardSet.isBeep ? \"11\" : \"00\";\r\n        let unit = hardSet.isHua ? \"00\" : \"01\";\r\n\r\n        if (\r\n          dataArr1[7] === hardSet.autoOff.number &&\r\n          dataArr1[8] === hardSet.backlightTimer.number &&\r\n          dataArr1[9] === beep &&\r\n          dataArr1[10] === unit\r\n        ) {\r\n        } else {\r\n          console.log(\"不相同，去发送命令\");\r\n          let setArr = [\r\n            \"03\",\r\n            \"ed\",\r\n            \"07\",\r\n            \"dd\",\r\n            hardSet.autoOff.number,\r\n            hardSet.isBacklight ? hardSet.backlightTimer.number : \"00\",\r\n            hardSet.isBeep ? \"11\" : \"00\",\r\n            hardSet.isHua ? \"00\" : \"01\",\r\n          ];\r\n          ipcRenderer.send(\"usbdata\", { command: \"21\", arr: setArr });\r\n        }\r\n      },\r\n      238: () => {\r\n        //探头松动\r\n        console.log(\"探头松动\");\r\n        message.error(\r\n          \"The probe is loose, please re-install and measure again\",\r\n          5\r\n        );\r\n      },\r\n\r\n      98: () => {\r\n        //蓝牙连接断开\r\n        console.log(\r\n          \"断开连接---断开连接---断开连接---断开连接---断开连接---断开连接\"\r\n        );\r\n        firstEar = true;\r\n        // console.log(new Date() - is97Time);\r\n        if (new Date() - is97Time < 1300) {\r\n          return;\r\n        }\r\n        this._disconnect_to_mella();\r\n      },\r\n      97: () => {\r\n        //蓝牙连接\r\n        console.log(\r\n          \"连接成功---连接成功---连接成功---连接成功---连接成功---连接成功\"\r\n        );\r\n        this.getIdTimer && clearTimeout(this.getIdTimer);\r\n        this.getIdTimer = setTimeout(() => {\r\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\r\n          this.getIdTimer && clearTimeout(this.getIdTimer);\r\n        }, 50);\r\n\r\n\r\n        is97Time = new Date();\r\n        this._connect_to_mella();\r\n      },\r\n      177: () => {\r\n        //探头id\r\n        let dataArr1 = newArr.map((item) => {\r\n          if (item.toString(16).length < 2) {\r\n            return \"0\" + item.toString(16);\r\n          } else {\r\n            return item.toString(16);\r\n          }\r\n        });\r\n\r\n        let id = \"\";\r\n        for (let i = 3; i < dataArr1.length - 2; i++) {\r\n          id += dataArr1[i];\r\n        }\r\n        // console.log(id, dataArr1[7]);\r\n        setMellaDeviceIdFun(id);\r\n        // this.setState({\r\n        //   probeID: id,\r\n        //   petVitalTypeId: dataArr1[7]\r\n        // })\r\n        if (dataArr1[7] === \"01\") {\r\n          if (mellaMeasurePart !== \"腋温\") {\r\n            setMellaMeasurePartFun(\"腋温\");\r\n          }\r\n        } else if (dataArr1[7] === \"02\") {\r\n          if (mellaMeasurePart !== \"肛温\") {\r\n            setMellaMeasurePartFun(\"肛温\");\r\n          }\r\n        } else if (dataArr1[7] === \"03\") {\r\n          if (mellaMeasurePart !== \"耳温\") {\r\n            setMellaMeasurePartFun(\"耳温\");\r\n          }\r\n        }\r\n      },\r\n      7: () => {\r\n        //发什么收什么，需要去重新插拔底座\r\n        console.log(\"重新插拔底座\");\r\n        if (num07 === 3 && this.state.err07Visible === false) {\r\n          this.setState({\r\n            err07Visible: true,\r\n          });\r\n        }\r\n      },\r\n      // 255: () => {\r\n\r\n      // }\r\n      255: () => {\r\n        let length = newArr.length;\r\n        let frameLength = newArr[1]; //帧长\r\n        let itemLength = newArr[3] + 1; //数据位的长度   13\r\n        let dataIndex = 0;\r\n        let bluName = \"\";\r\n        let bluData = [];\r\n\r\n        while (itemLength < length && itemLength + 3 <= frameLength) {\r\n          let itemData = [];\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5]);\r\n          }\r\n          // console.log('--剪切的数据---', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              let str = \"\";\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                let item = parseInt(itemData[i], 16);\r\n                str += String.fromCharCode(item);\r\n              }\r\n              bluName = str;\r\n              // console.log('--蓝牙名称:', bluName);\r\n\r\n              break;\r\n\r\n            case 255:\r\n              bluData = itemData;\r\n              break;\r\n            case 7:\r\n              console.log(\"---UUID\");\r\n              break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              break;\r\n\r\n            case 3:\r\n              // console.log('----尺子的,不知道什么用');\r\n              break;\r\n\r\n            default:\r\n              console.log(\"直接跳出循环\");\r\n              return;\r\n          }\r\n          dataIndex = itemLength;\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\r\n        }\r\n        // console.log('硬件名称', bluName, '-----硬件数据', bluData);\r\n        let { setReceiveBroadcastHardwareInfoFun, hardwareReduce } = this.props;\r\n\r\n        let { receiveBroadcastHardwareInfo } = hardwareReduce;\r\n\r\n        if (bluName.indexOf(\"C19\") !== -1 && bluData.length > 10) {\r\n          let json = {\r\n            deviceType: \"biggie\",\r\n            macId: \"00:00:00:00:00:00\",\r\n            name: bluName,\r\n          };\r\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\r\n            setReceiveBroadcastHardwareInfoFun(json);\r\n          }\r\n\r\n          let weight = `0x${bluData[10]}${bluData[11]}`;\r\n          let impedance = `0x${bluData[12]}${bluData[13]}`;\r\n          let sendWeight = null;\r\n          //C19发送的体重值单位只是KG\r\n          try {\r\n            weight = parseInt(weight) / 100;\r\n            if (impedance) {\r\n              impedance = parseInt(impedance);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n          if (weight === biggieBodyWeight) {\r\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\r\n          } else {\r\n            setBiggieSameWeightCountFun(0);\r\n            setBiggieBodyWeightFun(weight);\r\n          }\r\n          if (impedance) {\r\n            setBiggieBodyFatFun(impedance);\r\n          }\r\n          if (biggieConnectStatus !== \"isMeasuring\") {\r\n            setBiggieConnectStatusFun(\"isMeasuring\");\r\n          }\r\n          if (biggieUnit !== \"kg\") {\r\n            setBiggieUnitFun(\"kg\");\r\n          }\r\n        } else if (bluName.indexOf(\"Mella Measure\") !== -1) {\r\n          let {\r\n            hardwareReduce,\r\n            setRulerConfirmCountFun,\r\n            setRulerConnectStatusFun,\r\n            setRulerMeasureValueFun,\r\n            setRulerUnitFun,\r\n          } = this.props;\r\n          let {\r\n            rulerConnectStatus,\r\n            rulerMeasureValue,\r\n            rulerUnit,\r\n            rulerConfirmCount,\r\n            receiveBroadcastHardwareInfo,\r\n          } = hardwareReduce;\r\n          // console.log('结束循环蓝牙名称', bluData)\r\n          let confirmBtn = bluData[8]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\r\n          let rulerUnitNum = parseInt(bluData[11], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\r\n          let newVal = null; //为测量数值，和单位匹配对应\r\n          const ITEMINDEX = 6;\r\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\r\n          let mac = bluData[1];\r\n          for (let i = 2; i <= 6; i++) {\r\n            mac += `:${bluData[i]}`;\r\n          }\r\n          let json = {\r\n            deviceType: \"tape\",\r\n            macId: mac,\r\n            name: bluName,\r\n          };\r\n\r\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\r\n            setReceiveBroadcastHardwareInfoFun(json);\r\n          }\r\n\r\n          if (units !== rulerUnit) {\r\n            setRulerUnitFun(units);\r\n          }\r\n          if (rulerConnectStatus !== \"isMeasuring\") {\r\n            setRulerConnectStatusFun(\"isMeasuring\");\r\n          }\r\n          this.rulerTimer && clearTimeout(this.rulerTimer);\r\n          this.rulerTimer = setTimeout(() => {\r\n            setRulerConnectStatusFun(\"disconnected\");\r\n          }, 5000);\r\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\r\n          let num1 = bluData[9];\r\n          let num2 = bluData[10];\r\n          let num = getVal(num1, num2);\r\n          try {\r\n            newVal = parseFloat(num);\r\n            if (rulerUnitNum === 17) {\r\n              newVal = newVal.toFixed(2);\r\n            } else {\r\n              newVal = newVal.toFixed(1);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n\r\n          function getVal(shi, xiaoshuo) {\r\n            let num1 = parseInt(shi, 16);\r\n            let num2 = parseInt(xiaoshuo, 16);\r\n            return `${num1}.${num2}`;\r\n          }\r\n          if (newVal !== rulerMeasureValue) {\r\n            setRulerMeasureValueFun(newVal);\r\n          }\r\n\r\n          //点击了确认按钮\r\n\r\n          if (\r\n            confirmBtn[1] === \"2\" &&\r\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\r\n            confirmBtn[0] !== null\r\n          ) {\r\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\r\n          }\r\n        } else if (bluName.indexOf(\"Biggie\") !== -1 && bluData.length > 10) {\r\n          function getVal(shi) {\r\n            if (`${shi}`.length < 2) {\r\n              return `0${shi}`;\r\n            }\r\n            return `${shi}`;\r\n          }\r\n\r\n          let newArr = bluData;\r\n\r\n          let mac = bluData[1];\r\n          for (let i = 2; i <= 6; i++) {\r\n            mac += `:${bluData[i]}`;\r\n          }\r\n\r\n          let json = {\r\n            deviceType: \"biggie\",\r\n            macId: mac,\r\n            name: bluName,\r\n          };\r\n\r\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\r\n            setReceiveBroadcastHardwareInfoFun(json);\r\n          }\r\n          //定义体重的控制字符\r\n          let weightControl = newArr[8];\r\n          //定义体重的值\r\n          let weight = `${getVal(newArr[9].toString(16))}${getVal(\r\n            newArr[10].toString(16)\r\n          )}`;\r\n          weight = parseInt(weight, 16);\r\n          //定义体脂值\r\n          let impedance = `${getVal(newArr[12].toString(16))}${getVal(\r\n            newArr[13].toString(16)\r\n          )}`;\r\n          impedance = parseInt(impedance, 16);\r\n          let arr11 = getVal(newArr[11].toString(16));\r\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\r\n\r\n          let weightUnits = arr11[1] === \"1\" ? \"lb\" : \"kg\";\r\n          let biggieStatus = \"isMeasuring\";\r\n          switch (weightControl) {\r\n            case 1:\r\n              biggieStatus = \"connected\";\r\n              break;\r\n            case 2:\r\n              biggieStatus = \"isMeasuring\";\r\n              break;\r\n            case 3:\r\n              biggieStatus = \"complete\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          if (biggieStatus !== biggieConnectStatus) {\r\n            setBiggieConnectStatusFun(biggieStatus);\r\n          }\r\n          if (weightUnits !== biggieUnit) {\r\n            setBiggieUnitFun(weightUnits);\r\n          }\r\n          if (weight !== biggieBodyWeight) {\r\n            setBiggieBodyWeightFun(weight);\r\n            setBiggieSameWeightCountFun(0);\r\n          } else {\r\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\r\n          }\r\n          if (impedance !== biggieBodyFat) {\r\n            setBiggieBodyFatFun(impedance);\r\n          }\r\n        }\r\n      },\r\n      182: () => {\r\n        console.log(\"打开了底座通信\");\r\n      },\r\n    };\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]];\r\n    } else {\r\n      return () => {\r\n        console.log(\"没有控制命令\", commandArr);\r\n      };\r\n    }\r\n  };\r\n\r\n  testCheck = (arr) => {\r\n    if (arr.length < 7) {\r\n      return false;\r\n    }\r\n    let i = 7;\r\n    let checkFloag = arr[i];\r\n\r\n    for (i = 8; i < arr.length - 2; i++) {\r\n      checkFloag = checkFloag ^ arr[i];\r\n    }\r\n    return checkFloag;\r\n  };\r\n  getMac = (arr) => {\r\n    // console.log(arr);\r\n    let str = arr[1].toString(16);\r\n    if (str.length === 1) {\r\n      str = \"0\" + str;\r\n    }\r\n    for (let i = 2; i < 7; i++) {\r\n      let item = arr[i].toString(16);\r\n      if (item.length === 1) {\r\n        item = \"0\" + item;\r\n      }\r\n      str += `:${item}`;\r\n      // }\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n  //监听屏幕窗口改变\r\n  resize = () => {\r\n    let { offsetWidth, offsetHeight } = this.mainbody;\r\n    // console.log('resize', this.mainbody, { offsetWidth, offsetHeight });\r\n    if (offsetHeight !== this.state.bodyHeight) {\r\n      this.setState({\r\n        bodyHeight: offsetHeight - px(50),\r\n      });\r\n    }\r\n  };\r\n  //获取设备类型\r\n  getDevicesType = () => {\r\n    // let devicesTypeList = [\r\n    //   {\r\n    //     type: 'mellaPro',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'mellaPro',\r\n    //         mac: '',\r\n    //         deviceType: 'mellaPro',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'biggie',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'biggie',\r\n    //         mac: '',\r\n    //         deviceType: 'biggie',\r\n    //         examRoom: '',\r\n    //       },\r\n    //       {\r\n    //         name: 'biggie002',\r\n    //         mac: '1253',\r\n    //         deviceType: 'biggie',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'otterEQ',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'otterEQ',\r\n    //         mac: '',\r\n    //         deviceType: 'otterEQ',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n\r\n    //   {\r\n    //     type: 'rfid',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'rfid',\r\n    //         mac: '',\r\n    //         deviceType: 'rfid',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'tape',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'tape',\r\n    //         mac: '',\r\n    //         deviceType: 'tape',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'maeBowl',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'maeBowl',\r\n    //         mac: '',\r\n    //         deviceType: 'maeBowl',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   }\r\n    // ]\r\n\r\n    let devicesTypeList =\r\n      electronStore.get(\r\n        `${storage.lastOrganization}-${storage.userId}-devicesTypeList`\r\n      ) || [];\r\n    // console.log(\"获取的设22222备列表\", devicesTypeList);\r\n    if (devicesTypeList.length === 0) {\r\n      devicesTypeList.push({\r\n        type: \"mellaPro\",\r\n        devices: [\r\n          {\r\n            name: \"mellaPro\",\r\n            mac: \"\",\r\n            deviceType: \"mellaPro\",\r\n            examRoom: \"\",\r\n          },\r\n        ],\r\n      });\r\n      devicesTypeList.push({\r\n        type: \"biggie\",\r\n        devices: [\r\n          {\r\n            name: \"biggie\",\r\n            mac: \"\",\r\n            deviceType: \"biggie\",\r\n            examRoom: \"\",\r\n          },\r\n          {\r\n            name: \"biggie002\",\r\n            mac: \"1253\",\r\n            deviceType: \"biggie\",\r\n            examRoom: \"\",\r\n          },\r\n        ],\r\n      });\r\n      devicesTypeList.push({\r\n        type: \"tape\",\r\n        devices: [\r\n          {\r\n            name: \"tape\",\r\n            mac: \"45264\",\r\n            deviceType: \"tape\",\r\n            examRoom: \"\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n\r\n    let hardList = [].concat(devicesTypeList);\r\n    this.props.setHardwareList(hardList);\r\n    let showHardWareTypeList = [].concat(devicesTypeList);\r\n    showHardWareTypeList.push({\r\n      type: \"add\",\r\n      devices: [],\r\n    });\r\n\r\n    this.setState({\r\n      devicesTypeList,\r\n      showHardWareTypeList,\r\n    });\r\n  };\r\n  body = () => {\r\n    let { selectHardwareType } = this.props;\r\n\r\n    let { bodyHeight, clickMenuIndex } = this.state;\r\n    let measurePage = null;\r\n    switch (clickMenuIndex) {\r\n      case \"1\":\r\n        if (electronStore.get(`${storage.userId}-isClical`)) {\r\n          return (\r\n            <>\r\n              <HardAndPetsUI bodyHeight={bodyHeight} />\r\n              <ClininalStudy bodyHeight={bodyHeight} />\r\n            </>\r\n          );\r\n        } else {\r\n          switch (selectHardwareType) {\r\n            case \"mellaPro\":\r\n              measurePage = <TemperaturePage />;\r\n\r\n              break;\r\n            case \"biggie\":\r\n              measurePage = <BiggiePage />;\r\n              break;\r\n\r\n            case \"tape\":\r\n              measurePage = <ScanPage />;\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n          if (selectHardwareType === \"add\") {\r\n            return <AddDevice bodyHeight={bodyHeight} />;\r\n          } else {\r\n            return (\r\n              <>\r\n                <HardAndPetsUI bodyHeight={bodyHeight} />\r\n                {measurePage}\r\n              </>\r\n            );\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      case \"2\":\r\n        return <AllPets bodyHeight={bodyHeight} />;\r\n      case \"CombineScales\":\r\n        return <CombineScales />;\r\n      case \"AddDevice\":\r\n        return <AddDevice bodyHeight={bodyHeight} />;\r\n      case \"3\":\r\n        return <ScheduledPetPage bodyHeight={bodyHeight} />;\r\n\r\n      case \"AddScheduledPet\":\r\n        return <AddScheduledPet bodyHeight={bodyHeight} />;\r\n      case \"6\":\r\n        return (\r\n          <>\r\n            <HardAndPetsUI bodyHeight={bodyHeight} />\r\n            <ClininalStudy bodyHeight={bodyHeight} />\r\n          </>\r\n        );\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { bodyHeight } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"flex\"\r\n        id=\"mainbody\"\r\n        ref={(val) => (this.mainbody = val)}\r\n        onClick={() => {\r\n          if (this.props.selectHardwareModalShowFun) {\r\n            this.props.selectHardwareModalShowFun(false);\r\n          }\r\n        }}\r\n      >\r\n        <Heard />\r\n        <div className=\"mainbody-body\">\r\n          <HardWareTypeUI\r\n            bodyHeight={bodyHeight}\r\n            devicesTypeList={this.state.showHardWareTypeList}\r\n          />\r\n          {this.body()}\r\n        </div>\r\n        <Modal\r\n          visible={this.state.err07Visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          closable={false}\r\n          footer={[]}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"vetPrifileModal\"\r\n        >\r\n          <div id=\"vetPrifileModal\">\r\n            <div className=\"title\">prompt</div>\r\n\r\n            <div className=\"text\">Please re-plug the base device</div>\r\n\r\n            <div\r\n              className=\"btn\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n            >\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    err07Visible: false,\r\n                  });\r\n                  num07 = 0;\r\n                }}\r\n              >\r\n                OK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({\r\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\r\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\r\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\r\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\r\n    mellaMeasurePart: state.hardwareReduce.mellaMeasurePart,\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    hardwareReduce: state.hardwareReduce,\r\n    hardwareList: state.hardwareReduce.hardwareList,\r\n    hardwareInfo: state.hardwareReduce.selectHardwareInfo,\r\n    menuNum: state.userReduce.menuNum,\r\n    mellaPredictReturnValue: state.hardwareReduce.mellaPredictReturnValue,\r\n  }),\r\n  {\r\n    setHardwareList,\r\n    selectHardwareModalShowFun,\r\n    setIsHaveUsbDeviceFun,\r\n\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n    setMellaDeviceIdFun,\r\n    setBiggieConnectStatusFun,\r\n    setBiggieBodyFatFun,\r\n    setBiggieBodyWeightFun,\r\n    setBiggieUnitFun,\r\n    setBiggieSameWeightCountFun,\r\n    setRulerConnectStatusFun,\r\n    setRulerMeasureValueFun,\r\n    setRulerUnitFun,\r\n    setRulerConfirmCountFun,\r\n    setReceiveBroadcastHardwareInfoFun,\r\n    setMellaMeasureNumFun,\r\n  }\r\n)(App);\r\n",["406","407"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["445","446","447","448","449","450","451"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Image, Layout, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PressButton_Pro from \"./../../../assets/img/PressButton_Pro.png\";\r\nimport AxillaryPlacement from \"./../../../assets/img/AxillaryPlacement.png\"; //腋温底部图片\r\nimport EarPlacement from \"./../../../assets/img/EarPlacement.png\"; //耳温底部图片\r\nimport RectalPlacement from \"./../../../assets/img/RectalPlacement.png\"; //肛温底部图片\r\nimport Standing_Dog from \"./../../../assets/img/Standing_Dog.png\";\r\nimport Standing_Cat from \"./../../../assets/img/Standing_Cat.png\";\r\nimport Sitting_Dog from \"./../../../assets/img/Sitting_Dog.png\";\r\nimport Sitting_Cat from \"./../../../assets/img/Sitting_Cat.png\";\r\nimport Laying_Dog from \"./../../../assets/img/Laying_Dog.png\";\r\nimport Laying_Cat from \"./../../../assets/img/Laying_Cat.png\";\r\nimport { px } from \"../../../utils/px\";\r\n\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n} from \"../../../store/actions\";\r\nimport _ from \"lodash\";\r\nimport HistoryTable from \"../../../components/historyTable\";\r\nimport moment from \"moment\";\r\nimport \"./linkEquipment.less\";\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n  let { mellaConnectStatus, mellaMeasurePart } = hardwareMessage;\r\n  let imageMap = [\r\n    Standing_Dog,\r\n    Standing_Cat,\r\n    Sitting_Dog,\r\n    Sitting_Cat,\r\n    Laying_Dog,\r\n    Laying_Cat,\r\n  ];\r\n\r\n  const [type, setType] = useState(false); //是否显示轮播图\r\n  const [carouselIndex, setCarouselIndex] = useState(0); //轮播图下标\r\n  const saveCallBack = useRef();\r\n  const callBack = () => {\r\n    setCarouselIndex(carouselIndex + 1);\r\n  };\r\n\r\n  //切换图片\r\n  const checkImage = () => {\r\n    if (mellaMeasurePart === \"腋温\") {\r\n      return AxillaryPlacement;\r\n    } else if (mellaMeasurePart === \"耳温\") {\r\n      return EarPlacement;\r\n    } else {\r\n      return RectalPlacement;\r\n    }\r\n  };\r\n  //点击进入轮播图\r\n  const clickIntoTip = () => {\r\n    setType(true);\r\n  };\r\n  //小圆点点击事件\r\n  const clickPoint = (index) => {\r\n    setCarouselIndex(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    saveCallBack.current = callBack;\r\n    if (carouselIndex === 6) {\r\n      setCarouselIndex(0);\r\n    }\r\n  }, [carouselIndex]);\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      saveCallBack.current();\r\n    };\r\n    let timer = null;\r\n    if (type && mellaConnectStatus === \"connected\") {\r\n      timer = setInterval(tick, 1500);\r\n    }\r\n    if (mellaConnectStatus !== \"connected\") {\r\n      setType(false);\r\n      setCarouselIndex(0);\r\n      clearInterval(timer);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [type, mellaConnectStatus]);\r\n\r\n  return (\r\n    <>\r\n      <Content className={\"contentBox\"}>\r\n        {_.isEqual(mellaConnectStatus, \"disconnected\") ? (\r\n          <>\r\n            <div className=\"startBox\">\r\n              <p className=\"startTitle\">\r\n                Turn on your\r\n                <br />\r\n                Mella Thermometer\r\n                <br />\r\n                or Pair New Mella\r\n              </p>\r\n              <img src={PressButton_Pro} className={\"PressButton_Pro\"} style={{width:px(300),height:px(200)}} />\r\n            </div>\r\n            <div className=\"tableBox\">\r\n              <HistoryTable tableColumnType='temperature' />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"startBox\">\r\n              <p className=\"startTitle\">\r\n                {!type\r\n                  ? \"Ready, place under foreleg\"\r\n                  : \"Place Under Foreleg Standing\"}\r\n              </p>\r\n              {!type ? (\r\n                <>\r\n                  <img src={checkImage()}></img>\r\n                  {mellaMeasurePart === \"腋温\" ? (\r\n                    <div className=\"bottomTip\">\r\n                      <p className=\"tipTitle\" onClick={() => clickIntoTip()}>\r\n                        Need Help With Accurate Placement On Pet?\r\n                      </p>\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"carouselBox\">\r\n                    {_.map(imageMap, (item, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <img\r\n                            className=\"contentStyle\"\r\n                            src={item}\r\n                            style={{\r\n                              display: carouselIndex === index ? \"\" : \"none\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"dotBox\">\r\n                    <ul className=\"dotList\">\r\n                      {_.map(imageMap, (item, index) => {\r\n                        return (\r\n                          <li key={index}>\r\n                            <Button\r\n                              className=\"dotItem\"\r\n                              onClick={() => clickPoint(index)}\r\n                              style={{\r\n                                background:\r\n                                  carouselIndex === index\r\n                                    ? \"#0a0a0a\"\r\n                                    : \"#bdbaba\",\r\n                              }}\r\n                            >\r\n                              {index}\r\n                            </Button>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n  }\r\n)(LinkEquipment);\r\n",["452","453"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\App.js",["454","455"],"import React, { Component } from 'react'\r\n\r\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom'\r\n\r\nimport Home from './components/home/Home'\r\nimport Choose from './components/choose/Choose'\r\nimport EzyVetLogin from './components/ezyVetLogin/EzyVetLogin'\r\nimport EzyVetSelectTime from './components/ezyVetSelectTime/EzyVetSelectTime'\r\nimport SelectMella from './components/selectMella/SelectMella'\r\nimport APIkey from './components/apiKey/APIKey'\r\nimport VerifyOrganizationInformation from './components/selectLocation/VerifyOrganizationInformation'\r\nimport EzyVetSelectExam from './components/ezyVetSelectExam/EzyVetSelectExam'\r\nimport DoctorSelectExam from './components/doctorSelectExam/DoctorSelectScheduledExam'\r\n\r\nimport DoctorSelectAllExam from './components/doctorSelectExam/DoctorSelectAllExam'\r\nimport Praviders from './components/praviders/Praviders'\r\nimport SelectExam from \"./components/selectExam/SelectExam\";\r\n\r\nimport Mesasure from \"./components/measure/Mesasure\";\r\nimport NorMalMeasurement from \"./components/measure/NorMalMeasurement\";\r\n\r\nimport MaxMinReturn from './utils/maxminreturn/MaxMinReturn'\r\nimport EditPetInfo from './components/editPetInfo/EditPetInfo'\r\nimport WorkPlace from './components/workPlace/WorkPlace'\r\n\r\nimport DoctorAddPet from './components/doctorAddPet/DoctorAddPet'\r\nimport AddYuding from './components/doctorSelectExam/AddYuding'\r\n//登录部分\r\nimport SignIn from './components/signIn/SignIn'\r\nimport ForgotPassword from './components/signIn/forgotPassword/ForgotPassword'\r\nimport ResetPassword from './components/signIn/resetPassword/ResetPassword'\r\n\r\nimport ScanCodeLogin from './components/signIn/scanCodeLogin/ScanCodeLogin'\r\n\r\n//邮箱注册的整体部分\r\nimport VetPrifile from './components/createAccount/vetProfile/VetPrifile'\r\nimport JoinOrganizationByOption from './components/createAccount/joinOrganizationByOption/JoinOrganizationByOption'\r\nimport FindMyOrganization from './components/createAccount/findMyOrganization/FindMyOrganization'\r\nimport FindMyWorkplace from './components/createAccount/findMyWorkplace/FindMyWorkplace'\r\nimport IsHavePMS from './components/createAccount/ishavePMS/IsHavePMS'\r\nimport VerifyEmail from './components/createAccount/verifyEmail/index'\r\nimport NewOrganization from './components/createAccount/newOrganization/NewOrganization'\r\nimport NewWorkplace from './components/createAccount/newWorkplace/NewWorkplace'\r\n\r\nimport InviteTeam from './components/createAccount/inviteTeam/InviteTeam'\r\n\r\n//options\r\nimport Help from './components/menuOptions/help/Help'\r\nimport Unassigned from './components/menuOptions/unassigned/Unassigned'\r\nimport Settings from './components/menuOptions/settings/Settings'\r\nimport AdvancedSettings from './components/menuOptions/advancedSettings/AdvancedSettings'\r\nimport Invite from './components/menuOptions/invite/Invite'\r\nimport PetAndParents from './components/menuOptions/petAndParents/PetAndParents'\r\nimport EditParent from './components/menuOptions/editParent/EditParent'\r\n// import AdminAddPet from './components/menuOptions/adminAddPet/AdminAddPet'\r\nimport Veterinarians from './components/menuOptions/admin_VetProfile/Veterinarians'\r\nimport AddDevice from './components/menuOptions/addDevice/AddDevice'\r\nimport ConnectWorkplace from './components/menuOptions/orgAndPractice/ConnectWorkplace'\r\nimport NewOrg from './components/menuOptions/orgAndPractice/NewOrganization'\r\nimport Team from './components/menuOptions/orgAndPractice/InviteTeam'\r\n\r\nimport MainBody from './components/mainbody'\r\n\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/page1\" component={Choose} />\r\n          <Route exact path=\"/ezyVetLogin\" component={EzyVetLogin} />\r\n          <Route exact path=\"/EzyVetSelectTime\" component={EzyVetSelectTime} />\r\n          <Route exact path=\"/EzyVetSelectExam\" component={EzyVetSelectExam} />\r\n          <Route exact path=\"/page2\" component={APIkey} />\r\n          <Route exact path=\"/page3\" component={VerifyOrganizationInformation} />\r\n          <Route exact path=\"/page4\" component={SelectMella} />\r\n\r\n\r\n          <Route exact path=\"/VetSpireSelectExam\" component={SelectExam} />\r\n          <Route exact path=\"/page7\" component={MaxMinReturn} />\r\n\r\n          <Route exact path=\"/page8\" component={Mesasure} />\r\n          <Route exact path=\"/page9\" component={EditPetInfo} />\r\n          <Route exact path=\"/page10\" component={NorMalMeasurement} />\r\n          {/* <Route exact path=\"/page10\" component={MainBody} /> */}\r\n          <Route exact path=\"/MainBody\" component={MainBody} />\r\n\r\n\r\n\r\n          <Route exact path=\"/page12\" component={WorkPlace} />\r\n          <Route exact path=\"/AddYuding\" component={AddYuding} />\r\n\r\n\r\n          <Route exact path=\"/page11\" component={SignIn} />\r\n          <Route exact path=\"/user/login/forgotPassword\" component={ForgotPassword} />\r\n          <Route exact path=\"/user/login/resetPassword\" component={ResetPassword} />\r\n          <Route exact path=\"/user/login/scanCodeLogin\" component={ScanCodeLogin} />\r\n\r\n          <Route exact path=\"/uesr/logUp/FindMyOrganization\" component={FindMyOrganization} />\r\n          <Route exact path=\"/uesr/logUp/FindMyWorkplace\" component={FindMyWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/VetPrifile\" component={VetPrifile} />\r\n          <Route exact path=\"/uesr/logUp/JoinOrganizationByOption\" component={JoinOrganizationByOption} />\r\n          <Route exact path=\"/uesr/logUp/isHavePMS\" component={IsHavePMS} />\r\n          <Route exact path=\"/uesr/logUp/VerifyEmail\" component={VerifyEmail} />\r\n          <Route exact path=\"/uesr/logUp/NewOrganization\" component={NewOrganization} />\r\n          <Route exact path=\"/uesr/logUp/NewWorkplace\" component={NewWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/InviteTeam\" component={InviteTeam} />\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/uesr/selectExam\" component={DoctorSelectExam} />\r\n          <Route exact path=\"/uesr/DoctorSelectAllExam\" component={DoctorSelectAllExam} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/pet/doctorAddPet\" component={DoctorAddPet} />\r\n\r\n          {/* options */}\r\n          <Route exact path=\"/menuOptions/help\" component={Help} />\r\n          <Route exact path=\"/menuOptions/unassigned\" component={Unassigned} />\r\n          <Route exact path=\"/menuOptions/settings\" component={Settings} />\r\n          <Route exact path=\"/menuOptions/advancedsettings\" component={AdvancedSettings} />\r\n          <Route exact path=\"/menuOptions/invite\" component={Invite} />\r\n          <Route exact path=\"/menuOptions/petAndParents\" component={PetAndParents} />\r\n          <Route exact path=\"/menuOptions/editParent\" component={EditParent} />\r\n          {/* <Route exact path=\"/menuOptions/adminAddPet\" component={AdminAddPet} /> */}\r\n          <Route exact path=\"/menuOptions/veterinarians\" component={Veterinarians} />\r\n          <Route exact path=\"/menuOptions/AddDevice\" component={AddDevice} />\r\n          <Route exact path=\"/menuOptions/ConnectWorkplace\" component={ConnectWorkplace} />\r\n          <Route exact path=\"/menuOptions/NewOrg\" component={NewOrg} />\r\n          <Route exact path=\"/menuOptions/Team\" component={Team} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\nexport default App","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx",["456","457"],"import React, { Component, } from 'react'\r\nimport {\r\n    Button,\r\n    Input,\r\n    Form,\r\n    Select\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './esyVetLogin.less'\r\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\nexport default class EzyNetLogin extends Component {\r\n\r\n    state = {\r\n        isRemember: false,\r\n        client_id: '',\r\n        client_secret: '',\r\n        partner_id: ''\r\n    }\r\n\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('middle')\r\n        storage.ezyVetToken = ''\r\n    }\r\n    componentWillMount () {\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin1 !== '', storage.ezyVetToken1 !== undefined, `${storage.ezyVetToken1}` !== 'undefined');\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin !== '', storage.ezyVetToken !== undefined, `${storage.ezyVetToken}` !== 'undefined');\r\n        if (storage.ezyVetLogin !== '' && storage.ezyVetToken !== undefined && `${storage.ezyVetToken}` !== 'undefined') {\r\n            try {\r\n                let data = JSON.parse(storage.ezyVetLogin)\r\n                console.log('--', data);\r\n                this.setState({\r\n                    isRemember: data.isRemember,\r\n                    client_id: data.client_id,\r\n                    client_secret: data.client_secret,\r\n                    partner_id: data.partner_id\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 10 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 14 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 10,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 8,\r\n                    offset: 7,\r\n                },\r\n            },\r\n        };\r\n\r\n        const _next = (values) => {\r\n            console.log('Received values of form: ', values);\r\n            let parames = {\r\n                clientId: values.client_id,\r\n                clientSecret: values.client_secret,\r\n                partnerId: values.partner_id,\r\n            }\r\n            console.log(parames);\r\n            fetchRequest2('/EzyVet/ezyvetauth', 'GET', parames, '')\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res && res.msg === 'success') {\r\n\r\n                        storage.ezyVetToken = res.data\r\n                        if (this.state.isRemember) {\r\n                            storage.ezyVetLogin = JSON.stringify({\r\n                                client_id: values.client_id,\r\n                                client_secret: values.client_secret,\r\n                                partner_id: values.partner_id,\r\n                                isRemember: this.state.isRemember\r\n                            })\r\n                        } else {\r\n                            storage.ezyVetLogin = ''\r\n                        }\r\n                        storage.selectTime = ''\r\n                        storage.ezyVetReLogin = JSON.stringify({  //如果令牌过期了，需要重新输入信息重新获取令牌\r\n                            client_id: values.client_id,\r\n                            client_secret: values.client_secret,\r\n                            partner_id: values.partner_id,\r\n                        })\r\n\r\n                        this.props.history.push('EzyVetSelectTime')\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n\r\n        }\r\n        let { client_id, client_secret, partner_id } = this.state\r\n\r\n        return (\r\n            <div id=\"eszVetLogin\">\r\n                {/* 关闭缩小 */}\r\n                <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                    onClick1={() => this.props.history.push('/page1')}\r\n                />\r\n                <div className=\"text\">\r\n                    Please enter your user information\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form\r\n                        {...formItemLayout}\r\n                        name=\"register\"\r\n                        onFinish={_next}\r\n                        initialValues={{\r\n                            client_id, client_secret, partner_id\r\n                        }}\r\n\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"client_id\"\r\n                            label=\"Client ID\"\r\n                            rules={[{ required: true, message: 'Please input your Client ID!', whitespace: true }]}\r\n\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"client_secret\"\r\n                            label=\"Client Secret\"\r\n                            rules={[{ required: true, message: 'Please input your Client Secret!', whitespace: true }]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"partner_id\"\r\n                            label=\"Partner ID\"\r\n                            rules={[{ required: true, message: 'Please input your Partner ID!', whitespace: true }]}\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            {...tailFormItemLayout}\r\n                        >\r\n                            <div className=\"btn\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    htmlType=\"submit\"\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"remember\">\r\n                    <p>Stay Signed In:</p>\r\n                    <div className=\"box\" onClick={() => {\r\n                        let { isRemember } = this.state\r\n                        this.setState({\r\n                            isRemember: !isRemember\r\n                        })\r\n                        storage.isRemember = !isRemember\r\n                    }}>\r\n                        {this.state.isRemember && <img src={dui} alt=\"\" />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",["458","459"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\apiKey\\APIKey.jsx",["460","461","462","463"],"import React, { Component, } from 'react'\r\nimport {\r\n    Button,\r\n    Input,\r\n    Spin,\r\n    Alert,\r\n    Form,\r\n    Modal\r\n} from 'antd';\r\nimport { InfoCircleOutlined, UserOutlined, createFromIconfontCN } from '@ant-design/icons';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './apikey.less'\r\nimport { fetchRequest1 } from './../../utils/FetchUtil'\r\nimport { mTop } from '../../utils/px';\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_2326495_ryrpg35knb.js'\r\n})\r\nlet storage = window.localStorage;\r\nexport default class APIKey extends Component {\r\n    state = {\r\n        value: '',\r\n        loading: false,\r\n        id: '', // location 的ID\r\n        name: '',\r\n        flog: false,\r\n        visible: false,\r\n        modalText: '',\r\n        api: '',\r\n        selectApi: false\r\n    }\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big')\r\n    }\r\n    componentWillMount () {\r\n        if (storage.selectApi === `true`) {\r\n            if (`${storage.API}` !== `undefined`) {\r\n                this.setState({\r\n                    api: storage.API\r\n                })\r\n            }\r\n            this.setState({\r\n                selectApi: storage.selectApi\r\n            })\r\n        }\r\n        console.log('----------', storage.selectApi, storage.API);\r\n\r\n    }\r\n    onFinish = values => {\r\n        console.log(\"Success:\", values);\r\n        console.log('跳转');\r\n        if (values) {\r\n            this.setState({\r\n                loading: true\r\n            })\r\n            let params = {\r\n                APIkey: values.api\r\n            }\r\n            console.log('传入的数据：', params);\r\n\r\n            fetchRequest1('/VetSpire/selectLocationsByOrganization', 'POST', params)\r\n                .then(res => {\r\n                    console.log('接收到的数据', res);\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                    if (res.code === 14002) {\r\n\r\n\r\n                        storage.selectApi = this.state.selectApi\r\n                        console.log(this.state.selectApi);\r\n                        storage.API = values.api\r\n                        console.log(res.message);\r\n                        let data = res.data.org\r\n                        console.log(data);\r\n                        this.setState({\r\n                            id: data.id,\r\n                            name: data.name,\r\n                            flog: true,\r\n                            api: params.APIkey\r\n                        })\r\n                        storage.id = data.id\r\n                        console.log(storage.id);\r\n                        this.props.history.push({ pathname: '/page3', })\r\n                    } else {\r\n                        this.setState({\r\n                            visible: true,\r\n                            modalText: 'The input API is wrong',\r\n                            flog: false\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('错误', err);\r\n                    this.setState({\r\n                        loading: false,\r\n                        visible: true,\r\n                        modalText: `${err}`,\r\n                        flog: false\r\n                    })\r\n                })\r\n\r\n        }\r\n    };\r\n    onFinishFailed = errorInfo => {\r\n        console.log(\"Failed:\", errorInfo);\r\n    };\r\n    render () {\r\n        const { api, id } = this.state\r\n        return (\r\n            <div id=\"inputAPI\">\r\n                {/* 关闭缩小 */}\r\n                <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                    onClick1={() => this.props.history.push('/page1')}\r\n                />\r\n\r\n\r\n                <Spin tip=\"Loading...\" spinning={this.state.loading} delay={500}>\r\n\r\n                    {/* 文本 */}\r\n                    <div className=\"text\"\r\n                        style={{ marginTop: mTop(100), marginBottom: mTop(80) }}\r\n                    >Enter your Vetspire API key<br />and we’ll take care of the rest.</div>\r\n\r\n\r\n                    <Form\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true\r\n                        }}\r\n                        onFinish={(value) => this.onFinish(value)}\r\n                        onFinishFailed={(value) => this.onFinishFailed(value)}\r\n                    >\r\n                        <div className=\"inptDiv\">\r\n                            <Form.Item\r\n                                name=\"api\"\r\n                                initialValue={this.state.api}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please input your vetspire API key!\"\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input\r\n                                    className='input'\r\n                                    placeholder=\"Your Vetspire API Key\"\r\n\r\n                                />\r\n\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"remember\">\r\n                            <div className=\"text1\">Remember Me</div>\r\n                            <div className=\"square\" onClick={() => {\r\n                                this.setState({ selectApi: !this.state.selectApi })\r\n                            }}>\r\n                                {(this.state.selectApi) ? (<img src={dui} width={'40px'} alt=\"\" />) : (null)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* {(!this.state.flog) ? ( */}\r\n                        {(true) ? (\r\n                            <Form.Item>\r\n                                <div className=\"btn\"\r\n                                    style={{ marginTop: mTop(280) }}\r\n                                >\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        shape=\"round\"\r\n                                        size='large'\r\n                                        htmlType=\"submit\"\r\n                                    >\r\n                                        Connect\r\n                                    </Button>\r\n                                </div>\r\n                            </Form.Item>\r\n                        ) : (null)}\r\n\r\n                    </Form>\r\n\r\n                </Spin>\r\n\r\n                {/* {(this.state.flog) ? ( */}\r\n                {(false) ? (\r\n                    <div>\r\n                        <div className=\"text2\"> Verify Organization<br />Information</div>\r\n                        <div className=\"text9\">Business Name <span>{this.state.name}</span></div>\r\n                        <div className=\"btns\">\r\n                            <div className=\"btn1\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    onClick={() => this.setState({ flog: false })}\r\n                                >\r\n                                    Try Again\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"btn2\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    onClick={() => {\r\n                                        console.log('点击了');\r\n                                        this.props.history.push({ pathname: '/page4', query: { api, id } })\r\n                                    }}\r\n                                >\r\n                                    Verify\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                ) : (null)}\r\n\r\n\r\n                <Modal\r\n                    title='err'\r\n                    visible={this.state.visible}\r\n                    footer={[]}\r\n                    onCancel={() => this.setState({ visible: false })}\r\n                >\r\n                    {this.state.modalText}\r\n                </Modal>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx",["464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491"],"////这是普通用户的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  message,\r\n  Menu,\r\n  Modal,\r\n  Select,\r\n  ConfigProvider\r\n\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport Button1 from '../../utils/button/Button'\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport Heard from '../../utils/heard/Heard'\r\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\r\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\r\nimport './doctorSelectExam.less'\r\n\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { FetchEszVet } from '../../utils/FetchEszVet'\r\nimport { fetchRequest } from '../../utils/FetchUtil1'\r\nimport gender from '../../utils/gender'\r\nimport temporaryStorage from '../../utils/temporaryStorage';\r\nimport { MTop, mTop, pX, px, win } from '../../utils/px';\r\nimport { stopBubble } from '../../utils/current'\r\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\r\nimport { fetchRhapsody } from '../../utils/FetchUtil5';\r\nimport jinggao from './../../assets/img/jinggao.png'\r\nimport redclose from './../../assets/img/redclose.png'\r\nimport blackTriangle from './../../assets/img/blackTriangle.png'\r\nimport refresh from './../../assets/img/Refresh.png'\r\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\r\n\r\nimport electronStore from '../../utils/electronStore';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\n\r\n\r\n\r\nexport default class DoctorSelectAllExam extends Component {\r\n  state = {\r\n    loading: false,\r\n    api: '',\r\n    id: '',  //选择location的id\r\n    locations: [],\r\n    data: [],\r\n    searchData: [],\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    seleceID: '',  //宠物医生id\r\n    spin: false,   //刷新按钮是否旋转\r\n    unixToURI: '',\r\n    ezyVetToken: '',\r\n    current: 1,\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    heardSearchText: '',\r\n\r\n    isNotFound: true,\r\n    modalVis: false,\r\n\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n\r\n    sortBy: 'Time',\r\n    showsortBy: false\r\n  }\r\n  componentWillMount () {\r\n    // console.log('------------', this.props.location.listDate);\r\n    try {\r\n      if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\r\n        // console.log('------------', this.props.location);\r\n        let data = JSON.parse(this.props.location.listDate)\r\n        this.setState({\r\n          data,\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    console.log(windowsHeight, height, width);\r\n    if (windowsHeight < 900) {\r\n      ipcRenderer.send('table', win())\r\n    } else {\r\n      ipcRenderer.send('big', win())\r\n    }\r\n    // ipcRenderer.send('big')\r\n    message.destroy()\r\n\r\n\r\n\r\n    storage.identity = '3'\r\n\r\n    if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\r\n      let data = JSON.parse(this.props.location.listDate)\r\n      this.setState({\r\n        data,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        loading: true,\r\n      })\r\n    }\r\n    this._getExam()\r\n    temporaryStorage.logupVetInfo = {}\r\n    temporaryStorage.logupSelectOrganization = {}\r\n    temporaryStorage.logupSuccessData = {}\r\n    temporaryStorage.logupOrganization = {}\r\n    temporaryStorage.logupEmailCode = ''\r\n\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\r\n    for (let i = 0; i < items.length; i++) {\r\n      let style = items[i].style\r\n      style.padding = \"5px 5px\"\r\n      style.textAlign = 'center'\r\n\r\n\r\n    }\r\n\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    console.log(windowsHeight, height, width);\r\n    if (windowsHeight < 900) {\r\n      ipcRenderer.send('table', win())\r\n    } else {\r\n      ipcRenderer.send('big', win())\r\n    }\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  rhapsody = async (patientsArr) => {\r\n\r\n    // console.log(patientsArr);\r\n    let dataArr = []\r\n    try {\r\n      for (let i = 0; i < patientsArr.length; i++) {\r\n        let params = { query: `query { patient (id:\"${patientsArr[i].patientId}\") {  vitals { data{ id, weight{value}, createdAt, updatedAt}}}}` }\r\n        let item = await fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n        if (item.data) {\r\n\r\n          let { vitals } = item.data.patient\r\n          let vitalData = vitals.data\r\n          console.log('-----------', vitalData);\r\n          let weight = ''\r\n          if (vitalData.length > 0) {\r\n            vitalData.sort((a, b) => {\r\n              return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n            })\r\n            if (vitalData[0].weight && vitalData[0].weight.value) {\r\n              patientsArr[i].weight = (vitalData[0].weight.value * 0.45).toFixed(1)\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n      console.log(patientsArr);\r\n      patientsArr.sort((a, b) => {\r\n        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n      })\r\n      this.setState({\r\n        data: patientsArr,\r\n        loading: false\r\n      })\r\n\r\n      electronStore.set('doctorExam', patientsArr)\r\n    } catch (error) {\r\n      this.setState({\r\n        loading: false,\r\n      })\r\n      message.destroy()\r\n      message.error('Medical record acquisition failed')\r\n    }\r\n\r\n\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n\r\n\r\n\r\n\r\n\r\n    //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\r\n    if (storage.lastOrganization === '34') {\r\n\r\n      console.log(storage.connectionKey);\r\n      //1.获取用户id\r\n\r\n      let params = { query: `query { business { id, name, state } }` }\r\n      fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n\r\n        .then(res => {\r\n          console.log('---', res);\r\n          if (res.errors) {\r\n            this.setState({\r\n              loading: false,\r\n              spin: false\r\n            })\r\n            message.destroy()\r\n            message.error('Data acquisition failed')\r\n\r\n          } else {\r\n            console.log('获取到了businessId');\r\n            let businessId = res.data.business.id\r\n            // let param = {\r\n            //   query: `query  { patients (businessId:\"${businessId}\") { data{ id, clientId, name,gender, dateOfBirth\r\n            //   species{id,name},\r\n            //   breeds{id,name},\r\n            //   createdAt,owners{owner{firstName,lastName} }}}` }\r\n            let param = {\r\n              query: `query { \r\n                patients (businessId:\"${businessId}\") {\r\n                    data{ \r\n                         id, \r\n                         clientId, \r\n                         businessId, \r\n                         name  \r\n                         gender,\r\n                         dateOfBirth,\r\n                         species{id,name},\r\n                         breeds{id,name},\r\n                         createdAt ,\r\n                         owners{owner{firstName,lastName}}\r\n                    }\r\n                }\r\n            }`\r\n            }\r\n\r\n            console.log('获取病历单的入参', param, JSON.stringify(param));\r\n            fetchRhapsody('', 'POST', param, storage.connectionKey)\r\n              .then(res => {\r\n                console.log(res);\r\n                if (res.errors) {\r\n                  this.setState({\r\n                    loading: false,\r\n                    spin: false\r\n                  })\r\n                  message.destroy()\r\n                  message.error('Failed to get pet list')\r\n\r\n                } else {\r\n                  let patientsArr = res.data.patients.data\r\n                  let dataArr = []\r\n                  for (let i = 0; i < patientsArr.length; i++) {\r\n                    const patient = patientsArr[i];\r\n                    let { id, name, gender, dateOfBirth, breeds, owners, createdAt } = patient\r\n\r\n                    createdAt = moment(createdAt).format('X')\r\n                    let owner = 'unknown'\r\n                    if (owners.length > 0) {\r\n                      let ownerItem = owners[0]\r\n                      if (ownerItem && ownerItem.owner) {\r\n                        let { firstName, lastName } = ownerItem.owner\r\n                        if (firstName || lastName) {\r\n                          owner = `${lastName} ${firstName}`\r\n                        }\r\n                      }\r\n\r\n                    }\r\n\r\n                    let breed = 'unknown'\r\n                    if (breeds.length > 0 && breeds[0].name) {\r\n                      breed = breeds[0].name\r\n                    }\r\n\r\n                    let petAge = 'unknown'\r\n                    if (dateOfBirth) {\r\n                      petAge = moment(new Date()).diff(moment(dateOfBirth), 'years')\r\n                      // console.log('petAge', petAge);\r\n                    }\r\n\r\n                    let json = {\r\n                      insertedAt: createdAt,\r\n                      patientId: id,\r\n                      petName: name,\r\n                      owner,\r\n                      breed,\r\n                      gender: gender || 'unknown',\r\n                      age: petAge,\r\n                      petId: '',\r\n                      id: `${i}`,\r\n                      weight: null,\r\n                      rfid: null,\r\n                      url: null,\r\n                      speciesId: null,\r\n                    }\r\n                    dataArr.push(json)\r\n\r\n\r\n                  }\r\n\r\n                  console.log(dataArr);\r\n\r\n\r\n\r\n                  this.rhapsody(dataArr)\r\n                }\r\n\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n                this.setState({\r\n                  loading: false,\r\n                  spin: false\r\n                })\r\n                message.destroy()\r\n                message.error('Failed to get pet list')\r\n              })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading: false,\r\n            spin: false\r\n          })\r\n          message.destroy()\r\n          message.error('Data acquisition failed')\r\n        })\r\n\r\n\r\n\r\n\r\n      return\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('查询宠物的入参', params);\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n\r\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\r\n      // fetchRequest('/new/pet/subscribe/page', 'POST', params)\r\n\r\n      .then(res => {\r\n        console.log('查询到的宠物列表,/user/listAllPetInfo', res);\r\n\r\n        if (res.flag === true && res.data) {\r\n          let data = []\r\n          let oldList = res.data\r\n          // let oldList = res.data.list\r\n          for (let i = 0; i < oldList.length; i++) {\r\n            let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\r\n              h2tLength, torsoLength } = oldList[i]\r\n            let owner = ''\r\n            patientId = isUnKnow(patientId)\r\n            petName = isUnKnow(petName)\r\n            breedName = isUnKnow(breedName)\r\n            age = isUnKnow(age)\r\n            weight = isUnKnow(weight)\r\n            if (!firstName) {\r\n              firstName = ''\r\n            }\r\n            if (!lastName) {\r\n              lastName = ''\r\n            }\r\n            if (lastName === '' && firstName === '') {\r\n              owner = 'unknown'\r\n            } else {\r\n              owner = `${lastName} ${firstName}`\r\n            }\r\n            createTime = moment(createTime).format('X')\r\n            let petGender = ''\r\n            switch (`${gender}`) {\r\n              case '1': petGender = 'F'\r\n\r\n                break;\r\n              case '0': petGender = \"M\"\r\n                break;\r\n              default: petGender = 'unknown'\r\n                break;\r\n            }\r\n            let petAge = 'unknown'\r\n            if (birthday) {\r\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n            }\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              patientId,\r\n              petName,\r\n              owner,\r\n              breed: breedName,\r\n              gender: petGender,\r\n              age: petAge,\r\n              petId,\r\n              id: i,\r\n              weight,\r\n              rfid,\r\n              url,\r\n              speciesId,\r\n              l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n              h2tLength, torsoLength,\r\n              pethubId, macId,\r\n\r\n            }\r\n            data.push(json)\r\n\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          console.log('列表的数据：', data);\r\n          storage.doctorList = JSON.stringify(data)\r\n          this.setState({\r\n            data,\r\n            loading: false,\r\n            spin: false\r\n          })\r\n\r\n          electronStore.set('doctorExam', data)\r\n\r\n\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n          spin: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    //dataIndex 是标题名称\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    //自定义Icon\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\r\n    onFilter: (value, record) => {\r\n      console.log(value, record, dataIndex);\r\n      return record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : ''\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n  _refresh = () => {\r\n    console.log('点击了');\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    // this._getData()\r\n    this._getExam()\r\n  }\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n\r\n    switch (e.key) {\r\n      case '1': this.props.history.push('/page11'); break;\r\n      case '2': this.props.history.push('/'); break;\r\n      case '3':\r\n        try {\r\n\r\n          let selectNum = document.getElementsByClassName('ant-pagination-item-active')\r\n          // storage.defaultCurrent = selectNum[0].title\r\n          storage.doctorList = JSON.stringify(this.state.data)\r\n        } catch (error) {\r\n          console.log('错误信息', error);\r\n        }\r\n\r\n\r\n        this.props.history.push('/page8'); break;\r\n      case '4': this.props.history.push('/page12'); break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  _search1 = (search) => {       //这个是搜索调用后台的函数，现在废弃20210929\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      petName: search,\r\n    }\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n    console.log('搜索的数据', params);\r\n    fetchRequest('/pet/listPetsLike', \"POST\", params)\r\n      .then(res => {\r\n        console.log(res);\r\n\r\n        if (res.flag === true) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { age, createTime, patientId, petName, firstName, birthday, lastName, breedName, gender, petId, weight } = res.data[i]\r\n            let owner = ''\r\n            patientId = isUnKnow(patientId)\r\n            petName = isUnKnow(petName)\r\n            breedName = isUnKnow(breedName)\r\n            age = isUnKnow(age)\r\n            weight = isUnKnow(weight)\r\n            if (!firstName) {\r\n              firstName = ''\r\n            }\r\n            if (!lastName) {\r\n              lastName = ''\r\n            }\r\n            if (lastName === '' && firstName === '') {\r\n              owner = 'unknown'\r\n            } else {\r\n              owner = `${lastName} ${firstName}`\r\n            }\r\n            createTime = moment(createTime).format('X')\r\n            let petGender = ''\r\n            switch (`${gender}`) {\r\n              case '1': petGender = 'F'\r\n\r\n                break;\r\n              case '0': petGender = \"M\"\r\n                break;\r\n              default: petGender = 'unknown'\r\n                break;\r\n            }\r\n            let petAge = 'unknown'\r\n            if (birthday) {\r\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n              // console.log('petAge', petAge);\r\n            }\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              patientId,\r\n              petName,\r\n              owner,\r\n              breed: breedName,\r\n              gender: petGender,\r\n              age: petAge,\r\n              petId,\r\n              id: i,\r\n              weight\r\n\r\n            }\r\n            data.push(json)\r\n\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            searchData: data,\r\n            loading: false\r\n          })\r\n        } else {\r\n          this.setState({\r\n            searchData: [],\r\n            loading: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n  }\r\n\r\n  _search = (keyWord) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\r\n\r\n    /**\r\n     * 使用indexof方法实现模糊查询\r\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n     *  \r\n     * list         原数组\r\n     * keyWord      查询关键词\r\n     * searchData   查询的结果\r\n     * \r\n     * toLowerCase（）方法：将字符串统一转成小写\r\n     * toUpperCase（）方法：将字符串统一转成大写\r\n     * \r\n     */\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    let list = this.state.data\r\n    let searchData = []\r\n    for (let i = 0; i < list.length; i++) {\r\n      let petName = list[i].petName.toLowerCase() || ''\r\n      let patientId = list[i].patientId.toLowerCase() || ''\r\n      let rfid = list[i].rfid || ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${rfid}`.indexOf(keyWord) !== -1\r\n      ) {\r\n        searchData.push(list[i])\r\n      }\r\n    }\r\n    console.log(searchData);\r\n    this.setState({\r\n      searchData,\r\n      loading: false\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  RFIDSearch = () => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    fetchRequest4(`/pet/getPetInfoByRFID/${this.state.heardSearchText}/${storage.lastOrganization}`, 'GET')\r\n      .then(res => {\r\n        console.log('----RFID搜索结果', res);\r\n\r\n        if (res.flag === true && res.data) {\r\n          let { createTime, patientId, petName, firstName, lastName, breedName, gender, birthday, petId, rfid, weight } = res.data\r\n          patientId = patientId || 'unknown'\r\n          petName = petName || 'unknown'\r\n          breedName = breedName || 'unknown'\r\n          weight = weight || 'unknown'\r\n          let owner = ''\r\n          if (!firstName) {\r\n            firstName = ''\r\n          }\r\n          if (!lastName) {\r\n            lastName = ''\r\n          }\r\n          if (lastName === '' && firstName === '') {\r\n            owner = 'unknown'\r\n          } else {\r\n            owner = `${lastName} ${firstName}`\r\n          }\r\n          createTime = moment(createTime).format('X')\r\n          let petGender = ''\r\n          switch (`${gender}`) {\r\n            case '1': petGender = 'F'\r\n\r\n              break;\r\n            case '0': petGender = \"M\"\r\n              break;\r\n            default: petGender = 'unknown'\r\n              break;\r\n          }\r\n          let petAge = 'unknown'\r\n          if (birthday) {\r\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n            // console.log('petAge', petAge);\r\n          }\r\n          let json = {\r\n            insertedAt: createTime,\r\n            patientId,\r\n            petName,\r\n            owner,\r\n            breed: breedName,\r\n            gender: petGender,\r\n            age: petAge,\r\n            petId,\r\n            id: 0,\r\n            weight,\r\n            rfid\r\n          }\r\n          let searchData = []\r\n          searchData.push(json)\r\n          this.setState({\r\n            searchData,\r\n            loading: false\r\n          })\r\n\r\n\r\n\r\n\r\n        } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\r\n          console.log('找到了但是不是在这个组织下');\r\n          this.setState({\r\n            loading: false,\r\n            modalVis: true,\r\n            isNotFound: false,\r\n            heardSearchText: ''\r\n          })\r\n        } else {\r\n          console.log('没有找到');\r\n          this.setState({\r\n            loading: false,\r\n            modalVis: true,\r\n            isNotFound: true,\r\n            heardSearchText: ''\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n\r\n        console.log('抛出异常:', err);\r\n        this.setState({\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n  draggleRef = React.createRef();\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render () {\r\n    const columns = [\r\n      {\r\n        title: 'Time',\r\n        dataIndex: 'insertedAt',\r\n        key: 'insertedAt',\r\n        width: '16%',\r\n        // ...this.getColumnSearchProps('insertedAt'),\r\n        render: (text, record, index) => {\r\n          let chazhi = new Date().getTimezoneOffset()\r\n          // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\r\n          let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\r\n          let time = moment(parseInt(text) * 1000).format('hh:mm a');\r\n          let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\r\n          // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\r\n          return (\r\n            <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\r\n              <p>{`${year}`}</p>\r\n              <p>{`${time}`}</p>\r\n            </div>\r\n          )\r\n        },\r\n\r\n      },\r\n      {\r\n        title: 'Pet ID',\r\n        dataIndex: 'patientId',\r\n        key: 'patientId',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('patientId'),\r\n      },\r\n      {\r\n        title: 'Pet Name',\r\n        dataIndex: 'petName',\r\n        key: 'petName',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('petName'),\r\n      },\r\n      {\r\n        title: 'Owner',\r\n        dataIndex: 'owner',\r\n        key: 'owner',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('owner'),\r\n      },\r\n      {\r\n        title: 'Breed',\r\n        dataIndex: 'breed',\r\n        key: 'breed',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('breed'),\r\n        render: (text, record, index) => {\r\n          if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{'unknown'}</p>\r\n            )\r\n          } else {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{text}</p>\r\n            )\r\n          }\r\n\r\n        }\r\n      },\r\n\r\n      {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        key: 'gender',\r\n        width: '12%',\r\n        // width: '30%',\r\n        // ...this.getColumnSearchProps('gender'),\r\n      },\r\n      {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n        width: '12%',\r\n        // width: '20%',\r\n        render: (text, record, index) => {\r\n          // console.log(text);\r\n\r\n          if (`${text}` === 'NaN') {\r\n            return (\r\n              <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\r\n            )\r\n          } else {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{text}</p>\r\n            )\r\n          }\r\n\r\n        }\r\n      },\r\n\r\n\r\n    ];\r\n    const { loading, data, api, id, seleceID, spin, closeColor, closebgc, minbgc, disabled, bounds, modalVis, sortBy, showsortBy } = this.state\r\n\r\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\r\n    for (let i = 0; i < items.length; i++) {\r\n      let style = items[i].style\r\n      style.padding = `5px 5px`\r\n      style.textAlign = 'center'\r\n    }\r\n    const noData = () => {\r\n      return (\r\n        <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\r\n          <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\r\n          <a style={{ fontSize: px(22) }} href=\"#\"\r\n            onClick={(e) => {\r\n              console.log('我要去添加宠物');\r\n              try {\r\n\r\n                storage.doctorList = JSON.stringify(this.state.data)\r\n              } catch (error) {\r\n                console.log('错误信息', error);\r\n              }\r\n              // /pet/doctorAddPet\r\n              this.props.history.push({ pathname: '/pet/doctorAddPet' })\r\n\r\n              e.preventDefault();\r\n\r\n            }}\r\n\r\n          >{`go to add`}</a>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n      <div id=\"doctorSelectExam\" onClick={(e) => {\r\n        console.log('隐藏');\r\n        this.setState({\r\n          showsortBy: false\r\n        })\r\n      }}>\r\n        {/* 关闭缩小 */}\r\n        <Heard\r\n          onReturn={() => {\r\n            this.props.history.push('/page11')\r\n          }}\r\n          onSearch={(data) => {\r\n\r\n            storage.doctorExam = JSON.stringify(data)\r\n\r\n            storage.doctorList = JSON.stringify(this.state.data)\r\n            if (storage.isClinical === 'true') {\r\n              this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\r\n            } else {\r\n              this.props.history.push({ pathname: '/page10', })\r\n            }\r\n          }}\r\n          menu8Click={() => {\r\n            this.props.history.push({ pathname: '/uesr/selectExam', })\r\n          }}\r\n          blueSearch={true}\r\n        />\r\n\r\n\r\n        <div className=\"hread flex\">\r\n          <div className=\"hread1 flex\" style={{ marginTop: px(30) }}>\r\n            <div className=\"heard1L flex\">\r\n              <div className=\"title\" style={{ fontSize: px(25) }}>Client Results</div>\r\n              <div className=\"refresh flex\"\r\n                style={{ fontSize: px(25), marginLeft: px(10) }}\r\n              >\r\n                <SyncOutlined onClick={this._refresh} spin={spin} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"walkin flex\"\r\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20) }}\r\n              onClick={() => {\r\n                storage.doctorExam = JSON.stringify('')\r\n                storage.doctorList = JSON.stringify(this.state.data)\r\n                if (storage.isClinical === 'true') {\r\n                  this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: null })\r\n                } else {\r\n                  this.props.history.push({ pathname: '/page10', })\r\n                }\r\n\r\n              }}\r\n            >Walk-In</div>\r\n\r\n          </div>\r\n          <div className=\"heard2 flex\" style={{ marginTop: px(8), marginBottom: px(8) }}>\r\n\r\n            <div className=\"sort flex\" >\r\n              <p style={{ fontSize: px(16), marginRight: px(10) }}>sort By:</p>\r\n\r\n              <SelectionBox\r\n                listArr={[\r\n                  { key: 'time', value: 'Time' },\r\n                  { key: 'petid', value: 'Pet ID' },\r\n                  { key: 'owner', value: 'Owner' },\r\n                  { key: 'breed', value: 'Breed' },\r\n                  { key: 'petname', value: 'Pet Name' },\r\n                  { key: 'gender', value: 'Gender' },\r\n                ]}\r\n                clickItem={(item) => {\r\n                  let petList = [].concat(data)\r\n                  switch (item.key) {\r\n                    case 'time':\r\n                      petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\r\n                      break;\r\n                    case 'petid':\r\n                      petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\r\n                      break;\r\n                    case 'owner':\r\n                      petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\r\n                      break;\r\n                    case 'breed':\r\n                      petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\r\n                      break;\r\n                    case 'petname':\r\n                      petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\r\n                      break;\r\n                    case 'gender':\r\n                      petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\r\n                      break;\r\n                  }\r\n\r\n                  this.setState({\r\n                    sortBy: item.value,\r\n                    showsortBy: false,\r\n                    data: petList\r\n                  })\r\n                }}\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"table\" >\r\n          <ConfigProvider renderEmpty={noData}>\r\n            <Table\r\n              style={{\r\n                // border: ' #979797 1px solid',\r\n                padding: 0,\r\n                margin: 0,\r\n                width: '95%',\r\n                // height: px(500)\r\n              }}\r\n              rowKey={data => data.id}\r\n              bordered={false}\r\n              columns={columns}\r\n              dataSource={(this.state.heardSearchText.length === 0) ? this.state.data : this.state.searchData}\r\n              loading={loading}\r\n              locale={{ filterConfirm: <div>111</div> }}\r\n              // pagination={{ showSizeChanger: false, showQuickJumper: true, defaultCurrent: this.state.current }}\r\n              pagination={false}\r\n              scroll={{\r\n                y: px(600)\r\n              }}\r\n              onRow={(record) => {\r\n                return {\r\n                  onClick: (event) => {\r\n\r\n                    console.log('record', record);\r\n                    storage.doctorExam = JSON.stringify(record)\r\n                    storage.doctorList = JSON.stringify(this.state.data)\r\n\r\n                    if (storage.isClinical === 'true') {\r\n                      this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.patientId })\r\n                    } else {\r\n                      this.props.history.push({ pathname: '/page10', })\r\n                    }\r\n\r\n\r\n                  }, // 点击行\r\n\r\n                };\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </div>\r\n\r\n        <Modal\r\n\r\n          // visible={isOrg}\r\n          visible={modalVis}\r\n          onCancel={() => this.setState({ modalVis: false })}\r\n          width={350}\r\n          footer={[]}\r\n          modalRender={(modal) => (\r\n            <Draggable\r\n              disabled={disabled}\r\n              bounds={bounds}\r\n              onStart={(event, uiData) => this.onStart(event, uiData)}\r\n            >\r\n              <div ref={this.draggleRef}>{modal}</div>\r\n            </Draggable>\r\n          )}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"doctorSelectExamModal\"\r\n        >\r\n          <div id='doctorSelectExamModal'>\r\n            <div className=\"text\"\r\n              onMouseOver={() => {\r\n                if (disabled) {\r\n                  this.setState({\r\n                    disabled: false,\r\n                  });\r\n                }\r\n              }}\r\n              onMouseOut={() => {\r\n                this.setState({\r\n                  disabled: true,\r\n                });\r\n              }}\r\n\r\n            >{this.state.isNotFound ? 'Pet not found!' : 'Pet found!'}</div>\r\n            <div className='Img'>\r\n              {this.state.isNotFound ?\r\n                <img src={redclose} width=\"50px\" /> :\r\n                <img src={jinggao} width=\"50px\" />\r\n              }\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {this.state.isNotFound ? <p > This pet is not on your database</p> :\r\n              <p >Pet Identified but does not <br /> belong to your organization.</p>}\r\n\r\n\r\n            <div style={{ marginTop: px(20) }}>\r\n              <Button1\r\n                text={'OK'}\r\n\r\n                onClick={() => this.setState({\r\n                  modalVis: false\r\n                })}\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </Modal>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx",["492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx",["519","520","521","522"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  message\r\n\r\n} from 'antd';\r\n\r\nimport './scanCodeLogin.less'\r\nimport mellaLogo from '../../../assets/images/mellaLogo.png'\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport { fetchRequest2 } from '../../../utils/FetchUtil2';\r\nimport { px } from './../../../utils/px'\r\n\r\nlet storage = window.localStorage;\r\nlet flog = false\r\nexport default class ScanCodeLogin extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    url: ''\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    this.timer = setInterval(() => {\r\n      this._getUser()\r\n    }, 1000);\r\n    console.log(this.props.history);\r\n    let { name, url } = this.props.history.location.params\r\n    this.setState({\r\n      name,\r\n      url\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    this.timer && clearInterval(this.timer)\r\n  }\r\n  _getUser = () => {\r\n    fetchRequest2(`/user/loginWithQRcode/${temporaryStorage.QRToken}`)\r\n      .then(res => {\r\n        console.log('-----：', res);\r\n        if (res.flag === true) {\r\n          switch (res.code) {\r\n            case 10001:\r\n              console.log('未扫码');\r\n              flog = false\r\n              this.props.history.goBack()\r\n\r\n              break;\r\n\r\n            case 11033:\r\n              console.log('扫码未点击登录');\r\n              flog = false\r\n              // let { name, url } = res.data\r\n              // if (name === this.state.name && url === this.state.url) {\r\n              //   return\r\n              // }\r\n              // this.setState({\r\n              //   name,\r\n              //   url\r\n              // })\r\n              break;\r\n\r\n            case 11023:\r\n              console.log('过期');\r\n              this.timer && clearInterval(this.timer)\r\n              if (!flog) {\r\n                this.props.history.replace('/page11')\r\n              }\r\n\r\n\r\n              break;\r\n            case 20000:\r\n              this.timer && clearInterval(this.timer)\r\n              console.log('--------------成功');\r\n              flog = true\r\n              let success = res.data\r\n              let { userWorkplace, lastOrganization } = success\r\n\r\n              storage.userId = success.userId\r\n              storage.roleId = success.roleId\r\n\r\n              //每次登陆后清空宠物列表缓存的数据\r\n              storage.doctorList = ''\r\n              storage.defaultCurrent = ''\r\n\r\n              if (success.lastWorkplaceId) {\r\n                storage.lastWorkplaceId = success.lastWorkplaceId\r\n              } else {\r\n                storage.lastWorkplaceId = ''\r\n              }\r\n\r\n              if (success.lastOrganization) {\r\n                storage.lastOrganization = success.lastOrganization\r\n              } else {\r\n                storage.lastOrganization = ''\r\n              }\r\n\r\n\r\n\r\n              if (userWorkplace) {\r\n                storage.userWorkplace = JSON.stringify(userWorkplace)\r\n                let connectionKey = ''\r\n                for (let i = 0; i < userWorkplace.length; i++) {\r\n                  const element = userWorkplace[i];\r\n                  if (element.organizationEntity) {\r\n                    if (element.organizationEntity.organizationId === lastOrganization) {\r\n\r\n                      if (element.organizationEntity.connectionKey) {\r\n                        connectionKey = element.organizationEntity.connectionKey\r\n                      }\r\n                      if (element.roleId) {\r\n                        console.log(element.roleId);\r\n                        storage.roleId = element.roleId\r\n                      }\r\n\r\n                      break\r\n                    }\r\n                  }\r\n                }\r\n                storage.connectionKey = connectionKey\r\n\r\n              } else {\r\n                storage.userWorkplace = ''\r\n                storage.connectionKey = ''\r\n              }\r\n              this.props.history.push('/uesr/selectExam')\r\n\r\n\r\n\r\n\r\n\r\n\r\n              // storage.userId = res.data.userId\r\n              // storage.roleId = res.data.roleId\r\n              // if (res.data.lastWorkplaceId) {\r\n              //   storage.lastWorkplaceId = res.data.lastWorkplaceId\r\n              // } else {\r\n              //   storage.lastWorkplaceId = ''\r\n              // }\r\n              // if (res.data.lastOrganization) {\r\n              //   storage.lastOrganization = res.data.lastOrganization\r\n              // } else {\r\n              //   storage.lastOrganization = ''\r\n              // }\r\n              // this.props.history.push('/uesr/selectExam')\r\n\r\n\r\n              break;\r\n\r\n            default:\r\n\r\n              break;\r\n          }\r\n        }\r\n        console.log('code', res.code);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  _continue = () => {\r\n    this.props.history.replace('/page11')\r\n\r\n  }\r\n\r\n  render() {\r\n    let { url } = this.state\r\n    return (\r\n      <div id=\"scanCodeLogin\" className='pt-3'>\r\n\r\n\r\n        <div className=\"text  mb-3\"\r\n          style={{ fontSize: px(26), width: px(350), marginTop: px(20), marginBottom: px(40) }}\r\n        >\r\n          <h1>Need to confirm login on mobile phone</h1>\r\n        </div>\r\n\r\n        <div className=\"bodycenter\">\r\n          <div className=\"imgF \">\r\n            <img src={url} alt=\"\" style={{ width: px(150), hight: px(150) }} />\r\n          </div>\r\n          <p>{this.state.name}</p>\r\n          <div className=\"success\" style={{ marginTop: px(30) }}>Scan code completed</div>\r\n        </div>\r\n        <div className=\"button1\" style={{ height: px(150) }}>\r\n          <Button\r\n            style={{ width: px(300), fontSize: px(18), height: px(300 / 6.5) }}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            Cancel login\r\n          </Button>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx",["523"],"import React, { Component } from 'react'\r\nimport {\r\n  Input\r\n} from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport Button from '../../../utils/button/Button'\r\n\r\n\r\n\r\nimport './findMyOrganization.less'\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nexport default class JoinworkplaceByName extends Component {\r\n\r\n  state = {\r\n    search: '',\r\n    listData: [],\r\n    searchData: [],\r\n    selectId: {}\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    fetchRequest(`/organization/listAll`, \"GET\", '')\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.msg === 'success') {\r\n          this.setState({\r\n            listData: res.data\r\n          })\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n    this.setState({\r\n      selectId: temporaryStorage.logupSelectOrganization\r\n    })\r\n  }\r\n  _search = (val) => {\r\n    let search = val.target.value\r\n    let { listData } = this.state\r\n    let searchData = []\r\n    for (let i = 0; i < listData.length; i++) {\r\n      if (listData[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        searchData.push(listData[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      search,\r\n      searchData\r\n    })\r\n\r\n  }\r\n  _list = () => {\r\n    const { search, listData, searchData } = this.state\r\n    let data = (search.length > 0) ? searchData : listData\r\n    let option = data.map((item, index) => {\r\n      return <li key={item.organizationId}\r\n        onClick={() => {\r\n          this.setState({\r\n            selectId: item\r\n          })\r\n          console.log(item);\r\n          temporaryStorage.logupSelectOrganization = item\r\n          this.props.history.push('/uesr/logUp/FindMyWorkplace')\r\n\r\n        }}\r\n\r\n      >\r\n        {(this.state.selectId.organizationId === item.organizationId ? <span className=\"search\">&#xe614;</span> : null)}\r\n        {item.name}</li>\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"findMyOrganization\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push('/uesr/logUp/JoinOrganizationByOption')}\r\n        />\r\n        <div className=\"body\">\r\n          <div className=\"text\">Find my organization</div>\r\n\r\n          <div className=\"searchBox\">\r\n            <div><MyIcon type='icon-sousuo' className=\"icon\" /></div>\r\n\r\n            <Input\r\n              placeholder=\"Please input organization name\"\r\n              bordered={false}\r\n              allowClear={true}\r\n              value={this.state.search}\r\n              onChange={this._search}\r\n            />\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"list\">\r\n            {this._list()}\r\n          </div>\r\n\r\n          <Button\r\n            text={'My Organization Isn`t Listed'}\r\n            textBoxStyle={{ marginTop: '50px' }}\r\n            onClick={() => {\r\n              this.props.history.push('/uesr/logUp/NewOrganization')\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx",["524","525"],"import React, { Component } from 'react'\r\nimport {\r\n  Input, message\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport Button from '../../../utils/button/Button'\r\nimport './findMyWorkplace.less'\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nexport default class JoinworkplaceByName extends Component {\r\n\r\n  state = {\r\n    search: '',\r\n    listData: [],\r\n    searchData: [],\r\n    selectId: {}\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    fetchRequest(`/workplace/listAllWorkplaceByOrganizationId/${temporaryStorage.logupSelectOrganization.organizationId}`, \"GET\", '')\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.msg === 'success') {\r\n          this.setState({\r\n            listData: res.data\r\n          })\r\n        } else {\r\n          console.log('请求错误');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  _search = (val) => {\r\n    let search = val.target.value\r\n    let { listData } = this.state\r\n    let searchData = []\r\n    for (let i = 0; i < listData.length; i++) {\r\n      if (listData[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        searchData.push(listData[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      search,\r\n      searchData\r\n    })\r\n\r\n  }\r\n  _list = () => {\r\n    const { search, listData, searchData } = this.state\r\n    let data = (search.length > 0) ? searchData : listData\r\n    let option = data.map((item, index) => {\r\n\r\n      return <li key={item.workplaceId}\r\n        onClick={() => {\r\n          this.setState({\r\n            selectId: item\r\n          })\r\n          console.log(item);\r\n          let params = {\r\n            userId: temporaryStorage.logupSuccessData.userId,\r\n            roleId: 2,\r\n            workplaceId: item.workplaceId,\r\n            organizationId: item.organizationId\r\n          }\r\n          fetchRequest('/user/updateUserInfo', 'POST', params)\r\n            .then(res => {\r\n              console.log(res);\r\n              if (res.flag === true) {\r\n\r\n                console.log('成功',);\r\n                this._logIn()\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              message.error(err.message, 3)\r\n            })\r\n        }}\r\n\r\n      >\r\n        {(this.state.selectId === item ? <span className=\"search\">&#xe614;</span> : null)}\r\n        {item.workplaceName}</li>\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  _logIn = () => {\r\n\r\n    let storage = window.localStorage;\r\n    let { email, hash } = temporaryStorage.logupVetInfo\r\n    let params = {\r\n      email: email.replace(/(^\\s*)/g, \"\"),\r\n      hash,\r\n      identityTypeId: '1'\r\n    }\r\n    fetchRequest('/user/mellaLogin', 'POST', params)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status && res.status === 404) {\r\n          message.error('system error');\r\n          return\r\n        }\r\n        if (res.code === 10001 && res.msg === '账号错误') {\r\n          message.error('Account error');\r\n          return\r\n        }\r\n        if (res.code === 10002 && res.msg === '密码错误') {\r\n          message.error('wrong password')\r\n          return;\r\n        }\r\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\r\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\r\n          return\r\n        }\r\n\r\n        if (res.code === 0 && res.msg === 'success') {\r\n          console.log('账号密码正确，登录进去了');\r\n          let { userWorkplace, lastOrganization, token } = res.success\r\n          storage.token = token\r\n          storage.userId = ''\r\n\r\n          storage.userId = res.success.userId\r\n          storage.roleId = res.success.roleId\r\n\r\n          //每次登陆后清空宠物列表缓存的数据\r\n          storage.doctorList = ''\r\n          storage.defaultCurrent = ''\r\n          if (userWorkplace) {\r\n            storage.userWorkplace = JSON.stringify(userWorkplace)\r\n            let connectionKey = ''\r\n            const element = userWorkplace[0];\r\n            storage.lastOrganization = element.organizationEntity.organizationId\r\n            storage.lastWorkplaceId = element.workplaceEntity.workplaceId\r\n            if (element.organizationEntity.connectionKey) {\r\n              connectionKey = element.organizationEntity.connectionKey\r\n            }\r\n            if (element.roleId) {\r\n              console.log(element.roleId);\r\n              storage.roleId = element.roleId\r\n            }\r\n            if (userWorkplace.length === 1) {\r\n              this.props.history.push('/uesr/selectExam')\r\n\r\n            } else {\r\n              this.props.history.push('/page12')\r\n            }\r\n          } else {\r\n            storage.userWorkplace = ''\r\n            storage.connectionKey = ''\r\n            this.props.history.push('/uesr/selectExam')\r\n          }\r\n\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  render () {\r\n    return (\r\n      <div id=\"findMyWorkplace\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.goBack()}\r\n        />\r\n        <div className=\"body\">\r\n          <div className=\"text\">Find my workplace</div>\r\n\r\n          <div className=\"searchBox\">\r\n            <div><MyIcon type='icon-sousuo' className=\"icon\" /></div>\r\n\r\n            <Input\r\n              placeholder=\"Please input workplace name\"\r\n              bordered={false}\r\n              allowClear={true}\r\n              value={this.state.search}\r\n              onChange={this._search}\r\n            />\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"list\">\r\n            {this._list()}\r\n          </div>\r\n          <Button\r\n            text={'My Workplace Isn`t Listed'}\r\n            textBoxStyle={{ marginTop: '50px' }}\r\n            onClick={() => {\r\n              this.props.history.push('/uesr/logUp/NewWorkplace')\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx",["526","527","528","529","530"],"import React, { Component, } from 'react'\r\nimport {\r\n  Button,\r\n  Input,\r\n  Form,\r\n  Select,\r\n  Space,\r\n  Modal,\r\n\r\n  message\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport { createFromIconfontCN, CaretDownFilled } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport './newWorkplace.less'\r\nimport imgArray from './../../../utils/areaCode/imgArray'\r\nimport MaxMin from './../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest2 } from './../../../utils/FetchUtil2'\r\nimport { fetchRequest } from './../../../utils/FetchUtil1'\r\nimport countryList from './../../../utils/areaCode/country';\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\n\r\nconst { Option } = Select;\r\nexport default class NewWorkplace extends Component {\r\n\r\n  state = {\r\n    code: 1,\r\n    imgArrayIndex: 0,\r\n    phone: '',\r\n    practiceName: '',\r\n    address: '',\r\n    country: '',\r\n    city: '',\r\n    state: '',\r\n    zipcode: '',\r\n    address1: '',\r\n    address2: '',\r\n    workplaceTypeId: 1,\r\n    email: '',\r\n    visible: false,       //nodel框是否显示\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('middle')\r\n\r\n  }\r\n\r\n\r\n\r\n  _next = () => {\r\n    let { practiceName, workplaceTypeId, code, phone, country, city, state, address1, address2, zipcode, email } = this.state\r\n    message.destroy()\r\n\r\n    if (!practiceName) {\r\n      message.error('Please enter an Practice name', 3)\r\n      return;\r\n    }\r\n    if (!email) {\r\n      message.error('Please enter the contact email', 3)\r\n      return;\r\n    } else {\r\n      if (email.indexOf('@') === -1 || email.indexOf('@') === 0 || email.indexOf('@') === email.length - 1) {\r\n        message.error('E-mail format is incorrect', 3)\r\n        return\r\n      }\r\n    }\r\n    if (!phone) {\r\n      message.error('Please enter the phone number', 3)\r\n      return;\r\n    }\r\n    if (!country) {\r\n      message.error('Please enter country name', 3)\r\n      return;\r\n    }\r\n    if (!city) {\r\n      message.error('Please enter the city name', 3)\r\n      return;\r\n    }\r\n    if (!address1) {\r\n      message.error('Please enter address1', 3)\r\n      return;\r\n    }\r\n    if (!address2) {\r\n      message.error('Please enter address2', 3)\r\n      return;\r\n    }\r\n    if (!zipcode) {\r\n      message.error('Please enter the postal code', 3)\r\n      return;\r\n    }\r\n\r\n\r\n    let params = {\r\n      organizationId: temporaryStorage.logupSelectOrganization.organizationId,\r\n      workplaceName: practiceName,\r\n      workplaceTypeId,\r\n      address1,\r\n      address2,\r\n      phone: `+${code}${phone}`,\r\n      country,\r\n      city,\r\n      state,\r\n      zipcode,\r\n      email\r\n    }\r\n\r\n    console.log('入参信息：', params);\r\n    let { userId } = temporaryStorage.logupSuccessData\r\n    fetchRequest(`/workplace/addWorkplace/${userId}`, \"POST\", params)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.code === 20000) {\r\n          this.props.history.push('/uesr/logUp/FindMyWorkplace')\r\n        } else if (res.code === 11029) {\r\n          message.error('The workplace has been registered!', 3)\r\n        }\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        message.error(err.message, 3)\r\n      })\r\n  }\r\n\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  render () {\r\n\r\n    let { disabled, visible, bounds, address1, address2, phone, practiceName, country, city, state, zipcode, workplaceTypeId, email } = this.state\r\n    return (\r\n      <div id=\"newWorkplace\" >\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.goBack()}\r\n        />\r\n        <div className=\"text\">\r\n          New Practice\r\n        </div>\r\n        <div className=\"text1\">Tell us more about the place you will be using Mella!</div>\r\n        <div className=\"form\">\r\n          <div className=\"item\">\r\n            <div className=\"l\">\r\n              <p>Practice Name*</p>\r\n              <input\r\n                type=\"text\"\r\n                value={practiceName}\r\n                placeholder={'Practice Name'}\r\n                onChange={(value) => {\r\n                  let data = value.target.value\r\n                  this.setState({\r\n                    practiceName: data\r\n                  })\r\n                }}\r\n              />\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"item\">\r\n\r\n\r\n\r\n            <div className=\"l\">\r\n              <p>Contact Email*</p>\r\n              <input\r\n                type=\"Email\"\r\n                value={email}\r\n                placeholder={'Contact Email'}\r\n                onChange={(value) => {\r\n                  let data = value.target.value\r\n                  this.setState({\r\n                    email: data\r\n                  })\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n\r\n            <div className=\"l\">\r\n              <p>Type of Practice*</p>\r\n              <div className=\"select\" >\r\n                <Select\r\n                  value={workplaceTypeId}\r\n                  style={{ width: '100%', borderRadius: '100px' }}\r\n                  onChange={(value) => { this.setState({ workplaceTypeId: value }) }}\r\n                >\r\n                  <Option value={1}>practice </Option>\r\n                  <Option value={2}>clinic </Option>\r\n                  <Option value={3}>shelter</Option>\r\n                </Select>\r\n              </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"l\">\r\n              <ul id=\"list\">\r\n                {countryList.map((item, index) => {\r\n                  let url = imgArray[item.locale.toLowerCase()] ? imgArray[item.locale.toLowerCase()].default : ''\r\n                  return (\r\n                    <li key={index}>\r\n                      <div key={index}\r\n                        style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\r\n                        onClick={() => {\r\n                          console.log(item, index);\r\n                          this.setState({\r\n                            code: item.code,\r\n                            imgArrayIndex: index\r\n                          })\r\n                          document.getElementById('list').style.display = \"none\"\r\n                        }}\r\n                      >\r\n                        <img src={url} alt=\"\" />\r\n                        <p >{`${item.en}   +${item.code}`}</p>\r\n                      </div>\r\n                    </li>\r\n                  )\r\n                })}\r\n              </ul>\r\n\r\n              <p>Contact Number*</p>\r\n              <div className='phone'>\r\n                <div\r\n                  style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\r\n                  onClick={() => {\r\n                    document.getElementById('list').style.display = \"block\"\r\n                  }}\r\n                >\r\n                  <img style={{ zIndex: '888' }}\r\n                    src={imgArray[countryList[this.state.imgArrayIndex].locale.toLowerCase()].default} alt=\"\"\r\n                  />\r\n                  <CaretDownFilled style={{ marginRight: '10px' }} />\r\n                </div>\r\n\r\n\r\n                <input\r\n                  type=\"Phone\"\r\n                  value={phone}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      phone: data.replace(/[^\\-?\\d]/g, '')\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"item\">\r\n            <div className=\"l\">\r\n              <p>Address*</p>\r\n              <div className=\"inputs\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={country}\r\n                  placeholder={'country'}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      country: data\r\n                    })\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={city}\r\n                  placeholder={'city'}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      city: data\r\n                    })\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={state}\r\n                  placeholder={'state'}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      state: data\r\n                    })\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={address1}\r\n                  placeholder={'address1'}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      address1: data\r\n                    })\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={address2}\r\n                  placeholder={'address2'}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      address2: data\r\n                    })\r\n                  }}\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  value={zipcode}\r\n                  placeholder={'zipcode'}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      zipcode: data\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* 按钮 */}\r\n          <div className=\"btn\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size='large'\r\n              htmlType=\"submit\"\r\n              onClick={this._next}\r\n            >\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          title={\r\n            <div\r\n              style={{\r\n                width: '100%',\r\n                cursor: 'move',\r\n                height: '20px',\r\n                fontWeight: '700'\r\n              }}\r\n              onMouseOver={() => {\r\n                if (disabled) {\r\n                  this.setState({\r\n                    disabled: false,\r\n                  });\r\n                }\r\n              }}\r\n              onMouseOut={() => {\r\n                this.setState({\r\n                  disabled: true,\r\n                });\r\n              }}\r\n            >\r\n              remind\r\n            </div>\r\n          }\r\n          visible={visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          modalRender={(modal) => (\r\n            <Draggable\r\n              disabled={disabled}\r\n              bounds={bounds}\r\n              onStart={(event, uiData) => this.onStart(event, uiData)}\r\n            >\r\n              <div ref={this.draggleRef}>{modal}</div>\r\n            </Draggable>\r\n          )}\r\n          footer={[\r\n            <button\r\n              style={{ width: '110px', height: '40px', border: 0, backgroundColor: '#E1206D', color: '#fff', borderRadius: '60px', fontSize: '18px' }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  visible: false,\r\n                  email: ''\r\n                })\r\n              }}\r\n            >Cancel</button>,\r\n            <button\r\n              style={{ width: '110px', height: '40px', border: 0, backgroundColor: '#E1206D', color: '#fff', borderRadius: '60px', fontSize: '18px' }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  visible: false\r\n                })\r\n                this.props.history.replace('/uesr/logUp/FindMyOrganization')\r\n              }}\r\n            >Join</button>\r\n\r\n          ]}\r\n          destroyOnClose={true}\r\n        >\r\n          <div id='vetPrifileModal'>\r\n\r\n            <p>This organization has already been registered, do you want to join?</p>\r\n          </div>\r\n\r\n        </Modal>\r\n\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\settings\\Settings.jsx",["531","532","533","534","535","536","537","538","539"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx",["540","541","542","543","544","545","546","547","548","549","550","551"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\addDevice\\AddDevice.jsx",["552","553","554","555","556","557","558","559","560","561"],"import React, { Component } from 'react'\r\nimport { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './addDevice.less'\r\nimport MinClose from '../../../utils/minClose/MinClose'\r\nimport MouseDiv from '../../../utils/mouseDiv/MouseDiv'\r\nimport back_white from '../../../assets/img/back-white.png'\r\nimport back_hui from '../../../assets/img/back-hui.png'\r\nimport redclose from '../../../assets/img/redclose.png'\r\nimport MyModal from './../../../utils/myModal/MyModal'\r\nimport { mTop, px, MTop, pX } from '../../../utils/px';\r\nimport electronStore from '../../../utils/electronStore';\r\n\r\nlet storage = window.localStorage;\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\nlet num07 = 0       //接收到07命令行的次数\r\n\r\n\r\nexport default class AddDevice extends Component {\r\n\r\n  state = {\r\n    noUSB: false,\r\n    devicesList: [],\r\n    selectDevice: null,\r\n    // selectDevice: true,\r\n    reName: '',\r\n    saveDeviceMac: []  //这是已经保存过的设备的macid\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    message.destroy()\r\n\r\n    ipcRenderer.send('small')\r\n    // 监听分辨率是否改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    //这里做了个监听，当有数据发过来的时候直接在这里接收\r\n    ipcRenderer.on('sned', this._send)\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    let devicesList = electronStore.get(`${storage.userId}-deviceList`)\r\n    if (devicesList) {\r\n      let saveDeviceMac = []\r\n      for (let i = 0; i < devicesList.length; i++) {\r\n        const element = devicesList[i];\r\n        saveDeviceMac.push(element.macId)\r\n      }\r\n      this.setState({\r\n        saveDeviceMac\r\n      })\r\n    }\r\n\r\n\r\n\r\n    // const timer = setTimeout(() => {\r\n    //   let deviceList = [\r\n    //     // { name: 'Add Device', deviceType: 'add', macId: '0' },\r\n    //     { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:55:66' },\r\n    //   ]\r\n    //   this.setState({\r\n    //     devicesList: deviceList\r\n    //   })\r\n    //   clearTimeout(timer)\r\n    // }, 500);\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    ipcRenderer.removeListener('sned', this._send)\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      message.destroy()\r\n      this.setState({\r\n        noUSB: false\r\n      })\r\n    } else {\r\n      if (!this.state.noUSB) {\r\n        // message.error('The base is not detected. Please insert the base', 0)\r\n        this.setState({\r\n          noUSB: true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n    // console.log(data);\r\n    this.command(data)()\r\n  }\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  command = (newArr) => {\r\n    const instruction = [255]\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    // console.log(dataArr1);\r\n    const commandArr = {\r\n      255: () => {//蓝牙软尺广播的数据\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n\r\n        let bluName = ''\r\n        let bluData = []\r\n        //[\"aa\", \"25\", \"ff\", |\"03\", \"03\", \"b0\", \"ff\",| \"0f\", \"ff\", \"ac\", \"d2\", \"0b\", \"72\", \"c1\", \"7d\", \"3e\", \"d0\", \"a0\", \"00\", \"05\", \"09\", \"00\", \"2e\",| \"05\", \"09\", \"54\", \"61\", \"70\", \"65\", |\"06\", \"ef\", \"d0\", \"3e\", \"7d\", \"c1\", \"72\", |\"0b\", \"5c\", \"55\"]\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5])\r\n          }\r\n          // console.log('--剪切的数据---', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              let str = ''\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                let item = parseInt(itemData[i], 16)\r\n                str += String.fromCharCode(item)\r\n              }\r\n              bluName = str\r\n              break;\r\n            case 255:\r\n              bluData = itemData\r\n              break;\r\n            case 7: console.log('---UUID'); break;\r\n            case 239:\r\n              // console.log('---mac地址'); \r\n              break;\r\n            case 3: console.log('----尺子的,不知道什么用'); break;\r\n            default: console.log('直接跳出循环'); return;\r\n          }\r\n          dataIndex = itemLength\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\r\n        }\r\n        console.log('硬件名称', bluName, '-----硬件数据', bluData);\r\n        let macId = ''\r\n        if (bluData.length > 7) {\r\n          macId = this.getMac(bluName, bluData)\r\n        }\r\n\r\n\r\n        let sameFlog = this.state.devicesList.some((device, index) => {\r\n          return device.macId === macId\r\n        })\r\n        if (sameFlog || !macId) {   //重复直接退出\r\n          return\r\n        }\r\n        let deviceType = ''\r\n        switch (bluName) {\r\n          case 'Biggie':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n          case 'C19':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n\r\n          case 'MaeBowl':   //这是称量碗\r\n            deviceType = 'maeBowl'\r\n            break;\r\n\r\n          case 'Mella Measure': //这是蓝牙尺\r\n            deviceType = 'tape'\r\n            break;\r\n\r\n        }\r\n        if (macId && deviceType && bluName) {\r\n          let json = {\r\n            name: bluName,\r\n            deviceType,\r\n            macId\r\n          }\r\n          let deviceArr = [].concat(this.state.devicesList)\r\n          deviceArr.push(json)\r\n          this.setState({\r\n            devicesList: deviceArr\r\n          })\r\n        }\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n  }\r\n  getMac = (bluName, bluData) => {\r\n    switch (bluName) {\r\n      case 'Biggie':\r\n      case 'MaeBowl':\r\n      case 'Mella Measure':\r\n      case 'C19':\r\n        let str = bluData[1]\r\n        for (let i = 2; i < 7; i++) {\r\n          str += `:${bluData[i]}`\r\n        }\r\n        return str\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  changeFenBianLv = (e) => {\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n    })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  body = () => {\r\n    let { noUSB, devicesList, selectDevice, reName } = this.state\r\n    if (selectDevice) {\r\n      return <div className=\"addDevice flex\">\r\n        <div className=\"addDeviceTop flex\">\r\n          <div className=\"title\" style={{ fontSize: px(30), marginBottom: px(40) }}>Would you like to name<br />\r\n            this Mella device?</div>\r\n\r\n          <div className=\"input flex\" style={{ marginBottom: px(60) }}>\r\n            <input type=\"text\" style={{ height: px(45) }}\r\n              value={reName}\r\n              onChange={(value) => {\r\n                this.setState({\r\n                  reName: value.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\r\n          on the Exam Room. Write the name\r\n          on the sticker provided so it is easy\r\n            to select your device in the future.</div>\r\n        </div>\r\n        <div className=\"addDeviceFoot flex\">\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              console.log('---', deviceList);\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              let { saveDeviceMac } = this.state\r\n              saveDeviceMac.push(selectDevice.macId)\r\n              this.setState({\r\n                saveDeviceMac,\r\n                selectDevice: null,\r\n                reName: ''\r\n              })\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Add Another</p>\r\n          </div>\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              this.props.history.goBack()\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Finish</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    } else {\r\n      if (noUSB) {\r\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\r\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\r\n\r\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\r\n        </div>\r\n      } else {\r\n        if (devicesList.length === 0) {\r\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n            {/* < MyModal\r\n              visible={true}\r\n              element={\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n                  <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n                  </div>\r\n                  <p>\r\n                    {'searching...'}\r\n                  </p>\r\n                </div>\r\n              }\r\n            /> */}\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\r\n              <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\r\n              </div>\r\n              <p>\r\n                {'searching...'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        } else {\r\n          let options = devicesList.map((item, index) => {\r\n            let { saveDeviceMac } = this.state\r\n            let flog = saveDeviceMac.some((device, index) => {\r\n              return device === item.macId\r\n            })\r\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\r\n            return <li\r\n              className='flex'\r\n              style={{ marginBottom: px(20) }}\r\n              key={`${index}`}\r\n              onClick={() => {\r\n                if (!flog) {\r\n                  this.setState({\r\n                    selectDevice: item\r\n                  })\r\n                } else {\r\n                  message.destroy();\r\n                  message.error('This device has already been added')\r\n                }\r\n\r\n              }}\r\n            >\r\n\r\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\r\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\r\n\r\n            </li>\r\n          })\r\n          return <div className='deviceList'>\r\n            <ul>\r\n              {options}\r\n            </ul>\r\n          </div>\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"addDevice\">\r\n        <div className=\"heaed\">\r\n          <div className=\"l\"\r\n          >\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                let { selectDevice } = this.state\r\n                if (selectDevice) {\r\n                  this.setState({\r\n                    selectDevice: null\r\n                  })\r\n                } else {\r\n                  this.props.history.goBack()\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body flex\">\r\n          {this.body()}\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx",["562","563","564","565","566","567","568","569","570","571"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil1.js",["572","573","574","575"],"\r\n// let COMMON_URL = 'http://106.14.220.139:8043/mellaserver';//本地\r\nlet COMMON_URL = 'https://www.mellaserver.com/api/mellaserver';//企业AWS\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchRequest (url, method, params = '', Authorization = '') {\r\n\r\n    if (method === 'GET' || method === 'DELETE') {\r\n        let header = {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n        };\r\n        if (params == '') {\r\n            return new Promise(function (resolve, reject) {\r\n                fetch(COMMON_URL + url, {\r\n                    method: method,\r\n                }).then((Response) => Response.json())\r\n                    .then((responseData) => {\r\n                        resolve(responseData)\r\n                    })\r\n                    .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n            });\r\n        } else {\r\n            // 定一个空数组\r\n            let paramsArray = [];\r\n            //  拆分对象\r\n            Object.keys(params).forEach(key =>\r\n                paramsArray.push(key + \"=\" + params[key])\r\n            );\r\n            // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n            if (url.search(/\\?/) === -1) {\r\n                url = url + \"?\" + paramsArray.join(\"&\");\r\n            } else {\r\n                url = url + \"&\" + paramsArray.join(\"&\");\r\n            }\r\n            return new Promise(function (resolve, reject) {\r\n                fetch(COMMON_URL + url, {\r\n                    method: method,\r\n                    headers: {\r\n                        \"Content-Type\": 'text/plain'\r\n                    }\r\n                }).then((response) => response.json())\r\n                    .then((responseData) => {\r\n                        resolve(responseData);\r\n                    })\r\n                    .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n            });\r\n        }\r\n    } else {\r\n        let header = {\r\n            \"Content-type\": \"application/json\"\r\n        };\r\n        if (Authorization) {\r\n            header.Authorization = Authorization\r\n        }\r\n        // console.log(header);\r\n        if (params == '') {\r\n            return new Promise(function (resolve, reject) {\r\n                fetch(COMMON_URL + url, {\r\n                    method: method,\r\n                    headers: header\r\n                }).then((Response) => Response.json())\r\n                    .then((responseData) => {\r\n                        resolve(responseData)\r\n                    })\r\n                    .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n            });\r\n        } else {\r\n            console.log('进入着了', Authorization, header);\r\n            return new Promise(function (resolve, reject) {\r\n                fetch(COMMON_URL + url, {\r\n                    method: method,\r\n                    // mode: 'cors',\r\n                    headers: header,\r\n                    body: JSON.stringify(params),\r\n                }).then((response) => response.json())\r\n                    .then((responseData) => {\r\n                        resolve(responseData);\r\n                    })\r\n                    .catch((err) => {\r\n                        reject(err);\r\n                    });\r\n            });\r\n        }\r\n    }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js",["576","577","578"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx",["579","580","581","582","583","584","585","586","587","588","589","590","591","592","593"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate'\r\nimport electronStore from '../../utils/electronStore';\r\nimport blueSearch from './../../assets/img/blueSerch.png'\r\nimport biggieHome from './../../assets/img/searchType-biggieHome.png'\r\nimport biggiePro from './../../assets/img/searchType-biggiePro.png'\r\nimport mellaHome from './../../assets/img/searchType-home.png'\r\nimport mellaPro from './../../assets/img/searchType-mellaPro.png'\r\nimport maeBowl from './../../assets/img/searchType-maeBowl.png'\r\nimport other from './../../assets/img/searchType-other.png'\r\nimport possum from './../../assets/img/searchType-possum.png'\r\nimport rfid from './../../assets/img/searchType-rfid.png'\r\nimport MinClose from '../../utils/minClose/MinClose'\r\nimport MouseDiv from '../../utils/mouseDiv/MouseDiv'\r\nimport back_white from '../../assets/img/back-white.png'\r\nimport back_hui from '../../assets/img/back-hui.png'\r\nimport redclose from '../../assets/img/redclose.png'\r\nimport MyModal from './../../utils/myModal/MyModal'\r\nimport { mTop, px, MTop, pX } from '../../utils/px';\r\nimport './mainbody.less'\r\nimport { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList } from '../../store/actions';\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst AddDevice = ({ bodyHeight, hardwareReducer, isHaveUsbDevice, receiveBroadcastHardwareInfo, hardwareList, setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }) => {\r\n    //是否有底座设备\r\n    const [noUSB, setNoUSB] = useState(false)\r\n    //设备列表\r\n    const [devicesList, setDevicesList] = useState([])\r\n    //选择的设备\r\n    const [selectDevice, setSelectDevice] = useState(null)\r\n    //重命名\r\n    const [reName, setReName] = useState('')\r\n    //房间号\r\n    const [examRoom, setExamRoom] = useState('')\r\n    //已经保存过的设备的macid\r\n    const [saveDeviceMac, setSaveDeviceMac] = useState([])\r\n    //顶部文本\r\n    const [topText, setTopText] = useState(' Pair Device')\r\n\r\n    //初始化\r\n    useEffect(() => {\r\n        setNoUSB(false)\r\n        setDevicesList([])\r\n        setSelectDevice(null)\r\n        setReName('')\r\n        setSaveDeviceMac([])\r\n        setTopText(' Pair Device')\r\n        //组件渲染完毕后要先清空广播的硬件信息\r\n        setReceiveBroadcastHardwareInfoFun({\r\n            deviceType: '',\r\n            macId: '',\r\n            name: ''\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (hardwareList.length > 0) {\r\n            let saveDeviceMac = []\r\n            for (let i = 0; i < hardwareList.length; i++) {\r\n                const element = hardwareList[i];\r\n                for (let j = 0; j < element.devices.length; j++) {\r\n                    const device = element.devices[j];\r\n                    saveDeviceMac.push(device.mac)\r\n                }\r\n            }\r\n            setSaveDeviceMac(saveDeviceMac)\r\n\r\n        }\r\n    }, [hardwareList])\r\n    useEffect(() => {\r\n        if (!selectDevice) {\r\n            setTopText(' Pair Device')\r\n        } else {\r\n            setTopText('Device Connected')\r\n        }\r\n\r\n    }, [selectDevice])\r\n    useEffect(() => {\r\n        setNoUSB(!isHaveUsbDevice)\r\n    }, [isHaveUsbDevice])\r\n    useEffect(() => {\r\n        let sameFlog = devicesList.some((device, index) => {\r\n            return device.macId === receiveBroadcastHardwareInfo.macId\r\n        })\r\n        if (sameFlog || !receiveBroadcastHardwareInfo.macId) {   //重复直接退出\r\n            return\r\n        }\r\n        console.log('receiveBroadcastHardwareInfo', devicesList, receiveBroadcastHardwareInfo);\r\n        let deviceArr = [].concat(devicesList)\r\n        deviceArr.push(receiveBroadcastHardwareInfo)\r\n        setDevicesList(deviceArr)\r\n\r\n\r\n\r\n    }, [receiveBroadcastHardwareInfo])\r\n\r\n    const addDevice = () => {\r\n        //从redux拿到列表中的所有硬件设备 hardwareList\r\n        console.log('hardwareList', hardwareList);\r\n        //拿到硬件的macid 类型 名称 房间号\r\n        console.log('selectDevice', selectDevice);\r\n        let sameFlog = hardwareList.some((item, index) => {\r\n            return item.type === selectDevice.deviceType\r\n        })\r\n        let hardwareArr = [].concat(hardwareList)\r\n        let { deviceType, macId, name } = selectDevice\r\n        let newDevice = {\r\n            name: reName || name,\r\n            mac: macId,\r\n            deviceType,\r\n            examRoom: examRoom || '',\r\n        }\r\n        console.log('newDevice', newDevice);\r\n        if (sameFlog) {\r\n            //相同就代表有这个硬件类型,可以直接去push\r\n\r\n            for (let i = 0; i < hardwareArr.length; i++) {\r\n                if (hardwareArr[i].type === selectDevice.deviceType) {\r\n                    hardwareArr[i].devices.push(newDevice)\r\n                    break\r\n                }\r\n            }\r\n\r\n        } else {\r\n            //没有就要新建一个硬件类型\r\n            let json = {\r\n                type: selectDevice.deviceType,\r\n                devices: [newDevice]\r\n            }\r\n            hardwareArr.push(json)\r\n        }\r\n        setReName('')\r\n        setExamRoom('')\r\n        setHardwareList(hardwareArr)\r\n\r\n        return newDevice\r\n\r\n\r\n    }\r\n\r\n    const body = () => {\r\n\r\n        if (selectDevice) {\r\n            return <div className=\"addDevice1 flex\">\r\n                <div className=\"addDeviceTop flex\">\r\n                    <div className=\"title\" style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(20) }}>Would you like to name<br />\r\n                        {`this ${selectDevice.name} device?`}</div>\r\n\r\n                    <div className=\"title\" style={{ fontSize: px(24), marginBottom: px(40), }}>\r\n                        {`SN: ${selectDevice.macId}`}</div>\r\n\r\n\r\n                    <div className=\"input flex\" style={{ marginBottom: px(20), width: px(400) }}>\r\n                        <input type=\"text\" style={{ height: px(45) }}\r\n                            value={reName}\r\n                            onChange={(value) => {\r\n                                setReName(value.target.value)\r\n\r\n                            }}\r\n                            placeholder={`${selectDevice.name} Device Name`}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input flex\" style={{ marginBottom: px(60), width: px(400) }}>\r\n                        <input type=\"text\" style={{ height: px(45) }}\r\n                            value={examRoom}\r\n                            onChange={(value) => {\r\n                                setExamRoom(value.target.value)\r\n\r\n                            }}\r\n                            placeholder={`Exam Room Name`}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\r\n                        on the Exam Room. Write<br /> the name\r\n                        on the sticker provided so it is easy\r\n                        to select<br /> your device in the future.</div>\r\n                </div>\r\n                <div className=\"addDeviceFoot flex\">\r\n                    <div className=\"btn\"\r\n                        onClick={() => {\r\n                            addDevice()\r\n                            setSelectDevice(null)\r\n                            setSelectHardwareType('add')\r\n\r\n                        }}\r\n                    >\r\n                        <p className='btnText'>Add Another Device</p>\r\n                    </div>\r\n                    <div className=\"btn\"\r\n                        onClick={() => {\r\n                            let newDevice = addDevice()\r\n                            setSelectHardwareType(selectDevice.deviceType)\r\n\r\n\r\n                            electronStore.set(`${storage.lastOrganization}-${storage.userId}-${selectDevice.deviceType}-selectDeviceInfo`, newDevice)\r\n                            setSelectDevice(null)\r\n                        }}\r\n                    >\r\n                        <p className='btnText'>Finish</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        } else {\r\n            if (noUSB) {\r\n                return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\r\n                    <img src={redclose} alt=\"\" style={{ width: px(80) }} />\r\n\r\n                    <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\r\n                </div>\r\n            } else {\r\n                if (devicesList.length === 0) {\r\n                    let options = (val) => {\r\n                        let arr = []\r\n                        if (val === 1) {\r\n                            arr = [mellaPro, mellaHome, biggiePro, biggieHome, rfid]\r\n                        } else {\r\n                            arr = [possum, maeBowl, other]\r\n                        }\r\n                        let option = arr.map((item, index) => {\r\n                            let imgWidth = px(80)\r\n                            imgWidth = index === 2 ? px(65) : imgWidth\r\n                            return (<li key={index.toString()} style={{ margin: `${px(20)}px` }}>\r\n                                <div className=\"searchType-item\" key={index} >\r\n                                    <img src={item} alt=\"\" width={imgWidth} />\r\n                                </div>\r\n                            </li>)\r\n                        })\r\n                        return (\r\n                            <ul>\r\n                                {option}\r\n                            </ul>\r\n                        )\r\n                    }\r\n                    return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n\r\n\r\n                        <div className=\"addDeviceContent\">\r\n                            <div className=\"blueAnimal\" style={{ marginTop: px(50) }}>\r\n                                {/* <img src={blueSearch} alt=\"\" width={px(150)} /> */}\r\n                                <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                                    <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"openText\" style={{ margin: `${px(15)}px 0` }}>\r\n                                Make sure your bluetooth and wifi is<br /> activated and turn on your device.\r\n                            </div>\r\n                            <div className=\"btn\" style={{ width: px(350), height: px(40) }}>\r\n                                <div className=\"btnText\">\r\n                                    Scan For Devices\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"or\" style={{ marginTop: px(10), marginBottom: px(15) }}>\r\n                                Or\r\n                            </div>\r\n                            <div className=\"select\">\r\n                                Select device type to\r\n                            </div>\r\n                            <div className=\"add\">\r\n                                add manually\r\n                            </div>\r\n\r\n                            <div className=\"item\">\r\n                                {options(1)}\r\n                                {options(2)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\r\n                          \r\n                            <p>\r\n                                {'searching...'}\r\n                            </p>\r\n                        </div> */}\r\n                    </div>\r\n                } else {\r\n                    let options = devicesList.map((item, index) => {\r\n\r\n                        let flog = saveDeviceMac.some((device, index) => {\r\n                            return device === item.macId\r\n                        })\r\n                        let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\r\n                        return <li\r\n                            className='flex'\r\n                            style={{ marginBottom: px(20) }}\r\n                            key={`${index}`}\r\n                            onClick={() => {\r\n                                if (!flog) {\r\n                                    setSelectDevice(item)\r\n\r\n                                } else {\r\n                                    message.destroy();\r\n                                    message.error('This device has already been added')\r\n                                }\r\n\r\n                            }}\r\n                        >\r\n\r\n                            <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\r\n                            <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\r\n\r\n                        </li>\r\n                    })\r\n                    return <div className='deviceList ' >\r\n                        <ul>\r\n                            {options}\r\n                        </ul>\r\n                    </div>\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='addDevice' style={{ height: bodyHeight }}>\r\n            <div className=\"addDeviceTitle\" style={{ height: devicesTitleHeight, fontSize: 26, paddingLeft: px(20) }}>\r\n                {topText}\r\n            </div>\r\n\r\n            {body()}\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nAddDevice.propTypes = {\r\n    bodyHeight: PropTypes.number,\r\n    devicesTypeList: PropTypes.array\r\n}\r\n//默认值\r\nAddDevice.defaultProps = {\r\n    bodyHeight: 0,\r\n    devicesTypeList: []\r\n}\r\nexport default connect(\r\n    state => ({\r\n        hardwareReducer: state.hardwareReduce,\r\n        isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\r\n        receiveBroadcastHardwareInfo: state.hardwareReduce.receiveBroadcastHardwareInfo,\r\n        hardwareList: state.hardwareReduce.hardwareList,\r\n    }),\r\n    { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }\r\n)(AddDevice)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx",["594","595","596","597"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx",["598","599","600","601","602","603","604","605","606","607","608","609"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate'\r\n\r\nimport { mTop, px, MTop, pX } from '../../utils/px';\r\nimport PetTable from '../../components/petTable';\r\nimport './allPet.less'\r\nimport { petDetailInfoFun, setMenuNum, setPetListArrFun } from '../../store/actions';\r\nimport moment from 'moment'\r\nimport { fetchRequest } from '../../utils/FetchUtil1';\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst AllPet = ({ bodyHeight, petDetailInfoFun, setMenuNum, setPetListArrFun }) => {\r\n\r\n    //初始化获取宠物列表数据\r\n    const [petListArr, setPetListArr] = useState([])\r\n    //定义宠物列表是否加载中\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    const [spin, setSpin] = useState(false)\r\n\r\n    useEffect(() => {\r\n        //获取宠物列表\r\n        _getExam()\r\n    }, [])\r\n    const _getExam = async () => {\r\n        console.log('进来了');\r\n\r\n\r\n        let params = {\r\n            doctorId: storage.userId,\r\n            offset: 0,\r\n            size: 100,\r\n        }\r\n        if (storage.lastWorkplaceId) {\r\n            params.workplaceId = storage.lastWorkplaceId\r\n        }\r\n        if (storage.lastOrganization) {\r\n            params.organizationId = storage.lastOrganization\r\n        }\r\n\r\n\r\n        console.log('查询宠物的入参', params);\r\n        const isUnKnow = (val) => {\r\n            if (val) {\r\n                return val\r\n            } else {\r\n                return 'unknown'\r\n            }\r\n        }\r\n        setLoading(true)\r\n\r\n        fetchRequest('/user/listAllPetInfo', 'GET', params)\r\n\r\n            .then(res => {\r\n                console.log('查询到的宠物列表,/user/listAllPetInfo', res);\r\n                if (res.flag === true && res.data) {\r\n                    let data = []\r\n                    let oldList = res.data\r\n                    setPetListArrFun(oldList)\r\n                    // let oldList = res.data.list\r\n                    for (let i = 0; i < oldList.length; i++) {\r\n                        let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\r\n                            h2tLength, torsoLength } = oldList[i]\r\n                        let owner = ''\r\n                        patientId = isUnKnow(patientId)\r\n                        petName = isUnKnow(petName)\r\n                        breedName = isUnKnow(breedName)\r\n                        age = isUnKnow(age)\r\n                        weight = isUnKnow(weight)\r\n                        if (!firstName) {\r\n                            firstName = ''\r\n                        }\r\n                        if (!lastName) {\r\n                            lastName = ''\r\n                        }\r\n                        if (lastName === '' && firstName === '') {\r\n                            owner = 'unknown'\r\n                        } else {\r\n                            owner = `${lastName} ${firstName}`\r\n                        }\r\n                        createTime = moment(createTime).format('X')\r\n                        let petGender = ''\r\n                        switch (`${gender}`) {\r\n                            case '1': petGender = 'F'\r\n\r\n                                break;\r\n                            case '0': petGender = \"M\"\r\n                                break;\r\n                            default: petGender = 'unknown'\r\n                                break;\r\n                        }\r\n                        let petAge = 'unknown'\r\n                        if (birthday) {\r\n                            petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n                        }\r\n\r\n                        let json = {\r\n                            insertedAt: createTime,\r\n                            patientId,\r\n                            petName,\r\n                            owner,\r\n                            breed: breedName,\r\n                            gender: petGender,\r\n                            age: petAge,\r\n                            petId,\r\n                            id: i,\r\n                            weight,\r\n                            rfid,\r\n                            url,\r\n                            speciesId,\r\n                            l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n                            h2tLength, torsoLength,\r\n                            pethubId, macId,\r\n\r\n                        }\r\n                        data.push(json)\r\n\r\n                    }\r\n                    data.sort((a, b) => {\r\n                        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n                    })\r\n                    console.log('列表的数据：', data);\r\n                    setPetListArr(data)\r\n                    setLoading(false)\r\n                    setSpin(false)\r\n\r\n\r\n\r\n\r\n                } else {\r\n                    setLoading(false)\r\n                    setSpin(false)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                setSpin(false)\r\n            })\r\n\r\n\r\n\r\n    }\r\n    const _refresh = () => {\r\n        console.log('点击了');\r\n        setSpin(true)\r\n        _getExam()\r\n    }\r\n\r\n    return (\r\n        <div id='allPets' style={{ height: bodyHeight }}>\r\n            <div className=\"allPetHeard\">\r\n                <div className=\"addDeviceTitle flex\" style={{ height: devicesTitleHeight, fontSize: 26, paddingLeft: px(20) }}>\r\n                    <div className=\"title\">Client Results</div>\r\n                    <div className=\"refresh flex\"\r\n                        style={{ fontSize: px(25), marginLeft: px(10) }}\r\n                    >\r\n                        <SyncOutlined onClick={_refresh} spin={spin} />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"walkBtn1\" style={{ marginRight: px(80) }}>\r\n                    <div\r\n                        className=\"walkbtnBox\"\r\n                        style={{ height: px(40), width: px(200) }}\r\n                        onClick={() => {\r\n                            let json = {\r\n                                isWalkIn: true,\r\n                                petId: null,\r\n                                petName: null,\r\n                                owner: null,\r\n                                breed: null,\r\n\r\n                            }\r\n                            petDetailInfoFun(json)\r\n                            setMenuNum(\"1\")\r\n                        }}\r\n                    >\r\n                        <div className=\"walkText\">Walk-In</div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <PetTable\r\n                bodyHeight={bodyHeight - devicesTitleHeight}\r\n                petListArr={petListArr}\r\n                loading={loading}\r\n                resetPetList={(val) => setPetListArr(val)}\r\n\r\n            />\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nAllPet.propTypes = {\r\n\r\n}\r\n//默认值\r\nAllPet.defaultProps = {\r\n    bodyHeight: 0,\r\n}\r\nexport default connect(\r\n    state => ({\r\n\r\n    }),\r\n    { petDetailInfoFun, setMenuNum, setPetListArrFun }\r\n)(AllPet)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx",["610","611","612","613"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx",["614","615","616","617","618","619"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx",["620","621","622","623","624","625"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["626","627","628","629","630","631","632","633","634","635","636","637"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx",["638","639","640","641","642","643","644","645","646"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { px, mTop } from './../../utils/px'\r\nimport cir from './../../assets/images/cir.png'\r\nimport xia from './../../assets/img/xia.png'\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './biggie.less'\r\n\r\n/**\r\n * \r\n * @param {string} weight   体重值\r\n * @param {string} bodyFat   体脂\r\n * @param {string} score   健康指数\r\n * @param {string} impedance   阻抗值\r\n * @param {boolean} issave   按钮文本，为true展示save，为false展示send to pms\r\n * @param {function} onPress   点击按钮调用的函数\r\n * \r\n * @returns \r\n */\r\n\r\nconst Biggie = ({ weight, bodyFat, score, impedance, issave, onPress, discardOnPress, isIbs, isHaveSaveBtn = true }) => {\r\n\r\n  // let { weight, bodyFat, score } = this.props\r\n\r\n  let lTColor = bodyFat !== null && bodyFat >= 0 ? '#87C563' : '#D8D9D9'\r\n  let rTColor = score !== null && score >= 0 ? '#87C563' : '#D8D9D9'\r\n  let lTtext = bodyFat !== null && bodyFat >= 0 ? `${bodyFat}%` : `Not Available`\r\n  let lTtextSize = bodyFat !== null && bodyFat >= 0 ? px(16) : px(15)\r\n  let rTtext = score !== null && score >= 0 ? `${score}` : `Not\\nAvailable`\r\n  let rTtextSize = score !== null && score >= 0 ? px(16) : px(15)\r\n\r\n  return (\r\n    <div className=\"biggie\" >\r\n      <div className=\"top\">\r\n\r\n        <div style={{ marginTop: px(150), height: px(160), borderRadius: px(150) }} className='biggiel'>\r\n          <div style={{ backgroundColor: lTColor, borderRadius: px(75), }} className='lT'>\r\n            <div className='lTText' style={{ fontSize: lTtextSize }}>{lTtext}</div>\r\n          </div>\r\n          <div style={{ fontSize: px(14) }}>{`Body Fat\\nPercent`}</div>\r\n          <img\r\n            src={xia}\r\n            style={{ width: px(20), marginBottom: px(5) }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div style={{ height: px(240), borderRadius: px(150), marginBottom: px(50) }} className='cen'>\r\n          <div style={{ borderRadius: px(75) }} className='lT'>\r\n            <img\r\n              src={cir}\r\n              width={'100%'}\r\n            />\r\n          </div>\r\n          <div className='cTText' style={{ top: px(45), fontSize: px(32), fontWeight: '800' }}>{weight}</div>\r\n          <div style={{ top: px(95), fontSize: px(25) }} className='cTText'>{`${isIbs ? 'lbs' : 'kgs'}`}</div>\r\n          <div className='cenCText' style={{ fontSize: px(24) }}>Weight</div>\r\n          <img\r\n            src={xia}\r\n            style={{ width: px(20), marginBottom: px(6) }}\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n        <div style={{ marginTop: px(150), height: px(160), borderRadius: px(150) }} className='biggiel'>\r\n          <div style={{ backgroundColor: rTColor, borderRadius: px(75) }} className='lT'>\r\n            <div className='lTText' style={{ fontSize: rTtextSize }}>{rTtext}</div>\r\n          </div>\r\n          <div style={{ fontSize: px(14) }}>{`Body\\nCondition\\nScore`}</div>\r\n          <img\r\n            src={xia}\r\n            style={{ width: px(20), marginBottom: px(5) }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <div className='biggiefoot' style={{ marginTop: px(10), }}>\r\n        {isHaveSaveBtn &&\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', width: '100%' }}>\r\n            <div\r\n              className='biggiefootbtn'\r\n              style={{ height: px(36), }}\r\n              onClick={() => {\r\n                discardOnPress()\r\n              }}\r\n            >\r\n              <div style={{ color: '#fff', fontSize: px(16) }}>{`Discard`}</div>\r\n            </div>\r\n\r\n\r\n            <div\r\n              className='biggiefootbtn'\r\n              style={{ height: px(36), }}\r\n              onClick={() => {\r\n                onPress()\r\n              }}\r\n            >\r\n              <div style={{ color: '#fff', fontSize: px(16) }}>{issave ? `Save` : `Send to PMS`}</div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        }\r\n\r\n\r\n        {(impedance && impedance > 0) ? <div style={{ color: '#000', fontSize: px(18), marginTop: mTop(10) }}>{`Impedance ${impedance} Ohms`}</div> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nBiggie.propTypes = {\r\n  weight: PropTypes.string || PropTypes.number,\r\n  bodyFat: PropTypes.number || PropTypes.string,\r\n  score: PropTypes.number || PropTypes.string,\r\n  impedance: PropTypes.number || PropTypes.string,\r\n  issave: PropTypes.bool,\r\n  onPress: PropTypes.func,\r\n  isIbs: PropTypes.bool\r\n}\r\nexport default Biggie","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Progress,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  Badge,\r\n  Modal,\r\n  Popconfirm,\r\n  message,\r\n} from \"antd\";\r\nimport measuredTable_1 from \"./../../assets/img/measuredTable_1.png\";\r\nimport measuredTable_2 from \"./../../assets/img/measuredTable_2.png\";\r\nimport measuredTable_3 from \"./../../assets/img/measuredTable_3.png\";\r\nimport EditCircle from \"./../../assets/img/EditCircle.png\";\r\nimport Delete from \"./../../assets/img/Delete.png\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n} from \"../../store/actions\";\r\nimport Draggable from \"react-draggable\";\r\nimport { fetchRequest } from \"../../utils/FetchUtil1\";\r\nimport { px, mTop } from \"../../utils/px\";\r\nimport electronStore from \"../../utils/electronStore\";\r\nimport moment from \"moment\";\r\nimport \"./index.less\";\r\n\r\nconst HistoryTable = ({\r\n  petMessage,\r\n  hardwareMessage,\r\n  setMellaConnectStatusFun,\r\n  saveNum = 0,\r\n  tableColumnType, //表格内容渲染temperature为温度表格，weight为体重表格\r\n}) => {\r\n  let { mellaMeasureValue, mellaConnectStatus, mellaMeasurePart } =\r\n    hardwareMessage;\r\n  let { petId, memo } = petMessage;\r\n  let storage = window.localStorage;\r\n  let hisHe = mTop(200);\r\n  let draggleRef = React.createRef();\r\n  try {\r\n    let historyElement = document.querySelectorAll(\".historyTable\");\r\n    hisHe = historyElement[0].clientHeight - mTop(60);\r\n  } catch (error) { }\r\n  const [petData, setPetData] = useState([]); //存储宠物历史数据\r\n  const [disabled, setDisabled] = useState(true); //model是否可拖拽\r\n  const [visible, setVisible] = useState(false); //model框是否显示\r\n  const [newMemo, setNewMemo] = useState(\"\"); //note内容\r\n  const [petMessages, setPetMessages] = useState({}); //接收点击了那个的值\r\n  const [saveType, setSaveType] = useState(false); //是否隐藏按钮\r\n  const [bounds, setBounds] = useState({\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n  });\r\n  const [reRender, setReRender] = useState(0);\r\n  const [isHua, setIsHua] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //体重表格渲染\r\n  const weightColumns = [\r\n    {\r\n      title: \"Dat\",\r\n      dataIndex: \"createTime\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record) => moment(text).format(\"MMM D\"),\r\n    },\r\n    {\r\n      title: \"Tim\",\r\n      dataIndex: \"createTime\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record) => moment(text).format(\"hh:mm A\"),\r\n    },\r\n    {\r\n      title: \"Weight\",\r\n      dataIndex: \"weight\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <Badge color={color()} text={_.toNumber(text).toFixed(1)} />\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"BF%\",\r\n      dataIndex: \"fat\",\r\n      key: \"fat\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record, index) => {\r\n        return <p style={{ textAlign: \"center\", color: \"#58BDE6\" }}>{text}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"BCS\",\r\n      dataIndex: \"bodyConditionScore\",\r\n      key: \"bodyConditionScore\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record, index) => {\r\n        return <p style={{ textAlign: \"center\", color: \"#58BDE6\" }}>{text}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Note\",\r\n      dataIndex: \"memo\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record) => text,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <img\r\n            className=\"operationIcon\"\r\n            src={EditCircle}\r\n            onClick={() => {\r\n              setVisible(true);\r\n              setPetMessages(record);\r\n            }}\r\n          />\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => deletePetMessage(record.examId)}\r\n          >\r\n            <img src={Delete} />\r\n          </Popconfirm>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  //温度表格渲染\r\n  const TemperatureColumns = [\r\n    {\r\n      title: \"Date\",\r\n      dataIndex: \"createTime\",\r\n      ellipsis: true,\r\n      // onHeaderCell: (row) => {\r\n      //   return console.log('row',row);\r\n      // } ,\r\n      align: \"center\",\r\n      render: (text, record) => moment(text).format(\"MMM D\"),\r\n    },\r\n    {\r\n      title: \"Time\",\r\n      dataIndex: \"createTime\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record) => moment(text).format(\"hh:mm A\"),\r\n    },\r\n    {\r\n      title: `Temp(${isHua ? \"℉\" : \"℃\"})`,\r\n      dataIndex: \"temperature\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record) => {\r\n        let num = parseFloat(text);\r\n        if (isHua) {\r\n          num = parseInt((num * 1.8 + 32) * 10) / 10;\r\n        } else {\r\n          num = num.toFixed(1);\r\n        }\r\n\r\n        return <Badge color={color(text)} text={num} />;\r\n      },\r\n    },\r\n    {\r\n      title: \"Placement\",\r\n      dataIndex: \"petVitalTypeId\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record) => {\r\n        if (text === 1) {\r\n          return <img src={measuredTable_2} />;\r\n        } else if (text === 3) {\r\n          return <img src={measuredTable_1} />;\r\n        } else if (text === 4) {\r\n          return <img src={measuredTable_3} />;\r\n        } else {\r\n          return <img src={measuredTable_2} />;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      title: \"Notes\",\r\n      dataIndex: \"memo\",\r\n      ellipsis: true,\r\n      align: \"center\",\r\n      render: (text, record) => text,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      align: \"center\",\r\n      render: (text, record) => (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <img\r\n            style={{ cursor: \"pointer\" }}\r\n            src={EditCircle}\r\n            onClick={() => {\r\n              setVisible(true);\r\n              setPetMessages(record);\r\n            }}\r\n          />\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => deletePetMessage(record.examId)}\r\n          >\r\n            <img style={{ cursor: \"pointer\" }} src={Delete} />\r\n          </Popconfirm>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  //选择表格colum渲染\r\n  const columType = () => {\r\n    switch (tableColumnType) {\r\n      case \"temperature\":\r\n        return TemperatureColumns;\r\n      case \"weight\":\r\n        return weightColumns;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //判断指示文字颜色\r\n  const color = (data) => {\r\n    if (data > 40) {\r\n      return \"#e1206d\";\r\n    } else if (_.inRange(_.round(data), 38, 40)) {\r\n      return \"#58bde6\";\r\n    } else {\r\n      return \"#98da86\";\r\n    }\r\n  };\r\n  //获取历史宠物数据\r\n  const getPetTemperatureData = () => {\r\n    setLoading(true);\r\n    fetchRequest(`/pet/getPetExamByPetId/${petId}`, \"GET\", \"\")\r\n      .then((res) => {\r\n        setLoading(false);\r\n        console.log(\"历史记录\", res);\r\n        if (res.flag === true) {\r\n          let arr = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            const element = res.data[i];\r\n            const type = () => {\r\n              switch (tableColumnType) {\r\n                case \"temperature\":\r\n                  return element.temperature;\r\n                case \"weight\":\r\n                  return element.weight;\r\n                default:\r\n                  break;\r\n              }\r\n            };\r\n            if (type()) {\r\n              arr.push(element);\r\n            }\r\n          }\r\n          setPetData(_.orderBy(arr, 'createTime', 'desc'));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n  //保存note\r\n  const save = () => {\r\n    let datas = {\r\n      memo: newMemo,\r\n    };\r\n    fetchRequest(`/pet/updatePetExam/${petMessages.examId}`, \"POST\", datas)\r\n      .then((res) => {\r\n        setVisible(false);\r\n        getPetTemperatureData();\r\n      })\r\n      .catch((err) => {\r\n        setVisible(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n  //删除历史记录\r\n  const deletePetMessage = (examId) => {\r\n    fetchRequest(`/pet/deletePetExamByExamId/${examId}`, \"DELETE\").then(\r\n      (res) => {\r\n        if (res.flag === true) {\r\n          message.success(\"Successfully Delete\");\r\n          getPetTemperatureData();\r\n        } else {\r\n          message.error(\"Fail To Delete\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n  //关闭弹窗\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = draggleRef?.current?.getBoundingClientRect();\r\n    setBounds({\r\n      left: -targetRect?.left + uiData?.x,\r\n      right: clientWidth - (targetRect?.right - uiData?.x),\r\n      top: -targetRect?.top + uiData?.y,\r\n      bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPetTemperatureData();\r\n    return () => { };\r\n  }, [petMessage]);\r\n\r\n  useEffect(() => {\r\n    if (reRender !== saveNum) {\r\n      setReRender(saveNum);\r\n      getPetTemperatureData();\r\n    }\r\n    return () => { };\r\n  }, [saveNum]);\r\n\r\n  useEffect(() => {\r\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\r\n    if (hardSet) {\r\n      let { isHua } = hardSet;\r\n      setIsHua(isHua);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Table\r\n        rowKey={\"examId\"}\r\n        columns={columType()}\r\n        dataSource={petData}\r\n        pagination={false}\r\n        loading={loading}\r\n        scroll={{\r\n          y: hisHe,\r\n        }}\r\n      />\r\n      <Modal\r\n        title={\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              cursor: \"move\",\r\n              height: \"20px\",\r\n              textAlign: \"center\",\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                setDisabled(false);\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              setDisabled(true);\r\n            }}\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          >\r\n            Edit Note\r\n          </div>\r\n        }\r\n        visible={visible}\r\n        onCancel={handleCancel}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => onStart(event, uiData)}\r\n          >\r\n            <div ref={draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={\r\n          [] // 设置footer为空，去掉 取消 确定默认按钮\r\n        }\r\n        destroyOnClose={true}\r\n      >\r\n        <div className=\"noteModal\">\r\n          <div className=\"noteModalText\">\r\n            <p style={{ width: \"80px\" }}>Notes</p>\r\n            <textarea\r\n              rows=\"5\"\r\n              cols=\"40\"\r\n              style={{ textIndent: \"10px\" }}\r\n              // value={petMessages.memo}\r\n              onChange={(val) => {\r\n                setNewMemo(val.target.value);\r\n              }}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"btn\" style={{ width: \"60%\" }} onClick={() => save()}>\r\n            Save Changes\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n  }\r\n)(HistoryTable);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js",["669"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js",["670","671","672","673"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\home\\Home.jsx",["674","675"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["676","677","678","679"],"import React, { Component, } from 'react'\r\nimport {\r\n\r\n  Select,\r\n  DatePicker, Space,\r\n  message,\r\n  Button,\r\n  Input\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './ezyVetSelectTime.less'\r\nimport { FetchEszVet } from './../../utils/FetchEszVet'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class EzyVetSelectTime extends Component {\r\n\r\n  state = {\r\n    startTime: moment(moment().format(\"YYYY-MM-DD\")),\r\n    endTime: moment(),\r\n    patientId: ''\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    console.log(storage.selectTime);\r\n    if (storage.selectTime && `${storage.selectTime}` !== `undefined` && storage.selectTime !== '') {\r\n      try {\r\n        this.setState({\r\n          startTime: moment(JSON.parse(storage.selectTime).startTime),\r\n          endTime: moment(JSON.parse(storage.selectTime).endTime)\r\n        })\r\n      } catch (error) {\r\n        console.log('时间转换错误', error);\r\n      }\r\n\r\n    }\r\n    console.log('============', storage.selectPatientId);\r\n    if (storage.selectPatientId && `${storage.selectPatientId}` !== `undefined` && storage.selectPatientId !== '') {\r\n      try {\r\n        this.setState({\r\n          patientId: storage.selectPatientId\r\n\r\n        })\r\n      } catch (error) {\r\n        console.log('时间转换错误', error);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  _next = () => {\r\n    let { startTime, endTime } = this.state\r\n    if (startTime === null || endTime === null) {\r\n      message.error('Please select a date range')\r\n      return\r\n    }\r\n    let saveSart = startTime.format('YYYY-MM-DD HH:mm:ss'), saveEnd = endTime.format('YYYY-MM-DD HH:mm:ss');\r\n    console.log('开始时间', startTime.format('YYYY-MM-DD HH:mm:ss'), '---------------结束时间', endTime.format('YYYY-MM-DD HH:mm:ss'));\r\n    let chazhi = new Date().getTimezoneOffset()\r\n    chazhi = chazhi + 360\r\n    console.log('差值', chazhi);\r\n    let start = startTime.add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n    let end = endTime.add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n    console.log(start, end);\r\n    let unix = `{\">\": ${moment(start).format('X')}, \"<\": ${moment(end).format('X')}}`\r\n    let uri = encodeURIComponent(unix)\r\n    console.log('-----------', unix, uri);\r\n    storage.unixToURI = uri\r\n    let selectTime = {\r\n      startTime: saveSart,\r\n      endTime: saveEnd,\r\n    }\r\n    console.log('最终的选择时间：', selectTime);\r\n    storage.selectTime = JSON.stringify(selectTime)\r\n    storage.selectPatientId = this.state.patientId\r\n    console.log(storage.selectTime, JSON.parse(storage.selectTime), storage.selectPatientId);\r\n    this.props.history.push('EzyVetSelectExam')\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"ezyVetSelectTime\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push('/ezyVetLogin')}\r\n        />\r\n        <div className=\"text\">\r\n          Please select the scope of <br /> search for medical records\r\n        </div>\r\n\r\n        <div className=\"patirntID\">\r\n          <p style={{ width: '80px' }}>Patient ID:</p>\r\n          <Input\r\n            style={{ outline: 'medium' }}\r\n            value={this.state.patientId}\r\n            // bordered={false}\r\n            onChange={(item) => {\r\n              console.log(item);\r\n              this.setState({\r\n                patientId: item.target.value\r\n              })\r\n            }}\r\n\r\n          />\r\n\r\n        </div>\r\n\r\n        <div className=\"time\">\r\n          <Space direction=\"vertical\" size={12}>\r\n            <RangePicker\r\n              value={[this.state.startTime, this.state.endTime]}\r\n              showTime\r\n              ranges={{\r\n                Today: [moment(moment().format(\"YYYY-MM-DD\")), moment(moment().endOf('day'))],\r\n              }}\r\n              onChange={(dates, dateStrings) => {\r\n                // console.log('From: ', dates[0], ', to: ', dates[1]);\r\n                // console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\r\n                console.log('我是第一个', dates, dateStrings);\r\n                // this.setState({\r\n                //   startTime: dateStrings[0],\r\n                //   endTime: dateStrings[1]\r\n                // })\r\n              }}\r\n              onCalendarChange={(dates, dateStrings) => {\r\n                console.log('我是第二个', dates, dateStrings);\r\n                this.setState({\r\n                  startTime: moment(dateStrings[0]),\r\n                  endTime: moment(dateStrings[1])\r\n                })\r\n              }}\r\n            />\r\n          </Space>\r\n        </div>\r\n\r\n        <div className=\"btn\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._next}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\AddYuding.jsx",["680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx",["696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx",["721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745"],"import React, { Component } from 'react'\r\nimport { Input, Menu, message, Select, Calendar, Col, Row, Spin } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport dog from './../../assets/images/pinkdog.png'\r\nimport cat from './../../assets/images/pinkcat.png'\r\nimport redDog from './../../assets/images/reddog.png'\r\nimport redCat from './../../assets/images/redcat.png'\r\nimport redother from './../../assets/images/redother.png'\r\nimport other from './../../assets/images/other.png'\r\nimport electronStore from '../../utils/electronStore';\r\nimport Close from './../../assets/img/close.png'\r\nimport nextImg from './../../assets/img/nextImg.png'\r\n\r\n\r\n// import selectphoto from './../../assets/images/img.png'\r\nimport selectphoto from './../../assets/images/sel.png'\r\nimport dui from './../../assets/images/dui.png'\r\nimport female from './../../assets/images/female.png'\r\nimport male from './../../assets/images/male.png'\r\nimport './doctorAddPet.less'\r\nimport { mTop, px, win } from '../../utils/px';\r\nimport Avatar from './../avatar/Avatar'\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport Heard from '../../utils/heard/Heard';\r\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\r\nimport Button from './../../utils/button/Button'\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class DoctorAddPet extends Component {\r\n    state = {\r\n        dogImg: dog,\r\n        catImg: cat,\r\n        otherImg: other,\r\n        selectWZ: '',\r\n        closebgc: '',\r\n        minbgc: '',\r\n        closeColor: '',\r\n        api: '',\r\n        id: '',\r\n        seleceID: '',//医生id\r\n        petSpecies: 0,\r\n        unit: 1,\r\n        gender: 0,\r\n        isMix: false,\r\n        imageId: -1,\r\n        imgurl: '',\r\n        catData: [],\r\n        petSpeciesBreedId: '',\r\n        dogData: [],\r\n        breedArr: [],\r\n        birthday: moment(new Date()).format('MMMM D, YYYY'),\r\n        patientId: '',\r\n        petName: '',\r\n\r\n        petId: '',\r\n        lastName: '',\r\n        firstName: '',\r\n        breedName: '',\r\n        owner: '',\r\n        intFlog: false,\r\n        spin: false,\r\n        visible: false,\r\n\r\n        imgurl: '',\r\n        dogBreed: [],\r\n        catBreed: [],\r\n        searchBreed: '',\r\n        selectBreedJson: {},\r\n        confirmSelectBreedJson: {},\r\n        selectBreed: false\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big', win())\r\n        ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n        let dogBreed = electronStore.get('dogBreed') || []\r\n        let catBreed = electronStore.get('catBreed') || []\r\n        this.setState({\r\n            dogBreed,\r\n            catBreed\r\n        })\r\n        this.getBreed('cat')\r\n        this.getBreed('dog')\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n\r\n        ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n    }\r\n    changeFenBianLv = (e) => {\r\n        console.log(e);\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big', win())\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n\r\n    getBreed = (val) => {\r\n        let data = {}\r\n        switch (val) {\r\n            case 'dog':\r\n                data.speciesId = 2; break;\r\n\r\n            case 'cat':\r\n                data.speciesId = 1; break;\r\n        }\r\n\r\n        fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n            .then(res => {\r\n                console.log('---', res);\r\n                if (res.code === 0) {\r\n                    let arr = []\r\n                    res.petlist.map((item, index) => {\r\n                        let data = {\r\n                            petSpeciesBreedId: item.petSpeciesBreedId,\r\n                            breedName: item.breedName\r\n                        }\r\n                        arr.push(data)\r\n                    })\r\n                    if (val === 'dog') {\r\n                        this.setState({\r\n                            dogBreed: arr\r\n                        })\r\n                        electronStore.set('dogBreed', arr)\r\n                    } else if (val === 'cat') {\r\n                        this.setState({\r\n                            catBreed: arr\r\n                        })\r\n                        electronStore.set('catBreed', arr)\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    _getData = (val) => {\r\n        this.setState({\r\n            petSpecies: val,\r\n            breedName: ''\r\n        })\r\n        let data = {\r\n            speciesId: val\r\n        }\r\n        fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n            .then(res => {\r\n                console.log('--获取品种返回的数据-', res);\r\n                if (res.code === 0) {\r\n                    let arr = []\r\n                    res.petlist.map((item, index) => {\r\n                        let data = {\r\n                            petSpeciesBreedId: item.petSpeciesBreedId,\r\n                            breedName: item.breedName\r\n                        }\r\n                        arr.push(data)\r\n                    })\r\n                    console.log(arr);\r\n                    this.setState({\r\n                        breedArr: arr\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n\r\n    /**------------------顶部start------------------------ */\r\n    _close = () => {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        console.log('关闭程序');\r\n        ipcRenderer.send('window-close')\r\n    }\r\n    _min = () => {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        console.log('最小化程序');\r\n        ipcRenderer.send('window-min')\r\n        this.setState({\r\n            minbgc: '',\r\n        })\r\n    }\r\n    _minMove = () => {\r\n\r\n        this.setState({\r\n            minbgc: 'rgb(211, 205, 205)'\r\n        })\r\n    }\r\n    _minLeave = () => {\r\n        this.setState({\r\n            minbgc: ''\r\n        })\r\n    }\r\n    _closeMove = () => {\r\n        this.setState({\r\n            closeColor: 'red',\r\n            closebgc: '#fff'\r\n        })\r\n    }\r\n    _closeLeave = () => {\r\n        this.setState({\r\n            closeColor: '#fff',\r\n            closebgc: ''\r\n        })\r\n    }\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        const { api, id, seleceID } = this.state\r\n        if (e.key === '1') {\r\n            this.props.history.push({ pathname: '/page6', query: { api, id, seleceID } })\r\n        }\r\n        if (e.key === '2') {\r\n            this.props.history.push('/')\r\n        }\r\n\r\n    };\r\n    /**------------------顶部end------------------------ */\r\n    selectWZ = (val) => {\r\n        let { catBreed, dogBreed } = this.state\r\n        switch (val) {\r\n            case 'dog':\r\n                this.setState({\r\n                    catImg: cat,\r\n                    dogImg: redDog,\r\n                    otherImg: other,\r\n                    selectWZ: val,\r\n                    breedArr: [].concat(dogBreed)\r\n                })\r\n\r\n                break;\r\n\r\n            case 'cat':\r\n                this.setState({\r\n                    catImg: redCat,\r\n                    dogImg: dog,\r\n                    otherImg: other,\r\n                    selectWZ: val,\r\n                    breedArr: [].concat(catBreed)\r\n                })\r\n\r\n                break;\r\n\r\n            case 'other':\r\n                this.setState({\r\n                    catImg: cat,\r\n                    dogImg: dog,\r\n                    otherImg: redother,\r\n                    selectWZ: val,\r\n                    breedArr: []\r\n                })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    _petSpecies = () => {\r\n        let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\r\n\r\n        this.avatar = selectphoto\r\n        return (\r\n            <div className=\"petSpecies\"\r\n                style={{ height: mTop(80), }}\r\n            >\r\n                <div className=\"l\">\r\n                    <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\r\n                    <div className=\"selectSpecies\">\r\n                        <ul>\r\n                            <li >\r\n                                <div className='speciesChild' >\r\n                                    <div className='dog'\r\n                                        onClick={() => { this.selectWZ('dog') }}>\r\n                                        <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\r\n                                    </div>\r\n                                    Dog\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className='speciesChild' >\r\n                                    <div className='dog' onClick={() => { this.selectWZ('cat') }} >\r\n                                        <img src={catImg} alt=\"\" style={{ width: px(40) }} />\r\n                                    </div>\r\n                                    Cat\r\n                                </div>\r\n                            </li>\r\n                            <li >\r\n                                <div className='speciesChild' >\r\n                                    <div className='dog' onClick={() => { this.selectWZ('other') }} >\r\n                                        <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\r\n                                    </div>\r\n                                    Other\r\n                                </div>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"r\">\r\n\r\n                    <div className=\"img\">\r\n                        <Avatar\r\n                            init={\r\n                                <div className=\"ciral \">\r\n                                    <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                                    <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                                </div>\r\n                            }\r\n                            getinfo={(val) => {\r\n                                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                                if (val) {\r\n                                    this.setState({\r\n                                        imageId: val\r\n                                    })\r\n                                }\r\n\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _petName = () => {\r\n\r\n        const onPanelChange = (value, mode) => {\r\n            console.log('-----', value, mode);\r\n        }\r\n        let birthday = this.state.birthday\r\n        let birthdayValue = birthday ? moment(birthday) : moment(new Date())\r\n        return (\r\n            <div className=\"petName\"\r\n                style={{ marginTop: mTop(18) }}\r\n            >\r\n                <div className=\"r\">\r\n\r\n                    <p >Pet Name</p>\r\n                    <div className=\"infoInput\">\r\n                        <Input\r\n                            bordered={false}\r\n                            value={this.state.petName}\r\n                            onChange={(item) => {\r\n\r\n                                this.setState({\r\n                                    petName: item.target.value\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"r\">\r\n                    <p >Pet Birthday</p>\r\n                    <div className=\"infoInput\" >\r\n                        <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\r\n                            document.getElementById('calendar').style.display = 'block'\r\n                        }}>{this.state.birthday}</p>\r\n                        <div className=\"calendar\" id=\"calendar\" style={{ left: px(-50), top: px(-50) }}>\r\n                            <Calendar\r\n                                fullscreen={false}\r\n                                headerRender={({ value, type, onChange, onTypeChange }) => {\r\n\r\n                                    const start = 0;\r\n                                    const end = 12;\r\n                                    const monthOptions = [];\r\n\r\n                                    const current = value.clone();\r\n                                    const localeData = value.localeData();\r\n                                    const months = [];\r\n                                    for (let i = 0; i < 12; i++) {\r\n                                        current.month(i);\r\n                                        months.push(localeData.monthsShort(current));\r\n                                    }\r\n\r\n                                    for (let index = start; index < end; index++) {\r\n                                        monthOptions.push(\r\n                                            <Select.Option className=\"month-item\" key={`${index}`}>\r\n                                                {months[index]}\r\n                                            </Select.Option>\r\n                                        );\r\n                                    }\r\n                                    const month = value.month();\r\n\r\n                                    const year = value.year();\r\n                                    const options = [];\r\n\r\n                                    for (let i = moment(new Date()).year(); i > moment(new Date()).year() - 40; i -= 1) {\r\n                                        options.push(\r\n                                            <Select.Option key={i} value={i} className=\"year-item\">\r\n                                                {i}\r\n                                            </Select.Option>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <div style={{ padding: 8 }}>\r\n                                            <Row gutter={8}>\r\n                                                <Col>\r\n                                                    <Select\r\n                                                        size=\"small\"\r\n                                                        dropdownMatchSelectWidth={false}\r\n                                                        className=\"my-year-select\"\r\n                                                        onChange={(newYear) => {\r\n                                                            const now = value.clone().year(newYear);\r\n                                                            onChange(now);\r\n                                                        }}\r\n                                                        value={String(year)}\r\n                                                    >\r\n                                                        {options}\r\n                                                    </Select>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Select\r\n                                                        size=\"small\"\r\n                                                        dropdownMatchSelectWidth={false}\r\n                                                        value={String(month)}\r\n                                                        onChange={(selectedMonth) => {\r\n                                                            const newValue = value.clone();\r\n                                                            newValue.month(parseInt(selectedMonth, 10));\r\n                                                            onChange(newValue);\r\n                                                        }}\r\n                                                    >\r\n                                                        {monthOptions}\r\n                                                    </Select>\r\n                                                </Col>\r\n                                                {/* <Col>\r\n                                                    <div className=\"btn\" onClick={() => {\r\n                                                        document.getElementById('calendar').style.display = 'none'\r\n                                                    }}>\r\n                                                        Choose this date\r\n                                                    </div>\r\n\r\n                                                </Col> */}\r\n                                            </Row>\r\n                                        </div>\r\n                                    );\r\n                                }}\r\n                                value={birthdayValue}\r\n                                onSelect={(value) => {\r\n                                    console.log(value);\r\n                                    this.setState({\r\n                                        birthday: moment(value).format('MMMM D, YYYY')\r\n\r\n                                    })\r\n                                    document.getElementById('calendar').style.display = 'none'\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _ownName = () => {\r\n\r\n        return (\r\n            <div className=\"petName\" style={{ marginTop: mTop(18) }}\r\n            >\r\n                <div className=\"l\">\r\n\r\n                    <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\r\n                    <div className=\"infoInput\">\r\n                        <Input bordered={false}\r\n                            value={this.state.patientId}\r\n                            onChange={(item) => {\r\n\r\n                                this.setState({\r\n                                    patientId: item.target.value.replace(/\\s/g, \"\"),\r\n                                    intFlog: true\r\n\r\n                                })\r\n                                if (item.target.value !== errPatientId) {\r\n                                    message.destroy()\r\n                                }\r\n                            }}\r\n                            onBlur={() => {\r\n                                console.log('我离开光标了');\r\n\r\n                                let params = {\r\n                                    patientId: this.state.patientId,\r\n                                    doctorId: storage.userId\r\n                                }\r\n                                if (storage.lastWorkplaceId) {\r\n                                    params.workplaceId = storage.lastWorkplaceId\r\n                                }\r\n                                message.destroy()\r\n                                fetchRequest(`/pet/checkPatientId`, \"GET\", params)\r\n                                    .then(res => {\r\n                                        console.log(res);\r\n                                        if (res.flag === false) {\r\n                                            errPatientId = params.patientId\r\n                                            message.destroy()\r\n                                            message.error('This patient ID is already occupied, please change to a new one', 0)\r\n                                        } else {\r\n                                            errPatientId = ''\r\n                                        }\r\n\r\n                                    })\r\n                                    .catch(err => {\r\n                                        console.log(err);\r\n\r\n                                    })\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"r\">\r\n                    <div className=\"infoInput flex\"\r\n                        style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            // this.setState({\r\n                            //     selectBreed: true\r\n                            // })\r\n                        }}\r\n                    >\r\n\r\n                        <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{'My Parents'}</div>\r\n                        <div className=\"nextimg\" >\r\n                            <img src={nextImg} style={{ height: px(15) }} />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _select = (value, data) => {\r\n        console.log(value, data);  //value的值为id\r\n        this.setState({\r\n            petSpeciesBreedId: value,\r\n            breedName: data.children\r\n        })\r\n    }\r\n    _primaryBreed = () => {\r\n        let options = null\r\n\r\n        options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\r\n        let { breedName, confirmSelectBreedJson } = this.state\r\n\r\n\r\n        return (\r\n            <div className=\"petName\" style={{ marginTop: mTop(18) }}>\r\n                <div className=\"l\" >\r\n                    {/* <p >Primary Breed</p> */}\r\n                    <div className=\"infoInput flex\"\r\n                        style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                selectBreed: true\r\n                            })\r\n                        }}\r\n                    >\r\n                        {/* <Input bordered={false} disabled={false} /> */}\r\n\r\n                        {/* <Select\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            bordered={false}\r\n                            value={breedName}\r\n                            // size = {'small'}        \r\n                            placeholder=\"Search to Select\"\r\n                            optionFilterProp=\"children\"\r\n                            listHeight={256}\r\n                            onSelect={(value, data) => this._select(value, data)}\r\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                            filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n                        >\r\n                            {options}\r\n                        </Select> */}\r\n                        <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'}</div>\r\n                        <div className=\"nextimg\" >\r\n                            <img src={nextImg} style={{ height: px(15) }} />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"r\" style={{ paddingTop: mTop(40) }}>\r\n                    <div className=\"max\">\r\n                        Mix?\r\n                        <div className=\"selected\"\r\n                            onClick={() => this.setState({\r\n                                isMix: !this.state.isMix\r\n                            })}\r\n                        >\r\n                            {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _weight = () => {\r\n        let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\r\n        switch (this.state.unit) {\r\n            case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\r\n            case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\r\n        }\r\n\r\n        switch (this.state.gender) {\r\n            case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\r\n            case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"petName\" style={{ marginTop: mTop(18) }}>\r\n                <div className=\"l\">\r\n                    <p >Pet Weight</p>\r\n                    <div className=\"infoInput\">\r\n                        <Input bordered={false}\r\n                            value={this.state.weight}\r\n                            onChange={(item) => {\r\n\r\n                                this.setState({\r\n                                    weight: item.target.value\r\n                                })\r\n                            }}\r\n\r\n                        />\r\n                        <div className=\"ibKg\">\r\n                            <div className=\"ibs\"\r\n                                style={{ backgroundColor: ibBgcColor, color: ibCor }}\r\n                                onClick={() => {\r\n                                    if (this.state.unit === 2) {\r\n\r\n                                        this.setState({\r\n                                            unit: 1,\r\n                                            weight: (this.state.weight * 2.2046).toFixed(1)\r\n                                        })\r\n                                    }\r\n                                }}\r\n                            >Ibs</div>\r\n                            <div className=\"kgs\"\r\n                                style={{ backgroundColor: kgBgcColor, color: kgCor }}\r\n                                onClick={() => {\r\n\r\n                                    if (this.state.unit === 1) {\r\n\r\n                                        this.setState({\r\n                                            unit: 1,\r\n                                            weight: (this.state.weight / 2.2046).toFixed(1)\r\n                                        })\r\n                                    }\r\n                                    this.setState({ unit: 2 })\r\n                                }}\r\n                            >kgs</div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"r\">\r\n                    <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\r\n                    <div className=\"gender\">\r\n                        <div className=\"selectGender\">\r\n                            <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\r\n                                <div className=\"femaleCiral\"\r\n                                    style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\r\n                                    onClick={() => this.setState({ gender: 1 })}\r\n                                >\r\n                                    <img src={female} alt=\"\" style={{ width: px(15) }} />\r\n                                </div>\r\n                                Female\r\n                            </div>\r\n                            <div className=\"male\" style={{ fontSize: px(18) }}>\r\n                                <div className=\"maleCiral\"\r\n                                    style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\r\n                                    onClick={() => this.setState({ gender: 0 })}\r\n                                >\r\n                                    <img src={male} alt=\"\" style={{ width: px(20) }} />\r\n                                </div>\r\n                                Male\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { closeColor, closebgc, minbgc, disabled, petSpeciesBreedId } = this.state\r\n\r\n        return (\r\n            <div id=\"doctorAddPet\">\r\n\r\n                <div className=\"heard\">\r\n                    <Heard\r\n                        onReturn={() => {\r\n                            // this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n                            this.props.history.goBack()\r\n\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"editPetInfo_top\" >\r\n                    <div className=\"title\" style={{ marginBottom: px(20), marginTop: px(20) }}>{`New Pet`}</div>\r\n                    {this._petSpecies()}\r\n                    {this._petName()}\r\n                    {this._ownName()}\r\n                    {this._primaryBreed()}\r\n                    {this._weight()}\r\n                </div>\r\n                <div className=\"editPetInfo_foot\"  >\r\n                    <div className=\"save\"\r\n                        onClick={() => {\r\n                            message.destroy()\r\n\r\n                            if (!this.state.patientId) {\r\n                                message.error('Please enter patient ID', 0)\r\n                                return\r\n                            }\r\n\r\n                            let params = {\r\n                                patientId: this.state.patientId,\r\n                                doctorId: storage.userId\r\n                            }\r\n                            if (storage.lastWorkplaceId) {\r\n                                params.workplaceId = storage.lastWorkplaceId\r\n                            }\r\n                            if (storage.lastOrganization) {\r\n                                params.organizationId = storage.lastOrganization\r\n                            }\r\n\r\n                            this.setState({\r\n                                spin: true\r\n                            })\r\n                            console.log('-----------检测patient是否存在', params);\r\n\r\n                            fetchRequest(`/pet/checkPatientId`, \"GET\", params)\r\n                                .then(res => {\r\n                                    console.log(res);\r\n                                    if (res.flag === false) {\r\n                                        this.setState({\r\n                                            spin: false\r\n                                        }, () => {\r\n                                            errPatientId = params.patientId\r\n                                            message.destroy()\r\n                                            message.error('This patient ID is already occupied, please change to a new one', 0)\r\n\r\n                                        })\r\n                                    } else {\r\n\r\n                                        let { petSpecies, petName, birthday, petSpeciesBreedId, isMix, weight, gender, unit, imageId, confirmSelectBreedJson, owner, patientId } = this.state\r\n\r\n\r\n                                        let species = null\r\n                                        if (petSpeciesBreedId) {\r\n                                            species = petSpeciesBreedId\r\n                                        } else {\r\n                                            // 11001 是cat 12001是dog 13001是other\r\n                                            switch (petSpecies) {\r\n                                                case 1: species = 11001; break;\r\n                                                case 2: species = 12001; break;\r\n                                                default: species = 13001;\r\n                                                    break;\r\n                                            }\r\n                                        }\r\n\r\n\r\n\r\n\r\n\r\n                                        // console.log(petName, birthday, petSpeciesBreedId, isMix, weight, gender, petSpecies);\r\n                                        // let petSpeciesBreedId = 13001\r\n                                        let data = {\r\n                                            petName,\r\n                                            // breedName,\r\n                                            birthday: moment(birthday).format('YYYY-MM-DD'),\r\n                                            gender,\r\n                                            owner,\r\n                                            petSpeciesBreedId: species,\r\n                                            doctorId: storage.userId\r\n                                        }\r\n                                        if (weight) {\r\n                                            if (unit === 1) {\r\n                                                weight = (0.45359 * weight).toFixed(2)\r\n                                            }\r\n                                            data.weight = parseFloat(weight)\r\n                                        }\r\n                                        if (imageId !== -1 && imageId) {\r\n                                            data.imageId = imageId\r\n                                        }\r\n                                        if (storage.lastWorkplaceId) {\r\n                                            data.workplaceId = storage.lastWorkplaceId\r\n                                        }\r\n                                        if (storage.lastOrganization) {\r\n                                            data.organizationId = storage.lastOrganization\r\n                                        }\r\n                                        console.log(data);\r\n                                        fetchRequest(`/pet/addDeskPet/${patientId}`, 'POST', data)\r\n                                            .then(res => {\r\n                                                this.setState({\r\n                                                    spin: false\r\n                                                })\r\n                                                console.log(res);\r\n                                                if (res.flag === true) {\r\n                                                    message.success('Added successfully')\r\n                                                    this.props.history.goBack()\r\n                                                }\r\n                                                else {\r\n                                                    message.error('add failed')\r\n                                                }\r\n                                            })\r\n                                            .catch(err => {\r\n                                                this.setState({\r\n                                                    spin: false\r\n                                                })\r\n                                                message.error('add failed')\r\n                                                console.log(err);\r\n                                            })\r\n\r\n                                    }\r\n\r\n                                })\r\n\r\n                                .catch(err => {\r\n                                    this.setState({\r\n                                        spin: false\r\n                                    })\r\n                                    console.log(err);\r\n\r\n                                })\r\n\r\n                        }}\r\n\r\n                    >Save</div>\r\n\r\n                </div>\r\n                <MyModal\r\n                    visible={this.state.spin}\r\n                />\r\n\r\n                <MyModal\r\n                    // visible={true}\r\n                    visible={this.state.selectBreed}\r\n                    element={\r\n                        <div className='myfindOrg' >\r\n                            <div className=\"orgHeard\">\r\n                                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                    <div\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                selectBreed: false,\r\n                                                selectBreedJson: {}\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text\" >Choose Breed</div>\r\n\r\n                                <div className=\"searchBox\">\r\n\r\n                                    <Input\r\n                                        placeholder=\" &#xe61b; Search name\"\r\n                                        bordered={false}\r\n                                        allowClear={true}\r\n                                        value={this.state.searchBreed}\r\n                                        onChange={(item) => {\r\n\r\n                                            this.setState({\r\n                                                searchBreed: item.target.value\r\n                                            })\r\n                                        }}\r\n\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"list\" >\r\n                                <PhoneBook\r\n                                    listDate={this.state.breedArr}\r\n                                    confirmSelectBreed={petSpeciesBreedId}\r\n                                    selectFun={(val) => {\r\n                                        // console.log('从子组件传来的数据', val);\r\n                                        this.setState({\r\n                                            selectBreedJson: val,\r\n                                            petSpeciesBreedId: val.petSpeciesBreedId\r\n                                        })\r\n\r\n\r\n                                    }}\r\n                                    searchText={this.state.searchBreed}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"foot\">\r\n                                <Button\r\n                                    text={'Select'}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            confirmSelectBreedJson: this.state.selectBreedJson,\r\n                                            selectBreed: false\r\n                                        })\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    }\r\n                />\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx",["746","747","748"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  message\r\n\r\n} from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './resetPassword.less'\r\nimport mellaLogo from '../../../assets/images/mellaLogo.png'\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport { px, mTop, pX, MTop } from '../../../utils/px';\r\nimport MouseDiv from '../../../utils/mouseDiv/MouseDiv'\r\nimport MinClose from '../../../utils/minClose/MinClose'\r\nimport back_white from '../../../assets/img/back-white.png'\r\nimport back_hui from '../../../assets/img/back-hui.png'\r\n\r\nlet storage = window.localStorage;\r\nexport default class ResetPassword extends Component {\r\n\r\n  state = {\r\n    hash: '',\r\n    hash1: '',\r\n    spin: false\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _continue = () => {\r\n    console.log('点击了发送按钮')\r\n    message.destroy()\r\n    let { hash, hash1 } = this.state\r\n    console.log(hash, hash1, hash !== hash1);\r\n    if (!hash && !hash1) {\r\n\r\n      message.error('Please enter a new password', 10)\r\n      return\r\n    }\r\n    if (hash !== hash1) {\r\n      message.error('The two passwords are inconsistent, please re-enter', 10)\r\n      return\r\n    }\r\n    this.setState({\r\n      spin: true\r\n    })\r\n\r\n    fetchRequest(`/user/resetPWD/${temporaryStorage.forgotUserId}/${hash}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('修改密码返回结果', res);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        if (res.flag === true) {\r\n          let data = {\r\n            email: temporaryStorage.forgotPassword_email,\r\n            hash: this.state.hash\r\n          }\r\n          console.log(data);\r\n          data = JSON.stringify(data)\r\n          storage.signIn = data\r\n          temporaryStorage.forgotPassword_email = ''\r\n          temporaryStorage.forgotUserId = ''\r\n          this.props.history.replace('/page11')\r\n          // this.props.history.push('/page11')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"resetPassword\">\r\n        {/* <div className=\"iconfont icon-left heard return\" onClick={() => { this.props.history.goBack() }} />\r\n        <div className=\"logo\">\r\n          <img src={mellaLogo} alt=\"\" />\r\n        </div>\r\n        <div className=\"text\">Reset Your<br />Password</div> */}\r\n\r\n        <div className=\"heaed\"  >\r\n          <div className=\"l\">\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n            < MinClose />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body\" style={{ height: MTop(280), }}>\r\n          <div className=\"logo\"\r\n            style={{ paddingTop: mTop(10) }}\r\n          >\r\n            <img src={mellaLogo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n          <div className=\"text\"\r\n            style={{ fontSize: px(30), padding: `${px(20)}px 0`, marginBottom: mTop(10), marginTop: mTop(20) }}\r\n          >\r\n            Reset Your<br />Password\r\n          </div>\r\n\r\n          <div className=\"inpF\">\r\n\r\n            <Input.Password className='inp'\r\n              style={{ width: px(310), height: mTop(50), marginLeft: px(6), marginBottom: mTop(18), fontSize: px(18) }}\r\n              visibilityToggle={false}\r\n              value={this.state.hash}\r\n              placeholder='New Password'\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value\r\n                this.setState({\r\n                  hash: str\r\n                })\r\n              }}\r\n            />\r\n            <Input.Password className='inp'\r\n              style={{ width: px(310), height: mTop(50), marginLeft: px(6), marginBottom: mTop(18), fontSize: px(18) }}\r\n              visibilityToggle={false}\r\n              value={this.state.hash1}\r\n              placeholder='Re-Enter New Password'\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value\r\n                this.setState({\r\n                  hash1: str\r\n                })\r\n              }}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"button1\" >\r\n          <Button\r\n            style={{ width: px(300), fontSize: px(18), height: px(300 / 6.5) }}\r\n\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </div>\r\n        {\r\n          this.state.spin &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              loading...\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n\r\n\r\n\r\n        {/* \r\n        <div className=\"heaed\"  >\r\n          <div className=\"l\"\r\n          >\r\n\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"inpF\">\r\n          <Input.Password className='inp'\r\n            visibilityToggle={false}\r\n            style={{ border: 'none', outline: 'medium' }}\r\n            value={this.state.hash}\r\n            placeholder='New Password'\r\n            bordered={false}\r\n            onChange={(item) => {\r\n              let str = item.target.value\r\n              this.setState({\r\n                hash: str\r\n              })\r\n            }}\r\n          />\r\n          <Input.Password className='inp'\r\n            visibilityToggle={false}\r\n            style={{ border: 'none', outline: 'medium' }}\r\n            value={this.state.hash1}\r\n            placeholder='Re-Enter New Password'\r\n            bordered={false}\r\n            onChange={(item) => {\r\n              let str = item.target.value\r\n              this.setState({\r\n                hash1: str\r\n              })\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"button1\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            Continue\r\n          </Button>\r\n\r\n        </div> */}\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx",["749","750","751","752","753","754","755","756","757"],"import React, { Component } from \"react\";\r\nimport { Table, Popconfirm, Modal, Input, message, Select } from \"antd\";\r\nimport moment from \"moment\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport \"./unassigned.less\";\r\nimport Heard from \"./../../../utils/heard/Heard\";\r\nimport { fetchRequest } from \"../../../utils/FetchUtil1\";\r\n\r\nimport del from \"./../../../assets/images/del.png\";\r\nimport Close from \"./../../../assets/img/close.png\";\r\n\r\nimport UploadImg from \"./../../../utils/uploadImg/UploadImg\";\r\nimport { mTop, px, MTop } from \"../../../utils/px\";\r\nimport electronStore from \"./../../../utils/electronStore\";\r\nimport MyModal from \"../../../utils/myModal/MyModal\";\r\nimport Button from \"./../../../utils/button/Button\";\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\n\r\nexport default class Unassigned extends Component {\r\n  state = {\r\n    historyData: [], //列表的数据集合\r\n    units: \"℉\",\r\n    searchText: \"\", //搜索测试记录框输入的内容\r\n    serchExamData: [], //搜索到的测量记录\r\n    seleceEmergencies: {}, //分配的这条记录里的所有内容，比如温度、id、时间等\r\n    visible: false, //nodel框是否显示\r\n    disabled: true, //model是否可拖拽\r\n    imgId: -1, //上传后返回的图像id号\r\n\r\n    assignPatientId: \"\",\r\n    assignPetName: \"\",\r\n    assignOwnerName: \"\",\r\n    assignBreed: \"\",\r\n    assignBreedId: \"\",\r\n    assignPetAge: \"\",\r\n    assignPetWeight: \"\",\r\n    assignPetId: \"\",\r\n    assignPetImgUrl: \"\",\r\n    inputDisabled: false,\r\n\r\n    breedArr: [], //猫、狗品种集合\r\n\r\n    loading: false,\r\n\r\n    disabled: true, //model是否可拖拽\r\n    search: \"\", //分配宠物搜索框\r\n    petListData: [],\r\n    searchPetList: [],\r\n    assignVisible: false, //点击assign按钮后跳出的选择宠物的弹框\r\n    selectPetId: \"\",\r\n  };\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    // if (windowsHeight < 1000) {\r\n    //   ipcRenderer.send('table')\r\n    // } else {\r\n    //   ipcRenderer.send('big')\r\n    // }\r\n    let getBreed = electronStore.get(\"getBreed\");\r\n    console.log(\"------\", getBreed);\r\n    if (getBreed) {\r\n      this.setState({\r\n        breedArr: getBreed,\r\n      });\r\n    }\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n    this._getEmergencyHistory();\r\n    const timer = setTimeout(() => {\r\n      this._getBreed();\r\n      clearTimeout(timer);\r\n    }, 3000);\r\n\r\n    let list = electronStore.get(\"doctorExam\");\r\n    this.setState({\r\n      petListData: list || [],\r\n    });\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy();\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    // if (windowsHeight < 1000) {\r\n    //   ipcRenderer.send('table')\r\n    // } else {\r\n    //   ipcRenderer.send('big')\r\n    // }\r\n    this.setState({});\r\n  };\r\n\r\n  _getEmergencyHistory = () => {\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate (data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = [];\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, \"GET\", \"\") //userID要自动的\r\n      .then((res) => {\r\n        console.log(\"---res\", res);\r\n        if (res.flag === true) {\r\n          let datas = res.data;\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let {\r\n                petId,\r\n                examId,\r\n                userId,\r\n                petVitalTypeId,\r\n                temperature,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                memo,\r\n                clinicalDatagroupId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                createTime,\r\n                clinicalDataEntity,\r\n              } = datas[i];\r\n              let day = moment().diff(moment(createTime), \"day\");\r\n              // console.log(day);\r\n              if (day > 3) {\r\n                continue;\r\n              }\r\n\r\n              let Tem = temperature;\r\n              try {\r\n                if (clinicalDataEntity) {\r\n                  Tem = temperature || clinicalDataEntity.data0;\r\n                }\r\n              } catch (error) {\r\n                console.log(\"抛出的异常\", error);\r\n              }\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format(\"MMM DD\"),\r\n                time: moment(createTime).format(\"hh:mm A\"),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                petId,\r\n                userId,\r\n                day,\r\n              };\r\n\r\n              historys.push(str);\r\n            }\r\n          }\r\n\r\n          //把所有数据拿完后做个排序\r\n\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log(\"historyData:\", historyData);\r\n          this.setState({\r\n            historyData,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  _getBreed = () => {\r\n    fetchRequest(`/pet/selectBreedBySpeciesId`, \"POST\", { speciesId: 1 })\r\n      .then((res) => {\r\n        if (res.code === 0) {\r\n          let arr = [];\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n              speciesId: 1,\r\n            };\r\n\r\n            arr.push(data);\r\n          });\r\n\r\n          fetchRequest(`/pet/selectBreedBySpeciesId`, \"POST\", { speciesId: 2 })\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                res.petlist.map((item, index) => {\r\n                  let data = {\r\n                    petSpeciesBreedId: item.petSpeciesBreedId,\r\n                    breedName: item.breedName,\r\n                    speciesId: 2,\r\n                  };\r\n                  arr.push(data);\r\n                });\r\n\r\n                console.log(\"----品种集合：\", arr);\r\n                electronStore.set(\"getBreed\", arr);\r\n                this.setState({\r\n                  breedArr: arr,\r\n                });\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  _search = (value = \"\") => {\r\n    console.log(\"我要去搜索了\");\r\n    let list = this.state.historyData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let note = list[i].note ? list[i].note.toLowerCase() : \"\";\r\n      if (`${note}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      serchExamData: searchData,\r\n    });\r\n  };\r\n  _searchPet = (value = \"\") => {\r\n    console.log(\"我要去搜索了\", this.state.petListData);\r\n    let list = this.state.petListData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let name = list[i].petName ? list[i].petName.toLowerCase() : \"\";\r\n      let rfid = list[i].rfid ? list[i].rfid.toLowerCase() : \"\";\r\n      let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : \"\";\r\n\r\n      if (\r\n        `${name}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${rfid}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n      ) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchPetList: searchData,\r\n    });\r\n  };\r\n\r\n  draggleRef = React.createRef();\r\n\r\n  handleOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log(\"取消\");\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n    });\r\n  };\r\n\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n      },\r\n    });\r\n  };\r\n  _select = (value, data) => {\r\n    console.log(value, data); //value的值为id\r\n    this.setState({\r\n      assignBreedId: value,\r\n      assignBreed: data.children,\r\n    });\r\n  };\r\n\r\n  _modal = () => {\r\n    let that = this;\r\n\r\n    function getPetInfoByPatientId () {\r\n      switch (storage.identity) {\r\n        case \"1\":\r\n          console.log(\"我是vetspire查找\");\r\n\r\n          break;\r\n\r\n        case \"2\":\r\n          console.log(\"我是ezyVet查找\");\r\n          let params = {\r\n            animalId: that.state.assignPatientId,\r\n            organizationId: 4,\r\n          };\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach((key) =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url =\r\n            \"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId\";\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          console.log(\"ezyVet集成查找宠物入参-请求地址\", params, url);\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              authorization: `Bearer ${storage.ezyVetToken}`,\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n              console.log(\"res\", res);\r\n              this.setState({\r\n                spin: false,\r\n              });\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data;\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  });\r\n                }\r\n                console.log(petArr);\r\n\r\n                let { petId } = petArr;\r\n                // assign(petId)\r\n              } else {\r\n                //没有宠物\r\n                message.error(\"There are no pets under this patientID\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error(\"There are no pets under this patientID\");\r\n            });\r\n\r\n          break;\r\n\r\n        case \"3\":\r\n          console.log(\"我是一般医生查找\");\r\n          let datas = {\r\n            patientId: that.state.assignPatientId,\r\n            doctorId: storage.userId,\r\n          };\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId;\r\n          }\r\n          console.log(\"入参：\", datas);\r\n          fetchRequest(\"/pet/getPetInfoByPatientIdAndPetId\", \"POST\", datas)\r\n            .then((res) => {\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data;\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  });\r\n                }\r\n\r\n                console.log(\"获取到宠物信息\", petArr);\r\n\r\n                let {\r\n                  petId,\r\n                  petName,\r\n                  firstName,\r\n                  lastName,\r\n                  breedName,\r\n                  age,\r\n                  weight,\r\n                  url,\r\n                  birthday,\r\n                } = petArr[0];\r\n\r\n                let assignPetName = petName ? petName : \"\";\r\n                let assignOwnerName = lastName ? lastName : \"\";\r\n                assignOwnerName = firstName\r\n                  ? `${assignOwnerName} ${firstName}`\r\n                  : assignOwnerName;\r\n                let assignBreed = breedName ? breedName : \"\";\r\n                let assignPetAge = age ? age : \"\";\r\n                let assignPetWeight = weight ? weight : \"\";\r\n                let assignPetImgUrl = url ? url : \"\";\r\n\r\n                if (!assignPetAge) {\r\n                  let now = moment(new Date());\r\n                  let year = now.diff(moment(birthday), \"years\");\r\n                  assignPetAge = year;\r\n                }\r\n\r\n                that.setState({\r\n                  assignPetName,\r\n                  assignBreed,\r\n                  assignPetAge,\r\n                  assignPetWeight,\r\n                  assignPetId: petId,\r\n                  assignPetImgUrl,\r\n                  inputDisabled: true,\r\n                });\r\n\r\n                // assign(petId)\r\n              } else {\r\n                that.setState({\r\n                  inputDisabled: false,\r\n                  assignPetName: \"\",\r\n                  assignOwnerName: \"\",\r\n                  assignBreed: \"\",\r\n                  assignBreedId: \"\",\r\n                  assignPetAge: \"\",\r\n                  assignPetWeight: \"\",\r\n                  assignPetId: \"\",\r\n                  assignPetImgUrl: \"\",\r\n                });\r\n                message.error(\"There are no pets under this patientID\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              that.setState({\r\n                inputDisabled: false,\r\n                assignPetName: \"\",\r\n                assignOwnerName: \"\",\r\n                assignBreed: \"\",\r\n                assignBreedId: \"\",\r\n                assignPetAge: \"\",\r\n                assignPetWeight: \"\",\r\n                assignPetId: \"\",\r\n                assignPetImgUrl: \"\",\r\n              });\r\n              message.error(\"There are no pets under this patientID\");\r\n              console.log(err);\r\n            });\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    const assignPet = () => {\r\n      let parmes = {\r\n        petId: this.state.assignPetId,\r\n        clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId,\r\n      };\r\n      console.log(\"分配的数据信息\", parmes);\r\n      fetchRequest(\r\n        `/pet/addAndSavePetExam/${that.state.seleceEmergencies.historyId}`,\r\n        \"POST\",\r\n        parmes\r\n      )\r\n        .then((res) => {\r\n          console.log(\"----------\", res);\r\n          if (res.flag === true) {\r\n            console.log(\"分配成功\");\r\n            message.success(\"Assigned successfully\");\r\n            that._getEmergencyHistory();\r\n            that.setState({\r\n              visible: false,\r\n              assignPatientId: \"\",\r\n              assignPetName: \"\",\r\n              assignOwnerName: \"\",\r\n              assignBreed: \"\",\r\n              assignBreedId: \"\",\r\n              assignPetAge: \"\",\r\n              assignPetWeight: \"\",\r\n              assignPetId: \"\",\r\n              assignPetImgUrl: \"\",\r\n            });\r\n          } else {\r\n            message.error(\"Assignment failed\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          message.error(\"Assignment failed\");\r\n        });\r\n    };\r\n\r\n    let { disabled, bounds, visible } = this.state;\r\n    let options = this.state.breedArr.map((d) => (\r\n      <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>\r\n    ));\r\n    return (\r\n      <Modal\r\n        wrapClassName={\"web\"} //对话框外部的类名，主要是用来修改这个modal的样式的\r\n        destroyOnClose={true}\r\n        title={\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              cursor: \"move\",\r\n              height: \"30px\",\r\n              textAlign: \"center\",\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          ></div>\r\n        }\r\n        visible={visible}\r\n        // visible={true}\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\r\n      >\r\n        <div id=\"unassignedModal\">\r\n          <div className=\"title\">\r\n            Assign <br />\r\n            Measurement to\r\n          </div>\r\n\r\n          <div className=\"addPhoto\">\r\n            <UploadImg\r\n              getImg={(val) => {\r\n                console.log(\"hahahahahahah我获得了\", val);\r\n                this.setState({\r\n                  imgId: val.imageId,\r\n                });\r\n              }}\r\n              imgUrl={this.state.assignPetImgUrl}\r\n              disable={this.state.inputDisabled}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <p>Patient ID:</p>\r\n            <Input\r\n              value={this.state.assignPatientId}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPatientId: item.target.value,\r\n                });\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  getPetInfoByPatientId();\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  console.log(\"清空\");\r\n                  this.setState({\r\n                    assignPatientId: \"\",\r\n                  });\r\n                }\r\n              }}\r\n              onBlur={() => {\r\n                if (this.state.assignPatientId.length > 0) {\r\n                  getPetInfoByPatientId();\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <p>Pet Name:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignPetName}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPetName: item.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <p>Owner Name:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignOwnerName}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignOwnerName: item.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"item\">\r\n            <p>Breed:</p>\r\n            <div className=\"infoInput\">\r\n              {/* <Input bordered={false} /> */}\r\n              <Select\r\n                disabled={this.state.inputDisabled}\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                bordered={false}\r\n                value={this.state.assignBreed}\r\n                // size = {'small'}\r\n                placeholder=\"Search to Select\"\r\n                optionFilterProp=\"children\"\r\n                listHeight={256}\r\n                onSelect={(value, data) => this._select(value, data)}\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                  optionA.children\r\n                    .toLowerCase()\r\n                    .localeCompare(optionB.children.toLowerCase())\r\n                }\r\n              >\r\n                {options}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"item\">\r\n            <p>Pet Age:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignPetAge}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPetAge: item.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"item\">\r\n            <p>Pet Weight:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignPetWeight}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPetWeight: item.target.value,\r\n                });\r\n              }}\r\n            />\r\n\r\n            <div className=\"unit\">{`kg`}</div>\r\n          </div>\r\n\r\n          <div className=\"btnF\">\r\n            <div className=\"btn\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </div>\r\n            <div\r\n              className=\"btn\"\r\n              onClick={() => {\r\n                if (this.state.assignPetId) {\r\n                  assignPet();\r\n                } else {\r\n                  message.error(\"Did not find this pet\");\r\n                }\r\n              }}\r\n            >\r\n              Confirm\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  };\r\n  _list = () => {\r\n    const { search, petListData, searchPetList } = this.state;\r\n    let data = search.length > 0 ? searchPetList : petListData;\r\n    console.log('--------------------data', data);\r\n    let option = data.map((item, index) => {\r\n      let male = item.gender === \"F\" ? \"Female\" : \"Male\";\r\n      return (\r\n        <li\r\n          key={item.organizationId}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectPetId: item.petId,\r\n            });\r\n            console.log(item);\r\n          }}\r\n        >\r\n          <div className=\"item\">\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {item.petName}\r\n            </span>{\" \"}\r\n            &nbsp;&nbsp;\r\n            <span\r\n              className=\"petName\"\r\n              style={{ margin: `${px(5)}px 0` }}\r\n            >{`${item.age} yrs,`}</span>{\" \"}\r\n            &nbsp;&nbsp;\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {male}\r\n            </span>\r\n          </div>\r\n\r\n          {this.state.selectPetId === item.petId ? (\r\n            <span className=\"search\">&#xe614;</span>\r\n          ) : null}\r\n\r\n          {/* <div className=\"dui\">\r\n          <img src={} alt=\"\"/>\r\n        </div> */}\r\n        </li>\r\n      );\r\n    });\r\n    return <ul>{option}</ul>;\r\n  };\r\n\r\n  render () {\r\n    let { loading, disabled, historyData, searchText, serchExamData } =\r\n      this.state;\r\n    const _del = (key, record) => {\r\n      console.log(\"删除\", key, record);\r\n\r\n      fetchRequest(`/pet/deletePetExamByExamId/${key}`, \"DELETE\").then(\r\n        (res) => {\r\n          if (res.flag === true) {\r\n            console.log(\"删除成功\");\r\n            const historyData = [...this.state.historyData];\r\n            console.log(historyData);\r\n            this.setState({\r\n              historyData: historyData.filter((item) => item.historyId !== key),\r\n            });\r\n          } else {\r\n            console.log(\"删除失败\");\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        key: \"operation\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          // console.log('狩猎:', text, record, index);\r\n          //record:\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: `${px(8)}px 0`,\r\n              }}\r\n            >\r\n              <Popconfirm\r\n                title=\"Sure to delete?\"\r\n                onConfirm={() => _del(record.historyId, record)}\r\n              >\r\n                <img src={del} alt=\"\" style={{ marginRight: \"8px\" }} />\r\n              </Popconfirm>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Time\",\r\n        dataIndex: \"time\",\r\n        key: \"time\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      // {\r\n      //   // title: `Temp(${this.state.units})`,\r\n      //   title: `Temp(℉)`,\r\n      //   key: 'temp',\r\n      //   dataIndex: 'temp',\r\n      //   render: (text, record, index) => {\r\n      //     // console.log(text, record);\r\n      //     /**\r\n      //      * bag：温度数值前的圆圈的背景颜色\r\n      //      * tem：展示的温度\r\n      //      * endvalue:将从后台得到的数据全部转化成华氏度\r\n      //      * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n      //      * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n      //      *\r\n      //      */\r\n\r\n      //     let bag = '', tem = ''\r\n\r\n      //     let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\r\n      //     let min = 100.4, max = 102.56\r\n\r\n      //     if (endValue > max) {\r\n      //       bag = '#E1206D'\r\n      //     } else if (endValue < min) {\r\n      //       bag = '#98DA86'\r\n      //     } else {\r\n      //       bag = '#58BDE6'\r\n      //     }\r\n\r\n      //     if (this.state.units === '℃') {\r\n      //       if (text) {\r\n      //         tem = `${text}${this.state.units}`\r\n      //       }\r\n      //     } else {\r\n      //       if (text) {\r\n      //         if (text > 55) {\r\n      //           tem = `${text}${this.state.units}`\r\n      //         } else {\r\n      //           tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\r\n      //         }\r\n\r\n      //       }\r\n      //     }\r\n      //     return (\r\n      //       <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      //         {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\r\n      //         <p style={{ margin: 0, padding: 0 }}>{tem}</p>\r\n      //       </div>\r\n      //     )\r\n\r\n      //   }\r\n      // },\r\n\r\n      {\r\n        title: \" Pet Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\",\r\n        width: \"20%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n      // Species\r\n\r\n      {\r\n        title: \"Species\",\r\n        dataIndex: \"species\",\r\n        key: \"species\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"Note\",\r\n        dataIndex: \"note\",\r\n        key: \"note\",\r\n        width: \"20%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"assign\",\r\n        key: \"assign\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div\r\n              className=\"assign\"\r\n              style={{\r\n                fontSize: px(16),\r\n                paddingTop: px(5),\r\n                paddingBottom: px(5),\r\n              }}\r\n              onClick={() => {\r\n                console.log(text, record, index);\r\n                this.setState({\r\n                  // visible: true,\r\n                  assignVisible: true,\r\n                  seleceEmergencies: record,\r\n                });\r\n              }}\r\n            >\r\n              Assign\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n\r\n    let tableData = searchText.length > 0 ? serchExamData : historyData;\r\n\r\n    return (\r\n      <div id=\"unassigned\">\r\n        <Heard\r\n          onReturn={() => {\r\n            this.props.history.goBack();\r\n          }}\r\n          onSearch={(data) => {\r\n            storage.doctorExam = JSON.stringify(data);\r\n\r\n            storage.doctorList = JSON.stringify(this.state.data);\r\n            if (storage.isClinical === \"true\") {\r\n              this.props.history.push({\r\n                pathname: \"/page8\",\r\n                identity: storage.identity,\r\n                patientId: data.patientId,\r\n              });\r\n            } else {\r\n              this.props.history.push({ pathname: \"/page10\" });\r\n            }\r\n          }}\r\n          menu8Click={() => {\r\n            console.log(\"--\", storage.identity);\r\n            switch (storage.identity) {\r\n              case \"2\":\r\n                this.props.history.push({\r\n                  pathname: \"/EzyVetSelectExam\",\r\n                  listDate: storage.ezyVetList,\r\n                  defaultCurrent: storage.defaultCurrent,\r\n                });\r\n\r\n                break;\r\n              case \"1\":\r\n                this.props.history.push(\"/VetSpireSelectExam\");\r\n\r\n                break;\r\n              case \"3\":\r\n                this.props.history.push({\r\n                  pathname: \"/uesr/selectExam\",\r\n                  listDate: storage.doctorList,\r\n                  defaultCurrent: storage.defaultCurrent,\r\n                });\r\n\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          }}\r\n        />\r\n\r\n        <div className=\"body\">\r\n          <div\r\n            className=\"title\"\r\n            style={{\r\n              marginTop: px(30),\r\n              fontSize: px(30),\r\n              marginBottom: px(40),\r\n            }}\r\n          >\r\n            Unassigned Measurements{\" \"}\r\n          </div>\r\n          <div className=\"input\" style={{ marginBottom: px(10) }}>\r\n            <input\r\n              type=\"text\"\r\n              // className=\"iconfont search\"\r\n              placeholder=\"&#xe628; Search Pet Name or Description\"\r\n              value={this.state.searchText}\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  searchText: e.target.value,\r\n                });\r\n                this._search(e.target.value);\r\n              }}\r\n              onKeyUp={(e) => {\r\n                // console.log(e);\r\n                if (e.keyCode === 13) {\r\n                  this._search();\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  this.setState({\r\n                    searchText: \"\",\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <div\r\n              className=\"searchBtn\"\r\n              style={{ height: px(35), fontSize: px(18) }}\r\n              onClick={this._search}\r\n            >\r\n              <p>Search</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table\">\r\n            <Table\r\n              style={{\r\n                // border: ' #979797 1px solid',\r\n                padding: 0,\r\n                margin: 0,\r\n                width: \"95%\",\r\n                height: MTop(280),\r\n                // backgroundColor: 'pink'\r\n              }}\r\n              loading={loading}\r\n              columns={columns}\r\n              dataSource={tableData}\r\n              rowKey={(columns) => columns.historyId}\r\n              // pagination={{ pageSize: 8, showSizeChanger: false, showQuickJumper: true }}\r\n              pagination={false}\r\n              scroll={{\r\n                y: MTop(260),\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {this._modal()}\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.assignVisible}\r\n          // visible={true}\r\n          element={\r\n            <div className=\"myfindOrg\">\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div\r\n                  // className=\" iconfont icon-left return\"\r\n                  // onClick={() => { this.setState({ isWorkplace: false, isOrg: true }) }}\r\n                  >\r\n                    {/* <img src={left1} alt=\"\" style={{ height: px(25) }} /> */}\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.setState({ assignVisible: false });\r\n                    }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"text\"\r\n                  onMouseOver={() => {\r\n                    if (disabled) {\r\n                      this.setState({\r\n                        disabled: false,\r\n                      });\r\n                    }\r\n                  }}\r\n                  onMouseOut={() => {\r\n                    this.setState({\r\n                      disabled: true,\r\n                    });\r\n                  }}\r\n                >\r\n                  Assign Measurement\r\n                </div>\r\n\r\n                <div className=\"searchBox\">\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search Pet\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.search}\r\n                    onChange={(item) => {\r\n                      this.setState({\r\n                        search: item.target.value,\r\n                      });\r\n                      this._searchPet(item.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"list\">{this._list()}</div>\r\n\r\n              <div className=\"foot\">\r\n                <div\r\n                  className=\"btnn flex\"\r\n                  style={{ height: px(45) }}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      assignVisible: false,\r\n                      visible: true,\r\n                    });\r\n                  }}\r\n                >\r\n                  <p>+Add New Pet</p>\r\n                </div>\r\n                <div\r\n                  className=\"btnn flex\"\r\n                  style={{ height: px(45) }}\r\n                  onClick={() => {\r\n                    if (!this.state.selectPetId) {\r\n                      message.error(\"Please select a pet to assign\");\r\n                    } else {\r\n                      let { selectPetId, seleceEmergencies, historyData } =\r\n                        this.state;\r\n                      let parmes = {\r\n                        petId: selectPetId,\r\n                        clinicalDatagroupId:\r\n                          seleceEmergencies.clinicalDatagroupId,\r\n                      };\r\n                      console.log(\"分配的数据信息\", parmes);\r\n                      fetchRequest(\r\n                        `/pet/addAndSavePetExam/${seleceEmergencies.historyId}`,\r\n                        \"POST\",\r\n                        parmes\r\n                      )\r\n                        .then((res) => {\r\n                          console.log(\"----------\", res);\r\n                          if (res.flag === true) {\r\n                            console.log(\"分配成功\");\r\n                            message.success(\"Assigned successfully\");\r\n                            let arr = [];\r\n                            for (let i = 0; i < historyData.length; i++) {\r\n                              const element = historyData[i];\r\n                              if (\r\n                                seleceEmergencies.clinicalDatagroupId !==\r\n                                element.clinicalDatagroupId\r\n                              ) {\r\n                                arr.push(element);\r\n                              }\r\n                            }\r\n\r\n                            this.setState({\r\n                              assignVisible: false,\r\n                              historyData: arr,\r\n                            });\r\n                          } else {\r\n                            message.error(\"Assignment failed\");\r\n                          }\r\n                        })\r\n                        .catch((err) => {\r\n                          console.log(err);\r\n                          message.error(\"Assignment failed\");\r\n                        });\r\n                    }\r\n                  }}\r\n                >\r\n                  <p>Confirm</p>\r\n                </div>\r\n                {/* <Button\r\n                  text={'+Add New Pet'}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      assignVisible: false,\r\n                      visible: true\r\n                    })\r\n                  }}\r\n                />\r\n                <Button\r\n                  text={'Confirm'}\r\n                  \r\n                /> */}\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx",["758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil2.js",["776","777","778","779"],"\r\n// let COMMON_URL = 'http://192.168.0.36:8080/melladesk';//本地\r\nlet COMMON_URL = 'https://www.mellaserver.com/api/melladesk';//企业AWS\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchRequest2 (url, method, params = '', Authorization) {\r\n\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": 'text/plain'\r\n          }\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          // mode: 'cors',\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\current.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx",["780","781","782"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx",["783","784","785"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { px } from '../../utils/px'\r\nimport { petSortTypeFun, petDetailInfoFun, setPetListArrFun } from '../../store/actions'\r\nimport electronStore from '../../utils/electronStore'\r\nimport petIcon from './../../assets/img/petIcon.png'\r\nimport xia from './../../assets/img/xia.png'\r\nimport MyModal from './../../utils/myModal/MyModal'\r\nimport redjinggao from './../../assets/img/redjinggao.png'\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate'\r\n\r\n\r\nimport './mainbody.less'\r\nimport { fetchRequest } from '../../utils/FetchUtil1';\r\n\r\nlet storage = window.localStorage;\r\n\r\n\r\nconst PetsUI = ({ bodyHeight, petSortTypeFun, petSortType, petDetailInfoFun, petDetailInfo, setPetListArrFun, petListArr, selectHardwareType, rulerConnectStatus }) => {\r\n  //定义宠物列表数组\r\n  const [petList, setPetList] = useState([])\r\n  //是否展示弹窗\r\n  const [showModal, setShowModal] = useState(false)\r\n  //选中的宠物的详细信息\r\n  const [selectPetDetail, setSelectPetDetail] = useState({})\r\n\r\n  //获取宠物列表加载动画\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    //设置宠物列表数据\r\n    setPetList(petListArr)\r\n  }, [petListArr])\r\n\r\n  useEffect(() => {\r\n    //从本地获取宠物列表数据\r\n    // let petList = electronStore.get('petList') || [];\r\n    setPetList(petList)\r\n    _getExam()\r\n  }, [])\r\n\r\n  //获取宠物列表数据\r\n  const _getExam = () => {\r\n\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n    console.log('查询宠物的入参', params);\r\n\r\n    setLoading(true)\r\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\r\n      .then(res => {\r\n        setLoading(false)\r\n        console.log('查询所有宠物', res);\r\n        if (res.flag === true && res.data) {\r\n          let oldList = res.data\r\n          let petArr = dataSort(oldList)\r\n          setPetList(petArr)\r\n          setPetListArrFun(petArr)\r\n        } else {\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        setLoading(false)\r\n        console.log(err);\r\n\r\n      })\r\n  }\r\n  const dataSort = (data) => {\r\n    let petList = [].concat(data)\r\n    switch (petSortType) {\r\n      case 'Time':\r\n        petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\r\n        break;\r\n      case 'Pet ID':\r\n        petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\r\n        break;\r\n      case 'Owner':\r\n        petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\r\n        break;\r\n      case 'Breed':\r\n        petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\r\n        break;\r\n      case 'Pet Name':\r\n        petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\r\n        break;\r\n      case 'Gender':\r\n        petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\r\n        break;\r\n    }\r\n    return petList\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  const menu = () => {\r\n    let menuList = [\r\n      // { value: 'Time' },\r\n      { value: 'Pet ID' },\r\n      // { value: 'Owner' },\r\n      // { value: 'Breed' },\r\n      { value: 'Pet Name' },\r\n      // { value: 'Gender' },\r\n    ];\r\n    let options = menuList.map((item, index) => {\r\n      let itemstyle = {}, textColor = '#1a1a1a'\r\n      if (petSortType === item.value) {\r\n        itemstyle = { backgroundColor: '#e1206D' }\r\n        textColor = '#fff'\r\n      }\r\n      return (\r\n        <Menu.Item style={itemstyle} key={`${item.value}`}>\r\n          <div style={{ color: textColor }}>{item.value}</div>\r\n        </Menu.Item>\r\n      )\r\n    })\r\n    return (\r\n      <Menu onClick={({ key, }) => {\r\n        petSortTypeFun(key)\r\n        let petArr = dataSort(petList)\r\n        setPetList(petArr)\r\n        setPetListArrFun(petArr)\r\n      }}>\r\n        {options}\r\n\r\n      </Menu>\r\n    );\r\n  }\r\n  const petListUI = () => {\r\n    let options = petList.map((item, index) => {\r\n      let itemBac = '#E7E7E7', itemColor = '#141414'\r\n      if (item.petId === petDetailInfo.petId) {\r\n        itemBac = '#e1206D'\r\n        itemColor = '#fff'\r\n      }\r\n      return (\r\n        <li key={index} >\r\n          <div className='petItem'\r\n            style={{ padding: `${px(7)}px 0 ${px(7)}px ${px(20)}px`, fontSize: 14, backgroundColor: itemBac, color: itemColor }}\r\n            onClick={() => {\r\n              //当硬件是尺子且尺子还在测量的时候,要做出提示\r\n              setSelectPetDetail(item)\r\n              if (selectHardwareType === 'tape' && rulerConnectStatus !== 'disconnected') {\r\n                setShowModal(true)\r\n              } else {\r\n                petDetailInfoFun(item)\r\n              }\r\n            }}\r\n          >\r\n            {`${item.patientId}, ${item.petName}`}\r\n          </div>\r\n        </li>\r\n      )\r\n\r\n    })\r\n\r\n    return (\r\n      <div className=\"petList\" style={{ marginTop: px(10), height: bodyHeight - devicesTitleHeight - px(220) }}>\r\n\r\n        <ul>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"PetUI\" style={{ height: bodyHeight - devicesTitleHeight, }}>\r\n      <MyModal\r\n        visible={showModal}\r\n        element={\r\n          <div className='petUiModal'>\r\n            <img src={redjinggao} alt=\"\" width={'45px'} style={{ margin: `${px(25)}px 0` }} />\r\n            <div className='bodyText' style={{ marginTop: px(30) }}>Patient Switched – select dimension to measure</div>\r\n            <div className=\"btns\" style={{ marginTop: px(35) }}>\r\n              <div className=\"btn\" onClick={() => { setShowModal(false) }}>Cancel</div>\r\n              <div className=\"btn\" onClick={() => { setShowModal(false); petDetailInfoFun(selectPetDetail) }}>Confirm</div>\r\n            </div>\r\n          </div>\r\n        }\r\n      />\r\n      <div style={{ width: '100%', position: 'relative', height: bodyHeight - devicesTitleHeight, }}>\r\n        <div className=\"title\" style={{ padding: `${px(20)}px 0px ${px(20)}px ${px(20)}px ` }}>\r\n          <img src={petIcon} alt=\"\" width={px(25)} style={{ marginRight: px(10) }} />\r\n          <div className=\"titleText\" >Pets</div>\r\n        </div>\r\n        <div className=\"sort\" style={{ paddingLeft: px(20) }}>\r\n          <Dropdown overlay={menu} trigger={['click']}>\r\n            <div className=\"sortBox\">\r\n              <img src={xia} alt=\"\" width={px(20)} style={{ marginRight: px(10) }} />\r\n              <div className=\"sortText\" >\r\n                {`Sort by: ${petSortType}`}\r\n              </div>\r\n            </div>\r\n          </Dropdown>\r\n        </div>\r\n        {petListUI()}\r\n\r\n        <div className=\"walkBtn\">\r\n          <div\r\n            className=\"walkbtnBox\"\r\n            style={{ height: px(40), marginTop: px(30) }}\r\n            onClick={() => {\r\n              let json = {\r\n                isWalkIn: true,\r\n                petId: null,\r\n                petName: null,\r\n                owner: null,\r\n                breed: null,\r\n\r\n              }\r\n              petDetailInfoFun(json)\r\n            }}\r\n          >\r\n            <div className=\"walkText\">Walk-In</div>\r\n          </div>\r\n        </div>\r\n        <MyModal visible={loading} />\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nPetsUI.propTypes = {\r\n  bodyHeight: PropTypes.number\r\n}\r\n//默认值\r\nPetsUI.defaultProps = {\r\n  bodyHeight: 0\r\n}\r\nexport default connect(\r\n  state => ({\r\n    petSortType: state.petReduce.petSortType,\r\n    petDetailInfo: state.petReduce.petDetailInfo,\r\n    petListArr: state.petReduce.petListArr,\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    rulerConnectStatus: state.hardwareReduce.rulerConnectStatus,\r\n  }),\r\n  { petSortTypeFun, petDetailInfoFun, setPetListArrFun }\r\n)(PetsUI)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx",["786","787","788","789","790","791","792","793","794","795","796","797"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Input, Button, message, Spin, BackTop, } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate'\r\nimport electronStore from '../../utils/electronStore';\r\nimport dog from './../../assets/images/pinkdog.png'\r\nimport cat from './../../assets/images/pinkcat.png'\r\nimport redDog from './../../assets/images/reddog.png'\r\nimport redCat from './../../assets/images/redcat.png'\r\nimport redother from './../../assets/images/redother.png'\r\nimport other from './../../assets/images/other.png'\r\nimport redJinggao from './../../assets/img/redjinggao.png'\r\n\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport { mTop, px, MTop, pX } from '../../utils/px';\r\nimport './addScheduledPet.less'\r\nimport { setMenuNum } from '../../store/actions';\r\nimport { fetchRequest } from '../../utils/FetchUtil1';\r\nimport MYButton from './../../utils/button/Button'\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\n\r\nlet defaultData = {\r\n    patientId: \"\",\r\n    wuzhong: 'dog',\r\n    petName: '',\r\n    miaoshu: ''\r\n}\r\n\r\nlet storage = window.localStorage;\r\nconst AddScheduledPet = ({ bodyHeight, setMenuNum }) => {\r\n    const [addPetist1, setAddPetist] = useState([]);\r\n    const [petName, setPetName] = useState('');\r\n    const [wuzhong, setWuzhong] = useState('dog');\r\n    const [patientId, setPatientId] = useState('');\r\n    const [miaoshu, setMiaoshu] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [isSave, setIsSave] = useState(false);\r\n\r\n    const selsectwuzhong = (val) => {\r\n        setWuzhong(val);\r\n\r\n    }\r\n    console.log('addPetist1', addPetist1);\r\n\r\n    const add = () => {\r\n        message.destroy()\r\n        if (!patientId) {\r\n            message.error(`Please enter the pet's patientId`)\r\n            return\r\n        }\r\n        setLoading(true)\r\n\r\n        let petSpeciesBreedId = 12001\r\n        switch (wuzhong) {\r\n            case 'dog': petSpeciesBreedId = 12001; break;\r\n            case 'cat': petSpeciesBreedId = 11001; break;\r\n            case 'other': petSpeciesBreedId = 13001; break;\r\n            default:\r\n                break;\r\n        }\r\n        let params = {\r\n            description: miaoshu,\r\n            doctorId: storage.userId,\r\n            patientId,\r\n            petName,\r\n            petSpeciesBreedId\r\n        }\r\n\r\n        if (storage.lastOrganization) {\r\n            params.organizationId = storage.lastOrganization\r\n        }\r\n        if (storage.lastWorkplaceId) {\r\n            params.workplaceId = storage.lastWorkplaceId\r\n        }\r\n        console.log('入参', params);\r\n        fetchRequest('/new/petall/subscribe', \"POST\", params)\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.flag) {\r\n                    let json = {\r\n                        patientId,\r\n                        wuzhong,\r\n                        petName,\r\n                        miaoshu\r\n                    }\r\n                    let list = [].concat(addPetist1)\r\n                    list.push(json)\r\n                    setAddPetist(list)\r\n                    setLoading(false)\r\n                    setPatientId('')\r\n                    setWuzhong('')\r\n                    setPetName('')\r\n                    setMiaoshu('')\r\n\r\n                } else {\r\n\r\n                    setLoading(false)\r\n                    message.error('add failed')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('错误原因', err);\r\n                setLoading(false)\r\n                message.error('add failed')\r\n            })\r\n\r\n    }\r\n    const body = () => {\r\n        let addPetist = [].concat(addPetist1)\r\n        addPetist.push(defaultData)\r\n        console.log('新的:', addPetist);\r\n\r\n        let options = addPetist.map((item, index) => {\r\n\r\n\r\n            if (index === addPetist.length - 1) {\r\n                return <li key={`${index}`} style={{ width: '100%', }}>\r\n                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\r\n                            <input type=\"text\" className='tableInput'\r\n                                value={patientId}\r\n                                onChange={value => {\r\n                                    setPatientId(value.target.value)\r\n\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\r\n                            <input type=\"text\" className='tableInput'\r\n                                value={petName}\r\n                                onChange={value => {\r\n\r\n                                    setPetName(value.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className='tableHeard flex' style={{ flexDirection: 'row', paddingTop: px(5), paddingBottom: px(5), justifyContent: 'space-around', borderTopWidth: '0px' }} >\r\n                            <div\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    selsectwuzhong('dog')\r\n                                }}>\r\n                                <img src={wuzhong === 'dog' ? redDog : dog} alt=\"\" width={px(40)} />\r\n                            </div>\r\n                            <div\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    selsectwuzhong('cat')\r\n                                }}>\r\n                                <img src={wuzhong === 'cat' ? redCat : cat} alt=\"\" width={px(40)} />\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    selsectwuzhong('other')\r\n                                }}>\r\n                                <img src={wuzhong === 'other' ? redother : other} alt=\"\" width={px(40)} />\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px', width: '30%' }}>\r\n                            <input type=\"text\" className='tableInput'\r\n                                value={miaoshu}\r\n                                onChange={value => {\r\n\r\n                                    setMiaoshu(value.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', borderTopWidth: '0px', width: '10%' }}>\r\n                            <div\r\n                                className='flex'\r\n                                style={{ width: px(30), height: px(30), borderRadius: px(30), backgroundColor: '#e1206d', cursor: 'pointer' }}\r\n                                onClick={add}\r\n\r\n                            >\r\n\r\n                                <MyIcon type={'icon-baocun-copy'} className=\"icon \" style={{ color: '#fff', fontSize: px(16) }} />\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </li>\r\n            } else {\r\n                let { patientId, wuzhong, petName, miaoshu } = item\r\n                return <li key={`${index}`} style={{ width: '100%', }}>\r\n                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\r\n                            <div className='tableText'>\r\n                                {patientId}\r\n                            </div>\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\r\n                            <div className='tableText'> {petName}</div>\r\n                        </div>\r\n                        <div className='tableHeard flex' style={{ flexDirection: 'row', paddingTop: px(5), paddingBottom: px(5), justifyContent: 'space-around', borderTopWidth: '0px' }} >\r\n                            <img src={wuzhong === 'dog' ? redDog : dog} alt=\"\" width={px(40)} />\r\n                            <img src={wuzhong === 'cat' ? redCat : cat} alt=\"\" width={px(40)} />\r\n                            <img src={wuzhong === 'other' ? redother : other} alt=\"\" width={px(40)} />\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px', width: '30%' }}>\r\n                            <div className='tableText'>{miaoshu}</div>\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', borderTopWidth: '0px', width: '10%' }}>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </li>\r\n            }\r\n\r\n\r\n        })\r\n\r\n        return (\r\n            <div style={{ width: '100%', marginTop: px(30), height: px(500), overflowY: 'auto', paddingLeft: '5%', paddingRight: '5%', }}>\r\n                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <div className='tableHeard'>Patient Id</div>\r\n                    <div className='tableHeard'>Pet Name</div>\r\n                    <div className='tableHeard'>species</div>\r\n                    <div className='tableHeard' style={{ width: '30%' }}>description</div>\r\n                    <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', width: '10%' }}></div>\r\n\r\n                </div>\r\n                <ul >\r\n                    {options}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className='addScjediled' style={{ height: bodyHeight }}>\r\n            <div className=\"addDeviceTitle\" style={{ height: devicesTitleHeight, fontSize: 26, paddingLeft: px(20) }}>Create New Scheduled </div>\r\n            <div className='addSBody' style={{ width: '100%', height: bodyHeight - devicesTitleHeight, }}>\r\n                {body()}\r\n\r\n\r\n                <div className='continueBox'>\r\n                    <div className='continueBtn'\r\n                        style={{ borderRadius: px(50), height: px(45), fontSize: px(20), }}\r\n                        onClick={() => {\r\n\r\n                            if (!patientId) {\r\n                                setMenuNum('3')\r\n                            } else {\r\n                                setIsSave(true)\r\n                            }\r\n                        }}\r\n                    >Continue</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <MyModal\r\n                visible={loading}\r\n            />\r\n            <MyModal\r\n                visible={isSave}\r\n                element={\r\n                    <div className='isSave'\r\n                    //  style={{ borderRadius: `${px(20)}px`, backgroundColor: '#fff' }}\r\n                    >\r\n                        <img src={redJinggao} alt=\"\" style={{ width: px(50), margin: `${px(25)}px 0` }} />\r\n                        <p style={{ textAlign: 'center' }}>There are unsaved patient appointments, <br />are you sure you want to exit?</p>\r\n                        <div className=\"btn\" style={{ margin: `${px(30)}px 0` }} >\r\n                            <MYButton\r\n                                text={'Cancel'}\r\n                                onClick={() => {\r\n                                    setIsSave(false)\r\n\r\n                                }}\r\n                                textBoxStyle={{\r\n                                    width: '40%',\r\n                                    height: px(40)\r\n                                }}\r\n                            />\r\n                            <MYButton\r\n                                text={'Exit'}\r\n                                onClick={() => {\r\n                                    setIsSave(false)\r\n                                    setMenuNum('3')\r\n                                }}\r\n                                textBoxStyle={{\r\n                                    width: '40%',\r\n                                    height: px(40)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nAddScheduledPet.propTypes = {\r\n\r\n}\r\n//默认值\r\nAddScheduledPet.defaultProps = {\r\n\r\n}\r\nexport default connect(\r\n    state => ({\r\n\r\n    }),\r\n    { setMenuNum }\r\n)(AddScheduledPet)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx",["798","799","800","801","802"],"import React, { useEffect, useState } from \"react\";\r\nimport { Layout, message } from \"antd\";\r\nimport Biggie from \"./Biggie\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { setBiggieConnectStatusFun } from \"../../store/actions\";\r\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\r\nimport HistoryTable from \"../../components/historyTable\";\r\nimport LinkEquipment from \"./components/linkEquipment\";\r\nimport \"./biggiePage.less\";\r\nimport { px } from \"../../utils/px\";\r\nimport { fetchRequest } from \"../../utils/FetchUtil1\";\r\nimport MyModal from \"../../utils/myModal/MyModal\";\r\n\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nlet storage = window.localStorage;\r\n\r\nconst BiggirPage = ({\r\n  hardwareReduce,\r\n  setBiggieConnectStatusFun,\r\n  petReduce,\r\n}) => {\r\n  let { petDetailInfo } = petReduce;\r\n  let { biggieBodyWeight } = hardwareReduce;\r\n  //定义体重值 体脂值 体重单位 连接状态\r\n  const [weight, setWeight] = useState(0);\r\n  const [saveNum, setSaveNum] = useState(0);\r\n  const [fat, setFat] = useState(0);\r\n  const [unit, setUnit] = useState(\"kg\");\r\n  const [connectStatus, setConnectStatus] = useState(\"disconnected\");\r\n  const [isSavePMS, setIsSavePMS] = useState(false);\r\n  const [saveLoad, setSaveLoad] = useState(false);\r\n  const [isHaveSaveBtn, setIsHaveSaveBtn] = useState(true);\r\n\r\n  const _saveWeight = () => {\r\n    let params = {\r\n      petId: petDetailInfo.petId,\r\n      doctorId: storage.userId,\r\n      weight: weight,\r\n      memo: \"\",\r\n      fat,\r\n      bodyConditionScore: null,\r\n    };\r\n    setSaveLoad(true);\r\n    console.log(\"---体重保存入参--：\", params);\r\n    fetchRequest(\"/exam/addClamantPetExam\", \"POST\", params)\r\n      .then((res) => {\r\n        setSaveLoad(false);\r\n        console.log(\"res\", res);\r\n        if (res.flag === true) {\r\n          switch (storage.lastOrganization) {\r\n            default:\r\n              message.success(\"Data successfully saved in Mella\");\r\n              break;\r\n          }\r\n          setSaveNum(saveNum + 1);\r\n          setIsHaveSaveBtn(false);\r\n          // this._getHistory()\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaveLoad(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isSave = storage.connectionKey ? false : true;\r\n    setIsSavePMS(isSave);\r\n    return () => { };\r\n  }, []);\r\n  useEffect(() => {\r\n    let {\r\n      biggieConnectStatus,\r\n      biggieBodyFat,\r\n      biggieBodyWeight,\r\n      biggieUnit,\r\n      biggieSameWeightCount,\r\n    } = hardwareReduce;\r\n    setConnectStatus(biggieConnectStatus);\r\n    setFat(biggieBodyFat);\r\n    setUnit(biggieUnit);\r\n    if (biggieUnit === \"lb\") {\r\n      biggieBodyWeight = biggieBodyWeight * 2;\r\n    }\r\n    setWeight(biggieBodyWeight);\r\n    if (biggieSameWeightCount === 6) {\r\n      let ipcRenderer = window.require(\"electron\").ipcRenderer;\r\n      ipcRenderer.send(\"keyboardWriting\", weight);\r\n    }\r\n\r\n    return () => { };\r\n  }, [hardwareReduce]);\r\n\r\n  useEffect(() => {\r\n    setIsHaveSaveBtn(true);\r\n    return () => { };\r\n  }, [biggieBodyWeight]);\r\n  //宠物变了,要设置为未连接\r\n  useEffect(() => {\r\n    setBiggieConnectStatusFun(\"disconnected\")\r\n  }, [petDetailInfo]);\r\n\r\n  return (\r\n    <>\r\n      <Layout className=\"biggiePage\">\r\n        <HeaderItem />\r\n        <Content className=\"biggieContentBox\">\r\n          {_.isEmpty(petDetailInfo) ? (\r\n            <>\r\n              <div className=\"chackPatientBox\">\r\n                <p className=\"chackPatientTitle\">Select a patient</p>\r\n              </div>\r\n            </>\r\n          ) : connectStatus === \"isMeasuring\" ? (\r\n            <div className=\"biggbody\" >\r\n              <div className=\"flex\" style={{ width: '100%', }}>\r\n                <div className=\"biggieTopBox\" style={{ width: px(400), }}>\r\n                  <Biggie\r\n                    weight={weight}\r\n                    bodyFat={fat}\r\n                    score={5}\r\n                    impedance={fat}\r\n                    isIbs={unit === \"lb\"}\r\n                    onPress={_saveWeight}\r\n                    discardOnPress={() =>\r\n                      setBiggieConnectStatusFun(\"disconnected\")\r\n                    }\r\n                    issave={isSavePMS}\r\n                    isHaveSaveBtn={isHaveSaveBtn}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"biggeTitleBox\">\r\n                <p className=\"biggeTitle\">History</p>\r\n              </div>\r\n              <div className=\"biggeTableBox\">\r\n                <HistoryTable saveNum={saveNum} tableColumnType='weight' />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"biggbody\">\r\n              <LinkEquipment />\r\n            </div>\r\n          )}\r\n        </Content>\r\n      </Layout>\r\n      <MyModal visible={saveLoad} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    hardwareReduce: state.hardwareReduce,\r\n    petReduce: state.petReduce,\r\n  }),\r\n  {\r\n    setBiggieConnectStatusFun,\r\n  }\r\n)(BiggirPage);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx",["803"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  PageHeader,\r\n  Radio,\r\n  Input,\r\n  Space,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setRulerConnectStatusFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConfirmCountFun,\r\n} from \"../../../store/actions\";\r\nimport _ from \"lodash\";\r\nimport NumericInput from \"./numericInput\";\r\nimport { fetchRequest } from \"../../../utils/FetchUtil1\";\r\nimport head from \"./../../../assets/img/head.png\";\r\nimport neck from \"./../../../assets/img/neck.png\";\r\nimport upper from \"./../../../assets/img/upper.png\";\r\nimport lower from \"./../../../assets/img/lower.png\";\r\nimport Full from \"./../../../assets/img/Full.png\";\r\nimport body from \"./../../../assets/img/body.png\";\r\nimport catHead from \"./../../../assets/img/catHead.png\";\r\nimport catNeck from \"./../../../assets/img/catNeck.png\";\r\nimport catUpper from \"./../../../assets/img/catUpper.png\";\r\nimport catLower from \"./../../../assets/img/catLower.png\";\r\nimport catFull from \"./../../../assets/img/catFull.png\";\r\nimport catBody from \"./../../../assets/img/catBody.png\";\r\nimport \"./scanPet.less\";\r\n\r\nconst { Content, Header } = Layout;\r\nconst ScanPet = ({\r\n  petMessage,\r\n  petDetailInfoFun,\r\n  ruleMessage,\r\n  setRulerConfirmCountFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n}) => {\r\n  let { petSpeciesBreedId, patientId, petId } = petMessage;\r\n  let { rulerMeasureValue, rulerConfirmCount, rulerUnit } = ruleMessage;\r\n  let storage = window.localStorage;\r\n  const [radioValue, setRadioValue] = useState(\"in\");\r\n  const [inputIndex, setInputIndex] = useState(-1);\r\n  const [visible, setVisible] = useState(false);\r\n  const [carouselIndex, setCarouselIndex] = useState(1);\r\n  const [headValue, setHeadValue] = useState(\"\"); //接收输入框的值\r\n  const [neckValue, setNeckValue] = useState(\"\"); //接收输入框的值\r\n  const [upperValue, setUpperValue] = useState(\"\"); //接收输入框的值\r\n  const [lowerValue, setLowerValue] = useState(\"\"); //接收输入框的值\r\n  const [torsoValue, setTorsoValue] = useState(\"\"); //接收输入框的值\r\n  const [bodyValue, setBodyValue] = useState(\"\"); //接收输入框的值\r\n  let newData = [];\r\n\r\n  //保存input组\r\n  const inputEl = (data) => {\r\n    newData.push(data);\r\n  };\r\n\r\n  //切换聚焦事件\r\n  const switchFocus = () => {\r\n    let num = inputIndex;\r\n    if (num === 3) {\r\n      setCarouselIndex(2);\r\n    }\r\n    if (num < 5) {\r\n      setInputIndex(num + 1);\r\n    }\r\n  };\r\n\r\n  //结束事件\r\n  const finishScan = () => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Whether To Save Data\",\r\n      top: \"40vh\",\r\n      onOk: saveData,\r\n    });\r\n  };\r\n  //保存数据\r\n  const saveData = () => {\r\n    const newNum = (val) => {\r\n      if (val) {\r\n        if (rulerUnit === \"in\") {\r\n          return parseFloat((parseFloat(val) * 2.54).toFixed(1));\r\n        } else {\r\n          return parseFloat(val);\r\n        }\r\n      } else {\r\n        return \"\";\r\n      }\r\n    };\r\n    let prams = {\r\n      l2rarmDistance: newNum(bodyValue) || null,\r\n      lowerTorsoCircumference: newNum(lowerValue) || null,\r\n      upperTorsoCircumference: newNum(upperValue) || null,\r\n      neckCircumference: newNum(neckValue) || null,\r\n      h2tLength: newNum(headValue) || null,\r\n      torsoLength: newNum(torsoValue) || null,\r\n    };\r\n    let url = `/pet/updatePetInfo/${storage.userId}/${petId}`;\r\n    fetchRequest(url, \"POST\", prams)\r\n      .then((res) => {\r\n        if (res.flag) {\r\n          petDetailInfoFun({\r\n            ...petMessage,\r\n            ...prams,\r\n          });\r\n          message.success(\"Uploaded successfully\");\r\n        } else {\r\n          message.error(\"upload failed\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"update failed\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //判断是猫还是狗还是其他\r\n  const checkPetType = () => {\r\n    //0是猫，1是狗，或者petSpeciesBreedId为空判断图片为狗\r\n    if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\r\n      return 0;\r\n    } else if (\r\n      petSpeciesBreedId === 12001 ||\r\n      _.inRange(petSpeciesBreedId, 136, 456)\r\n    ) {\r\n      return 1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  //切换图片\r\n  const changeImage = () => {\r\n    switch (inputIndex) {\r\n      case 0:\r\n        return checkPetType() === 1 ? (\r\n          <img src={head} />\r\n        ) : (\r\n          <img src={catHead} />\r\n        );\r\n      case 1:\r\n        return checkPetType() === 1 ? (\r\n          <img src={neck} />\r\n        ) : (\r\n          <img src={catNeck} />\r\n        );\r\n      case 2:\r\n        return checkPetType() === 1 ? (\r\n          <img src={upper} />\r\n        ) : (\r\n          <img src={catUpper} />\r\n        );\r\n      case 3:\r\n        return checkPetType() === 1 ? (\r\n          <img src={lower} />\r\n        ) : (\r\n          <img src={catLower} />\r\n        );\r\n      case 4:\r\n        return checkPetType() === 1 ? (\r\n          <img src={Full} />\r\n        ) : (\r\n          <img src={catFull} />\r\n        );\r\n      case 5:\r\n        return checkPetType() === 1 ? (\r\n          <img src={body} />\r\n        ) : (\r\n          <img src={catBody} />\r\n        );\r\n      default:\r\n        return checkPetType() === 1 ? (\r\n          <img src={body} />\r\n        ) : (\r\n          <img src={catBody} />\r\n        );\r\n    }\r\n  };\r\n\r\n  //点击输入框事件\r\n  const clickInput = (index) => {\r\n    setInputIndex(index);\r\n  };\r\n\r\n  //单位转化\r\n  const changeUnit = (value) => {\r\n    if (rulerUnit === \"cm\") {\r\n      return _.round(value * 2.54, 1);\r\n    } else if (rulerUnit === \"in\") {\r\n      return _.floor(_.divide(value, 2.54), 2);\r\n    }\r\n  };\r\n\r\n  //单选框改变事件\r\n  const changeRadio = (e) => {\r\n    setRadioValue(e.target.value);\r\n    setRulerUnitFun(e.target.value);\r\n  };\r\n\r\n  //小圆点点击事件\r\n  const clickPoint = (index) => {\r\n    if (index === 1) {\r\n      setCarouselIndex(1);\r\n    } else {\r\n      setCarouselIndex(2);\r\n    }\r\n  };\r\n  //切换宠物获取到长度信息,对数据根据界面单位进行换算\r\n  const petLengthDataConvert = (val) => {\r\n    if (!val) {\r\n      return \"\";\r\n    } else {\r\n      if (rulerUnit === \"cm\") {\r\n        return val.toFixed(1);\r\n      } else {\r\n        return _.floor(_.divide(val, 2.54), 2);\r\n      }\r\n    }\r\n  };\r\n\r\n  //监听点击界面中下一步按钮\r\n  useEffect(() => {\r\n    console.log(\"inputIndex\", inputIndex);\r\n\r\n    if (inputIndex < 6 && inputIndex !== -1) {\r\n      newData[inputIndex].focus();\r\n    }\r\n    if (inputIndex === 6) {\r\n      finishScan();\r\n    }\r\n\r\n    return () => {};\r\n  }, [inputIndex, patientId]);\r\n\r\n  useEffect(() => {\r\n    if (carouselIndex === 2) {\r\n      setInputIndex(4);\r\n    } else if (carouselIndex === 1) {\r\n      setInputIndex(0);\r\n    }\r\n    return () => {};\r\n  }, [carouselIndex]);\r\n\r\n  //监听用户点击了硬件中的下一步按钮\r\n  useEffect(() => {\r\n    if (inputIndex === -1) {\r\n      setInputIndex(0);\r\n    } else if (inputIndex < 6) {\r\n      setInputIndex(inputIndex + 1);\r\n    }\r\n    if (inputIndex === 3) {\r\n      setCarouselIndex(2);\r\n    }\r\n    return () => {};\r\n  }, [rulerConfirmCount]);\r\n\r\n  //监听切换了宠物\r\n  useEffect(() => {\r\n    setInputIndex(0);\r\n    let {\r\n      torsoLength,\r\n      l2rarmDistance,\r\n      upperTorsoCircumference,\r\n      lowerTorsoCircumference,\r\n      h2tLength,\r\n      neckCircumference,\r\n    } = petMessage;\r\n\r\n    setBodyValue(petLengthDataConvert(l2rarmDistance));\r\n    setLowerValue(petLengthDataConvert(lowerTorsoCircumference));\r\n    setUpperValue(petLengthDataConvert(upperTorsoCircumference));\r\n    setNeckValue(petLengthDataConvert(neckCircumference));\r\n    setHeadValue(petLengthDataConvert(h2tLength));\r\n    setTorsoValue(petLengthDataConvert(torsoLength));\r\n\r\n    return () => {};\r\n  }, [petId]);\r\n  //监听用户点击了硬件中的下一步按钮和拉动皮尺\r\n  useEffect(() => {\r\n    if (inputIndex < 6) {\r\n      switch (inputIndex) {\r\n        case 0:\r\n          setHeadValue(rulerMeasureValue);\r\n          break;\r\n        case 1:\r\n          setNeckValue(rulerMeasureValue);\r\n          break;\r\n        case 2:\r\n          setUpperValue(rulerMeasureValue);\r\n          break;\r\n        case 3:\r\n          setLowerValue(rulerMeasureValue);\r\n          break;\r\n        case 4:\r\n          setTorsoValue(rulerMeasureValue);\r\n          break;\r\n        case 5:\r\n          setBodyValue(rulerMeasureValue);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  }, [rulerConfirmCount, rulerMeasureValue]);\r\n  //监听单位改变\r\n  useEffect(() => {\r\n    setRadioValue(rulerUnit);\r\n    setHeadValue(headValue && changeUnit(headValue));\r\n    setNeckValue(neckValue && changeUnit(neckValue));\r\n    setUpperValue(upperValue && changeUnit(upperValue));\r\n    setLowerValue(lowerValue && changeUnit(lowerValue));\r\n    setTorsoValue(torsoValue && changeUnit(torsoValue));\r\n    setBodyValue(bodyValue && changeUnit(bodyValue));\r\n    return () => {};\r\n  }, [rulerUnit]);\r\n\r\n  return (\r\n    <>\r\n      <Content className=\"contentBox\">\r\n        <div className=\"scanImageBox\">{changeImage()}</div>\r\n        {/*选择单位框*/}\r\n        <Radio.Group\r\n          value={radioValue}\r\n          onChange={changeRadio}\r\n          buttonStyle=\"solid\"\r\n          className=\"selectLengthUnit\"\r\n        >\r\n          <Radio.Button\r\n            value=\"in\"\r\n            style={{\r\n              background: radioValue === \"in\" ? \"#12ade4\" : \"#fff\",\r\n              borderColorRight: radioValue === \"in\" ? \"#12ade4\" : \"#fff\",\r\n              borderRadius: \"20px\",\r\n              borderTopRightRadius: \"0px\",\r\n              borderBottomRightRadius: \"0px\",\r\n            }}\r\n          >\r\n            in\r\n          </Radio.Button>\r\n          <Radio.Button\r\n            value=\"cm\"\r\n            className=\"cmButton\"\r\n            style={{\r\n              background: radioValue === \"cm\" ? \"#12ade4\" : \"#fff\",\r\n              borderColorRight: radioValue === \"cm\" ? \"#12ade4\" : \"#fff\",\r\n              borderRadius: \"20px\",\r\n              borderTopLeftRadius: \"0px\",\r\n              borderBottomLeftRadius: \"0px\",\r\n            }}\r\n          >\r\n            cm\r\n          </Radio.Button>\r\n        </Radio.Group>\r\n        <div className=\"slideshowBox\">\r\n          <div className=\"scollInputGroup\">\r\n            {/*第一列输入框*/}\r\n            <Input.Group\r\n              className=\"inputGroupItem\"\r\n              style={{ display: carouselIndex === 1 ? \"\" : \"none\" }}\r\n            >\r\n              <Space className=\"inputItemBox\">\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Head Circumference</p>\r\n                  <NumericInput\r\n                    value={headValue}\r\n                    onChange={setHeadValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(0)}\r\n                    index={inputIndex}\r\n                    onKey={0}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Neck Circumference</p>\r\n                  <NumericInput\r\n                    value={neckValue}\r\n                    onChange={setNeckValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(1)}\r\n                    index={inputIndex}\r\n                    onKey={1}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Upper Torso Circumference</p>\r\n                  <NumericInput\r\n                    value={upperValue}\r\n                    onChange={setUpperValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(2)}\r\n                    index={inputIndex}\r\n                    onKey={2}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Lower Torso Circumference</p>\r\n                  <NumericInput\r\n                    value={lowerValue}\r\n                    onChange={setLowerValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(3)}\r\n                    index={inputIndex}\r\n                    onKey={3}\r\n                  />\r\n                </div>\r\n              </Space>\r\n            </Input.Group>\r\n            {/*第二列输入框*/}\r\n            <Input.Group\r\n              className=\"inputGroupItem\"\r\n              style={{ display: carouselIndex === 2 ? \"\" : \"none\" }}\r\n            >\r\n              <Space className=\"inputItemBox\">\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Full Torso Length</p>\r\n                  <NumericInput\r\n                    value={torsoValue}\r\n                    onChange={setTorsoValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(4)}\r\n                    index={inputIndex}\r\n                    onKey={4}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Full Body Length</p>\r\n                  <NumericInput\r\n                    value={bodyValue}\r\n                    onChange={setBodyValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(5)}\r\n                    index={inputIndex}\r\n                    onKey={5}\r\n                  />\r\n                </div>\r\n              </Space>\r\n            </Input.Group>\r\n          </div>\r\n        </div>\r\n\r\n        {/*小圆点 */}\r\n        <div className=\"dotBox\">\r\n          <ul className=\"dotList\">\r\n            <li>\r\n              <Button\r\n                className=\"dotItem\"\r\n                onClick={() => clickPoint(1)}\r\n                style={{\r\n                  background: carouselIndex === 1 ? \"#0a0a0a\" : \"#bdbaba\",\r\n                }}\r\n              >\r\n                1\r\n              </Button>\r\n            </li>\r\n            <li>\r\n              <Button\r\n                className=\"dotItem\"\r\n                onClick={() => clickPoint(2)}\r\n                style={{\r\n                  background: carouselIndex === 2 ? \"#0a0a0a\" : \"#bdbaba\",\r\n                }}\r\n              >\r\n                2\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        {/*下一步 */}\r\n        <div className=\"nextBtnBox\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            className=\"nextBtn\"\r\n            onClick={inputIndex > 4 ? finishScan : switchFocus}\r\n          >\r\n            {inputIndex > 4 ? \"Finish\" : \"Next\"}\r\n          </Button>\r\n        </div>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    ruleMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setRulerConnectStatusFun,\r\n    setRulerMeasureValueFun,\r\n    setRulerUnitFun,\r\n    setRulerConfirmCountFun,\r\n  }\r\n)(ScanPet);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx",["830","831"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil5.js",["832","833","834","835"],"\r\n\r\nlet COMMON_URL = 'https://api.rhapsody.vet/graphql';//集成Rhapsody\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchRhapsody (url, method, params = '', token = '') {\r\n\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let headers = null\r\n    if (token !== '') {\r\n      headers = {\r\n        'authorization': token,\r\n      };\r\n    }\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else if (method === 'POST') {\r\n\r\n\r\n    let header = {\r\n      \"Content-type\": \"application/json\"\r\n    };\r\n    if (token !== '') {\r\n      header = {\r\n        'authorization': token,\r\n        \"Content-type\": \"application/json\"\r\n      };\r\n    }\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          // mode: 'cors',\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/merge-patch+json\",\r\n      authorization: token\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Menu,\r\n    Popover,\r\n    Button,\r\n    Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport pinyin from 'pinyin';\r\n\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './phoneBook.less'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\n\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\r\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\r\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\r\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\r\n\r\n    useEffect(() => {\r\n        if (confirmSelectBreed !== -1) {\r\n            setSelectBreed(confirmSelectBreed)\r\n        }\r\n    }, [confirmSelectBreed])\r\n\r\n\r\n    console.log('listsDate', phoneList)\r\n\r\n    useEffect(() => {\r\n        // console.log('listsDate', listDate)\r\n        console.log('进来了');\r\n        let test = []\r\n        listDate.map((item, index) => {\r\n            let data = {\r\n                name: item.breedName,\r\n                hidden: false,\r\n                petSpeciesBreedId: item.petSpeciesBreedId\r\n            }\r\n            test.push(data)\r\n        })\r\n        // 暂时静态数据替换\r\n        //获取联系人列表\r\n        console.log('11111111111', test)\r\n        let list = test;\r\n        let sections = [], letterArr = [];\r\n        // console.log('原始的数据:',list)\r\n\r\n        // 右侧字母栏数据处理\r\n        list.map((item, index) => {\r\n            letterArr.push(pinyin(item.name.substring(0, 1), {\r\n                style: pinyin.STYLE_FIRST_LETTER,\r\n            })[0][0].toUpperCase());\r\n\r\n            letterArr = [...new Set(letterArr)].sort();\r\n        });\r\n\r\n        // 分组数据处理\r\n        letterArr.map((item, index) => {\r\n            sections.push({\r\n                title: item,\r\n                data: []\r\n            })\r\n        });\r\n        list.map(item => {\r\n            let listItem = item;\r\n            sections.map(item => {\r\n                // console.log('}}}}}}}}}}}}}}',item)\r\n                let first = listItem.name.substring(0, 1);\r\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\r\n                if (item.title == test) {\r\n                    item.data.push({\r\n                        firstName: first,\r\n                        name: listItem.name,\r\n                        hidden: listItem.hidden,\r\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\r\n                    });\r\n                }\r\n            })\r\n        });\r\n\r\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\r\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\r\n        // console.log('-1----', sections, letterArr);\r\n        setPhoneList(sections)\r\n        setPhoneListCopy(sections)\r\n        setLetterList(letterArr)\r\n        setLetterListCopy(letterArr)\r\n    }, [])\r\n    useEffect(() => {\r\n        // if (searchText) {\r\n        console.log('搜索内容', searchText, letterListCopy);\r\n        if (letterListCopy.length > 0) {\r\n\r\n            let allData = phoneListCopy\r\n            let newArr = []\r\n            let arr = []\r\n            if (searchText.length > 0) {\r\n                allData.map((item, i) => {\r\n                    item.data.map((data, index) => {\r\n                        // console.log(index)\r\n                        let dataName = data.name ? data.name.toUpperCase() : ''\r\n                        let keyData = searchText ? searchText.toUpperCase() : ''\r\n                        if (dataName.search(keyData) !== -1) {\r\n                            newArr.push(data)\r\n                        }\r\n                    })\r\n                    // console.log('一组数据：', newArr)\r\n                    if (newArr.length != 0) {\r\n                        let oneGreep = {\r\n                            title: item.title,\r\n                            data: newArr\r\n                        }\r\n                        //   console.log('一11组数据：', oneGreep)\r\n                        arr.push(oneGreep)\r\n                    }\r\n\r\n                    newArr = []\r\n                })\r\n                //   console.log('--------------------------', arr)\r\n                let letterArr = []\r\n                arr.map((item, index) => {\r\n                    letterArr.push(item.title)\r\n                })\r\n                // newArr = []\r\n                // // console.log('---||-----',newArr)\r\n                setPhoneList(arr)\r\n                setLetterList(letterArr)\r\n            } else {\r\n\r\n                setPhoneList(phoneListCopy)\r\n                setLetterList(letterListCopy)\r\n            }\r\n        }\r\n\r\n\r\n    }, [searchText])\r\n\r\n\r\n\r\n    const _phoneList = () => {\r\n\r\n        let option = phoneList.map((item, index) => {\r\n            let data = item.data\r\n            let option1 = data.map((value, index1) => {\r\n                return (\r\n                    <li\r\n                        key={`option1${index1}`}\r\n                        onClick={() => {\r\n                            // console.log(value.petSpeciesBreedId);\r\n                            setSelectBreed(value.petSpeciesBreedId)\r\n                            selectFun(value)\r\n                        }}>\r\n                        {value.name}\r\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\r\n                    </li>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <div className=\"phoneBody\">\r\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\r\n                    <ul>\r\n                        {option1}\r\n                    </ul>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul>\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const _letterList = () => {\r\n\r\n        let option = letterList.map((item, index) => {\r\n\r\n\r\n            return (\r\n                <li\r\n                    key={`${index}`}\r\n\r\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\r\n                    <a\r\n\r\n                        onClick={() => {\r\n                            litterClick(item)\r\n                        }}\r\n                    >{item}</a>\r\n                </li>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul className=\"letterUL\">\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const litterClick = (anchorName) => {\r\n        // console.log(anchorName);\r\n        if (anchorName) {\r\n            // 找到锚点\r\n            let anchorElement = document.getElementById(anchorName);\r\n            // console.log(anchorElement);\r\n            // 如果对应id的锚点存在，就跳转到锚点\r\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\r\n        }\r\n        // e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"phoneBook\">\r\n            <div className=\"phone\">\r\n                {_phoneList()}\r\n            </div>\r\n            <div className=\"litter\">\r\n                {_letterList()}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n\r\n    listDate: PropTypes.array,\r\n    selectFun: PropTypes.func,\r\n    searchText: PropTypes.string,\r\n    confirmSelectBreed: PropTypes.number\r\n}\r\nPhoneBook.defaultProps = {\r\n    listDate: [],\r\n    selectFun: () => { },\r\n    searchText: '',\r\n    confirmSelectBreed: -1,\r\n}\r\n\r\nexport default PhoneBook","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx",["857","858","859","860","861","862"],"import React, {\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport { Image, Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun\r\n} from '../../../store/actions';\r\nimport _ from 'lodash';\r\nimport './linkEquipment.less';\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n    let { mellaConnectStatus } = hardwareMessage;\r\n    return (\r\n\r\n        <Content className={\"contentBox\"}>\r\n            <div className='chackPatientBox'>\r\n                <p className='chackPatientTitle'>Select a patient</p>\r\n            </div>\r\n        </Content>\r\n\r\n    );\r\n}\r\nexport default connect(\r\n    state => ({\r\n        petMessage: state.petReduce.petDetailInfo,\r\n        hardwareMessage: state.hardwareReduce,\r\n    }),\r\n    {\r\n        selectHardwareModalShowFun,\r\n        petSortTypeFun,\r\n        petDetailInfoFun,\r\n        setMellaConnectStatusFun,\r\n        setMellaMeasureValueFun,\r\n        setMellaPredictValueFun,\r\n        setMellaMeasurePartFun\r\n    }\r\n)(LinkEquipment);","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectMella\\SelectMella.jsx",["863"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\SignIn.jsx",["864","865","866","867","868","869","870","871","872","873","874","875","876","877","878"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx",["879","880","881"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\help\\Help.jsx",["882"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\invite\\Invite.jsx",["883","884","885","886","887","888","889"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx",["890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\px.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.js",["906","907","908","909","910","911","912","913","914","915","916"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx",["957","958","959","960","961","962","963","964"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { ConfigProvider, Table } from 'antd';\r\nimport { useHistory } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nimport { mTop, px, MTop, pX } from '../../utils/px';\r\nimport './petTable.less'\r\nimport { petDetailInfoFun, setMenuNum, } from '../../store/actions';\r\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\r\n\r\n\r\n\r\n\r\n\r\nconst PetTable = ({ petListArr, loading, bodyHeight, petDetailInfoFun, setMenuNum, resetPetList, type }) => {\r\n    let history = useHistory()\r\n    const [heardSearchText, setHeardSearchText] = useState('')\r\n    //搜索后展示的宠物列表\r\n    const [searchData, setSearchData] = useState([])\r\n    const _search = (value) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\r\n        let keyWord = value || heardSearchText\r\n        /**\r\n         * 使用indexof方法实现模糊查询\r\n         *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n         *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n         *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n         *  \r\n         * list         原数组\r\n         * keyWord      查询关键词\r\n         * searchData   查询的结果\r\n         * \r\n         * toLowerCase（）方法：将字符串统一转成小写\r\n         * toUpperCase（）方法：将字符串统一转成大写\r\n         * \r\n         */\r\n        let list = petListArr\r\n        let searchData = []\r\n        for (let i = 0; i < list.length; i++) {\r\n            let petName = list[i].petName.toLowerCase() || ''\r\n            let patientId = list[i].patientId.toLowerCase() || ''\r\n            let rfid = list[i].rfid || ''\r\n            if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n                || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n                || `${rfid}`.indexOf(keyWord) !== -1\r\n            ) {\r\n                searchData.push(list[i])\r\n            }\r\n        }\r\n        console.log(searchData);\r\n        setSearchData(searchData)\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Time',\r\n            dataIndex: 'insertedAt',\r\n            key: 'insertedAt',\r\n            width: '16%',\r\n            // ...this.getColumnSearchProps('insertedAt'),\r\n            render: (text, record, index) => {\r\n                let chazhi = new Date().getTimezoneOffset()\r\n                // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\r\n                let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\r\n                let time = moment(parseInt(text) * 1000).format('hh:mm a');\r\n                let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\r\n                // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\r\n                return (\r\n                    <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\r\n                        <p>{`${year}`}</p>\r\n                        <p>{`${time}`}</p>\r\n                    </div>\r\n                )\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'Pet ID',\r\n            dataIndex: 'patientId',\r\n            key: 'patientId',\r\n            width: '15%',\r\n            // ...this.getColumnSearchProps('patientId'),\r\n        },\r\n        {\r\n            title: 'Pet Name',\r\n            dataIndex: 'petName',\r\n            key: 'petName',\r\n            width: '15%',\r\n            // ...this.getColumnSearchProps('petName'),\r\n        },\r\n        {\r\n            title: 'Owner',\r\n            dataIndex: 'owner',\r\n            key: 'owner',\r\n            width: '15%',\r\n            // ...this.getColumnSearchProps('owner'),\r\n        },\r\n        {\r\n            title: 'Breed',\r\n            dataIndex: 'breed',\r\n            key: 'breed',\r\n            width: '15%',\r\n            // ...this.getColumnSearchProps('breed'),\r\n            render: (text, record, index) => {\r\n                if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{'unknown'}</p>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{text}</p>\r\n                    )\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        {\r\n            title: 'Gender',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: '12%',\r\n            // width: '30%',\r\n            // ...this.getColumnSearchProps('gender'),\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n            width: '12%',\r\n            // width: '20%',\r\n            render: (text, record, index) => {\r\n                // console.log(text);\r\n\r\n                if (`${text}` === 'NaN') {\r\n                    return (\r\n                        <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{text}</p>\r\n                    )\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n\r\n    ];\r\n    const noData = () => {\r\n        return (\r\n            <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\r\n                <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\r\n                <a style={{ fontSize: px(22) }} href=\"#\"\r\n                    onClick={(e) => {\r\n                        console.log('我要去添加宠物');\r\n                        try {\r\n                            if (type === 'scheduled') {\r\n                                setMenuNum('AddScheduledPet')\r\n                            } else {\r\n                                setMenuNum('AddPet')\r\n                            }\r\n                        } catch (error) {\r\n                            console.log('错误信息', error);\r\n                        }\r\n                        e.preventDefault();\r\n\r\n                    }}\r\n\r\n                >{`go to add`}</a>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className='petTable' >\r\n            <div className=\"pet_table_heard\" style={{ marginTop: px(40) }}>\r\n                <div className=\"search\" style={{ height: px(28) }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"&#xe61b;    search\"\r\n                        value={heardSearchText}\r\n                        onChange={(e) => {\r\n                            setHeardSearchText(e.target.value)\r\n                            _search(e.target.value)\r\n                        }\r\n                        }\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"walkBtn1\" style={{ marginRight: px(28) }}>\r\n                    <div\r\n                        className=\"walkbtnBox\"\r\n                        style={{ height: px(28), width: px(80) }}\r\n                        onClick={_search}\r\n                    >\r\n                        <div className=\"walkText\">Search</div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"heard2 flex\" style={{ marginTop: px(40), marginBottom: px(8), marginLeft: px(20) }}>\r\n\r\n                <div className=\"sort flex\" >\r\n                    <p style={{ fontSize: px(16), marginRight: px(10) }}>Sort By:</p>\r\n\r\n                    <SelectionBox\r\n                        listArr={[\r\n                            { key: 'time', value: 'Time' },\r\n                            { key: 'petid', value: 'Pet ID' },\r\n                            { key: 'owner', value: 'Owner' },\r\n                            { key: 'breed', value: 'Breed' },\r\n                            { key: 'petname', value: 'Pet Name' },\r\n                            { key: 'gender', value: 'Gender' },\r\n                        ]}\r\n                        clickItem={(item) => {\r\n                            let petList = [].concat(petListArr)\r\n                            switch (item.key) {\r\n                                case 'time':\r\n                                    petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\r\n                                    break;\r\n                                case 'petid':\r\n                                    petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\r\n                                    break;\r\n                                case 'owner':\r\n                                    petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\r\n                                    break;\r\n                                case 'breed':\r\n                                    petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\r\n                                    break;\r\n                                case 'petname':\r\n                                    petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\r\n                                    break;\r\n                                case 'gender':\r\n                                    petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\r\n                                    break;\r\n                            }\r\n                            resetPetList(petList)\r\n\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"table\" >\r\n                <ConfigProvider renderEmpty={noData}>\r\n                    <Table\r\n                        style={{\r\n                            // border: ' #979797 1px solid',\r\n                            padding: 0,\r\n                            margin: 0,\r\n                            width: '95%',\r\n                            // height: px(500)\r\n                        }}\r\n                        rowKey={data => data.id}\r\n                        bordered={false}\r\n                        columns={columns}\r\n                        dataSource={(heardSearchText.length === 0) ? petListArr : searchData}\r\n                        loading={loading}\r\n                        locale={{ filterConfirm: <div>111</div> }}\r\n                        pagination={false}\r\n                        scroll={{\r\n                            y: px(480)\r\n                        }}\r\n                        onRow={(record) => {\r\n                            return {\r\n                                onClick: (event) => {\r\n                                    setMenuNum('1')\r\n                                    petDetailInfoFun(record)\r\n                                    console.log('record', record);\r\n                                }, // 点击行\r\n\r\n                            };\r\n                        }}\r\n                    />\r\n                </ConfigProvider>\r\n            </div>\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nPetTable.propTypes = {\r\n    petListArr: PropTypes.array,\r\n    resetPetList: PropTypes.func,\r\n}\r\n//默认值\r\nPetTable.defaultProps = {\r\n    bodyHeight: 0,\r\n    petListArr: [],\r\n    resetPetList: () => { },\r\n}\r\nexport default connect(\r\n    state => ({\r\n\r\n    }),\r\n    { petDetailInfoFun, setMenuNum, }\r\n)(PetTable)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js",["965","966"],"\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { px, mTop } from './../px'\r\nimport './mouseDiv.less'\r\n\r\n/**\r\n * \r\n * @param {string} minHeight 最小化、最大化方块的宽高 \r\n * @param {number} imgWidth 最小化、最大化图片的高度 \r\n * @returns  封装了最小化和关闭按钮，有鼠标移入、移出的动画\r\n */\r\nconst MinClose = ({ minHeight, beforeDiv, afterDiv, divClick }) => {\r\n  const [minbgc, setMinbgc] = useState('')\r\n  const [rMin, setRMin] = useState(beforeDiv)\r\n\r\n  const minMouseEnter = () => {\r\n    setMinbgc('rgba(70, 70, 70, 0.5)')\r\n    setRMin(afterDiv)\r\n  }\r\n  const minMouseLeave = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n  }\r\n  const minClock = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n    divClick()\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div id='mouseDiv'>\r\n      <div\r\n        className='min_icon'\r\n        onClick={minClock}\r\n        style={{ backgroundColor: minbgc, height: minHeight, width: minHeight }}\r\n        onMouseEnter={minMouseEnter}\r\n        onMouseLeave={minMouseLeave}\r\n      >\r\n        {rMin}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nMinClose.propTypes = {\r\n  minHeight: PropTypes.string,\r\n  imgWidth: PropTypes.number,\r\n  divClick: PropTypes.func,\r\n  afterDiv: PropTypes.func,\r\n  beforeDiv: PropTypes.func,\r\n\r\n\r\n}\r\nMinClose.defaultProps = {\r\n  minHeight: '40px',\r\n  imgWidth: px(20)\r\n\r\n}\r\n\r\nexport default MinClose","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\praviders\\Praviders.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx",["967","968","969","970","971","972","973","974"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx",["975","976"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx",["977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx",["999"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx",["1000","1001","1002"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\userAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx",["1003","1004","1005","1006","1007","1008","1009","1010","1011"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx",[],{"ruleId":"1012","severity":1,"message":"1013","line":4,"column":10,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1016","line":4,"column":20,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":22},{"ruleId":"1017","severity":1,"message":"1018","line":381,"column":9,"nodeType":"1019","messageId":"1020","endLine":388,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1021","line":591,"column":15,"nodeType":"1014","messageId":"1015","endLine":591,"endColumn":25},{"ruleId":"1012","severity":1,"message":"1022","line":635,"column":17,"nodeType":"1014","messageId":"1015","endLine":635,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1023","line":810,"column":11,"nodeType":"1014","messageId":"1015","endLine":810,"endColumn":22},{"ruleId":"1024","severity":1,"message":"1025","line":999,"column":9,"nodeType":"1026","messageId":"1027","endLine":999,"endColumn":15},{"ruleId":"1028","replacedBy":"1029"},{"ruleId":"1030","replacedBy":"1031"},{"ruleId":"1012","severity":1,"message":"1032","line":3,"column":16,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1033","line":3,"column":25,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":31},{"ruleId":"1012","severity":1,"message":"1034","line":3,"column":33,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":38},{"ruleId":"1012","severity":1,"message":"1035","line":5,"column":10,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1036","line":6,"column":10,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1037","line":16,"column":8,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1038","line":23,"column":8,"nodeType":"1014","messageId":"1015","endLine":23,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1039","line":24,"column":8,"nodeType":"1014","messageId":"1015","endLine":24,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1040","line":26,"column":8,"nodeType":"1014","messageId":"1015","endLine":26,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1041","line":38,"column":8,"nodeType":"1014","messageId":"1015","endLine":38,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1042","line":40,"column":9,"nodeType":"1014","messageId":"1015","endLine":40,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1043","line":41,"column":7,"nodeType":"1014","messageId":"1015","endLine":41,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1044","line":45,"column":7,"nodeType":"1014","messageId":"1015","endLine":45,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1045","line":106,"column":10,"nodeType":"1014","messageId":"1015","endLine":106,"endColumn":19},{"ruleId":"1012","severity":1,"message":"1046","line":106,"column":21,"nodeType":"1014","messageId":"1015","endLine":106,"endColumn":33},{"ruleId":"1012","severity":1,"message":"1047","line":138,"column":10,"nodeType":"1014","messageId":"1015","endLine":138,"endColumn":19},{"ruleId":"1048","severity":1,"message":"1049","line":167,"column":7,"nodeType":"1050","messageId":"1051","endLine":168,"endColumn":31},{"ruleId":"1048","severity":1,"message":"1049","line":169,"column":7,"nodeType":"1050","messageId":"1051","endLine":172,"endColumn":15},{"ruleId":"1048","severity":1,"message":"1052","line":181,"column":7,"nodeType":"1050","messageId":"1053","endLine":182,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1054","line":220,"column":13,"nodeType":"1014","messageId":"1015","endLine":220,"endColumn":20},{"ruleId":"1055","severity":1,"message":"1056","line":818,"column":17,"nodeType":"1057","endLine":818,"endColumn":62},{"ruleId":"1055","severity":1,"message":"1056","line":823,"column":17,"nodeType":"1057","endLine":823,"endColumn":65},{"ruleId":"1058","severity":1,"message":"1059","line":878,"column":15,"nodeType":"1057","endLine":884,"endColumn":16},{"ruleId":"1058","severity":1,"message":"1059","line":887,"column":15,"nodeType":"1057","endLine":893,"endColumn":16},{"ruleId":"1055","severity":1,"message":"1056","line":987,"column":17,"nodeType":"1057","endLine":987,"endColumn":62},{"ruleId":"1055","severity":1,"message":"1056","line":991,"column":15,"nodeType":"1057","endLine":991,"endColumn":64},{"ruleId":"1058","severity":1,"message":"1059","line":1109,"column":13,"nodeType":"1057","endLine":1113,"endColumn":14},{"ruleId":"1058","severity":1,"message":"1059","line":1190,"column":15,"nodeType":"1057","endLine":1198,"endColumn":16},{"ruleId":"1058","severity":1,"message":"1059","line":1213,"column":13,"nodeType":"1057","endLine":1213,"endColumn":76},{"ruleId":"1058","severity":1,"message":"1059","line":1284,"column":15,"nodeType":"1057","endLine":1292,"endColumn":16},{"ruleId":"1058","severity":1,"message":"1059","line":1316,"column":15,"nodeType":"1057","endLine":1320,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1060","line":1346,"column":9,"nodeType":"1014","messageId":"1015","endLine":1346,"endColumn":15},{"ruleId":"1061","severity":1,"message":"1062","line":1382,"column":6,"nodeType":"1063","endLine":1382,"endColumn":8,"suggestions":"1064"},{"ruleId":"1061","severity":1,"message":"1065","line":1391,"column":6,"nodeType":"1063","endLine":1391,"endColumn":32,"suggestions":"1066"},{"ruleId":"1055","severity":1,"message":"1056","line":1411,"column":13,"nodeType":"1057","endLine":1411,"endColumn":57},{"ruleId":"1055","severity":1,"message":"1056","line":1586,"column":17,"nodeType":"1057","endLine":1586,"endColumn":52},{"ruleId":"1055","severity":1,"message":"1056","line":1588,"column":17,"nodeType":"1057","endLine":1588,"endColumn":51},{"ruleId":"1012","severity":1,"message":"1067","line":2,"column":10,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1068","line":28,"column":8,"nodeType":"1014","messageId":"1015","endLine":28,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1069","line":31,"column":18,"nodeType":"1014","messageId":"1015","endLine":31,"endColumn":24},{"ruleId":"1061","severity":1,"message":"1070","line":75,"column":6,"nodeType":"1063","endLine":75,"endColumn":21,"suggestions":"1071"},{"ruleId":"1055","severity":1,"message":"1056","line":108,"column":15,"nodeType":"1057","endLine":108,"endColumn":113},{"ruleId":"1055","severity":1,"message":"1056","line":124,"column":19,"nodeType":"1057","endLine":124,"endColumn":43},{"ruleId":"1055","severity":1,"message":"1056","line":141,"column":27,"nodeType":"1057","endLine":147,"endColumn":29},{"ruleId":"1028","replacedBy":"1072"},{"ruleId":"1030","replacedBy":"1073"},{"ruleId":"1012","severity":1,"message":"1074","line":3,"column":10,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1075","line":16,"column":8,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1076","line":8,"column":10,"nodeType":"1014","messageId":"1015","endLine":8,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1077","line":18,"column":9,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":15},{"ruleId":"1028","replacedBy":"1078"},{"ruleId":"1030","replacedBy":"1079"},{"ruleId":"1012","severity":1,"message":"1080","line":6,"column":5,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1081","line":10,"column":10,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":28},{"ruleId":"1012","severity":1,"message":"1082","line":10,"column":30,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":42},{"ruleId":"1012","severity":1,"message":"1043","line":19,"column":7,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1083","line":11,"column":3,"nodeType":"1014","messageId":"1015","endLine":11,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1084","line":21,"column":8,"nodeType":"1014","messageId":"1015","endLine":21,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1085","line":26,"column":10,"nodeType":"1014","messageId":"1015","endLine":26,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1086","line":28,"column":8,"nodeType":"1014","messageId":"1015","endLine":28,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1087","line":30,"column":10,"nodeType":"1014","messageId":"1015","endLine":30,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1013","line":30,"column":16,"nodeType":"1014","messageId":"1015","endLine":30,"endColumn":20},{"ruleId":"1012","severity":1,"message":"1088","line":31,"column":10,"nodeType":"1014","messageId":"1015","endLine":31,"endColumn":20},{"ruleId":"1012","severity":1,"message":"1089","line":36,"column":8,"nodeType":"1014","messageId":"1015","endLine":36,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1090","line":37,"column":8,"nodeType":"1014","messageId":"1015","endLine":37,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1042","line":42,"column":9,"nodeType":"1014","messageId":"1015","endLine":42,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1043","line":43,"column":7,"nodeType":"1014","messageId":"1015","endLine":43,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1091","line":166,"column":9,"nodeType":"1014","messageId":"1015","endLine":166,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1092","line":176,"column":15,"nodeType":"1014","messageId":"1015","endLine":176,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1093","line":626,"column":15,"nodeType":"1014","messageId":"1015","endLine":626,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1094","line":901,"column":15,"nodeType":"1014","messageId":"1015","endLine":901,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1095","line":905,"column":15,"nodeType":"1014","messageId":"1015","endLine":905,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1096","line":989,"column":28,"nodeType":"1014","messageId":"1015","endLine":989,"endColumn":31},{"ruleId":"1012","severity":1,"message":"1097","line":989,"column":33,"nodeType":"1014","messageId":"1015","endLine":989,"endColumn":35},{"ruleId":"1012","severity":1,"message":"1098","line":989,"column":37,"nodeType":"1014","messageId":"1015","endLine":989,"endColumn":45},{"ruleId":"1012","severity":1,"message":"1099","line":989,"column":53,"nodeType":"1014","messageId":"1015","endLine":989,"endColumn":63},{"ruleId":"1012","severity":1,"message":"1100","line":989,"column":65,"nodeType":"1014","messageId":"1015","endLine":989,"endColumn":73},{"ruleId":"1012","severity":1,"message":"1101","line":989,"column":75,"nodeType":"1014","messageId":"1015","endLine":989,"endColumn":81},{"ruleId":"1012","severity":1,"message":"1102","line":989,"column":111,"nodeType":"1014","messageId":"1015","endLine":989,"endColumn":117},{"ruleId":"1012","severity":1,"message":"1103","line":989,"column":119,"nodeType":"1014","messageId":"1015","endLine":989,"endColumn":129},{"ruleId":"1058","severity":1,"message":"1059","line":1001,"column":11,"nodeType":"1057","endLine":1017,"endColumn":12},{"ruleId":"1017","severity":1,"message":"1018","line":1099,"column":19,"nodeType":"1019","messageId":"1020","endLine":1118,"endColumn":20},{"ruleId":"1055","severity":1,"message":"1056","line":1214,"column":17,"nodeType":"1057","endLine":1214,"endColumn":52},{"ruleId":"1055","severity":1,"message":"1056","line":1215,"column":17,"nodeType":"1057","endLine":1215,"endColumn":51},{"ruleId":"1012","severity":1,"message":"1104","line":2,"column":35,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":42},{"ruleId":"1012","severity":1,"message":"1085","line":13,"column":10,"nodeType":"1014","messageId":"1015","endLine":13,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1016","line":43,"column":20,"nodeType":"1014","messageId":"1015","endLine":43,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1042","line":50,"column":9,"nodeType":"1014","messageId":"1015","endLine":50,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1043","line":52,"column":7,"nodeType":"1014","messageId":"1015","endLine":52,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1105","line":79,"column":5,"nodeType":"1014","messageId":"1015","endLine":79,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1106","line":212,"column":48,"nodeType":"1014","messageId":"1015","endLine":212,"endColumn":54},{"ruleId":"1017","severity":1,"message":"1018","line":331,"column":9,"nodeType":"1019","messageId":"1020","endLine":344,"endColumn":10},{"ruleId":"1017","severity":1,"message":"1018","line":744,"column":9,"nodeType":"1019","messageId":"1020","endLine":748,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1107","line":752,"column":9,"nodeType":"1014","messageId":"1015","endLine":752,"endColumn":27},{"ruleId":"1108","severity":1,"message":"1109","line":798,"column":7,"nodeType":"1110","messageId":"1111","endLine":798,"endColumn":10},{"ruleId":"1017","severity":1,"message":"1018","line":1051,"column":11,"nodeType":"1019","messageId":"1020","endLine":1058,"endColumn":12},{"ruleId":"1017","severity":1,"message":"1018","line":1274,"column":13,"nodeType":"1019","messageId":"1020","endLine":1281,"endColumn":14},{"ruleId":"1017","severity":1,"message":"1018","line":1431,"column":13,"nodeType":"1019","messageId":"1020","endLine":1438,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1112","line":1502,"column":15,"nodeType":"1014","messageId":"1015","endLine":1502,"endColumn":26},{"ruleId":"1024","severity":1,"message":"1025","line":1789,"column":9,"nodeType":"1026","messageId":"1027","endLine":1789,"endColumn":15},{"ruleId":"1024","severity":1,"message":"1025","line":1798,"column":9,"nodeType":"1026","messageId":"1027","endLine":1798,"endColumn":14},{"ruleId":"1017","severity":1,"message":"1018","line":2024,"column":9,"nodeType":"1019","messageId":"1020","endLine":2037,"endColumn":10},{"ruleId":"1113","severity":1,"message":"1114","line":2430,"column":36,"nodeType":"1115","messageId":"1116","endLine":2430,"endColumn":37,"suggestions":"1117"},{"ruleId":"1118","severity":1,"message":"1119","line":2431,"column":47,"nodeType":"1120","messageId":"1111","endLine":2431,"endColumn":49},{"ruleId":"1012","severity":1,"message":"1121","line":2632,"column":107,"nodeType":"1014","messageId":"1015","endLine":2632,"endColumn":112},{"ruleId":"1012","severity":1,"message":"1122","line":3057,"column":11,"nodeType":"1014","messageId":"1015","endLine":3057,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1123","line":3694,"column":17,"nodeType":"1014","messageId":"1015","endLine":3694,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1099","line":4322,"column":13,"nodeType":"1014","messageId":"1015","endLine":4322,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1100","line":4322,"column":25,"nodeType":"1014","messageId":"1015","endLine":4322,"endColumn":33},{"ruleId":"1012","severity":1,"message":"1101","line":4322,"column":35,"nodeType":"1014","messageId":"1015","endLine":4322,"endColumn":41},{"ruleId":"1017","severity":1,"message":"1018","line":4355,"column":17,"nodeType":"1019","messageId":"1020","endLine":4368,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1124","line":3,"column":3,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1125","line":5,"column":3,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1126","line":10,"column":8,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1127","line":12,"column":10,"nodeType":"1014","messageId":"1015","endLine":12,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1035","line":5,"column":32,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":44},{"ruleId":"1012","severity":1,"message":"1128","line":133,"column":32,"nodeType":"1014","messageId":"1015","endLine":133,"endColumn":48},{"ruleId":"1012","severity":1,"message":"1129","line":150,"column":15,"nodeType":"1014","messageId":"1015","endLine":150,"endColumn":28},{"ruleId":"1012","severity":1,"message":"1124","line":4,"column":3,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1130","line":5,"column":3,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":7},{"ruleId":"1012","severity":1,"message":"1131","line":7,"column":3,"nodeType":"1014","messageId":"1015","endLine":7,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1076","line":13,"column":10,"nodeType":"1014","messageId":"1015","endLine":13,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1132","line":19,"column":10,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1133","line":16,"column":8,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1013","line":17,"column":10,"nodeType":"1014","messageId":"1015","endLine":17,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1134","line":22,"column":8,"nodeType":"1014","messageId":"1015","endLine":22,"endColumn":20},{"ruleId":"1012","severity":1,"message":"1077","line":23,"column":9,"nodeType":"1014","messageId":"1015","endLine":23,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1135","line":344,"column":9,"nodeType":"1014","messageId":"1015","endLine":344,"endColumn":25},{"ruleId":"1012","severity":1,"message":"1136","line":381,"column":11,"nodeType":"1014","messageId":"1015","endLine":381,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1102","line":381,"column":142,"nodeType":"1014","messageId":"1015","endLine":381,"endColumn":148},{"ruleId":"1012","severity":1,"message":"1103","line":381,"column":150,"nodeType":"1014","messageId":"1015","endLine":381,"endColumn":160},{"ruleId":"1012","severity":1,"message":"1137","line":385,"column":7,"nodeType":"1014","messageId":"1015","endLine":385,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1138","line":4,"column":3,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1139","line":12,"column":8,"nodeType":"1014","messageId":"1015","endLine":12,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1033","line":13,"column":8,"nodeType":"1014","messageId":"1015","endLine":13,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1140","line":14,"column":8,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1133","line":15,"column":8,"nodeType":"1014","messageId":"1015","endLine":15,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1013","line":16,"column":10,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1141","line":25,"column":10,"nodeType":"1014","messageId":"1015","endLine":25,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1077","line":27,"column":9,"nodeType":"1014","messageId":"1015","endLine":27,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1142","line":43,"column":11,"nodeType":"1014","messageId":"1015","endLine":43,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1143","line":43,"column":19,"nodeType":"1014","messageId":"1015","endLine":43,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1144","line":59,"column":9,"nodeType":"1014","messageId":"1015","endLine":59,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1145","line":78,"column":11,"nodeType":"1014","messageId":"1015","endLine":78,"endColumn":19},{"ruleId":"1012","severity":1,"message":"1124","line":2,"column":10,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1033","line":2,"column":17,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1146","line":2,"column":34,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":38},{"ruleId":"1012","severity":1,"message":"1147","line":2,"column":40,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1076","line":3,"column":10,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1035","line":3,"column":32,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":44},{"ruleId":"1012","severity":1,"message":"1148","line":11,"column":8,"nodeType":"1014","messageId":"1015","endLine":11,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1016","line":12,"column":26,"nodeType":"1014","messageId":"1015","endLine":12,"endColumn":28},{"ruleId":"1012","severity":1,"message":"1149","line":18,"column":5,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":10},{"ruleId":"1017","severity":1,"message":"1018","line":164,"column":9,"nodeType":"1019","messageId":"1020","endLine":182,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1150","line":9,"column":8,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1076","line":10,"column":10,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1151","line":10,"column":32,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1152","line":14,"column":8,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1013","line":19,"column":10,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":14},{"ruleId":"1017","severity":1,"message":"1018","line":85,"column":25,"nodeType":"1019","messageId":"1020","endLine":114,"endColumn":26},{"ruleId":"1048","severity":1,"message":"1049","line":103,"column":29,"nodeType":"1050","messageId":"1051","endLine":104,"endColumn":68},{"ruleId":"1048","severity":1,"message":"1049","line":105,"column":29,"nodeType":"1050","messageId":"1051","endLine":112,"endColumn":39},{"ruleId":"1012","severity":1,"message":"1153","line":290,"column":49,"nodeType":"1014","messageId":"1015","endLine":290,"endColumn":63},{"ruleId":"1012","severity":1,"message":"1154","line":290,"column":65,"nodeType":"1014","messageId":"1015","endLine":290,"endColumn":79},{"ruleId":"1012","severity":1,"message":"1155","line":4,"column":5,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1156","line":10,"column":13,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":19},{"ruleId":"1118","severity":1,"message":"1157","line":13,"column":20,"nodeType":"1120","messageId":"1111","endLine":13,"endColumn":22},{"ruleId":"1118","severity":1,"message":"1157","line":61,"column":20,"nodeType":"1120","messageId":"1111","endLine":61,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1158","line":2,"column":27,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":36},{"ruleId":"1012","severity":1,"message":"1159","line":3,"column":10,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":20},{"ruleId":"1012","severity":1,"message":"1013","line":8,"column":14,"nodeType":"1014","messageId":"1015","endLine":8,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1124","line":4,"column":10,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1033","line":4,"column":17,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1146","line":4,"column":34,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":38},{"ruleId":"1012","severity":1,"message":"1147","line":4,"column":40,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1076","line":5,"column":10,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1035","line":5,"column":32,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":44},{"ruleId":"1012","severity":1,"message":"1160","line":9,"column":8,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1040","line":18,"column":8,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1161","line":19,"column":8,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1162","line":20,"column":8,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1163","line":21,"column":8,"nodeType":"1014","messageId":"1015","endLine":21,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1148","line":23,"column":8,"nodeType":"1014","messageId":"1015","endLine":23,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1016","line":24,"column":26,"nodeType":"1014","messageId":"1015","endLine":24,"endColumn":28},{"ruleId":"1061","severity":1,"message":"1164","line":60,"column":8,"nodeType":"1063","endLine":60,"endColumn":10,"suggestions":"1165"},{"ruleId":"1061","severity":1,"message":"1166","line":102,"column":8,"nodeType":"1063","endLine":102,"endColumn":38,"suggestions":"1167"},{"ruleId":"1012","severity":1,"message":"1168","line":28,"column":26,"nodeType":"1014","messageId":"1015","endLine":28,"endColumn":32},{"ruleId":"1012","severity":1,"message":"1169","line":28,"column":34,"nodeType":"1014","messageId":"1015","endLine":28,"endColumn":39},{"ruleId":"1061","severity":1,"message":"1170","line":115,"column":6,"nodeType":"1063","endLine":115,"endColumn":8,"suggestions":"1171"},{"ruleId":"1055","severity":1,"message":"1056","line":167,"column":17,"nodeType":"1057","endLine":167,"endColumn":45},{"ruleId":"1012","severity":1,"message":"1172","line":2,"column":8,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1124","line":4,"column":10,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1033","line":4,"column":17,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1125","line":4,"column":25,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":32},{"ruleId":"1012","severity":1,"message":"1146","line":4,"column":34,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":38},{"ruleId":"1012","severity":1,"message":"1147","line":4,"column":40,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1076","line":5,"column":10,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1173","line":5,"column":46,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":61},{"ruleId":"1012","severity":1,"message":"1013","line":9,"column":10,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1087","line":9,"column":20,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1016","line":9,"column":26,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":28},{"ruleId":"1061","severity":1,"message":"1174","line":30,"column":8,"nodeType":"1063","endLine":30,"endColumn":10,"suggestions":"1175"},{"ruleId":"1012","severity":1,"message":"1158","line":1,"column":17,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1176","line":1,"column":28,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":36},{"ruleId":"1012","severity":1,"message":"1177","line":3,"column":18,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1178","line":3,"column":24,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":34},{"ruleId":"1012","severity":1,"message":"1158","line":1,"column":17,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1176","line":1,"column":28,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":36},{"ruleId":"1012","severity":1,"message":"1177","line":3,"column":18,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1178","line":3,"column":24,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":34},{"ruleId":"1012","severity":1,"message":"1179","line":20,"column":9,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1069","line":20,"column":18,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1158","line":2,"column":5,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1176","line":3,"column":5,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1067","line":5,"column":10,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1180","line":16,"column":8,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1069","line":19,"column":18,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1181","line":22,"column":11,"nodeType":"1014","messageId":"1015","endLine":22,"endColumn":29},{"ruleId":"1012","severity":1,"message":"1131","line":5,"column":3,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1182","line":7,"column":3,"nodeType":"1014","messageId":"1015","endLine":7,"endColumn":6},{"ruleId":"1012","severity":1,"message":"1183","line":44,"column":16,"nodeType":"1014","messageId":"1015","endLine":44,"endColumn":20},{"ruleId":"1055","severity":1,"message":"1056","line":99,"column":18,"nodeType":"1057","endLine":99,"endColumn":47},{"ruleId":"1055","severity":1,"message":"1056","line":101,"column":18,"nodeType":"1057","endLine":101,"endColumn":47},{"ruleId":"1055","severity":1,"message":"1056","line":103,"column":18,"nodeType":"1057","endLine":103,"endColumn":47},{"ruleId":"1055","severity":1,"message":"1056","line":105,"column":18,"nodeType":"1057","endLine":105,"endColumn":47},{"ruleId":"1055","severity":1,"message":"1056","line":127,"column":11,"nodeType":"1057","endLine":134,"endColumn":13},{"ruleId":"1055","severity":1,"message":"1056","line":139,"column":13,"nodeType":"1057","endLine":139,"endColumn":33},{"ruleId":"1118","severity":1,"message":"1119","line":204,"column":28,"nodeType":"1120","messageId":"1111","endLine":204,"endColumn":30},{"ruleId":"1061","severity":1,"message":"1184","line":301,"column":6,"nodeType":"1063","endLine":301,"endColumn":18,"suggestions":"1185"},{"ruleId":"1061","severity":1,"message":"1186","line":309,"column":6,"nodeType":"1063","endLine":309,"endColumn":8,"suggestions":"1187"},{"ruleId":"1012","severity":1,"message":"1176","line":1,"column":17,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":25},{"ruleId":"1012","severity":1,"message":"1158","line":1,"column":27,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":36},{"ruleId":"1012","severity":1,"message":"1035","line":3,"column":10,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1076","line":3,"column":24,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":44},{"ruleId":"1012","severity":1,"message":"1036","line":4,"column":10,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":24},{"ruleId":"1055","severity":1,"message":"1056","line":44,"column":11,"nodeType":"1057","endLine":47,"endColumn":13},{"ruleId":"1055","severity":1,"message":"1056","line":53,"column":13,"nodeType":"1057","endLine":56,"endColumn":15},{"ruleId":"1055","severity":1,"message":"1056","line":61,"column":11,"nodeType":"1057","endLine":64,"endColumn":13},{"ruleId":"1055","severity":1,"message":"1056","line":74,"column":11,"nodeType":"1057","endLine":77,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1033","line":3,"column":3,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1188","line":4,"column":3,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1131","line":5,"column":3,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1182","line":7,"column":3,"nodeType":"1014","messageId":"1015","endLine":7,"endColumn":6},{"ruleId":"1012","severity":1,"message":"1189","line":31,"column":10,"nodeType":"1014","messageId":"1015","endLine":31,"endColumn":12},{"ruleId":"1012","severity":1,"message":"1190","line":43,"column":9,"nodeType":"1014","messageId":"1015","endLine":43,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1181","line":43,"column":28,"nodeType":"1014","messageId":"1015","endLine":43,"endColumn":46},{"ruleId":"1012","severity":1,"message":"1191","line":43,"column":48,"nodeType":"1014","messageId":"1015","endLine":43,"endColumn":64},{"ruleId":"1012","severity":1,"message":"1183","line":45,"column":16,"nodeType":"1014","messageId":"1015","endLine":45,"endColumn":20},{"ruleId":"1012","severity":1,"message":"1192","line":58,"column":10,"nodeType":"1014","messageId":"1015","endLine":58,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1193","line":58,"column":20,"nodeType":"1014","messageId":"1015","endLine":58,"endColumn":31},{"ruleId":"1055","severity":1,"message":"1056","line":136,"column":11,"nodeType":"1057","endLine":143,"endColumn":13},{"ruleId":"1055","severity":1,"message":"1056","line":148,"column":13,"nodeType":"1057","endLine":148,"endColumn":33},{"ruleId":"1055","severity":1,"message":"1056","line":196,"column":18,"nodeType":"1057","endLine":196,"endColumn":47},{"ruleId":"1055","severity":1,"message":"1056","line":198,"column":18,"nodeType":"1057","endLine":198,"endColumn":47},{"ruleId":"1055","severity":1,"message":"1056","line":200,"column":18,"nodeType":"1057","endLine":200,"endColumn":47},{"ruleId":"1055","severity":1,"message":"1056","line":202,"column":18,"nodeType":"1057","endLine":202,"endColumn":47},{"ruleId":"1055","severity":1,"message":"1056","line":226,"column":11,"nodeType":"1057","endLine":233,"endColumn":13},{"ruleId":"1055","severity":1,"message":"1056","line":238,"column":13,"nodeType":"1057","endLine":238,"endColumn":63},{"ruleId":"1061","severity":1,"message":"1184","line":345,"column":6,"nodeType":"1063","endLine":345,"endColumn":18,"suggestions":"1194"},{"ruleId":"1061","severity":1,"message":"1195","line":353,"column":6,"nodeType":"1063","endLine":353,"endColumn":15,"suggestions":"1196"},{"ruleId":"1061","severity":1,"message":"1186","line":361,"column":6,"nodeType":"1063","endLine":361,"endColumn":8,"suggestions":"1197"},{"ruleId":"1012","severity":1,"message":"1176","line":2,"column":17,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":25},{"ruleId":"1012","severity":1,"message":"1155","line":7,"column":5,"nodeType":"1014","messageId":"1015","endLine":7,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1156","line":20,"column":9,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":15},{"ruleId":"1118","severity":1,"message":"1157","line":23,"column":16,"nodeType":"1120","messageId":"1111","endLine":23,"endColumn":18},{"ruleId":"1118","severity":1,"message":"1157","line":74,"column":16,"nodeType":"1120","messageId":"1111","endLine":74,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1140","line":13,"column":8,"nodeType":"1014","messageId":"1015","endLine":13,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1134","line":14,"column":8,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":20},{"ruleId":"1012","severity":1,"message":"1083","line":4,"column":3,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1076","line":10,"column":10,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1198","line":15,"column":8,"nodeType":"1014","messageId":"1015","endLine":15,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1085","line":17,"column":10,"nodeType":"1014","messageId":"1015","endLine":17,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1199","line":4,"column":3,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1124","line":5,"column":3,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1033","line":6,"column":3,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1131","line":7,"column":3,"nodeType":"1014","messageId":"1015","endLine":7,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1034","line":10,"column":3,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1083","line":11,"column":3,"nodeType":"1014","messageId":"1015","endLine":11,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1200","line":12,"column":3,"nodeType":"1014","messageId":"1015","endLine":12,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1150","line":15,"column":8,"nodeType":"1014","messageId":"1015","endLine":15,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1041","line":16,"column":8,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1068","line":17,"column":8,"nodeType":"1014","messageId":"1015","endLine":17,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1035","line":20,"column":10,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1084","line":21,"column":8,"nodeType":"1014","messageId":"1015","endLine":21,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1087","line":27,"column":10,"nodeType":"1014","messageId":"1015","endLine":27,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1013","line":27,"column":16,"nodeType":"1014","messageId":"1015","endLine":27,"endColumn":20},{"ruleId":"1012","severity":1,"message":"1016","line":27,"column":22,"nodeType":"1014","messageId":"1015","endLine":27,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1042","line":39,"column":9,"nodeType":"1014","messageId":"1015","endLine":39,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1146","line":2,"column":60,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":64},{"ruleId":"1012","severity":1,"message":"1150","line":3,"column":8,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1035","line":6,"column":32,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":44},{"ruleId":"1012","severity":1,"message":"1173","line":6,"column":46,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":61},{"ruleId":"1012","severity":1,"message":"1042","line":31,"column":9,"nodeType":"1014","messageId":"1015","endLine":31,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1201","line":38,"column":5,"nodeType":"1014","messageId":"1015","endLine":38,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1202","line":118,"column":29,"nodeType":"1014","messageId":"1015","endLine":118,"endColumn":36},{"ruleId":"1012","severity":1,"message":"1203","line":118,"column":38,"nodeType":"1014","messageId":"1015","endLine":118,"endColumn":46},{"ruleId":"1012","severity":1,"message":"1204","line":118,"column":48,"nodeType":"1014","messageId":"1015","endLine":118,"endColumn":57},{"ruleId":"1012","severity":1,"message":"1205","line":118,"column":59,"nodeType":"1014","messageId":"1015","endLine":118,"endColumn":68},{"ruleId":"1017","severity":1,"message":"1018","line":161,"column":5,"nodeType":"1019","messageId":"1020","endLine":167,"endColumn":6},{"ruleId":"1206","severity":1,"message":"1207","line":174,"column":41,"nodeType":"1208","messageId":"1209","endLine":174,"endColumn":43},{"ruleId":"1210","severity":1,"message":"1211","line":318,"column":34,"nodeType":"1120","messageId":"1212","endLine":318,"endColumn":48},{"ruleId":"1210","severity":1,"message":"1211","line":369,"column":29,"nodeType":"1120","messageId":"1212","endLine":369,"endColumn":42},{"ruleId":"1012","severity":1,"message":"1213","line":457,"column":11,"nodeType":"1014","messageId":"1015","endLine":457,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1214","line":590,"column":11,"nodeType":"1014","messageId":"1015","endLine":590,"endColumn":24},{"ruleId":"1055","severity":1,"message":"1056","line":786,"column":15,"nodeType":"1057","endLine":786,"endColumn":63},{"ruleId":"1012","severity":1,"message":"1215","line":850,"column":5,"nodeType":"1014","messageId":"1015","endLine":850,"endColumn":12},{"ruleId":"1012","severity":1,"message":"1205","line":851,"column":11,"nodeType":"1014","messageId":"1015","endLine":851,"endColumn":20},{"ruleId":"1055","severity":1,"message":"1056","line":886,"column":15,"nodeType":"1057","endLine":886,"endColumn":63},{"ruleId":"1017","severity":1,"message":"1018","line":917,"column":5,"nodeType":"1019","messageId":"1020","endLine":920,"endColumn":6},{"ruleId":"1017","severity":1,"message":"1018","line":922,"column":5,"nodeType":"1019","messageId":"1020","endLine":925,"endColumn":6},{"ruleId":"1012","severity":1,"message":"1216","line":1059,"column":61,"nodeType":"1014","messageId":"1015","endLine":1059,"endColumn":78},{"ruleId":"1012","severity":1,"message":"1217","line":1059,"column":80,"nodeType":"1014","messageId":"1015","endLine":1059,"endColumn":85},{"ruleId":"1012","severity":1,"message":"1205","line":1059,"column":118,"nodeType":"1014","messageId":"1015","endLine":1059,"endColumn":127},{"ruleId":"1012","severity":1,"message":"1146","line":2,"column":60,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":64},{"ruleId":"1012","severity":1,"message":"1150","line":3,"column":8,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1173","line":6,"column":32,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1042","line":31,"column":9,"nodeType":"1014","messageId":"1015","endLine":31,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1043","line":33,"column":7,"nodeType":"1014","messageId":"1015","endLine":33,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1201","line":38,"column":5,"nodeType":"1014","messageId":"1015","endLine":38,"endColumn":8},{"ruleId":"1108","severity":1,"message":"1218","line":75,"column":9,"nodeType":"1110","messageId":"1111","endLine":75,"endColumn":15},{"ruleId":"1017","severity":1,"message":"1018","line":116,"column":9,"nodeType":"1019","messageId":"1020","endLine":122,"endColumn":10},{"ruleId":"1206","severity":1,"message":"1207","line":129,"column":51,"nodeType":"1208","messageId":"1209","endLine":129,"endColumn":53},{"ruleId":"1206","severity":1,"message":"1207","line":168,"column":51,"nodeType":"1208","messageId":"1209","endLine":168,"endColumn":53},{"ruleId":"1012","severity":1,"message":"1213","line":277,"column":15,"nodeType":"1014","messageId":"1015","endLine":277,"endColumn":25},{"ruleId":"1012","severity":1,"message":"1219","line":277,"column":53,"nodeType":"1014","messageId":"1015","endLine":277,"endColumn":59},{"ruleId":"1012","severity":1,"message":"1214","line":350,"column":15,"nodeType":"1014","messageId":"1015","endLine":350,"endColumn":28},{"ruleId":"1055","severity":1,"message":"1056","line":554,"column":29,"nodeType":"1057","endLine":554,"endColumn":77},{"ruleId":"1012","severity":1,"message":"1215","line":577,"column":9,"nodeType":"1014","messageId":"1015","endLine":577,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1205","line":578,"column":15,"nodeType":"1014","messageId":"1015","endLine":578,"endColumn":24},{"ruleId":"1055","severity":1,"message":"1056","line":612,"column":29,"nodeType":"1057","endLine":612,"endColumn":77},{"ruleId":"1017","severity":1,"message":"1018","line":643,"column":9,"nodeType":"1019","messageId":"1020","endLine":646,"endColumn":10},{"ruleId":"1017","severity":1,"message":"1018","line":648,"column":9,"nodeType":"1019","messageId":"1020","endLine":651,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1099","line":732,"column":17,"nodeType":"1014","messageId":"1015","endLine":732,"endColumn":27},{"ruleId":"1012","severity":1,"message":"1100","line":732,"column":29,"nodeType":"1014","messageId":"1015","endLine":732,"endColumn":37},{"ruleId":"1012","severity":1,"message":"1101","line":732,"column":39,"nodeType":"1014","messageId":"1015","endLine":732,"endColumn":45},{"ruleId":"1012","severity":1,"message":"1220","line":732,"column":47,"nodeType":"1014","messageId":"1015","endLine":732,"endColumn":55},{"ruleId":"1012","severity":1,"message":"1217","line":798,"column":97,"nodeType":"1014","messageId":"1015","endLine":798,"endColumn":102},{"ruleId":"1012","severity":1,"message":"1221","line":798,"column":135,"nodeType":"1014","messageId":"1015","endLine":798,"endColumn":157},{"ruleId":"1012","severity":1,"message":"1076","line":8,"column":10,"nodeType":"1014","messageId":"1015","endLine":8,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1035","line":8,"column":32,"nodeType":"1014","messageId":"1015","endLine":8,"endColumn":44},{"ruleId":"1012","severity":1,"message":"1016","line":14,"column":20,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1013","line":14,"column":10,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1033","line":17,"column":8,"nodeType":"1014","messageId":"1015","endLine":17,"endColumn":14},{"ruleId":"1108","severity":1,"message":"1222","line":48,"column":5,"nodeType":"1110","messageId":"1111","endLine":48,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1144","line":59,"column":9,"nodeType":"1014","messageId":"1015","endLine":59,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1144","line":95,"column":9,"nodeType":"1014","messageId":"1015","endLine":95,"endColumn":22},{"ruleId":"1206","severity":1,"message":"1207","line":213,"column":41,"nodeType":"1208","messageId":"1209","endLine":213,"endColumn":43},{"ruleId":"1206","severity":1,"message":"1207","line":226,"column":47,"nodeType":"1208","messageId":"1209","endLine":226,"endColumn":49},{"ruleId":"1012","severity":1,"message":"1121","line":397,"column":23,"nodeType":"1014","messageId":"1015","endLine":397,"endColumn":28},{"ruleId":"1012","severity":1,"message":"1223","line":450,"column":21,"nodeType":"1014","messageId":"1015","endLine":450,"endColumn":36},{"ruleId":"1012","severity":1,"message":"1138","line":4,"column":5,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1139","line":12,"column":8,"nodeType":"1014","messageId":"1015","endLine":12,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1033","line":13,"column":8,"nodeType":"1014","messageId":"1015","endLine":13,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1140","line":14,"column":8,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1133","line":15,"column":8,"nodeType":"1014","messageId":"1015","endLine":15,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1013","line":16,"column":10,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1148","line":17,"column":8,"nodeType":"1014","messageId":"1015","endLine":17,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1224","line":18,"column":8,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1225","line":19,"column":8,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1226","line":20,"column":8,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1227","line":21,"column":8,"nodeType":"1014","messageId":"1015","endLine":21,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1127","line":22,"column":10,"nodeType":"1014","messageId":"1015","endLine":22,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1068","line":23,"column":8,"nodeType":"1014","messageId":"1015","endLine":23,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1077","line":26,"column":9,"nodeType":"1014","messageId":"1015","endLine":26,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1142","line":40,"column":15,"nodeType":"1014","messageId":"1015","endLine":40,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1143","line":40,"column":23,"nodeType":"1014","messageId":"1015","endLine":40,"endColumn":28},{"ruleId":"1108","severity":1,"message":"1228","line":129,"column":13,"nodeType":"1110","messageId":"1111","endLine":129,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1144","line":143,"column":13,"nodeType":"1014","messageId":"1015","endLine":143,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1155","line":4,"column":5,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1156","line":10,"column":9,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":15},{"ruleId":"1118","severity":1,"message":"1157","line":13,"column":16,"nodeType":"1120","messageId":"1111","endLine":13,"endColumn":18},{"ruleId":"1118","severity":1,"message":"1157","line":58,"column":16,"nodeType":"1120","messageId":"1111","endLine":58,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1229","line":1,"column":17,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1176","line":1,"column":39,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":47},{"ruleId":"1061","severity":1,"message":"1230","line":162,"column":6,"nodeType":"1063","endLine":162,"endColumn":23,"suggestions":"1231"},{"ruleId":"1012","severity":1,"message":"1140","line":11,"column":8,"nodeType":"1014","messageId":"1015","endLine":11,"endColumn":21},{"ruleId":"1061","severity":1,"message":"1232","line":47,"column":6,"nodeType":"1063","endLine":47,"endColumn":8,"suggestions":"1233"},{"ruleId":"1017","severity":1,"message":"1018","line":87,"column":5,"nodeType":"1019","messageId":"1020","endLine":106,"endColumn":6},{"ruleId":"1012","severity":1,"message":"1158","line":1,"column":27,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":36},{"ruleId":"1012","severity":1,"message":"1172","line":2,"column":8,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1124","line":4,"column":10,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1033","line":4,"column":17,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1146","line":4,"column":34,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":38},{"ruleId":"1012","severity":1,"message":"1147","line":4,"column":40,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1035","line":5,"column":32,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":44},{"ruleId":"1012","severity":1,"message":"1173","line":5,"column":46,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":61},{"ruleId":"1012","severity":1,"message":"1140","line":8,"column":8,"nodeType":"1014","messageId":"1015","endLine":8,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1013","line":18,"column":10,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1087","line":18,"column":20,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1016","line":18,"column":26,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":28},{"ruleId":"1012","severity":1,"message":"1069","line":16,"column":9,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1168","line":16,"column":26,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":32},{"ruleId":"1012","severity":1,"message":"1169","line":16,"column":34,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":39},{"ruleId":"1061","severity":1,"message":"1234","line":94,"column":6,"nodeType":"1063","endLine":94,"endColumn":22,"suggestions":"1235"},{"ruleId":"1061","severity":1,"message":"1236","line":103,"column":6,"nodeType":"1063","endLine":103,"endColumn":21,"suggestions":"1237"},{"ruleId":"1061","severity":1,"message":"1238","line":231,"column":6,"nodeType":"1063","endLine":231,"endColumn":26,"suggestions":"1239"},{"ruleId":"1012","severity":1,"message":"1240","line":1,"column":38,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":44},{"ruleId":"1012","severity":1,"message":"1177","line":5,"column":3,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":7},{"ruleId":"1012","severity":1,"message":"1178","line":6,"column":3,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1241","line":13,"column":3,"nodeType":"1014","messageId":"1015","endLine":13,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1069","line":42,"column":18,"nodeType":"1014","messageId":"1015","endLine":42,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1242","line":56,"column":10,"nodeType":"1014","messageId":"1015","endLine":56,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1243","line":56,"column":19,"nodeType":"1014","messageId":"1015","endLine":56,"endColumn":29},{"ruleId":"1055","severity":1,"message":"1056","line":152,"column":11,"nodeType":"1057","endLine":152,"endColumn":29},{"ruleId":"1055","severity":1,"message":"1056","line":154,"column":11,"nodeType":"1057","endLine":154,"endColumn":32},{"ruleId":"1055","severity":1,"message":"1056","line":158,"column":11,"nodeType":"1057","endLine":158,"endColumn":29},{"ruleId":"1055","severity":1,"message":"1056","line":160,"column":11,"nodeType":"1057","endLine":160,"endColumn":32},{"ruleId":"1055","severity":1,"message":"1056","line":164,"column":11,"nodeType":"1057","endLine":164,"endColumn":30},{"ruleId":"1055","severity":1,"message":"1056","line":166,"column":11,"nodeType":"1057","endLine":166,"endColumn":33},{"ruleId":"1055","severity":1,"message":"1056","line":170,"column":11,"nodeType":"1057","endLine":170,"endColumn":30},{"ruleId":"1055","severity":1,"message":"1056","line":172,"column":11,"nodeType":"1057","endLine":172,"endColumn":33},{"ruleId":"1055","severity":1,"message":"1056","line":176,"column":11,"nodeType":"1057","endLine":176,"endColumn":29},{"ruleId":"1055","severity":1,"message":"1056","line":178,"column":11,"nodeType":"1057","endLine":178,"endColumn":32},{"ruleId":"1055","severity":1,"message":"1056","line":182,"column":11,"nodeType":"1057","endLine":182,"endColumn":29},{"ruleId":"1055","severity":1,"message":"1056","line":184,"column":11,"nodeType":"1057","endLine":184,"endColumn":32},{"ruleId":"1055","severity":1,"message":"1056","line":188,"column":11,"nodeType":"1057","endLine":188,"endColumn":29},{"ruleId":"1055","severity":1,"message":"1056","line":190,"column":11,"nodeType":"1057","endLine":190,"endColumn":32},{"ruleId":"1061","severity":1,"message":"1244","line":248,"column":6,"nodeType":"1063","endLine":248,"endColumn":29,"suggestions":"1245"},{"ruleId":"1061","severity":1,"message":"1246","line":270,"column":6,"nodeType":"1063","endLine":270,"endColumn":25,"suggestions":"1247"},{"ruleId":"1061","severity":1,"message":"1248","line":292,"column":6,"nodeType":"1063","endLine":292,"endColumn":13,"suggestions":"1249"},{"ruleId":"1061","severity":1,"message":"1250","line":319,"column":6,"nodeType":"1063","endLine":319,"endColumn":44,"suggestions":"1251"},{"ruleId":"1061","severity":1,"message":"1252","line":330,"column":6,"nodeType":"1063","endLine":330,"endColumn":17,"suggestions":"1253"},{"ruleId":"1012","severity":1,"message":"1180","line":4,"column":8,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1158","line":6,"column":10,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":19},{"ruleId":"1012","severity":1,"message":"1155","line":4,"column":5,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":10},{"ruleId":"1118","severity":1,"message":"1157","line":16,"column":16,"nodeType":"1120","messageId":"1111","endLine":16,"endColumn":18},{"ruleId":"1118","severity":1,"message":"1157","line":67,"column":16,"nodeType":"1120","messageId":"1111","endLine":67,"endColumn":18},{"ruleId":"1118","severity":1,"message":"1157","line":101,"column":16,"nodeType":"1120","messageId":"1111","endLine":101,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1159","line":2,"column":10,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":20},{"ruleId":"1012","severity":1,"message":"1177","line":4,"column":5,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1032","line":5,"column":5,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":12},{"ruleId":"1012","severity":1,"message":"1033","line":6,"column":5,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1034","line":7,"column":5,"nodeType":"1014","messageId":"1015","endLine":7,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1013","line":15,"column":10,"nodeType":"1014","messageId":"1015","endLine":15,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1087","line":15,"column":20,"nodeType":"1014","messageId":"1015","endLine":15,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1140","line":16,"column":8,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":21},{"ruleId":"1206","severity":1,"message":"1207","line":49,"column":36,"nodeType":"1208","messageId":"1209","endLine":49,"endColumn":38},{"ruleId":"1206","severity":1,"message":"1207","line":65,"column":32,"nodeType":"1208","messageId":"1209","endLine":65,"endColumn":34},{"ruleId":"1206","severity":1,"message":"1207","line":74,"column":37,"nodeType":"1208","messageId":"1209","endLine":74,"endColumn":39},{"ruleId":"1206","severity":1,"message":"1207","line":80,"column":23,"nodeType":"1208","messageId":"1209","endLine":80,"endColumn":25},{"ruleId":"1206","severity":1,"message":"1207","line":82,"column":31,"nodeType":"1208","messageId":"1209","endLine":82,"endColumn":33},{"ruleId":"1118","severity":1,"message":"1157","line":86,"column":32,"nodeType":"1120","messageId":"1111","endLine":86,"endColumn":34},{"ruleId":"1061","severity":1,"message":"1254","line":104,"column":8,"nodeType":"1063","endLine":104,"endColumn":10,"suggestions":"1255"},{"ruleId":"1206","severity":1,"message":"1207","line":114,"column":39,"nodeType":"1208","messageId":"1209","endLine":114,"endColumn":41},{"ruleId":"1206","severity":1,"message":"1207","line":115,"column":49,"nodeType":"1208","messageId":"1209","endLine":115,"endColumn":51},{"ruleId":"1118","severity":1,"message":"1119","line":124,"column":39,"nodeType":"1120","messageId":"1111","endLine":124,"endColumn":41},{"ruleId":"1206","severity":1,"message":"1207","line":137,"column":39,"nodeType":"1208","messageId":"1209","endLine":137,"endColumn":41},{"ruleId":"1061","severity":1,"message":"1256","line":152,"column":8,"nodeType":"1063","endLine":152,"endColumn":20,"suggestions":"1257"},{"ruleId":"1058","severity":1,"message":"1258","line":202,"column":21,"nodeType":"1057","endLine":207,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1158","line":2,"column":5,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1176","line":3,"column":5,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1067","line":5,"column":10,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1180","line":16,"column":8,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1069","line":19,"column":18,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1181","line":22,"column":11,"nodeType":"1014","messageId":"1015","endLine":22,"endColumn":29},{"ruleId":"1012","severity":1,"message":"1259","line":60,"column":13,"nodeType":"1014","messageId":"1015","endLine":60,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1033","line":2,"column":17,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1147","line":2,"column":40,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1035","line":5,"column":3,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1127","line":14,"column":10,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1260","line":17,"column":10,"nodeType":"1014","messageId":"1015","endLine":17,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1013","line":18,"column":10,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1087","line":18,"column":20,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1016","line":18,"column":26,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":28},{"ruleId":"1012","severity":1,"message":"1261","line":21,"column":20,"nodeType":"1014","messageId":"1015","endLine":21,"endColumn":29},{"ruleId":"1012","severity":1,"message":"1043","line":23,"column":7,"nodeType":"1014","messageId":"1015","endLine":23,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1262","line":346,"column":11,"nodeType":"1014","messageId":"1015","endLine":346,"endColumn":17},{"ruleId":"1108","severity":1,"message":"1263","line":360,"column":15,"nodeType":"1110","messageId":"1111","endLine":360,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1264","line":415,"column":19,"nodeType":"1014","messageId":"1015","endLine":415,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1265","line":416,"column":9,"nodeType":"1014","messageId":"1015","endLine":416,"endColumn":13},{"ruleId":"1058","severity":1,"message":"1059","line":583,"column":15,"nodeType":"1057","endLine":583,"endColumn":50},{"ruleId":"1012","severity":1,"message":"1176","line":1,"column":17,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":25},{"ruleId":"1012","severity":1,"message":"1172","line":8,"column":8,"nodeType":"1014","messageId":"1015","endLine":8,"endColumn":17},{"ruleId":"1266","severity":1,"message":"1267","line":16,"column":20,"nodeType":"1268","messageId":"1111","endLine":16,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1269","line":58,"column":9,"nodeType":"1014","messageId":"1015","endLine":58,"endColumn":12},{"ruleId":"1012","severity":1,"message":"1150","line":9,"column":8,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1076","line":10,"column":10,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1151","line":10,"column":32,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1152","line":14,"column":8,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1133","line":17,"column":8,"nodeType":"1014","messageId":"1015","endLine":17,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1013","line":19,"column":10,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1154","line":159,"column":61,"nodeType":"1014","messageId":"1015","endLine":159,"endColumn":75},{"ruleId":"1012","severity":1,"message":"1138","line":4,"column":3,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1139","line":13,"column":8,"nodeType":"1014","messageId":"1015","endLine":13,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1033","line":14,"column":8,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1140","line":15,"column":8,"nodeType":"1014","messageId":"1015","endLine":15,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1133","line":16,"column":8,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1225","line":20,"column":8,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1226","line":21,"column":8,"nodeType":"1014","messageId":"1015","endLine":21,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1227","line":22,"column":8,"nodeType":"1014","messageId":"1015","endLine":22,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1077","line":32,"column":9,"nodeType":"1014","messageId":"1015","endLine":32,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1142","line":55,"column":11,"nodeType":"1014","messageId":"1015","endLine":55,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1143","line":55,"column":19,"nodeType":"1014","messageId":"1015","endLine":55,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1144","line":71,"column":9,"nodeType":"1014","messageId":"1015","endLine":71,"endColumn":22},{"ruleId":"1012","severity":1,"message":"1204","line":154,"column":18,"nodeType":"1014","messageId":"1015","endLine":154,"endColumn":27},{"ruleId":"1012","severity":1,"message":"1203","line":154,"column":29,"nodeType":"1014","messageId":"1015","endLine":154,"endColumn":37},{"ruleId":"1055","severity":1,"message":"1056","line":558,"column":19,"nodeType":"1057","endLine":565,"endColumn":61},{"ruleId":"1058","severity":1,"message":"1059","line":573,"column":19,"nodeType":"1057","endLine":581,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1172","line":2,"column":8,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1124","line":4,"column":10,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1033","line":4,"column":17,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1125","line":4,"column":25,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":32},{"ruleId":"1012","severity":1,"message":"1146","line":4,"column":34,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":38},{"ruleId":"1012","severity":1,"message":"1147","line":4,"column":40,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1076","line":5,"column":10,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1173","line":5,"column":46,"nodeType":"1014","messageId":"1015","endLine":5,"endColumn":61},{"ruleId":"1012","severity":1,"message":"1013","line":9,"column":10,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1087","line":9,"column":20,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1016","line":9,"column":26,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":28},{"ruleId":"1012","severity":1,"message":"1177","line":7,"column":3,"nodeType":"1014","messageId":"1015","endLine":7,"endColumn":7},{"ruleId":"1012","severity":1,"message":"1104","line":11,"column":3,"nodeType":"1014","messageId":"1015","endLine":11,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1146","line":13,"column":3,"nodeType":"1014","messageId":"1015","endLine":13,"endColumn":7},{"ruleId":"1012","severity":1,"message":"1076","line":19,"column":3,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1035","line":20,"column":3,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1148","line":27,"column":8,"nodeType":"1014","messageId":"1015","endLine":27,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1270","line":31,"column":8,"nodeType":"1014","messageId":"1015","endLine":31,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1271","line":32,"column":8,"nodeType":"1014","messageId":"1015","endLine":32,"endColumn":10},{"ruleId":"1012","severity":1,"message":"1272","line":33,"column":8,"nodeType":"1014","messageId":"1015","endLine":33,"endColumn":12},{"ruleId":"1012","severity":1,"message":"1225","line":34,"column":8,"nodeType":"1014","messageId":"1015","endLine":34,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1226","line":35,"column":8,"nodeType":"1014","messageId":"1015","endLine":35,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1227","line":36,"column":8,"nodeType":"1014","messageId":"1015","endLine":36,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1273","line":40,"column":8,"nodeType":"1014","messageId":"1015","endLine":40,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1274","line":44,"column":8,"nodeType":"1014","messageId":"1015","endLine":44,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1275","line":54,"column":7,"nodeType":"1014","messageId":"1015","endLine":54,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1276","line":88,"column":17,"nodeType":"1014","messageId":"1015","endLine":88,"endColumn":25},{"ruleId":"1012","severity":1,"message":"1277","line":100,"column":10,"nodeType":"1014","messageId":"1015","endLine":100,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1278","line":104,"column":10,"nodeType":"1014","messageId":"1015","endLine":104,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1279","line":107,"column":18,"nodeType":"1014","messageId":"1015","endLine":107,"endColumn":27},{"ruleId":"1012","severity":1,"message":"1280","line":127,"column":11,"nodeType":"1014","messageId":"1015","endLine":127,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1281","line":440,"column":22,"nodeType":"1014","messageId":"1015","endLine":440,"endColumn":26},{"ruleId":"1113","severity":1,"message":"1282","line":694,"column":34,"nodeType":"1115","messageId":"1116","endLine":694,"endColumn":35,"suggestions":"1283"},{"ruleId":"1113","severity":1,"message":"1114","line":699,"column":31,"nodeType":"1115","messageId":"1116","endLine":699,"endColumn":32,"suggestions":"1284"},{"ruleId":"1113","severity":1,"message":"1282","line":734,"column":34,"nodeType":"1115","messageId":"1116","endLine":734,"endColumn":35,"suggestions":"1285"},{"ruleId":"1113","severity":1,"message":"1114","line":739,"column":31,"nodeType":"1115","messageId":"1116","endLine":739,"endColumn":32,"suggestions":"1286"},{"ruleId":"1113","severity":1,"message":"1282","line":774,"column":34,"nodeType":"1115","messageId":"1116","endLine":774,"endColumn":35,"suggestions":"1287"},{"ruleId":"1113","severity":1,"message":"1114","line":779,"column":31,"nodeType":"1115","messageId":"1116","endLine":779,"endColumn":32,"suggestions":"1288"},{"ruleId":"1113","severity":1,"message":"1282","line":822,"column":34,"nodeType":"1115","messageId":"1116","endLine":822,"endColumn":35,"suggestions":"1289"},{"ruleId":"1113","severity":1,"message":"1114","line":827,"column":31,"nodeType":"1115","messageId":"1116","endLine":827,"endColumn":32,"suggestions":"1290"},{"ruleId":"1113","severity":1,"message":"1282","line":861,"column":34,"nodeType":"1115","messageId":"1116","endLine":861,"endColumn":35,"suggestions":"1291"},{"ruleId":"1113","severity":1,"message":"1114","line":866,"column":31,"nodeType":"1115","messageId":"1116","endLine":866,"endColumn":32,"suggestions":"1292"},{"ruleId":"1113","severity":1,"message":"1282","line":902,"column":34,"nodeType":"1115","messageId":"1116","endLine":902,"endColumn":35,"suggestions":"1293"},{"ruleId":"1113","severity":1,"message":"1114","line":907,"column":31,"nodeType":"1115","messageId":"1116","endLine":907,"endColumn":32,"suggestions":"1294"},{"ruleId":"1113","severity":1,"message":"1282","line":1448,"column":34,"nodeType":"1115","messageId":"1116","endLine":1448,"endColumn":35,"suggestions":"1295"},{"ruleId":"1113","severity":1,"message":"1114","line":1453,"column":31,"nodeType":"1115","messageId":"1116","endLine":1453,"endColumn":32,"suggestions":"1296"},{"ruleId":"1113","severity":1,"message":"1282","line":1469,"column":34,"nodeType":"1115","messageId":"1116","endLine":1469,"endColumn":35,"suggestions":"1297"},{"ruleId":"1113","severity":1,"message":"1114","line":1474,"column":31,"nodeType":"1115","messageId":"1116","endLine":1474,"endColumn":32,"suggestions":"1298"},{"ruleId":"1061","severity":1,"message":"1299","line":1692,"column":6,"nodeType":"1063","endLine":1692,"endColumn":23,"suggestions":"1300"},{"ruleId":"1061","severity":1,"message":"1301","line":1721,"column":6,"nodeType":"1063","endLine":1721,"endColumn":26,"suggestions":"1302"},{"ruleId":"1061","severity":1,"message":"1303","line":1727,"column":6,"nodeType":"1063","endLine":1727,"endColumn":18,"suggestions":"1304"},{"ruleId":"1012","severity":1,"message":"1158","line":1,"column":27,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":36},{"ruleId":"1012","severity":1,"message":"1013","line":8,"column":10,"nodeType":"1014","messageId":"1015","endLine":8,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1087","line":8,"column":20,"nodeType":"1014","messageId":"1015","endLine":8,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1305","line":18,"column":9,"nodeType":"1014","messageId":"1015","endLine":18,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1094","line":68,"column":21,"nodeType":"1014","messageId":"1015","endLine":68,"endColumn":27},{"ruleId":"1012","severity":1,"message":"1095","line":72,"column":21,"nodeType":"1014","messageId":"1015","endLine":72,"endColumn":28},{"ruleId":"1058","severity":1,"message":"1059","line":160,"column":17,"nodeType":"1057","endLine":176,"endColumn":18},{"ruleId":"1017","severity":1,"message":"1018","line":224,"column":29,"nodeType":"1019","messageId":"1020","endLine":243,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1158","line":2,"column":27,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":36},{"ruleId":"1012","severity":1,"message":"1013","line":7,"column":14,"nodeType":"1014","messageId":"1015","endLine":7,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1150","line":8,"column":8,"nodeType":"1014","messageId":"1015","endLine":8,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1076","line":9,"column":10,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":30},{"ruleId":"1012","severity":1,"message":"1013","line":20,"column":10,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1016","line":20,"column":16,"nodeType":"1014","messageId":"1015","endLine":20,"endColumn":18},{"ruleId":"1012","severity":1,"message":"1215","line":24,"column":7,"nodeType":"1014","messageId":"1015","endLine":24,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1220","line":321,"column":21,"nodeType":"1014","messageId":"1015","endLine":321,"endColumn":29},{"ruleId":"1012","severity":1,"message":"1306","line":321,"column":31,"nodeType":"1014","messageId":"1015","endLine":321,"endColumn":37},{"ruleId":"1058","severity":1,"message":"1059","line":481,"column":36,"nodeType":"1057","endLine":481,"endColumn":71},{"ruleId":"1012","severity":1,"message":"1013","line":10,"column":10,"nodeType":"1014","messageId":"1015","endLine":10,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1307","line":30,"column":9,"nodeType":"1014","messageId":"1015","endLine":30,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1124","line":2,"column":10,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1033","line":2,"column":17,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1308","line":2,"column":48,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":56},{"ruleId":"1012","severity":1,"message":"1309","line":2,"column":58,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":61},{"ruleId":"1012","severity":1,"message":"1310","line":2,"column":63,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":66},{"ruleId":"1012","severity":1,"message":"1146","line":2,"column":68,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":72},{"ruleId":"1012","severity":1,"message":"1150","line":3,"column":8,"nodeType":"1014","messageId":"1015","endLine":3,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1173","line":6,"column":32,"nodeType":"1014","messageId":"1015","endLine":6,"endColumn":47},{"ruleId":"1012","severity":1,"message":"1311","line":11,"column":8,"nodeType":"1014","messageId":"1015","endLine":11,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1312","line":12,"column":8,"nodeType":"1014","messageId":"1015","endLine":12,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1198","line":15,"column":8,"nodeType":"1014","messageId":"1015","endLine":15,"endColumn":11},{"ruleId":"1012","severity":1,"message":"1313","line":16,"column":8,"nodeType":"1014","messageId":"1015","endLine":16,"endColumn":14},{"ruleId":"1012","severity":1,"message":"1314","line":17,"column":8,"nodeType":"1014","messageId":"1015","endLine":17,"endColumn":12},{"ruleId":"1012","severity":1,"message":"1042","line":23,"column":9,"nodeType":"1014","messageId":"1015","endLine":23,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1077","line":24,"column":9,"nodeType":"1014","messageId":"1015","endLine":24,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1043","line":25,"column":7,"nodeType":"1014","messageId":"1015","endLine":25,"endColumn":13},{"ruleId":"1012","severity":1,"message":"1315","line":28,"column":5,"nodeType":"1014","messageId":"1015","endLine":28,"endColumn":12},{"ruleId":"1012","severity":1,"message":"1316","line":29,"column":5,"nodeType":"1014","messageId":"1015","endLine":29,"endColumn":17},{"ruleId":"1012","severity":1,"message":"1201","line":30,"column":5,"nodeType":"1014","messageId":"1015","endLine":30,"endColumn":8},{"ruleId":"1012","severity":1,"message":"1201","line":92,"column":61,"nodeType":"1014","messageId":"1015","endLine":92,"endColumn":64},{"ruleId":"1012","severity":1,"message":"1317","line":92,"column":66,"nodeType":"1014","messageId":"1015","endLine":92,"endColumn":75},{"ruleId":"1058","severity":1,"message":"1059","line":277,"column":15,"nodeType":"1057","endLine":283,"endColumn":16},{"ruleId":"1061","severity":1,"message":"1318","line":27,"column":8,"nodeType":"1063","endLine":27,"endColumn":10,"suggestions":"1319"},{"ruleId":"1012","severity":1,"message":"1140","line":9,"column":8,"nodeType":"1014","messageId":"1015","endLine":9,"endColumn":21},{"ruleId":"1012","severity":1,"message":"1315","line":14,"column":5,"nodeType":"1014","messageId":"1015","endLine":14,"endColumn":12},{"ruleId":"1061","severity":1,"message":"1320","line":53,"column":6,"nodeType":"1063","endLine":53,"endColumn":41,"suggestions":"1321"},{"ruleId":"1012","severity":1,"message":"1158","line":1,"column":17,"nodeType":"1014","messageId":"1015","endLine":1,"endColumn":26},{"ruleId":"1012","severity":1,"message":"1067","line":2,"column":10,"nodeType":"1014","messageId":"1015","endLine":2,"endColumn":15},{"ruleId":"1012","severity":1,"message":"1322","line":4,"column":8,"nodeType":"1014","messageId":"1015","endLine":4,"endColumn":23},{"ruleId":"1012","severity":1,"message":"1180","line":15,"column":8,"nodeType":"1014","messageId":"1015","endLine":15,"endColumn":9},{"ruleId":"1012","severity":1,"message":"1179","line":19,"column":9,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":16},{"ruleId":"1012","severity":1,"message":"1069","line":19,"column":18,"nodeType":"1014","messageId":"1015","endLine":19,"endColumn":24},{"ruleId":"1012","severity":1,"message":"1181","line":22,"column":9,"nodeType":"1014","messageId":"1015","endLine":22,"endColumn":27},{"ruleId":"1012","severity":1,"message":"1323","line":23,"column":19,"nodeType":"1014","messageId":"1015","endLine":23,"endColumn":29},{"ruleId":"1055","severity":1,"message":"1056","line":28,"column":11,"nodeType":"1057","endLine":28,"endColumn":36},"no-unused-vars","'mTop' is defined but never used.","Identifier","unusedVar","'pX' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-native-reassign",["1324"],"no-negated-in-lhs",["1325"],"'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SyncOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'SubMenu' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'bluData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'resize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.","ArrayExpression",["1326"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1327"],"'Image' is defined but never used.","'moment' is defined but never used.","'Header' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["1328"],["1324"],["1325"],"'BrowserRouter' is defined but never used.","'Praviders' is defined but never used.","'createFromIconfontCN' is defined but never used.","'Option' is assigned a value but never used.",["1324"],["1325"],"'Alert' is defined but never used.","'InfoCircleOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'Select' is defined but never used.","'MaxMin' is defined but never used.","'FetchEszVet' is defined but never used.","'gender' is defined but never used.","'MTop' is defined but never used.","'stopBubble' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","'Tooltip' is defined but never used.","'biggieSave' is assigned a value but never used.","'gender' is assigned a value but never used.","'lastConnectionTime' is assigned a value but never used.","no-dupe-keys","Duplicate key '194'.","ObjectExpression","unexpected","'weightUnits' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["1329","1330"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'petId' is assigned a value but never used.","'pas' is assigned a value but never used.","'temp15' is assigned a value but never used.","'Input' is defined but never used.","'message' is defined but never used.","'mellaLogo' is defined but never used.","'fetchRequest' is defined but never used.","'lastOrganization' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'Form' is defined but never used.","'Space' is defined but never used.","'fetchRequest2' is defined but never used.","'temporaryStorage' is defined but never used.","'SelectionBox' is defined but never used.","'selectDeviceName' is assigned a value but never used.","'isClicleStudy' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.","'Switch' is defined but never used.","'Slider' is defined but never used.","'electronStore' is defined but never used.","'parseGeoJSON' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'isUnKnow' is assigned a value but never used.","'Spin' is defined but never used.","'BackTop' is defined but never used.","'MyModal' is defined but never used.","'num07' is assigned a value but never used.","'Draggable' is defined but never used.","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'token' is assigned a value but never used.","'header' is assigned a value but never used.","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'blueSearch' is defined but never used.","'MouseDiv' is defined but never used.","'back_white' is defined but never used.","'back_hui' is defined but never used.","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1331"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["1332"],"'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["1333"],"'PropTypes' is defined but never used.","'LoadingOutlined' is defined but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["1334"],"'useState' is defined but never used.","'Menu' is defined but never used.","'PageHeader' is defined but never used.","'Content' is assigned a value but never used.","'_' is defined but never used.","'mellaConnectStatus' is assigned a value but never used.","'Tag' is defined but never used.","'memo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["1335"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["1336"],"'Progress' is defined but never used.","'px' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'mellaMeasurePart' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.",["1337"],"React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["1338"],["1339"],"'dui' is defined but never used.","'Table' is defined but never used.","'ConfigProvider' is defined but never used.","'url' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'breedName' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","'petSpecies' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'options' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","Duplicate key 'imgurl'.","'imgurl' is assigned a value but never used.","'disabled' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","Duplicate key 'disabled'.","'assignOwnerName' is assigned a value but never used.","'parent' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","Duplicate key 'connectionKey'.","'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1340"],"React Hook useEffect has missing dependencies: '_getExam' and 'petList'. Either include them or remove the dependency array. You can also do a functional update 'setPetList(p => ...)' if you only need 'petList' in the 'setPetList' call.",["1341"],"React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["1342"],"React Hook useEffect has a missing dependency: 'setBiggieConnectStatusFun'. Either include it or remove the dependency array. If 'setBiggieConnectStatusFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1343"],"React Hook useEffect has missing dependencies: 'hardwareList' and 'selectHardwareInfo'. Either include them or remove the dependency array.",["1344"],"'useRef' is defined but never used.","'Carousel' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["1345"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1346"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["1347"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["1348"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1349"],"React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["1350"],"React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["1351"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'chooseNum' is assigned a value but never used.","'fetchRequest1' is defined but never used.","'addQRCode' is defined but never used.","'isCode' is assigned a value but never used.","Duplicate key 'opacity'.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'mar' is assigned a value but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","Unnecessary escape character: \\..",["1352","1353"],["1354","1355"],["1356","1357"],["1358","1359"],["1360","1361"],["1362","1363"],["1364","1365"],["1366","1367"],["1368","1369"],["1370","1371"],["1372","1373"],["1374","1375"],["1376","1377"],["1378","1379"],["1380","1381"],["1382","1383"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["1384"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["1385"],"React Hook useEffect has a missing dependency: 'getOption'. Either include it or remove the dependency array.",["1386"],"'history' is assigned a value but never used.","'bounds' is assigned a value but never used.","'_resend' is assigned a value but never used.","'Calendar' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'horse' is defined but never used.","'rabbit' is defined but never used.","'female' is defined but never used.","'male' is defined but never used.","'storage' is assigned a value but never used.","'errPatientId' is assigned a value but never used.","'userImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["1387"],"React Hook useEffect has a missing dependency: 'hardwareInfo'. Either include it or remove the dependency array.",["1388"],"'PressButton_Pro' is defined but never used.","'setSaveNum' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1389","fix":"1390"},{"desc":"1391","fix":"1392"},{"desc":"1393","fix":"1394"},{"messageId":"1395","fix":"1396","desc":"1397"},{"messageId":"1398","fix":"1399","desc":"1400"},{"desc":"1401","fix":"1402"},{"desc":"1403","fix":"1404"},{"desc":"1405","fix":"1406"},{"desc":"1407","fix":"1408"},{"desc":"1409","fix":"1410"},{"desc":"1411","fix":"1412"},{"desc":"1409","fix":"1413"},{"desc":"1414","fix":"1415"},{"desc":"1411","fix":"1416"},{"desc":"1417","fix":"1418"},{"desc":"1419","fix":"1420"},{"desc":"1421","fix":"1422"},{"desc":"1423","fix":"1424"},{"desc":"1425","fix":"1426"},{"desc":"1427","fix":"1428"},{"desc":"1429","fix":"1430"},{"desc":"1431","fix":"1432"},{"desc":"1433","fix":"1434"},{"desc":"1435","fix":"1436"},{"desc":"1437","fix":"1438"},{"desc":"1439","fix":"1440"},{"messageId":"1395","fix":"1441","desc":"1397"},{"messageId":"1398","fix":"1442","desc":"1400"},{"messageId":"1395","fix":"1443","desc":"1397"},{"messageId":"1398","fix":"1444","desc":"1400"},{"messageId":"1395","fix":"1445","desc":"1397"},{"messageId":"1398","fix":"1446","desc":"1400"},{"messageId":"1395","fix":"1447","desc":"1397"},{"messageId":"1398","fix":"1448","desc":"1400"},{"messageId":"1395","fix":"1449","desc":"1397"},{"messageId":"1398","fix":"1450","desc":"1400"},{"messageId":"1395","fix":"1451","desc":"1397"},{"messageId":"1398","fix":"1452","desc":"1400"},{"messageId":"1395","fix":"1453","desc":"1397"},{"messageId":"1398","fix":"1454","desc":"1400"},{"messageId":"1395","fix":"1455","desc":"1397"},{"messageId":"1398","fix":"1456","desc":"1400"},{"messageId":"1395","fix":"1457","desc":"1397"},{"messageId":"1398","fix":"1458","desc":"1400"},{"messageId":"1395","fix":"1459","desc":"1397"},{"messageId":"1398","fix":"1460","desc":"1400"},{"messageId":"1395","fix":"1461","desc":"1397"},{"messageId":"1398","fix":"1462","desc":"1400"},{"messageId":"1395","fix":"1463","desc":"1397"},{"messageId":"1398","fix":"1464","desc":"1400"},{"messageId":"1395","fix":"1465","desc":"1397"},{"messageId":"1398","fix":"1466","desc":"1400"},{"messageId":"1395","fix":"1467","desc":"1397"},{"messageId":"1398","fix":"1468","desc":"1400"},{"messageId":"1395","fix":"1469","desc":"1397"},{"messageId":"1398","fix":"1470","desc":"1400"},{"messageId":"1395","fix":"1471","desc":"1397"},{"messageId":"1398","fix":"1472","desc":"1400"},{"desc":"1473","fix":"1474"},{"desc":"1475","fix":"1476"},{"desc":"1477","fix":"1478"},{"desc":"1479","fix":"1480"},{"desc":"1481","fix":"1482"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1483","text":"1484"},"Update the dependencies array to be: []",{"range":"1485","text":"1486"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1487","text":"1488"},"removeEscape",{"range":"1489","text":"1490"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1491","text":"1492"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1493","text":"1494"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1495","text":"1496"},"Update the dependencies array to be: [hardwareList]",{"range":"1497","text":"1498"},"Update the dependencies array to be: [_getExam]",{"range":"1499","text":"1500"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1501","text":"1502"},"Update the dependencies array to be: [storage.userId]",{"range":"1503","text":"1504"},{"range":"1505","text":"1502"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1506","text":"1507"},{"range":"1508","text":"1504"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"1509","text":"1510"},"Update the dependencies array to be: [_getExam, petList]",{"range":"1511","text":"1512"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"1513","text":"1514"},"Update the dependencies array to be: [petDetailInfo, setBiggieConnectStatusFun]",{"range":"1515","text":"1516"},"Update the dependencies array to be: [hardwareList, selectHardwareInfo, selectHardwareType]",{"range":"1517","text":"1518"},"Update the dependencies array to be: [finishScan, inputIndex, newData, patientId]",{"range":"1519","text":"1520"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1521","text":"1522"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1523","text":"1524"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"1525","text":"1526"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"1527","text":"1528"},"Update the dependencies array to be: [listDate]",{"range":"1529","text":"1530"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1531","text":"1532"},{"range":"1533","text":"1490"},{"range":"1534","text":"1492"},{"range":"1535","text":"1490"},{"range":"1536","text":"1492"},{"range":"1537","text":"1490"},{"range":"1538","text":"1492"},{"range":"1539","text":"1490"},{"range":"1540","text":"1492"},{"range":"1541","text":"1490"},{"range":"1542","text":"1492"},{"range":"1543","text":"1490"},{"range":"1544","text":"1492"},{"range":"1545","text":"1490"},{"range":"1546","text":"1492"},{"range":"1547","text":"1490"},{"range":"1548","text":"1492"},{"range":"1549","text":"1490"},{"range":"1550","text":"1492"},{"range":"1551","text":"1490"},{"range":"1552","text":"1492"},{"range":"1553","text":"1490"},{"range":"1554","text":"1492"},{"range":"1555","text":"1490"},{"range":"1556","text":"1492"},{"range":"1557","text":"1490"},{"range":"1558","text":"1492"},{"range":"1559","text":"1490"},{"range":"1560","text":"1492"},{"range":"1561","text":"1490"},{"range":"1562","text":"1492"},{"range":"1563","text":"1490"},{"range":"1564","text":"1492"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"1565","text":"1566"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"1567","text":"1568"},"Update the dependencies array to be: [echarsData, getOption]",{"range":"1569","text":"1570"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"1571","text":"1572"},"Update the dependencies array to be: [selectHardwareType, hardwareList, hardwareInfo]",{"range":"1573","text":"1574"},[43924,43926],"[_noUSB, _send, blueSearch]",[44265,44291],"[]",[2354,2369],"[callBack, carouselIndex]",[75103,75104],"",[75103,75103],"\\",[2680,2682],"[setReceiveBroadcastHardwareInfoFun]",[3991,4021],"[devicesList, receiveBroadcastHardwareInfo]",[3289,3291],"[hardwareList]",[1031,1033],"[_getExam]",[8309,8321],"[getPetTemperatureData, petMessage]",[8517,8519],"[storage.userId]",[9440,9452],[9608,9617],"[getPetTemperatureData, reRender, saveNum]",[9813,9815],[4564,4581],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[1460,1462],"[_getExam, petList]",[2917,2933],"[hardwareReduce, weight]",[3130,3145],"[petDetailInfo, setBiggieConnectStatusFun]",[7225,7245],"[hardwareList, selectHardwareInfo, selectHardwareType]",[6560,6583],"[finishScan, inputIndex, newData, patientId]",[7054,7073],"[inputIndex, rulerConfirmCount]",[7708,7715],"[petId, petLengthDataConvert, petMessage]",[8357,8395],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[8829,8840],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]",[21161,21162],[21161,21161],[21367,21368],[21367,21367],[22472,22473],[22472,22472],[22678,22679],[22678,22678],[23781,23782],[23781,23781],[23987,23988],[23987,23987],[25424,25425],[25424,25424],[25630,25631],[25630,25630],[26694,26695],[26694,26694],[26900,26901],[26900,26900],[28058,28059],[28058,28058],[28264,28265],[28264,28264],[44144,44145],[44144,44144],[44350,44351],[44350,44350],[44896,44897],[44896,44896],[45102,45103],[45102,45102],[51458,51475],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[52174,52194],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[52357,52369],"[echarsData, getOption]",[885,887],"[initSelectVale, listArr]",[2013,2048],"[selectHardwareType, hardwareList, hardwareInfo]"]