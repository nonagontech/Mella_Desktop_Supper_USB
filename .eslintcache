[{"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx":"1","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx":"2","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx":"3","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\electronStore.js":"4","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\AddDevice.jsx":"5","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\slider\\Slider.js":"6","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx":"7","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\Fetch_token.js":"8","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\index.js":"9","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx":"10","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\combineScales\\index.jsx":"11","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"12","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx":"13","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\workPlace\\WorkPlace.jsx":"14","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"15","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\settings\\Settings.jsx":"16","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil2.js":"17","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\px.js":"18","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\PetsUI.jsx":"19","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"20","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\App.js":"21","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectMella\\SelectMella.jsx":"22","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\avatar\\Avatar.jsx":"23","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"24","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil5.js":"25","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\signIn\\SignIn.jsx":"26","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\myModal\\MyModal.jsx":"27","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\InitDate.js":"28","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actionTypes\\userType.js":"29","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\axios\\http.js":"30","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\home\\Home.jsx":"31","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx":"32","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\advancedSettings\\AdvancedSettings.jsx":"33","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx":"34","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\allPetsPage\\index.jsx":"35","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"36","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\help\\Help.jsx":"37","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\gender.js":"38","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx":"39","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\index.jsx":"40","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\addScheduledPet\\index.jsx":"41","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchEszVet.js":"42","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"43"},{"size":7357,"mtime":1653893163118,"results":"44","hashOfConfig":"45"},{"size":17372,"mtime":1653893163087,"results":"46","hashOfConfig":"45"},{"size":12616,"mtime":1653893163165,"results":"47","hashOfConfig":"45"},{"size":343,"mtime":1653893163605,"results":"48","hashOfConfig":"45"},{"size":14344,"mtime":1656481876821,"results":"49","hashOfConfig":"45"},{"size":4449,"mtime":1653893163636,"results":"50","hashOfConfig":"45"},{"size":3373,"mtime":1657534076478,"results":"51","hashOfConfig":"45"},{"size":3717,"mtime":1653893163227,"results":"52","hashOfConfig":"45"},{"size":573,"mtime":1654138261979,"results":"53","hashOfConfig":"45"},{"size":16452,"mtime":1653893163087,"results":"54","hashOfConfig":"45"},{"size":8221,"mtime":1656481876864,"results":"55","hashOfConfig":"45"},{"size":8196,"mtime":1653893163636,"results":"56","hashOfConfig":"45"},{"size":1186,"mtime":1657534380980,"results":"57","hashOfConfig":"45"},{"size":9743,"mtime":1653893163212,"results":"58","hashOfConfig":"45"},{"size":5178,"mtime":1653893163118,"results":"59","hashOfConfig":"45"},{"size":25934,"mtime":1656497834023,"results":"60","hashOfConfig":"45"},{"size":2667,"mtime":1653893163227,"results":"61","hashOfConfig":"45"},{"size":2975,"mtime":1657534076479,"results":"62","hashOfConfig":"45"},{"size":7856,"mtime":1657534076424,"results":"63","hashOfConfig":"45"},{"size":14822,"mtime":1657534076458,"results":"64","hashOfConfig":"45"},{"size":7424,"mtime":1655469051969,"results":"65","hashOfConfig":"45"},{"size":3973,"mtime":1653893163196,"results":"66","hashOfConfig":"45"},{"size":2998,"mtime":1653893163056,"results":"67","hashOfConfig":"45"},{"size":10862,"mtime":1657534076458,"results":"68","hashOfConfig":"45"},{"size":3658,"mtime":1653893163227,"results":"69","hashOfConfig":"45"},{"size":17921,"mtime":1657534076437,"results":"70","hashOfConfig":"45"},{"size":1410,"mtime":1653893163621,"results":"71","hashOfConfig":"45"},{"size":71,"mtime":1655195535541,"results":"72","hashOfConfig":"45"},{"size":58,"mtime":1655469052110,"results":"73","hashOfConfig":"45"},{"size":846,"mtime":1653893163590,"results":"74","hashOfConfig":"45"},{"size":6248,"mtime":1657604053908,"results":"75","hashOfConfig":"45"},{"size":1678,"mtime":1653893163071,"results":"76","hashOfConfig":"45"},{"size":9452,"mtime":1656481876835,"results":"77","hashOfConfig":"45"},{"size":15939,"mtime":1653893163149,"results":"78","hashOfConfig":"45"},{"size":7652,"mtime":1655469052061,"results":"79","hashOfConfig":"45"},{"size":12021,"mtime":1657534076473,"results":"80","hashOfConfig":"45"},{"size":4924,"mtime":1653893163149,"results":"81","hashOfConfig":"45"},{"size":152,"mtime":1653893163605,"results":"82","hashOfConfig":"45"},{"size":6453,"mtime":1653893163071,"results":"83","hashOfConfig":"45"},{"size":34000,"mtime":1657534076429,"results":"84","hashOfConfig":"45"},{"size":13008,"mtime":1655469052057,"results":"85","hashOfConfig":"45"},{"size":3579,"mtime":1653893163227,"results":"86","hashOfConfig":"45"},{"size":54973,"mtime":1657534076442,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"1xy2jmh",{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"99"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"133"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"149"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"115"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"105"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"99"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"99"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"99"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx",["203","204"],"import React, { Component, } from 'react'\r\nimport {\r\n    Button,\r\n    Input,\r\n    Form,\r\n    Select\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './esyVetLogin.less'\r\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\nexport default class EzyNetLogin extends Component {\r\n\r\n    state = {\r\n        isRemember: false,\r\n        client_id: '',\r\n        client_secret: '',\r\n        partner_id: ''\r\n    }\r\n\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('middle')\r\n        storage.ezyVetToken = ''\r\n    }\r\n    componentWillMount () {\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin1 !== '', storage.ezyVetToken1 !== undefined, `${storage.ezyVetToken1}` !== 'undefined');\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin !== '', storage.ezyVetToken !== undefined, `${storage.ezyVetToken}` !== 'undefined');\r\n        if (storage.ezyVetLogin !== '' && storage.ezyVetToken !== undefined && `${storage.ezyVetToken}` !== 'undefined') {\r\n            try {\r\n                let data = JSON.parse(storage.ezyVetLogin)\r\n                console.log('--', data);\r\n                this.setState({\r\n                    isRemember: data.isRemember,\r\n                    client_id: data.client_id,\r\n                    client_secret: data.client_secret,\r\n                    partner_id: data.partner_id\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 10 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 14 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 10,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 8,\r\n                    offset: 7,\r\n                },\r\n            },\r\n        };\r\n\r\n        const _next = (values) => {\r\n            console.log('Received values of form: ', values);\r\n            let parames = {\r\n                clientId: values.client_id,\r\n                clientSecret: values.client_secret,\r\n                partnerId: values.partner_id,\r\n            }\r\n            console.log(parames);\r\n            fetchRequest2('/EzyVet/ezyvetauth', 'GET', parames, '')\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res && res.msg === 'success') {\r\n\r\n                        storage.ezyVetToken = res.data\r\n                        if (this.state.isRemember) {\r\n                            storage.ezyVetLogin = JSON.stringify({\r\n                                client_id: values.client_id,\r\n                                client_secret: values.client_secret,\r\n                                partner_id: values.partner_id,\r\n                                isRemember: this.state.isRemember\r\n                            })\r\n                        } else {\r\n                            storage.ezyVetLogin = ''\r\n                        }\r\n                        storage.selectTime = ''\r\n                        storage.ezyVetReLogin = JSON.stringify({  //如果令牌过期了，需要重新输入信息重新获取令牌\r\n                            client_id: values.client_id,\r\n                            client_secret: values.client_secret,\r\n                            partner_id: values.partner_id,\r\n                        })\r\n\r\n                        this.props.history.push('EzyVetSelectTime')\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n\r\n        }\r\n        let { client_id, client_secret, partner_id } = this.state\r\n\r\n        return (\r\n            <div id=\"eszVetLogin\">\r\n                {/* 关闭缩小 */}\r\n                <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                    onClick1={() => this.props.history.push('/page1')}\r\n                />\r\n                <div className=\"text\">\r\n                    Please enter your user information\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form\r\n                        {...formItemLayout}\r\n                        name=\"register\"\r\n                        onFinish={_next}\r\n                        initialValues={{\r\n                            client_id, client_secret, partner_id\r\n                        }}\r\n\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"client_id\"\r\n                            label=\"Client ID\"\r\n                            rules={[{ required: true, message: 'Please input your Client ID!', whitespace: true }]}\r\n\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"client_secret\"\r\n                            label=\"Client Secret\"\r\n                            rules={[{ required: true, message: 'Please input your Client Secret!', whitespace: true }]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"partner_id\"\r\n                            label=\"Partner ID\"\r\n                            rules={[{ required: true, message: 'Please input your Partner ID!', whitespace: true }]}\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            {...tailFormItemLayout}\r\n                        >\r\n                            <div className=\"btn\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    htmlType=\"submit\"\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"remember\">\r\n                    <p>Stay Signed In:</p>\r\n                    <div className=\"box\" onClick={() => {\r\n                        let { isRemember } = this.state\r\n                        this.setState({\r\n                            isRemember: !isRemember\r\n                        })\r\n                        storage.isRemember = !isRemember\r\n                    }}>\r\n                        {this.state.isRemember && <img src={dui} alt=\"\" />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",["205","206"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx",["207","208","209","210","211","212","213","214"],"import React, { Component, } from 'react'\r\nimport {\r\n  Button,\r\n\r\n  Modal,\r\n  message\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport { createFromIconfontCN, CaretDownFilled } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport './vetProfile.less'\r\nimport imgArray from './../../../utils/areaCode/imgArray'\r\nimport MaxMin from './../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest2 } from './../../../utils/FetchUtil2'\r\nimport { fetchRequest } from './../../../utils/FetchUtil1'\r\nimport countryList from './../../../utils/areaCode/country';\r\nimport moment from 'moment';\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport { mTop, pX, px } from '../../../utils/px';\r\nimport MyModal from './../../../utils/myModal/MyModal'\r\nimport { fetchRequest3 } from './../../../utils/FetchUtil3';\r\n\r\nconst options = [\r\n  { label: 'Dogs', value: 'Dogs' },\r\n  { label: 'Cats', value: 'Cats' },\r\n  { label: 'Small Pets', value: 'Small Pets' },\r\n  { label: 'Nutrition', value: 'Nutrition' },\r\n  { label: 'Surgery', value: 'Surgery' },\r\n  { label: 'Zoo', value: 'Zoo' },\r\n  { label: 'Wildlife', value: 'Wildlife' },\r\n  { label: 'Cardiology', value: 'Cardiology' },\r\n  { label: 'Neurology', value: 'Neurology' },\r\n  { label: 'Anaesthesia', value: 'Anaesthesia' },\r\n  { label: 'Other', value: 'Other' },\r\n]\r\nexport default class VetPrifile extends Component {\r\n\r\n  state = {\r\n    code: 1,\r\n    imgArrayIndex: 0,\r\n    otherText: '',\r\n    name: '',\r\n    lastName: '',\r\n    email: '',\r\n    phone: '',\r\n    birthday: moment(),\r\n    password: '',\r\n    password1: '',\r\n    checboxtValue: [],\r\n    expertise: '00000000000',       //专业领域，勾选某一项，则这一项为1，反之为0    01011111101\r\n\r\n    visible: false,       //nodel框是否显示\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n    loadVisible: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    //发送指令让main.js创建一个big窗口\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n\r\n    //检测是否本地是否有注册信息，有就展示出来。\r\n    console.log(temporaryStorage.logupVetInfo);\r\n    if (temporaryStorage.logupVetInfo && temporaryStorage.logupVetInfo.email) {\r\n      console.log('进来了');\r\n      let { firstName, lastName, email, hash, code, initPhone, imgArrayIndex } = temporaryStorage.logupVetInfo\r\n      this.setState({\r\n        name: firstName || '',\r\n        lastName,\r\n        email,\r\n        password: hash,\r\n        password1: hash,\r\n        code,\r\n        phone: initPhone || '',\r\n        imgArrayIndex\r\n      })\r\n\r\n\r\n    }\r\n\r\n\r\n    //如果是从别的界面跳转过来并且带来了邮箱号，要直接展示在输入框里。eg：忘记密码输入的邮箱号未注册，跳转到注册界面\r\n    if (this.props.location && this.props.location.email) {\r\n      this.setState({\r\n        email: this.props.location.email\r\n      })\r\n    }\r\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n\r\n  _next1 = () => {\r\n    let { name, lastName, email, code, phone, password1, password, } = this.state\r\n    message.destroy()\r\n    console.log({ name, email, code, phone, password1, password, });\r\n    email = email.toLocaleLowerCase()\r\n    if (name.length <= 0) {\r\n      message.error('Please enter your first name', 3)\r\n      return\r\n    }\r\n    if (lastName.length <= 0) {\r\n      message.error('Please enter your last name', 3)\r\n      return\r\n    }\r\n    if (!email) {\r\n      message.error('Please enter the mailbox number', 3)\r\n      return\r\n    } else {\r\n      if (email.indexOf('@') === -1 || email.indexOf('@') === 0 || email.indexOf('@') === email.length - 1) {\r\n        message.error('E-mail format is incorrect', 3)\r\n        return\r\n      }\r\n    }\r\n    // if (!phone) {\r\n    //   message.error('Please enter the phone number', 3)\r\n    //   return\r\n    // }\r\n    if (password.length <= 0 || password1.length <= 0) {\r\n      message.error('Please enter the password', 3)\r\n      return\r\n    }\r\n\r\n    if (password !== password1) {\r\n      message.error('The password entered twice is incorrect, please re-enter', 3)\r\n      return\r\n    }\r\n    this.setState({\r\n      loadVisible: true\r\n    })\r\n    fetchRequest(`/user/checkUser/${email}`, 'GET', '')\r\n      .then(res => {\r\n        console.log(res);\r\n        if (!res.flag) {\r\n          console.log('邮箱号以被注册，是否忘记密码');\r\n          this.setState({\r\n            loadVisible: false,\r\n            visible: true\r\n          })\r\n        }\r\n        else {\r\n          console.log('邮箱号可以使用');\r\n          if (res.code === 11011 || res.code === 11012) {\r\n            this.setState({\r\n              loadVisible: false,\r\n              visible: true\r\n            })\r\n            return\r\n          }\r\n\r\n          let params = {\r\n            firstName: name,\r\n            lastName,\r\n            email,\r\n            // phone: `+${code}${phone}`,\r\n            hash: password,\r\n          }\r\n          if (phone) {\r\n            params.phone = `+${code}${phone}`\r\n          }\r\n          console.log('注册接口的入参：', params);\r\n          fetchRequest2('/user/deskRegistAWSSNS', \"POST\", params)\r\n            .then(res => {\r\n              this.setState({\r\n                loadVisible: false\r\n              })\r\n              console.log('注册接口返回数据：', res);\r\n              if (res.flag) {\r\n                console.log('注册成功了，去验证验证码');\r\n                temporaryStorage.logupEmailCode = res.data\r\n                params.code = code\r\n                params.initPhone = phone\r\n                params.imgArrayIndex = this.state.imgArrayIndex\r\n                temporaryStorage.logupVetInfo = params\r\n                this.props.history.push('/uesr/logUp/VerifyEmail')\r\n              } else {\r\n                message.error('registration failed', 3)\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.setState({\r\n                loadVisible: false\r\n              })\r\n              message.error(`Error:${err.message}`)\r\n              console.log('注册接口抛出错误：', err);\r\n            })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loadVisible: false\r\n        })\r\n        message.error(`Error:${err.message}`)\r\n        console.log('检测邮箱号的接口出错了', err);\r\n      })\r\n  }\r\n  _next = () => {\r\n    let { name, lastName, email, code, phone, password1, password, } = this.state\r\n    message.destroy()\r\n    console.log({ name, email, code, phone, password1, password, });\r\n    email = email.toLocaleLowerCase()\r\n    if (name.length <= 0) {\r\n      message.error('Please enter your first name', 3)\r\n      return\r\n    }\r\n    if (lastName.length <= 0) {\r\n      message.error('Please enter your last name', 3)\r\n      return\r\n    }\r\n    if (!email) {\r\n      message.error('Please enter the mailbox number', 3)\r\n      return\r\n    } else {\r\n      if (email.indexOf('@') === -1 || email.indexOf('@') === 0 || email.indexOf('@') === email.length - 1) {\r\n        message.error('E-mail format is incorrect', 3)\r\n        return\r\n      }\r\n    }\r\n    // if (!phone) {\r\n    //   message.error('Please enter the phone number', 3)\r\n    //   return\r\n    // }\r\n    if (password.length <= 0 || password1.length <= 0) {\r\n      message.error('Please enter the password', 3)\r\n      return\r\n    }\r\n\r\n    if (password !== password1) {\r\n      message.error('The password entered twice is incorrect, please re-enter', 3)\r\n      return\r\n    }\r\n    this.setState({\r\n      loadVisible: true\r\n    })\r\n\r\n\r\n    let params = {\r\n      firstName: name,\r\n      lastName,\r\n      email,\r\n      hash: password,\r\n    }\r\n    if (phone) {\r\n      params.phone = `+${code}${phone}`\r\n    }\r\n    console.log('注册接口的入参：', params);\r\n    fetchRequest3('/user/registByAWSSES', \"POST\", params)\r\n      .then(res => {\r\n        this.setState({\r\n          loadVisible: false\r\n        })\r\n        console.log('注册接口返回数据：', res);\r\n        switch (res.code) {\r\n          case 11011:\r\n            console.log('用户已存在，应该跳出弹框')\r\n            this.setState({\r\n              visible: true\r\n            })\r\n\r\n            break;\r\n\r\n          case 20000:\r\n            console.log('可以注册，跳转到下一页');\r\n            temporaryStorage.logupEmailCode = res.data\r\n            params.code = code\r\n            params.initPhone = phone\r\n            params.imgArrayIndex = this.state.imgArrayIndex\r\n            temporaryStorage.logupVetInfo = params\r\n            this.props.history.push('/uesr/logUp/VerifyEmail')\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        // if (res.flag) {\r\n        //   console.log('注册成功了，去验证验证码');\r\n        //   temporaryStorage.logupEmailCode = res.data\r\n        //   params.code = code\r\n        //   params.initPhone = phone\r\n        //   params.imgArrayIndex = this.state.imgArrayIndex\r\n        //   temporaryStorage.logupVetInfo = params\r\n        //   this.props.history.push('/uesr/logUp/VerifyEmail')\r\n        // } else {\r\n        //   message.error('registration failed', 3)\r\n        // }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loadVisible: false\r\n        })\r\n        message.error(`Error:${err.message}`)\r\n        console.log('注册接口抛出错误：', err);\r\n      })\r\n\r\n  }\r\n  _signIn = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push('/page11')\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n\r\n    let { lastName, disabled, bounds, name, email, phone, password, password1, visible } = this.state\r\n    return (\r\n      <div id=\"vetPrifile\" >\r\n        {/* 关闭缩小 */}\r\n        <div className=\"heard\">\r\n          <MaxMin\r\n            onClick={() => { this.props.history.push('/') }}\r\n            onClick1={() => this.props.history.push('/')}\r\n          />\r\n        </div>\r\n        <div className=\"body\">\r\n          <div className=\"text\"\r\n            style={{ fontSize: px(30), marginBottom: px(120) }}\r\n          >\r\n            Let’s start by creating your account\r\n          </div>\r\n          <div className=\"form\" >\r\n            <div className=\"item\" style={{ marginBottom: px(40) }}>\r\n              <div className=\"l\" style={{ margin: `0 ${px(8)}px` }}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={name}\r\n                  placeholder=\"First Name\"\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n\r\n                    this.setState({\r\n                      name: data\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n              <div className=\"l\" style={{ margin: `0 ${px(8)}px` }}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={lastName}\r\n                  placeholder=\"Last Name\"\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n\r\n                    this.setState({\r\n                      lastName: data\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"item\" style={{ marginBottom: px(40) }}>\r\n              <div className=\"l\" style={{ margin: `0 ${px(8)}px` }}>\r\n                <input\r\n                  type=\"Email\"\r\n                  value={email}\r\n                  placeholder=\"Email Address*\"\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      email: data\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"l\" style={{ margin: `0 ${px(8)}px` }}>\r\n                <ul id=\"list\" style={{ top: -px(80), left: px(10) }}>\r\n                  {countryList.map((item, index) => {\r\n                    let url = imgArray[item.locale.toLowerCase()] ? imgArray[item.locale.toLowerCase()].default : ''\r\n                    return (\r\n                      <li key={index}>\r\n                        <div key={index}\r\n                          style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\r\n                          onClick={() => {\r\n                            console.log(item, index);\r\n                            this.setState({\r\n                              code: item.code,\r\n                              imgArrayIndex: index\r\n                            })\r\n                            document.getElementById('list').style.display = \"none\"\r\n                          }}\r\n                        >\r\n                          <img src={url} alt=\"\" />\r\n                          <p >{`${item.en}   +${item.code}`}</p>\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n\r\n\r\n                <div className='phone'>\r\n                  <div\r\n                    style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', position: 'absolute', left: '10px' }}\r\n                    onClick={() => {\r\n                      document.getElementById('list').style.display = \"block\"\r\n                    }}\r\n                  >\r\n                    <img style={{ zIndex: '888' }}\r\n                      src={imgArray[countryList[this.state.imgArrayIndex].locale.toLowerCase()].default} alt=\"\"\r\n                    />\r\n                    <CaretDownFilled style={{ marginRight: '10px' }} />\r\n                  </div>\r\n\r\n\r\n                  <input\r\n                    type=\"Phone\"\r\n                    value={phone}\r\n                    placeholder=\"Phone Number\"\r\n                    onChange={(value) => {\r\n                      let data = value.target.value\r\n                      this.setState({\r\n                        phone: data.replace(/[^\\-?\\d]/g, '')\r\n                      })\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"item\" style={{ marginBottom: px(40) }}>\r\n              <div className=\"l\" style={{ margin: `0 ${px(8)}px` }}>\r\n                <input\r\n                  type=\"Password\"\r\n                  value={password}\r\n                  placeholder=\"Create Password\"\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      password: data\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"l\" style={{ margin: `0 ${px(8)}px` }}>\r\n                <input\r\n                  type=\"Password\"\r\n                  value={password1}\r\n                  placeholder=\"Confirm  Password\"\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      password1: data\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div className=\"foot\">\r\n          <div className=\"footText\"\r\n          >Already have an accoun? <a href=\"#\" onClick={this._signIn}> Sign In</a></div>\r\n\r\n          {/* 按钮 */}\r\n          <div className=\"btn\" style={{ padding: `${px(40)}px 0` }}>\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size='large'\r\n              htmlType=\"submit\"\r\n              onClick={this._next}\r\n            >\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <MyModal\r\n\r\n          visible={this.state.loadVisible}\r\n        />\r\n\r\n        <Modal\r\n\r\n          visible={visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          closable={false}\r\n          footer={[\r\n\r\n          ]}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"vetPrifileModal\"\r\n        >\r\n          <div id='vetPrifileModal'>\r\n            <div className=\"title\">Email Already Exists</div>\r\n\r\n            <div className='text'>Please sign up with your Mella<br />account and create a new<br />workspace from the<br />Settings menu.</div>\r\n\r\n            <div className=\"btn\">\r\n\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    visible: false,\r\n                    email: ''\r\n                  })\r\n                }}\r\n              >Try Again</button>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    visible: false\r\n                  })\r\n                  this.props.history.replace('/page11')\r\n                }}\r\n              >Sign Up</button>\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </Modal>\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\n",["215","216"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx",["217","218","219","220","221","222","223","224","225","226","227","228"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Switch,\r\n  Select,\r\n} from 'antd'\r\n\r\n\r\n\r\n\r\nimport Heart from '../../../utils/heard/Heard'\r\nimport Slider from '../../../utils/slider/Slider'\r\nimport Button from '../../../utils/button/Button'\r\nimport electronStore from '../../../utils/electronStore'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport { mTop, px } from '../../../utils/px';\r\nimport MyModal from '../../../utils/myModal/MyModal'\r\nimport parent from './../../../assets/img/parent.png'\r\nimport dog from '../../../assets/images/reddog.png'\r\nimport cat from '../../../assets/images/redcat.png'\r\nimport other from '../../../assets/images/redother.png'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport moment from 'moment'\r\nimport './petAndParents.less'\r\nimport { parseGeoJSON } from 'echarts'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class PetAndParents extends Component {\r\n\r\n  state = {\r\n    parentList: [],       //宠物主人列表\r\n    petList: [],          //宠物列表\r\n    loading: false,       //加载中\r\n    parentSearchArr: [],  //搜索后的宠物主人列表\r\n    petSearchArr: [],     //搜索后的宠物列表\r\n    searchText: '',        //搜索文本\r\n    parentAndPetList: [],  //宠物主人下的所有宠物,\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    this._getExam()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true,\r\n      spin: false\r\n    })\r\n    let params = {\r\n      offset: 0,\r\n      size: 500,\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n\r\n    fetchRequest(`/petall/pet/${storage.lastOrganization}/petall`, 'POST', params)\r\n      .then(res => {\r\n        console.log('查询到的宠物列表', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true) {\r\n          let data = []\r\n          let list = res.data.list\r\n          let owerList = []\r\n          let parentAndPetList = []\r\n          for (let i = 0; i < list.length; i++) {\r\n            let { url, patientId, speciesId, petName, petId, rfid, createTime, userId, firstName, lastName, phone, email, userImageUrl, birthday, breedName, gender } = list[i]\r\n            petName = petName ? petName : (patientId ? patientId : 'unknown')\r\n            let json = {\r\n              insertedAt: createTime,\r\n              name: petName,\r\n              petId,\r\n              rfid,\r\n              url,\r\n              speciesId,\r\n              type: 'pet',\r\n              patientId,\r\n              petBirthday: birthday,\r\n              breedName,\r\n              gender\r\n            }\r\n            data.push(json)\r\n            if (userId) {\r\n              let flogNum = -1\r\n\r\n              for (let i = 0; i < owerList.length; i++) {\r\n                let ower = owerList[i]\r\n                if (ower.userId === userId) {\r\n                  flogNum = i\r\n                  break;\r\n                }\r\n\r\n              }\r\n              if (flogNum === -1) {     //这是一个不在数组里的宠物主人\r\n                let owerJson = {\r\n                  userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\r\n                }\r\n                owerList.push(owerJson)\r\n                let parentAndPetJson = {\r\n                  parent: owerJson,\r\n                  pets: [json]\r\n                }\r\n                // console.log('-----', parentAndPetJson);\r\n                parentAndPetList.push(parentAndPetJson)\r\n              } else {\r\n                parentAndPetList[flogNum].pets.push(json)\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            // if (userId) {\r\n            //   let sameFlog = owerList.some((ower => {\r\n            //     return ower.userId === userId\r\n            //   }))\r\n            //   if (!sameFlog) {\r\n            //     let owerJson = {\r\n            //       userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\r\n            //     }\r\n            //     owerList.push(owerJson)\r\n            //   }\r\n            // }\r\n          }\r\n          // console.log(parentAndPetList);\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            petList: data,\r\n            parentList: owerList,\r\n            parentAndPetList\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  list = (value) => {\r\n    let { petList, parentList, petSearchArr, parentSearchArr, searchText, parentAndPetList } = this.state\r\n    let data = []\r\n    if (value === 'parent') {\r\n      if (searchText.length > 0) {\r\n        data = parentSearchArr\r\n      } else {\r\n        data = parentList\r\n      }\r\n    } else {\r\n      if (searchText.length > 0) {\r\n        data = petSearchArr\r\n      } else {\r\n        data = petList\r\n      }\r\n    }\r\n\r\n    let options = data.map((item, index) => {\r\n      let { speciesId, url, userImageUrl, patientId, petId, name } = item\r\n      let images = null\r\n      if (value === 'parent') {\r\n        images = `url(${userImageUrl}?download=0&width=150)`\r\n        if (!userImageUrl) {\r\n          images = `url(${parent})`\r\n        }\r\n      } else {\r\n        images = `url(${url}?download=0&width=150)`\r\n        if (!url) {\r\n          switch (speciesId) {\r\n            case 1: images = `url(${cat})`\r\n              break;\r\n            case 2: images = `url(${dog})`\r\n              break\r\n            default: images = `url(${other})`\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20) }}\r\n          onClick={() => {\r\n            if (item.type !== 'pet') {\r\n              // console.log('跳转到宠物用户详情页', item,);\r\n              let params = []\r\n              for (let i = 0; i < parentAndPetList.length; i++) {\r\n                if (item.userId === parentAndPetList[i].parent.userId) {\r\n\r\n                  params = parentAndPetList[i]\r\n                  break\r\n                }\r\n\r\n              }\r\n\r\n\r\n              this.props.history.push({ pathname: '/menuOptions/editParent', parent: params })\r\n            } else {\r\n              console.log(item);\r\n              this.props.history.push({ pathname: '/page9', participate: { patientId, petName: name, petId } })\r\n\r\n            }\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div\r\n              className='img'\r\n              style={{\r\n                width: px(50),\r\n                height: px(50),\r\n                marginRight: px(20),\r\n                borderRadius: px(60),\r\n                backgroundImage: images,\r\n              }}>\r\n            </div>\r\n\r\n            <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{name}</p>\r\n            </div>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    let liStyle = { backgroundColor: '#fff', }\r\n    if (this.state.petList.length > 6) {\r\n      liStyle = { height: px(560), overflowY: 'auto' }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='petList'>\r\n        <ul style={liStyle}>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  inputChange = (text) => {\r\n    let search = text.target.value\r\n    this.setState({\r\n      searchText: search\r\n    })\r\n\r\n    let { parentList, petList } = this.state\r\n    console.log(parentList, petList);\r\n    let keyWord = search\r\n\r\n    let parentSearchData = []\r\n    for (let i = 0; i < parentList.length; i++) {\r\n      let petName = parentList[i].name.toLowerCase() || ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        parentSearchData.push(parentList[i])\r\n      }\r\n    }\r\n\r\n    let petSearchData = []\r\n    for (let i = 0; i < petList.length; i++) {\r\n      let petName = petList[i].name ? petList[i].name.toLowerCase() : ''\r\n      let patientId = petList[i].patientId ? petList[i].patientId.toLowerCase() : ''\r\n      let rfid = petList[i].rfid ? petList[i].rfid : ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${rfid}`.indexOf(keyWord) !== -1\r\n      ) {\r\n        petSearchData.push(petList[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      petSearchArr: petSearchData,\r\n      parentSearchArr: parentSearchData\r\n    })\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    let bodyHeight = '92%'\r\n    try {\r\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\r\n    } catch (error) {\r\n\r\n    }\r\n    return (\r\n      <div id=\"PetAndParents\">\r\n        <div className=\"heard\">\r\n          <Heart\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n            onSearch={(data) => {\r\n\r\n              storage.doctorExam = JSON.stringify(data)\r\n\r\n              storage.doctorList = JSON.stringify(this.state.data)\r\n              if (storage.isClinical === 'true') {\r\n                this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\r\n              } else {\r\n                this.props.history.push({ pathname: '/page10', })\r\n              }\r\n            }}\r\n            menu8Click={() => {\r\n              console.log('--', storage.identity, storage.doctorList);\r\n              switch (storage.identity) {\r\n                case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n                case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n                  break;\r\n                case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\r\n          <h1 style={{ fontSize: px(38) }}>{`Pet & Parents Profile Management`}</h1>\r\n          <div className=\"search\">\r\n            <div className=\"searchL\">\r\n              <input\r\n                type=\"text\"\r\n                style={{ paddingLeft: px(25), height: px(34) }}\r\n                placeholder=\"&#xe62c; Search \"\r\n                value={this.state.searchText}\r\n                onChange={(text) => {\r\n                  this.inputChange(text)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\r\n              Search\r\n            </div>\r\n          </div>\r\n          <div className=\"btns\">\r\n            <div className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}>\r\n              + New Parent\r\n            </div>\r\n            <div\r\n              className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}\r\n              onClick={() => {\r\n                this.props.history.push('/pet/doctorAddPet')\r\n              }}\r\n\r\n            >\r\n              + New Pet\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"lists\">\r\n            <div className=\"listsL\">\r\n              {this.list('parent')}\r\n            </div>\r\n\r\n            <div className=\"listsL\">\r\n              {this.list('pet')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <MyModal visible={this.state.loading} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}",["229","230"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\electronStore.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\AddDevice.jsx",["231","232","233","234","235","236","237","238","239","240","241","242","243","244","245"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Input, Button, message, Spin, BackTop } from 'antd';\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport { devicesTitleHeight } from '../../utils/InitDate'\nimport electronStore from '../../utils/electronStore';\nimport blueSearch from './../../assets/img/blueSerch.png'\nimport biggieHome from './../../assets/img/searchType-biggieHome.png'\nimport biggiePro from './../../assets/img/searchType-biggiePro.png'\nimport mellaHome from './../../assets/img/searchType-home.png'\nimport mellaPro from './../../assets/img/searchType-mellaPro.png'\nimport maeBowl from './../../assets/img/searchType-maeBowl.png'\nimport other from './../../assets/img/searchType-other.png'\nimport possum from './../../assets/img/searchType-possum.png'\nimport rfid from './../../assets/img/searchType-rfid.png'\nimport MinClose from '../../utils/minClose/MinClose'\nimport MouseDiv from '../../utils/mouseDiv/MouseDiv'\nimport back_white from '../../assets/img/back-white.png'\nimport back_hui from '../../assets/img/back-hui.png'\nimport redclose from '../../assets/img/redclose.png'\nimport MyModal from './../../utils/myModal/MyModal'\nimport { mTop, px, MTop, pX } from '../../utils/px';\nimport './mainbody.less'\nimport { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList } from '../../store/actions';\n\n\nlet storage = window.localStorage;\nconst AddDevice = ({ bodyHeight, hardwareReducer, isHaveUsbDevice, receiveBroadcastHardwareInfo, hardwareList, setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }) => {\n    //是否有底座设备\n    const [noUSB, setNoUSB] = useState(false)\n    //设备列表\n    const [devicesList, setDevicesList] = useState([])\n    //选择的设备\n    const [selectDevice, setSelectDevice] = useState(null)\n    //重命名\n    const [reName, setReName] = useState('')\n    //房间号\n    const [examRoom, setExamRoom] = useState('')\n    //已经保存过的设备的macid\n    const [saveDeviceMac, setSaveDeviceMac] = useState([])\n    //顶部文本\n    const [topText, setTopText] = useState(' Pair Device')\n\n    //初始化\n    useEffect(() => {\n        setNoUSB(false)\n        setDevicesList([])\n        setSelectDevice(null)\n        setReName('')\n        setSaveDeviceMac([])\n        setTopText(' Pair Device')\n        //组件渲染完毕后要先清空广播的硬件信息\n        setReceiveBroadcastHardwareInfoFun({\n            deviceType: '',\n            macId: '',\n            name: ''\n        })\n    }, [])\n\n    useEffect(() => {\n\n        if (hardwareList.length > 0) {\n            let saveDeviceMac = []\n            for (let i = 0; i < hardwareList.length; i++) {\n                const element = hardwareList[i];\n                for (let j = 0; j < element.devices.length; j++) {\n                    const device = element.devices[j];\n                    saveDeviceMac.push(device.mac)\n                }\n            }\n            setSaveDeviceMac(saveDeviceMac)\n\n        }\n    }, [hardwareList])\n    useEffect(() => {\n        if (!selectDevice) {\n            setTopText(' Pair Device')\n        } else {\n            setTopText('Device Connected')\n        }\n\n    }, [selectDevice])\n    useEffect(() => {\n        setNoUSB(!isHaveUsbDevice)\n    }, [isHaveUsbDevice])\n    useEffect(() => {\n        let sameFlog = devicesList.some((device, index) => {\n            return device.macId === receiveBroadcastHardwareInfo.macId\n        })\n        if (sameFlog || !receiveBroadcastHardwareInfo.macId) {   //重复直接退出\n            return\n        }\n        console.log('receiveBroadcastHardwareInfo', devicesList, receiveBroadcastHardwareInfo);\n        let deviceArr = [].concat(devicesList)\n        deviceArr.push(receiveBroadcastHardwareInfo)\n        setDevicesList(deviceArr)\n\n\n\n    }, [receiveBroadcastHardwareInfo])\n\n    const addDevice = () => {\n        //从redux拿到列表中的所有硬件设备 hardwareList\n        console.log('hardwareList', hardwareList);\n        //拿到硬件的macid 类型 名称 房间号\n        console.log('selectDevice', selectDevice);\n        let sameFlog = hardwareList.some((item, index) => {\n            return item.type === selectDevice.deviceType\n        })\n        let hardwareArr = [].concat(hardwareList)\n        let { deviceType, macId, name } = selectDevice\n        let newDevice = {\n            name: reName || name,\n            mac: macId,\n            deviceType,\n            examRoom: examRoom || '',\n        }\n        console.log('newDevice', newDevice);\n        if (sameFlog) {\n            //相同就代表有这个硬件类型,可以直接去push\n\n            for (let i = 0; i < hardwareArr.length; i++) {\n                if (hardwareArr[i].type === selectDevice.deviceType) {\n                    hardwareArr[i].devices.push(newDevice)\n                    break\n                }\n            }\n\n        } else {\n            //没有就要新建一个硬件类型\n            let json = {\n                type: selectDevice.deviceType,\n                devices: [newDevice]\n            }\n            hardwareArr.push(json)\n        }\n        setReName('')\n        setExamRoom('')\n        setHardwareList(hardwareArr)\n\n        return newDevice\n\n\n    }\n\n    const body = () => {\n\n        if (selectDevice) {\n            return <div className=\"addDevice1 flex\">\n                <div className=\"addDeviceTop flex\">\n                    <div className=\"title\" style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(20) }}>Would you like to name<br />\n                        {`this ${selectDevice.name} device?`}</div>\n\n                    <div className=\"title\" style={{ fontSize: px(24), marginBottom: px(40), }}>\n                        {`SN: ${selectDevice.macId}`}</div>\n\n\n                    <div className=\"input flex\" style={{ marginBottom: px(20), width: px(400) }}>\n                        <input type=\"text\" style={{ height: px(45) }}\n                            value={reName}\n                            onChange={(value) => {\n                                setReName(value.target.value)\n\n                            }}\n                            placeholder={`${selectDevice.name} Device Name`}\n                        />\n                    </div>\n                    <div className=\"input flex\" style={{ marginBottom: px(60), width: px(400) }}>\n                        <input type=\"text\" style={{ height: px(45) }}\n                            value={examRoom}\n                            onChange={(value) => {\n                                setExamRoom(value.target.value)\n\n                            }}\n                            placeholder={`Exam Room Name`}\n                        />\n                    </div>\n                    <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\n                        on the Exam Room. Write<br /> the name\n                        on the sticker provided so it is easy\n                        to select<br /> your device in the future.</div>\n                </div>\n                <div className=\"addDeviceFoot flex\">\n                    <div className=\"btn\"\n                        onClick={() => {\n                            addDevice()\n                            setSelectDevice(null)\n                            setSelectHardwareType('add')\n\n                        }}\n                    >\n                        <p className='btnText'>Add Another Device</p>\n                    </div>\n                    <div className=\"btn\"\n                        onClick={() => {\n                            let newDevice = addDevice()\n                            setSelectHardwareType(selectDevice.deviceType)\n\n\n                            electronStore.set(`${storage.lastOrganization}-${storage.userId}-${selectDevice.deviceType}-selectDeviceInfo`, newDevice)\n                            setSelectDevice(null)\n                        }}\n                    >\n                        <p className='btnText'>Finish</p>\n                    </div>\n                </div>\n\n\n            </div>\n        } else {\n            if (noUSB) {\n                return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\n                    <img src={redclose} alt=\"\" style={{ width: px(80) }} />\n\n                    <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\n                </div>\n            } else {\n                if (devicesList.length === 0) {\n                    let options = (val) => {\n                        let arr = []\n                        if (val === 1) {\n                            arr = [mellaPro, mellaHome, biggiePro, biggieHome, rfid]\n                        } else {\n                            arr = [possum, maeBowl, other]\n                        }\n                        let option = arr.map((item, index) => {\n                            let imgWidth = px(80)\n                            imgWidth = index === 2 ? px(65) : imgWidth\n                            return (<li key={index.toString()} style={{ margin: `${px(20)}px` }}>\n                                <div className=\"searchType-item\" key={index} >\n                                    <img src={item} alt=\"\" width={imgWidth} />\n                                </div>\n                            </li>)\n                        })\n                        return (\n                            <ul>\n                                {option}\n                            </ul>\n                        )\n                    }\n                    return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n\n\n                        <div className=\"addDeviceContent\">\n                            <div className=\"blueAnimal\" style={{ marginTop: px(50) }}>\n                                {/* <img src={blueSearch} alt=\"\" width={px(150)} /> */}\n                                <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                                    <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\n                                </div>\n                            </div>\n                            <div className=\"openText\" style={{ margin: `${px(15)}px 0` }}>\n                                Make sure your bluetooth and wifi is<br /> activated and turn on your device.\n                            </div>\n                            <div className=\"btn\" style={{ width: px(350), height: px(40) }}>\n                                <div className=\"btnText\">\n                                    Scan For Devices\n                                </div>\n                            </div>\n                            <div className=\"or\" style={{ marginTop: px(10), marginBottom: px(15) }}>\n                                Or\n                            </div>\n                            <div className=\"select\">\n                                Select device type to\n                            </div>\n                            <div className=\"add\">\n                                add manually\n                            </div>\n\n                            <div className=\"item\">\n                                {options(1)}\n                                {options(2)}\n                            </div>\n                        </div>\n\n                        {/* <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\n                          \n                            <p>\n                                {'searching...'}\n                            </p>\n                        </div> */}\n                    </div>\n                } else {\n                    let options = devicesList.map((item, index) => {\n\n                        let flog = saveDeviceMac.some((device, index) => {\n                            return device === item.macId\n                        })\n                        let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\n                        return <li\n                            className='flex'\n                            style={{ marginBottom: px(20) }}\n                            key={`${index}`}\n                            onClick={() => {\n                                if (!flog) {\n                                    setSelectDevice(item)\n\n                                } else {\n                                    message.destroy();\n                                    message.error('This device has already been added')\n                                }\n\n                            }}\n                        >\n\n                            <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\n                            <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\n\n                        </li>\n                    })\n                    return <div className='deviceList ' >\n                        <ul>\n                            {options}\n                        </ul>\n                    </div>\n                }\n            }\n        }\n\n    }\n\n    return (\n        <div className='addDevice' style={{ height: bodyHeight }}>\n            <div className=\"addDeviceTitle\" style={{ height: devicesTitleHeight, fontSize: 26, paddingLeft: px(20) }}>\n                {topText}\n            </div>\n\n            {body()}\n        </div >\n\n    )\n}\n\n\nAddDevice.propTypes = {\n    bodyHeight: PropTypes.number,\n    devicesTypeList: PropTypes.array\n}\n//默认值\nAddDevice.defaultProps = {\n    bodyHeight: 0,\n    devicesTypeList: []\n}\nexport default connect(\n    state => ({\n        hardwareReducer: state.hardwareReduce,\n        isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n        receiveBroadcastHardwareInfo: state.hardwareReduce.receiveBroadcastHardwareInfo,\n        hardwareList: state.hardwareReduce.hardwareList,\n    }),\n    { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }\n)(AddDevice)",["246","247"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx",["248","249","250","251","252","253","254","255","256","257","258"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Button, Progress, Layout, Carousel } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport Animation_1 from \"./../../../assets/img/Animation_1.png\";\nimport Animation_2 from \"./../../../assets/img/Animation_2.png\";\nimport Animation_3 from \"./../../../assets/img/Animation_3.png\";\n// import HeaderItem from './headerItem';\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../../store/actions\";\nimport _ from \"lodash\";\nimport \"./measurement.less\";\nimport electronStore from \"../../../utils/electronStore\";\n\nlet storage = window.localStorage;\nconst { Content, Header } = Layout;\n\nconst Measurement = ({ petMessage, hardwareMessage }) => {\n  let { mellaMeasureValue, mellaMeasurePart } = hardwareMessage;\n  const [percent, setPercent] = useState(0);\n  const [value, setValue] = useState(0);\n  const [timers, setTimers] = useState(0);\n  const [isHua, setIsHua] = useState(true);\n  const saveCallBack = useRef();\n  const callBack = () => {\n    const random = 1;\n    setValue(value + random);\n    setTimers(timers + random);\n  };\n\n  //圆滑里面的文字\n  const ProgressTitle = (percent) => {\n    let num = parseFloat(percent);\n    if (isHua) {\n      num = parseInt((num * 1.8 + 32) * 10) / 10;\n    }\n    return (\n      <>\n        {mellaMeasurePart !== \"耳温\" ? (\n          <p className=\"ProgressTitle\">\n            {num}\n            <span className=\"symbol\">{`${isHua ? \"℉\" : \"℃\"}`}</span>\n          </p>\n        ) : (\n          <></>\n        )}\n        <p className=\"ProgressTitle\">Measuring</p>\n      </>\n    );\n  };\n  //图片切换\n  const checkImage = () => {\n    switch (timers) {\n      case 0:\n        return <img src={Animation_1} />;\n      case 1:\n        return <img src={Animation_2} />;\n      case 2:\n        return <img src={Animation_3} />;\n      case 3:\n        return <img src={Animation_3} />;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (timers > 2) {\n      setTimers(0);\n    }\n    return () => {};\n  });\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    const timer = setInterval(tick, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  useEffect(() => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (hardSet) {\n      let { isHua } = hardSet;\n      setIsHua(isHua);\n    }\n  }, []);\n\n  return (\n    <>\n      {/* <HeaderItem /> */}\n      <Content className={\"contentBox\"}>\n        <Progress\n          type=\"dashboard\"\n          percent={_.round(mellaMeasureValue, 1)}\n          gapDegree={30}\n          width={\"260px\"}\n          strokeWidth={\"8\"}\n          format={(percent) => ProgressTitle(percent)}\n        />\n        {checkImage()}\n      </Content>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(Measurement);\n",["259","260"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\Fetch_token.js",["261","262","263","264"],"\r\n// let COMMON_URL = 'http://192.168.0.36:8080/melladesk';//本地\r\n// let COMMON_URL = 'http://54.85.89.201:8081/melladesk';//AWS\r\n// let COMMON_URL = 'http://8.131.66.177:8081/melladesk';//阿里云\r\nlet COMMON_URL = 'https://www.mellaserver.com/api/melladesk';//企业AWS\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchToken (url, method, params = '', token = '') {\r\n\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let headers = null\r\n    if (token !== '') {\r\n      headers = {\r\n        'authorization': token,\r\n      };\r\n    }\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else if (method === 'POST') {\r\n    let header = {\r\n      \"Content-type\": \"application/json\"\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          // mode: 'cors',\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/merge-patch+json\",\r\n      authorization: token\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n",["265","266"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\index.js",[],["267","268"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\combineScales\\index.jsx",["269","270","271","272"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Layout,\n  Avatar,\n  Button,\n  Card,\n  Space,\n  message,\n  Input,\n  Modal,\n} from \"antd\";\nimport {\n  CheckCircleFilled,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport {\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n} from \"../../store/actions\";\nimport _ from \"lodash\";\nimport { devicesTitleHeight } from \"../../utils/InitDate\";\nimport scaleImage from \"./../../assets/img/scaleImage.png\";\nimport combinedscales from \"./../../assets/img/combinedscales.png\";\nimport \"./index.less\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Meta } = Card;\nconst { confirm } = Modal;\nconst CombineScales = ({\n  petMessage,\n  hardwareMessage,\n  userMessage,\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n}) => {\n  let { hardwareList } = hardwareMessage;\n  const [biggieList, setBiggieList] = useState([]); //体重秤仪器列表\n  const [confirmType, setConfirmType] = useState(false); //确认选择\n  const [checkHardwareList, setcheckHardwareList] = useState([]); //存储用户点击选择的体重秤信息\n  const [saveName, setSaveName] = useState(\"\"); //保存用户的更改的名字\n\n  //点击卡片选择效果\n  const onClick = (index, data) => {\n    console.log(data);\n    let changeClassName = document.getElementById(index).classList;\n    let iconClassName = document.getElementById(`${\"icon\" + index}`);\n    let cardClassNametype = document\n      .getElementById(index)\n      .classList.contains(\"cardBoxClick\");\n    cardClassNametype\n      ? changeClassName.remove(\"cardBoxClick\")\n      : changeClassName.add(\"cardBoxClick\");\n    cardClassNametype\n      ? (iconClassName.style.display = \"none\")\n      : (iconClassName.style.display = \"\");\n    let oldData = checkHardwareList;\n    setcheckHardwareList(_.xorWith([data], oldData, _.isEqual));\n  };\n  //确认选择两个体重秤\n  const onChangeScales = () => {\n    if (_.size(checkHardwareList) > 1) {\n      setConfirmType(true);\n    } else {\n      message.error({\n        content: \"Please choose more than two scales\",\n        style: {\n          marginTop: \"20vh\",\n        },\n      });\n    }\n  };\n  //保存用户更改的名字\n  const saveChangeName = (e) => {\n    setSaveName(e.target.value);\n  };\n\n  //跳转准备测量\n  const startMeasuring = () => {\n    confirm({\n      title: \"Are you sure to incorporate the body fat scale?\",\n      icon: <ExclamationCircleOutlined />,\n      style: {\n        marginTop: \"20vh\",\n      },\n      width: 480,\n      onOk() {\n        let mac = _.join(_.map(checkHardwareList, \"mac\"), \"/\");\n        let newData = {\n          name: _.isEmpty(saveName) ? \"CompositeScale\" : saveName,\n          mac: mac,\n          deviceType: \"biggie\",\n          examRoom: \"\",\n        };\n        let newHardwareList = hardwareList;\n        newHardwareList[1].devices.push({ ...newData });\n        selectHardwareList(newHardwareList);\n        selectHardwareInfoFun(newData);\n        setMenuNum(\"1\");\n      },\n    });\n  };\n\n  useEffect(() => {\n    let newData = [];\n    _.forIn(_.find(hardwareList, [\"type\", \"biggie\"]).devices, (item) => {\n      if (item.mac.indexOf(\"/\") === -1) {\n        newData.push(item);\n      }\n    });\n    setBiggieList(newData);\n    return () => {};\n  }, []);\n\n  return (\n    <>\n      <Layout className=\"mergePage\">\n        <Header className=\"headerBox\" style={{ height: devicesTitleHeight }}>\n          <span className=\"headerTitle\">\n            {confirmType ? \"Scales Combined As One\" : \"Combine Scales\"}\n          </span>\n        </Header>\n        <Content className=\"contentBox\">\n          <div className=\"tipTitleBox\">\n            {!confirmType ? (\n              <span>\n                Select the scales you'd\n                <br />\n                like to combine\n              </span>\n            ) : (\n              <span>\n                These two scales are now combined.\n                <br />\n                Please give this combination a name\n              </span>\n            )}\n          </div>\n\n          {confirmType ? (\n            <div className=\"asOneCardBox\">\n              <Space>\n                {_.map(checkHardwareList, (item, index) => {\n                  return (\n                    <Card className=\"asOneCard\">\n                      <Meta\n                        avatar={<Avatar src={scaleImage} size={53} />}\n                        description={\n                          <div style={{ display: \"grid\" }}>\n                            <span>Device Name:{item.name}</span>\n                            <span>\n                              {item.deviceType === \"biggie\"\n                                ? \"Biggie Pro Scale\"\n                                : \"Biggie Home Scale\"}\n                            </span>\n                            <span>SN:{item.mac}</span>\n                          </div>\n                        }\n                      />\n                    </Card>\n                  );\n                })}\n              </Space>\n              <div className=\"acOneImageBox\">\n                <img src={combinedscales} />\n              </div>\n            </div>\n          ) : (\n            <div className=\"selectScalesBox\">\n              {_.map(biggieList, (item, index) => {\n                return (\n                  <Card\n                    className=\"cardBox\"\n                    hoverable\n                    onClick={() => onClick(`${index}`, item)}\n                    id={`${index}`}\n                    key={index}\n                  >\n                    <div className=\"cardBodyBox\">\n                      <Meta\n                        avatar={<Avatar src={scaleImage} size={53} />}\n                        description={\n                          <div style={{ display: \"grid\" }}>\n                            <span>Device Name:{item.name}</span>\n                            <span>\n                              {item.deviceType === \"biggie\"\n                                ? \"Biggie Pro Scale\"\n                                : \"Biggie Home Scale\"}\n                            </span>\n                            <span>SN:{item.mac}</span>\n                          </div>\n                        }\n                      />\n                      <CheckCircleFilled\n                        id={`${\"icon\" + index}`}\n                        style={{\n                          color: \"#5cbbe0\",\n                          fontSize: \"20px\",\n                          display: \"none\",\n                        }}\n                      />\n                    </div>\n                  </Card>\n                );\n              })}\n            </div>\n          )}\n\n          {confirmType ? (\n            <>\n              <div className=\"inputBox\">\n                <Input\n                  placeholder=\"Combined Scale Name\"\n                  className=\"inputName\"\n                  maxLength={25}\n                  onChange={saveChangeName}\n                />\n              </div>\n              <div className=\"scalesBtnBox\">\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => startMeasuring()}\n                >\n                  Save & Start Measuring\n                </Button>\n              </div>\n            </>\n          ) : (\n            <Space className=\"scalesBtnBox\">\n              <Button\n                type=\"primary\"\n                className=\"scalesBtn\"\n                shape=\"round\"\n                onClick={() => setMenuNum(\"AddDevice\")}\n              >\n                Add New Scale\n              </Button>\n              <Button\n                type=\"primary\"\n                className=\"scalesBtn\"\n                shape=\"round\"\n                onClick={() => onChangeScales()}\n              >\n                Combine Scales\n              </Button>\n            </Space>\n          )}\n        </Content>\n      </Layout>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n    userMessage: state.userReduce,\n  }),\n  {\n    setMenuNum,\n    selectHardwareInfoFun,\n    selectHardwareList,\n  }\n)(CombineScales);\n",["273","274"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Menu,\r\n    Popover,\r\n    Button,\r\n    Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport pinyin from 'pinyin';\r\n\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './phoneBook.less'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\n\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\r\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\r\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\r\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\r\n\r\n    useEffect(() => {\r\n        if (confirmSelectBreed !== -1) {\r\n            setSelectBreed(confirmSelectBreed)\r\n        }\r\n    }, [confirmSelectBreed])\r\n\r\n\r\n    console.log('listsDate', phoneList)\r\n\r\n    useEffect(() => {\r\n        // console.log('listsDate', listDate)\r\n        console.log('进来了');\r\n        let test = []\r\n        listDate.map((item, index) => {\r\n            let data = {\r\n                name: item.breedName,\r\n                hidden: false,\r\n                petSpeciesBreedId: item.petSpeciesBreedId\r\n            }\r\n            test.push(data)\r\n        })\r\n        // 暂时静态数据替换\r\n        //获取联系人列表\r\n        console.log('11111111111', test)\r\n        let list = test;\r\n        let sections = [], letterArr = [];\r\n        // console.log('原始的数据:',list)\r\n\r\n        // 右侧字母栏数据处理\r\n        list.map((item, index) => {\r\n            letterArr.push(pinyin(item.name.substring(0, 1), {\r\n                style: pinyin.STYLE_FIRST_LETTER,\r\n            })[0][0].toUpperCase());\r\n\r\n            letterArr = [...new Set(letterArr)].sort();\r\n        });\r\n\r\n        // 分组数据处理\r\n        letterArr.map((item, index) => {\r\n            sections.push({\r\n                title: item,\r\n                data: []\r\n            })\r\n        });\r\n        list.map(item => {\r\n            let listItem = item;\r\n            sections.map(item => {\r\n                // console.log('}}}}}}}}}}}}}}',item)\r\n                let first = listItem.name.substring(0, 1);\r\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\r\n                if (item.title == test) {\r\n                    item.data.push({\r\n                        firstName: first,\r\n                        name: listItem.name,\r\n                        hidden: listItem.hidden,\r\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\r\n                    });\r\n                }\r\n            })\r\n        });\r\n\r\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\r\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\r\n        // console.log('-1----', sections, letterArr);\r\n        setPhoneList(sections)\r\n        setPhoneListCopy(sections)\r\n        setLetterList(letterArr)\r\n        setLetterListCopy(letterArr)\r\n    }, [])\r\n    useEffect(() => {\r\n        // if (searchText) {\r\n        console.log('搜索内容', searchText, letterListCopy);\r\n        if (letterListCopy.length > 0) {\r\n\r\n            let allData = phoneListCopy\r\n            let newArr = []\r\n            let arr = []\r\n            if (searchText.length > 0) {\r\n                allData.map((item, i) => {\r\n                    item.data.map((data, index) => {\r\n                        // console.log(index)\r\n                        let dataName = data.name ? data.name.toUpperCase() : ''\r\n                        let keyData = searchText ? searchText.toUpperCase() : ''\r\n                        if (dataName.search(keyData) !== -1) {\r\n                            newArr.push(data)\r\n                        }\r\n                    })\r\n                    // console.log('一组数据：', newArr)\r\n                    if (newArr.length != 0) {\r\n                        let oneGreep = {\r\n                            title: item.title,\r\n                            data: newArr\r\n                        }\r\n                        //   console.log('一11组数据：', oneGreep)\r\n                        arr.push(oneGreep)\r\n                    }\r\n\r\n                    newArr = []\r\n                })\r\n                //   console.log('--------------------------', arr)\r\n                let letterArr = []\r\n                arr.map((item, index) => {\r\n                    letterArr.push(item.title)\r\n                })\r\n                // newArr = []\r\n                // // console.log('---||-----',newArr)\r\n                setPhoneList(arr)\r\n                setLetterList(letterArr)\r\n            } else {\r\n\r\n                setPhoneList(phoneListCopy)\r\n                setLetterList(letterListCopy)\r\n            }\r\n        }\r\n\r\n\r\n    }, [searchText])\r\n\r\n\r\n\r\n    const _phoneList = () => {\r\n\r\n        let option = phoneList.map((item, index) => {\r\n            let data = item.data\r\n            let option1 = data.map((value, index1) => {\r\n                return (\r\n                    <li\r\n                        key={`option1${index1}`}\r\n                        onClick={() => {\r\n                            // console.log(value.petSpeciesBreedId);\r\n                            setSelectBreed(value.petSpeciesBreedId)\r\n                            selectFun(value)\r\n                        }}>\r\n                        {value.name}\r\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\r\n                    </li>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <div className=\"phoneBody\">\r\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\r\n                    <ul>\r\n                        {option1}\r\n                    </ul>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul>\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const _letterList = () => {\r\n\r\n        let option = letterList.map((item, index) => {\r\n\r\n\r\n            return (\r\n                <li\r\n                    key={`${index}`}\r\n\r\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\r\n                    <a\r\n\r\n                        onClick={() => {\r\n                            litterClick(item)\r\n                        }}\r\n                    >{item}</a>\r\n                </li>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul className=\"letterUL\">\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const litterClick = (anchorName) => {\r\n        // console.log(anchorName);\r\n        if (anchorName) {\r\n            // 找到锚点\r\n            let anchorElement = document.getElementById(anchorName);\r\n            // console.log(anchorElement);\r\n            // 如果对应id的锚点存在，就跳转到锚点\r\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\r\n        }\r\n        // e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"phoneBook\">\r\n            <div className=\"phone\">\r\n                {_phoneList()}\r\n            </div>\r\n            <div className=\"litter\">\r\n                {_letterList()}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n\r\n    listDate: PropTypes.array,\r\n    selectFun: PropTypes.func,\r\n    searchText: PropTypes.string,\r\n    confirmSelectBreed: PropTypes.number\r\n}\r\nPhoneBook.defaultProps = {\r\n    listDate: [],\r\n    selectFun: () => { },\r\n    searchText: '',\r\n    confirmSelectBreed: -1,\r\n}\r\n\r\nexport default PhoneBook","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx",["296","297","298","299","300","301"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\workPlace\\WorkPlace.jsx",["302","303","304","305","306","307","308","309","310"],"\r\nimport React, { Component, } from 'react'\r\nimport {\r\n  Select,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Spin\r\n\r\n\r\n} from 'antd';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport './workplace.less'\r\nimport { mTop, pX, px, win } from '../../utils/px';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport logo from '../../assets/images/mellaLogo.png'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\nexport default class WorkPlace extends Component {\r\n  state = {\r\n    organization: '',\r\n    workplaceList: [],\r\n\r\n\r\n    spin: false,\r\n    orgArr: [],\r\n    workplaceJson: {},\r\n    workplaceId: '',\r\n    workplaceName: '',\r\n    organizationId: '',\r\n    organizationName: '',\r\n    connectionKey: '',\r\n    selectRoleId: ''\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n\r\n    let userWorkplace = []\r\n    try {\r\n      userWorkplace = JSON.parse(storage.userWorkplace) || []\r\n      console.log(userWorkplace);\r\n    } catch (error) {\r\n      console.log('字符串转对象失败', error);\r\n    }\r\n    /*orgArr的格式为[{\r\n      organizationId:1,\r\n      organizationName:'11111',\r\n      connectionKey:''\r\n    }]\r\n    \r\n     workplace:{\r\n       1:{\r\n          workplaceId:1,\r\n          workplaceName:'122334\r\n        },\r\n     }\r\n    */\r\n    let orgArr = [], workplaceJson = {}\r\n    console.log('存储的工作场所和组织id', storage.lastWorkplaceId, storage.lastOrganization);\r\n    for (let i = 0; i < userWorkplace.length; i++) {\r\n      let element = userWorkplace[i]\r\n      // console.log('每一项的值：', element);\r\n      if (element.organizationEntity && element.workplaceEntity) {\r\n        let { organizationEntity, workplaceEntity, roleId } = element\r\n        const { name, organizationId, connectionKey } = organizationEntity\r\n        const { workplaceName, workplaceId } = workplaceEntity\r\n\r\n        if (`${workplaceId}` === storage.lastWorkplaceId) {\r\n          this.setState({\r\n            workplaceName,\r\n            workplaceId: storage.lastWorkplaceId\r\n          })\r\n        }\r\n\r\n        if (`${organizationId}` === storage.lastOrganization) {\r\n          this.setState({\r\n            organizationName: name,\r\n            organizationId: storage.lastOrganization\r\n          })\r\n        }\r\n\r\n        let orgRepeatFlog = false, repeatFlogNum = -1\r\n        for (let j = 0; j < orgArr.length; j++) {\r\n          console.log(orgArr[j].organizationId, organizationId);\r\n          if (orgArr[j].organizationId === organizationId) {\r\n            orgRepeatFlog = true\r\n            repeatFlogNum = j\r\n            break;\r\n          }\r\n\r\n        }\r\n        if (orgRepeatFlog) {\r\n          let workplace = {\r\n            workplaceName, workplaceId\r\n          }\r\n          let id = orgArr[repeatFlogNum].organizationId\r\n          let sameflog = false\r\n          console.log(workplaceJson[`${id}`], workplace);\r\n          for (let k = 0; k < workplaceJson[`${id}`].length; k++) {\r\n            const element = workplaceJson[`${id}`][k];\r\n            if (element.workplaceId === workplace.workplaceId && element.workplaceName === workplace.workplaceName) {\r\n              sameflog = true\r\n              break\r\n            }\r\n\r\n          }\r\n          if (!sameflog) {\r\n            workplaceJson[`${id}`].push(workplace)\r\n          }\r\n\r\n        } else {\r\n          let connectKey = connectionKey || ''\r\n          let json = {\r\n            organizationId,\r\n            organizationName: name,\r\n            connectionKey: connectKey,\r\n            roleId\r\n          }\r\n          let workplace = [{\r\n            workplaceName, workplaceId\r\n          }]\r\n          workplaceJson[`${organizationId}`] = workplace\r\n\r\n          orgArr.push(json)\r\n        }\r\n      }\r\n    }\r\n    console.log('-----转换后的组织信息--', orgArr, workplaceJson);\r\n    this.setState({\r\n      orgArr,\r\n      workplaceJson,\r\n      connectionKey: storage.connectionKey,\r\n      selectRoleId: storage.roleId\r\n    })\r\n    //分辨率改变后窗口自动改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _select = (value, e) => {\r\n    console.log(value, e);  //value的值为id\r\n\r\n  }\r\n\r\n  _next = () => {\r\n    // this.props.history.push('/page8')\r\n\r\n    let { workplaceId, organizationId, connectionKey, selectRoleId } = this.state\r\n    console.log({ workplaceId, organizationId, connectionKey, selectRoleId });\r\n\r\n    // this.setState({\r\n    //   spin: true\r\n    // })\r\n    // fetchRequest(`/organization/updateLastWorkplace/${storage.userId}/${workplaceId}`)\r\n    //   .then(res => {\r\n    //     console.log(res);\r\n    //     this.setState({\r\n    //       spin: false\r\n    //     })\r\n    //     if (res.msg === 'success') {\r\n    //       storage.lastWorkplaceId = workplaceId\r\n    //       this.props.history.goBack()\r\n    //     }\r\n    //   })\r\n    //   .catch(err => {\r\n    //     this.setState({\r\n    //       spin: false\r\n    //     })\r\n    //     console.log(err);\r\n    //   })\r\n\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    console.log('入参', { userId: storage.userId, roleId: storage.roleId, workplaceId });\r\n    fetchRequest4(`/user/changeLatestWorkplace/${storage.userId}/${2}/${workplaceId}`, \"GET\")\r\n      .then(res => {\r\n        console.log('切换成功', res);\r\n        storage.lastWorkplaceId = `${workplaceId}`\r\n        storage.lastOrganization = organizationId\r\n        storage.connectionKey = connectionKey\r\n\r\n        if (selectRoleId) {\r\n          storage.roleId = selectRoleId\r\n        }\r\n\r\n        this.props.history.push('/uesr/selectExam')\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        storage.lastWorkplaceId = workplaceId\r\n        storage.lastOrganization = organizationId\r\n        storage.connectionKey = connectionKey\r\n\r\n        this.props.history.push('/uesr/selectExam')\r\n\r\n      })\r\n  }\r\n  render () {\r\n\r\n    let { orgArr, organizationName, workplaceName, workplaceJson, organizationId } = this.state\r\n    let orgOptions = orgArr.map(item => <Option key={item.organizationId} connectionkey={item.connectionKey} roleid={item.roleId} >{item.organizationName}</Option>)\r\n    let workplaceArr = []\r\n    if (workplaceJson[`${organizationId}`]) {\r\n      workplaceArr = workplaceJson[`${organizationId}`]\r\n      console.log('workArr = ', workplaceArr);\r\n    }\r\n    let workplaceOptions = workplaceArr.map(item => <Option key={item.workplaceId}>{item.workplaceName}</Option>)\r\n    return (\r\n      <div id=\"workplace\">\r\n        {/* 关闭缩小 */}\r\n        <div className=\"header\">\r\n          <MaxMin\r\n            onClick={() => { this.props.history.push('/') }}\r\n            onClick1={() => this.props.history.goBack()}\r\n          />\r\n        </div>\r\n        <div className=\"body flex\">\r\n          <div className=\"img flex\">\r\n            <img src={logo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n\r\n          <div className=\"title\">\r\n            <div className=\"text\" style={{ fontSize: px(28), marginBottom: px(40) }}>Verify Organization Information</div>\r\n            <div className=\"text2\" style={{ fontSize: px(24), textAlign: 'center' }}>Good Pets</div>\r\n          </div>\r\n\r\n\r\n          <div className=\"selectAll\" style={{ marginBottom: px(160) }}>\r\n\r\n            <div className=\"select\" >\r\n              <p style={{ fontSize: px(18) }}>Select Organization:</p>\r\n              <Select style={{ width: '40%' }}\r\n                value={organizationName}\r\n                onChange={(val, e) => {\r\n                  console.log(val, e)\r\n                  let workplace = workplaceJson[e.key]\r\n                  console.log(workplace);\r\n                  this.setState({\r\n                    organizationId: e.key,\r\n                    organizationName: e.children,\r\n                    connectionKey: e.connectionkey,\r\n                    workplaceId: workplace[0].workplaceId,\r\n                    workplaceName: workplace[0].workplaceName,\r\n                    selectRoleId: e.roleid\r\n                  })\r\n                }}>\r\n                {/* <Option value=\"1\">UGA Veterinary Teaching Hospital</Option> */}\r\n                {orgOptions}\r\n              </Select>\r\n            </div>\r\n\r\n            <div className=\"select\" >\r\n              <p style={{ fontSize: px(18) }}>Select Location:</p>\r\n              <Select style={{ width: '40%' }}\r\n                value={workplaceName}\r\n                onChange={(val, e) => {\r\n                  console.log(val, e)\r\n                  this.setState({\r\n                    workplaceId: e.key,\r\n                    workplaceName: e.children\r\n                  })\r\n                }}>\r\n                {workplaceOptions}\r\n              </Select>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"foot flex\">\r\n          <div className=\"btn\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size='large'\r\n              onClick={this._next}\r\n            >\r\n              Verify\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n",["311","312"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["313","314","315","316"],"import React, { Component, } from 'react'\r\nimport {\r\n\r\n  Select,\r\n  DatePicker, Space,\r\n  message,\r\n  Button,\r\n  Input\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './ezyVetSelectTime.less'\r\nimport { FetchEszVet } from './../../utils/FetchEszVet'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class EzyVetSelectTime extends Component {\r\n\r\n  state = {\r\n    startTime: moment(moment().format(\"YYYY-MM-DD\")),\r\n    endTime: moment(),\r\n    patientId: ''\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    console.log(storage.selectTime);\r\n    if (storage.selectTime && `${storage.selectTime}` !== `undefined` && storage.selectTime !== '') {\r\n      try {\r\n        this.setState({\r\n          startTime: moment(JSON.parse(storage.selectTime).startTime),\r\n          endTime: moment(JSON.parse(storage.selectTime).endTime)\r\n        })\r\n      } catch (error) {\r\n        console.log('时间转换错误', error);\r\n      }\r\n\r\n    }\r\n    console.log('============', storage.selectPatientId);\r\n    if (storage.selectPatientId && `${storage.selectPatientId}` !== `undefined` && storage.selectPatientId !== '') {\r\n      try {\r\n        this.setState({\r\n          patientId: storage.selectPatientId\r\n\r\n        })\r\n      } catch (error) {\r\n        console.log('时间转换错误', error);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  _next = () => {\r\n    let { startTime, endTime } = this.state\r\n    if (startTime === null || endTime === null) {\r\n      message.error('Please select a date range')\r\n      return\r\n    }\r\n    let saveSart = startTime.format('YYYY-MM-DD HH:mm:ss'), saveEnd = endTime.format('YYYY-MM-DD HH:mm:ss');\r\n    console.log('开始时间', startTime.format('YYYY-MM-DD HH:mm:ss'), '---------------结束时间', endTime.format('YYYY-MM-DD HH:mm:ss'));\r\n    let chazhi = new Date().getTimezoneOffset()\r\n    chazhi = chazhi + 360\r\n    console.log('差值', chazhi);\r\n    let start = startTime.add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n    let end = endTime.add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n    console.log(start, end);\r\n    let unix = `{\">\": ${moment(start).format('X')}, \"<\": ${moment(end).format('X')}}`\r\n    let uri = encodeURIComponent(unix)\r\n    console.log('-----------', unix, uri);\r\n    storage.unixToURI = uri\r\n    let selectTime = {\r\n      startTime: saveSart,\r\n      endTime: saveEnd,\r\n    }\r\n    console.log('最终的选择时间：', selectTime);\r\n    storage.selectTime = JSON.stringify(selectTime)\r\n    storage.selectPatientId = this.state.patientId\r\n    console.log(storage.selectTime, JSON.parse(storage.selectTime), storage.selectPatientId);\r\n    this.props.history.push('EzyVetSelectExam')\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"ezyVetSelectTime\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push('/ezyVetLogin')}\r\n        />\r\n        <div className=\"text\">\r\n          Please select the scope of <br /> search for medical records\r\n        </div>\r\n\r\n        <div className=\"patirntID\">\r\n          <p style={{ width: '80px' }}>Patient ID:</p>\r\n          <Input\r\n            style={{ outline: 'medium' }}\r\n            value={this.state.patientId}\r\n            // bordered={false}\r\n            onChange={(item) => {\r\n              console.log(item);\r\n              this.setState({\r\n                patientId: item.target.value\r\n              })\r\n            }}\r\n\r\n          />\r\n\r\n        </div>\r\n\r\n        <div className=\"time\">\r\n          <Space direction=\"vertical\" size={12}>\r\n            <RangePicker\r\n              value={[this.state.startTime, this.state.endTime]}\r\n              showTime\r\n              ranges={{\r\n                Today: [moment(moment().format(\"YYYY-MM-DD\")), moment(moment().endOf('day'))],\r\n              }}\r\n              onChange={(dates, dateStrings) => {\r\n                // console.log('From: ', dates[0], ', to: ', dates[1]);\r\n                // console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\r\n                console.log('我是第一个', dates, dateStrings);\r\n                // this.setState({\r\n                //   startTime: dateStrings[0],\r\n                //   endTime: dateStrings[1]\r\n                // })\r\n              }}\r\n              onCalendarChange={(dates, dateStrings) => {\r\n                console.log('我是第二个', dates, dateStrings);\r\n                this.setState({\r\n                  startTime: moment(dateStrings[0]),\r\n                  endTime: moment(dateStrings[1])\r\n                })\r\n              }}\r\n            />\r\n          </Space>\r\n        </div>\r\n\r\n        <div className=\"btn\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._next}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\settings\\Settings.jsx",["317","318","319","320","321","322","323","324","325"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil2.js",["326","327","328","329"],"\r\n// let COMMON_URL = 'http://192.168.0.36:8080/melladesk';//本地\r\nlet COMMON_URL = 'https://www.mellaserver.com/api/melladesk';//企业AWS\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchRequest2 (url, method, params = '', Authorization) {\r\n\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": 'text/plain'\r\n          }\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          // mode: 'cors',\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\px.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\PetsUI.jsx",["330","331","332"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Layout,\n  Menu,\n  PageHeader,\n  Radio,\n  Input,\n  Space,\n  Button,\n  Modal,\n  message,\n  Carousel,\n} from \"antd\";\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setRulerConnectStatusFun,\n  setRulerMeasureValueFun,\n  setRulerUnitFun,\n  setRulerConfirmCountFun,\n} from \"../../../store/actions\";\nimport _ from \"lodash\";\nimport NumericInput from \"./numericInput\";\nimport { fetchRequest } from \"../../../utils/FetchUtil1\";\nimport head from \"./../../../assets/img/head.png\";\nimport neck from \"./../../../assets/img/neck.png\";\nimport upper from \"./../../../assets/img/upper.png\";\nimport lower from \"./../../../assets/img/lower.png\";\nimport Full from \"./../../../assets/img/Full.png\";\nimport body from \"./../../../assets/img/body.png\";\nimport catHead from \"./../../../assets/img/catHead.png\";\nimport catNeck from \"./../../../assets/img/catNeck.png\";\nimport catUpper from \"./../../../assets/img/catUpper.png\";\nimport catLower from \"./../../../assets/img/catLower.png\";\nimport catFull from \"./../../../assets/img/catFull.png\";\nimport catBody from \"./../../../assets/img/catBody.png\";\nimport \"./scanPet.less\";\n\nconst { Content, Header } = Layout;\nconst ScanPet = ({\n  petMessage,\n  petDetailInfoFun,\n  ruleMessage,\n  setRulerConfirmCountFun,\n  setRulerMeasureValueFun,\n  setRulerUnitFun,\n}) => {\n  let { petSpeciesBreedId, patientId, petId } = petMessage;\n  let { rulerMeasureValue, rulerConfirmCount, rulerUnit } = ruleMessage;\n  let storage = window.localStorage;\n  const [radioValue, setRadioValue] = useState(\"in\");\n  const [inputIndex, setInputIndex] = useState(-1);\n  const [visible, setVisible] = useState(false);\n  const [carouselIndex, setCarouselIndex] = useState(1);\n  const [headValue, setHeadValue] = useState(\"\"); //接收输入框的值\n  const [neckValue, setNeckValue] = useState(\"\"); //接收输入框的值\n  const [upperValue, setUpperValue] = useState(\"\"); //接收输入框的值\n  const [lowerValue, setLowerValue] = useState(\"\"); //接收输入框的值\n  const [torsoValue, setTorsoValue] = useState(\"\"); //接收输入框的值\n  const [bodyValue, setBodyValue] = useState(\"\"); //接收输入框的值\n  let newData = [];\n\n  //保存input组\n  const inputEl = (data) => {\n    newData.push(data);\n  };\n\n  //切换聚焦事件\n  const switchFocus = () => {\n    let num = inputIndex;\n    if (num === 3) {\n      setCarouselIndex(2);\n    }\n    if (num < 5) {\n      setInputIndex(num + 1);\n    }\n  };\n\n  //结束事件\n  const finishScan = () => {\n    Modal.confirm({\n      title: \"Confirm\",\n      icon: <ExclamationCircleOutlined />,\n      content: \"Whether To Save Data\",\n      top: \"40vh\",\n      onOk: saveData,\n    });\n  };\n  //保存数据\n  const saveData = () => {\n    const newNum = (val) => {\n      if (val) {\n        if (rulerUnit === \"in\") {\n          return parseFloat((parseFloat(val) * 2.54).toFixed(1));\n        } else {\n          return parseFloat(val);\n        }\n      } else {\n        return \"\";\n      }\n    };\n    let prams = {\n      l2rarmDistance: newNum(bodyValue) || null,\n      lowerTorsoCircumference: newNum(lowerValue) || null,\n      upperTorsoCircumference: newNum(upperValue) || null,\n      neckCircumference: newNum(neckValue) || null,\n      h2tLength: newNum(headValue) || null,\n      torsoLength: newNum(torsoValue) || null,\n    };\n    let url = `/pet/updatePetInfo/${storage.userId}/${petId}`;\n    fetchRequest(url, \"POST\", prams)\n      .then((res) => {\n        if (res.flag) {\n          petDetailInfoFun({\n            ...petMessage,\n            ...prams,\n          });\n          message.success(\"Uploaded successfully\");\n        } else {\n          message.error(\"upload failed\");\n        }\n      })\n      .catch((err) => {\n        message.error(\"update failed\");\n        console.log(err);\n      });\n  };\n\n  //判断是猫还是狗还是其他\n  const checkPetType = () => {\n    //0是猫，1是狗，或者petSpeciesBreedId为空判断图片为狗\n    if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n      return 0;\n    } else if (\n      petSpeciesBreedId === 12001 ||\n      _.inRange(petSpeciesBreedId, 136, 456)\n    ) {\n      return 1;\n    } else {\n      return 1;\n    }\n  };\n\n  //切换图片\n  const changeImage = () => {\n    switch (inputIndex) {\n      case 0:\n        return checkPetType() === 1 ? (\n          <img src={head} />\n        ) : (\n          <img src={catHead} />\n        );\n      case 1:\n        return checkPetType() === 1 ? (\n          <img src={neck} />\n        ) : (\n          <img src={catNeck} />\n        );\n      case 2:\n        return checkPetType() === 1 ? (\n          <img src={upper} />\n        ) : (\n          <img src={catUpper} />\n        );\n      case 3:\n        return checkPetType() === 1 ? (\n          <img src={lower} />\n        ) : (\n          <img src={catLower} />\n        );\n      case 4:\n        return checkPetType() === 1 ? (\n          <img src={Full} />\n        ) : (\n          <img src={catFull} />\n        );\n      case 5:\n        return checkPetType() === 1 ? (\n          <img src={body} />\n        ) : (\n          <img src={catBody} />\n        );\n      default:\n        return checkPetType() === 1 ? (\n          <img src={body} />\n        ) : (\n          <img src={catBody} />\n        );\n    }\n  };\n\n  //点击输入框事件\n  const clickInput = (index) => {\n    setInputIndex(index);\n  };\n\n  //单位转化\n  const changeUnit = (value) => {\n    if (rulerUnit === \"cm\") {\n      return _.round(value * 2.54, 1);\n    } else if (rulerUnit === \"in\") {\n      return _.floor(_.divide(value, 2.54), 2);\n    }\n  };\n\n  //单选框改变事件\n  const changeRadio = (e) => {\n    setRadioValue(e.target.value);\n    setRulerUnitFun(e.target.value);\n  };\n\n  //小圆点点击事件\n  const clickPoint = (index) => {\n    if (index === 1) {\n      setCarouselIndex(1);\n    } else {\n      setCarouselIndex(2);\n    }\n  };\n  //切换宠物获取到长度信息,对数据根据界面单位进行换算\n  const petLengthDataConvert = (val) => {\n    if (!val) {\n      return \"\";\n    } else {\n      if (rulerUnit === \"cm\") {\n        return val.toFixed(1);\n      } else {\n        return _.floor(_.divide(val, 2.54), 2);\n      }\n    }\n  };\n\n  //监听点击界面中下一步按钮\n  useEffect(() => {\n    console.log(\"inputIndex\", inputIndex);\n\n    if (inputIndex < 6 && inputIndex !== -1) {\n      newData[inputIndex].focus();\n    }\n    if (inputIndex === 6) {\n      finishScan();\n    }\n\n    return () => {};\n  }, [inputIndex, patientId]);\n\n  useEffect(() => {\n    if (carouselIndex === 2) {\n      setInputIndex(4);\n    } else if (carouselIndex === 1) {\n      setInputIndex(0);\n    }\n    return () => {};\n  }, [carouselIndex]);\n\n  //监听用户点击了硬件中的下一步按钮\n  useEffect(() => {\n    if (inputIndex === -1) {\n      setInputIndex(0);\n    } else if (inputIndex < 6) {\n      setInputIndex(inputIndex + 1);\n    }\n    if (inputIndex === 3) {\n      setCarouselIndex(2);\n    }\n    return () => {};\n  }, [rulerConfirmCount]);\n\n  //监听切换了宠物\n  useEffect(() => {\n    setInputIndex(0);\n    let {\n      torsoLength,\n      l2rarmDistance,\n      upperTorsoCircumference,\n      lowerTorsoCircumference,\n      h2tLength,\n      neckCircumference,\n    } = petMessage;\n\n    setBodyValue(petLengthDataConvert(l2rarmDistance));\n    setLowerValue(petLengthDataConvert(lowerTorsoCircumference));\n    setUpperValue(petLengthDataConvert(upperTorsoCircumference));\n    setNeckValue(petLengthDataConvert(neckCircumference));\n    setHeadValue(petLengthDataConvert(h2tLength));\n    setTorsoValue(petLengthDataConvert(torsoLength));\n\n    return () => {};\n  }, [petId]);\n  //监听用户点击了硬件中的下一步按钮和拉动皮尺\n  useEffect(() => {\n    if (inputIndex < 6) {\n      switch (inputIndex) {\n        case 0:\n          setHeadValue(rulerMeasureValue);\n          break;\n        case 1:\n          setNeckValue(rulerMeasureValue);\n          break;\n        case 2:\n          setUpperValue(rulerMeasureValue);\n          break;\n        case 3:\n          setLowerValue(rulerMeasureValue);\n          break;\n        case 4:\n          setTorsoValue(rulerMeasureValue);\n          break;\n        case 5:\n          setBodyValue(rulerMeasureValue);\n          break;\n        default:\n          break;\n      }\n    }\n  }, [rulerConfirmCount, rulerMeasureValue]);\n  //监听单位改变\n  useEffect(() => {\n    setRadioValue(rulerUnit);\n    setHeadValue(headValue && changeUnit(headValue));\n    setNeckValue(neckValue && changeUnit(neckValue));\n    setUpperValue(upperValue && changeUnit(upperValue));\n    setLowerValue(lowerValue && changeUnit(lowerValue));\n    setTorsoValue(torsoValue && changeUnit(torsoValue));\n    setBodyValue(bodyValue && changeUnit(bodyValue));\n    return () => {};\n  }, [rulerUnit]);\n\n  return (\n    <>\n      <Content className=\"contentBox\">\n        <div className=\"scanImageBox\">{changeImage()}</div>\n        {/*选择单位框*/}\n        <Radio.Group\n          value={radioValue}\n          onChange={changeRadio}\n          buttonStyle=\"solid\"\n          className=\"selectLengthUnit\"\n        >\n          <Radio.Button\n            value=\"in\"\n            style={{\n              background: radioValue === \"in\" ? \"#12ade4\" : \"#fff\",\n              borderColorRight: radioValue === \"in\" ? \"#12ade4\" : \"#fff\",\n              borderRadius: \"20px\",\n              borderTopRightRadius: \"0px\",\n              borderBottomRightRadius: \"0px\",\n            }}\n          >\n            in\n          </Radio.Button>\n          <Radio.Button\n            value=\"cm\"\n            className=\"cmButton\"\n            style={{\n              background: radioValue === \"cm\" ? \"#12ade4\" : \"#fff\",\n              borderColorRight: radioValue === \"cm\" ? \"#12ade4\" : \"#fff\",\n              borderRadius: \"20px\",\n              borderTopLeftRadius: \"0px\",\n              borderBottomLeftRadius: \"0px\",\n            }}\n          >\n            cm\n          </Radio.Button>\n        </Radio.Group>\n        <div className=\"slideshowBox\">\n          <div className=\"scollInputGroup\">\n            {/*第一列输入框*/}\n            <Input.Group\n              className=\"inputGroupItem\"\n              style={{ display: carouselIndex === 1 ? \"\" : \"none\" }}\n            >\n              <Space className=\"inputItemBox\">\n                <div className=\"inputItem\">\n                  <p className=\"inputTitle\">Head Circumference</p>\n                  <NumericInput\n                    value={headValue}\n                    onChange={setHeadValue}\n                    getInput={inputEl}\n                    onClick={() => clickInput(0)}\n                    index={inputIndex}\n                    onKey={0}\n                  />\n                </div>\n                <div className=\"inputItem\">\n                  <p className=\"inputTitle\">Neck Circumference</p>\n                  <NumericInput\n                    value={neckValue}\n                    onChange={setNeckValue}\n                    getInput={inputEl}\n                    onClick={() => clickInput(1)}\n                    index={inputIndex}\n                    onKey={1}\n                  />\n                </div>\n                <div className=\"inputItem\">\n                  <p className=\"inputTitle\">Upper Torso Circumference</p>\n                  <NumericInput\n                    value={upperValue}\n                    onChange={setUpperValue}\n                    getInput={inputEl}\n                    onClick={() => clickInput(2)}\n                    index={inputIndex}\n                    onKey={2}\n                  />\n                </div>\n                <div className=\"inputItem\">\n                  <p className=\"inputTitle\">Lower Torso Circumference</p>\n                  <NumericInput\n                    value={lowerValue}\n                    onChange={setLowerValue}\n                    getInput={inputEl}\n                    onClick={() => clickInput(3)}\n                    index={inputIndex}\n                    onKey={3}\n                  />\n                </div>\n              </Space>\n            </Input.Group>\n            {/*第二列输入框*/}\n            <Input.Group\n              className=\"inputGroupItem\"\n              style={{ display: carouselIndex === 2 ? \"\" : \"none\" }}\n            >\n              <Space className=\"inputItemBox\">\n                <div className=\"inputItem\">\n                  <p className=\"inputTitle\">Full Torso Length</p>\n                  <NumericInput\n                    value={torsoValue}\n                    onChange={setTorsoValue}\n                    getInput={inputEl}\n                    onClick={() => clickInput(4)}\n                    index={inputIndex}\n                    onKey={4}\n                  />\n                </div>\n                <div className=\"inputItem\">\n                  <p className=\"inputTitle\">Full Body Length</p>\n                  <NumericInput\n                    value={bodyValue}\n                    onChange={setBodyValue}\n                    getInput={inputEl}\n                    onClick={() => clickInput(5)}\n                    index={inputIndex}\n                    onKey={5}\n                  />\n                </div>\n              </Space>\n            </Input.Group>\n          </div>\n        </div>\n\n        {/*小圆点 */}\n        <div className=\"dotBox\">\n          <ul className=\"dotList\">\n            <li>\n              <Button\n                className=\"dotItem\"\n                onClick={() => clickPoint(1)}\n                style={{\n                  background: carouselIndex === 1 ? \"#0a0a0a\" : \"#bdbaba\",\n                }}\n              >\n                1\n              </Button>\n            </li>\n            <li>\n              <Button\n                className=\"dotItem\"\n                onClick={() => clickPoint(2)}\n                style={{\n                  background: carouselIndex === 2 ? \"#0a0a0a\" : \"#bdbaba\",\n                }}\n              >\n                2\n              </Button>\n            </li>\n          </ul>\n        </div>\n        {/*下一步 */}\n        <div className=\"nextBtnBox\">\n          <Button\n            type=\"primary\"\n            shape=\"round\"\n            size=\"large\"\n            className=\"nextBtn\"\n            onClick={inputIndex > 4 ? finishScan : switchFocus}\n          >\n            {inputIndex > 4 ? \"Finish\" : \"Next\"}\n          </Button>\n        </div>\n      </Content>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    ruleMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setRulerConnectStatusFun,\n    setRulerMeasureValueFun,\n    setRulerUnitFun,\n    setRulerConfirmCountFun,\n  }\n)(ScanPet);\n",["359","360"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\App.js",["361","362"],"import React, { Component } from 'react'\r\n\r\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom'\r\n\r\nimport Home from './components/home/Home'\r\nimport Choose from './components/choose/Choose'\r\nimport EzyVetLogin from './components/ezyVetLogin/EzyVetLogin'\r\nimport EzyVetSelectTime from './components/ezyVetSelectTime/EzyVetSelectTime'\r\nimport SelectMella from './components/selectMella/SelectMella'\r\nimport APIkey from './components/apiKey/APIKey'\r\nimport VerifyOrganizationInformation from './components/selectLocation/VerifyOrganizationInformation'\r\nimport EzyVetSelectExam from './components/ezyVetSelectExam/EzyVetSelectExam'\r\nimport DoctorSelectExam from './components/doctorSelectExam/DoctorSelectScheduledExam'\r\n\r\nimport DoctorSelectAllExam from './components/doctorSelectExam/DoctorSelectAllExam'\r\nimport Praviders from './components/praviders/Praviders'\r\nimport SelectExam from \"./components/selectExam/SelectExam\";\r\n\r\nimport Mesasure from \"./components/measure/Mesasure\";\r\nimport NorMalMeasurement from \"./components/measure/NorMalMeasurement\";\r\n\r\nimport MaxMinReturn from './utils/maxminreturn/MaxMinReturn'\r\nimport EditPetInfo from './components/editPetInfo/EditPetInfo'\r\nimport WorkPlace from './components/workPlace/WorkPlace'\r\n\r\nimport DoctorAddPet from './components/doctorAddPet/DoctorAddPet'\r\nimport AddYuding from './components/doctorSelectExam/AddYuding'\r\n//登录部分\r\nimport SignIn from './components/signIn/SignIn'\r\nimport ForgotPassword from './components/signIn/forgotPassword/ForgotPassword'\r\nimport ResetPassword from './components/signIn/resetPassword/ResetPassword'\r\n\r\nimport ScanCodeLogin from './components/signIn/scanCodeLogin/ScanCodeLogin'\r\n\r\n//邮箱注册的整体部分\r\nimport VetPrifile from './components/createAccount/vetProfile/VetPrifile'\r\nimport JoinOrganizationByOption from './components/createAccount/joinOrganizationByOption/JoinOrganizationByOption'\r\nimport FindMyOrganization from './components/createAccount/findMyOrganization/FindMyOrganization'\r\nimport FindMyWorkplace from './components/createAccount/findMyWorkplace/FindMyWorkplace'\r\nimport IsHavePMS from './components/createAccount/ishavePMS/IsHavePMS'\r\nimport VerifyEmail from './components/createAccount/verifyEmail/index'\r\nimport NewOrganization from './components/createAccount/newOrganization/NewOrganization'\r\nimport NewWorkplace from './components/createAccount/newWorkplace/NewWorkplace'\r\n\r\nimport InviteTeam from './components/createAccount/inviteTeam/InviteTeam'\r\n\r\n//options\r\nimport Help from './components/menuOptions/help/Help'\r\nimport Unassigned from './components/menuOptions/unassigned/Unassigned'\r\nimport Settings from './components/menuOptions/settings/Settings'\r\nimport AdvancedSettings from './components/menuOptions/advancedSettings/AdvancedSettings'\r\nimport Invite from './components/menuOptions/invite/Invite'\r\nimport PetAndParents from './components/menuOptions/petAndParents/PetAndParents'\r\nimport EditParent from './components/menuOptions/editParent/EditParent'\r\n// import AdminAddPet from './components/menuOptions/adminAddPet/AdminAddPet'\r\nimport Veterinarians from './components/menuOptions/admin_VetProfile/Veterinarians'\r\nimport AddDevice from './components/menuOptions/addDevice/AddDevice'\r\nimport ConnectWorkplace from './components/menuOptions/orgAndPractice/ConnectWorkplace'\r\nimport NewOrg from './components/menuOptions/orgAndPractice/NewOrganization'\r\nimport Team from './components/menuOptions/orgAndPractice/InviteTeam'\r\n\r\nimport MainBody from './components/mainbody'\r\n\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/page1\" component={Choose} />\r\n          <Route exact path=\"/ezyVetLogin\" component={EzyVetLogin} />\r\n          <Route exact path=\"/EzyVetSelectTime\" component={EzyVetSelectTime} />\r\n          <Route exact path=\"/EzyVetSelectExam\" component={EzyVetSelectExam} />\r\n          <Route exact path=\"/page2\" component={APIkey} />\r\n          <Route exact path=\"/page3\" component={VerifyOrganizationInformation} />\r\n          <Route exact path=\"/page4\" component={SelectMella} />\r\n\r\n\r\n          <Route exact path=\"/VetSpireSelectExam\" component={SelectExam} />\r\n          <Route exact path=\"/page7\" component={MaxMinReturn} />\r\n\r\n          <Route exact path=\"/page8\" component={Mesasure} />\r\n          <Route exact path=\"/page9\" component={EditPetInfo} />\r\n          <Route exact path=\"/page10\" component={NorMalMeasurement} />\r\n          {/* <Route exact path=\"/page10\" component={MainBody} /> */}\r\n          <Route exact path=\"/MainBody\" component={MainBody} />\r\n\r\n\r\n\r\n          <Route exact path=\"/page12\" component={WorkPlace} />\r\n          <Route exact path=\"/AddYuding\" component={AddYuding} />\r\n\r\n\r\n          <Route exact path=\"/page11\" component={SignIn} />\r\n          <Route exact path=\"/user/login/forgotPassword\" component={ForgotPassword} />\r\n          <Route exact path=\"/user/login/resetPassword\" component={ResetPassword} />\r\n          <Route exact path=\"/user/login/scanCodeLogin\" component={ScanCodeLogin} />\r\n\r\n          <Route exact path=\"/uesr/logUp/FindMyOrganization\" component={FindMyOrganization} />\r\n          <Route exact path=\"/uesr/logUp/FindMyWorkplace\" component={FindMyWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/VetPrifile\" component={VetPrifile} />\r\n          <Route exact path=\"/uesr/logUp/JoinOrganizationByOption\" component={JoinOrganizationByOption} />\r\n          <Route exact path=\"/uesr/logUp/isHavePMS\" component={IsHavePMS} />\r\n          <Route exact path=\"/uesr/logUp/VerifyEmail\" component={VerifyEmail} />\r\n          <Route exact path=\"/uesr/logUp/NewOrganization\" component={NewOrganization} />\r\n          <Route exact path=\"/uesr/logUp/NewWorkplace\" component={NewWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/InviteTeam\" component={InviteTeam} />\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/uesr/selectExam\" component={DoctorSelectExam} />\r\n          <Route exact path=\"/uesr/DoctorSelectAllExam\" component={DoctorSelectAllExam} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/pet/doctorAddPet\" component={DoctorAddPet} />\r\n\r\n          {/* options */}\r\n          <Route exact path=\"/menuOptions/help\" component={Help} />\r\n          <Route exact path=\"/menuOptions/unassigned\" component={Unassigned} />\r\n          <Route exact path=\"/menuOptions/settings\" component={Settings} />\r\n          <Route exact path=\"/menuOptions/advancedsettings\" component={AdvancedSettings} />\r\n          <Route exact path=\"/menuOptions/invite\" component={Invite} />\r\n          <Route exact path=\"/menuOptions/petAndParents\" component={PetAndParents} />\r\n          <Route exact path=\"/menuOptions/editParent\" component={EditParent} />\r\n          {/* <Route exact path=\"/menuOptions/adminAddPet\" component={AdminAddPet} /> */}\r\n          <Route exact path=\"/menuOptions/veterinarians\" component={Veterinarians} />\r\n          <Route exact path=\"/menuOptions/AddDevice\" component={AddDevice} />\r\n          <Route exact path=\"/menuOptions/ConnectWorkplace\" component={ConnectWorkplace} />\r\n          <Route exact path=\"/menuOptions/NewOrg\" component={NewOrg} />\r\n          <Route exact path=\"/menuOptions/Team\" component={Team} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\nexport default App","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectMella\\SelectMella.jsx",["363"],"import React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n} from 'antd';\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\n\r\nimport './selectMella.less'\r\nexport default class SelectMella extends Component {\r\n\r\n  state = {\r\n    radiobgc1: '#E1206D',\r\n    radiobgc2: '',\r\n    radiobgc3: '',\r\n    chooseNum: 1,\r\n    isNotAsk: false,\r\n    isDefault: true\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n  }\r\n  _radio = (i) => {\r\n    console.log(i);\r\n    switch (i) {\r\n      case 1:\r\n        this.setState({\r\n          radiobgc1: '#E1206D',\r\n          radiobgc2: '',\r\n          radiobgc3: '',\r\n          chooseNum: 1\r\n        })\r\n        break;\r\n\r\n      case 2:\r\n        this.setState({\r\n          radiobgc1: '',\r\n          radiobgc2: '#E1206D',\r\n          radiobgc3: '',\r\n          chooseNum: 2\r\n        })\r\n        break;\r\n      case 3:\r\n        this.setState({\r\n          radiobgc1: '',\r\n          radiobgc2: '',\r\n          radiobgc3: '#E1206D',\r\n          chooseNum: 3\r\n        })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n  }\r\n  _next = () => {\r\n    const { chooseNum } = this.state\r\n    this.props.history.push({ pathname: '/VetSpireSelectExam' })\r\n  }\r\n  render () {\r\n    const { radiobgc1, radiobgc2, radiobgc3 } = this.state\r\n    return (\r\n      <div id=\"selectMella\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick1={() => { this.props.history.push('/page3') }}\r\n          onClick={() => this.props.history.push('/')}\r\n        />\r\n\r\n        {/* 文本 */}\r\n        <div className=\"text\">Select Your Mella</div>\r\n\r\n        {/* 单选框 */}\r\n        <div className=\"radios\">\r\n          <div\r\n            className=\"radio1\"\r\n            onClick={() => this._radio(1)}>\r\n            <div className=\"radioText1\">Mella 001</div>\r\n            <div className=\"radioBtn1\">\r\n              <div style={{ backgroundColor: radiobgc1 }}></div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"radio1\"\r\n            onClick={() => this._radio(2)}>\r\n            <div className=\"radioText1\">Mella 002</div>\r\n            <div className=\"radioBtn1\">\r\n              <div style={{ backgroundColor: radiobgc2 }}></div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"radio1\"\r\n            onClick={() => this._radio(3)}>\r\n            <div className=\"radioText1\">Mella 003</div>\r\n            <div className=\"radioBtn1\">\r\n              <div style={{ backgroundColor: radiobgc3 }}></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"select\">\r\n          <div className=\"notAsk\">\r\n            <div\r\n              className=\"zheng\"\r\n              onClick={() => {\r\n                console.log(123);\r\n                this.setState({\r\n                  isNotAsk: !this.state.isNotAsk\r\n                })\r\n              }}>\r\n              {(this.state.isNotAsk) ? (<img src={dui} alt='' width='40px' />) : (null)}\r\n            </div>\r\n            <p>Don’t ask again</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"select\">\r\n          <div className=\"notAsk\">\r\n            <div className=\"zheng\" onClick={() => this.setState({ isDefault: !this.state.isDefault })}>\r\n              {(this.state.isDefault) ? (<img src={dui} alt='' width='40px' />) : (null)}\r\n            </div>\r\n            <p>Default Device &nbsp; </p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        {/* 按钮 */}\r\n        <div className=\"btn\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'>\r\n            New Device\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._next}>\r\n            Connect\r\n          </Button>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\avatar\\Avatar.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["364","365","366","367","368","369","370","371","372","373"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil5.js",["374","375","376","377"],"\r\n\r\nlet COMMON_URL = 'https://api.rhapsody.vet/graphql';//集成Rhapsody\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchRhapsody (url, method, params = '', token = '') {\r\n\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let headers = null\r\n    if (token !== '') {\r\n      headers = {\r\n        'authorization': token,\r\n      };\r\n    }\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else if (method === 'POST') {\r\n\r\n\r\n    let header = {\r\n      \"Content-type\": \"application/json\"\r\n    };\r\n    if (token !== '') {\r\n      header = {\r\n        'authorization': token,\r\n        \"Content-type\": \"application/json\"\r\n      };\r\n    }\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          // mode: 'cors',\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/merge-patch+json\",\r\n      authorization: token\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\signIn\\SignIn.jsx",["378","379","380","381","382","383","384","385","386","387","388","389","390","391","392"],"import React, { Component } from \"react\";\nimport { Input, Button, message, Spin, BackTop } from \"antd\";\nimport {\n  createFromIconfontCN,\n  SyncOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\n\nimport \"./signIn.less\";\nimport mellaLogo from \"./../../assets/images/mellaLogo.png\";\nimport dui from \"./../../assets/images/dui.png\";\nimport back_white from \"./../../assets/img/back-white.png\";\nimport back_hui from \"./../../assets/img/back-hui.png\";\nimport { fetchRequest } from \"./../../utils/FetchUtil1\";\nimport { fetchRequest2 } from \"./../../utils/FetchUtil2\";\nimport temporaryStorage from \"../../utils/temporaryStorage\";\nimport { fetchRequest1 } from \"../../utils/FetchUtil\";\nimport { mTop, px, MTop, pX, win } from \"../../utils/px\";\nimport MinClose from \"./../../utils/minClose/MinClose\";\nimport MouseDiv from \"./../../utils/mouseDiv/MouseDiv\";\nimport { addLogin, addQRCode } from \"../../utils/axios\";\nlet storage = window.localStorage;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js\",\n});\nlet num = 0;\n//有可能出现,登录成功跳转后获取到了二维码,这样就会导致出现一直轮询,未解决这个问题设置变量isSign\nlet isSign = true;\n\nexport default class SignIn extends Component {\n  state = {\n    isRemember: false,\n    email: \"\",\n    hash: \"\",\n    isCode: false,\n    baseUrl: \"\",\n    QRToken: \"\",\n    isExpired: false, //二维码是否过期\n    spin: false,\n    isLoadQrCode: false, //是否正在加载二维码\n  };\n  componentDidMount() {\n    isSign = true;\n    storage.lastOrganization = \"\";\n    //通知main.js渲染一个small窗口\n    let ipcRenderer = window.electron.ipcRenderer;\n    ipcRenderer.send(\"small\", win());\n    //如果有保存的账号密码则展示出来\n    if (storage.signIn !== undefined && storage.signIn !== \"\") {\n      let data = storage.signIn;\n      data = JSON.parse(data);\n      this.setState({\n        email: data.email,\n        hash: data.hash,\n        QRToken: \"\",\n      });\n    }\n    //是否勾选了保持登录\n    if (storage.isRemember !== undefined) {\n      let isRemember = storage.isRemember === \"true\" ? true : false;\n      this.setState({\n        isRemember,\n      });\n    }\n    // 监听分辨率是否改变\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    //清空本地的注册界面的信息\n    temporaryStorage.logupVetInfo = {};\n    this._getQRCode();\n  }\n  componentWillUnmount() {\n    isSign = false;\n    this.timer && clearInterval(this.timer);\n    let ipcRenderer = window.electron.ipcRenderer;\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer;\n    // ipcRenderer.send('small')\n    ipcRenderer.send(\"small\", win());\n    this.setState({});\n  };\n  _getQRCode = () => {\n    this.setState({\n      isLoadQrCode: true,\n    });\n    num = 0;\n    fetchRequest2(\"/user/getLoginQRcode\", \"GET\", \"\")\n      // addQRCode()\n      .then((res) => {\n        message.destroy();\n\n        console.log(\"---获取二维码\", res);\n        if (res.flag === true) {\n          this.setState({\n            baseUrl: res.data.QRcode,\n            QRToken: res.data.QRToken,\n            isLoadQrCode: false,\n          });\n          this.timer = setInterval(() => {\n            if (!isSign) {\n              this.timer && clearInterval(this.timer);\n            }\n            num++;\n            console.log(\"lunxin\");\n            this._polling();\n\n            if (num > 280) {\n              //超过280秒则去显示二维码过期，要重新获取\n              this.setState({\n                isExpired: true,\n              });\n              num = 0;\n              this.timer && clearInterval(this.timer);\n            }\n          }, 1000);\n        } else {\n          message.error(\"Failed to obtain QR code\", 10);\n          this.setState({\n            isLoadQrCode: false,\n          });\n        }\n      })\n      .catch((err) => {\n        message.error(\"Failed to obtain QR code\", 10);\n        this.setState({\n          isLoadQrCode: false,\n        });\n        console.log(err);\n      });\n  };\n  //轮询\n  _polling = () => {\n    fetchRequest2(`/user/loginWithQRcode/${this.state.QRToken}`)\n      .then((res) => {\n        console.log(\"轮询结果：\", res);\n        if (res.flag === true) {\n          switch (res.code) {\n            case 10001:\n              console.log(\"未扫码\");\n\n              break;\n\n            case 11033:\n              console.log(\"扫码未点击登录\");\n              this.timer && clearInterval(this.timer);\n              temporaryStorage.QRToken = this.state.QRToken;\n              let { name, url } = res.data;\n              this.props.history.replace({\n                pathname: \"/user/login/scanCodeLogin\",\n                params: { name, url },\n              });\n\n              break;\n\n            case 11023:\n              console.log(\"过期\");\n              this.setState({\n                isExpired: true,\n              });\n              num = 0;\n              this.timer && clearInterval(this.timer);\n\n              break;\n\n            default:\n              break;\n          }\n        }\n        console.log(\"code\", res.code);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //登录接口\n  _continue = () => {\n    const { email, hash, isRemember } = this.state;\n\n    message.destroy();\n    let params = {\n      email: email.replace(/(^\\s*)/g, \"\"),\n      hash,\n      identityTypeId: \"1\",\n    };\n    if (email === \"\") {\n      message.error(\"please input your email\");\n      return;\n    }\n    if (hash === \"\") {\n      message.error(\"please input your password\");\n      return;\n    }\n    console.log(params);\n    this.setState({\n      spin: true,\n    });\n    // fetchRequest('/user/mellaLogin', 'POST', params)\n    addLogin(params)\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          spin: false,\n        });\n        if (res.status && res.status === 404) {\n          message.error(\"system error\");\n          return;\n        }\n        if (res.status === 500) {\n          message.error(\"system error\");\n\n          return;\n        }\n        if (res.code === 10001 && res.msg === \"账号错误\") {\n          message.error(\"Account error\");\n          return;\n        }\n        if (res.code === 10002 && res.msg === \"密码错误\") {\n          message.error(\"wrong password\");\n          return;\n        }\n        if (\n          res.code === 0 &&\n          res.msg === \"success\" &&\n          res.success.roleId === 1\n        ) {\n          message.error(\n            \"You do not have the authority of a doctor, please contact the administrator or customer service\",\n            10\n          );\n          return;\n        }\n        if (res.code === 10004 && res.msg === \"账号被限制\") {\n          message.error(\n            \"The account is restricted, please contact the management\",\n            10\n          );\n          return;\n        }\n        if (res.code === 10003) {\n          message.error(\"The password or email is incorrect, please re-enter\");\n          return;\n        }\n\n        if (res.code === 0 && res.msg === \"success\") {\n          this.timer && clearInterval(this.timer);\n          console.log(\"账号密码正确，登录进去了\");\n          let { userWorkplace, lastOrganization, token } = res.success;\n          storage.token = token;\n          storage.userId = \"\";\n          let data = {\n            email: email.replace(/(^\\s*)/g, \"\"),\n            hash,\n          };\n          data = JSON.stringify(data);\n          if (isRemember === true) {\n            storage.signIn = data;\n          } else {\n            storage.signIn = \"\";\n          }\n          storage.saveSign = data;\n\n          storage.userId = res.success.userId;\n          storage.roleId = res.success.roleId;\n\n          //每次登陆后清空宠物列表缓存的数据\n          storage.doctorList = \"\";\n          storage.defaultCurrent = \"\";\n\n          //由于后台接口原因，导致这里的最后工作场所可能不是自己的，因此下面全注释掉。改成如果有多个工作场所则跳转到选择工作场所界面，不是多个则跳转到选择宠物界面\n          if (res.success.lastWorkplaceId) {\n            storage.lastWorkplaceId = res.success.lastWorkplaceId;\n          } else {\n            storage.lastWorkplaceId = \"\";\n          }\n\n          if (res.success.lastOrganization) {\n            storage.lastOrganization = res.success.lastOrganization;\n          } else {\n            storage.lastOrganization = \"\";\n          }\n\n          console.log(\"----------\", userWorkplace, userWorkplace.length);\n\n          if (userWorkplace) {\n            storage.userWorkplace = JSON.stringify(userWorkplace);\n            let connectionKey = \"\";\n            for (let i = 0; i < userWorkplace.length; i++) {\n              const element = userWorkplace[i];\n              if (element.organizationEntity) {\n                if (\n                  element.organizationEntity.organizationId === lastOrganization\n                ) {\n                  if (element.organizationEntity.connectionKey) {\n                    connectionKey = element.organizationEntity.connectionKey;\n                  }\n                  if (element.roleId) {\n                    console.log(element.roleId);\n                    storage.roleId = element.roleId;\n                  }\n\n                  break;\n                }\n              }\n            }\n            console.log(\"----------key值为：\", connectionKey);\n            storage.connectionKey = connectionKey;\n          } else {\n            storage.userWorkplace = \"\";\n            storage.connectionKey = \"\";\n          }\n\n          this.props.history.push(\"/MainBody\");\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          spin: false,\n        });\n        console.log(err);\n      });\n  };\n\n  _signUp = (e) => {\n    e.preventDefault();\n    this.props.history.push(\"/uesr/logUp/VetPrifile\");\n  };\n  _change = () => {\n    let { isCode } = this.state;\n    message.destroy();\n    if (isCode === false) {\n      this._getQRCode();\n    } else {\n      this.timer && clearInterval(this.timer);\n      num = 0;\n      this.setState({\n        isExpired: false,\n      });\n    }\n    this.setState({ isCode: !this.state.isCode });\n  };\n  //二维码界面\n  _qrCode = () => {\n    let { isCode, baseUrl, isExpired, isLoadQrCode } = this.state;\n    let imgOpacity = isLoadQrCode ? (baseUrl ? \"0.1\" : 0.5) : \"1\";\n\n    if (!isExpired) {\n      const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n      return (\n        <div className=\"qrcode\">\n          <img\n            src={`data:image/jpeg;base64,${baseUrl}`}\n            alt=\"\"\n            style={{\n              opacity: \"1\",\n              width: px(120),\n              height: px(120),\n              opacity: imgOpacity,\n            }}\n          />\n          {isLoadQrCode && (\n            // true &&\n\n            <div className=\"err\">\n              <Spin\n                indicator={antIcon}\n                tip=\"Loading...\"\n                style={{ fontSize: 16, color: \"#e1206d\" }}\n              />\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"qrcode\">\n          <img\n            src={`data:image/jpeg;base64,${baseUrl}`}\n            alt=\"\"\n            style={{ opacity: \"0.1\", width: px(120), height: px(120) }}\n          />\n\n          <div className=\"err\">\n            <div className=\"errText\">QR code has expired</div>\n            <div\n              className=\"btn\"\n              style={{ width: px(145), height: px(35), marginTop: px(10) }}\n              onClick={this.refresh}\n            >\n              Refresh\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n  //点击refresh按钮\n  refresh = () => {\n    this.setState({\n      isExpired: false,\n    });\n    num = 0;\n    this._getQRCode();\n  };\n  beforeDiv = () => {\n    return <img src={back_hui} alt=\"\" style={{ width: px(15) }} />;\n  };\n  afterDiv = () => {\n    return <img src={back_white} alt=\"\" style={{ width: px(15) }} />;\n  };\n\n  render() {\n    let { isCode, baseUrl } = this.state;\n    let code = isCode ? \"icon-diannao-copy\" : \"icon-erweima-copy\";\n    return (\n      <div id=\"signIn\">\n        <div\n          className=\"heaed\"\n          style={{ paddingTop: px(10), paddingRight: px(20) }}\n        >\n          <div className=\"l\">\n            <MouseDiv\n              className=\"mouseDiv\"\n              beforeDiv={this.beforeDiv}\n              afterDiv={this.afterDiv}\n              divClick={() => {\n                this.props.history.push(\"/\");\n              }}\n            />\n          </div>\n          <div className=\"r\">\n            <MinClose />\n          </div>\n        </div>\n\n        <div className=\"body\">\n          <div className=\"logo\">\n            <img src={mellaLogo} alt=\"\" style={{ width: px(120) }} />\n          </div>\n          <div className=\"body\" style={{ position: \"relative\" }}>\n            <div\n              className=\"text\"\n              style={{\n                fontSize: px(28),\n                marginBottom: px(20),\n                marginTop: px(30),\n              }}\n            >\n              Please enter email <br />\n              and password\n            </div>\n\n            <div className=\"inpF\">\n              <Input\n                className=\"inp\"\n                style={{\n                  width: px(310),\n                  height: px(45),\n                  marginLeft: px(6),\n                  marginBottom: px(18),\n                  fontSize: px(18),\n                }}\n                value={this.state.email}\n                placeholder=\"rachel@friends.com\"\n                bordered={false}\n                onChange={(item) => {\n                  let str = item.target.value;\n                  this.setState({\n                    email: str,\n                  });\n                }}\n              />\n              <Input.Password\n                className=\"inp\"\n                style={{\n                  width: px(310),\n                  height: px(45),\n                  marginLeft: px(6),\n                  marginBottom: px(18),\n                  fontSize: px(18),\n                }}\n                visibilityToggle={false}\n                value={this.state.hash}\n                placeholder=\"********\"\n                bordered={false}\n                onChange={(item) => {\n                  let str = item.target.value;\n                  this.setState({\n                    hash: str,\n                  });\n                }}\n                onKeyDown={(e) => {\n                  if (e.keyCode === 13) {\n                    this._continue();\n                  }\n                }}\n              />\n\n              <div\n                className=\"text\"\n                style={{\n                  fontSize: px(28),\n                  lineHeight: px(1),\n                  marginTop: px(10),\n                  marginBottom: px(20),\n                }}\n              >\n                {\"Or scan QR Code\"}\n              </div>\n            </div>\n\n            {this._qrCode()}\n            <div\n              className=\"littleText flex\"\n              style={{\n                fontSize: px(12),\n                marginTop: px(10),\n                marginBottom: px(10),\n              }}\n            >\n              Go to your Mella mobile app to access\n              <br />\n              the QR scanner\n            </div>\n            <div className=\"stay\">\n              <div className=\"remember\">\n                <p style={{ fontSize: px(16) }}>Stay Signed In</p>\n                <div\n                  className=\"box\"\n                  style={{ width: px(20), height: px(20), marginLeft: px(12) }}\n                  onClick={() => {\n                    let { isRemember } = this.state;\n                    this.setState({\n                      isRemember: !isRemember,\n                    });\n                    storage.isRemember = !isRemember;\n                  }}\n                >\n                  {this.state.isRemember && <img src={dui} alt=\"\" />}\n                </div>\n              </div>\n              <div\n                className=\"forgot\"\n                style={{ fontSize: px(16) }}\n                onMouseDown={() => {\n                  let forget = document.querySelectorAll(\"#signIn .forgot\");\n                  forget[0].style.opacity = 0.5;\n                }}\n                onMouseUp={() => {\n                  document.querySelectorAll(\n                    \"#signIn .forgot\"\n                  )[0].style.opacity = 1;\n                  if (this.state.email) {\n                    temporaryStorage.forgotPassword_email = this.state.email;\n                  }\n\n                  this.props.history.push(\"/user/login/forgotPassword\");\n                }}\n              >\n                Forgot?\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div\n          className=\"button11\"\n          style={{ backgroundColor: \"#E7E7E7\", padding: `${px(32)}px 0` }}\n        >\n          <div\n            className=\"btn1 flex\"\n            onClick={this._continue}\n            style={{ height: px(40) }}\n          >\n            <p>{`CONTINUE`}</p>\n          </div>\n\n          <div className=\"text2\" style={{ marginTop: px(12) }}>\n            <p style={{ fontSize: px(17) }}>\n              Do not have an account?{\" \"}\n              <a href=\"#\" onClick={this._signUp}>\n                Sign Up\n              </a>\n            </p>\n          </div>\n        </div>\n\n        {this.state.spin && (\n          <div className=\"modal\">\n            <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\n              <LoadingOutlined\n                style={{ fontSize: 30, color: \"#fff\", marginTop: px(-30) }}\n              />\n            </div>\n            <p>loading...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\myModal\\MyModal.jsx",["393","394"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\InitDate.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actionTypes\\userType.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\home\\Home.jsx",["395","396"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx",["397","398","399"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\advancedSettings\\AdvancedSettings.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx",["400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Switch,\r\n  Select,\r\n  message\r\n} from 'antd'\r\n\r\n\r\n\r\n\r\nimport Heart from '../../../utils/heard/Heard'\r\nimport Slider from '../../../utils/slider/Slider'\r\nimport Button from '../../../utils/button/Button'\r\nimport electronStore from '../../../utils/electronStore'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport { mTop, px } from '../../../utils/px';\r\nimport MyModal from '../../../utils/myModal/MyModal'\r\nimport parent from './../../../assets/img/parent.png'\r\nimport dog from '../../../assets/images/reddog.png'\r\nimport cat from '../../../assets/images/redcat.png'\r\nimport other from '../../../assets/images/redother.png'\r\nimport selectphoto from './../../../assets/images/sel.png'\r\nimport close from './../../../assets/img/close.png'\r\nimport dui from './../../../assets/images/dui.png'\r\n\r\nimport Avatar from './../../avatar/Avatar'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport moment from 'moment'\r\nimport './veterinarians.less'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class Veterinarians extends Component {\r\n\r\n  state = {\r\n    parentList: [],\r\n    petList: [],\r\n    loading: false,\r\n    parentSearchArr: [],\r\n    petSearchArr: [],\r\n    searchText: '',\r\n    clickVet: false,\r\n    userList: [],\r\n    clickUserItem: {},\r\n    isAdmin: false,\r\n    imageId: null,\r\n    imgUrl: '',\r\n    doctorArr: [],\r\n    dockerSearchArr: []\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    this._getExam()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true,\r\n      spin: false\r\n    })\r\n    let params = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    fetchRequest(`/organization/listDoctorsByAdmin/${storage.lastOrganization}`, 'GET', params)\r\n      .then(res => {\r\n        console.log('人员列表', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true && res.code === 20000) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              name: `${lastName} ${firstName}`,\r\n              userId,\r\n              email,\r\n              birthday,\r\n              isLimit,\r\n              isDeleted,\r\n              phone,\r\n              url,\r\n              firstName, lastName, roleId\r\n            }\r\n            data.push(json)\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            doctorArr: data,\r\n            // parentList: data //这里只是测试，后期删除\r\n\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  list = () => {\r\n    let { doctorArr, dockerSearchArr, searchText } = this.state\r\n    let data = searchText.length > 0 ? dockerSearchArr : doctorArr\r\n\r\n\r\n\r\n\r\n    let options = data.map((item, index) => {\r\n      let { url, firstName, lastName } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n      if (!url) {\r\n        images = `url(${parent})`\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20), float: `${index % 2 === 0 ? 'left' : 'right'}` }}\r\n          onClick={() => {\r\n            console.log(item);\r\n            let { name, email, phone, roleId } = item\r\n            let isAdmin = roleId === '3' ? true : false\r\n\r\n            this.setState({\r\n              clickVet: true,\r\n              clickUserItem: item,\r\n              name,\r\n              email,\r\n              phone,\r\n              isAdmin,\r\n              imgUrl: ''\r\n            })\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div\r\n              className='img'\r\n              style={{\r\n                width: px(50),\r\n                height: px(50),\r\n                marginRight: px(20),\r\n                borderRadius: px(60),\r\n                backgroundImage: images,\r\n              }}>\r\n\r\n              <div\r\n                className=\"green\"\r\n                style={{\r\n                  width: px(8),\r\n                  height: px(8),\r\n                  borderRadius: px(8),\r\n                  backgroundColor: '#7ED266',\r\n                  right: px(-5),\r\n                  top: px(-3)\r\n\r\n                }}\r\n\r\n              />\r\n\r\n            </div>\r\n\r\n            <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    let liStyle = { backgroundColor: '#fff', }\r\n    if (this.state.petList.length > 16) {\r\n      liStyle = { height: px(750), overflowY: 'auto', }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='petList'>\r\n        <ul style={liStyle}>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  inputChange = (text) => {\r\n    let search = text.target.value\r\n    this.setState({\r\n      searchText: search\r\n    })\r\n\r\n    let { doctorArr } = this.state\r\n\r\n    let keyWord = search\r\n\r\n    let parentSearchData = []\r\n\r\n    for (let i = 0; i < doctorArr.length; i++) {\r\n      let { email, phone, name, } = doctorArr[i]\r\n      email = email ? email.toLowerCase() : ''\r\n      phone = phone ? phone.toLowerCase() : ''\r\n      name = name ? name.toLowerCase() : ''\r\n      let keyLower = keyWord.toLowerCase()\r\n      if (`${email}`.indexOf(keyLower) !== -1 || `${phone}`.indexOf(keyLower) !== -1 || `${name}`.indexOf(keyLower) !== -1) {\r\n        parentSearchData.push(doctorArr[i])\r\n      }\r\n    }\r\n\r\n\r\n    this.setState({\r\n\r\n      dockerSearchArr: parentSearchData\r\n    })\r\n\r\n\r\n  }\r\n  _petSpecies = () => {\r\n\r\n\r\n    let { clickUserItem, isAdmin } = this.state\r\n    let { url } = clickUserItem\r\n    this.avatar = url ? url : selectphoto\r\n    return (\r\n      <div className=\"petSpecies\">\r\n\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" style={{ height: px(100) }} />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n              getAllInfo={(val) => {\r\n                console.log('图片信息', val);\r\n                this.setState({\r\n                  imgUrl: val.url\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Set Role:</p>\r\n\r\n            <div className=\"ones\" style={{ marginTop: px(8) }}>\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>User</p>\r\n              </div> */}\r\n              <div className=\"one\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isAdmin: !this.state.isAdmin\r\n                  })\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"chect\"\r\n                  style={{ width: px(18), height: px(18), marginRight: px(15) }}\r\n\r\n                >\r\n                  {isAdmin && <img src={dui} alt=\"\" />}\r\n\r\n                </div>\r\n                <p>Admin</p>\r\n              </div>\r\n\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>Owner</p>\r\n              </div> */}\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  _petName = () => {\r\n    let { name, email } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\" style={{ marginTop: px(60) }}>\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50), }}>\r\n            <p>Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  name: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _phone = () => {\r\n    let { areas, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Areas of Expertise</p>\r\n            <input\r\n              type=\"text\"\r\n              value={areas}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  areas: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  changeUserInfo = () => {\r\n    let { name, email, phone, clickUserItem, imageId, isAdmin, petList, imgUrl } = this.state\r\n    let { userId } = clickUserItem\r\n    let roleId = isAdmin ? '3' : '2'\r\n    let params = {\r\n      firstName: '',\r\n      lastName: name,\r\n      email,\r\n      phone,\r\n\r\n      roleId\r\n    }\r\n    if (imageId) {\r\n      params.imageId = imageId\r\n    }\r\n    message.destroy()\r\n    this.setState({\r\n      clickVet: false,\r\n      loading: true\r\n    })\r\n    console.log('入参', params);\r\n    fetchRequest(`/new/admin/users/${userId}`, 'PATCH', params, storage.token)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.flag && res.code === 20000) {\r\n          for (let i = 0; i < petList.length; i++) {\r\n            const element = petList[i];\r\n            if (clickUserItem.userId === element.userId) {\r\n              element.name = name\r\n              element.email = email\r\n              element.phone = phone\r\n              if (imageId) {\r\n                element.url = imgUrl\r\n              }\r\n\r\n              break\r\n            }\r\n\r\n          }\r\n          this.setState({\r\n            loading: false,\r\n            petList\r\n          })\r\n          message.success('User information changed successfully')\r\n        } else {\r\n          this.setState({\r\n            loading: false\r\n          })\r\n          message.error('User information change failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        message.error('User information change failed')\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let bodyHeight = '92%'\r\n    try {\r\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\r\n    } catch (error) {\r\n\r\n    }\r\n    return (\r\n      <div id=\"veterinarians\">\r\n        <div className=\"heard\">\r\n          <Heart\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\r\n          <div className=\"title\">\r\n            <h1 style={{ fontSize: px(38) }}>{`Veterinarians`}</h1>\r\n            <div className=\"btn\" style={{ fontSize: px(24), height: px(45) }}>+ New Vet</div>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <div className=\"searchL\">\r\n              <input\r\n                type=\"text\"\r\n                style={{ paddingLeft: px(25), height: px(34) }}\r\n                placeholder=\"&#xe62c; Search \"\r\n                value={this.state.searchText}\r\n                onChange={(text) => {\r\n                  this.inputChange(text)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\r\n              Search\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"lists\">\r\n            {/* <div className=\"listsL\"> */}\r\n            {this.list()}\r\n            {/* </div> */}\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <MyModal visible={this.state.loading} />\r\n\r\n        <MyModal\r\n          visible={this.state.clickVet}\r\n          element={\r\n            <div className='vetInfo'>\r\n\r\n              <div className=\"info\" >\r\n                <div className=\"close\" style={{ height: px(50) }}>\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    src={close} style={{ width: px(20) }} />\r\n                </div>\r\n                {this._petSpecies()}\r\n                {this._petName()}\r\n                {this._phone()}\r\n              </div>\r\n              <div className=\"fotBtn\">\r\n                <div className=\"text\">\r\n                  <a\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    href=\"#\">Delete </a>\r\n                  &nbsp;<p>{` ${this.state.name} from Workplace`}</p>\r\n                </div>\r\n                <div className=\"btn\"\r\n                  style={{ marginTop: px(10) }}\r\n                  onClick={this.changeUserInfo}\r\n\r\n                >Save </div>\r\n\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\allPetsPage\\index.jsx",["416","417","418","419","420","421","422","423","424","425","426","427"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["428","429","430","431","432","433","434","435","436","437","438","439"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Progress,\n  Space,\n  Table,\n  Tag,\n  Badge,\n  Modal,\n  Popconfirm,\n  message,\n} from \"antd\";\nimport measuredTable_1 from \"./../../../assets/img/measuredTable_1.png\";\nimport measuredTable_2 from \"./../../../assets/img/measuredTable_2.png\";\nimport measuredTable_3 from \"./../../../assets/img/measuredTable_3.png\";\nimport EditCircle from \"./../../../assets/img/EditCircle.png\";\nimport Delete from \"./../../../assets/img/Delete.png\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../../store/actions\";\nimport Draggable from \"react-draggable\";\nimport { fetchRequest } from \"../../../utils/FetchUtil1\";\nimport { px, mTop } from \"../../../utils/px.js\";\nimport moment from \"moment\";\nimport \"./measuredData.less\";\nimport electronStore from \"../../../utils/electronStore\";\n\nconst MeasuredData = ({\n  petMessage,\n  hardwareMessage,\n  setMellaConnectStatusFun,\n}) => {\n  let { mellaMeasureValue, mellaConnectStatus, mellaMeasurePart } =\n    hardwareMessage;\n  let draggleRef = React.createRef();\n  let { petId, memo } = petMessage;\n  let storage = window.localStorage;\n  let hisHe = mTop(200);\n  try {\n    let historyElement = document.querySelectorAll(\".measurementBox .table\");\n    hisHe = historyElement[0].clientHeight - mTop(60);\n  } catch (error) {}\n  const [petTemperatureData, setPetTemperatureData] = useState([]); //存储宠物历史温度数据\n  const [disabled, setDisabled] = useState(true); //model是否可拖拽\n  const [visible, setVisible] = useState(false); //model框是否显示\n  const [newMemo, setNewMemo] = useState(\"\"); //note内容\n  const [petMessages, setPetMessages] = useState({}); //接收点击了那个的值\n  const [saveType, setSaveType] = useState(false); //是否隐藏按钮\n  const [bounds, setBounds] = useState({\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  });\n  const [isHua, setIsHua] = useState(true);\n  //表格渲染\n  const columns = [\n    {\n      title: \"Dat\",\n      dataIndex: \"createTime\",\n      width: \"14%\",\n      render: (text, record) => moment(text).format(\"MMM D\"),\n    },\n    {\n      title: \"Tim\",\n      dataIndex: \"createTime\",\n      width: \"20%\",\n      render: (text, record) => moment(text).format(\"hh:mm A\"),\n    },\n    {\n      title: `Temp(${isHua ? \"℉\" : \"℃\"})`,\n      dataIndex: \"temperature\",\n      width: \"16%\",\n      render: (text, record) => {\n        let num = parseFloat(text);\n        if (isHua) {\n          num = parseInt((num * 1.8 + 32) * 10) / 10;\n        } else {\n          num = num.toFixed(1);\n        }\n\n        return <Badge color={color()} text={num} />;\n      },\n    },\n    {\n      title: \"Placeme\",\n      dataIndex: \"petVitalTypeId\",\n      width: \"15%\",\n      render: (text, record) => {\n        if (text === 1) {\n          return <img src={measuredTable_2} />;\n        } else if (text === 3) {\n          return <img src={measuredTable_1} />;\n        } else if (text === 4) {\n          return <img src={measuredTable_3} />;\n        } else {\n          return <img src={measuredTable_2} />;\n        }\n      },\n    },\n    {\n      title: \"Note\",\n      dataIndex: \"memo\",\n      width: \"20%\",\n      render: (text, record) => text,\n    },\n    {\n      key: \"action\",\n      width: \"15%\",\n      render: (text, record) => (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            justifyContent: \"space-around\",\n          }}\n        >\n          <img\n            className=\"operationIcon\"\n            src={EditCircle}\n            onClick={() => {\n              setVisible(true);\n              setPetMessages(record);\n            }}\n          />\n          <Popconfirm\n            title=\"Sure to delete?\"\n            onConfirm={() => deletePetMessage(record.examId)}\n          >\n            <img src={Delete} />\n          </Popconfirm>\n        </div>\n      ),\n    },\n  ];\n  //根据温度判断指示文字颜色\n  const color = () => {\n    if (mellaMeasureValue > 40) {\n      return \"#e1206d\";\n    } else if (_.inRange(_.round(mellaMeasureValue), 38, 40)) {\n      return \"#58bde6\";\n    } else {\n      return \"#98da86\";\n    }\n  };\n  //圆滑里面的文字\n  const ProgressTitle = (percent) => {\n    //根据温度判断指示文字\n    const title = () => {\n      if (mellaMeasureValue > 40) {\n        return \"Danger\";\n      } else if (_.inRange(_.round(mellaMeasureValue), 38, 40)) {\n        return \"Normal\";\n      } else {\n        return \"Low\";\n      }\n    };\n    return (\n      <>\n        <p style={{ color: { color } }} className=\"ProgressTitle\">\n          {getTemp(percent)}\n\n          <span style={{ color: { color } }} className=\"symbol\">{`${\n            isHua ? \"℉\" : \"℃\"\n          }`}</span>\n        </p>\n        <p style={{ color: { color } }} className=\"ProgressTitle\">\n          {title()}\n        </p>\n      </>\n    );\n  };\n  //获取历史宠物温度数据\n  const getPetTemperatureData = () => {\n    fetchRequest(`/pet/getPetExamByPetId/${petId}`, \"GET\", \"\")\n      .then((res) => {\n        console.log(\"历史温度记录\", res);\n        if (res.flag === true) {\n          let arr = [];\n          for (let i = 0; i < res.data.length; i++) {\n            const element = res.data[i];\n            if (element.temperature) {\n              arr.push(element);\n            }\n          }\n          setPetTemperatureData(_.orderBy(arr,'createTime','desc'));\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  //返回准备测量界面\n  const backConnectedPage = () => {\n    if (mellaConnectStatus != \"connected\") {\n      setMellaConnectStatusFun(\"connected\");\n    } else {\n      setMellaConnectStatusFun(\"disconnected\");\n    }\n  };\n  //保存数据\n  const saveData = () => {\n    let petVitalId = null;\n    switch (mellaMeasurePart) {\n      case \"腋温\":\n        petVitalId = 1;\n        break;\n      case \"肛温\":\n        petVitalId = 3;\n        break;\n      case \"耳温\":\n        petVitalId = 4;\n        break;\n      default:\n        petVitalId = 1;\n        break;\n    }\n    let params = {\n      petId: petId,\n      doctorId: storage.userId,\n      temperature: mellaMeasureValue,\n      petVitalTypeId: petVitalId,\n      memo: \"\",\n    };\n    fetchRequest(\"/exam/addClamantPetExam\", \"POST\", params)\n      .then((res) => {\n        if (res.flag === true) {\n          getPetTemperatureData();\n          setSaveType(true);\n          message.success(\"save successfully\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  //保存note\n  const save = () => {\n    let datas = {\n      memo: newMemo,\n    };\n    fetchRequest(`/pet/updatePetExam/${petMessages.examId}`, \"POST\", datas)\n      .then((res) => {\n        setVisible(false);\n        getPetTemperatureData();\n      })\n      .catch((err) => {\n        setVisible(false);\n        console.log(err);\n      });\n  };\n  //删除历史温度记录\n  const deletePetMessage = (examId) => {\n    fetchRequest(`/pet/deletePetExamByExamId/${examId}`, \"DELETE\").then(\n      (res) => {\n        if (res.flag === true) {\n          message.success(\"Successfully Delete\");\n          getPetTemperatureData();\n        } else {\n          message.error(\"Fail To Delete\");\n        }\n      }\n    );\n  };\n  //关闭弹窗\n  const handleCancel = (e) => {\n    setVisible(false);\n  };\n  const onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = draggleRef?.current?.getBoundingClientRect();\n    setBounds({\n      left: -targetRect?.left + uiData?.x,\n      right: clientWidth - (targetRect?.right - uiData?.x),\n      top: -targetRect?.top + uiData?.y,\n      bottom: clientHeight - (targetRect?.bottom - uiData?.y),\n    });\n  };\n  const getTemp = () => {\n    let num = parseFloat(mellaMeasureValue);\n    if (isHua) {\n      num = parseInt((num * 1.8 + 32) * 10) / 10;\n    } else {\n      num = parseFloat(num.toFixed(1));\n    }\n    return num;\n  };\n\n  useEffect(() => {\n    getPetTemperatureData();\n    return () => {};\n  }, [petMessage]);\n\n  useEffect(() => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (hardSet) {\n      let { isHua } = hardSet;\n      setIsHua(isHua);\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"measurementBox\">\n        <div className=\"progress\" style={{ height: px(400) }}>\n          <Progress\n            type=\"dashboard\"\n            percent={_.round(mellaMeasureValue, 1)}\n            gapDegree={30}\n            width={\"260px\"}\n            strokeWidth={\"8\"}\n            format={(percent) => ProgressTitle(percent)}\n            strokeColor={{\n              \"0%\": \"#7bd163\",\n              \"100%\": \"#19ade4\",\n            }}\n          />\n          {!saveType && (\n            <div className=\"buttonBox\">\n              <Button\n                style={{ backgroundColor: \"#e1206d\" }}\n                type=\"danger\"\n                shape=\"round\"\n                onClick={() => backConnectedPage()}\n              >\n                Discard\n              </Button>\n              <Button\n                style={{ backgroundColor: \"#e1206d\" }}\n                type=\"danger\"\n                shape=\"round\"\n                color=\"#e1206d\"\n                onClick={() => saveData()}\n              >\n                Save\n              </Button>\n            </div>\n          )}\n        </div>\n\n        <div className=\"listTitleBox1\">\n          <p className=\"listTitle\">History</p>\n        </div>\n        <div className=\"table\" style={{ height: mTop(300) }}>\n          <Table\n            rowKey={\"examId\"}\n            columns={columns}\n            dataSource={petTemperatureData}\n            className=\"measuredTable\"\n            pagination={false}\n            scroll={{\n              y: hisHe,\n            }}\n          ></Table>\n        </div>\n      </div>\n      {/*修改note弹窗 */}\n      <Modal\n        title={\n          <div\n            style={{\n              width: \"100%\",\n              cursor: \"move\",\n              height: \"20px\",\n              textAlign: \"center\",\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                setDisabled(false);\n              }\n            }}\n            onMouseOut={() => {\n              setDisabled(true);\n            }}\n            onFocus={() => {}}\n            onBlur={() => {}}\n          >\n            Edit Note\n          </div>\n        }\n        visible={visible}\n        onCancel={handleCancel}\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            onStart={(event, uiData) => onStart(event, uiData)}\n          >\n            <div ref={draggleRef}>{modal}</div>\n          </Draggable>\n        )}\n        footer={\n          [] // 设置footer为空，去掉 取消 确定默认按钮\n        }\n        destroyOnClose={true}\n      >\n        <div className=\"noteModal\">\n          <div className=\"noteModalText\">\n            <p style={{ width: \"80px\" }}>Notes</p>\n            <textarea\n              rows=\"5\"\n              cols=\"40\"\n              style={{ textIndent: \"10px\" }}\n              // value={petMessages.memo}\n              onChange={(val) => {\n                setNewMemo(val.target.value);\n              }}\n            ></textarea>\n          </div>\n          <div className=\"btn\" style={{ width: \"60%\" }} onClick={() => save()}>\n            Save Changes\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(MeasuredData);\n","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\help\\Help.jsx",["440"],"import React, { Component } from 'react'\r\n\r\nimport Heard from './../../../utils/heard/Heard'\r\nimport using from './../../../assets/images/using.png'\r\nimport measuring from './../../../assets/images/measuring.png'\r\nimport unassigned from './../../../assets/images/unassigned.png'\r\nimport adding from './../../../assets/images/adding.png'\r\nimport email from './../../../assets/images/email.png'\r\nimport phone from './../../../assets/images/phone.png'\r\nimport './help.less'\r\nimport { px } from './../../../utils/px'\r\nlet storage = window.localStorage;\r\n\r\nexport default class Help extends Component {\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n\r\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let list = [\r\n      {\r\n        img: using,\r\n        title: 'Using the app'\r\n      }, {\r\n        img: measuring,\r\n        title: 'Measuring with Mella'\r\n      }, {\r\n        img: unassigned,\r\n        title: 'Unassigned Readings'\r\n      },\r\n      {\r\n        img: adding,\r\n        title: 'Adding New Users'\r\n      },\r\n    ]\r\n    let num = 150 / list.length\r\n    let mar = num + 'px'\r\n    return (\r\n      <div id=\"help\">\r\n        <div className=\"heard\">\r\n          <Heard\r\n            menu8Click={() => {\r\n              switch (storage.identity) {\r\n                case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n                case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n                  break;\r\n                case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }}\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"title\">How can we help you?</div>\r\n          <div className=\"input\" style={{ marginTop: px(25) }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Describe you issue     &#xe63f;\"\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"list\" style={{ marginTop: px(50) }}>\r\n            <ul>\r\n              {list.map((data, index) => (\r\n                <li key={index}\r\n                  style={{ width: px(150), height: px(150) }}\r\n                >\r\n\r\n                  <>\r\n                    <img src={data.img} alt=\"\" style={{ height: px(80) }} />\r\n                    <p style={{ fontSize: px(19) }}>{data.title}</p>\r\n                  </>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popularArticles\" style={{ marginTop: px(80) }}>\r\n            <div className=\"text\">Popular Articles</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n          <div className=\"popularArticles tutorials\">\r\n            <div className=\"text\">Tutorials</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n\r\n          <div className=\"time\" style={{ marginTop: px(40) }}>\r\n            <p style={{ fontSize: px(30) }}>Still need help?</p>\r\n            <div className=\"line\" style={{ height: px(6) }}></div>\r\n            <p style={{ fontSize: px(30) }}>Monday - Friday: 9am - 5pm (ET)</p>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"foot\">\r\n          <div className=\"l\">\r\n            <img src={email} alt=\"\" style={{ height: px(50) }} />\r\n            <div className=\"text\" style={{ fontSize: px(18) }}>Drop us a line</div>\r\n            <a href=\"mailto:support@mella.ai\"\r\n              style={{ fontSize: px(18) }}\r\n              onClick={(e) => {\r\n                // e.preventDefault();\r\n                // let electron = window.electron\r\n                // electron.shell.openExternal(' https://www.mella.ai/')\r\n                // return false;\r\n              }}\r\n            >support@mella.ai</a>\r\n          </div>\r\n\r\n          <div className=\"l r\">\r\n            <img src={phone} alt=\"\" style={{ height: px(50) }} />\r\n            <div className=\"text\" style={{ fontSize: px(18) }}>Bark at Us!</div>\r\n            <div className=\"text\" style={{ fontSize: px(18) }}>201.977.6411</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\gender.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx",["441","442"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\index.jsx",["443","444","445","446","447","448","449"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\addScheduledPet\\index.jsx",["450","451","452","453","454","455","456","457","458","459","460","461"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchEszVet.js",["462","463"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503"],{"ruleId":"504","severity":1,"message":"505","line":8,"column":10,"nodeType":"506","messageId":"507","endLine":8,"endColumn":30},{"ruleId":"504","severity":1,"message":"508","line":18,"column":9,"nodeType":"506","messageId":"507","endLine":18,"endColumn":15},{"ruleId":"509","replacedBy":"510"},{"ruleId":"511","replacedBy":"512"},{"ruleId":"504","severity":1,"message":"513","line":8,"column":8,"nodeType":"506","messageId":"507","endLine":8,"endColumn":17},{"ruleId":"504","severity":1,"message":"505","line":9,"column":10,"nodeType":"506","messageId":"507","endLine":9,"endColumn":30},{"ruleId":"504","severity":1,"message":"514","line":20,"column":10,"nodeType":"506","messageId":"507","endLine":20,"endColumn":14},{"ruleId":"504","severity":1,"message":"515","line":20,"column":16,"nodeType":"506","messageId":"507","endLine":20,"endColumn":18},{"ruleId":"504","severity":1,"message":"516","line":24,"column":7,"nodeType":"506","messageId":"507","endLine":24,"endColumn":14},{"ruleId":"504","severity":1,"message":"517","line":321,"column":21,"nodeType":"506","messageId":"507","endLine":321,"endColumn":29},{"ruleId":"504","severity":1,"message":"518","line":321,"column":31,"nodeType":"506","messageId":"507","endLine":321,"endColumn":37},{"ruleId":"519","severity":1,"message":"520","line":481,"column":36,"nodeType":"521","endLine":481,"endColumn":71},{"ruleId":"509","replacedBy":"522"},{"ruleId":"511","replacedBy":"523"},{"ruleId":"504","severity":1,"message":"524","line":4,"column":3,"nodeType":"506","messageId":"507","endLine":4,"endColumn":9},{"ruleId":"504","severity":1,"message":"525","line":12,"column":8,"nodeType":"506","messageId":"507","endLine":12,"endColumn":14},{"ruleId":"504","severity":1,"message":"526","line":13,"column":8,"nodeType":"506","messageId":"507","endLine":13,"endColumn":14},{"ruleId":"504","severity":1,"message":"527","line":14,"column":8,"nodeType":"506","messageId":"507","endLine":14,"endColumn":21},{"ruleId":"504","severity":1,"message":"528","line":15,"column":8,"nodeType":"506","messageId":"507","endLine":15,"endColumn":24},{"ruleId":"504","severity":1,"message":"514","line":16,"column":10,"nodeType":"506","messageId":"507","endLine":16,"endColumn":14},{"ruleId":"504","severity":1,"message":"529","line":25,"column":10,"nodeType":"506","messageId":"507","endLine":25,"endColumn":22},{"ruleId":"504","severity":1,"message":"508","line":27,"column":9,"nodeType":"506","messageId":"507","endLine":27,"endColumn":15},{"ruleId":"504","severity":1,"message":"530","line":43,"column":11,"nodeType":"506","messageId":"507","endLine":43,"endColumn":17},{"ruleId":"504","severity":1,"message":"531","line":43,"column":19,"nodeType":"506","messageId":"507","endLine":43,"endColumn":24},{"ruleId":"504","severity":1,"message":"532","line":59,"column":9,"nodeType":"506","messageId":"507","endLine":59,"endColumn":22},{"ruleId":"504","severity":1,"message":"533","line":78,"column":11,"nodeType":"506","messageId":"507","endLine":78,"endColumn":19},{"ruleId":"509","replacedBy":"534"},{"ruleId":"511","replacedBy":"535"},{"ruleId":"504","severity":1,"message":"536","line":4,"column":10,"nodeType":"506","messageId":"507","endLine":4,"endColumn":15},{"ruleId":"504","severity":1,"message":"526","line":4,"column":17,"nodeType":"506","messageId":"507","endLine":4,"endColumn":23},{"ruleId":"504","severity":1,"message":"537","line":4,"column":34,"nodeType":"506","messageId":"507","endLine":4,"endColumn":38},{"ruleId":"504","severity":1,"message":"538","line":4,"column":40,"nodeType":"506","messageId":"507","endLine":4,"endColumn":47},{"ruleId":"504","severity":1,"message":"505","line":5,"column":10,"nodeType":"506","messageId":"507","endLine":5,"endColumn":30},{"ruleId":"504","severity":1,"message":"539","line":5,"column":32,"nodeType":"506","messageId":"507","endLine":5,"endColumn":44},{"ruleId":"504","severity":1,"message":"540","line":9,"column":8,"nodeType":"506","messageId":"507","endLine":9,"endColumn":18},{"ruleId":"504","severity":1,"message":"541","line":18,"column":8,"nodeType":"506","messageId":"507","endLine":18,"endColumn":16},{"ruleId":"504","severity":1,"message":"542","line":19,"column":8,"nodeType":"506","messageId":"507","endLine":19,"endColumn":16},{"ruleId":"504","severity":1,"message":"543","line":20,"column":8,"nodeType":"506","messageId":"507","endLine":20,"endColumn":18},{"ruleId":"504","severity":1,"message":"544","line":21,"column":8,"nodeType":"506","messageId":"507","endLine":21,"endColumn":16},{"ruleId":"504","severity":1,"message":"545","line":23,"column":8,"nodeType":"506","messageId":"507","endLine":23,"endColumn":15},{"ruleId":"504","severity":1,"message":"515","line":24,"column":26,"nodeType":"506","messageId":"507","endLine":24,"endColumn":28},{"ruleId":"546","severity":1,"message":"547","line":60,"column":8,"nodeType":"548","endLine":60,"endColumn":10,"suggestions":"549"},{"ruleId":"546","severity":1,"message":"550","line":102,"column":8,"nodeType":"548","endLine":102,"endColumn":38,"suggestions":"551"},{"ruleId":"509","replacedBy":"552"},{"ruleId":"511","replacedBy":"553"},{"ruleId":"504","severity":1,"message":"526","line":2,"column":10,"nodeType":"506","messageId":"507","endLine":2,"endColumn":16},{"ruleId":"504","severity":1,"message":"554","line":2,"column":36,"nodeType":"506","messageId":"507","endLine":2,"endColumn":44},{"ruleId":"504","severity":1,"message":"555","line":3,"column":10,"nodeType":"506","messageId":"507","endLine":3,"endColumn":22},{"ruleId":"504","severity":1,"message":"556","line":23,"column":18,"nodeType":"506","messageId":"507","endLine":23,"endColumn":24},{"ruleId":"504","severity":1,"message":"557","line":27,"column":10,"nodeType":"506","messageId":"507","endLine":27,"endColumn":17},{"ruleId":"504","severity":1,"message":"558","line":27,"column":19,"nodeType":"506","messageId":"507","endLine":27,"endColumn":29},{"ruleId":"559","severity":1,"message":"560","line":62,"column":16,"nodeType":"521","endLine":62,"endColumn":41},{"ruleId":"559","severity":1,"message":"560","line":64,"column":16,"nodeType":"521","endLine":64,"endColumn":41},{"ruleId":"559","severity":1,"message":"560","line":66,"column":16,"nodeType":"521","endLine":66,"endColumn":41},{"ruleId":"559","severity":1,"message":"560","line":68,"column":16,"nodeType":"521","endLine":68,"endColumn":41},{"ruleId":"546","severity":1,"message":"561","line":74,"column":3,"nodeType":"506","endLine":74,"endColumn":12,"suggestions":"562"},{"ruleId":"509","replacedBy":"563"},{"ruleId":"511","replacedBy":"564"},{"ruleId":"504","severity":1,"message":"565","line":6,"column":5,"nodeType":"506","messageId":"507","endLine":6,"endColumn":10},{"ruleId":"566","severity":1,"message":"567","line":18,"column":16,"nodeType":"568","messageId":"569","endLine":18,"endColumn":18},{"ruleId":"566","severity":1,"message":"567","line":61,"column":16,"nodeType":"568","messageId":"569","endLine":61,"endColumn":18},{"ruleId":"566","severity":1,"message":"567","line":95,"column":16,"nodeType":"568","messageId":"569","endLine":95,"endColumn":18},{"ruleId":"509","replacedBy":"570"},{"ruleId":"511","replacedBy":"571"},{"ruleId":"509","replacedBy":"572"},{"ruleId":"511","replacedBy":"573"},{"ruleId":"504","severity":1,"message":"574","line":28,"column":26,"nodeType":"506","messageId":"507","endLine":28,"endColumn":32},{"ruleId":"504","severity":1,"message":"575","line":28,"column":34,"nodeType":"506","messageId":"507","endLine":28,"endColumn":39},{"ruleId":"546","severity":1,"message":"576","line":115,"column":6,"nodeType":"548","endLine":115,"endColumn":8,"suggestions":"577"},{"ruleId":"559","severity":1,"message":"560","line":167,"column":17,"nodeType":"521","endLine":167,"endColumn":45},{"ruleId":"509","replacedBy":"578"},{"ruleId":"511","replacedBy":"579"},{"ruleId":"504","severity":1,"message":"580","line":2,"column":10,"nodeType":"506","messageId":"507","endLine":2,"endColumn":20},{"ruleId":"504","severity":1,"message":"581","line":4,"column":5,"nodeType":"506","messageId":"507","endLine":4,"endColumn":9},{"ruleId":"504","severity":1,"message":"582","line":5,"column":5,"nodeType":"506","messageId":"507","endLine":5,"endColumn":12},{"ruleId":"504","severity":1,"message":"526","line":6,"column":5,"nodeType":"506","messageId":"507","endLine":6,"endColumn":11},{"ruleId":"504","severity":1,"message":"583","line":7,"column":5,"nodeType":"506","messageId":"507","endLine":7,"endColumn":10},{"ruleId":"504","severity":1,"message":"514","line":15,"column":10,"nodeType":"506","messageId":"507","endLine":15,"endColumn":14},{"ruleId":"504","severity":1,"message":"584","line":15,"column":20,"nodeType":"506","messageId":"507","endLine":15,"endColumn":24},{"ruleId":"504","severity":1,"message":"527","line":16,"column":8,"nodeType":"506","messageId":"507","endLine":16,"endColumn":21},{"ruleId":"585","severity":1,"message":"586","line":49,"column":36,"nodeType":"587","messageId":"588","endLine":49,"endColumn":38},{"ruleId":"585","severity":1,"message":"586","line":65,"column":32,"nodeType":"587","messageId":"588","endLine":65,"endColumn":34},{"ruleId":"585","severity":1,"message":"586","line":74,"column":37,"nodeType":"587","messageId":"588","endLine":74,"endColumn":39},{"ruleId":"585","severity":1,"message":"586","line":80,"column":23,"nodeType":"587","messageId":"588","endLine":80,"endColumn":25},{"ruleId":"585","severity":1,"message":"586","line":82,"column":31,"nodeType":"587","messageId":"588","endLine":82,"endColumn":33},{"ruleId":"566","severity":1,"message":"567","line":86,"column":32,"nodeType":"568","messageId":"569","endLine":86,"endColumn":34},{"ruleId":"546","severity":1,"message":"589","line":104,"column":8,"nodeType":"548","endLine":104,"endColumn":10,"suggestions":"590"},{"ruleId":"585","severity":1,"message":"586","line":114,"column":39,"nodeType":"587","messageId":"588","endLine":114,"endColumn":41},{"ruleId":"585","severity":1,"message":"586","line":115,"column":49,"nodeType":"587","messageId":"588","endLine":115,"endColumn":51},{"ruleId":"566","severity":1,"message":"591","line":124,"column":39,"nodeType":"568","messageId":"569","endLine":124,"endColumn":41},{"ruleId":"585","severity":1,"message":"586","line":137,"column":39,"nodeType":"587","messageId":"588","endLine":137,"endColumn":41},{"ruleId":"546","severity":1,"message":"592","line":152,"column":8,"nodeType":"548","endLine":152,"endColumn":20,"suggestions":"593"},{"ruleId":"519","severity":1,"message":"594","line":202,"column":21,"nodeType":"521","endLine":207,"endColumn":22},{"ruleId":"504","severity":1,"message":"595","line":2,"column":5,"nodeType":"506","messageId":"507","endLine":2,"endColumn":14},{"ruleId":"504","severity":1,"message":"596","line":3,"column":5,"nodeType":"506","messageId":"507","endLine":3,"endColumn":13},{"ruleId":"504","severity":1,"message":"597","line":5,"column":10,"nodeType":"506","messageId":"507","endLine":5,"endColumn":15},{"ruleId":"504","severity":1,"message":"598","line":16,"column":8,"nodeType":"506","messageId":"507","endLine":16,"endColumn":9},{"ruleId":"504","severity":1,"message":"556","line":19,"column":18,"nodeType":"506","messageId":"507","endLine":19,"endColumn":24},{"ruleId":"504","severity":1,"message":"599","line":22,"column":11,"nodeType":"506","messageId":"507","endLine":22,"endColumn":29},{"ruleId":"504","severity":1,"message":"583","line":6,"column":3,"nodeType":"506","messageId":"507","endLine":6,"endColumn":8},{"ruleId":"504","severity":1,"message":"600","line":7,"column":3,"nodeType":"506","messageId":"507","endLine":7,"endColumn":10},{"ruleId":"504","severity":1,"message":"537","line":8,"column":3,"nodeType":"506","messageId":"507","endLine":8,"endColumn":7},{"ruleId":"504","severity":1,"message":"514","line":15,"column":10,"nodeType":"506","messageId":"507","endLine":15,"endColumn":14},{"ruleId":"504","severity":1,"message":"515","line":15,"column":16,"nodeType":"506","messageId":"507","endLine":15,"endColumn":18},{"ruleId":"504","severity":1,"message":"505","line":17,"column":10,"nodeType":"506","messageId":"507","endLine":17,"endColumn":30},{"ruleId":"504","severity":1,"message":"539","line":17,"column":32,"nodeType":"506","messageId":"507","endLine":17,"endColumn":44},{"ruleId":"504","severity":1,"message":"601","line":17,"column":46,"nodeType":"506","messageId":"507","endLine":17,"endColumn":61},{"ruleId":"504","severity":1,"message":"602","line":18,"column":10,"nodeType":"506","messageId":"507","endLine":18,"endColumn":22},{"ruleId":"509","replacedBy":"603"},{"ruleId":"511","replacedBy":"604"},{"ruleId":"504","severity":1,"message":"605","line":4,"column":3,"nodeType":"506","messageId":"507","endLine":4,"endColumn":9},{"ruleId":"504","severity":1,"message":"505","line":10,"column":10,"nodeType":"506","messageId":"507","endLine":10,"endColumn":30},{"ruleId":"504","severity":1,"message":"606","line":15,"column":8,"nodeType":"506","messageId":"507","endLine":15,"endColumn":11},{"ruleId":"504","severity":1,"message":"607","line":17,"column":10,"nodeType":"506","messageId":"507","endLine":17,"endColumn":21},{"ruleId":"504","severity":1,"message":"528","line":16,"column":8,"nodeType":"506","messageId":"507","endLine":16,"endColumn":24},{"ruleId":"504","severity":1,"message":"514","line":17,"column":10,"nodeType":"506","messageId":"507","endLine":17,"endColumn":14},{"ruleId":"504","severity":1,"message":"608","line":22,"column":8,"nodeType":"506","messageId":"507","endLine":22,"endColumn":20},{"ruleId":"504","severity":1,"message":"508","line":23,"column":9,"nodeType":"506","messageId":"507","endLine":23,"endColumn":15},{"ruleId":"504","severity":1,"message":"609","line":344,"column":9,"nodeType":"506","messageId":"507","endLine":344,"endColumn":25},{"ruleId":"504","severity":1,"message":"610","line":381,"column":11,"nodeType":"506","messageId":"507","endLine":381,"endColumn":24},{"ruleId":"504","severity":1,"message":"611","line":381,"column":142,"nodeType":"506","messageId":"507","endLine":381,"endColumn":148},{"ruleId":"504","severity":1,"message":"612","line":381,"column":150,"nodeType":"506","messageId":"507","endLine":381,"endColumn":160},{"ruleId":"504","severity":1,"message":"613","line":385,"column":7,"nodeType":"506","messageId":"507","endLine":385,"endColumn":17},{"ruleId":"504","severity":1,"message":"565","line":4,"column":5,"nodeType":"506","messageId":"507","endLine":4,"endColumn":10},{"ruleId":"504","severity":1,"message":"614","line":10,"column":9,"nodeType":"506","messageId":"507","endLine":10,"endColumn":15},{"ruleId":"566","severity":1,"message":"567","line":13,"column":16,"nodeType":"568","messageId":"569","endLine":13,"endColumn":18},{"ruleId":"566","severity":1,"message":"567","line":58,"column":16,"nodeType":"568","messageId":"569","endLine":58,"endColumn":18},{"ruleId":"504","severity":1,"message":"527","line":11,"column":8,"nodeType":"506","messageId":"507","endLine":11,"endColumn":21},{"ruleId":"546","severity":1,"message":"615","line":47,"column":6,"nodeType":"548","endLine":47,"endColumn":8,"suggestions":"616"},{"ruleId":"617","severity":1,"message":"618","line":87,"column":5,"nodeType":"619","messageId":"620","endLine":106,"endColumn":6},{"ruleId":"504","severity":1,"message":"621","line":1,"column":38,"nodeType":"506","messageId":"507","endLine":1,"endColumn":44},{"ruleId":"504","severity":1,"message":"581","line":5,"column":3,"nodeType":"506","messageId":"507","endLine":5,"endColumn":7},{"ruleId":"504","severity":1,"message":"622","line":6,"column":3,"nodeType":"506","messageId":"507","endLine":6,"endColumn":13},{"ruleId":"504","severity":1,"message":"554","line":13,"column":3,"nodeType":"506","messageId":"507","endLine":13,"endColumn":11},{"ruleId":"504","severity":1,"message":"556","line":42,"column":18,"nodeType":"506","messageId":"507","endLine":42,"endColumn":24},{"ruleId":"504","severity":1,"message":"623","line":56,"column":10,"nodeType":"506","messageId":"507","endLine":56,"endColumn":17},{"ruleId":"504","severity":1,"message":"624","line":56,"column":19,"nodeType":"506","messageId":"507","endLine":56,"endColumn":29},{"ruleId":"559","severity":1,"message":"560","line":152,"column":11,"nodeType":"521","endLine":152,"endColumn":29},{"ruleId":"559","severity":1,"message":"560","line":154,"column":11,"nodeType":"521","endLine":154,"endColumn":32},{"ruleId":"559","severity":1,"message":"560","line":158,"column":11,"nodeType":"521","endLine":158,"endColumn":29},{"ruleId":"559","severity":1,"message":"560","line":160,"column":11,"nodeType":"521","endLine":160,"endColumn":32},{"ruleId":"559","severity":1,"message":"560","line":164,"column":11,"nodeType":"521","endLine":164,"endColumn":30},{"ruleId":"559","severity":1,"message":"560","line":166,"column":11,"nodeType":"521","endLine":166,"endColumn":33},{"ruleId":"559","severity":1,"message":"560","line":170,"column":11,"nodeType":"521","endLine":170,"endColumn":30},{"ruleId":"559","severity":1,"message":"560","line":172,"column":11,"nodeType":"521","endLine":172,"endColumn":33},{"ruleId":"559","severity":1,"message":"560","line":176,"column":11,"nodeType":"521","endLine":176,"endColumn":29},{"ruleId":"559","severity":1,"message":"560","line":178,"column":11,"nodeType":"521","endLine":178,"endColumn":32},{"ruleId":"559","severity":1,"message":"560","line":182,"column":11,"nodeType":"521","endLine":182,"endColumn":29},{"ruleId":"559","severity":1,"message":"560","line":184,"column":11,"nodeType":"521","endLine":184,"endColumn":32},{"ruleId":"559","severity":1,"message":"560","line":188,"column":11,"nodeType":"521","endLine":188,"endColumn":29},{"ruleId":"559","severity":1,"message":"560","line":190,"column":11,"nodeType":"521","endLine":190,"endColumn":32},{"ruleId":"546","severity":1,"message":"625","line":248,"column":6,"nodeType":"548","endLine":248,"endColumn":29,"suggestions":"626"},{"ruleId":"546","severity":1,"message":"627","line":270,"column":6,"nodeType":"548","endLine":270,"endColumn":25,"suggestions":"628"},{"ruleId":"546","severity":1,"message":"629","line":292,"column":6,"nodeType":"548","endLine":292,"endColumn":13,"suggestions":"630"},{"ruleId":"546","severity":1,"message":"631","line":319,"column":6,"nodeType":"548","endLine":319,"endColumn":44,"suggestions":"632"},{"ruleId":"546","severity":1,"message":"633","line":330,"column":6,"nodeType":"548","endLine":330,"endColumn":17,"suggestions":"634"},{"ruleId":"509","replacedBy":"635"},{"ruleId":"511","replacedBy":"636"},{"ruleId":"504","severity":1,"message":"637","line":3,"column":10,"nodeType":"506","messageId":"507","endLine":3,"endColumn":23},{"ruleId":"504","severity":1,"message":"638","line":16,"column":8,"nodeType":"506","messageId":"507","endLine":16,"endColumn":17},{"ruleId":"504","severity":1,"message":"639","line":60,"column":13,"nodeType":"506","messageId":"507","endLine":60,"endColumn":22},{"ruleId":"504","severity":1,"message":"597","line":4,"column":3,"nodeType":"506","messageId":"507","endLine":4,"endColumn":8},{"ruleId":"504","severity":1,"message":"640","line":10,"column":3,"nodeType":"506","messageId":"507","endLine":10,"endColumn":8},{"ruleId":"504","severity":1,"message":"641","line":11,"column":3,"nodeType":"506","messageId":"507","endLine":11,"endColumn":7},{"ruleId":"504","severity":1,"message":"642","line":16,"column":8,"nodeType":"506","messageId":"507","endLine":16,"endColumn":15},{"ruleId":"504","severity":1,"message":"643","line":69,"column":5,"nodeType":"506","messageId":"507","endLine":69,"endColumn":22},{"ruleId":"504","severity":1,"message":"644","line":73,"column":5,"nodeType":"506","messageId":"507","endLine":73,"endColumn":23},{"ruleId":"645","severity":1,"message":"646","line":131,"column":61,"nodeType":"568","messageId":"647","endLine":131,"endColumn":62},{"ruleId":"645","severity":1,"message":"646","line":139,"column":45,"nodeType":"568","messageId":"647","endLine":139,"endColumn":46},{"ruleId":"546","severity":1,"message":"648","line":283,"column":6,"nodeType":"548","endLine":283,"endColumn":13,"suggestions":"649"},{"ruleId":"546","severity":1,"message":"650","line":305,"column":6,"nodeType":"548","endLine":305,"endColumn":26,"suggestions":"651"},{"ruleId":"504","severity":1,"message":"565","line":4,"column":5,"nodeType":"506","messageId":"507","endLine":4,"endColumn":10},{"ruleId":"566","severity":1,"message":"567","line":16,"column":16,"nodeType":"568","messageId":"569","endLine":16,"endColumn":18},{"ruleId":"566","severity":1,"message":"567","line":67,"column":16,"nodeType":"568","messageId":"569","endLine":67,"endColumn":18},{"ruleId":"566","severity":1,"message":"567","line":101,"column":16,"nodeType":"568","messageId":"569","endLine":101,"endColumn":18},{"ruleId":"504","severity":1,"message":"526","line":2,"column":17,"nodeType":"506","messageId":"507","endLine":2,"endColumn":23},{"ruleId":"504","severity":1,"message":"538","line":2,"column":40,"nodeType":"506","messageId":"507","endLine":2,"endColumn":47},{"ruleId":"504","severity":1,"message":"539","line":5,"column":3,"nodeType":"506","messageId":"507","endLine":5,"endColumn":15},{"ruleId":"504","severity":1,"message":"602","line":14,"column":10,"nodeType":"506","messageId":"507","endLine":14,"endColumn":22},{"ruleId":"504","severity":1,"message":"652","line":17,"column":10,"nodeType":"506","messageId":"507","endLine":17,"endColumn":23},{"ruleId":"504","severity":1,"message":"514","line":18,"column":10,"nodeType":"506","messageId":"507","endLine":18,"endColumn":14},{"ruleId":"504","severity":1,"message":"584","line":18,"column":20,"nodeType":"506","messageId":"507","endLine":18,"endColumn":24},{"ruleId":"504","severity":1,"message":"515","line":18,"column":26,"nodeType":"506","messageId":"507","endLine":18,"endColumn":28},{"ruleId":"504","severity":1,"message":"653","line":21,"column":20,"nodeType":"506","messageId":"507","endLine":21,"endColumn":29},{"ruleId":"504","severity":1,"message":"654","line":23,"column":7,"nodeType":"506","messageId":"507","endLine":23,"endColumn":13},{"ruleId":"504","severity":1,"message":"655","line":346,"column":11,"nodeType":"506","messageId":"507","endLine":346,"endColumn":17},{"ruleId":"656","severity":1,"message":"657","line":360,"column":15,"nodeType":"658","messageId":"569","endLine":360,"endColumn":22},{"ruleId":"504","severity":1,"message":"659","line":415,"column":19,"nodeType":"506","messageId":"507","endLine":415,"endColumn":26},{"ruleId":"504","severity":1,"message":"660","line":416,"column":9,"nodeType":"506","messageId":"507","endLine":416,"endColumn":13},{"ruleId":"519","severity":1,"message":"520","line":583,"column":15,"nodeType":"521","endLine":583,"endColumn":50},{"ruleId":"504","severity":1,"message":"661","line":13,"column":10,"nodeType":"506","messageId":"507","endLine":13,"endColumn":12},{"ruleId":"504","severity":1,"message":"515","line":13,"column":14,"nodeType":"506","messageId":"507","endLine":13,"endColumn":16},{"ruleId":"504","severity":1,"message":"527","line":13,"column":8,"nodeType":"506","messageId":"507","endLine":13,"endColumn":21},{"ruleId":"504","severity":1,"message":"608","line":14,"column":8,"nodeType":"506","messageId":"507","endLine":14,"endColumn":20},{"ruleId":"504","severity":1,"message":"596","line":1,"column":17,"nodeType":"506","messageId":"507","endLine":1,"endColumn":25},{"ruleId":"504","severity":1,"message":"662","line":8,"column":8,"nodeType":"506","messageId":"507","endLine":8,"endColumn":17},{"ruleId":"663","severity":1,"message":"664","line":16,"column":20,"nodeType":"665","messageId":"569","endLine":16,"endColumn":23},{"ruleId":"504","severity":1,"message":"524","line":4,"column":3,"nodeType":"506","messageId":"507","endLine":4,"endColumn":9},{"ruleId":"504","severity":1,"message":"525","line":13,"column":8,"nodeType":"506","messageId":"507","endLine":13,"endColumn":14},{"ruleId":"504","severity":1,"message":"526","line":14,"column":8,"nodeType":"506","messageId":"507","endLine":14,"endColumn":14},{"ruleId":"504","severity":1,"message":"527","line":15,"column":8,"nodeType":"506","messageId":"507","endLine":15,"endColumn":21},{"ruleId":"504","severity":1,"message":"528","line":16,"column":8,"nodeType":"506","messageId":"507","endLine":16,"endColumn":24},{"ruleId":"504","severity":1,"message":"666","line":20,"column":8,"nodeType":"506","messageId":"507","endLine":20,"endColumn":11},{"ruleId":"504","severity":1,"message":"667","line":21,"column":8,"nodeType":"506","messageId":"507","endLine":21,"endColumn":11},{"ruleId":"504","severity":1,"message":"668","line":22,"column":8,"nodeType":"506","messageId":"507","endLine":22,"endColumn":13},{"ruleId":"504","severity":1,"message":"508","line":32,"column":9,"nodeType":"506","messageId":"507","endLine":32,"endColumn":15},{"ruleId":"504","severity":1,"message":"530","line":55,"column":11,"nodeType":"506","messageId":"507","endLine":55,"endColumn":17},{"ruleId":"504","severity":1,"message":"531","line":55,"column":19,"nodeType":"506","messageId":"507","endLine":55,"endColumn":24},{"ruleId":"504","severity":1,"message":"532","line":71,"column":9,"nodeType":"506","messageId":"507","endLine":71,"endColumn":22},{"ruleId":"504","severity":1,"message":"669","line":154,"column":18,"nodeType":"506","messageId":"507","endLine":154,"endColumn":27},{"ruleId":"504","severity":1,"message":"670","line":154,"column":29,"nodeType":"506","messageId":"507","endLine":154,"endColumn":37},{"ruleId":"559","severity":1,"message":"560","line":558,"column":19,"nodeType":"521","endLine":565,"endColumn":61},{"ruleId":"519","severity":1,"message":"520","line":573,"column":19,"nodeType":"521","endLine":581,"endColumn":30},{"ruleId":"504","severity":1,"message":"662","line":2,"column":8,"nodeType":"506","messageId":"507","endLine":2,"endColumn":17},{"ruleId":"504","severity":1,"message":"536","line":4,"column":10,"nodeType":"506","messageId":"507","endLine":4,"endColumn":15},{"ruleId":"504","severity":1,"message":"526","line":4,"column":17,"nodeType":"506","messageId":"507","endLine":4,"endColumn":23},{"ruleId":"504","severity":1,"message":"600","line":4,"column":25,"nodeType":"506","messageId":"507","endLine":4,"endColumn":32},{"ruleId":"504","severity":1,"message":"537","line":4,"column":34,"nodeType":"506","messageId":"507","endLine":4,"endColumn":38},{"ruleId":"504","severity":1,"message":"538","line":4,"column":40,"nodeType":"506","messageId":"507","endLine":4,"endColumn":47},{"ruleId":"504","severity":1,"message":"505","line":5,"column":10,"nodeType":"506","messageId":"507","endLine":5,"endColumn":30},{"ruleId":"504","severity":1,"message":"601","line":5,"column":46,"nodeType":"506","messageId":"507","endLine":5,"endColumn":61},{"ruleId":"504","severity":1,"message":"514","line":9,"column":10,"nodeType":"506","messageId":"507","endLine":9,"endColumn":14},{"ruleId":"504","severity":1,"message":"584","line":9,"column":20,"nodeType":"506","messageId":"507","endLine":9,"endColumn":24},{"ruleId":"504","severity":1,"message":"515","line":9,"column":26,"nodeType":"506","messageId":"507","endLine":9,"endColumn":28},{"ruleId":"546","severity":1,"message":"671","line":30,"column":8,"nodeType":"548","endLine":30,"endColumn":10,"suggestions":"672"},{"ruleId":"504","severity":1,"message":"640","line":5,"column":3,"nodeType":"506","messageId":"507","endLine":5,"endColumn":8},{"ruleId":"504","severity":1,"message":"673","line":7,"column":3,"nodeType":"506","messageId":"507","endLine":7,"endColumn":6},{"ruleId":"504","severity":1,"message":"674","line":44,"column":16,"nodeType":"506","messageId":"507","endLine":44,"endColumn":20},{"ruleId":"559","severity":1,"message":"560","line":99,"column":18,"nodeType":"521","endLine":99,"endColumn":47},{"ruleId":"559","severity":1,"message":"560","line":101,"column":18,"nodeType":"521","endLine":101,"endColumn":47},{"ruleId":"559","severity":1,"message":"560","line":103,"column":18,"nodeType":"521","endLine":103,"endColumn":47},{"ruleId":"559","severity":1,"message":"560","line":105,"column":18,"nodeType":"521","endLine":105,"endColumn":47},{"ruleId":"559","severity":1,"message":"560","line":127,"column":11,"nodeType":"521","endLine":134,"endColumn":13},{"ruleId":"559","severity":1,"message":"560","line":139,"column":13,"nodeType":"521","endLine":139,"endColumn":33},{"ruleId":"566","severity":1,"message":"591","line":204,"column":28,"nodeType":"568","messageId":"569","endLine":204,"endColumn":30},{"ruleId":"546","severity":1,"message":"675","line":301,"column":6,"nodeType":"548","endLine":301,"endColumn":18,"suggestions":"676"},{"ruleId":"546","severity":1,"message":"677","line":309,"column":6,"nodeType":"548","endLine":309,"endColumn":8,"suggestions":"678"},{"ruleId":"504","severity":1,"message":"679","line":58,"column":9,"nodeType":"506","messageId":"507","endLine":58,"endColumn":12},{"ruleId":"504","severity":1,"message":"680","line":133,"column":32,"nodeType":"506","messageId":"507","endLine":133,"endColumn":48},{"ruleId":"504","severity":1,"message":"681","line":150,"column":15,"nodeType":"506","messageId":"507","endLine":150,"endColumn":28},{"ruleId":"504","severity":1,"message":"514","line":4,"column":10,"nodeType":"506","messageId":"507","endLine":4,"endColumn":14},{"ruleId":"504","severity":1,"message":"515","line":4,"column":20,"nodeType":"506","messageId":"507","endLine":4,"endColumn":22},{"ruleId":"617","severity":1,"message":"618","line":381,"column":9,"nodeType":"619","messageId":"620","endLine":388,"endColumn":10},{"ruleId":"504","severity":1,"message":"682","line":591,"column":15,"nodeType":"506","messageId":"507","endLine":591,"endColumn":25},{"ruleId":"504","severity":1,"message":"683","line":635,"column":17,"nodeType":"506","messageId":"507","endLine":635,"endColumn":26},{"ruleId":"504","severity":1,"message":"684","line":810,"column":11,"nodeType":"506","messageId":"507","endLine":810,"endColumn":22},{"ruleId":"685","severity":1,"message":"686","line":999,"column":9,"nodeType":"687","messageId":"688","endLine":999,"endColumn":15},{"ruleId":"504","severity":1,"message":"595","line":1,"column":27,"nodeType":"506","messageId":"507","endLine":1,"endColumn":36},{"ruleId":"504","severity":1,"message":"662","line":2,"column":8,"nodeType":"506","messageId":"507","endLine":2,"endColumn":17},{"ruleId":"504","severity":1,"message":"536","line":4,"column":10,"nodeType":"506","messageId":"507","endLine":4,"endColumn":15},{"ruleId":"504","severity":1,"message":"526","line":4,"column":17,"nodeType":"506","messageId":"507","endLine":4,"endColumn":23},{"ruleId":"504","severity":1,"message":"537","line":4,"column":34,"nodeType":"506","messageId":"507","endLine":4,"endColumn":38},{"ruleId":"504","severity":1,"message":"538","line":4,"column":40,"nodeType":"506","messageId":"507","endLine":4,"endColumn":47},{"ruleId":"504","severity":1,"message":"539","line":5,"column":32,"nodeType":"506","messageId":"507","endLine":5,"endColumn":44},{"ruleId":"504","severity":1,"message":"601","line":5,"column":46,"nodeType":"506","messageId":"507","endLine":5,"endColumn":61},{"ruleId":"504","severity":1,"message":"527","line":8,"column":8,"nodeType":"506","messageId":"507","endLine":8,"endColumn":21},{"ruleId":"504","severity":1,"message":"514","line":18,"column":10,"nodeType":"506","messageId":"507","endLine":18,"endColumn":14},{"ruleId":"504","severity":1,"message":"584","line":18,"column":20,"nodeType":"506","messageId":"507","endLine":18,"endColumn":24},{"ruleId":"504","severity":1,"message":"515","line":18,"column":26,"nodeType":"506","messageId":"507","endLine":18,"endColumn":28},{"ruleId":"504","severity":1,"message":"565","line":3,"column":5,"nodeType":"506","messageId":"507","endLine":3,"endColumn":10},{"ruleId":"566","severity":1,"message":"567","line":94,"column":16,"nodeType":"568","messageId":"569","endLine":94,"endColumn":18},{"ruleId":"504","severity":1,"message":"581","line":7,"column":3,"nodeType":"506","messageId":"507","endLine":7,"endColumn":7},{"ruleId":"504","severity":1,"message":"689","line":11,"column":3,"nodeType":"506","messageId":"507","endLine":11,"endColumn":10},{"ruleId":"504","severity":1,"message":"537","line":13,"column":3,"nodeType":"506","messageId":"507","endLine":13,"endColumn":7},{"ruleId":"504","severity":1,"message":"505","line":19,"column":3,"nodeType":"506","messageId":"507","endLine":19,"endColumn":23},{"ruleId":"504","severity":1,"message":"539","line":20,"column":3,"nodeType":"506","messageId":"507","endLine":20,"endColumn":15},{"ruleId":"504","severity":1,"message":"545","line":27,"column":8,"nodeType":"506","messageId":"507","endLine":27,"endColumn":15},{"ruleId":"504","severity":1,"message":"690","line":31,"column":8,"nodeType":"506","messageId":"507","endLine":31,"endColumn":10},{"ruleId":"504","severity":1,"message":"691","line":32,"column":8,"nodeType":"506","messageId":"507","endLine":32,"endColumn":10},{"ruleId":"504","severity":1,"message":"692","line":33,"column":8,"nodeType":"506","messageId":"507","endLine":33,"endColumn":12},{"ruleId":"504","severity":1,"message":"666","line":34,"column":8,"nodeType":"506","messageId":"507","endLine":34,"endColumn":11},{"ruleId":"504","severity":1,"message":"667","line":35,"column":8,"nodeType":"506","messageId":"507","endLine":35,"endColumn":11},{"ruleId":"504","severity":1,"message":"668","line":36,"column":8,"nodeType":"506","messageId":"507","endLine":36,"endColumn":13},{"ruleId":"504","severity":1,"message":"693","line":40,"column":8,"nodeType":"506","messageId":"507","endLine":40,"endColumn":18},{"ruleId":"504","severity":1,"message":"694","line":44,"column":8,"nodeType":"506","messageId":"507","endLine":44,"endColumn":13},{"ruleId":"504","severity":1,"message":"695","line":54,"column":7,"nodeType":"506","messageId":"507","endLine":54,"endColumn":24},{"ruleId":"504","severity":1,"message":"696","line":88,"column":17,"nodeType":"506","messageId":"507","endLine":88,"endColumn":25},{"ruleId":"504","severity":1,"message":"697","line":100,"column":10,"nodeType":"506","messageId":"507","endLine":100,"endColumn":18},{"ruleId":"504","severity":1,"message":"698","line":104,"column":10,"nodeType":"506","messageId":"507","endLine":104,"endColumn":13},{"ruleId":"504","severity":1,"message":"699","line":107,"column":18,"nodeType":"506","messageId":"507","endLine":107,"endColumn":27},{"ruleId":"504","severity":1,"message":"700","line":127,"column":11,"nodeType":"506","messageId":"507","endLine":127,"endColumn":14},{"ruleId":"504","severity":1,"message":"701","line":440,"column":22,"nodeType":"506","messageId":"507","endLine":440,"endColumn":26},{"ruleId":"702","severity":1,"message":"703","line":694,"column":34,"nodeType":"704","messageId":"705","endLine":694,"endColumn":35,"suggestions":"706"},{"ruleId":"702","severity":1,"message":"707","line":699,"column":31,"nodeType":"704","messageId":"705","endLine":699,"endColumn":32,"suggestions":"708"},{"ruleId":"702","severity":1,"message":"703","line":734,"column":34,"nodeType":"704","messageId":"705","endLine":734,"endColumn":35,"suggestions":"709"},{"ruleId":"702","severity":1,"message":"707","line":739,"column":31,"nodeType":"704","messageId":"705","endLine":739,"endColumn":32,"suggestions":"710"},{"ruleId":"702","severity":1,"message":"703","line":774,"column":34,"nodeType":"704","messageId":"705","endLine":774,"endColumn":35,"suggestions":"711"},{"ruleId":"702","severity":1,"message":"707","line":779,"column":31,"nodeType":"704","messageId":"705","endLine":779,"endColumn":32,"suggestions":"712"},{"ruleId":"702","severity":1,"message":"703","line":822,"column":34,"nodeType":"704","messageId":"705","endLine":822,"endColumn":35,"suggestions":"713"},{"ruleId":"702","severity":1,"message":"707","line":827,"column":31,"nodeType":"704","messageId":"705","endLine":827,"endColumn":32,"suggestions":"714"},{"ruleId":"702","severity":1,"message":"703","line":861,"column":34,"nodeType":"704","messageId":"705","endLine":861,"endColumn":35,"suggestions":"715"},{"ruleId":"702","severity":1,"message":"707","line":866,"column":31,"nodeType":"704","messageId":"705","endLine":866,"endColumn":32,"suggestions":"716"},{"ruleId":"702","severity":1,"message":"703","line":902,"column":34,"nodeType":"704","messageId":"705","endLine":902,"endColumn":35,"suggestions":"717"},{"ruleId":"702","severity":1,"message":"707","line":907,"column":31,"nodeType":"704","messageId":"705","endLine":907,"endColumn":32,"suggestions":"718"},{"ruleId":"702","severity":1,"message":"703","line":1448,"column":34,"nodeType":"704","messageId":"705","endLine":1448,"endColumn":35,"suggestions":"719"},{"ruleId":"702","severity":1,"message":"707","line":1453,"column":31,"nodeType":"704","messageId":"705","endLine":1453,"endColumn":32,"suggestions":"720"},{"ruleId":"702","severity":1,"message":"703","line":1469,"column":34,"nodeType":"704","messageId":"705","endLine":1469,"endColumn":35,"suggestions":"721"},{"ruleId":"702","severity":1,"message":"707","line":1474,"column":31,"nodeType":"704","messageId":"705","endLine":1474,"endColumn":32,"suggestions":"722"},{"ruleId":"546","severity":1,"message":"723","line":1692,"column":6,"nodeType":"548","endLine":1692,"endColumn":23,"suggestions":"724"},{"ruleId":"546","severity":1,"message":"725","line":1721,"column":6,"nodeType":"548","endLine":1721,"endColumn":26,"suggestions":"726"},{"ruleId":"546","severity":1,"message":"727","line":1727,"column":6,"nodeType":"548","endLine":1727,"endColumn":18,"suggestions":"728"},"no-unused-vars","'createFromIconfontCN' is defined but never used.","Identifier","unusedVar","'Option' is assigned a value but never used.","no-native-reassign",["729"],"no-negated-in-lhs",["730"],"'Draggable' is defined but never used.","'mTop' is defined but never used.","'pX' is defined but never used.","'options' is assigned a value but never used.","'disabled' is assigned a value but never used.","'bounds' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["729"],["730"],"'Switch' is defined but never used.","'Slider' is defined but never used.","'Button' is defined but never used.","'electronStore' is defined but never used.","'temporaryStorage' is defined but never used.","'parseGeoJSON' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'isUnKnow' is assigned a value but never used.",["729"],["730"],"'Input' is defined but never used.","'Spin' is defined but never used.","'BackTop' is defined but never used.","'SyncOutlined' is defined but never used.","'blueSearch' is defined but never used.","'MinClose' is defined but never used.","'MouseDiv' is defined but never used.","'back_white' is defined but never used.","'back_hui' is defined but never used.","'MyModal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["731"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["732"],["729"],["730"],"'Carousel' is defined but never used.","'PlusOutlined' is defined but never used.","'Header' is assigned a value but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["733"],["729"],["730"],"'token' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["729"],["730"],["729"],["730"],"'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["734"],["729"],["730"],"'useHistory' is defined but never used.","'Menu' is defined but never used.","'Popover' is defined but never used.","'Modal' is defined but never used.","'MTop' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["735"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["736"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'_' is defined but never used.","'mellaConnectStatus' is assigned a value but never used.","'message' is defined but never used.","'LoadingOutlined' is defined but never used.","'fetchRequest' is defined but never used.",["729"],["730"],"'Select' is defined but never used.","'dui' is defined but never used.","'FetchEszVet' is defined but never used.","'SelectionBox' is defined but never used.","'selectDeviceName' is assigned a value but never used.","'isClicleStudy' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.","'header' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_getExam' and 'petList'. Either include them or remove the dependency array. You can also do a functional update 'setPetList(p => ...)' if you only need 'petList' in the 'setPetList' call.",["737"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'useRef' is defined but never used.","'PageHeader' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["738"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["739"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["740"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["741"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["742"],["729"],["730"],"'BrowserRouter' is defined but never used.","'Praviders' is defined but never used.","'chooseNum' is assigned a value but never used.","'Space' is defined but never used.","'Card' is defined but never used.","'Charlie' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["743"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["744"],"'fetchRequest1' is defined but never used.","'addQRCode' is defined but never used.","'MyIcon' is assigned a value but never used.","'isCode' is assigned a value but never used.","no-dupe-keys","Duplicate key 'opacity'.","ObjectExpression","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","'px' is defined but never used.","'PropTypes' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["745"],"'Tag' is defined but never used.","'memo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["746"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["747"],"'mar' is assigned a value but never used.","'lastOrganization' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Tooltip' is defined but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["748","749"],"Unnecessary escape character: \\-.",["750","751"],["752","753"],["754","755"],["756","757"],["758","759"],["760","761"],["762","763"],["764","765"],["766","767"],["768","769"],["770","771"],["772","773"],["774","775"],["776","777"],["778","779"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["780"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["781"],"React Hook useEffect has a missing dependency: 'getOption'. Either include it or remove the dependency array.",["782"],"no-global-assign","no-unsafe-negation",{"desc":"783","fix":"784"},{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},{"desc":"801","fix":"802"},{"desc":"803","fix":"804"},{"desc":"805","fix":"806"},{"desc":"807","fix":"808"},{"desc":"809","fix":"810"},{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},{"desc":"815","fix":"816"},{"messageId":"817","fix":"818","desc":"819"},{"messageId":"820","fix":"821","desc":"822"},{"messageId":"817","fix":"823","desc":"819"},{"messageId":"820","fix":"824","desc":"822"},{"messageId":"817","fix":"825","desc":"819"},{"messageId":"820","fix":"826","desc":"822"},{"messageId":"817","fix":"827","desc":"819"},{"messageId":"820","fix":"828","desc":"822"},{"messageId":"817","fix":"829","desc":"819"},{"messageId":"820","fix":"830","desc":"822"},{"messageId":"817","fix":"831","desc":"819"},{"messageId":"820","fix":"832","desc":"822"},{"messageId":"817","fix":"833","desc":"819"},{"messageId":"820","fix":"834","desc":"822"},{"messageId":"817","fix":"835","desc":"819"},{"messageId":"820","fix":"836","desc":"822"},{"messageId":"817","fix":"837","desc":"819"},{"messageId":"820","fix":"838","desc":"822"},{"messageId":"817","fix":"839","desc":"819"},{"messageId":"820","fix":"840","desc":"822"},{"messageId":"817","fix":"841","desc":"819"},{"messageId":"820","fix":"842","desc":"822"},{"messageId":"817","fix":"843","desc":"819"},{"messageId":"820","fix":"844","desc":"822"},{"messageId":"817","fix":"845","desc":"819"},{"messageId":"820","fix":"846","desc":"822"},{"messageId":"817","fix":"847","desc":"819"},{"messageId":"820","fix":"848","desc":"822"},{"messageId":"817","fix":"849","desc":"819"},{"messageId":"820","fix":"850","desc":"822"},{"messageId":"817","fix":"851","desc":"819"},{"messageId":"820","fix":"852","desc":"822"},{"desc":"853","fix":"854"},{"desc":"855","fix":"856"},{"desc":"857","fix":"858"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"859","text":"860"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"861","text":"862"},"Add dependencies array: [callBack, timers]",{"range":"863","text":"864"},"Update the dependencies array to be: [hardwareList]",{"range":"865","text":"866"},"Update the dependencies array to be: [listDate]",{"range":"867","text":"868"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"869","text":"870"},"Update the dependencies array to be: [_getExam, petList]",{"range":"871","text":"872"},"Update the dependencies array to be: [finishScan, inputIndex, newData, patientId]",{"range":"873","text":"874"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"875","text":"876"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"877","text":"878"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"879","text":"880"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"881","text":"882"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"883","text":"884"},"Update the dependencies array to be: [mellaConnectStatus, value]",{"range":"885","text":"886"},"Update the dependencies array to be: [_getExam]",{"range":"887","text":"888"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"889","text":"890"},"Update the dependencies array to be: [storage.userId]",{"range":"891","text":"892"},"removeEscape",{"range":"893","text":"894"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"895","text":"896"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"897","text":"894"},{"range":"898","text":"896"},{"range":"899","text":"894"},{"range":"900","text":"896"},{"range":"901","text":"894"},{"range":"902","text":"896"},{"range":"903","text":"894"},{"range":"904","text":"896"},{"range":"905","text":"894"},{"range":"906","text":"896"},{"range":"907","text":"894"},{"range":"908","text":"896"},{"range":"909","text":"894"},{"range":"910","text":"896"},{"range":"911","text":"894"},{"range":"912","text":"896"},{"range":"913","text":"894"},{"range":"914","text":"896"},{"range":"915","text":"894"},{"range":"916","text":"896"},{"range":"917","text":"894"},{"range":"918","text":"896"},{"range":"919","text":"894"},{"range":"920","text":"896"},{"range":"921","text":"894"},{"range":"922","text":"896"},{"range":"923","text":"894"},{"range":"924","text":"896"},{"range":"925","text":"894"},{"range":"926","text":"896"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"927","text":"928"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"929","text":"930"},"Update the dependencies array to be: [echarsData, getOption]",{"range":"931","text":"932"},[2621,2623],"[setReceiveBroadcastHardwareInfoFun]",[3890,3920],"[devicesList, receiveBroadcastHardwareInfo]",[2225,2225],", [callBack, timers]",[3175,3177],"[hardwareList]",[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]",[1414,1416],"[_getExam, petList]",[6313,6336],"[finishScan, inputIndex, newData, patientId]",[6785,6804],"[inputIndex, rulerConfirmCount]",[7417,7424],"[petId, petLengthDataConvert, petMessage]",[8039,8077],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[8500,8511],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[8065,8072],"[callBack, prediction, timeNum, value]",[8691,8711],"[mellaConnectStatus, value]",[1031,1033],"[_getExam]",[8009,8021],"[getPetTemperatureData, petMessage]",[8209,8211],"[storage.userId]",[20468,20469],"",[20468,20468],"\\",[20669,20670],[20669,20669],[21739,21740],[21739,21739],[21940,21941],[21940,21940],[23008,23009],[23008,23008],[23209,23210],[23209,23209],[24603,24604],[24603,24603],[24804,24805],[24804,24804],[25834,25835],[25834,25834],[26035,26036],[26035,26035],[27157,27158],[27157,27157],[27358,27359],[27358,27358],[42697,42698],[42697,42697],[42898,42899],[42898,42898],[43428,43429],[43428,43428],[43629,43630],[43629,43629],[49767,49784],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[50454,50474],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[50631,50643],"[echarsData, getOption]"]