[{"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\home\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\config\\config.js":"2","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\unassigned\\index.jsx":"3","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\settings\\index.jsx":"4","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\team\\index.jsx":"5","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js":"6","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx":"7","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\backend.js":"8","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx":"9","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"10","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"11","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx":"12","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\hardWareTypeUI.jsx":"13","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"14","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\user.js":"15","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\vetSpire.js":"16","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx":"17","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx":"18","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx":"19","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\index.jsx":"20","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx":"21","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"22","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js":"23","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx":"24","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanCodeLogin\\index.jsx":"25","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js":"26","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx":"27","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\petAndParents\\index.jsx":"28","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrg\\index.jsx":"29","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js":"30","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\imgArray.js":"31","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx":"32","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js":"33","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\petall.js":"34","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx":"35","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\doctorAddPet\\index.jsx":"36","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"37","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\EzyVet.js":"38","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\gaugeChart\\index.jsx":"39"},{"size":3238,"mtime":1663583153573,"results":"40","hashOfConfig":"41"},{"size":651,"mtime":1663641710805,"results":"42","hashOfConfig":"41"},{"size":35440,"mtime":1663058079299,"results":"43","hashOfConfig":"41"},{"size":19092,"mtime":1663035986860,"results":"44","hashOfConfig":"41"},{"size":10243,"mtime":1661509757448,"results":"45","hashOfConfig":"41"},{"size":465,"mtime":1657709941429,"results":"46","hashOfConfig":"41"},{"size":5624,"mtime":1663582611080,"results":"47","hashOfConfig":"41"},{"size":706,"mtime":1661849271238,"results":"48","hashOfConfig":"41"},{"size":2678,"mtime":1663579815395,"results":"49","hashOfConfig":"41"},{"size":5765,"mtime":1661509757472,"results":"50","hashOfConfig":"41"},{"size":846,"mtime":1655168677772,"results":"51","hashOfConfig":"41"},{"size":10678,"mtime":1662100192866,"results":"52","hashOfConfig":"41"},{"size":5448,"mtime":1662347472561,"results":"53","hashOfConfig":"41"},{"size":59302,"mtime":1663055398499,"results":"54","hashOfConfig":"41"},{"size":574,"mtime":1661509757287,"results":"55","hashOfConfig":"41"},{"size":611,"mtime":1661509757305,"results":"56","hashOfConfig":"41"},{"size":8711,"mtime":1661509757311,"results":"57","hashOfConfig":"41"},{"size":2212,"mtime":1663570022044,"results":"58","hashOfConfig":"41"},{"size":2375,"mtime":1663570343169,"results":"59","hashOfConfig":"41"},{"size":1475,"mtime":1663570396052,"results":"60","hashOfConfig":"41"},{"size":9628,"mtime":1663582942568,"results":"61","hashOfConfig":"41"},{"size":12412,"mtime":1663578540722,"results":"62","hashOfConfig":"41"},{"size":577,"mtime":1657680900931,"results":"63","hashOfConfig":"41"},{"size":15395,"mtime":1661509757340,"results":"64","hashOfConfig":"41"},{"size":5219,"mtime":1661509757421,"results":"65","hashOfConfig":"41"},{"size":17788,"mtime":1659945946500,"results":"66","hashOfConfig":"41"},{"size":9396,"mtime":1663651976531,"results":"67","hashOfConfig":"41"},{"size":9726,"mtime":1663046451399,"results":"68","hashOfConfig":"41"},{"size":16072,"mtime":1661509757405,"results":"69","hashOfConfig":"41"},{"size":1275,"mtime":1655168677817,"results":"70","hashOfConfig":"41"},{"size":11452,"mtime":1655168677771,"results":"71","hashOfConfig":"41"},{"size":1573,"mtime":1661509757427,"results":"72","hashOfConfig":"41"},{"size":71,"mtime":1657699049494,"results":"73","hashOfConfig":"41"},{"size":885,"mtime":1663040187632,"results":"74","hashOfConfig":"41"},{"size":3836,"mtime":1661509757322,"results":"75","hashOfConfig":"41"},{"size":29637,"mtime":1661509757364,"results":"76","hashOfConfig":"41"},{"size":11186,"mtime":1662348058987,"results":"77","hashOfConfig":"41"},{"size":664,"mtime":1661509757282,"results":"78","hashOfConfig":"41"},{"size":2721,"mtime":1663652051146,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fb2hrx",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":38,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"94"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\home\\index.jsx",["167"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\config\\config.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\unassigned\\index.jsx",["168","169","170","171","172","173"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\settings\\index.jsx",["174","175","176","177"],"\nimport React, { Component } from 'react'\nimport {\n  Switch,\n  Select,\n  message\n} from 'antd'\n\nimport redJinggao from '../../assets/img/redjinggao.png'\n\nimport Heart from '../../utils/heard/Heard'\nimport Slider from '../../utils/slider/Slider'\nimport Button from '../../utils/button/Button'\nimport electronStore from '../../utils/electronStore'\nimport { px, win } from '../../utils/px';\nimport MyModal from '../../utils/myModal/MyModal'\n\nimport './index.less'\n\nconst { Option } = Select;\nlet storage = window.localStorage\nexport default class Settings extends Component {\n\n  state = {\n    self_tarting: false,      //自启动，\n    isHua: true,              //为true代表为华氏度，为false代表℃\n    is15: true,               //腋温测量时长，为true则是15秒，为false则是35秒\n    isClicleStudy: false,     //是否处于临床测试，为true则在处于，false则不处于\n    isBacklight: true,        //是否开启背光，为true则是开启背光，为false则是关闭背光\n    isBeep: true,             //是否开启蜂鸣器，为true则是开启蜂鸣器，反之则是关闭蜂鸣器\n    backlightTimer: { length: 140, number: '45' },//背光时长，长度指的是在滑轨上面的距离，number指的是显示的秒数\n    autoOff: { length: 0, number: '30' },  //无操作自动关机，长度指的是在滑轨上面的距离，number指的是关闭的秒数\n\n\n    oldIsHua: true,\n    oldIs15: true,\n    oldIsBacklight: true,\n    oldIsBeep: true,\n    oldBacklightTimer: { length: 140, number: '45' },\n    oldAutoOff: { length: 0, number: '30' },\n    oldIsClicleStudy: false,\n\n    isSave: false,\n\n    num0: '',\n    num1: '',\n    num2: '',\n    num3: '',\n    num4: '',\n    num5: '',\n    verifyNum: '',\n\n    maxLength: 1, //验证码长度\n    valueA: \"\", //验证码第一位\n    valueB: \"\", //二\n    valueC: \"\", //三\n    valueD: \"\", //四\n    valueE: \"\", //5\n    valueF: \"\", //6\n  }\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    // if (windowsHeight < 900) {\n    //   ipcRenderer.send('table', win())\n    // } else {\n    //   ipcRenderer.send('setting', win())\n    // }\n    ipcRenderer.send('big', win())\n    //这里要根据保存的时候存到哪个位置的，然后拿出来更新state\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`)\n    console.log('----', hardSet);\n    let isClicleStudy = storage.isClinical === 'true' ? true : false\n    if (hardSet) {\n      console.log('不是第一次进来，有设置的');\n      let { isHua, is15, isBacklight, isBeep, backlightTimer, autoOff } = hardSet\n\n      this.setState({\n        isHua,\n        is15,\n        isBacklight,\n        isBeep,\n        backlightTimer,\n        autoOff,\n        // isClicleStudy: temporaryStorage.isClicleStudy,\n        isClicleStudy,\n\n        oldIsHua: isHua,\n        oldIs15: is15,\n        oldIsBacklight: isBacklight,\n        oldIsBeep: isBeep,\n        oldBacklightTimer: backlightTimer,\n        oldAutoOff: autoOff,\n        // oldIsClicleStudy: temporaryStorage.isClicleStudy,\n        oldIsClicleStudy: isClicleStudy,\n\n      })\n    } else {\n      let settings = {\n        isHua: true,\n        is15: true,\n        self_tarting: false,  //自启动\n        isBacklight: true,\n        isBeep: true,\n        backlightTimer: { length: 140, number: '45' },\n        autoOff: { length: 0, number: '30' },\n      }\n      electronStore.set(`${storage.userId}-hardwareConfiguration`, settings)\n      let { isHua, is15, isBacklight, isBeep, backlightTimer, autoOff } = settings\n      this.setState({\n        isHua,\n        is15,\n        isBacklight,\n        isBeep,\n        backlightTimer,\n        autoOff,\n        // isClicleStudy: temporaryStorage.isClicleStudy,\n        isClicleStudy,\n\n        oldIsHua: isHua,\n        oldIs15: is15,\n        oldIsBacklight: isBacklight,\n        oldIsBeep: isBeep,\n        oldBacklightTimer: backlightTimer,\n        oldAutoOff: autoOff,\n        // oldIsClicleStudy: temporaryStorage.isClicleStudy,\n        oldIsClicleStudy: isClicleStudy\n\n\n      })\n    }\n\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    this.setState({\n\n    })\n  }\n\n  _save = () => {\n    console.log('点击保存');\n    /**\n     * 分别两部分保存保存，\n     * 本地存储：程序自启动、测量单位、背光、蜂鸣器、背光时间、硬件自动关机时间、腋温测量时间\n     * 临时存储：处于临床测试状态\n     */\n    this.setState({\n      isSave: false\n    })\n    let { self_tarting, isHua, isClicleStudy, isBacklight, isBeep, backlightTimer, autoOff, is15 } = this.state\n    // console.log({ self_tarting, isHua, isClicleStudy, isBacklight, isBeep, backlightTimer, autoOff, is15 });\n    let settings = {\n      isHua,\n      is15,\n      self_tarting,\n      isBacklight,\n      isBeep,\n      backlightTimer,\n      autoOff,\n    }\n    electronStore.set(`${storage.userId}-hardwareConfiguration`, settings)\n    // temporaryStorage.isClicleStudy = isClicleStudy\n    storage.isClinical = `${isClicleStudy}`\n    let ipcRenderer = window.electron.ipcRenderer\n    if (self_tarting) {\n      ipcRenderer.send('openAutoStart')\n    } else {\n      ipcRenderer.send('closeAutoStart')\n    }\n    let setArr = ['03', 'ed', '07', 'dd', autoOff.number, isBacklight ? backlightTimer.number : '00', isBeep ? '11' : '00', isHua ? '00' : '01']\n    console.log('setArr', setArr);\n\n\n\n    ipcRenderer.send('usbdata', { command: '21', arr: setArr })\n\n    this.props.history.goBack()\n  }\n  _goback = () => {\n    console.log('返回');\n    let { isHua, is15, isBacklight, isBeep, backlightTimer, autoOff, isClicleStudy,\n      oldAutoOff, oldBacklightTimer, oldIs15, oldIsBacklight, oldIsBeep, oldIsClicleStudy, oldIsHua, } = this.state\n    if (isHua !== oldIsHua || is15 !== oldIs15 || isBacklight !== oldIsBacklight || isBeep !== oldIsBeep || backlightTimer !== oldBacklightTimer\n      || autoOff !== oldAutoOff || isClicleStudy !== oldIsClicleStudy) {\n      console.log('做了更改');\n      this.setState({\n        isSave: true\n      })\n\n    } else {\n      this.props.history.goBack()\n    }\n\n  }\n\n  //验证码光标后移\n  handleInputValue = (e, type) => {\n\n    const { value = \"\" } = e.target;\n    switch (type) {\n      case \"A\":\n        if (value) this.secondFoucs.focus();\n\n        this.setState({\n          valueA: value.slice(0, 1)\n        });\n\n\n        break;\n\n\n      case \"B\":\n        if (value) this.tridFoucs.focus();\n\n        this.setState({\n          valueB: value.slice(0, 1)\n        });\n\n\n        break;\n\n      case \"C\":\n        if (value) this.fourFoucs.focus();\n\n        this.setState({\n          valueC: value.slice(0, 1)\n        });\n\n\n        break;\n\n      case \"D\":\n        if (value) this.fiveFoucs.focus();\n\n        this.setState({\n          valueD: value.slice(0, 1)\n        });\n\n\n        break;\n\n      case \"E\":\n        if (value) this.sixFoucs.focus();\n\n        this.setState({\n          valueE: value.slice(0, 1)\n        });\n\n\n        break;\n      default:\n        this.setState({\n          valueF: value.slice(0, 1),\n          isShow: true\n        });\n        break;\n    }\n\n  };\n  //删除验证码\n  handleDel = e => {\n    const BACK_SPACE = 8;\n    const isBackSpaceKey = e.keyCode === BACK_SPACE;\n    if (isBackSpaceKey && e.target.value.length === 0) {\n      let previous = e.target;\n      //上一个兄弟节点\n      previous = previous.previousElementSibling;\n      if (previous !== null && previous.tagName.toLowerCase() === \"input\") {\n        previous.focus();\n      }\n    }\n  };\n\n\n  moceCursor = (index) => {\n    let inputs = document.querySelectorAll('#settings .verify input')\n    if (index < 5) {\n      inputs[++index].focus()\n    }\n  }\n  backCursor = (index) => {\n    let inputs = document.querySelectorAll('#settings .verify input')\n    inputs[--index].focus()\n  }\n  _device = () => {\n\n    let userId = storage.userId\n    let deviceList = electronStore.get(`${userId}-deviceList`)\n    console.log('---', deviceList);\n    if (!deviceList) {\n      let str = `${getRamNumber()}`\n      for (let i = 0; i < 5; i++) {\n        str += `:${getRamNumber()}`\n      }\n      console.log('随机生成的mac地址:', str);\n      deviceList = [{ name: 'MellaPro', deviceType: 'mellaPro', macId: str }]\n      electronStore.set(`${userId}-deviceList`, deviceList)\n    }\n\n\n    function getRamNumber() {\n      var result = '';\n      for (var i = 0; i < 2; i++) {\n        result += Math.floor(Math.random() * 16).toString(16);//获取0-15并通过toString转16进制\n      }\n      //默认字母小写，手动转大写\n      return result.toLowerCase();//另toLowerCase()转小写\n    }\n    let deviceArr = []\n    let selectDevice = electronStore.get(`${storage.userId}-selectDevice`)\n    let selectDeviceName = ''\n    for (let i = 0; i < deviceList.length; i++) {\n      const element = deviceList[i];\n      let json = {\n        key: element.macId, value: element.name\n      }\n      deviceArr.push(json)\n      if (selectDevice === element.macId) {\n        selectDeviceName = element.name\n      }\n    }\n\n\n\n    return (\n      // <div className=\"item\" style={{ marginTop: px(15) }}>\n      <div className=\"title\">\n        <div className=\"hardSetting\">{`Hardware Settings`}</div>\n      </div>\n      // </div>\n    )\n  }\n\n\n  render() {\n    let { isBacklight, isBeep, backlightTimer, } = this.state\n\n    let bodyHeight = '90%'\n    try {\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\n    } catch (error) {\n\n    }\n\n\n    return (\n      <div id=\"settings\">\n        <div className=\"heard\">\n          <Heart />\n        </div>\n\n\n        <div className=\"body\">\n          <div className=\"setting\">\n            {/* 桌面设计 */}\n            <div className=\"desk\">\n              <div className=\"title\">Desktop Settings</div>\n\n              <div className=\"item\" style={{ marginBottom: px(10) }}>\n                <div className=\"l\">\n                  <div className=\"text\">Launch Mella on Computer Startup</div>\n                  <div className=\"icon\"\n                    onClick={() => this.setState({ self_tarting: !this.state.self_tarting })}\n                  >\n                    {(this.state.self_tarting) && <span  >&#xe619;</span>}\n\n                  </div>\n\n                </div>\n\n\n                <div className=\"l\" style={{ paddingLeft: px(50), paddingRight: px(50) }}>\n                  <div className=\"text\">Units:</div>\n                  <div className=\"unit\">\n\n\n                    <div className=\"one\"\n\n                      onClick={() => { this.setState({ isHua: true }) }}\n                    >\n                      <div className=\"check\">\n                        {(this.state.isHua) && <div className=\"ciral\" />}\n                      </div>\n                      <div className=\"unitsText\">°F / lbs</div>\n                    </div>\n                    <div className=\"one\"\n\n                      onClick={() => { this.setState({ isHua: false }) }}\n                    >\n                      <div className=\"check\">\n                        {(!this.state.isHua) && <div className=\"ciral\" />}\n                      </div>\n                      <div className=\"unitsText\">°C / kg</div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"item\" style={{ marginBottom: px(10) }}>\n\n              </div>\n\n            </div>\n\n            {/* 用户设计 */}\n            {\n              // storage.roleId === '3' &&\n              <div className=\"desk\">\n                <div className=\"title\">User Admin</div>\n\n                <div className=\"item\" style={{ marginBottom: px(10) }}>\n                  <div className=\"l\" onClick={() => { this.props.history.push('/menuOptions/ConnectWorkplace') }}>\n                    <div className=\"text\">{`Org & Practice Profiles`}</div>\n                    <div className=\"rightIcon\">&#xe60c;</div>\n\n                  </div>\n\n\n                  <div className=\"l\" onClick={() => {\n                    this.props.history.push({ pathname: '/uesr/logUp/InviteTeam', isAddDoctor: true })\n                    // this.props.history.push('/uesr/logUp/InviteTeam')\n                  }}>\n                    <div className=\"text\">Invite Your Team</div>\n                    <div className=\"rightIcon\">&#xe60c;</div>\n                  </div>\n                </div>\n\n                <div className=\"item\" style={{ marginBottom: px(10) }}>\n                  <div className=\"l\"\n                    onClick={() => {\n                      console.log(storage.roleId);\n                      message.destroy()\n                      if (storage.roleId === '3') {\n                        this.props.history.push('/menuOptions/veterinarians')\n                      } else {\n                        message.error('You do not have administrator rights')\n                      }\n                    }}\n\n                  >\n                    <div className=\"text\">Vet Profile Management</div>\n                    <div className=\"rightIcon\">&#xe60c;</div>\n                  </div>\n\n\n                  <div className=\"l \"\n                    onClick={() => this.props.history.push('/menuOptions/petAndParents')}\n\n                    style={{ marginTop: '25px', }}>\n                    <div className=\"text\">Pet and Parents Profile Management</div>\n                    <div className=\"rightIcon\">&#xe60c;</div>\n                  </div>\n                </div>\n\n              </div>\n            }\n\n\n            {/* 硬件设置 */}\n\n            <div className=\"desk\">\n\n              {this._device()}\n              <div className=\"item\">\n                <div className=\"l\">\n                  <div className=\"text\">Backlight</div>\n                  <Switch\n                    checked={isBacklight}\n                    onClick={() => this.setState({ isBacklight: !isBacklight })}\n                    size='small'\n                  />\n                </div>\n\n\n                <div className=\"l\">\n                  <div className=\"text\">Action Beep</div>\n                  <Switch\n                    checked={isBeep}\n                    onClick={() => this.setState({ isBeep: !isBeep })}\n                    size='small'\n                  />\n                </div>\n              </div>\n\n\n              <div className=\"item\">\n                <div className=\"l\">\n                  <div className=\"backlight\" style={{ width: px(300) }} >\n                    <div className=\"text\">Backlight Timer</div>\n                    <div className=\"solid\">\n                      10 Secs\n                      <div className=\"slider\" >\n                        <Slider\n                          min={10}\n                          max={60}\n                          railWidth={px(200)}\n                          getData={(e) => { console.log(e); this.setState({ backlightTimer: e }) }}\n                          left={backlightTimer.length}\n                        />\n                      </div>\n                      60 Secs\n                    </div>\n\n                  </div>\n                </div>\n\n\n                <div className=\"l\" >\n                  <div className=\"backlight\" style={{ width: px(300) }} >\n                    <div className=\"text\">Auto Off After</div>\n                    <div className=\"solid\">\n                      30 Secs\n                      <div className=\"slider\">\n                        <Slider\n                          min={30}\n                          max={60}\n                          railWidth={px(200)}\n                          getData={(e) => { this.setState({ autoOff: e }) }}\n                          left={this.state.autoOff.length}\n                        />\n                      </div>\n                      60 Secs\n                    </div>\n\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"item\">\n\n\n\n                <div className=\"l\" style={{ flexDirection: 'column', alignItems: 'flex-start' }}>\n                  <div className=\"text\">Measurement Time for Axillary Sensor</div>\n                  <div className=\"unit\">\n\n\n                    <div className=\"one\"\n                      onClick={() => { this.setState({ is15: true }) }}\n                    >\n                      <div className=\"check\">\n                        {(this.state.is15) && <div className=\"ciral\" />}\n                      </div>\n                      <div className=\"unitsText\">15 Secs</div>\n                    </div>\n                    <div className=\"one\"\n                      onClick={() => { this.setState({ is15: false }) }}\n                    >\n                      <div className=\"check\">\n                        {(!this.state.is15) && <div className=\"ciral\" />}\n                      </div>\n                      <div className=\"unitsText\">30 Secs</div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"l\" onClick={() => this.props.history.push('/menuOptions/advancedsettings')}>\n                  <div className=\"text\">Advanced Settings</div>\n                  <div className=\"rightIcon\">&#xe60c;</div>\n                </div>\n              </div>\n\n\n            </div>\n\n          </div>\n\n\n          <div className=\"btnSave\">\n            <Button\n              text={'Save Changes'}\n              onClick={this._save}\n            />\n          </div>\n        </div>\n\n        <MyModal\n          visible={this.state.isSave}\n          element={\n            <div className='isSave'\n            //  style={{ borderRadius: `${px(20)}px`, backgroundColor: '#fff' }}\n            >\n              <img src={redJinggao} alt=\"\" style={{ width: px(50), margin: `${px(25)}px 0` }} />\n              <p>Settings changed - save?</p>\n              <div className=\"btn\" style={{ margin: `${px(30)}px 0` }} >\n                <Button\n                  text={'Cancel'}\n                  onClick={() => {\n                    this.setState({\n                      isSave: false\n                    })\n                  }}\n                  textBoxStyle={{\n                    width: '40%',\n                    height: px(40)\n                  }}\n                />\n                <Button\n                  text={'OK'}\n                  onClick={this._save}\n                  textBoxStyle={{\n                    width: '40%',\n                    height: px(40)\n                  }}\n                />\n              </div>\n            </div>\n          }\n        />\n\n\n\n\n\n      </div>\n    )\n  }\n}\n",["178","179"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\team\\index.jsx",["180","181","182"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js",[],["183","184"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx",["185"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\backend.js",["186","187"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx",["188"],"\n\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './selectionBox.less'\nimport { px } from './../px'\nimport { stopBubble } from './../current'\n\nimport blackTriangle from './../../assets/img/blackTriangle.png'\n\n\nconst SelectionBox = ({ listArr, clickItem, clickitemBgc, clickItemColor, initSelectVale }) => {\n  const [selectValue, setSelectValue] = useState('')\n  const [mouseValue, setMouseValue] = useState('')\n  const [showSelect, setShowSelect] = useState(false)\n\n  const selection = () => {\n    let option = listArr.map((item, index) => {\n      let bacColor = item.value === selectValue ? clickitemBgc : item.value === mouseValue ? '#e7e7e7' : '#fff'\n      let textColor = item.value === selectValue ? clickItemColor : '#000'\n\n\n      // setBacColor(bacColor1)\n      // setTextColor(textColor1)\n      return <li\n        key={item.key}\n        style={{ paddingTop: px(5), paddingBottom: px(5), backgroundColor: bacColor, color: textColor }}\n        onClick={() => {\n          setSelectValue(item.value)\n          setShowSelect(false)\n          clickItem(item)\n        }}\n        onMouseMove={() => {\n          console.log();\n          if (item.value !== selectValue) {\n            setMouseValue(item.value)\n          }\n        }}\n        onMouseLeave={() => {\n          if (item.value !== selectValue) {\n            // setBacColor('#fff')\n            setMouseValue('')\n          }\n        }}\n      >{item.value}</li>\n    })\n    return (\n      <ul>\n        {option}\n      </ul>\n    )\n\n\n  }\n\n  useEffect(() => {\n    console.log(listArr[0]);\n    setSelectValue(listArr[0].value)\n    setMouseValue(listArr[0].value)\n    if (initSelectVale) {\n      setSelectValue(initSelectVale)\n    }\n  }, [])\n\n  return (\n    <div className='selectionbox'>\n\n      <div className=\"select flex\" style={{ height: px(26) }}>\n        <div className=\"flex box\" onClick={(e) => {\n          setShowSelect(true)\n          stopBubble(e)\n        }}>\n          <p style={{ fontSize: px(16), }}>{selectValue}</p>\n          <img src={blackTriangle} alt=\"\" style={{ height: '50%' }} />\n        </div>\n\n        {\n          showSelect &&\n          true &&\n          <div className=\"sortList\" style={{ top: px(26), }}>\n            {selection()}\n          </div>\n        }\n      </div>\n    </div>\n  )\n\n}\nSelectionBox.propTypes = {\n  listArr: PropTypes.array.isRequired,\n  clickItem: PropTypes.func,\n  clickitemBgc: PropTypes.string,\n  clickItemColor: PropTypes.string,\n  initSelectVale: PropTypes.string\n\n\n}\nSelectionBox.defaultProps = {\n  clickitemBgc: '#e1206d',\n  clickItemColor: '#fff',\n  initSelectVale: '',\n  clickItem: () => {\n\n  }\n}\nexport default SelectionBox\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["189","190","191","192","193","194","195","196","197"],"import React, { useState, useEffect } from 'react'\r\nimport {\r\n  Menu,\r\n  Popover,\r\n  Button,\r\n  Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport pinyin from 'pinyin';\r\nimport './phoneBook.less'\r\nimport { px } from '../px';\r\n/**\r\n *\r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns\r\n */\r\n\r\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\r\n  const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\r\n  const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\r\n  const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\r\n  const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\r\n  const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\r\n\r\n  const _phoneList = () => {\r\n    let option = phoneList.map((item, index) => {\r\n      let data = item.data\r\n      let option1 = data.map((value, index1) => {\r\n        return (\r\n          <li\r\n            key={`option1${index1}`}\r\n            onClick={() => {\r\n              setSelectBreed(value.petSpeciesBreedId)\r\n              selectFun(value)\r\n            }}>\r\n            {value.name}\r\n            {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\r\n          </li>\r\n        )\r\n      })\r\n      return (\r\n        <div className=\"phoneBody\">\r\n          <div className=\"title\" id={`${item.title}`} >{item.title} </div>\r\n          <ul>\r\n            {option1}\r\n          </ul>\r\n        </div>\r\n      )\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n  const _letterList = () => {\r\n\r\n    let option = letterList.map((item, index) => {\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n\r\n          style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\r\n          <a\r\n\r\n            onClick={() => {\r\n              litterClick(item)\r\n            }}\r\n          >{item}</a>\r\n        </li>\r\n      )\r\n\r\n    })\r\n\r\n    return (\r\n      <ul className=\"letterUL\">\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n  const litterClick = (anchorName) => {\r\n    // console.log(anchorName);\r\n    if (anchorName) {\r\n      // 找到锚点\r\n      let anchorElement = document.getElementById(anchorName);\r\n      // console.log(anchorElement);\r\n      // 如果对应id的锚点存在，就跳转到锚点\r\n      if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\r\n    }\r\n    // e.preventDefault();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (confirmSelectBreed !== -1) {\r\n      setSelectBreed(confirmSelectBreed)\r\n    }\r\n  }, [confirmSelectBreed]);\r\n\r\n  useEffect(() => {\r\n    let test = []\r\n    listDate.forEach((item, index) => {\r\n      let data = {\r\n        name: item.breedName,\r\n        hidden: false,\r\n        petSpeciesBreedId: item.petSpeciesBreedId\r\n      }\r\n      test.push(data)\r\n    })\r\n    //获取联系人列表\r\n    let list = test;\r\n    let sections = [], letterArr = [];\r\n    // 右侧字母栏数据处理\r\n    list.forEach((item, index) => {\r\n      letterArr.push(pinyin(item.name.substring(0, 1), {\r\n        style: pinyin.STYLE_FIRST_LETTER,\r\n      })[0][0].toUpperCase());\r\n\r\n      letterArr = [...new Set(letterArr)].sort();\r\n    });\r\n    // 分组数据处理\r\n    letterArr.forEach((item, index) => {\r\n      sections.push({\r\n        title: item,\r\n        data: []\r\n      })\r\n    });\r\n    list.forEach(item => {\r\n      let listItem = item;\r\n      sections.forEach(item => {\r\n        let first = listItem.name.substring(0, 1);\r\n        let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\r\n        if (item.title == test) {\r\n          item.data.push({\r\n            firstName: first,\r\n            name: listItem.name,\r\n            hidden: listItem.hidden,\r\n            petSpeciesBreedId: listItem.petSpeciesBreedId\r\n          });\r\n        }\r\n      })\r\n    });\r\n    setPhoneList(sections)\r\n    setPhoneListCopy(sections)\r\n    setLetterList(letterArr)\r\n    setLetterListCopy(letterArr)\r\n  }, [listDate]);\r\n\r\n  useEffect(() => {\r\n    if (letterListCopy.length > 0) {\r\n      let allData = phoneListCopy\r\n      let newArr = []\r\n      let arr = []\r\n      if (searchText.length > 0) {\r\n        allData.map((item, i) => {\r\n          item.data.forEach((data, index) => {\r\n            let dataName = data.name ? data.name.toUpperCase() : ''\r\n            let keyData = searchText ? searchText.toUpperCase() : ''\r\n            if (dataName.search(keyData) !== -1) {\r\n              newArr.push(data)\r\n            }\r\n          })\r\n          if (newArr.length != 0) {\r\n            let oneGreep = {\r\n              title: item.title,\r\n              data: newArr\r\n            }\r\n            arr.push(oneGreep)\r\n          }\r\n          newArr = []\r\n        })\r\n        let letterArr = []\r\n        arr.forEach((item, index) => {\r\n          letterArr.push(item.title)\r\n        })\r\n        setPhoneList(arr)\r\n        setLetterList(letterArr)\r\n      } else {\r\n        setPhoneList(phoneListCopy)\r\n        setLetterList(letterListCopy)\r\n      }\r\n    }\r\n  }, [searchText]);\r\n\r\n  return (\r\n    <div id=\"phoneBook\">\r\n      <div className=\"phone\">\r\n        {_phoneList()}\r\n      </div>\r\n      <div className=\"litter\">\r\n        {_letterList()}\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n  listDate: PropTypes.array,\r\n  selectFun: PropTypes.func,\r\n  searchText: PropTypes.string,\r\n  confirmSelectBreed: PropTypes.number\r\n}\r\nPhoneBook.defaultProps = {\r\n  listDate: [],\r\n  selectFun: () => { },\r\n  searchText: '',\r\n  confirmSelectBreed: -1,\r\n}\r\n\r\nexport default PhoneBook\r\n",["198","199"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx",["200","201","202","203","204"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\hardWareTypeUI.jsx",["205"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243"],"import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Layout, message, Input, Modal, Table, Popconfirm, Select } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport edit from \"./../../assets/images/edit.png\";\nimport del from \"./../../assets/images/del.png\";\nimport start from \"./../../assets/img/start.png\";\nimport placement_gang from \"./../../assets/images/placement_gang.png\";\nimport placement_er from \"./../../assets/images/placement_er.png\";\nimport palcement_ye from \"./../../assets/images/palcement_ye.png\";\n\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\nimport { px, mTop } from \"../../utils/px\";\nimport electronStore from \"../../utils/electronStore\";\nimport UnassignModal from './../../components/UnassignModal/UnassignModal';\nimport SelectPet from \"../../components/selectPetModal\";\nimport AddPetModal from \"../../components/addPetModal\";\nimport {\n  addAllClinical,\n  deletePetExamByExamId,\n  getClinicalDataByExamId,\n  getPetExamAndClinicalByPetId,\n  getPetExamByDoctorId,\n  updatePetExam,\n  updatePetInfo,\n  addAndSavePetExam,\n  addDeskPet,\n} from \"../../api\";\n\nimport { connect } from \"react-redux\";\nimport { setTest } from \"../../store/actions\";\nimport ReactECharts from \"echarts-for-react\";\nimport propTypes from \"prop-types\";\nimport moment from \"moment\";\nimport Draggable from \"react-draggable\";\nimport _ from \"lodash\";\n\nimport \"./index.less\";\n\n\nlet resyncDeviceIsClick = true; //用于控制多次点击重新配对按钮\nlet storage = window.localStorage;\n\nlet mellaMeasureNumCopy = 0;\n\n//定义echarts的数据个数\nconst { Option } = Select;\nlet saveHistoryTime = null;\nconst ClinicalStudy = ({\n  bodyHeight,\n  mellaConnectStatus,\n  mellaMeasureValue,\n  mellaMeasureNum,\n  petDetailInfo,\n  setTest,\n  biggieBodyWeight,\n  biggieUnit,\n}) => {\n  const [units, setUnits] = useState(\"\");\n  const [temperature, setTemp] = useState(0);\n  const [showHistoryEchart, setShowHistoryEchart] = useState(false);\n  const [echarsData, setEcharsData] = useState({\n    Eci: [],\n    wen0: [],\n    wen1: [],\n  });\n  const [echarsData1, setEcharsData1] = useState({\n    Eci: [],\n    wen0: [],\n    wen1: [],\n  });\n  const [mellaStatus, setMellaStatus] = useState(\"disconnected\");\n  const [roomTemperature, setRoomTemperature] = useState(\"\");\n  const [referenceRectalTemperature, setReferenceRectalTemperature] =\n    useState(\"\");\n  const [bodyConditionScore, setBodyConditionScore] = useState(\"\");\n  const [furLength, setFurLength] = useState(\"\");\n  const [heartRate, setHeartRate] = useState(\"\");\n  const [bloodPressure, setBloodPressure] = useState(\"\");\n  const [respiratoryRate, setRespiratoryRate] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [isPetCharacteristics, setIsPetCharacteristics] = useState(false);\n  const [historyData, setHistoryData] = useState([]);//walk-in中未分配的数据\n  const [editRectal, setEditRectal] = useState(\"\");\n  const [editRoomTemperature, setEditRoomTemperature] = useState(\"\");\n  const [editHeartRate, setEditHeartRate] = useState(\"\");\n  //定义变量 editBloodPressure,  editRespiratoryRate, editVisible: true, editId: key, memo: record.note, editBodyConditionScore, editFurLength\n  const [editBloodPressure, setEditBloodPressure] = useState(\"\");\n  const [editRespiratoryRate, setEditRespiratoryRate] = useState(\"\");\n  const [editVisible, setEditVisible] = useState(false);\n  const [editId, setEditId] = useState(\"\");\n  const [editMemo, setEditMemo] = useState(\"\");\n  const [editBodyConditionScore, setEditBodyConditionScore] = useState(\"\");\n  const [editFurLength, setEditFurLength] = useState(\"\");\n  const [tipSpin, setTipSpin] = useState(false);\n  const [tip, setTip] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [bounds, setBounds] = useState({\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  });\n  const [memo, setMemo] = useState(\"\");\n  const [windowWidth, setWindowWidth] = useState(px(500));\n  const [WeightValue, setWeightValue] = useState('');\n  const echartsElement = useRef(null);\n  const clinicalRef = useRef(null);\n  const [assignVisible, setAssignVisible] = useState(false);\n  const [seleceEmergencies, setSeleceEmergencies] = useState({});\n  const [lastWorkplaceId, setLastLastWorkplaceId] = useState('');\n  const [selectPetVisible, setSelectPetVisible] = useState(false);//选择宠物弹窗显隐\n  const [addPetVisible, setAddPetVisible] = useState(false);//添加新宠物弹窗显隐\n  const [selectPetModalLoading, setSelectPetModalLoading] = useState(false);//分配宠物后调用接口加载\n  const [addPetModalLoading, setAddPetModalLoading] = useState(false);//添加新宠物调用接口加载\n  const [addPetId, setAddPetId] = useState('');//添加宠物成功后返回的宠物id\n  const [pageSize, setPageSize] = useState(10); // 每页10条\n  const [total, setTotal] = useState(0);//历史数据的总条数\n  const [currPage, setCurrPage] = useState(1);//页码\n\n  //分辨率变化\n  const chartsBox = useCallback((node) => {\n    if (node !== null && echartsElement.current) {\n      setTimeout(() => {\n        echartsElement.current.getEchartsInstance().resize({ height: px(380) });\n      }, 1000)\n    }\n  }, [window.screen.availWidth]);\n  //窗口宽高变化\n  const resize = () => {\n    if (clinicalRef.current && clinicalRef.current.offsetWidth) {\n      setWindowWidth(clinicalRef.current.offsetWidth);\n    }\n  };\n  const addClinical = () => {\n    let emerData = [];\n    let { Eci, wen0, wen1 } = echarsData;\n    for (let i = 0; i < wen0.length; i++) {\n      const element = wen0[i];\n      let str = {\n        data0: element,\n        data1: wen1[i],\n      };\n      emerData.push(str);\n    }\n    saveHistoryTime && clearTimeout(saveHistoryTime);\n    saveHistoryTime = setTimeout(() => {\n      let BCS =\n        bodyConditionScore === \"\" ? null : parseFloat(bodyConditionScore);\n      let hrartR = heartRate === \"\" ? null : parseFloat(heartRate);\n      let respireatoryR =\n        respiratoryRate === \"\" ? null : parseFloat(respiratoryRate);\n\n      let roomT =\n        roomTemperature === \"\"\n          ? null\n          : ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2);\n\n      let referenceT =\n        referenceRectalTemperature === \"\"\n          ? null\n          : ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2);\n\n      let furL = furLength === \"\" ? null : parseFloat(furLength);\n\n      let petVitalId = 1;\n\n      let datas = {\n        temperature: parseFloat(temperature), //测量温度\n        roomTemperature: roomT, //室温\n        bodyConditionScore: BCS, //身体状况评分\n        heartRate: hrartR, //心率\n        respiratoryRate: respireatoryR, //呼吸率\n        referenceRectalTemperature: referenceT, //参考腹部温度\n        furLength: furL, //毛发长度\n        bloodPressure: bloodPressure, //血压\n        memo: notes,\n        petVitalTypeId: petVitalId,\n        clinicalDataEntityList: emerData,\n        anusTemperature: referenceT\n      };\n      if (storage.roleId === `1`) {\n        datas.userId = storage.userId;\n      } else {\n        datas.doctorId = storage.userId;\n        datas.userId = storage.userId;\n      }\n      let ubdateWeight = units === \"℉\" ? (parseFloat(WeightValue / 2)).toFixed(2) : parseFloat(WeightValue).toFixed(2);\n      let updatePetInfoData = {\n        weight: ubdateWeight\n      }\n      if (storage.lastOrganization) {\n        updatePetInfoData.organizationId = storage.lastOrganization\n      }\n\n      let { petId, isWalkIn } = petDetailInfo;\n      if (petId && !isWalkIn) {\n        datas.petId = petId;\n        addAllClinical(datas)\n          .then((res) => {\n            if (res.flag === true) {\n              message.success(\"Uploaded successfully\");\n              _getHistory11(petDetailInfo.petId);\n            } else {\n              message.error(\"upload failed\");\n            }\n          })\n          .catch((err) => {\n            message.error(\"upload failed\");\n          });\n      } else if (isWalkIn) {\n        addAllClinical(datas)\n          .then((res) => {\n            if (res.flag === true) {\n              message.success(\"Uploaded successfully\");\n              _getEmergencyHistory(1);\n            } else {\n              message.error(\"upload failed\");\n            }\n          })\n          .catch((err) => {\n            message.error(err);\n          });\n      }\n      if (WeightValue !== '' && !isWalkIn) {\n        updatePetInfo(petId, updatePetInfoData)\n          .then((res) => {\n            if (res.flag === true) {\n\n            } else {\n              message.error('Failed to update pet weight');\n            }\n          })\n          .catch(err => {\n            console.log(err);\n          })\n      }\n    }, 500);\n  };\n  const _getHistory11 = (petId) => {\n    let historys = [];\n    setLoading(true);\n    getPetExamAndClinicalByPetId(petId)\n      .then((res) => {\n        setLoading(false);\n        if (res.flag === true) {\n          let datas = res.data;\n          for (let i = datas.length - 1; i >= 0; i--) {\n            let data = datas[i];\n\n            let {\n              petId,\n              examId,\n              clinicalDatagroupId,\n              userId,\n              petVitalTypeId,\n              temperature,\n              roomTemperature,\n              bloodPressure,\n              memo,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              createTime,\n              clinicalDataEntity,\n              modifiedTime,\n            } = data;\n\n            if (!clinicalDatagroupId) {\n              continue;\n            }\n            let Tem = temperature;\n            if (clinicalDataEntity) {\n              Tem = Tem || clinicalDataEntity.data0;\n            }\n            Tem = Tem ? Tem : 0;\n\n            let time = null;\n            if (\n              modifiedTime &&\n              `${modifiedTime}` !== \"\" &&\n              `${modifiedTime}` !== `undefined`\n            ) {\n              time = modifiedTime;\n            } else {\n              time = createTime;\n            }\n            let json = {\n              time,\n              Temp: Tem,\n              placement: petVitalTypeId,\n              note: memo,\n              historyId: examId,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n            };\n            historys.push(json);\n          }\n          let historyData = [];\n          for (let i = 0; i < historys.length; i++) {\n            let history = historys[i];\n            let {\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n              examId,\n            } = history;\n            // console.log('--------', history.placement);\n            let placement = history.placement;\n            if (placement === null || placement === \"\") {\n              placement = 1;\n            }\n            let str = {\n              date: moment(history.time).format(\"MMM DD\"),\n              time: moment(history.time).format(\"hh:mm A\"),\n              temp: history.Temp,\n              placement,\n              note: history.note,\n              historyId: history.historyId,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n              key: examId,\n            };\n            historyData.push(str);\n          }\n          // this.setState({\n          //     historyData\n          // })\n          setHistoryData(historyData);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  };\n  //获取walk-in下未分配宠物的临床测试记录\n  const _getEmergencyHistory = (currPage) => {\n    let historys = [];\n    setLoading(true);\n    let data = {\n      pageSize: pageSize,\n      currPage: currPage,\n    }\n    getPetExamByDoctorId(storage.userId, data)\n      .then((res) => {\n        setLoading(false);\n        if (res.flag === true) {\n          setTotal(res.data.totalCount);\n          let datas = res.data.list;\n          for (let i = datas.length - 1; i >= 0; i--) {\n            let {\n              petId,\n              examId,\n              userId,\n              petVitalTypeId,\n              temperature,\n              roomTemperature,\n              bloodPressure,\n              memo,\n              clinicalDatagroupId,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              createTime,\n              clinicalDataEntity,\n            } = datas[i];\n            let Tem = temperature;\n            try {\n              Tem = temperature || clinicalDataEntity.data0;\n            } catch (error) {\n              console.log(\"抛出的异常\", error);\n            }\n            let str = {\n              clinicalDatagroupId,\n              createTime,\n              date: moment(createTime).format(\"MMM DD\"),\n              time: moment(createTime).format(\"hh:mm A\"),\n              temp: parseInt(Tem * 10) / 10,\n              placement: petVitalTypeId,\n              note: memo,\n              historyId: examId,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n            };\n            historys.push(str);\n          }\n          let newArr = [];\n          if (currPage === 1) {\n            newArr = historys;\n          } else {\n            let oldArr = historyData;\n            let arr = historys;\n            newArr = [...oldArr, ...arr];\n          }\n          setHistoryData(_.orderBy(newArr, 'createTime', 'desc'));\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  };\n  const getOption = () => {\n    let option = {};\n    try {\n      let min, max;\n      if (units === \"℃\") {\n        min = 25;\n        max = 45;\n      } else {\n        min = 75;\n        max = 115;\n      }\n      let { Eci, wen0, wen1 } = _.isEmpty(echarsData1.Eci)\n        ? echarsData\n        : echarsData1;\n      option = {\n        color: [\"#81b22f\"],\n        tooltip: {\n          /*返回需要的信息*/\n          trigger: \"axis\",\n          triggerOn: \"mousemove\",\n          enterable: true,\n          formatter: function (param) {\n            var value = param[0].value;\n            // console.log('---valuez值', value, units);\n            if (\n              (units === \"℉\" && parseInt(value) <= 32) ||\n              (units === \"℃\" && parseInt(value) == 0)\n            ) {\n              return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:--</div>`;\n            }\n            return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(\n              1\n            )}${units}</div>`;\n          },\n        },\n        xAxis: {\n          name: \"SPL\",\n          nameLocation: \"end\",\n          nameTextStyle: {\n            align: \"left\",\n          },\n          type: \"category\",\n          data: Eci,\n          axisLine: {\n            lineStyle: {\n              // 设置x轴颜色\n              color: \"#A0A0A0\",\n              show: true,\n            },\n          },\n          // 设置X轴数据旋转倾斜\n          axisLabel: {\n            rotate: 0, // 旋转角度\n            interval: 29, //设置X轴数据间隔几个显示一个，为0表示都显示\n          },\n        },\n        yAxis: {\n          name: \"temperature\",\n          type: \"value\",\n          min, // 设置y轴刻度的最小值\n          max, // 设置y轴刻度的最大值\n          splitNumber: 0, // 设置y轴刻度间隔个数\n          nameTextStyle: {\n            padding: [0, 0, 0, 8],\n            // backgroundColor: 'pink',\n            width: \"1200px\",\n            // fontSize: 20,\n            align: \"left\",\n          },\n\n          axisLine: {\n            lineStyle: {\n              // 设置x轴颜色\n              color: \"#A0A0A0\",\n              show: true,\n            },\n          },\n          splitLine: {\n            show: false,\n          },\n        },\n        series: [\n          {\n            name: \"模拟数据\",\n            type: \"line\",\n            showSymbol: false,\n            hoverAnimation: false,\n            // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\n            data: wen0,\n            smooth: 0.5,\n            symbol: \"none\",\n            // itemStyle: {\n            //     normal: {\n\n            //     }\n            // }\n            lineStyle: {\n              // 系列级个性化折线样式\n              width: 2,\n              type: \"solid\",\n              color: {\n                type: \"linear\",\n                x: 0,\n                y: 1,\n                x2: 0,\n                y2: 0,\n                colorStops: [\n                  {\n                    offset: 0.5,\n                    color: \"#47C2ED\", // 0% 处的颜色  蓝\n                  },\n                  {\n                    offset: 1,\n                    color: \"#78D35D\", // 50% 处的颜色  绿\n                  },\n                  // {\n                  //   offset: 1, color: 'red' // 100% 处的颜色   红\n                  // }\n                ],\n                globalCoord: false, // 缺省为 false\n              },\n            },\n          },\n        ],\n      };\n    } catch (error) { }\n\n    return option;\n  };\n  const _status = () => {\n    let text = \"\",\n      unit = \"\",\n      temColor = \"\";\n    let Temp = parseFloat(temperature);\n    if (mellaConnectStatus === \"disconnected\") {\n      if (!showHistoryEchart) {\n        Temp = \"\";\n        text = \"disconnected\";\n        temColor = \"#3B3A3A\";\n      } else {\n        text = \"disconnected\";\n        temColor = \"#3B3A3A\";\n      }\n    } else if (mellaConnectStatus === \"connected\") {\n      Temp = \"\";\n      text = \"connected\";\n      temColor = \"#3B3A3A\";\n    } else {\n      text = \"connected\";\n      temColor = \"#3B3A3A\";\n      if (Temp > 15) {\n        unit = units;\n        if (Temp > 39) {\n          text = \"High\";\n          temColor = \"#E1206D\";\n        } else if (Temp < 31) {\n          text = \"Low\";\n          temColor = \"#47C2ED\";\n        } else {\n          text = \"Normal\";\n          temColor = \"#78D35D\";\n        }\n      }\n    }\n    let temp = null;\n\n    if (`${Temp}` !== \"NaN\" && Temp) {\n      temp =\n        units === \"℉\" ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1);\n    }\n    let lowFlog = false;\n    if (unit === \"℃\") {\n      if (temp < 24.8) {\n        lowFlog = true;\n      }\n    } else {\n      if (temp < 76.6) {\n        lowFlog = true;\n      }\n    }\n\n    return (\n      <div\n        className=\"Tem\"\n        style={{\n          color: temColor,\n          right: px(100),\n          bottom: mTop(120),\n          pointerEvents: \"none\",\n        }}\n      >\n        {mellaConnectStatus !== \"isMeasuring\" ? (\n          showHistoryEchart ? (\n            <>\n              <span style={{ fontSize: px(46), fontWeight: \"bold\" }}>\n                {temp}{\" \"}\n                <sup style={{ fontSize: px(28), fontWeight: \"bold\" }}>\n                  {units}\n                </sup>\n              </span>\n              <br />\n              {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\n\n              <span\n                style={{\n                  fontSize: px(32),\n                  color: \"#8a8a8a\",\n                  fontWeight: \"bold\",\n                }}\n              >{`History`}</span>\n            </>\n          ) : (\n            <>\n              <span style={{ fontSize: px(46), fontWeight: \"bold\" }}>\n                {temp < 3 && !temp ? null : temp}{\" \"}\n                <sup style={{ fontSize: px(28), fontWeight: \"bold\" }}>\n                  {unit}\n                </sup>\n              </span>\n              <br />\n              <span style={{ fontSize: px(32), fontWeight: \"bold\" }}>\n                {text}\n              </span>\n            </>\n          )\n        ) : lowFlog ? (\n          <>\n            <span style={{ fontSize: px(46), fontWeight: \"bold\" }}>\n              {\"Low\"}\n            </span>\n            <br />\n          </>\n        ) : (\n          <>\n            <span style={{ fontSize: px(46), fontWeight: \"bold\" }}>\n              {temp}{\" \"}\n              <sup style={{ fontSize: px(28), fontWeight: \"bold\" }}>{unit}</sup>\n            </span>\n            <br />\n          </>\n        )}\n      </div>\n    );\n  };\n  const handleChange = (index) => {\n    console.log(\"---------\", index);\n    setFurLength(index);\n  };\n  //Exam Details内容\n  const _petCharacteristics = () => {\n    let placeholder = \"\";\n    switch (`${furLength}`) {\n      case \"1\":\n        placeholder = \"smooth\";\n        break;\n      case \"2\":\n        placeholder = \"short\";\n        break;\n      case \"3\":\n        placeholder = \"medium\";\n        break;\n      case \"4\":\n        placeholder = \"long\";\n        break;\n      default:\n        break;\n    }\n    return (\n      <div\n        className=\"petChaeacteristics\"\n        style={{ paddingLeft: px(10), paddingRight: px(10), height: \"100%\" }}\n      >\n        <div className=\"child\">\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Room Temperature: </p>\n            <Input\n              className=\"inp\"\n              value={roomTemperature}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setRoomTemperature(str);\n              }}\n              suffix={'℉'}\n              maxLength={8}\n            />\n          </div>\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Reference Rectal Temperature: </p>\n            <Input\n              className=\"inp\"\n              value={`${referenceRectalTemperature}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setReferenceRectalTemperature(str);\n              }}\n              suffix={'℉'}\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <div className=\"child\">\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Body Condition Score: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={bodyConditionScore}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setBodyConditionScore(str);\n              }}\n              maxLength={8}\n            />\n          </div>\n          <div className=\"item\">\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Fur Length: </p>\n            <Select\n              className=\"inpSelect\"\n              placeholder\n              onChange={handleChange}\n              value={placeholder}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n        </div>\n        <div className=\"child\">\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Heart Rate: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={`${heartRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setHeartRate(str);\n              }}\n              suffix={'bpm'}\n              maxLength={8}\n            />\n          </div>\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Blood Pressure: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={bloodPressure}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setBloodPressure(str);\n              }}\n              suffix={'mm'}\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <div className=\"child\">\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Respiratory Rate: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={`${respiratoryRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setRespiratoryRate(str);\n              }}\n              suffix={'bpm'}\n              maxLength={8}\n            />\n          </div>\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: '140px' }}>Weight:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n              value={WeightValue}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                setWeightValue(str);\n              }}\n              suffix={units === '℉' ? 'lb' : 'kg'}\n              maxLength={8}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n  //历史数据\n  const _history = () => {\n    const _del = (key, record) => {\n      deletePetExamByExamId(key)\n        .then(\n          (res) => {\n            if (res.flag === true) {\n              const historyData1 = [...historyData];\n              setHistoryData(\n                historyData1.filter((item) => item.historyId !== key)\n              );\n            } else {\n              message.error('fail to delete!');\n            }\n          }\n        );\n    };\n    const _edit = (key, record) => {\n      let {\n        heartRate,\n        bloodPressure,\n        respiratoryRate,\n        referenceRectalTemperature,\n        roomTemperature,\n        bodyConditionScore,\n        furLength,\n        note,\n      } = record;\n      let editHeartRate =\n        heartRate !== null && heartRate !== undefined ? heartRate : \"\";\n      let editBloodPressure =\n        bloodPressure !== null && bloodPressure !== undefined\n          ? bloodPressure\n          : \"\";\n      let editRespiratoryRate =\n        respiratoryRate !== null && respiratoryRate !== undefined\n          ? respiratoryRate\n          : \"\";\n      let editRectal =\n        referenceRectalTemperature !== null &&\n          referenceRectalTemperature !== undefined\n          ? (referenceRectalTemperature * 1.8 + 32).toFixed(1)\n          : \"\";\n      let editRoomTemperature =\n        roomTemperature !== null && roomTemperature !== undefined\n          ? (roomTemperature * 1.8 + 32).toFixed(1)\n          : \"\";\n      let editBodyConditionScore =\n        bodyConditionScore !== null && bodyConditionScore !== undefined\n          ? bodyConditionScore\n          : \"\";\n      let editFurLength = furLength;\n      let mome = note ? note : \"\";\n\n      console.log(\n        editRectal,\n        editRoomTemperature,\n        editHeartRate,\n        editBloodPressure,\n        editRespiratoryRate\n      );\n\n      //更新editRectal,editRoomTemperature,editHeartRate,editBloodPressure,editRespiratoryRate,editVisible: true,editId: key,memo: record.note,editBodyConditionScore,editFurLength\n      setEditRectal(editRectal);\n      setEditRoomTemperature(editRoomTemperature);\n      setEditHeartRate(editHeartRate);\n      setEditBloodPressure(editBloodPressure);\n      setEditRespiratoryRate(editRespiratoryRate);\n      setEditVisible(true);\n      setEditId(key);\n      setEditMemo(record.note);\n      setEditBodyConditionScore(editBodyConditionScore);\n      setEditFurLength(editFurLength);\n      setMemo(mome);\n    };\n    const see = (id, record) => {\n      setEcharsData1({\n        Eci: [],\n        wen0: [],\n        wen1: [],\n      });\n      console.log(id, record);\n      setTip(\"data is loading\");\n      setTipSpin(true);\n      getClinicalDataByExamId(id)\n        .then((res) => {\n          setTip(\"\");\n          setTipSpin(false);\n          if (res.flag) {\n            let datas = res.data.clinicalDataEntityList;\n            if (datas) {\n              let echarsData = {\n                Eci: [],\n                wen0: [],\n                wen1: [],\n              };\n              let { wen0, wen1, Eci } = echarsData;\n              for (let i = 0; i < datas.length; i++) {\n                let { data0, data1 } = datas[i];\n\n                Eci.push(i);\n                if (units === \"℃\") {\n                  wen0.push(data0);\n                  wen1.push(data1);\n                } else {\n                  wen0.push(data0 * 1.8 + 32);\n                  wen1.push(data1 * 1.8 + 32);\n                }\n              }\n              let Temp = datas[datas.length - 1].data0 || \"\";\n              setEcharsData(echarsData);\n              setTemp(Temp);\n              setShowHistoryEchart(true);\n            }\n          }\n        })\n        .catch((err) => {\n          setTip(\"\");\n          setTipSpin(false);\n          console.log(err);\n        });\n    };\n    const isflog = window.screen.height < 1000 ? true : false;\n    const columns = [\n      {\n        title: \"\",\n        dataIndex: \"operation\",\n        key: \"operation\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n\n        render: (text, record, index) => {\n          return (\n            <div\n              className=\"activeImageBox\"\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => _del(record.historyId, record)}\n              >\n                <img src={del} alt=\"\" className=\"activeImages\" />\n              </Popconfirm>\n              {petDetailInfo.isWalkIn ? (\n                <div\n                  className=\"assign\"\n                  style={{\n                    fontSize: px(14),\n                  }}\n                  onClick={() => {\n                    setSelectPetVisible(true);\n                    setSeleceEmergencies(record);\n                    setLastLastWorkplaceId(storage.lastOrganization);\n                  }}\n                >\n                  Assign\n                </div>\n              ) : (\n                <>\n                  <img\n                    src={edit}\n                    alt=\"\"\n                    // style={{ width: px(25) }}\n                    onClick={() => _edit(record.historyId, record)}\n                    className=\"activeImages\"\n                  />\n\n                  <img\n                    src={start}\n                    alt=\"\"\n                    // style={{ width: px(25) }}\n                    onClick={() => see(record.historyId, record)}\n                    className=\"activeImages\"\n                  />\n                </>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        key: \"date\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      {\n        title: \"Time\",\n        dataIndex: \"time\",\n        key: \"time\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      {\n        title: `Temp(${units})`,\n        // title: `Temp(℉)`,\n        key: \"temp\",\n        dataIndex: \"temp\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          // console.log(text, record);\n\n          /**\n           * bag：温度数值前的圆圈的背景颜色\n           * tem：展示的温度\n           * endvalue:将从后台得到的数据全部转化成华氏度\n           * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n           * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n           *\n           */\n\n          let bag = \"\",\n            tem = \"\";\n\n          let endValue =\n            text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10;\n          let min = 100.4,\n            max = 102.56;\n\n          if (endValue > max) {\n            bag = \"#E1206D\";\n          } else if (endValue < min) {\n            bag = \"#98DA86\";\n          } else {\n            bag = \"#58BDE6\";\n          }\n\n          if (units === \"℃\") {\n            if (text) {\n              tem = `${text}${units}`;\n              if (text > 55) {\n                tem = `${((text - 32) / 1.8).toFixed(1)}${units}`;\n              } else {\n                tem = `${text.toFixed(1)}${units}`;\n              }\n            }\n          } else {\n            if (text) {\n              if (text > 55) {\n                tem = `${text}${units}`;\n              } else {\n                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${units}`;\n              }\n            }\n          }\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {tem ? (\n                <div\n                  style={{\n                    width: \"8px\",\n                    height: \"8px\",\n                    borderRadius: \"8px\",\n                    backgroundColor: bag,\n                    marginRight: \"3px\",\n                  }}\n                />\n              ) : null}\n              <p style={{ margin: 0, padding: 0 }}>{tem}</p>\n            </div>\n          );\n        },\n      },\n      {\n        title: `Rectal Temperature`,\n        key: \"referenceRectalTemperature\",\n        dataIndex: \"referenceRectalTemperature\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          // console.log('肛温的值：', text);\n          let num = text;\n          if (text !== null) {\n            num = (text * 1.8 + 32).toFixed(1);\n          }\n\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {text !== null && (\n                <p style={{ margin: 0, padding: 0 }}>\n                  {num} <span>{\"℉\"}</span>\n                </p>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        title: \"Placement\",\n        dataIndex: \"placement\",\n        key: \"placement\",\n        align: \"center\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          switch (record.placement) {\n            case 1:\n              return (\n                //腋温\n                <div>\n                  <img src={palcement_ye} alt=\"\" />\n                </div>\n              );\n            case 3:\n              return (\n                //肛温\n                <div>\n                  <img src={placement_gang} alt=\"\" />\n                </div>\n              );\n            case 2:\n              return (\n                //肛温\n                <div>\n                  <img src={placement_gang} alt=\"\" />\n                </div>\n              );\n            case 4:\n              return (\n                //耳温\n                <div>\n                  <img src={placement_er} alt=\"\" />\n                </div>\n              );\n            default:\n              return null;\n          }\n        },\n      },\n      {\n        title: \"Note\",\n        dataIndex: \"note\",\n        key: \"note\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          return <p style={{ width: \"100%\" }}>{text}</p>;\n        },\n      },\n    ];\n    let hisHe = mTop(200);\n    try {\n      let historyElement = document.querySelectorAll(\n        \"#clinicalMeasure11 .historyTable\"\n      );\n      hisHe = historyElement[0].clientHeight - mTop(100);\n    } catch (error) { }\n\n    return (\n      <div className=\"historyTableBox\" onScrollCapture={onScrollCapture}>\n        <Table\n          className=\"historyTable\"\n          columns={columns}\n          loading={loading}\n          dataSource={historyData}\n          rowKey={(columns) => columns.historyId}\n          // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\n          pagination={false}\n          scroll={{\n            // y: hisHe,\n            y: '80%'\n          }}\n        />\n      </div>\n    );\n  };\n  //滚动监听\n  const onScrollCapture = () => {\n    // 滚动的容器\n    let tableEleNodes = document.querySelectorAll(`.historyTable .ant-table-body`)[0];\n    //是否滚动到底部\n    let bottomType = Math.round(tableEleNodes?.scrollTop) + tableEleNodes?.clientHeight === tableEleNodes?.scrollHeight;\n    if (bottomType) {\n      if (total === historyData.length) {\n        return false;\n      }\n      setCurrPage(currPage + 1);\n      _getEmergencyHistory(currPage + 1);\n    }\n  }\n  const _editModal = () => {\n    function save() {\n      let datas = {\n        memo: memo,\n        bodyConditionScore: parseInt(editBodyConditionScore),\n        furLength: parseInt(editFurLength),\n        heartRate: editHeartRate,\n        bloodPressure: editBloodPressure,\n        respiratoryRate: editRespiratoryRate,\n      };\n      if (editRoomTemperature) {\n        datas.roomTemperature = (\n          (parseFloat(editRoomTemperature) - 32) /\n          1.8\n        ).toFixed(2);\n      }\n      if (editRectal) {\n        datas.referenceRectalTemperature = (\n          (parseFloat(editRectal) - 32) /\n          1.8\n        ).toFixed(2);\n      }\n\n      setEditVisible(false);\n      setTip(\"Data is being modified\");\n      setTipSpin(true);\n\n\n      updatePetExam(editId, datas)\n        .then((res) => {\n          console.log(res);\n          setTipSpin(false);\n          setTip(\"\");\n          message.success(\"Data modified successfully\");\n\n          _getHistory11(petDetailInfo.petId);\n        })\n        .catch((err) => {\n          setTipSpin(false);\n          setTip(\"\");\n\n          message.success(\" Data modification failed\");\n\n          console.log(err);\n        });\n    }\n\n    let furLength = \"\";\n    if (editFurLength !== null && editFurLength !== undefined) {\n      switch (`${editFurLength}`) {\n        case \"1\":\n          furLength = \"smooth\";\n          break;\n        case \"2\":\n          furLength = \"short\";\n          break;\n        case \"3\":\n          furLength = \"medium\";\n          break;\n        case \"4\":\n          furLength = \"long\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return (\n      <Modal\n        title={\n          <div\n            style={{\n              width: \"100%\",\n              cursor: \"move\",\n              height: \"20px\",\n              textAlign: \"center\",\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                setDisabled(false);\n              }\n            }}\n            onMouseOut={() => {\n              setDisabled(true);\n            }}\n            onFocus={() => { }}\n            onBlur={() => { }}\n          // end\n          >\n            Modification history information\n          </div>\n        }\n        visible={editVisible}\n        // visible={true}\n        onCancel={() => {\n          setEditVisible(false);\n        }}\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n          // onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div>{modal}</div>\n          </Draggable>\n        )}\n        footer={\n          [] // 设置footer为空，去掉 取消 确定默认按钮\n        }\n        destroyOnClose={true}\n        className=\"editModalBox\"\n      >\n        <div id=\"selectEmergenciesModal\">\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Room Temperature </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editRoomTemperature}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n\n                setEditRoomTemperature(str);\n              }}\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Rectal Temperature</p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editRectal}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setEditRectal(str);\n              }}\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Body Condition Score</p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editBodyConditionScore}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, \"\");\n\n                setEditBodyConditionScore(str);\n              }}\n            />\n          </div>\n\n          <div className=\"bodyType11\">\n            <p style={{ width: \"140px\" }}>Fur Length: </p>\n            <Select\n              placeholder\n              onChange={(index) => {\n                console.log(index);\n                setEditFurLength(index);\n              }}\n              style={{\n                borderRadius: \"40px\",\n                height: \"33px\",\n                outline: \"none\",\n                borderWidth: 0,\n              }}\n              value={furLength}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Heart Rate: </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editHeartRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, \"\");\n                setEditHeartRate(str);\n              }}\n            />\n            <span>bpm</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Blood Pressure </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editBloodPressure}\n              onChange={(item) => {\n                setEditBloodPressure(item.target.value);\n              }}\n            />\n            <span>mm</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Respiratory Rate: </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editRespiratoryRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, \"\");\n                setEditRespiratoryRate(str);\n              }}\n            />\n            <span>bpm</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"80px\" }}>Notes</p>\n            <textarea\n              rows=\"2\"\n              cols=\"40\"\n              style={{ textIndent: \"10px\" }}\n              value={memo}\n              onChange={(val) => {\n                setMemo(val.target.value);\n              }}\n            ></textarea>\n          </div>\n\n          <div className=\"btn\" onClick={save}>\n            Save\n          </div>\n        </div>\n      </Modal>\n    );\n  };\n  const _foot = () => {\n    let lbgc = \"\",\n      rbgc = \"\";\n    if (isPetCharacteristics) {\n      lbgc = \"rgba(25,173,228,0.5)\";\n      rbgc = \"rgba(105,201,237,1)\";\n    } else {\n      lbgc = \"rgba(105,201,237,1)\";\n      rbgc = \"rgba(25,173,228,0.5)\";\n    }\n    return (\n      <div className=\"clinical_foot\">\n        <div className=\"top\">\n          <div\n            className=\"foot_l\"\n            style={{ backgroundColor: lbgc }}\n            onClick={() => setIsPetCharacteristics(true)}\n          >\n            Exam Details\n          </div>\n          <div\n            className=\"foot_l\"\n            style={{ backgroundColor: rbgc }}\n            onClick={() => setIsPetCharacteristics(false)}\n          >\n            History\n          </div>\n        </div>\n        {isPetCharacteristics ? _petCharacteristics() : _history()}\n      </div>\n    );\n  };\n  //获取本地数据\n  const getLocalSetting = () => {\n    let settings = {\n      isHua: true,\n      is15: true,\n      self_tarting: false, //自启动\n      isBacklight: true,\n      isBeep: true,\n      backlightTimer: { length: 140, number: \"45\" },\n      autoOff: { length: 0, number: \"30\" },\n    };\n    electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\n  };\n  //echars渲染\n  const echars = () => {\n    return (\n      <div id=\"myCharts\"\n        style={{ width: windowWidth }}\n        ref={chartsBox}\n      >\n        <ReactECharts\n          option={getOption()}\n          theme=\"Imooc\"\n          style={{ height: 'auto', width: 'auto' }}\n          notMerge={true}\n          lazyUpdate={true}\n          ref={echartsElement}\n          className=\"charts\"\n        />\n        {_status()}\n      </div>\n    );\n  };\n  //分配宠物walk-in信息\n  const assignPet = (value) => {\n    setSelectPetModalLoading(true);\n    let parmes = {\n      petId: value.petId,\n      clinicalDatagroupId: seleceEmergencies.clinicalDatagroupId,\n    };\n    addAndSavePetExam(seleceEmergencies.historyId, parmes)\n      .then((res) => {\n        setSelectPetModalLoading(false);\n        if (res.flag === true) {\n          message.success(\"Assigned successfully\");\n          setSelectPetVisible(false);\n          setAddPetId('');\n          _getEmergencyHistory(1);\n        } else {\n          message.error(\"Assignment failed\");\n        }\n      })\n      .catch((err) => {\n        setSelectPetModalLoading(false);\n        message.error(\"Assignment failed\");\n      });\n  }\n  //添加宠物弹窗显示\n  const onAddPet = () => {\n    setAddPetId('');\n    setSelectPetVisible(false);\n    setAddPetVisible(true);\n  }\n  //添加宠物\n  const addNewPet = (value) => {\n    let data = {\n      ...value,\n      weight: value.weight === '' ? '' : parseFloat(value.weight).toFixed(2),\n    };\n    if (storage.lastWorkplaceId) {\n      data.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      data.organizationId = storage.lastOrganization\n    }\n    if (storage.userId) {\n      data.doctorId = storage.userId\n    }\n    setAddPetModalLoading(true);\n    addDeskPet(value.patientId, data)\n      .then((res) => {\n        setAddPetModalLoading(false);\n        if (res.flag === true) {\n          message.success('Adding pets successfully');\n          setAddPetId(res.data.petId);\n          setAddPetVisible(false);\n          setSelectPetVisible(true);\n        } else {\n          message.error('patientId already exists');\n        }\n      })\n      .catch((err) => {\n        setAddPetModalLoading(false);\n      })\n  }\n\n  useEffect(() => {\n    if (petDetailInfo.petId) {\n      setCurrPage(1);\n      setHistoryData([]);\n      setTotal(0);\n      _getHistory11(petDetailInfo.petId);\n    } else if (petDetailInfo.isWalkIn) {\n      setCurrPage(1);\n      setHistoryData([]);\n      setTotal(0);\n      _getEmergencyHistory(1);\n    }\n    return () => {\n      setCurrPage(1);\n      setHistoryData([]);\n      setTotal(0);\n    };\n  }, [petDetailInfo]);\n\n  useEffect(() => {\n    return () => {\n      saveHistoryTime && clearTimeout(saveHistoryTime);\n    };\n  }, []);\n\n  useEffect(() => {\n    //react监听屏幕窗口改变\n    window.addEventListener(\"resize\", resize);\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    mellaMeasureNumCopy = mellaMeasureNum;\n    // setTest(echartsElement);\n    return (() => { })\n  }, []);\n\n  useEffect(() => {\n    if (mellaMeasureNumCopy === mellaMeasureNum) {\n      return;\n    }\n    mellaMeasureNumCopy = mellaMeasureNum;\n    // console.log('监听', mellaMeasureValue);\n    setTemp(mellaMeasureValue);\n    let { Eci, wen0, wen1 } = echarsData;\n    //两个数组合并成一个数组\n    let EciCopy = [...Eci];\n\n    let win0Copy = [...wen0];\n    let wen1Copy = [...wen1];\n    EciCopy.push(EciCopy.length + 1);\n    win0Copy.push(mellaMeasureValue);\n    wen1Copy.push(mellaMeasureValue);\n    let json = {\n      Eci: EciCopy,\n      wen0: win0Copy,\n      wen1: wen1Copy,\n    };\n    setEcharsData(json);\n    let Eci1 = echarsData1.Eci;\n    let wen01 = echarsData1.wen0;\n    let wen11 = echarsData1.wen1;\n    let EciCopy1 = [...Eci1];\n\n    let win0Copy1 = [...wen01];\n    let wen1Copy1 = [...wen11];\n    EciCopy1.push(EciCopy1.length + 1);\n    let num =\n      units === \"℃\"\n        ? mellaMeasureValue\n        : _.floor(mellaMeasureValue * 1.8 + 32, 2);\n    win0Copy1.push(num);\n    wen1Copy1.push(num);\n    let json1 = {\n      Eci: EciCopy1,\n      wen0: win0Copy1,\n      wen1: wen1Copy1,\n    };\n    setEcharsData1(json1);\n    // const option = getOption();\n    // echartsElement.current.getEchartsInstance().setOption(option);\n    return () => { };\n  }, [mellaMeasureNum]);\n\n  useEffect(() => {\n    if (mellaConnectStatus === \"complete\" && echarsData.Eci.length > 10) {\n      addClinical();\n    }\n    if (mellaConnectStatus === \"isMeasuring\" && mellaStatus !== \"isMeasuring\") {\n      setEcharsData({\n        Eci: [],\n        wen0: [],\n        wen1: [],\n      });\n      setEcharsData1({\n        Eci: [],\n        wen0: [],\n        wen1: [],\n      });\n    }\n    if (mellaConnectStatus === \"isMeasuring\") {\n      setShowHistoryEchart(false);\n    }\n\n    setMellaStatus(mellaConnectStatus);\n    return () => { };\n  }, [mellaConnectStatus]);\n\n  useEffect(() => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (!hardSet) {\n      getLocalSetting();\n    } else {\n      setUnits(hardSet.isHua ? \"℉\" : \"℃\");\n    }\n    return () => { };\n  }, []);\n\n  useEffect(() => {\n    let bufferData = electronStore.get(`${petDetailInfo.petId}`);\n    // console.log('bufferData: ', bufferData);\n    setRoomTemperature(bufferData ? bufferData?.roomTemperature : '');\n    setReferenceRectalTemperature(bufferData ? bufferData?.referenceRectalTemperature : '');\n    setBodyConditionScore(bufferData ? bufferData?.bodyConditionScore : '');\n    setFurLength(bufferData ? bufferData?.furLength : '');\n    setHeartRate(bufferData ? bufferData?.heartRate : '');\n    setBloodPressure(bufferData ? bufferData?.bloodPressure : '');\n    setRespiratoryRate(bufferData ? bufferData?.respiratoryRate : '');\n    setWeightValue(bufferData ? bufferData?.WeightValue : '');\n    return (() => { })\n  }, [petDetailInfo.petId]);\n\n  useEffect(() => {\n    return () => {\n      let newData = {\n        roomTemperature: roomTemperature,\n        referenceRectalTemperature: referenceRectalTemperature,\n        bodyConditionScore: bodyConditionScore,\n        furLength: furLength,\n        heartRate: heartRate,\n        bloodPressure: bloodPressure,\n        respiratoryRate: respiratoryRate,\n        WeightValue: WeightValue\n      }\n      electronStore.set(`${petDetailInfo.petId}`, newData);\n    }\n  }, [roomTemperature, referenceRectalTemperature, bodyConditionScore, furLength, heartRate, bloodPressure, respiratoryRate, WeightValue, petDetailInfo.petId])\n\n  useEffect(() => {\n    if (biggieBodyWeight !== 0) {\n      if (units === '℉') {\n        setWeightValue((biggieBodyWeight * 2).toFixed(2));\n      } else {\n        setWeightValue(biggieBodyWeight.toFixed(2));\n      }\n    }\n    return (() => { })\n  }, [biggieBodyWeight])\n\n  return (\n    <>\n      <div\n        id=\"clinical\"\n        style={{\n          height: bodyHeight,\n          minWidth: px(200),\n          minHeight: bodyHeight,\n          overflow: \"hidden\",\n        }}\n        ref={clinicalRef}\n      >\n        <div\n          className=\"headerContentBox\"\n          style={{ background: \"#fff\", position: \"relative\" }}\n        >\n          <Layout style={{ height: \"100%\" }}>\n            <HeaderItem timeNum={60} />\n          </Layout>\n        </div>\n        <div\n          className=\"clinicalBody\"\n          style={{ width: \"100%\", height: bodyHeight - px(100) }}\n        >\n          <div className=\"clinical_top\">\n            <div className=\"r\">\n              {/*顶部按钮Re-sync Base*/}\n              {mellaConnectStatus === \"disconnected\" && (\n                <div className=\"bb1\">\n                  <div\n                    className=\"btn78\"\n                    onClick={() => {\n                      if (resyncDeviceIsClick === true) {\n                        resyncDeviceIsClick = false;\n                        let ipcRenderer = window.electron.ipcRenderer;\n                        ipcRenderer.send(\"qiehuan\");\n                        const time = setTimeout(() => {\n                          resyncDeviceIsClick = true;\n                          clearTimeout(time);\n                        }, 2500);\n                      }\n                    }}\n                  >\n                    Re-sync Base\n                  </div>\n                </div>\n              )}\n              {echars()}\n              {/* 底部宠物信息 */}\n              {_foot()}\n              {_editModal()}\n              {tipSpin && (\n                <div className=\"modal\">\n                  <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\n                    <LoadingOutlined\n                      style={{\n                        fontSize: 30,\n                        color: \"#fff\",\n                        marginTop: mTop(-30),\n                      }}\n                    />\n                  </div>\n                  <p>data is loading...</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {\n          selectPetVisible && (\n            <SelectPet\n              visible={selectPetVisible}\n              destroyOnClose\n              width={400}\n              value={addPetId}\n              onCancel={() => {\n                setAddPetId('');\n                setSelectPetVisible(false);\n              }}\n              onSelect={(value) => {\n                assignPet(value);\n              }}\n              onAddPet={() => onAddPet()}\n              onLoading={selectPetModalLoading}\n            />\n          )\n        }\n        {\n          addPetVisible && (\n            <AddPetModal\n              visible={addPetVisible}\n              destroyOnClose\n              width={400}\n              onCancel={() => {\n                setAddPetVisible(false);\n                setSelectPetVisible(true);\n              }}\n              onConfirm={(value) => {\n                addNewPet(value);\n              }}\n              onLoading={addPetModalLoading}\n            />\n          )\n        }\n      </div>\n    </>\n  );\n};\n\nClinicalStudy.propTypes = {\n  bodyHeight: propTypes.number,\n};\nClinicalStudy.defaultProps = {\n  bodyHeight: 0,\n};\nexport default connect(\n  (state) => ({\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\n    biggieBodyWeight: state.hardwareReduce.biggieBodyWeight,\n    biggieUnit: state.hardwareReduce.biggieUnit,\n    petDetailInfo: state.petReduce.petDetailInfo,\n  }),\n  { setTest }\n)(ClinicalStudy);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\user.js",["244","245","246"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\vetSpire.js",["247","248"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx",["249"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx",["250","251","252","253"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx",["254"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\index.jsx",["255","256","257"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx",["258","259","260","261","262","263","264","265"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { ConfigProvider, Table, Select } from 'antd';\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment'\nimport { mTop, px, MTop, pX } from '../../utils/px';\nimport './petTable.less'\nimport { petDetailInfoFun, setMenuNum, } from '../../store/actions';\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\n\nconst PetTable = ({ petListArr, loading, bodyHeight, petDetailInfoFun, setMenuNum, resetPetList, type }) => {\n  let history = useHistory()\n  const [heardSearchText, setHeardSearchText] = useState('')\n  //搜索后展示的宠物列表\n  const [searchData, setSearchData] = useState([])\n  const _search = (value) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\n    let keyWord = value || heardSearchText\n    /**\n     * 使用indexof方法实现模糊查询\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n     *\n     * list         原数组\n     * keyWord      查询关键词\n     * searchData   查询的结果\n     *\n     * toLowerCase（）方法：将字符串统一转成小写\n     * toUpperCase（）方法：将字符串统一转成大写\n     *\n     */\n    let list = petListArr\n    let searchData = []\n    for (let i = 0; i < list.length; i++) {\n      let petName = list[i].petName.toLowerCase() || ''\n      let patientId = list[i].patientId.toLowerCase() || ''\n      let rfid = list[i].rfid || ''\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${rfid}`.indexOf(keyWord) !== -1\n      ) {\n        searchData.push(list[i])\n      }\n    }\n    setSearchData(searchData)\n  }\n  const columns = [\n    {\n      title: 'Time',\n      dataIndex: 'insertedAt',\n      key: 'insertedAt',\n      ellipsis: true,\n      align: \"center\",\n      render: (text, record, index) => moment(parseInt(text) * 1000).format('YYYY-MM-DD hh:mm a'),\n\n    },\n    {\n      title: 'Pet ID',\n      dataIndex: 'patientId',\n      key: 'patientId',\n      ellipsis: true,\n      align: \"center\",\n    },\n    {\n      title: 'Pet Name',\n      dataIndex: 'petName',\n      key: 'petName',\n      ellipsis: true,\n      align: \"center\",\n    },\n    {\n      title: 'Owner',\n      dataIndex: 'owner',\n      key: 'owner',\n      ellipsis: true,\n      align: \"center\",\n    },\n    {\n      title: 'Breed',\n      dataIndex: 'breed',\n      key: 'breed',\n      ellipsis: true,\n      align: \"center\",\n      render: (text, record, index) => {\n        if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\n          return (\n            'unknown'\n          )\n        } else {\n          return (\n            text\n          )\n        }\n\n      }\n    },\n\n    {\n      title: 'Gender',\n      dataIndex: 'gender',\n      key: 'gender',\n      ellipsis: true,\n      align: \"center\",\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      ellipsis: true,\n      align: \"center\",\n      render: (text, record, index) => {\n        if (`${text}` === 'NaN') {\n          return (\n            'unknown'\n          )\n        } else {\n          return (\n            text\n          )\n        }\n\n      }\n    },\n\n\n  ];\n  const noData = () => {\n    return (\n      <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\n        <p style={{ fontSize: px(22) }}> {`No Pets Scheduled &`}</p>  &nbsp;&nbsp;\n        <a style={{ fontSize: px(22) }} href=\"#\"\n          onClick={(e) => {\n            try {\n              if (type === 'scheduled') {\n                setMenuNum('AddScheduledPet')\n              } else {\n                setMenuNum('AddPet')\n              }\n            } catch (error) {\n              console.log('错误信息', error);\n            }\n            e.preventDefault();\n\n          }}\n\n        >{`Schedule a Pet`}</a>\n      </div>\n    )\n  }\n  const options = [\n    { key: 'time', value: 'Time' },\n    { key: 'petid', value: 'Pet ID' },\n    { key: 'owner', value: 'Owner' },\n    { key: 'breed', value: 'Breed' },\n    { key: 'petname', value: 'Pet Name' },\n    { key: 'gender', value: 'Gender' },\n  ]\n  const handleChange = (value,option) => {\n    let petList = [].concat(petListArr)\n    switch (option.key) {\n      case 'time':\n        petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n        break;\n      case 'petid':\n        petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n        break;\n      case 'owner':\n        petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n        break;\n      case 'breed':\n        petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n        break;\n      case 'petname':\n        petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n        break;\n      case 'gender':\n        petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n        break;\n    }\n    resetPetList(petList)\n  };\n  return (\n    <div className='petTable' >\n      <div className=\"pet_table_heard\">\n        <div className=\"search\" style={{ height: px(32) }}>\n          <input\n            type=\"text\"\n            placeholder=\"&#xe61b;    search\"\n            value={heardSearchText}\n            onChange={(e) => {\n              setHeardSearchText(e.target.value)\n              _search(e.target.value)\n            }\n            }\n          />\n        </div>\n\n        <div className=\"walkBtn1\" style={{ marginRight: px(28) }}>\n          <div\n            className=\"walkbtnBox\"\n            style={{ height: px(28), width: px(80) }}\n            onClick={_search}\n          >\n            <div className=\"walkText\">Search</div>\n          </div>\n        </div>\n\n      </div>\n      <div className=\"heard2 flex\" style={{ marginBottom: px(8), marginLeft: px(20) }}>\n\n        <div className=\"sort flex\" >\n          <p style={{ fontSize: px(16), marginRight: px(10) }}>Sort By:</p>\n          {/* <SelectionBox\n            listArr={[\n              { key: 'time', value: 'Time' },\n              { key: 'petid', value: 'Pet ID' },\n              { key: 'owner', value: 'Owner' },\n              { key: 'breed', value: 'Breed' },\n              { key: 'petname', value: 'Pet Name' },\n              { key: 'gender', value: 'Gender' },\n            ]}\n            clickItem={(item) => {\n              let petList = [].concat(petListArr)\n              switch (item.key) {\n                case 'time':\n                  petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n                  break;\n                case 'petid':\n                  petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n                  break;\n                case 'owner':\n                  petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n                  break;\n                case 'breed':\n                  petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n                  break;\n                case 'petname':\n                  petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n                  break;\n                case 'gender':\n                  petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n                  break;\n              }\n              resetPetList(petList)\n            }}\n          /> */}\n          <Select\n            defaultValue={['Time']}\n            onChange={handleChange}\n            options={options}\n            className=\"selectFilter\"\n          />\n        </div>\n      </div>\n      <div className=\"table\" >\n        <ConfigProvider renderEmpty={noData}>\n          <Table\n            style={{\n              padding: 0,\n              margin: 0,\n              width: '95%',\n            }}\n            rowKey={data => data.id}\n            bordered={false}\n            columns={columns}\n            dataSource={(heardSearchText.length === 0) ? petListArr : searchData}\n            loading={loading}\n            pagination={false}\n            scroll={{\n              // y: px(480),\n              y: '80 %'\n            }}\n            onRow={(record) => {\n              return {\n                onClick: (event) => {\n                  setMenuNum('1')\n                  petDetailInfoFun(record)\n                }, // 点击行\n              };\n            }}\n            className=\"allPetTable\"\n          />\n        </ConfigProvider>\n      </div>\n    </div >\n  )\n}\n\nPetTable.propTypes = {\n  petListArr: PropTypes.array,\n  resetPetList: PropTypes.func,\n}\n//默认值\nPetTable.defaultProps = {\n  bodyHeight: 0,\n  petListArr: [],\n  resetPetList: () => { },\n}\nexport default connect(\n  state => ({\n\n  }),\n  { petDetailInfoFun, setMenuNum, }\n)(PetTable)\n",["266","267"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx",["285","286","287","288","289","290","291","292"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanCodeLogin\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx",["293","294","295","296","297","298"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\petAndParents\\index.jsx",["299","300","301","302","303","304"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrg\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\imgArray.js",["305"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\petall.js",["306"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx",["307"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\doctorAddPet\\index.jsx",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["328","329","330","331","332","333","334","335","336","337"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\EzyVet.js",["338","339"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\gaugeChart\\index.jsx",["340","341"],{"ruleId":"342","severity":1,"message":"343","line":4,"column":3,"nodeType":"344","messageId":"345","endLine":4,"endColumn":10},{"ruleId":"342","severity":1,"message":"346","line":8,"column":14,"nodeType":"344","messageId":"345","endLine":8,"endColumn":18},{"ruleId":"342","severity":1,"message":"347","line":60,"column":9,"nodeType":"344","messageId":"345","endLine":60,"endColumn":22},{"ruleId":"342","severity":1,"message":"347","line":90,"column":9,"nodeType":"344","messageId":"345","endLine":90,"endColumn":22},{"ruleId":"348","severity":1,"message":"349","line":205,"column":41,"nodeType":"350","messageId":"351","endLine":205,"endColumn":43},{"ruleId":"348","severity":1,"message":"349","line":218,"column":47,"nodeType":"350","messageId":"351","endLine":218,"endColumn":49},{"ruleId":"342","severity":1,"message":"352","line":423,"column":23,"nodeType":"344","messageId":"345","endLine":423,"endColumn":28},{"ruleId":"342","severity":1,"message":"353","line":20,"column":9,"nodeType":"344","messageId":"345","endLine":20,"endColumn":15},{"ruleId":"342","severity":1,"message":"347","line":64,"column":9,"nodeType":"344","messageId":"345","endLine":64,"endColumn":22},{"ruleId":"342","severity":1,"message":"354","line":336,"column":9,"nodeType":"344","messageId":"345","endLine":336,"endColumn":25},{"ruleId":"342","severity":1,"message":"355","line":357,"column":7,"nodeType":"344","messageId":"345","endLine":357,"endColumn":17},{"ruleId":"356","replacedBy":"357"},{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","severity":1,"message":"361","line":81,"column":13,"nodeType":"362","messageId":"363","endLine":110,"endColumn":14},{"ruleId":"342","severity":1,"message":"364","line":286,"column":45,"nodeType":"344","messageId":"345","endLine":286,"endColumn":59},{"ruleId":"342","severity":1,"message":"365","line":286,"column":61,"nodeType":"344","messageId":"345","endLine":286,"endColumn":75},{"ruleId":"356","replacedBy":"366"},{"ruleId":"358","replacedBy":"367"},{"ruleId":"368","severity":1,"message":"369","line":136,"column":6,"nodeType":"370","endLine":136,"endColumn":8,"suggestions":"371"},{"ruleId":"342","severity":1,"message":"372","line":9,"column":15,"nodeType":"344","messageId":"345","endLine":9,"endColumn":23},{"ruleId":"342","severity":1,"message":"373","line":9,"column":25,"nodeType":"344","messageId":"345","endLine":9,"endColumn":28},{"ruleId":"368","severity":1,"message":"374","line":64,"column":6,"nodeType":"370","endLine":64,"endColumn":8,"suggestions":"375"},{"ruleId":"342","severity":1,"message":"376","line":3,"column":3,"nodeType":"344","messageId":"345","endLine":3,"endColumn":7},{"ruleId":"342","severity":1,"message":"377","line":4,"column":3,"nodeType":"344","messageId":"345","endLine":4,"endColumn":10},{"ruleId":"342","severity":1,"message":"378","line":5,"column":3,"nodeType":"344","messageId":"345","endLine":5,"endColumn":9},{"ruleId":"342","severity":1,"message":"379","line":6,"column":3,"nodeType":"344","messageId":"345","endLine":6,"endColumn":8},{"ruleId":"380","severity":1,"message":"381","line":67,"column":11,"nodeType":"382","endLine":72,"endColumn":12},{"ruleId":"383","severity":1,"message":"384","line":135,"column":24,"nodeType":"385","messageId":"386","endLine":135,"endColumn":26},{"ruleId":"348","severity":1,"message":"349","line":157,"column":31,"nodeType":"350","messageId":"351","endLine":157,"endColumn":33},{"ruleId":"383","severity":1,"message":"387","line":165,"column":29,"nodeType":"385","messageId":"386","endLine":165,"endColumn":31},{"ruleId":"368","severity":1,"message":"388","line":185,"column":6,"nodeType":"370","endLine":185,"endColumn":18,"suggestions":"389"},{"ruleId":"356","replacedBy":"390"},{"ruleId":"358","replacedBy":"391"},{"ruleId":"342","severity":1,"message":"392","line":9,"column":3,"nodeType":"344","messageId":"345","endLine":9,"endColumn":8},{"ruleId":"342","severity":1,"message":"393","line":34,"column":10,"nodeType":"344","messageId":"345","endLine":34,"endColumn":16},{"ruleId":"342","severity":1,"message":"394","line":36,"column":10,"nodeType":"344","messageId":"345","endLine":36,"endColumn":17},{"ruleId":"342","severity":1,"message":"395","line":38,"column":10,"nodeType":"344","messageId":"345","endLine":38,"endColumn":18},{"ruleId":"368","severity":1,"message":"396","line":92,"column":6,"nodeType":"370","endLine":92,"endColumn":8,"suggestions":"397"},{"ruleId":"368","severity":1,"message":"398","line":170,"column":6,"nodeType":"370","endLine":170,"endColumn":23,"suggestions":"399"},{"ruleId":"342","severity":1,"message":"400","line":15,"column":8,"nodeType":"344","messageId":"345","endLine":15,"endColumn":21},{"ruleId":"342","severity":1,"message":"401","line":81,"column":17,"nodeType":"344","messageId":"345","endLine":81,"endColumn":25},{"ruleId":"342","severity":1,"message":"402","line":92,"column":10,"nodeType":"344","messageId":"345","endLine":92,"endColumn":18},{"ruleId":"342","severity":1,"message":"403","line":96,"column":10,"nodeType":"344","messageId":"345","endLine":96,"endColumn":13},{"ruleId":"342","severity":1,"message":"404","line":99,"column":18,"nodeType":"344","messageId":"345","endLine":99,"endColumn":27},{"ruleId":"342","severity":1,"message":"405","line":110,"column":10,"nodeType":"344","messageId":"345","endLine":110,"endColumn":23},{"ruleId":"342","severity":1,"message":"406","line":110,"column":25,"nodeType":"344","messageId":"345","endLine":110,"endColumn":41},{"ruleId":"342","severity":1,"message":"407","line":112,"column":10,"nodeType":"344","messageId":"345","endLine":112,"endColumn":25},{"ruleId":"342","severity":1,"message":"408","line":118,"column":20,"nodeType":"344","messageId":"345","endLine":118,"endColumn":31},{"ruleId":"368","severity":1,"message":"409","line":129,"column":6,"nodeType":"370","endLine":129,"endColumn":32,"suggestions":"410"},{"ruleId":"342","severity":1,"message":"411","line":138,"column":11,"nodeType":"344","messageId":"345","endLine":138,"endColumn":14},{"ruleId":"342","severity":1,"message":"412","line":447,"column":24,"nodeType":"344","messageId":"345","endLine":447,"endColumn":28},{"ruleId":"383","severity":1,"message":"384","line":462,"column":49,"nodeType":"385","messageId":"386","endLine":462,"endColumn":51},{"ruleId":"413","severity":1,"message":"414","line":719,"column":34,"nodeType":"415","messageId":"416","endLine":719,"endColumn":35,"suggestions":"417"},{"ruleId":"413","severity":1,"message":"418","line":724,"column":31,"nodeType":"415","messageId":"416","endLine":724,"endColumn":32,"suggestions":"419"},{"ruleId":"413","severity":1,"message":"414","line":741,"column":34,"nodeType":"415","messageId":"416","endLine":741,"endColumn":35,"suggestions":"420"},{"ruleId":"413","severity":1,"message":"418","line":746,"column":31,"nodeType":"415","messageId":"416","endLine":746,"endColumn":32,"suggestions":"421"},{"ruleId":"413","severity":1,"message":"414","line":766,"column":34,"nodeType":"415","messageId":"416","endLine":766,"endColumn":35,"suggestions":"422"},{"ruleId":"413","severity":1,"message":"418","line":771,"column":31,"nodeType":"415","messageId":"416","endLine":771,"endColumn":32,"suggestions":"423"},{"ruleId":"413","severity":1,"message":"414","line":804,"column":34,"nodeType":"415","messageId":"416","endLine":804,"endColumn":35,"suggestions":"424"},{"ruleId":"413","severity":1,"message":"418","line":809,"column":31,"nodeType":"415","messageId":"416","endLine":809,"endColumn":32,"suggestions":"425"},{"ruleId":"413","severity":1,"message":"414","line":827,"column":34,"nodeType":"415","messageId":"416","endLine":827,"endColumn":35,"suggestions":"426"},{"ruleId":"413","severity":1,"message":"418","line":832,"column":31,"nodeType":"415","messageId":"416","endLine":832,"endColumn":32,"suggestions":"427"},{"ruleId":"413","severity":1,"message":"414","line":852,"column":34,"nodeType":"415","messageId":"416","endLine":852,"endColumn":35,"suggestions":"428"},{"ruleId":"413","severity":1,"message":"418","line":857,"column":31,"nodeType":"415","messageId":"416","endLine":857,"endColumn":32,"suggestions":"429"},{"ruleId":"413","severity":1,"message":"414","line":873,"column":59,"nodeType":"415","messageId":"416","endLine":873,"endColumn":60,"suggestions":"430"},{"ruleId":"413","severity":1,"message":"418","line":873,"column":165,"nodeType":"415","messageId":"416","endLine":873,"endColumn":166,"suggestions":"431"},{"ruleId":"432","severity":1,"message":"433","line":1203,"column":9,"nodeType":"434","messageId":"386","endLine":1203,"endColumn":14},{"ruleId":"342","severity":1,"message":"435","line":1256,"column":7,"nodeType":"344","messageId":"345","endLine":1256,"endColumn":12},{"ruleId":"413","severity":1,"message":"414","line":1413,"column":34,"nodeType":"415","messageId":"416","endLine":1413,"endColumn":35,"suggestions":"436"},{"ruleId":"413","severity":1,"message":"418","line":1418,"column":31,"nodeType":"415","messageId":"416","endLine":1418,"endColumn":32,"suggestions":"437"},{"ruleId":"413","severity":1,"message":"414","line":1434,"column":34,"nodeType":"415","messageId":"416","endLine":1434,"endColumn":35,"suggestions":"438"},{"ruleId":"413","severity":1,"message":"418","line":1439,"column":31,"nodeType":"415","messageId":"416","endLine":1439,"endColumn":32,"suggestions":"439"},{"ruleId":"368","severity":1,"message":"440","line":1689,"column":6,"nodeType":"370","endLine":1689,"endColumn":21,"suggestions":"441"},{"ruleId":"368","severity":1,"message":"442","line":1710,"column":6,"nodeType":"370","endLine":1710,"endColumn":8,"suggestions":"443"},{"ruleId":"368","severity":1,"message":"444","line":1757,"column":6,"nodeType":"370","endLine":1757,"endColumn":23,"suggestions":"445"},{"ruleId":"368","severity":1,"message":"446","line":1781,"column":6,"nodeType":"370","endLine":1781,"endColumn":26,"suggestions":"447"},{"ruleId":"368","severity":1,"message":"448","line":1832,"column":6,"nodeType":"370","endLine":1832,"endColumn":24,"suggestions":"449"},{"ruleId":"342","severity":1,"message":"372","line":9,"column":15,"nodeType":"344","messageId":"345","endLine":9,"endColumn":23},{"ruleId":"342","severity":1,"message":"373","line":9,"column":25,"nodeType":"344","messageId":"345","endLine":9,"endColumn":28},{"ruleId":"342","severity":1,"message":"450","line":9,"column":30,"nodeType":"344","messageId":"345","endLine":9,"endColumn":35},{"ruleId":"342","severity":1,"message":"451","line":9,"column":10,"nodeType":"344","messageId":"345","endLine":9,"endColumn":13},{"ruleId":"342","severity":1,"message":"373","line":9,"column":25,"nodeType":"344","messageId":"345","endLine":9,"endColumn":28},{"ruleId":"368","severity":1,"message":"452","line":133,"column":6,"nodeType":"370","endLine":133,"endColumn":8,"suggestions":"453"},{"ruleId":"342","severity":1,"message":"454","line":1,"column":17,"nodeType":"344","messageId":"345","endLine":1,"endColumn":26},{"ruleId":"342","severity":1,"message":"455","line":19,"column":10,"nodeType":"344","messageId":"345","endLine":19,"endColumn":12},{"ruleId":"342","severity":1,"message":"456","line":27,"column":10,"nodeType":"344","messageId":"345","endLine":27,"endColumn":17},{"ruleId":"342","severity":1,"message":"457","line":27,"column":19,"nodeType":"344","messageId":"345","endLine":27,"endColumn":29},{"ruleId":"342","severity":1,"message":"458","line":21,"column":18,"nodeType":"344","messageId":"345","endLine":21,"endColumn":24},{"ruleId":"342","severity":1,"message":"454","line":1,"column":17,"nodeType":"344","messageId":"345","endLine":1,"endColumn":26},{"ruleId":"342","severity":1,"message":"459","line":1,"column":28,"nodeType":"344","messageId":"345","endLine":1,"endColumn":36},{"ruleId":"342","severity":1,"message":"458","line":18,"column":18,"nodeType":"344","messageId":"345","endLine":18,"endColumn":24},{"ruleId":"342","severity":1,"message":"454","line":1,"column":27,"nodeType":"344","messageId":"345","endLine":1,"endColumn":36},{"ruleId":"342","severity":1,"message":"460","line":7,"column":10,"nodeType":"344","messageId":"345","endLine":7,"endColumn":14},{"ruleId":"342","severity":1,"message":"346","line":7,"column":20,"nodeType":"344","messageId":"345","endLine":7,"endColumn":24},{"ruleId":"342","severity":1,"message":"461","line":7,"column":26,"nodeType":"344","messageId":"345","endLine":7,"endColumn":28},{"ruleId":"342","severity":1,"message":"462","line":10,"column":8,"nodeType":"344","messageId":"345","endLine":10,"endColumn":20},{"ruleId":"342","severity":1,"message":"463","line":13,"column":7,"nodeType":"344","messageId":"345","endLine":13,"endColumn":14},{"ruleId":"380","severity":1,"message":"464","line":132,"column":9,"nodeType":"382","endLine":147,"endColumn":10},{"ruleId":"360","severity":1,"message":"361","line":161,"column":5,"nodeType":"362","messageId":"363","endLine":180,"endColumn":6},{"ruleId":"356","replacedBy":"465"},{"ruleId":"358","replacedBy":"466"},{"ruleId":"342","severity":1,"message":"460","line":16,"column":10,"nodeType":"344","messageId":"345","endLine":16,"endColumn":14},{"ruleId":"342","severity":1,"message":"467","line":33,"column":10,"nodeType":"344","messageId":"345","endLine":33,"endColumn":23},{"ruleId":"342","severity":1,"message":"468","line":51,"column":10,"nodeType":"344","messageId":"345","endLine":51,"endColumn":18},{"ruleId":"342","severity":1,"message":"469","line":51,"column":20,"nodeType":"344","messageId":"345","endLine":51,"endColumn":31},{"ruleId":"342","severity":1,"message":"408","line":62,"column":20,"nodeType":"344","messageId":"345","endLine":62,"endColumn":31},{"ruleId":"342","severity":1,"message":"470","line":65,"column":10,"nodeType":"344","messageId":"345","endLine":65,"endColumn":16},{"ruleId":"342","severity":1,"message":"471","line":65,"column":18,"nodeType":"344","messageId":"345","endLine":65,"endColumn":27},{"ruleId":"472","severity":1,"message":"473","line":133,"column":11,"nodeType":"382","endLine":140,"endColumn":13},{"ruleId":"472","severity":1,"message":"473","line":145,"column":13,"nodeType":"382","endLine":145,"endColumn":33},{"ruleId":"472","severity":1,"message":"473","line":191,"column":18,"nodeType":"382","endLine":191,"endColumn":47},{"ruleId":"472","severity":1,"message":"473","line":193,"column":18,"nodeType":"382","endLine":193,"endColumn":47},{"ruleId":"472","severity":1,"message":"473","line":195,"column":18,"nodeType":"382","endLine":195,"endColumn":47},{"ruleId":"472","severity":1,"message":"473","line":197,"column":18,"nodeType":"382","endLine":197,"endColumn":47},{"ruleId":"472","severity":1,"message":"473","line":221,"column":11,"nodeType":"382","endLine":228,"endColumn":13},{"ruleId":"472","severity":1,"message":"473","line":233,"column":13,"nodeType":"382","endLine":233,"endColumn":63},{"ruleId":"368","severity":1,"message":"474","line":364,"column":6,"nodeType":"370","endLine":364,"endColumn":15,"suggestions":"475"},{"ruleId":"368","severity":1,"message":"476","line":373,"column":6,"nodeType":"370","endLine":373,"endColumn":8,"suggestions":"477"},{"ruleId":"342","severity":1,"message":"353","line":22,"column":9,"nodeType":"344","messageId":"345","endLine":22,"endColumn":15},{"ruleId":"342","severity":1,"message":"478","line":45,"column":11,"nodeType":"344","messageId":"345","endLine":45,"endColumn":17},{"ruleId":"342","severity":1,"message":"479","line":45,"column":19,"nodeType":"344","messageId":"345","endLine":45,"endColumn":24},{"ruleId":"342","severity":1,"message":"347","line":61,"column":9,"nodeType":"344","messageId":"345","endLine":61,"endColumn":22},{"ruleId":"342","severity":1,"message":"480","line":144,"column":18,"nodeType":"344","messageId":"345","endLine":144,"endColumn":27},{"ruleId":"342","severity":1,"message":"481","line":144,"column":29,"nodeType":"344","messageId":"345","endLine":144,"endColumn":37},{"ruleId":"472","severity":1,"message":"473","line":544,"column":19,"nodeType":"382","endLine":551,"endColumn":61},{"ruleId":"380","severity":1,"message":"464","line":559,"column":19,"nodeType":"382","endLine":567,"endColumn":30},{"ruleId":"342","severity":1,"message":"455","line":13,"column":10,"nodeType":"344","messageId":"345","endLine":13,"endColumn":12},{"ruleId":"342","severity":1,"message":"458","line":24,"column":9,"nodeType":"344","messageId":"345","endLine":24,"endColumn":15},{"ruleId":"342","severity":1,"message":"482","line":24,"column":26,"nodeType":"344","messageId":"345","endLine":24,"endColumn":32},{"ruleId":"342","severity":1,"message":"483","line":24,"column":34,"nodeType":"344","messageId":"345","endLine":24,"endColumn":39},{"ruleId":"368","severity":1,"message":"484","line":231,"column":6,"nodeType":"370","endLine":231,"endColumn":22,"suggestions":"485"},{"ruleId":"368","severity":1,"message":"486","line":240,"column":6,"nodeType":"370","endLine":240,"endColumn":21,"suggestions":"487"},{"ruleId":"342","severity":1,"message":"353","line":24,"column":9,"nodeType":"344","messageId":"345","endLine":24,"endColumn":15},{"ruleId":"342","severity":1,"message":"478","line":40,"column":11,"nodeType":"344","messageId":"345","endLine":40,"endColumn":17},{"ruleId":"342","severity":1,"message":"479","line":40,"column":19,"nodeType":"344","messageId":"345","endLine":40,"endColumn":24},{"ruleId":"342","severity":1,"message":"347","line":55,"column":9,"nodeType":"344","messageId":"345","endLine":55,"endColumn":22},{"ruleId":"342","severity":1,"message":"488","line":160,"column":43,"nodeType":"344","messageId":"345","endLine":160,"endColumn":52},{"ruleId":"342","severity":1,"message":"352","line":160,"column":54,"nodeType":"344","messageId":"345","endLine":160,"endColumn":59},{"ruleId":"489","severity":1,"message":"490","line":1,"column":1,"nodeType":"491","endLine":256,"endColumn":3},{"ruleId":"342","severity":1,"message":"373","line":9,"column":25,"nodeType":"344","messageId":"345","endLine":9,"endColumn":28},{"ruleId":"368","severity":1,"message":"452","line":85,"column":6,"nodeType":"370","endLine":85,"endColumn":8,"suggestions":"492"},{"ruleId":"342","severity":1,"message":"353","line":29,"column":9,"nodeType":"344","messageId":"345","endLine":29,"endColumn":15},{"ruleId":"360","severity":1,"message":"361","line":99,"column":5,"nodeType":"362","messageId":"363","endLine":105,"endColumn":6},{"ruleId":"348","severity":1,"message":"349","line":112,"column":41,"nodeType":"350","messageId":"351","endLine":112,"endColumn":43},{"ruleId":"348","severity":1,"message":"349","line":150,"column":41,"nodeType":"350","messageId":"351","endLine":150,"endColumn":43},{"ruleId":"342","severity":1,"message":"493","line":257,"column":11,"nodeType":"344","messageId":"345","endLine":257,"endColumn":21},{"ruleId":"342","severity":1,"message":"494","line":257,"column":49,"nodeType":"344","messageId":"345","endLine":257,"endColumn":55},{"ruleId":"472","severity":1,"message":"473","line":507,"column":15,"nodeType":"382","endLine":507,"endColumn":63},{"ruleId":"472","severity":1,"message":"473","line":537,"column":15,"nodeType":"382","endLine":537,"endColumn":63},{"ruleId":"360","severity":1,"message":"361","line":558,"column":5,"nodeType":"362","messageId":"363","endLine":561,"endColumn":6},{"ruleId":"360","severity":1,"message":"361","line":562,"column":5,"nodeType":"362","messageId":"363","endLine":565,"endColumn":6},{"ruleId":"342","severity":1,"message":"488","line":678,"column":32,"nodeType":"344","messageId":"345","endLine":678,"endColumn":41},{"ruleId":"342","severity":1,"message":"495","line":681,"column":26,"nodeType":"344","messageId":"345","endLine":681,"endColumn":29},{"ruleId":"342","severity":1,"message":"496","line":749,"column":13,"nodeType":"344","messageId":"345","endLine":749,"endColumn":23},{"ruleId":"342","severity":1,"message":"497","line":749,"column":25,"nodeType":"344","messageId":"345","endLine":749,"endColumn":33},{"ruleId":"342","severity":1,"message":"498","line":749,"column":35,"nodeType":"344","messageId":"345","endLine":749,"endColumn":41},{"ruleId":"342","severity":1,"message":"499","line":749,"column":43,"nodeType":"344","messageId":"345","endLine":749,"endColumn":51},{"ruleId":"342","severity":1,"message":"500","line":749,"column":53,"nodeType":"344","messageId":"345","endLine":749,"endColumn":70},{"ruleId":"342","severity":1,"message":"493","line":796,"column":29,"nodeType":"344","messageId":"345","endLine":796,"endColumn":39},{"ruleId":"342","severity":1,"message":"501","line":796,"column":79,"nodeType":"344","messageId":"345","endLine":796,"endColumn":84},{"ruleId":"342","severity":1,"message":"502","line":796,"column":117,"nodeType":"344","messageId":"345","endLine":796,"endColumn":139},{"ruleId":"342","severity":1,"message":"503","line":3,"column":3,"nodeType":"344","messageId":"345","endLine":3,"endColumn":8},{"ruleId":"342","severity":1,"message":"504","line":9,"column":3,"nodeType":"344","messageId":"345","endLine":9,"endColumn":8},{"ruleId":"342","severity":1,"message":"505","line":10,"column":3,"nodeType":"344","messageId":"345","endLine":10,"endColumn":7},{"ruleId":"342","severity":1,"message":"506","line":71,"column":5,"nodeType":"344","messageId":"345","endLine":71,"endColumn":22},{"ruleId":"342","severity":1,"message":"507","line":75,"column":5,"nodeType":"344","messageId":"345","endLine":75,"endColumn":23},{"ruleId":"508","severity":1,"message":"509","line":133,"column":61,"nodeType":"385","messageId":"510","endLine":133,"endColumn":62},{"ruleId":"508","severity":1,"message":"509","line":141,"column":45,"nodeType":"385","messageId":"510","endLine":141,"endColumn":46},{"ruleId":"342","severity":1,"message":"511","line":190,"column":9,"nodeType":"344","messageId":"345","endLine":190,"endColumn":12},{"ruleId":"368","severity":1,"message":"512","line":293,"column":6,"nodeType":"370","endLine":293,"endColumn":13,"suggestions":"513"},{"ruleId":"368","severity":1,"message":"514","line":315,"column":6,"nodeType":"370","endLine":315,"endColumn":26,"suggestions":"515"},{"ruleId":"342","severity":1,"message":"372","line":9,"column":15,"nodeType":"344","messageId":"345","endLine":9,"endColumn":23},{"ruleId":"342","severity":1,"message":"373","line":9,"column":25,"nodeType":"344","messageId":"345","endLine":9,"endColumn":28},{"ruleId":"342","severity":1,"message":"459","line":1,"column":17,"nodeType":"344","messageId":"345","endLine":1,"endColumn":25},{"ruleId":"342","severity":1,"message":"454","line":1,"column":27,"nodeType":"344","messageId":"345","endLine":1,"endColumn":36},"no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","'MTop' is defined but never used.","'windowsHeight' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petId' is assigned a value but never used.","'Option' is assigned a value but never used.","'selectDeviceName' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.","no-native-reassign",["516"],"no-negated-in-lhs",["517"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.",["516"],["517"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.","ArrayExpression",["518"],"'postJson' is defined but never used.","'del' is defined but never used.","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["519"],"'Menu' is defined but never used.","'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["520"],["516"],["517"],"'Radio' is defined but never used.","'petUrl' is assigned a value but never used.","'country' is assigned a value but never used.","'infoData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'storage.userId'. Either include them or remove the dependency array.",["521"],"React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["522"],"'UnassignModal' is defined but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","'assignVisible' is assigned a value but never used.","'setAssignVisible' is assigned a value but never used.","'lastWorkplaceId' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["523"],"'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["524","525"],"Unnecessary escape character: \\-.",["526","527"],["528","529"],["530","531"],["532","533"],["534","535"],["536","537"],["538","539"],["540","541"],["542","543"],["544","545"],["546","547"],["548","549"],["550","551"],"no-dupe-keys","Duplicate key 'align'.","ObjectExpression","'hisHe' is assigned a value but never used.",["552","553"],["554","555"],["556","557"],["558","559"],"React Hook useEffect has a missing dependency: '_getEmergencyHistory'. Either include it or remove the dependency array.",["560"],"React Hook useEffect has a missing dependency: 'mellaMeasureNum'. Either include it or remove the dependency array.",["561"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["562"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["563"],"React Hook useEffect has a missing dependency: 'units'. Either include it or remove the dependency array.",["564"],"'patch' is defined but never used.","'get' is defined but never used.","React Hook useEffect has missing dependencies: 'destroyOnClose' and 'width'. Either include them or remove the dependency array. If 'setIsdestroyOnClose' needs the current value of 'destroyOnClose', you can also switch to useReducer instead of useState and read 'destroyOnClose' in the reducer.",["565"],"'useEffect' is defined but never used.","'px' is defined but never used.","'vibible' is assigned a value but never used.","'setVibible' is assigned a value but never used.","'Header' is assigned a value but never used.","'useState' is defined but never used.","'mTop' is defined but never used.","'pX' is defined but never used.","'SelectionBox' is defined but never used.","'history' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["516"],["517"],"'useThrottleFn' is defined but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.","'isMore' is assigned a value but never used.","'setIsMore' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["566"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["567"],"'height' is assigned a value but never used.","'width' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["568"],"React Hook useEffect has a missing dependency: 'setBiggieConnectStatusFun'. Either include it or remove the dependency array. If 'setBiggieConnectStatusFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["569"],"'patientId' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["570"],"'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'age' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'disabled' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","'Image' is defined but never used.","'Space' is defined but never used.","'Card' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["571"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["572"],"no-global-assign","no-unsafe-negation",{"desc":"573","fix":"574"},{"desc":"575","fix":"576"},{"desc":"577","fix":"578"},{"desc":"579","fix":"580"},{"desc":"581","fix":"582"},{"desc":"583","fix":"584"},{"messageId":"585","fix":"586","desc":"587"},{"messageId":"588","fix":"589","desc":"590"},{"messageId":"585","fix":"591","desc":"587"},{"messageId":"588","fix":"592","desc":"590"},{"messageId":"585","fix":"593","desc":"587"},{"messageId":"588","fix":"594","desc":"590"},{"messageId":"585","fix":"595","desc":"587"},{"messageId":"588","fix":"596","desc":"590"},{"messageId":"585","fix":"597","desc":"587"},{"messageId":"588","fix":"598","desc":"590"},{"messageId":"585","fix":"599","desc":"587"},{"messageId":"588","fix":"600","desc":"590"},{"messageId":"585","fix":"601","desc":"587"},{"messageId":"588","fix":"602","desc":"590"},{"messageId":"585","fix":"603","desc":"587"},{"messageId":"588","fix":"604","desc":"590"},{"messageId":"585","fix":"605","desc":"587"},{"messageId":"588","fix":"606","desc":"590"},{"messageId":"585","fix":"607","desc":"587"},{"messageId":"588","fix":"608","desc":"590"},{"messageId":"585","fix":"609","desc":"587"},{"messageId":"588","fix":"610","desc":"590"},{"messageId":"585","fix":"611","desc":"587"},{"messageId":"588","fix":"612","desc":"590"},{"messageId":"585","fix":"613","desc":"587"},{"messageId":"588","fix":"614","desc":"590"},{"messageId":"585","fix":"615","desc":"587"},{"messageId":"588","fix":"616","desc":"590"},{"messageId":"585","fix":"617","desc":"587"},{"messageId":"588","fix":"618","desc":"590"},{"messageId":"585","fix":"619","desc":"587"},{"messageId":"588","fix":"620","desc":"590"},{"messageId":"585","fix":"621","desc":"587"},{"messageId":"588","fix":"622","desc":"590"},{"messageId":"585","fix":"623","desc":"587"},{"messageId":"588","fix":"624","desc":"590"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},{"desc":"631","fix":"632"},{"desc":"633","fix":"634"},{"desc":"635","fix":"636"},{"desc":"637","fix":"638"},{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"635","fix":"645"},{"desc":"646","fix":"647"},{"desc":"648","fix":"649"},"Update the dependencies array to be: [_getExam]",{"range":"650","text":"651"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"652","text":"653"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"654","text":"655"},"Update the dependencies array to be: [form, storage.userId]",{"range":"656","text":"657"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"658","text":"659"},"Update the dependencies array to be: []",{"range":"660","text":"661"},"removeEscape",{"range":"662","text":"663"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"664","text":"665"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"666","text":"663"},{"range":"667","text":"665"},{"range":"668","text":"663"},{"range":"669","text":"665"},{"range":"670","text":"663"},{"range":"671","text":"665"},{"range":"672","text":"663"},{"range":"673","text":"665"},{"range":"674","text":"663"},{"range":"675","text":"665"},{"range":"676","text":"663"},{"range":"677","text":"665"},{"range":"678","text":"663"},{"range":"679","text":"665"},{"range":"680","text":"663"},{"range":"681","text":"665"},{"range":"682","text":"663"},{"range":"683","text":"665"},{"range":"684","text":"663"},{"range":"685","text":"665"},{"range":"686","text":"663"},{"range":"687","text":"665"},{"range":"688","text":"663"},{"range":"689","text":"665"},{"range":"690","text":"663"},{"range":"691","text":"665"},{"range":"692","text":"663"},{"range":"693","text":"665"},{"range":"694","text":"663"},{"range":"695","text":"665"},{"range":"696","text":"663"},{"range":"697","text":"665"},{"range":"698","text":"663"},{"range":"699","text":"665"},"Update the dependencies array to be: [_getEmergencyHistory, petDetailInfo]",{"range":"700","text":"701"},"Update the dependencies array to be: [mellaMeasureNum]",{"range":"702","text":"703"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"704","text":"705"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"706","text":"707"},"Update the dependencies array to be: [biggieBodyWeight, units]",{"range":"708","text":"709"},"Update the dependencies array to be: [destroyOnClose, width]",{"range":"710","text":"711"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"712","text":"713"},"Update the dependencies array to be: [storage.userId]",{"range":"714","text":"715"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"716","text":"717"},"Update the dependencies array to be: [petDetailInfo, setBiggieConnectStatusFun]",{"range":"718","text":"719"},{"range":"720","text":"711"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"721","text":"722"},"Update the dependencies array to be: [mellaConnectStatus, value]",{"range":"723","text":"724"},[4098,4100],"[_getExam]",[1734,1736],"[initSelectVale, listArr]",[5018,5030],"[letterListCopy, phoneListCopy, searchText]",[2508,2510],"[form, storage.userId]",[4656,4673],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[5063,5089],"[]",[21677,21678],"",[21677,21677],"\\",[21878,21879],[21878,21878],[22461,22462],[22461,22461],[22662,22663],[22662,22662],[23342,23343],[23342,23342],[23543,23544],[23543,23543],[24685,24686],[24685,24685],[24886,24887],[24886,24886],[25493,25494],[25493,25493],[25694,25695],[25694,25694],[26360,26361],[26360,26360],[26561,26562],[26561,26561],[27132,27133],[27132,27132],[27238,27239],[27238,27238],[42419,42420],[42419,42419],[42620,42621],[42620,42620],[43150,43151],[43150,43150],[43351,43352],[43351,43351],[50427,50442],"[_getEmergencyHistory, petDetailInfo]",[50859,50861],"[mellaMeasureNum]",[52102,52119],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[52660,52680],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[54544,54562],"[biggieBodyWeight, units]",[3705,3707],"[destroyOnClose, width]",[9623,9632],"[getPetTemperatureData, reRender, saveNum]",[9844,9846],"[storage.userId]",[7071,7087],"[hardwareReduce, weight]",[7275,7290],"[petDetailInfo, setBiggieConnectStatusFun]",[2163,2165],[8426,8433],"[callBack, prediction, timeNum, value]",[9055,9075],"[mellaConnectStatus, value]"]