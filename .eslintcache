[{"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"2","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js":"3","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\hardwareAction.js":"4","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js":"5","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx":"6","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"7","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx":"8","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js":"9","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx":"10","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx":"11","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx":"12","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js":"13","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js":"14","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx":"15","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js":"16","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js":"17","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js":"18"},{"size":3886,"mtime":1655261096004,"results":"19","hashOfConfig":"20"},{"size":49302,"mtime":1655257026125,"results":"21","hashOfConfig":"20"},{"size":3126,"mtime":1655168677530,"results":"22","hashOfConfig":"20"},{"size":871,"mtime":1655257026104,"results":"23","hashOfConfig":"20"},{"size":2445,"mtime":1655168677803,"results":"24","hashOfConfig":"20"},{"size":1098,"mtime":1655262976973,"results":"25","hashOfConfig":"20"},{"size":3778,"mtime":1655256997369,"results":"26","hashOfConfig":"20"},{"size":1101,"mtime":1655263944987,"results":"27","hashOfConfig":"20"},{"size":356,"mtime":1655257107799,"results":"28","hashOfConfig":"20"},{"size":1828,"mtime":1655257026045,"results":"29","hashOfConfig":"20"},{"size":3187,"mtime":1655260776955,"results":"30","hashOfConfig":"20"},{"size":8214,"mtime":1655260776909,"results":"31","hashOfConfig":"20"},{"size":61,"mtime":1655257026106,"results":"32","hashOfConfig":"20"},{"size":195,"mtime":1655257026117,"results":"33","hashOfConfig":"20"},{"size":5800,"mtime":1655257026047,"results":"34","hashOfConfig":"20"},{"size":566,"mtime":1655257026119,"results":"35","hashOfConfig":"20"},{"size":409,"mtime":1655257026059,"results":"36","hashOfConfig":"20"},{"size":158,"mtime":1655257026103,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wlgw0n",{"filePath":"40","messages":"41","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"43"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx",["79","80","81"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Menu,\r\n  Popover,\r\n  Button,\r\n  Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { SyncOutlined, createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport moment from 'moment'\r\nimport MyModal from './../myModal/MyModal'\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './heard.less'\r\nimport help from './../../assets/images/help.png'\r\nimport message from './../../assets/images/message.png'\r\nimport triangle from './../../assets/img/triangle.png'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\nimport dog from './../../assets/images/reddog.png'\r\nimport cat from './../../assets/images/redcat.png'\r\nimport other from './../../assets/images/redother.png'\r\nimport menu from './../../assets/img/menu.png'\r\nimport heardLeft from './../../assets/img/heardLeft.png'\r\nimport blueSearchPng from './../../assets/img/blueSearch.png'\r\nimport close from './../../assets/img/close.png'\r\nimport MinClose from '../../utils/minClose/MinClose';\r\nimport jinggao from './../../assets/img/jinggao.png'\r\nimport redclose from './../../assets/img/redclose.png'\r\n\r\nimport rMin_red from './../../assets/img/min-red.png'\r\nimport rClose_red from './../../assets/img/close-red.png'\r\n\r\nimport rMin_white from './../../assets/img/min-white.png'\r\nimport rClose_white from './../../assets/img/close-white.png'\r\nimport mellaLogo from './../../assets/images/mellaLogo.png'\r\nimport { version, updateTime } from './../appversion'\r\nimport { fetchRequest4 } from '../FetchUtil4';\r\nimport Button1 from '../button/Button';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\n\r\nconst allPetList = electronStore.get('doctorExam')\r\nlet storage = window.localStorage\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\nlet mouseoutTimer = null\r\nlet matchingTimer = null\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst Heard = ({\r\n  onReturn,\r\n  onSearch,\r\n  menu1Click,\r\n  menu2Click,\r\n  menu3Click,\r\n  menu4Click,\r\n  menu5Click,\r\n  menu6Click,\r\n  menu7Click,\r\n  menu8Click,\r\n  menu9Click,\r\n  blueSearch,\r\n}) => {\r\n  const [minbgc, setMinbgc] = useState('')        //最小化的背景颜色\r\n  const [closebgc, setClosebgc] = useState('')    //关闭按钮的背景色\r\n  const [rMin, setRMin] = useState(rMin_red)      //最小化的图标\r\n  const [rClose, setRClose] = useState(rClose_red) //关闭按钮图标\r\n  const [value, setValue] = useState('')          //搜索框输入的内容\r\n  const [visible, setVisible] = useState(false)   //搜索框下面的搜索model\r\n  const [loading, setLoading] = useState(false)     //搜索宠物过程中的加载图标\r\n  const [petList, setPetList] = useState([])        //搜索到的宠物列表\r\n  const [menuVisible, setMenuVisible] = useState(false)//菜单图标下面的菜单内容图标\r\n  const [menuMouseOverIndex, setMenuMouseOverIndex] = useState('')//用来定位鼠标滑到哪个菜单选项\r\n\r\n\r\n  const [modalvisible, setModalVisible] = useState(false)       //关于的弹窗\r\n  const [modalVis, setModalVis] = useState(false)               //RFID搜索是否有宠物的弹窗\r\n  const [isNotFound, setIsNotFound] = useState(false)           //是否找到RFID对应的图标\r\n  const [deviceModel, setDeviceModel] = useState(false)         //我的设备弹窗\r\n\r\n  const [noUSB, setNoUSB] = useState(false)                 //没有底座设备\r\n  const [searchMac, setSearchMac] = useState(false)         //是否展示狗牌mac搜索图标下面的Modal框\r\n  const [bluDevice, setBluDevice] = useState([])            //搜索到的狗牌设备mac地址\r\n\r\n  const [isShowBlePetList, setIsShowBlePetList] = useState(false)  //是否展示狗牌对应宠物\r\n  const [isMatchPet, setIsMatchPet] = useState(false)      //正在匹配狗牌对应的宠物\r\n  const [macMatchPetList, setMacMatchPetList] = useState([])\r\n  const [updateStatus, setUpdateStatus] = useState('init')\r\n  const [lastVersion, setLastVersion] = useState(version)\r\n  const [downLoadNum, setDownLoadingNum] = useState(0)\r\n  const [selectDeviceMac, setSelectDeviceMac] = useState('')\r\n\r\n  //这里是为了模拟数据所做出来的,后期要改成接口\r\n  const testPetList = [\r\n\r\n    { macId: \"E0:7C:62:30:08:08\", petName: 'Mella', petId: \"b9de0868-9202-4fc9-9f1b-325220ceeccf\" },\r\n    { macId: \"E0:7C:62:03:75:32\", petName: 'Possum', petId: \"e4b11580-1277-4b10-bd64-46b097f6f882\" },\r\n    { macId: \"E0:7D:EA:A8:8D:7E\", petName: 'Charlie', petId: \"b4e7a185-1c7e-4885-ab95-4a7d2d2ada83\" },\r\n    { macId: \"E0:7C:62:32:76:8C\", petName: 'Noah', petId: \"01b34bf2-47e6-4036-884f-47299447cb6a\" },\r\n\r\n    { macId: \"84:C2:E4:03:C3:06\", petName: \"Whitey\", petId: \"f713a238-f5df-4c85-8c4f-5766b0770c07\" },\r\n  ]\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('mac列表为空,初始化');\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    setBluDevice([])\r\n    return () => {\r\n      matchingTimer && clearTimeout(matchingTimer)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    ipcRenderer.on('uploadMessage', uploadMessage)\r\n    return () => {\r\n      ipcRenderer.removeListener('uploadMessage', uploadMessage)\r\n    }\r\n  }, [])\r\n\r\n  const uploadMessage = (e, data) => {\r\n    switch (data.payload.status) {\r\n      case -1:\r\n        console.log('查询异常');\r\n        break;\r\n\r\n      case 0:\r\n        console.log('正在检查应用程序更新');\r\n        setUpdateStatus('check')\r\n        break;\r\n\r\n      case 2:\r\n        console.log('正在检查应用程序更新');\r\n        setUpdateStatus('lastVersion')\r\n        break;\r\n\r\n      case 1:\r\n        console.log('检测到新版本');\r\n        let version = data.output.version\r\n        setLastVersion(version)\r\n\r\n        setUpdateStatus('newVersion')\r\n        break;\r\n\r\n      case 3:\r\n        console.log('下载新版成功');\r\n      case 4:\r\n        console.log('取消背景下载');\r\n      case 5:\r\n        console.log('取消安装');\r\n        setUpdateStatus('init')\r\n        break;\r\n      case 6:\r\n        console.log('正在下载');\r\n        setUpdateStatus('downLoading')\r\n        setDownLoadingNum(data.percent.toFixed(1))\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (blueSearch) {\r\n      console.log('---渲染时执行----??????');\r\n      ipcRenderer.on('sned', _send)\r\n      ipcRenderer.on('noUSB', _noUSB)\r\n      return () => {\r\n        console.log('----卸载----?????????/');\r\n        ipcRenderer.removeListener('sned', _send)\r\n        ipcRenderer.removeListener('noUSB', _noUSB)\r\n      }\r\n    }\r\n\r\n  }, [])\r\n\r\n  const _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      setNoUSB(false)\r\n    } else {\r\n      if (!noUSB) {\r\n        setNoUSB(true)\r\n      }\r\n    }\r\n  }\r\n  const _send = (event, data) => {\r\n\r\n    command(data)()\r\n  }\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  const command = (newArr) => {\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    console.log(dataArr1);\r\n    const instruction = [255]\r\n    const commandArr = {\r\n\r\n      255: () => {\r\n        // console.log(dataArr1);\r\n        // console.log(bluDevice);\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n\r\n        let MAC = ''\r\n        let bluData = []\r\n        let UUID = ''\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5])\r\n          }\r\n          // console.log('循环得到的数据', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              break;\r\n            case 255:\r\n              break;\r\n            case 3: break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              let str = itemData[0]\r\n              for (let i = 1; i < itemData.length; i++) {\r\n                str += `:${itemData[i]}`\r\n              }\r\n              MAC = str.toUpperCase()\r\n\r\n              break;\r\n            case 7:\r\n              console.log('uuid');\r\n              let uuid = ''\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                uuid += `${itemData[i]}`\r\n              }\r\n              UUID = uuid\r\n              break\r\n            default: return;\r\n          }\r\n          dataIndex = itemLength\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\r\n\r\n          // console.log(itemLength, itemLength < length && (itemLength + 3 <= frameLength));\r\n        }\r\n        console.log('----mac', MAC, '-----uuid', UUID);\r\n        if (UUID === 'd7895ab1acc74de3b9919e825c24c809') {\r\n          // console.log('uuid相等', bluDevice, bluDevice.indexOf(MAC) === -1,);\r\n          if (bluDevice.indexOf(MAC) === -1) {\r\n            let dataArr = [].concat(bluDevice)\r\n            dataArr.push(MAC)\r\n            setBluDevice(dataArr)\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  let history = useHistory();\r\n  //最小化，关闭的\r\n  const MINCOLOSE = {\r\n    minMouseEnter: () => {\r\n      setMinbgc('rgba(70, 70, 70, 0.5)')\r\n      setRMin(rMin_white)\r\n    },\r\n    minMouseLeave: () => {\r\n      setMinbgc('')\r\n      setRMin(rMin_red)\r\n    },\r\n    minClock: () => {\r\n      setMinbgc('')\r\n      setRMin(rMin_red)\r\n      let ipcRenderer = window.electron.ipcRenderer\r\n      ipcRenderer.send('window-min')\r\n\r\n    },\r\n    closeMouseEnter: () => {\r\n      setClosebgc('rgba(232,17,35)')\r\n      setRClose(rClose_white)\r\n    },\r\n    closeMouseLeave: () => {\r\n      setClosebgc('')\r\n      setRClose(rClose_red)\r\n    },\r\n    closeClock: () => {\r\n      let ipcRenderer = window.electron.ipcRenderer\r\n      ipcRenderer.send('window-close')\r\n    },\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //搜索框内容\r\n  const searchPetBody = () => {\r\n\r\n\r\n    if (loading) {\r\n      //加载中\r\n      return (\r\n        <div className='searchPetLoading' style={{ padding: `${20}px 0` }}>\r\n          <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n            <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n          </div>\r\n          <p style={{ color: '#e1206d', marginTop: px(5) }}>\r\n            loading...\r\n          </p>\r\n        </div>\r\n      )\r\n    } else {\r\n      // console.log('-----展示', petList.length);\r\n      if (petList.length > 0) {\r\n        //找到了宠物，展示出来\r\n\r\n        // let petList = electronStore.get('doctorExam')\r\n        // console.log(petList);\r\n\r\n        let option = petList.map((item, index) => {\r\n          let { speciesId, url } = item\r\n\r\n          let images = `url(${url}?download=0&width=150)`\r\n          if (!url) {\r\n            switch (speciesId) {\r\n              case 1: images = `url(${cat})`\r\n\r\n                break;\r\n              case 2: images = `url(${dog})`\r\n                break\r\n              default: images = `url(${other})`\r\n                break;\r\n            }\r\n          }\r\n          return (\r\n            <li\r\n              key={`${index}`}\r\n              style={{ margin: `${px(20)}px 0` }}\r\n              onClick={() => {\r\n                // console.log(item);\r\n                setValue('')\r\n                setVisible(false)\r\n                setPetList([])\r\n\r\n                onSearch(item)\r\n              }}\r\n            >\r\n              <div className='item' style={{ paddingLeft: px(40) }}>\r\n                <div\r\n                  className='img'\r\n                  style={{\r\n                    width: px(50),\r\n                    height: px(50),\r\n                    marginRight: px(40),\r\n                    borderRadius: px(60),\r\n                    backgroundImage: images,\r\n                    // backgroundColor: 'hotpink',\r\n\r\n                  }}>\r\n                  {/* <img src={images} style={{ width: px(40) }} /> */}\r\n                </div>\r\n\r\n                <div className='petInfo'>\r\n                  <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.petName}</p>\r\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\r\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\r\n                </div>\r\n              </div>\r\n            </li >\r\n          )\r\n\r\n        })\r\n        let liStyle = { backgroundColor: '#fff', }\r\n        if (petList.length > 4) {\r\n          liStyle = { height: px(500), overflowY: 'auto' }\r\n        }\r\n\r\n\r\n        return (\r\n          <div className='searchPetList'>\r\n            <ul style={liStyle}>\r\n              {option}\r\n            </ul>\r\n          </div>\r\n        )\r\n      } else {\r\n        //没有发现这个宠物\r\n        return (\r\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\r\n\r\n            <p style={{ width: '80%', fontSize: px(18) }}>\r\n              Pet not found. Would you like\r\n              to add a new patient?\r\n            </p>\r\n\r\n            <div\r\n              className='searchPetBtn'\r\n              style={{ fontSize: px(18) }}\r\n              onClick={() => {\r\n                history.push('/pet/doctorAddPet')\r\n              }}\r\n            >\r\n              <p style={{ padding: `${px(8)}px 0` }}>+ New Patient</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const inputChange = (text) => {\r\n\r\n    function isNumber (val) {\r\n      var regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\r\n      var regNeg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\r\n      if (regPos.test(val) || regNeg.test(val)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    //去除前后空格\r\n    let search = text.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\")\r\n    setValue(search)\r\n    if (search.length > 0) {\r\n      setVisible(true)\r\n      setLoading(true)\r\n\r\n      //搜索分成两种，一种是通过手输入数据搜索，一种是通过RFID扫描过后搜索\r\n\r\n      if (search.length === 15 && isNumber(search)) {\r\n        //这是RFID扫描后的搜索\r\n        fetchRequest4(`/pet/getPetInfoByRFID/${search}/${storage.lastOrganization}`, 'GET')\r\n          .then(res => {\r\n            console.log('----RFID搜索结果', res);\r\n\r\n            if (res.flag === true && res.data) {\r\n              let { createTime, patientId, petName, firstName, lastName, url, speciesId, breedName, gender, birthday, petId, rfid, weight } = res.data\r\n              patientId = patientId || 'unknown'\r\n              petName = petName || 'unknown'\r\n              breedName = breedName || 'unknown'\r\n              weight = weight || 'unknown'\r\n              let owner = ''\r\n              if (!firstName) {\r\n                firstName = ''\r\n              }\r\n              if (!lastName) {\r\n                lastName = ''\r\n              }\r\n              if (lastName === '' && firstName === '') {\r\n                owner = 'unknown'\r\n              } else {\r\n                owner = `${lastName} ${firstName}`\r\n              }\r\n              createTime = moment(createTime).format('X')\r\n              let petGender = ''\r\n              switch (`${gender}`) {\r\n                case '1': petGender = 'F'\r\n\r\n                  break;\r\n                case '0': petGender = \"M\"\r\n                  break;\r\n                default: petGender = 'unknown'\r\n                  break;\r\n              }\r\n              let petAge = 'unknown'\r\n              if (birthday) {\r\n                petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n                // console.log('petAge', petAge);\r\n              }\r\n              let json = {\r\n                insertedAt: createTime,\r\n                patientId,\r\n                petName,\r\n                owner,\r\n                breed: breedName,\r\n                gender: petGender,\r\n                age: petAge,\r\n                petId,\r\n                id: 0,\r\n                weight,\r\n                rfid,\r\n                url,\r\n                speciesId\r\n              }\r\n              let searchData = []\r\n              searchData.push(json)\r\n              setLoading(false)\r\n              setPetList(searchData)\r\n\r\n\r\n\r\n            } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\r\n              console.log('找到了但是不是在这个组织下');\r\n              setLoading(false)\r\n              setModalVis(true)\r\n              setIsNotFound(false)\r\n              setValue('')\r\n              setVisible(false)\r\n\r\n\r\n              // this.setState({\r\n              //   loading: false,\r\n              //   modalVis: true,\r\n              //   isNotFound: false,\r\n              //   heardSearchText: ''\r\n              // })\r\n            } else {\r\n              console.log('没有找到');\r\n              setLoading(false)\r\n              setModalVis(true)\r\n              setIsNotFound(true)\r\n              setValue('')\r\n              setVisible(false)\r\n\r\n\r\n              // this.setState({\r\n              //   loading: false,\r\n              //   modalVis: true,\r\n              //   isNotFound: true,\r\n              //   heardSearchText: ''\r\n              // })\r\n            }\r\n          })\r\n          .catch(err => {\r\n\r\n            console.log('抛出异常:', err);\r\n            setLoading(false)\r\n          })\r\n        return\r\n      }\r\n\r\n      /**\r\n       * 使用indexof方法实现模糊查询\r\n       *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n       *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n       *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n       *  \r\n       * list         原数组\r\n       * keyWord      查询关键词\r\n       * searchData   查询的结果\r\n       * \r\n       * toLowerCase（）方法：将字符串统一转成小写\r\n       * toUpperCase（）方法：将字符串统一转成大写\r\n       * \r\n       */\r\n      // let list = allPetList \r\n      let list = electronStore.get('doctorExam') || []\r\n\r\n      let searchData = []\r\n      let keyWord = search\r\n      for (let i = 0; i < list.length; i++) {\r\n        let petName = list[i].petName.toLowerCase() || ''\r\n        let patientId = list[i].patientId.toLowerCase() || ''\r\n        let rfid = list[i].rfid || ''\r\n        if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n          || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n          || `${rfid}`.indexOf(keyWord) !== -1\r\n        ) {\r\n          searchData.push(list[i])\r\n        }\r\n      }\r\n      // console.log('找到的宠物', searchData);\r\n      console.log('---搜索词：', search, '---搜索数组：', list, '----搜索结果：', searchData);\r\n      setLoading(false)\r\n      setPetList(searchData)\r\n\r\n    } else {\r\n      setVisible(false)\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  //左侧菜单栏\r\n  const menuList = () => {\r\n    let menulistArr = [\r\n      { name: 'Home', index: '1' },\r\n      { name: 'Patients', index: '8' },\r\n      { name: 'Workplace', index: '9' },\r\n      { name: 'Devices', index: '2' },\r\n      { name: 'Settings', index: '3' },\r\n      { name: `Billing & Subscriptions`, index: '4' },\r\n      { name: 'Help', index: '5' },\r\n      { name: 'About Mella', index: '6' },\r\n      { name: 'Log Out', index: '7' },\r\n\r\n    ]\r\n    let menuOption = menulistArr.map((item, index) => {\r\n\r\n      let pColor = menuMouseOverIndex === item.index ? '#e1206d' : '#1a1a1a'\r\n      return (\r\n        <li\r\n          key={item.index}\r\n          style={{ padding: `${px(15)}px ${px(20)}px` }}\r\n          onClick={() => {\r\n            menulistClick(item)\r\n          }}\r\n          onMouseOver={(e) => {\r\n            setMenuMouseOverIndex(item.index)\r\n            e.stopPropagation();\r\n            e.nativeEvent.stopImmediatePropagation();\r\n            menuMouseOver()\r\n          }}\r\n          onMouseOut={(e) => {\r\n            setMenuMouseOverIndex('')\r\n            e.stopPropagation();\r\n            e.nativeEvent.stopImmediatePropagation();\r\n            menuMouseOut()\r\n          }}\r\n        >\r\n          <div className='item'>\r\n            <p style={{ color: pColor }}>{item.name}</p>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    return (\r\n      <ul>\r\n        {menuOption}\r\n      </ul>\r\n    )\r\n\r\n\r\n  }\r\n  const menulistClick = e => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    setMenuVisible(false)\r\n    setMenuMouseOverIndex('')\r\n    console.log('click ', e);\r\n    switch (e.index) {\r\n      case \"1\":\r\n\r\n        switch (storage.identity) {\r\n          case '2': history.push('/EzyVetSelectExam'); break;\r\n          case '1': history.push('/VetSpireSelectExam'); break;\r\n\r\n          default: history.push('/page10')\r\n            break;\r\n        }\r\n        break;\r\n      case \"2\":\r\n        console.log('跳转到设备界面');\r\n        let selectDevice = electronStore.get(`${storage.userId}-selectDevice`)\r\n        // console.log('[[[[[[[', selectDevice);\r\n        selectDevice = selectDevice ? selectDevice : ''\r\n        setSelectDeviceMac(selectDevice)\r\n\r\n        setDeviceModel(true)\r\n        // history.push('/')\r\n        break;\r\n      case \"3\":\r\n        //跳转到设置\r\n        menu3Click()\r\n        history.push('/menuOptions/settings');\r\n        break;\r\n      case \"4\":\r\n        console.log('billing');\r\n        break;\r\n      case \"5\":\r\n        console.log('帮助');\r\n        history.push('/menuOptions/help')\r\n        break;\r\n      case \"6\":\r\n        setModalVisible(true)\r\n        console.log('关于');\r\n        break;\r\n      case \"7\":\r\n        console.log('退出登录');\r\n        storage.userId = ''\r\n        storage.roleId = ''\r\n        storage.userWorkplace = ''\r\n        storage.lastOrganization = ''\r\n        storage.lastWorkplaceId = ''\r\n        storage.connectionKey = ''\r\n        storage.isClinical = 'false'\r\n        history.push('/')\r\n        break;\r\n      case \"8\":\r\n        menu8Click()\r\n        console.log('宠物列表');\r\n        break;\r\n      case \"9\":\r\n        menu9Click()\r\n        history.push('/page12');\r\n        console.log('工作场所');\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // if (e.key === '3') {\r\n    //   this.props.history.push('/page8')\r\n    // }\r\n  }\r\n  const menuMouseOut = () => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    mouseoutTimer = setTimeout(() => {\r\n\r\n      setMenuVisible(false)\r\n      mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    }, 1000);\r\n\r\n\r\n  }\r\n  const menuMouseOver = () => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    setMenuVisible(true)\r\n  }\r\n  const updatePage = () => {\r\n    switch (updateStatus) {\r\n      case 'init':\r\n        return (\r\n          <div className='updateBtn' style={{ height: px(40), }}\r\n            onClick={() => {\r\n              setDownLoadingNum(0)\r\n              setUpdateStatus('check')\r\n\r\n              ipcRenderer.send('clickUpdateBtn')\r\n            }}\r\n          >\r\n            Check for Updates\r\n          </div>\r\n        )\r\n      case 'check':\r\n        return (\r\n          <div className='updateLoading flex' >\r\n            <div className=\"loadIcon1\" >\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginRight: px(20) }} />\r\n            </div>\r\n            <p style={{ color: '#e1206d', }}>Checking for updates</p>\r\n          </div>\r\n        )\r\n      case 'lastVersion':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            already the latest version\r\n          </div>\r\n        )\r\n\r\n      case 'newVersion':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            {`Found new version V${lastVersion}`}\r\n\r\n          </div>\r\n        )\r\n      case 'downLoading':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            {`Download progress: ${downLoadNum}%`}\r\n\r\n          </div>\r\n        )\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  //关于界面\r\n  const modal = () => {\r\n    return (\r\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\r\n        <div className='writeBox' style={{ borderRadius: px(25) }} >\r\n          <div className='modalHeadr'>\r\n            <div className='close'>\r\n              <div className='imgBox'\r\n                style={{ padding: `0 ${px(30)}px` }}\r\n                onClick={() => {\r\n                  setModalVisible(false)\r\n                  setUpdateStatus('init')\r\n                }}\r\n              >\r\n                <img src={close} style={{ width: px(23), }} />\r\n              </div>\r\n\r\n            </div>\r\n            <div className='heaerCenter'>\r\n              <div className='heaerCenterL'>\r\n                <img src={mellaLogo} style={{ width: '80%' }} />\r\n\r\n              </div>\r\n              <div className='heaerCenterR'>\r\n                <h1 style={{ fontSize: px(45), marginBottom: px(10) }}>About the System</h1>\r\n                <div className='version'>\r\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Version</div>\r\n                  <div className='versionR' style={{ fontSize: px(24) }}>{version}</div>\r\n                </div>\r\n                <div className='version'>\r\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Last Checked</div>\r\n                  <div className='versionR' style={{ fontSize: px(24) }}>{updateTime}</div>\r\n                </div>\r\n\r\n                <div className='check' style={{ marginTop: px(20) }}>\r\n                  {updatePage()}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className='modalfoot'>\r\n            <div className='about' style={{ marginTop: px(40), fontSize: px(18) }}>\r\n              Nanjing Jiubian Technology Co., Ltd. was founded in 2019, located in Nanjing Yuhuatai Software Valley Branch City, the company brings together medical sensors, mobile Internet and other industry's top professionals, business areas covering artificial intelligence, smart medical, pet health, sleep monitoring, etc., is a design, research and development, production, sales, service in one of the high-tech companies. The nine-sided science and technology to \"the number of heavens and earths, starting from one, finally nine\" as the cultural concept, adhering to the essence of Chinese artisans, with an international vision, always standing in the forefront of bio-intelligent medical monitoring technology.\r\n            </div>\r\n\r\n            <div className='aLable'>\r\n              <a href=\"#\"\r\n                style={{ fontSize: px(18), marginRight: px(50) }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >Terms and Agreements</a>\r\n              <a\r\n                href=\"#\"\r\n                style={{ fontSize: px(18), }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >Privacy Policy</a>\r\n            </div>\r\n\r\n            <div className='foot' style={{ marginBottom: px(40) }}>© 2021 Mella Pet Care All RIghts Reserved</div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //设备列表界面\r\n  const devices = () => {\r\n\r\n    let userId = storage.userId\r\n    // electronStore.delete(`${userId}-deviceList`)\r\n    let deviceList = electronStore.get(`${userId}-deviceList`)\r\n    console.log('---', deviceList);\r\n    if (!deviceList) {\r\n      let str = `${getRamNumber()}`\r\n      for (let i = 0; i < 5; i++) {\r\n        str += `:${getRamNumber()}`\r\n      }\r\n      console.log('随机生成的mac地址:', str);\r\n      deviceList = [{ name: 'MellaPro', deviceType: 'mellaPro', macId: str }]\r\n      electronStore.set(`${userId}-deviceList`, deviceList)\r\n    }\r\n\r\n\r\n    function getRamNumber () {\r\n      var result = '';\r\n      for (var i = 0; i < 2; i++) {\r\n        result += Math.floor(Math.random() * 16).toString(16);//获取0-15并通过toString转16进制\r\n      }\r\n      //默认字母小写，手动转大写\r\n      return result.toLowerCase();//另toLowerCase()转小写\r\n    }\r\n\r\n\r\n    // deviceList = [\r\n    //   // { name: 'Add Device', deviceType: 'add', macId: '0' },\r\n    //   { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //   { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:51:66' },\r\n    //   { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:35:66' },\r\n    //   { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:24:33:44:55:66' },\r\n    //   { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:25:66' },\r\n    //   { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:56:66' },\r\n    // ]\r\n\r\n    let options = deviceList.map((item, index) => {\r\n      return <li\r\n        className='flex'\r\n        key={`${index}`}\r\n        style={{ marginBottom: px(15), marginTop: px(5), }}\r\n        onClick={() => {\r\n          console.log(item.macId);\r\n          setSelectDeviceMac(item.macId)\r\n        }}\r\n      >\r\n        <div className='liLeft' style={{ fontSize: px(16) }}>{item.name}</div>\r\n        <div className='liCenter' style={{ fontSize: px(16) }}>{item.macId}</div>\r\n        <div className='liRight'>\r\n          <div className='circle flex' style={{ width: px(18), height: px(18) }}>\r\n            {selectDeviceMac === item.macId && <div className='redCircle' />}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    })\r\n\r\n    return (\r\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\r\n        <div className='writeBox devices' style={{ borderRadius: px(25), width: px(400) }} >\r\n          <div className='deviceHeadr'>\r\n            <div className='close'>\r\n              <div className='imgBox'\r\n                style={{ padding: `0 ${px(30)}px` }}\r\n                onClick={() => setDeviceModel(false)}\r\n              >\r\n                <img src={close} style={{ width: px(23), }} />\r\n              </div>\r\n\r\n            </div>\r\n            <div className='logo flex'>\r\n              <img src={mellaLogo} style={{ width: px(60) }} />\r\n              <div style={{ fontSize: px(22), marginTop: px(30) }}>Devices</div>\r\n              <div className='bodyText' style={{ fontSize: px(18), marginTop: px(40) }}>Select the device you would<br />\r\n                like to use or add a new device.</div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className='deviceCenter'>\r\n            <ul>\r\n              {options}\r\n            </ul>\r\n          </div>\r\n          <div className='deviceFooter flex' style={{ borderBottomLeftRadius: px(25), borderBottomRightRadius: px(25) }}>\r\n            <div className='btn' style={{ height: px(40) }}\r\n              onMouseDown={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[0].style.opacity = \"0.5\"\r\n              }}\r\n              onMouseUp={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[0].style.opacity = \"1\"\r\n              }}\r\n              onClick={() => {\r\n                setDeviceModel(false)\r\n                history.push('/menuOptions/AddDevice');\r\n\r\n              }}\r\n\r\n            >\r\n              <p className='btnText' style={{ fontSize: px(18) }}>New Device</p>\r\n            </div>\r\n            <div className='btn' style={{ height: px(40) }}\r\n\r\n              onMouseDown={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[1].style.opacity = \"0.5\"\r\n              }}\r\n              onMouseUp={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[1].style.opacity = \"1\"\r\n              }}\r\n              onClick={() => {\r\n                electronStore.set(`${storage.userId}-selectDevice`, selectDeviceMac)\r\n                setDeviceModel(false)\r\n              }}\r\n            >\r\n              <p className='btnText' style={{ fontSize: px(18) }}>Connect</p>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //点击蓝牙搜索图标\r\n  const blueClick = () => {\r\n    console.log('点击了蓝牙图标');\r\n    setIsShowBlePetList(false)\r\n    setSearchMac(true)\r\n\r\n\r\n  }\r\n  //点击取消链接\r\n  const cencleClick = (e) => {\r\n    console.log('mac列表为空,点击取消');\r\n    setBluDevice([])\r\n    setSearchMac(false)\r\n    setIsShowBlePetList(false)\r\n    setIsMatchPet(false)\r\n    setMacMatchPetList([])\r\n    if (e) {\r\n      e.preventDefault()\r\n    }\r\n    matchingTimer && clearTimeout(matchingTimer)\r\n\r\n\r\n  }\r\n  //搜索狗牌的蓝牙\r\n  const blusearchBody = () => {\r\n    console.log('搜索狗牌的蓝牙', searchMac, bluDevice);\r\n    if (isShowBlePetList) {\r\n      if (isMatchPet) {\r\n        return (\r\n          <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\r\n            <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n            </div>\r\n            <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>matching...</p>\r\n\r\n            <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\r\n              onClick={cencleClick}\r\n            >Cencle</a>\r\n          </div>\r\n        )\r\n      } else {\r\n        if (macMatchPetList.length > 0) {\r\n\r\n          let option = macMatchPetList.map((item, index) => {\r\n            let { speciesId, url } = item\r\n\r\n            let images = `url(${url}?download=0&width=150)`\r\n            if (!url) {\r\n              switch (speciesId) {\r\n                case 1: images = `url(${cat})`\r\n                  break;\r\n                case 2: images = `url(${dog})`\r\n                  break\r\n                default: images = `url(${other})`\r\n                  break;\r\n              }\r\n            }\r\n            return (\r\n              <li\r\n                key={`${index}`}\r\n                style={{ margin: `${px(20)}px 0` }}\r\n                onClick={() => {\r\n                  cencleClick()\r\n                  onSearch(item)\r\n                }}\r\n              >\r\n                <div className='item' style={{ paddingLeft: px(40) }}>\r\n                  <div\r\n                    className='img'\r\n                    style={{\r\n                      width: px(50),\r\n                      height: px(50),\r\n                      marginRight: px(40),\r\n                      borderRadius: px(60),\r\n                      backgroundImage: images,\r\n                    }}>\r\n                    {/* <img src={images} style={{ width: px(40) }} /> */}\r\n                  </div>\r\n\r\n                  <div className='petInfo'>\r\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20), textAlign: 'start' }}>{item.petName}</p>\r\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\r\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\r\n                  </div>\r\n                </div>\r\n              </li >\r\n            )\r\n\r\n          })\r\n          let liStyle = { backgroundColor: '#fff', }\r\n          if (petList.length > 4) {\r\n            liStyle = { height: px(500), overflowY: 'auto' }\r\n          }\r\n\r\n\r\n          return (\r\n            <div className='searchPetList flex' >\r\n              <ul style={liStyle}>\r\n                {option}\r\n              </ul>\r\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\r\n                onClick={cencleClick}\r\n              >Cencle</a>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    } else {\r\n      if (noUSB) {\r\n        return (\r\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\r\n\r\n            <p style={{ width: '80%', fontSize: px(18) }}>\r\n              Please insert address and scan\r\n            </p>\r\n\r\n            <a href=\"#\" style={{ color: '#e1206d' }}\r\n              onClick={cencleClick}\r\n            >Cencle</a>\r\n          </div>\r\n        )\r\n      } else {\r\n        if (bluDevice.length > 0) {\r\n          let option = bluDevice.map((item, index) => {\r\n            return (\r\n              <li\r\n                key={`${index}`}\r\n                style={{ margin: `${px(20)}px 0` }}\r\n                onClick={() => {\r\n                  console.log('mac列表为空,点击列表内容');\r\n                  setBluDevice([])\r\n                  // setSearchMac(false)\r\n                  setIsShowBlePetList(true)\r\n                  setIsMatchPet(true)\r\n                  matchingTimer && clearTimeout(matchingTimer)\r\n                  matchingTimer = setTimeout(() => {\r\n                    let haveFlog = false, index = -1\r\n                    for (let i = 0; i < testPetList.length; i++) {\r\n                      if (testPetList[i].macId === item) {\r\n                        haveFlog = true\r\n                        index = i\r\n                        break;\r\n                      }\r\n                    }\r\n                    if (haveFlog) {\r\n                      if (storage.lastOrganization === '1') {\r\n                        matchPet(testPetList[index].petId)\r\n                      } else {\r\n                        setModalVis(true)\r\n                        setIsNotFound(false)\r\n                        cencleClick()\r\n\r\n                      }\r\n                    } else {\r\n                      setModalVis(true)\r\n                      setIsNotFound(true)\r\n                      cencleClick()\r\n                    }\r\n\r\n\r\n                    setIsMatchPet(false)\r\n                    matchingTimer && clearTimeout(matchingTimer)\r\n                  }, 2000);\r\n\r\n\r\n                }}\r\n              >\r\n                <div className='item' style={{ paddingLeft: px(40) }}>\r\n                  <div className='petInfo'>\r\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>mac:{item}</p>\r\n                  </div>\r\n                </div>\r\n              </li >\r\n            )\r\n          })\r\n          let liStyle = { backgroundColor: '#fff', }\r\n          if (bluDevice.length > 4) {\r\n            liStyle = { height: px(500), overflowY: 'auto' }\r\n          }\r\n          return (\r\n            <div className='searchPetList' style={{ flexDirection: 'column' }}>\r\n              <ul style={liStyle}>\r\n                {option}\r\n              </ul>\r\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\r\n                onClick={cencleClick}\r\n              >Cencle</a>\r\n            </div>\r\n          )\r\n        } else {\r\n          return (\r\n            <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\r\n              <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n                <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n              </div>\r\n              <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>\r\n                scanning...\r\n              </p>\r\n\r\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\r\n                onClick={cencleClick}\r\n              >Cencle</a>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  const matchPet = (searchValue) => {\r\n    console.log('搜索词:', searchValue);\r\n    let list = electronStore.get('doctorExam')\r\n\r\n    let searchData = []\r\n    let keyWord = searchValue\r\n    for (let i = 0; i < list.length; i++) {\r\n\r\n      let petName = `${list[i].petId}`\r\n      if (keyWord === petName) {\r\n        searchData.push(list[i])\r\n      }\r\n    }\r\n\r\n\r\n    setIsMatchPet(false)\r\n\r\n    setMacMatchPetList(searchData)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"heard\"\r\n      style={{ height: px(50) }}\r\n    >\r\n      <div className='l'>\r\n        <div className='menuF' style={{ marginLeft: px(40), marginRight: px(40) }}>\r\n          <div className=\"menu\"\r\n            onMouseOver={menuMouseOver}\r\n            onMouseOut={menuMouseOut}>\r\n            <img src={menu} style={{ width: px(20), }} />\r\n            {\r\n              menuVisible\r\n                // true\r\n                ? <div\r\n                  className='manuBody'\r\n                  style={{ top: px(20), left: px(-40) }}\r\n                >\r\n                  <div className='triangle'\r\n                    style={{\r\n                      borderLeft: `${px(10)}px solid transparent`,\r\n                      borderRight: `${px(10)}px solid transparent`,\r\n                      borderBottom: `${px(13)}px solid #fff`,\r\n                      left: px(40)\r\n                    }} />\r\n\r\n                  <div className='manuBodyList' style={{ marginTop: px(13) }}>\r\n                    {menuList()}\r\n                  </div>\r\n                </div>\r\n                : null\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {/* <div className=\"return\" style={{ marginLeft: px(10) }}\r\n          onClick={() => { onReturn() }}\r\n        >\r\n          <img src={heardLeft} style={{ height: px(25), }} />\r\n        </div> */}\r\n        <div className=\"search\" style={{ width: px(300) }}>\r\n\r\n          <input\r\n            placeholder=\"Search Pet    &#xe63f;\"\r\n            style={{ fontSize: px(16), paddingLeft: px(20) }}\r\n            value={value}\r\n            onChange={(text) => {\r\n              inputChange(text)\r\n            }}\r\n\r\n            onKeyUp={(e) => {\r\n              // console.log(e);\r\n              if (e.keyCode === 13) {\r\n                console.log('回车,去搜索');\r\n              }\r\n              if (e.keyCode === 27) {\r\n                console.log('清空');\r\n                setValue('')\r\n                setVisible(false)\r\n              }\r\n            }}\r\n\r\n          />\r\n          {\r\n            blueSearch ?\r\n              <div className=\"searchIconFa bluSearch\"\r\n              // style={{ cursor: 'pointer', backgroundColor: 'pink' }}\r\n              // onClick={blueClick}\r\n              >\r\n                <div onClick={blueClick} >\r\n                  {/* <img src={blueSearchPng} style={{ width: '50%' }} /> */}\r\n                  <span className=\" iconfont icon-sousuo searchIcon\"\r\n                    style={{ fontSize: px(25) }}\r\n                  />\r\n                </div>\r\n\r\n                {\r\n                  searchMac ?\r\n                    // true ?\r\n                    <div className='searchPet flex' style={{ width: px(400), }}>\r\n                      <div className='triangle'\r\n                        style={{\r\n                          borderLeft: `${px(20)}px solid transparent`,\r\n                          borderRight: `${px(20)}px solid transparent`,\r\n                          borderBottom: `${px(25)}px solid #fff`,\r\n                          // marginLeft: px(30),\r\n                          zIndex: 999,\r\n\r\n                        }} />\r\n\r\n                      <div className='searchPetBody' style={{ width: '100%' }} >\r\n                        {blusearchBody()}\r\n                      </div>\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n              </div>\r\n              : <div className=\"searchIconFa\">\r\n                <span className=\" iconfont icon-sousuo searchIcon\"\r\n                  style={{ fontSize: px(25) }}\r\n                />\r\n              </div>\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {\r\n            visible ?\r\n              // true ?\r\n              <div className='searchPet' style={{ top: px(35), width: px(400), }}>\r\n                <div className='triangle'\r\n                  style={{\r\n                    borderLeft: `${px(20)}px solid transparent`,\r\n                    borderRight: `${px(20)}px solid transparent`,\r\n                    borderBottom: `${px(25)}px solid #fff`,\r\n                    marginLeft: px(30),\r\n                    zIndex: 999,\r\n\r\n                  }} />\r\n\r\n                <div className='searchPetBody' >\r\n                  {searchPetBody()}\r\n                </div>\r\n              </div>\r\n              : null\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </div >\r\n\r\n\r\n      <div className=\"r\"\r\n      >\r\n\r\n\r\n        <div className='heardCenter'>\r\n          <div className=\"message\"\r\n            onClick={() => history.push('/menuOptions/unassigned')}\r\n          >\r\n            <img src={message} alt=\"\" style={{ height: px(25), width: px(25) }} />\r\n          </div>\r\n          <div className=\"help\"\r\n            style={{ margin: `0 ${px(25)}px` }}\r\n            onClick={() => history.push('/menuOptions/help')}\r\n          >\r\n            <img src={help} alt=\"\" style={{ height: px(25) }} />\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"min_close\" >\r\n          <div\r\n            className='min_icon'\r\n            onClick={MINCOLOSE.minClock}\r\n            style={{ backgroundColor: minbgc, height: px(50), width: px(50) }}\r\n            onMouseEnter={MINCOLOSE.minMouseEnter}\r\n            onMouseLeave={MINCOLOSE.minMouseLeave}\r\n          >\r\n            <img src={rMin} alt=\"\" style={{ width: px(20) }} />\r\n          </div>\r\n          <div\r\n            className='min_icon'\r\n            onClick={MINCOLOSE.closeClock}\r\n            style={{ backgroundColor: closebgc, height: px(50), width: px(50) }}\r\n            onMouseEnter={MINCOLOSE.closeMouseEnter}\r\n            onMouseLeave={MINCOLOSE.closeMouseLeave}\r\n          >\r\n            <img src={rClose} alt=\"\" style={{ width: px(20) }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {modalvisible && modal()}\r\n      {deviceModel && devices()}\r\n\r\n      <MyModal\r\n        // visible={true}\r\n        visible={modalVis}\r\n        element={\r\n          <div className='tip' style={{ width: px(420), height: px(480), borderRadius: px(20) }}>\r\n            <div className='close'\r\n              style={{ height: px(60) }}\r\n              onClick={() => setModalVis(false)}\r\n            >\r\n              <div className='flex' style={{ height: px(60), width: px(60), }}>\r\n                <img src={close} alt=\"\" style={{ width: px(20) }} />\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"text\">\r\n              <h1 style={{ fontSize: px(36), marginTop: px(30) }}> {isNotFound ? 'Pet not found!' : 'Pet found!'}</h1>\r\n\r\n            </div>\r\n            <div className='flex' style={{ margin: `${px(20)}px 0` }}>\r\n              {isNotFound ?\r\n                <img src={redclose} width=\"50px\" /> :\r\n                <img src={jinggao} width=\"50px\" />\r\n              }\r\n            </div>\r\n            <div className='textbody' style={{ marginTop: px(30), color: '#000' }}>\r\n              {isNotFound ? <p style={{ fontSize: px(22) }}> This pet is not on your database</p> :\r\n                <p style={{ fontSize: px(22) }}>Pet Identified but does not <br /> belong to your organization.</p>}\r\n            </div>\r\n\r\n\r\n\r\n            <div className='flex' style={{ marginTop: px(30), width: '100%', }}>\r\n\r\n              <div\r\n                className='btn flex'\r\n                style={{ height: px(40) }}\r\n                onClick={() => {\r\n                  setModalVis(false)\r\n                  cencleClick()\r\n                }}\r\n              >\r\n                <p>OK</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n      />\r\n\r\n    </div >\r\n  )\r\n}\r\n\r\nHeard.propTypes = {\r\n  onReturn: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  menu1Click: PropTypes.func,\r\n  menu2Click: PropTypes.func,\r\n  menu3Click: PropTypes.func,\r\n  menu4Click: PropTypes.func,\r\n  menu5Click: PropTypes.func,\r\n  menu6Click: PropTypes.func,\r\n  menu7Click: PropTypes.func,\r\n  menu8Click: PropTypes.func,\r\n  menu9Click: PropTypes.func,\r\n  blueSearch: PropTypes.bool\r\n\r\n}\r\nHeard.defaultProps = {\r\n  onSearch: () => { },\r\n  onReturn: () => { },\r\n  menu1Click: () => { },\r\n  menu2Click: () => { },\r\n  menu3Click: () => { },\r\n  menu4Click: () => { },\r\n  menu5Click: () => { },\r\n  menu6Click: () => { },\r\n  menu7Click: () => { },\r\n  menu8Click: () => { },\r\n  menu9Click: () => { },\r\n  blueSearch: false,\r\n}\r\n\r\nexport default Heard",["114","115"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js",["116","117","118","119"],"\r\nlet COMMON_URL = 'https://www.mellaserver.com/big/mellabiggie';//内部负载均衡\r\n\r\n//let COMMON_URL = 'http://34.206.181.105:31668/mellabiggie';//内部负载均衡\r\n\r\n// let COMMON_URL = 'http://192.168.0.36:9090/mellabiggie';//本地测试\r\nlet token = '';\r\n\r\n\r\nexport async function fetchRequest4 (url, method, params = '', Authorization = '', isLogin) {\r\n\r\n  // if (isLogin) {\r\n\r\n  //     COMMON_URL = 'http://34.206.181.105:31667/mellaserver'\r\n  // } else {\r\n  //     COMMON_URL = 'https://www.mellaserver.com/big/mellabiggie'\r\n  // }\r\n  console.log(COMMON_URL, url);\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          headers: {\r\n            Authorization\r\n          },\r\n          method: method,\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      console.log(COMMON_URL + url);\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": 'text/plain',\r\n            Authorization\r\n          },\r\n\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\hardwareAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js",["120","121","122"],"\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './minClose.less'\r\nimport { px, mTop } from './../px'\r\nimport rMin_red from './../../assets/img/min-red.png'\r\nimport rClose_red from './../../assets/img/close-red.png'\r\n\r\nimport rMin_white from './../../assets/img/min-white.png'\r\nimport rClose_white from './../../assets/img/close-white.png'\r\n\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\n/**\r\n * \r\n * @param {string} minHeight 最小化、最大化方块的宽高 \r\n * @param {number} imgWidth 最小化、最大化图片的高度 \r\n * @returns  封装了最小化和关闭按钮，有鼠标移入、移出的动画\r\n */\r\nconst MinClose = ({ minHeight, imgWidth }) => {\r\n  const [minbgc, setMinbgc] = useState('')\r\n  const [rMin, setRMin] = useState(rMin_red)\r\n  const [closebgc, setClosebgc] = useState('')\r\n  const [rClose, setRClose] = useState(rClose_red)\r\n\r\n  const minMouseEnter = () => {\r\n    setMinbgc('rgba(70, 70, 70, 0.5)')\r\n    setRMin(rMin_white)\r\n  }\r\n  const minMouseLeave = () => {\r\n    setMinbgc('')\r\n    setRMin(rMin_red)\r\n  }\r\n  const minClock = () => {\r\n    setMinbgc('')\r\n    setRMin(rMin_red)\r\n    ipcRenderer.send('window-min')\r\n\r\n  }\r\n\r\n\r\n  const closeMouseEnter = () => {\r\n    setClosebgc('rgba(232,17,35)')\r\n    setRClose(rClose_white)\r\n  }\r\n  const closeMouseLeave = () => {\r\n    setClosebgc('')\r\n    setRClose(rClose_red)\r\n  }\r\n  const closeClock = () => {\r\n    ipcRenderer.send('window-close')\r\n  }\r\n\r\n\r\n  return (\r\n    <div\r\n      id='minClose'\r\n    >\r\n      <div\r\n        className='min_icon'\r\n        onClick={minClock}\r\n        style={{ backgroundColor: minbgc, height: minHeight, width: minHeight }}\r\n        onMouseEnter={minMouseEnter}\r\n        onMouseLeave={minMouseLeave}\r\n      >\r\n        <img src={rMin} alt=\"\" style={{ width: imgWidth }} />\r\n      </div>\r\n      <div\r\n        className='min_icon'\r\n        onClick={closeClock}\r\n        style={{ backgroundColor: closebgc, height: minHeight, width: minHeight }}\r\n        onMouseEnter={closeMouseEnter}\r\n        onMouseLeave={closeMouseLeave}\r\n      >\r\n        <img src={rClose} alt=\"\" style={{ width: imgWidth }} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nMinClose.propTypes = {\r\n  minHeight: PropTypes.string,\r\n  imgWidth: PropTypes.number,\r\n}\r\nMinClose.defaultProps = {\r\n  minHeight: '40px',\r\n  imgWidth: `${px(20)}px`\r\n\r\n}\r\n\r\nexport default MinClose","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx",["123","124","125","126"],"import React, {\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport { Button, Progress } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport Animation_1 from './../../../assets/img/Animation_1.png';\r\nimport Animation_2 from './../../../assets/img/Animation_2.png';\r\nimport Animation_3 from './../../../assets/img/Animation_3.png';\r\nimport './measurement.less';\r\n\r\nconst Measurement = () => {\r\n    const [percent, setPercent] = useState(0);\r\n    const decline = () => {\r\n        let newPercent = percent + 10;\r\n        if (newPercent > 100) {\r\n            newPercent = 100;\r\n        }\r\n        setPercent(newPercent);\r\n    }\r\n    return (\r\n        <div className='measurementBox'>\r\n            <Progress type=\"dashboard\" percent={percent} gapDegree={30} width={'260px'} strokeWidth={'8'} format={percent => `${percent} ℉`} />\r\n            <Button onClick={decline} icon={<PlusOutlined />} />\r\n            {\r\n                percent === 0 ? (<img src={Animation_1} />) : (<img src={Animation_2} />)\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Measurement;","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["127","128","129","130","131","132"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx",["133","134","135","136","137","138","139","140","141"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx",["142","143"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx",["144","145"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx",["146","147","148"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx",["149"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js",[],{"ruleId":"150","severity":1,"message":"151","line":6,"column":10,"nodeType":"152","messageId":"153","endLine":6,"endColumn":14},{"ruleId":"150","severity":1,"message":"154","line":6,"column":20,"nodeType":"152","messageId":"153","endLine":6,"endColumn":22},{"ruleId":"150","severity":1,"message":"155","line":127,"column":11,"nodeType":"152","messageId":"153","endLine":127,"endColumn":22},{"ruleId":"150","severity":1,"message":"156","line":5,"column":3,"nodeType":"152","messageId":"153","endLine":5,"endColumn":10},{"ruleId":"150","severity":1,"message":"157","line":6,"column":3,"nodeType":"152","messageId":"153","endLine":6,"endColumn":9},{"ruleId":"150","severity":1,"message":"158","line":7,"column":3,"nodeType":"152","messageId":"153","endLine":7,"endColumn":8},{"ruleId":"150","severity":1,"message":"159","line":10,"column":10,"nodeType":"152","messageId":"153","endLine":10,"endColumn":22},{"ruleId":"150","severity":1,"message":"160","line":11,"column":10,"nodeType":"152","messageId":"153","endLine":11,"endColumn":24},{"ruleId":"150","severity":1,"message":"161","line":19,"column":8,"nodeType":"152","messageId":"153","endLine":19,"endColumn":16},{"ruleId":"150","severity":1,"message":"162","line":26,"column":8,"nodeType":"152","messageId":"153","endLine":26,"endColumn":17},{"ruleId":"150","severity":1,"message":"163","line":27,"column":8,"nodeType":"152","messageId":"153","endLine":27,"endColumn":21},{"ruleId":"150","severity":1,"message":"164","line":29,"column":8,"nodeType":"152","messageId":"153","endLine":29,"endColumn":16},{"ruleId":"150","severity":1,"message":"165","line":41,"column":8,"nodeType":"152","messageId":"153","endLine":41,"endColumn":15},{"ruleId":"150","severity":1,"message":"166","line":43,"column":9,"nodeType":"152","messageId":"153","endLine":43,"endColumn":16},{"ruleId":"150","severity":1,"message":"167","line":44,"column":7,"nodeType":"152","messageId":"153","endLine":44,"endColumn":13},{"ruleId":"150","severity":1,"message":"168","line":48,"column":7,"nodeType":"152","messageId":"153","endLine":48,"endColumn":17},{"ruleId":"169","severity":1,"message":"170","line":162,"column":7,"nodeType":"171","messageId":"172","endLine":163,"endColumn":31},{"ruleId":"169","severity":1,"message":"170","line":164,"column":7,"nodeType":"171","messageId":"172","endLine":167,"endColumn":15},{"ruleId":"169","severity":1,"message":"173","line":173,"column":7,"nodeType":"171","messageId":"174","endLine":174,"endColumn":15},{"ruleId":"175","severity":1,"message":"176","line":191,"column":6,"nodeType":"177","endLine":191,"endColumn":8,"suggestions":"178"},{"ruleId":"150","severity":1,"message":"179","line":229,"column":13,"nodeType":"152","messageId":"153","endLine":229,"endColumn":20},{"ruleId":"180","severity":1,"message":"181","line":823,"column":17,"nodeType":"182","endLine":823,"endColumn":63},{"ruleId":"180","severity":1,"message":"181","line":829,"column":17,"nodeType":"182","endLine":829,"endColumn":65},{"ruleId":"183","severity":1,"message":"184","line":863,"column":15,"nodeType":"182","endLine":868,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":869,"column":15,"nodeType":"182","endLine":875,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":955,"column":17,"nodeType":"182","endLine":955,"endColumn":63},{"ruleId":"180","severity":1,"message":"181","line":960,"column":15,"nodeType":"182","endLine":960,"endColumn":64},{"ruleId":"183","severity":1,"message":"184","line":1053,"column":13,"nodeType":"182","endLine":1055,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":1118,"column":15,"nodeType":"182","endLine":1120,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":1134,"column":13,"nodeType":"182","endLine":1136,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":1202,"column":15,"nodeType":"182","endLine":1204,"endColumn":16},{"ruleId":"183","severity":1,"message":"184","line":1217,"column":15,"nodeType":"182","endLine":1219,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":1258,"column":13,"nodeType":"182","endLine":1258,"endColumn":58},{"ruleId":"180","severity":1,"message":"181","line":1459,"column":17,"nodeType":"182","endLine":1459,"endColumn":52},{"ruleId":"180","severity":1,"message":"181","line":1460,"column":17,"nodeType":"182","endLine":1460,"endColumn":51},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"150","severity":1,"message":"189","line":7,"column":5,"nodeType":"152","messageId":"153","endLine":7,"endColumn":10},{"ruleId":"150","severity":1,"message":"190","line":20,"column":9,"nodeType":"152","messageId":"153","endLine":20,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":23,"column":16,"nodeType":"193","messageId":"194","endLine":23,"endColumn":18},{"ruleId":"191","severity":1,"message":"192","line":74,"column":16,"nodeType":"193","messageId":"194","endLine":74,"endColumn":18},{"ruleId":"150","severity":1,"message":"195","line":2,"column":27,"nodeType":"152","messageId":"153","endLine":2,"endColumn":36},{"ruleId":"150","severity":1,"message":"196","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":8,"column":14,"nodeType":"152","messageId":"153","endLine":8,"endColumn":18},{"ruleId":"150","severity":1,"message":"195","line":2,"column":5,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"197","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":19},{"ruleId":"180","severity":1,"message":"181","line":26,"column":34,"nodeType":"182","endLine":26,"endColumn":59},{"ruleId":"180","severity":1,"message":"181","line":26,"column":64,"nodeType":"182","endLine":26,"endColumn":89},{"ruleId":"150","severity":1,"message":"195","line":2,"column":5,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"198","line":3,"column":5,"nodeType":"152","messageId":"153","endLine":3,"endColumn":13},{"ruleId":"150","severity":1,"message":"199","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":15},{"ruleId":"150","severity":1,"message":"200","line":5,"column":53,"nodeType":"152","messageId":"153","endLine":5,"endColumn":58},{"ruleId":"150","severity":1,"message":"201","line":5,"column":60,"nodeType":"152","messageId":"153","endLine":5,"endColumn":64},{"ruleId":"150","severity":1,"message":"202","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":29},{"ruleId":"150","severity":1,"message":"195","line":2,"column":5,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"198","line":3,"column":5,"nodeType":"152","messageId":"153","endLine":3,"endColumn":13},{"ruleId":"150","severity":1,"message":"203","line":6,"column":18,"nodeType":"152","messageId":"153","endLine":6,"endColumn":22},{"ruleId":"150","severity":1,"message":"204","line":6,"column":24,"nodeType":"152","messageId":"153","endLine":6,"endColumn":34},{"ruleId":"150","severity":1,"message":"205","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":21},{"ruleId":"150","severity":1,"message":"206","line":8,"column":8,"nodeType":"152","messageId":"153","endLine":8,"endColumn":19},{"ruleId":"150","severity":1,"message":"207","line":9,"column":8,"nodeType":"152","messageId":"153","endLine":9,"endColumn":20},{"ruleId":"150","severity":1,"message":"208","line":13,"column":9,"nodeType":"152","messageId":"153","endLine":13,"endColumn":16},{"ruleId":"150","severity":1,"message":"209","line":13,"column":18,"nodeType":"152","messageId":"153","endLine":13,"endColumn":24},{"ruleId":"150","severity":1,"message":"198","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"195","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"210","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"198","line":1,"column":28,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"211","line":30,"column":9,"nodeType":"152","messageId":"153","endLine":30,"endColumn":16},{"ruleId":"175","severity":1,"message":"212","line":32,"column":6,"nodeType":"177","endLine":32,"endColumn":8,"suggestions":"213"},{"ruleId":"214","severity":1,"message":"215","line":134,"column":5,"nodeType":"216","messageId":"217","endLine":153,"endColumn":6},{"ruleId":"175","severity":1,"message":"218","line":35,"column":6,"nodeType":"177","endLine":35,"endColumn":26,"suggestions":"219"},"no-unused-vars","'mTop' is defined but never used.","Identifier","unusedVar","'pX' is defined but never used.","'offsetWidth' is assigned a value but never used.","'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SyncOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'SubMenu' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'allPetList' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.","ArrayExpression",["220"],"'bluData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["221"],"no-negated-in-lhs",["222"],"'token' is assigned a value but never used.","'header' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Animation_3' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'Space' is defined but never used.","'Card' is defined but never used.","'BluetoothNotConnected' is defined but never used.","'Menu' is defined but never used.","'PageHeader' is defined but never used.","'LinkEquipment' is defined but never used.","'Measurement' is defined but never used.","'MeasuredData' is defined but never used.","'Content' is assigned a value but never used.","'Header' is assigned a value but never used.","'Component' is defined but never used.","'petList' is assigned a value but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["223"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has a missing dependency: 'selectHardwareInfo'. Either include it or remove the dependency array. If 'setSelectHardwareDetail' needs the current value of 'selectHardwareInfo', you can also switch to useReducer instead of useState and read 'selectHardwareInfo' in the reducer.",["224"],{"desc":"225","fix":"226"},"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"231","text":"232"},"Update the dependencies array to be: [_getExam]",{"range":"233","text":"234"},"Update the dependencies array to be: [selectHardwareInfo, selectHardwareList]",{"range":"235","text":"236"},[6288,6290],"[_noUSB, _send, blueSearch]",[934,936],"[_getExam]",[1380,1400],"[selectHardwareInfo, selectHardwareList]"]