[{"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"2","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx":"3","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\index.js":"4","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"5","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx":"6","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\heard\\Heard.js":"7","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil4.js":"8","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"9","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"10","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\index.jsx":"11","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"12","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\appversion.js":"13","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\App.js":"14","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx":"15","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx":"16","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\px.js":"17","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx":"18","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actionTypes\\hardwareType.js":"19","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\hardwareAction.js":"20","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\HardListModal.jsx":"21","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx":"22","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx":"23","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx":"24","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\index.jsx":"25","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\signIn\\SignIn.jsx":"26","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\index.jsx":"27","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\index.js":"28","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\settings\\Settings.jsx":"29","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\Fetch_token.js":"30","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\home\\Home.jsx":"31","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchEszVet.js":"32","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\areaCode\\imgArray.js":"33","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\index.js":"34","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\slider\\Slider.js":"35","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx":"36","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectMella\\SelectMella.jsx":"37","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx":"38","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\selectionBox\\SelectionBox.jsx":"39","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx":"40","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\gender.js":"41","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\mouseDiv\\MouseDiv.js":"42","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\InitDate.js":"43"},{"size":59739,"mtime":1655782064819,"results":"44","hashOfConfig":"45"},{"size":14470,"mtime":1655782064826,"results":"46","hashOfConfig":"45"},{"size":1232,"mtime":1655791331602,"results":"47","hashOfConfig":"45"},{"size":573,"mtime":1654138261979,"results":"48","hashOfConfig":"45"},{"size":5178,"mtime":1653893163118,"results":"49","hashOfConfig":"45"},{"size":15939,"mtime":1653893163149,"results":"50","hashOfConfig":"45"},{"size":49093,"mtime":1655782064877,"results":"51","hashOfConfig":"45"},{"size":3126,"mtime":1653893163227,"results":"52","hashOfConfig":"45"},{"size":2311,"mtime":1655469052092,"results":"53","hashOfConfig":"45"},{"size":8196,"mtime":1653893163636,"results":"54","hashOfConfig":"45"},{"size":2215,"mtime":1655789201197,"results":"55","hashOfConfig":"45"},{"size":13439,"mtime":1655789220180,"results":"56","hashOfConfig":"45"},{"size":80,"mtime":1655794030458,"results":"57","hashOfConfig":"45"},{"size":7424,"mtime":1655469051969,"results":"58","hashOfConfig":"45"},{"size":7357,"mtime":1653893163118,"results":"59","hashOfConfig":"45"},{"size":11451,"mtime":1653893163149,"results":"60","hashOfConfig":"45"},{"size":3002,"mtime":1653893163636,"results":"61","hashOfConfig":"45"},{"size":5140,"mtime":1655782064802,"results":"62","hashOfConfig":"45"},{"size":2007,"mtime":1655782064846,"results":"63","hashOfConfig":"45"},{"size":3689,"mtime":1655782064849,"results":"64","hashOfConfig":"45"},{"size":7253,"mtime":1655469052032,"results":"65","hashOfConfig":"45"},{"size":2615,"mtime":1653893163621,"results":"66","hashOfConfig":"45"},{"size":13496,"mtime":1653893163165,"results":"67","hashOfConfig":"45"},{"size":3754,"mtime":1655469052029,"results":"68","hashOfConfig":"45"},{"size":1220,"mtime":1655782247633,"results":"69","hashOfConfig":"45"},{"size":17112,"mtime":1655790942765,"results":"70","hashOfConfig":"45"},{"size":30537,"mtime":1655791059044,"results":"71","hashOfConfig":"45"},{"size":356,"mtime":1655469052054,"results":"72","hashOfConfig":"45"},{"size":26733,"mtime":1653893163181,"results":"73","hashOfConfig":"45"},{"size":3717,"mtime":1653893163227,"results":"74","hashOfConfig":"45"},{"size":5372,"mtime":1655781447721,"results":"75","hashOfConfig":"45"},{"size":3579,"mtime":1653893163227,"results":"76","hashOfConfig":"45"},{"size":11452,"mtime":1653893163590,"results":"77","hashOfConfig":"45"},{"size":91,"mtime":1655469052114,"results":"78","hashOfConfig":"45"},{"size":4449,"mtime":1653893163636,"results":"79","hashOfConfig":"45"},{"size":3174,"mtime":1655469052100,"results":"80","hashOfConfig":"45"},{"size":3973,"mtime":1653893163196,"results":"81","hashOfConfig":"45"},{"size":10219,"mtime":1653893163165,"results":"82","hashOfConfig":"45"},{"size":3371,"mtime":1653893163636,"results":"83","hashOfConfig":"45"},{"size":1678,"mtime":1653893163071,"results":"84","hashOfConfig":"45"},{"size":152,"mtime":1653893163605,"results":"85","hashOfConfig":"45"},{"size":1451,"mtime":1653893163621,"results":"86","hashOfConfig":"45"},{"size":71,"mtime":1655195535541,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},"1xy2jmh",{"filePath":"92","messages":"93","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"97"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"97"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"91"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"128"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Layout, message,\r\n    Input,\r\n    Menu,\r\n    Modal,\r\n    Table,\r\n    Popconfirm,\r\n    Tooltip,\r\n    Select,\r\n    Spin\r\n} from 'antd'\r\nimport ReactECharts from 'echarts-for-react';\r\nimport propTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate';\r\nimport { px, mTop } from '../../utils/px';\r\nimport HeaderItem from './../temperaturePage/components/headerItem';\r\nimport MyModal from './../../utils/myModal/MyModal'\r\n\r\nimport ye from './../../assets/images/ye1.png'\r\nimport er from './../../assets/images/er3.png'\r\nimport gang from './../../assets/images/gang3.png'\r\nimport dog from './../../assets/images/dog.png'\r\nimport cat from './../../assets/images/cat.png'\r\nimport other from './../../assets/images/other.png'\r\nimport edit from './../../assets/images/edit.png'\r\nimport del from './../../assets/images/del.png'\r\nimport start from './../../assets/img/start.png'\r\nimport redjinggao from './../../assets/img/redjinggao.png'\r\nimport placement_gang from './../../assets/images/placement_gang.png'\r\nimport placement_er from './../../assets/images/placement_er.png'\r\nimport palcement_ye from './../../assets/images/palcement_ye.png'\r\nimport close from './../../assets/img/close.png'\r\n\r\nimport './clinical.less'\r\nimport { fetchRequest } from '../../utils/FetchUtil1';\r\nimport { fetchRequest3 } from '../../utils/FetchUtil3';\r\n\r\nlet resyncDeviceIsClick = true //用于控制多次点击重新配对按钮\r\nlet storage = window.localStorage;\r\n\r\n//定义echarts的数据个数\r\nconst echartsDataLength = 0\r\nconst { Option } = Select;\r\nconst ClinicalStudy = ({ bodyHeight, mellaConnectStatus, mellaMeasureValue, mellaMeasureNum, petDetailInfo }) => {\r\n    const [units, setUnits] = useState('℃')\r\n    const [temperature, setTemp] = useState(0)\r\n    const echartsElement = useRef(null)\r\n    const [showHistoryEchart, setShowHistoryEchart] = useState(false)\r\n    const [saveHistoryTime, setSaveHistoryTime] = useState(null)\r\n    const [echarsData, setEcharsData] = useState({\r\n        Eci: [],\r\n        wen0: [],\r\n        wen1: []\r\n    })\r\n    const [mellaStatus, setMellaStatus] = useState('disconnected')\r\n    const [roomTemperature, setRoomTemperature] = useState('')\r\n    const [referenceRectalTemperature, setReferenceRectalTemperature] = useState('')\r\n    const [bodyConditionScore, setBodyConditionScore] = useState('')\r\n    const [furLength, setFurLength] = useState('')\r\n    const [heartRate, setHeartRate] = useState('')\r\n    const [bloodPressure, setBloodPressure] = useState('')\r\n    const [respiratoryRate, setRespiratoryRate] = useState('')\r\n    const [notes, setNotes] = useState('')\r\n\r\n    const [isPetCharacteristics, setIsPetCharacteristics] = useState(false)\r\n    const [historyData, setHistoryData] = useState([])\r\n    const [editRectal, setEditRectal] = useState('')\r\n    const [editRoomTemperature, setEditRoomTemperature] = useState('')\r\n    const [editHeartRate, setEditHeartRate] = useState('')\r\n    //定义变量 editBloodPressure,  editRespiratoryRate, editVisible: true, editId: key, memo: record.note, editBodyConditionScore, editFurLength\r\n    const [editBloodPressure, setEditBloodPressure] = useState('')\r\n    const [editRespiratoryRate, setEditRespiratoryRate] = useState('')\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    const [editMemo, setEditMemo] = useState('')\r\n    const [editBodyConditionScore, setEditBodyConditionScore] = useState('')\r\n    const [editFurLength, setEditFurLength] = useState('')\r\n    const [tipSpin, setTipSpin] = useState(false)\r\n    const [tip, setTip] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [bounds, setBounds] = useState({ left: 0, top: 0, bottom: 0, right: 0 })\r\n    const [memo, setMemo] = useState('')\r\n    const [windowWidth, setWindowWidth] = useState(px(550))\r\n\r\n    const clinicalRef = useRef(null)\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (petDetailInfo.petId) {\r\n            _getHistory11(petDetailInfo.petId)\r\n        } else if (petDetailInfo.isWalkIn) {\r\n            _getEmergencyHistory()\r\n        }\r\n    }, [petDetailInfo])\r\n\r\n    useEffect(() => {\r\n        //react监听屏幕窗口改变\r\n        window.addEventListener('resize', resize)\r\n        return () => {\r\n            window.removeEventListener('resize', resize)\r\n        }\r\n    }, [])\r\n\r\n    const resize = () => {\r\n        if (clinicalRef.current) {\r\n\r\n            let { offsetWidth } = clinicalRef.current\r\n            console.log('改变', offsetWidth);\r\n            setWindowWidth(offsetWidth)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log('监听', mellaMeasureValue);\r\n        setTemp(mellaMeasureValue)\r\n        let { Eci, wen0, wen1 } = echarsData\r\n        //两个数组合并成一个数组\r\n        let EciCopy = [...Eci]\r\n\r\n        let win0Copy = [...wen0]\r\n        let wen1Copy = [...wen1]\r\n        EciCopy.push(EciCopy.length + 1)\r\n        win0Copy.push(mellaMeasureValue)\r\n        wen1Copy.push(mellaMeasureValue)\r\n        let json = {\r\n            Eci: EciCopy,\r\n            wen0: win0Copy,\r\n            wen1: wen1Copy\r\n\r\n        }\r\n        setEcharsData(json)\r\n        const option = getOption();\r\n        echartsElement.current.getEchartsInstance().setOption(option)\r\n\r\n\r\n    }, [mellaMeasureNum])\r\n\r\n    useEffect(() => {\r\n        if (mellaConnectStatus === 'complete' && echarsData.Eci.length > 10) {\r\n\r\n            addClinical()\r\n        }\r\n        if (mellaConnectStatus === 'isMeasuring' && mellaStatus !== 'isMeasuring') {\r\n            setEcharsData(\r\n                {\r\n                    Eci: [],\r\n                    wen0: [],\r\n                    wen1: []\r\n                }\r\n            )\r\n\r\n        }\r\n        if (mellaConnectStatus === 'isMeasuring') {\r\n            setShowHistoryEchart(false)\r\n        }\r\n\r\n        setMellaStatus(mellaConnectStatus)\r\n\r\n\r\n\r\n    }, [mellaConnectStatus])\r\n    const addClinical = () => {\r\n        console.log('调用接口进行保存数据');\r\n        let emerData = []\r\n        let { Eci, wen0, wen1 } = echarsData\r\n        for (let i = 0; i < wen0.length; i++) {\r\n            const element = wen0[i];\r\n            let str = {\r\n                data0: element,\r\n                data1: wen1[i]\r\n            }\r\n            emerData.push(str)\r\n\r\n        }\r\n\r\n        saveHistoryTime && clearTimeout(saveHistoryTime)\r\n        let time = setTimeout(() => {\r\n            let BCS = bodyConditionScore === '' ? null : parseFloat(bodyConditionScore)\r\n            let hrartR = heartRate === '' ? null : parseFloat(heartRate)\r\n            let respireatoryR = respiratoryRate === '' ? null : parseFloat(respiratoryRate)\r\n\r\n            let roomT = roomTemperature === '' ? null : ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2)\r\n\r\n            let referenceT = referenceRectalTemperature === '' ? null : ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2)\r\n\r\n            let furL = furLength === '' ? null : parseFloat(furLength)\r\n\r\n\r\n\r\n            let petVitalId = 1\r\n\r\n            let datas = {\r\n\r\n                temperature: parseFloat(temperature),  //测量温度\r\n                roomTemperature: roomT,//室温\r\n                bodyConditionScore: BCS,//身体状况评分\r\n                heartRate: hrartR,//心率\r\n                respiratoryRate: respireatoryR,//呼吸率\r\n                referenceRectalTemperature: referenceT,//参考腹部温度\r\n                furLength: furL,//毛发长度\r\n                bloodPressure: bloodPressure,//血压\r\n                memo: notes,\r\n                petVitalTypeId: petVitalId,\r\n                clinicalDataEntityList: emerData\r\n            }\r\n            if (storage.roleId === `1`) {\r\n                datas.userId = storage.userId\r\n            } else {\r\n                datas.doctorId = storage.userId\r\n                datas.userId = storage.userId\r\n            }\r\n            let { petId, isWalkIn } = petDetailInfo\r\n            if (petId && !isWalkIn) {\r\n                datas.petId = petId\r\n                console.log('入参数据:', datas);\r\n                fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\r\n                    .then(res => {\r\n                        console.log(res);\r\n\r\n                        if (res.flag === true) {\r\n                            console.log('上传成功');\r\n                            message.success('Uploaded successfully')\r\n                            _getHistory11(petDetailInfo.petId)\r\n                        } else {\r\n                            console.log('上传失败');\r\n\r\n                            message.error('upload failed')\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        message.error('upload failed')\r\n\r\n\r\n                    })\r\n            } else if (isWalkIn) {\r\n                console.log('温度数据保存入参：', datas);\r\n\r\n                fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\r\n                    .then(res => {\r\n\r\n                        if (res.flag === true) {\r\n\r\n                            message.success('Uploaded successfully')\r\n\r\n                            _getEmergencyHistory()\r\n                        } else {\r\n                            console.log('上传失败');\r\n                            message.error('upload failed')\r\n\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        message.error(err)\r\n\r\n                    })\r\n            }\r\n\r\n\r\n\r\n        }, 500)\r\n        setSaveHistoryTime(time)\r\n    }\r\n    const _getHistory11 = (petId) => {\r\n        let historys = []\r\n        setLoading(true)\r\n        fetchRequest(`/pet/getPetExamAndClinicalByPetId/${petId}`, 'GET', '')  //userID要自动的\r\n            .then(res => {\r\n                console.log('获取历史记录', res);\r\n                setLoading(false)\r\n\r\n\r\n                if (res.flag === true) {\r\n                    let datas = res.data\r\n                    console.log('-------', datas);\r\n                    for (let i = datas.length - 1; i >= 0; i--) {\r\n\r\n                        let data = datas[i]\r\n\r\n                        let { petId, examId, clinicalDatagroupId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo,\r\n                            bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity, modifiedTime } = data\r\n\r\n                        if (!clinicalDatagroupId) {\r\n                            continue\r\n                        }\r\n                        let Tem = temperature\r\n                        if (clinicalDataEntity) {\r\n                            Tem = Tem || clinicalDataEntity.data0\r\n                        }\r\n                        // console.log('==============', Tem);\r\n                        Tem = Tem ? Tem : 0\r\n\r\n\r\n                        let time = null\r\n                        if (modifiedTime && `${modifiedTime}` !== '' && `${modifiedTime}` !== `undefined`) {\r\n                            time = modifiedTime\r\n                        } else {\r\n                            time = createTime\r\n                        }\r\n                        let json = {\r\n                            time,\r\n                            Temp: Tem,\r\n                            placement: petVitalTypeId,\r\n                            note: memo,\r\n                            historyId: examId,\r\n                            bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\r\n                        }\r\n                        historys.push(json)\r\n\r\n\r\n                    }\r\n                    console.log('---', historys);\r\n                    let historyData = []\r\n                    for (let i = 0; i < historys.length; i++) {\r\n                        let history = historys[i]\r\n                        let { bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId, examId } = history\r\n                        // console.log('--------', history.placement);\r\n                        let placement = history.placement\r\n                        if (placement === null || placement === '') {\r\n                            placement = 1\r\n                        }\r\n                        let str = {\r\n                            date: moment(history.time).format('MMM DD'),\r\n                            time: moment(history.time).format('hh:mm A'),\r\n                            temp: history.Temp,\r\n                            placement,\r\n                            note: history.note,\r\n                            historyId: history.historyId,\r\n                            bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId,\r\n                            key: examId\r\n                        }\r\n                        historyData.push(str)\r\n                    }\r\n                    // this.setState({\r\n                    //     historyData\r\n                    // })\r\n                    setHistoryData(historyData)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n    const _getEmergencyHistory = () => {\r\n\r\n        //封装的日期排序方法\r\n        function ForwardRankingDate(data, p) {\r\n            for (let i = 0; i < data.length - 1; i++) {\r\n                for (let j = 0; j < data.length - 1 - i; j++) {\r\n                    if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n                        var temp = data[j];\r\n                        data[j] = data[j + 1];\r\n                        data[j + 1] = temp;\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n        let historys = []\r\n        setLoading(true)\r\n        fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, 'GET', '')  //userID要自动的\r\n            .then(res => {\r\n                setLoading(false)\r\n                if (res.flag === true) {\r\n                    let datas = res.data\r\n                    for (let i = datas.length - 1; i >= 0; i--) {\r\n                        if (datas[i].petId === null) {\r\n                            let { petId, examId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo, clinicalDatagroupId,\r\n                                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity } = datas[i]\r\n                            let Tem = temperature\r\n                            try {\r\n                                Tem = temperature || clinicalDataEntity.data0\r\n                            } catch (error) {\r\n                                console.log('抛出的异常', error);\r\n                            }\r\n\r\n\r\n                            let str = {\r\n                                clinicalDatagroupId,\r\n                                createTime,\r\n                                date: moment(createTime).format('MMM DD'),\r\n                                time: moment(createTime).format('hh:mm A'),\r\n                                temp: parseInt(Tem * 10) / 10,\r\n                                placement: petVitalTypeId,\r\n                                note: memo,\r\n                                historyId: examId,\r\n                                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\r\n                            }\r\n\r\n                            historys.push(str)\r\n                        }\r\n                    }\r\n\r\n                    //把所有数据拿完后做个排序\r\n\r\n                    let historyData = ForwardRankingDate(historys, \"createTime\");\r\n                    console.log('historyData:', historyData);\r\n                    setHistoryData(historyData)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setLoading(false)\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    const getOption = () => {\r\n\r\n        let min, max;\r\n        if (units === '℃') {\r\n            min = 25\r\n            max = 45\r\n        } else {\r\n            min = 75\r\n            max = 115\r\n        }\r\n        let { Eci, wen0, wen1 } = echarsData\r\n\r\n        let option = {\r\n            color: ['#81b22f'],\r\n            tooltip: {\r\n                /*返回需要的信息*/\r\n                trigger: 'axis',\r\n                triggerOn: 'mousemove',\r\n                enterable: true,\r\n                formatter: function (param) {\r\n                    var value = param[0].value;\r\n                    // console.log('----para', param);\r\n                    return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(1)}${units}</div>`\r\n                }\r\n            },\r\n            xAxis: {\r\n                name: 'SPL',\r\n                nameLocation: 'end',\r\n                nameTextStyle: {\r\n                    align: 'left',\r\n                },\r\n                type: 'category',\r\n                // data: [\"\", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,],\r\n                data: Eci,\r\n                // data:['','15miao','30miao'],\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        // 设置x轴颜色\r\n                        color: '#A0A0A0',\r\n                        show: true\r\n                    }\r\n                },\r\n                // 设置X轴数据旋转倾斜\r\n                axisLabel: {\r\n                    rotate: 0, // 旋转角度\r\n                    interval: 29  //设置X轴数据间隔几个显示一个，为0表示都显示\r\n\r\n                },\r\n\r\n            },\r\n            yAxis: {\r\n                name: 'temperature',\r\n                type: 'value',\r\n                min, // 设置y轴刻度的最小值\r\n                max,  // 设置y轴刻度的最大值\r\n                splitNumber: 0,  // 设置y轴刻度间隔个数\r\n                nameTextStyle: {\r\n                    padding: [0, 0, 0, 8],\r\n                    // backgroundColor: 'pink',\r\n                    width: '1200px',\r\n                    // fontSize: 20,\r\n                    align: 'left',\r\n                },\r\n\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        // 设置x轴颜色\r\n                        color: '#A0A0A0',\r\n                        show: true\r\n                    }\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n            },\r\n            series: [{\r\n                name: '模拟数据',\r\n                type: 'line',\r\n                showSymbol: false,\r\n                hoverAnimation: false,\r\n                // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\r\n                data: wen0,\r\n                smooth: 0.5,\r\n                symbol: 'none',\r\n                // itemStyle: {\r\n                //     normal: {\r\n\r\n                //     }\r\n                // }\r\n                lineStyle: {        // 系列级个性化折线样式 \r\n                    width: 2,\r\n                    type: 'solid',\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 1,\r\n                        x2: 0,\r\n                        y2: 0,\r\n                        colorStops: [{\r\n                            offset: 0.5, color: '#47C2ED' // 0% 处的颜色  蓝\r\n                        }, {\r\n                            offset: 1, color: '#78D35D' // 50% 处的颜色  绿\r\n                        },\r\n                            // {\r\n                            //   offset: 1, color: 'red' // 100% 处的颜色   红\r\n                            // }\r\n                        ],\r\n                        globalCoord: false // 缺省为 false\r\n                    }\r\n                },\r\n            }]\r\n        }\r\n        return option;\r\n    }\r\n    const _status = () => {\r\n        let text = '', unit = '', temColor = ''\r\n        let Temp = parseFloat(temperature)\r\n\r\n        if (mellaConnectStatus === 'disconnected') {\r\n            if (!showHistoryEchart) {\r\n                Temp = ''\r\n                text = 'disconnected'\r\n                temColor = '#3B3A3A'\r\n            } else {\r\n                text = 'disconnected'\r\n                temColor = '#3B3A3A'\r\n            }\r\n\r\n        } else {\r\n            text = 'connected'\r\n            temColor = '#3B3A3A'\r\n            if (Temp > 15) {\r\n                unit = units\r\n                if (Temp > 39) {\r\n                    text = 'High'\r\n                    temColor = '#E1206D'\r\n                } else if (Temp < 31) {\r\n                    text = 'Low'\r\n                    temColor = '#47C2ED'\r\n                } else {\r\n                    text = 'Normal'\r\n                    temColor = '#78D35D'\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        let temp = ''\r\n\r\n        if (`${Temp}` !== 'NaN' && Temp !== '') {\r\n            temp = units === '℉' ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1)\r\n        }\r\n        let lowFlog = false\r\n        if (unit === '℃') {\r\n            if (temp < 24.8) {\r\n                lowFlog = true\r\n            }\r\n        } else {\r\n            if (temp < 76.6) {\r\n                lowFlog = true\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className='Tem' style={{ color: temColor, right: px(30), bottom: mTop(120) }}>\r\n\r\n                {(mellaConnectStatus !== 'isMeasuring') ? (\r\n                    showHistoryEchart ? <>\r\n                        <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{units}</sup></span><br />\r\n                        {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\r\n\r\n                        <span style={{ fontSize: px(22), color: '#8a8a8a' }}>{`History`}</span>\r\n                    </> :\r\n\r\n                        <>\r\n                            <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\r\n                            <span style={{ fontSize: px(22) }}>{text}</span>\r\n                        </>\r\n                ) : (\r\n                    lowFlog ? (\r\n                        <>\r\n                            <span style={{ fontSize: px(36) }}>{'Low'}</span><br />\r\n\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\r\n\r\n                        </>\r\n                    )\r\n\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    const _foot = () => {\r\n        let lbgc = '', rbgc = ''\r\n        if (isPetCharacteristics) {\r\n            lbgc = 'rgba(25,173,228,0.5)'; rbgc = 'rgba(105,201,237,1)'\r\n        } else {\r\n            lbgc = 'rgba(105,201,237,1)'; rbgc = 'rgba(25,173,228,0.5)'\r\n        }\r\n        return (\r\n            <div className=\"clinical_foot\"  >\r\n                <div className=\"top\"\r\n                    style={{ height: px(40), }}\r\n                >\r\n\r\n                    <div className=\"foot_l\" style={{ backgroundColor: lbgc }} onClick={() => setIsPetCharacteristics(true)}>\r\n                        Pet Characteristics\r\n                    </div>\r\n                    <div className=\"foot_l\" style={{ backgroundColor: rbgc }} onClick={() => setIsPetCharacteristics(false)}>\r\n                        History\r\n                    </div>\r\n                </div>\r\n                {isPetCharacteristics ?\r\n                    _petCharacteristics() :\r\n                    _history()\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n    const handleChange = index => {\r\n        console.log('---------', index);\r\n        setFurLength(index)\r\n    };\r\n    const _petCharacteristics = () => {\r\n\r\n        let placeholder = ''\r\n        switch (`${furLength}`) {\r\n            case '1': placeholder = 'smooth'; break;\r\n            case '2': placeholder = 'short'; break;\r\n            case '3': placeholder = 'medium'; break;\r\n            case '4': placeholder = 'long'; break;\r\n            default: break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"petChaeacteristics\"\r\n                style={{ paddingLeft: px(10), paddingRight: px(10), height: '100%' }}\r\n            >\r\n                <div className=\"child\" style={{ marginTop: mTop(30), }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n                        <p style={{ width: '150px' }}>Room Temperature: </p>\r\n                        <Input className='inp'\r\n                            // style={{ border: 'none', outline: 'medium' }}\r\n                            // style={{ width: px(105), height: mTop(33), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                            value={`${roomTemperature}`}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setRoomTemperature(str)\r\n                            }}\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"5%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n                        <p style={{ width: '150px' }}>Reference Rectal Temperature: </p>\r\n                        <Input className='inp'\r\n                            // style={{ border: 'none', outline: 'medium' }}\r\n\r\n                            value={`${referenceRectalTemperature}`}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setReferenceRectalTemperature(str)\r\n                            }}\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"10%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"child\">\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <p style={{ width: '150px' }}>Body Condition Score:  </p>\r\n                        <Input className='inp'\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n\r\n                            value={bodyConditionScore}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setBodyConditionScore(str)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className='furLength' >\r\n                        <p style={{ width: '150px' }}>Fur Length: </p>\r\n                        <Select\r\n                            placeholder\r\n                            onChange={handleChange}\r\n                            style={{ width: '105px', borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n                            value={placeholder}\r\n                        >\r\n                            <Option value=\"1\">smooth</Option>\r\n                            <Option value=\"2\">short</Option>\r\n                            <Option value=\"3\">medium</Option>\r\n                            <Option value=\"4\">long</Option>\r\n                        </Select>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"child\">\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\r\n                        <p style={{ width: '150px' }}>Heart Rate:  </p>\r\n                        <Input className='inp'\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            value={`${heartRate}`}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setHeartRate(str)\r\n                            }}\r\n\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n                        <p style={{ width: '150px' }}>Blood Pressure:  </p>\r\n                        <Input className='inp'\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            value={bloodPressure}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setBloodPressure(str)\r\n                            }}\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>mm</span>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"child\" style={{ marginBottom: px(40) }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\r\n                        <p style={{ width: '150px' }}>Respiratory Rate:  </p>\r\n                        <Input className='inp'\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            value={`${respiratoryRate}`}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setRespiratoryRate(str)\r\n                            }}\r\n\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\r\n                    </div>\r\n                    <div className='furLength' id='_bodyType'  >\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n    const _history = () => {\r\n\r\n        const _del = (key, record) => {\r\n            console.log('删除', key, record);\r\n\r\n\r\n            /**------------这里还要删除后台的数据------------ */\r\n            fetchRequest(`/pet/deletePetExamByExamId/${key}`, 'DELETE')\r\n                .then(res => {\r\n                    if (res.flag === true) {\r\n\r\n                        const historyData1 = [...historyData];\r\n                        console.log('删除成功', historyData1);\r\n                        setHistoryData(historyData1.filter(item => item.historyId !== key));\r\n                    } else {\r\n                        console.log('删除失败');\r\n                    }\r\n                })\r\n        }\r\n        const _edit = (key, record) => {\r\n\r\n            let { heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature, bodyConditionScore, furLength, note } = record\r\n            console.log('转换前：', record);\r\n            let editHeartRate = (heartRate !== null && heartRate !== undefined) ? heartRate : ''\r\n            let editBloodPressure = (bloodPressure !== null && bloodPressure !== undefined) ? bloodPressure : ''\r\n            let editRespiratoryRate = (respiratoryRate !== null && respiratoryRate !== undefined) ? respiratoryRate : ''\r\n            let editRectal = (referenceRectalTemperature !== null && referenceRectalTemperature !== undefined) ? (referenceRectalTemperature * 1.8 + 32).toFixed(1) : ''\r\n            let editRoomTemperature = (roomTemperature !== null && roomTemperature !== undefined) ? (roomTemperature * 1.8 + 32).toFixed(1) : ''\r\n            let editBodyConditionScore = (bodyConditionScore !== null && bodyConditionScore !== undefined) ? bodyConditionScore : ''\r\n            let editFurLength = furLength\r\n            let mome = note ? note : ''\r\n\r\n\r\n\r\n            console.log(editRectal,\r\n                editRoomTemperature,\r\n                editHeartRate,\r\n                editBloodPressure,\r\n                editRespiratoryRate);\r\n\r\n            //更新editRectal,editRoomTemperature,editHeartRate,editBloodPressure,editRespiratoryRate,editVisible: true,editId: key,memo: record.note,editBodyConditionScore,editFurLength\r\n            setEditRectal(editRectal)\r\n            setEditRoomTemperature(editRoomTemperature)\r\n            setEditHeartRate(editHeartRate)\r\n            setEditBloodPressure(editBloodPressure)\r\n            setEditRespiratoryRate(editRespiratoryRate)\r\n            setEditVisible(true)\r\n            setEditId(key)\r\n            setEditMemo(record.note)\r\n            setEditBodyConditionScore(editBodyConditionScore)\r\n            setEditFurLength(editFurLength)\r\n            setMemo(mome)\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        const see = (id, record) => {\r\n            console.log(id, record);\r\n            setTip('data is loading')\r\n            setTipSpin(true)\r\n\r\n            fetchRequest3(`/exam/getClinicalDataByExamId/${id}`, 'GET')\r\n                .then(res => {\r\n                    console.log('此条记录的全部数据：', res);\r\n                    setTip('')\r\n                    setTipSpin(false)\r\n                    if (res.flag) {\r\n                        let datas = res.data.clinicalDataEntityList\r\n\r\n\r\n                        if (datas) {\r\n\r\n                            let echarsData = {\r\n                                Eci: [],\r\n                                wen0: [],\r\n                                wen1: []\r\n                            }\r\n                            let { wen0, wen1, Eci } = echarsData\r\n                            for (let i = 0; i < datas.length; i++) {\r\n                                let { data0, data1 } = datas[i]\r\n\r\n\r\n                                Eci.push(i)\r\n                                if (units === '℃') {\r\n                                    wen0.push(data0)\r\n                                    wen1.push(data1)\r\n\r\n                                } else {\r\n                                    wen0.push(data0 * 1.8 + 32)\r\n                                    wen1.push(data1 * 1.8 + 32)\r\n                                }\r\n\r\n                            }\r\n                            let Temp = datas[datas.length - 1].data0 || ''\r\n                            console.log('----------------', Temp);\r\n                            setEcharsData(echarsData)\r\n                            setTemp(Temp)\r\n                            setShowHistoryEchart(true)\r\n                            const option = getOption();\r\n                            echartsElement.current.getEchartsInstance().setOption(option)  // 实时改变\r\n\r\n                        }\r\n\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    setTip('')\r\n                    setTipSpin(false)\r\n                    console.log(err);\r\n                })\r\n        }\r\n        const isflog = window.screen.height < 1000 ? true : false\r\n\r\n        const columns = [\r\n            {\r\n                title: '',\r\n                dataIndex: 'operation',\r\n                key: 'operation',\r\n                width: '16%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n                    // console.log('狩猎:', text, record, index);\r\n                    //record:\r\n                    return (\r\n                        <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', padding: `${px(18)}px 0` }} >\r\n                            <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\r\n                                <img src={del} alt=\"\" style={{ width: px(25) }} />\r\n                            </Popconfirm>\r\n                            {\r\n                                (petDetailInfo.isWalkIn) ? (\r\n                                    <div className=\"assign\"\r\n                                        style={{ width: mTop(60), height: mTop(28), fontSize: px(14) }}\r\n\r\n                                        onClick={() => {\r\n                                            console.log(text, record, index);\r\n                                            this.setState({\r\n                                                visible: true,\r\n                                                seleceEmergencies: record\r\n                                            })\r\n                                        }}>Assign</div>\r\n                                ) : (\r\n                                    <>\r\n                                        <img src={edit} alt=\"\" style={{ width: px(25) }}\r\n                                            onClick={() => _edit(record.historyId, record)}\r\n                                        />\r\n\r\n                                        <img src={start} alt=\"\" style={{ width: px(25) }}\r\n                                            onClick={() => see(record.historyId, record)}\r\n                                        />\r\n                                    </>\r\n                                )\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: 'Date',\r\n                dataIndex: 'date',\r\n                key: 'date',\r\n                width: '14%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{text}</p>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: 'Time',\r\n                dataIndex: 'time',\r\n                key: 'time',\r\n                width: '14%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{text}</p>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: `Temp(${units})`,\r\n                // title: `Temp(℉)`,\r\n                key: 'temp',\r\n                dataIndex: 'temp',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                width: '14%',\r\n                render: (text, record, index) => {\r\n                    // console.log(text, record);\r\n\r\n                    /**\r\n                    * bag：温度数值前的圆圈的背景颜色\r\n                    * tem：展示的温度\r\n                    * endvalue:将从后台得到的数据全部转化成华氏度\r\n                    * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n                    * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n                    * \r\n                    */\r\n\r\n\r\n                    let bag = '', tem = ''\r\n\r\n                    let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\r\n                    let min = 100.4, max = 102.56\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    if (endValue > max) {\r\n                        bag = '#E1206D'\r\n                    } else if (endValue < min) {\r\n                        bag = '#98DA86'\r\n                    } else {\r\n                        bag = '#58BDE6'\r\n                    }\r\n\r\n                    if (units === '℃') {\r\n                        if (text) {\r\n                            tem = `${text}${units}`\r\n                            if (text > 55) {\r\n\r\n                                tem = `${((text - 32) / 1.8).toFixed(1)}${units}`\r\n                            } else {\r\n                                tem = `${text.toFixed(1)}${units}`\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (text) {\r\n                            if (text > 55) {\r\n                                tem = `${text}${units}`\r\n                            } else {\r\n                                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${units}`\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    return (\r\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                            {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\r\n                            <p style={{ margin: 0, padding: 0 }}>{tem}</p>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: `Rectal Temperature`,\r\n                key: 'referenceRectalTemperature',\r\n                dataIndex: 'referenceRectalTemperature',\r\n                width: '15%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n                    // console.log('肛温的值：', text);\r\n                    let num = text\r\n                    if (text !== null) {\r\n                        num = (text * 1.8 + 32).toFixed(1)\r\n                    }\r\n\r\n                    return (\r\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                            {text !== null && <p style={{ margin: 0, padding: 0 }}>{num} <span>{'℉'}</span></p>}\r\n\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: 'Placement',\r\n                dataIndex: 'placement',\r\n                key: 'placement',\r\n                align: 'center',\r\n                width: '15%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n                    switch (record.placement) {\r\n                        case 1: return (    //腋温\r\n                            <div>\r\n                                <img src={palcement_ye} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                        case 3: return (     //肛温\r\n                            <div>\r\n                                <img src={placement_gang} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                        case 2: return (     //肛温\r\n                            <div>\r\n                                <img src={placement_gang} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                        case 4: return (    //耳温\r\n                            <div>\r\n                                <img src={placement_er} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                        default: return null;\r\n                    }\r\n\r\n                }\r\n            },\r\n            {\r\n                title: 'Note',\r\n                dataIndex: 'note',\r\n                key: 'note',\r\n                width: '12%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n\r\n                    return (\r\n                        <p style={{ width: '100%' }}>{text}</p>\r\n                    )\r\n\r\n                }\r\n            },\r\n        ];\r\n\r\n\r\n\r\n        let hisHe = mTop(200)\r\n        try {\r\n            let historyElement = document.querySelectorAll('#clinicalMeasure11 .historyTable')\r\n            hisHe = historyElement[0].clientHeight - mTop(100)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className='historyTable' style={{ height: '90%' }}>\r\n                <Table\r\n                    columns={columns}\r\n                    loading={loading}\r\n                    dataSource={historyData}\r\n                    rowKey={columns => columns.historyId}\r\n                    // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\r\n                    pagination={false}\r\n                    scroll={{\r\n                        y: hisHe\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n    const _editModal = () => {\r\n\r\n        function save() {\r\n            let datas = {\r\n                memo: memo,\r\n                bodyConditionScore: parseInt(editBodyConditionScore),\r\n                furLength: parseInt(editFurLength),\r\n                heartRate: editHeartRate,\r\n                bloodPressure: editBloodPressure,\r\n                respiratoryRate: editRespiratoryRate\r\n            }\r\n            if (editRoomTemperature) {\r\n                datas.roomTemperature = ((parseFloat(editRoomTemperature) - 32) / 1.8).toFixed(2)\r\n            }\r\n            if (editRectal) {\r\n                datas.referenceRectalTemperature = ((parseFloat(editRectal) - 32) / 1.8).toFixed(2)\r\n            }\r\n\r\n            console.log('入参：', datas, editId);\r\n            setEditVisible(false)\r\n            setTip('Data is being modified')\r\n            setTipSpin(true)\r\n\r\n            fetchRequest(`/pet/updatePetExam/${editId}`, 'POST', datas)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    setTipSpin(false)\r\n                    setTip('')\r\n                    message.success('Data modified successfully')\r\n\r\n                    _getHistory11(petDetailInfo.petId)\r\n                })\r\n                .catch(err => {\r\n                    setTipSpin(false)\r\n                    setTip('')\r\n\r\n                    message.success(' Data modification failed')\r\n\r\n                    console.log(err);\r\n                })\r\n\r\n        }\r\n\r\n\r\n\r\n        let furLength = ''\r\n        if (editFurLength !== null && editFurLength !== undefined) {\r\n            switch (`${editFurLength}`) {\r\n                case '1': furLength = 'smooth'; break;\r\n                case '2': furLength = 'short'; break;\r\n                case '3': furLength = 'medium'; break;\r\n                case '4': furLength = 'long'; break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                title={\r\n                    <div\r\n                        style={{\r\n                            width: '100%',\r\n                            cursor: 'move',\r\n                            height: '20px',\r\n                            textAlign: 'center'\r\n                        }}\r\n                        onMouseOver={() => {\r\n                            if (disabled) {\r\n                                setDisabled(false)\r\n                            }\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            setDisabled(true)\r\n                        }}\r\n\r\n                        onFocus={() => { }}\r\n                        onBlur={() => { }}\r\n                    // end\r\n                    >\r\n                        Modification history information\r\n                    </div>\r\n                }\r\n                visible={editVisible}\r\n                // visible={true}\r\n                onCancel={() => { setEditVisible(false) }}\r\n                modalRender={(modal) => (\r\n                    <Draggable\r\n                        disabled={disabled}\r\n                        bounds={bounds}\r\n                        onStart={(event, uiData) => this.onStart(event, uiData)}\r\n                    >\r\n                        <div >{modal}</div>\r\n                    </Draggable>\r\n                )}\r\n                footer={\r\n                    [] // 设置footer为空，去掉 取消 确定默认按钮\r\n                }\r\n                destroyOnClose={true}\r\n            >\r\n                <div id=\"selectEmergenciesModal\">\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Room Temperature </p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editRoomTemperature}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n\r\n                                setEditRoomTemperature(str)\r\n                            }}\r\n\r\n                        />\r\n                        <span>℉</span>\r\n                    </div>\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Rectal Temperature</p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editRectal}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setEditRectal(str)\r\n                            }}\r\n\r\n                        />\r\n                        <span>℉</span>\r\n                    </div>\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Body Condition Score</p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editBodyConditionScore}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d]/g, '')\r\n\r\n                                setEditBodyConditionScore(str)\r\n                            }}\r\n\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='bodyType11' >\r\n                        <p style={{ width: '140px' }}>Fur Length: </p>\r\n                        <Select\r\n                            placeholder\r\n                            onChange={(index) => {\r\n                                console.log(index);\r\n                                setEditFurLength(index)\r\n                            }}\r\n                            style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n                            value={furLength}\r\n                        >\r\n                            <Option value=\"1\">smooth</Option>\r\n                            <Option value=\"2\">short</Option>\r\n                            <Option value=\"3\">medium</Option>\r\n                            <Option value=\"4\">long</Option>\r\n                        </Select>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Heart Rate: </p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editHeartRate}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d]/g, '')\r\n                                setEditHeartRate(str)\r\n\r\n                            }}\r\n\r\n                        />\r\n                        <span>bpm</span>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Blood Pressure </p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editBloodPressure}\r\n                            onChange={(item) => {\r\n                                setEditBloodPressure(item.target.value)\r\n                            }}\r\n\r\n                        />\r\n                        <span>mm</span>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Respiratory Rate: </p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editRespiratoryRate}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d]/g, '')\r\n                                setEditRespiratoryRate(str)\r\n\r\n                            }}\r\n\r\n                        />\r\n                        <span>bpm</span>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '80px' }}>Notes</p>\r\n                        <textarea\r\n                            rows=\"2\"\r\n                            cols=\"40\"\r\n                            style={{ textIndent: '10px' }}\r\n                            value={memo}\r\n                            onChange={(val) => {\r\n                                setMemo(val.target.value)\r\n                            }}\r\n\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n\r\n                    <div className=\"btn\" onClick={save}>Save</div>\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div id=\"clinical\" style={{ height: bodyHeight, minWidth: px(200), minHeight: bodyHeight, overflow: 'hidden' }} ref={clinicalRef}>\r\n            <div className=\"clinicalTitle\">\r\n                <Layout>\r\n                    <HeaderItem />\r\n                </Layout>\r\n            </div>\r\n            <div className='clinicalBody' style={{ width: '100%', height: bodyHeight - devicesTitleHeight }}>\r\n                <div className='clinical_top'  >\r\n                    <div className=\"r\" >\r\n                        {mellaConnectStatus === 'disconnected' && <div className=\"bb1\"\r\n                        // style={{ left: px(150) }}\r\n                        >\r\n                            <div className=\"btn78\"\r\n                                style={{ width: px(220), height: mTop(30), fontSize: px(16) }}\r\n                                onClick={() => {\r\n                                    console.log('点击了切换按钮');\r\n\r\n                                    if (resyncDeviceIsClick === true) {\r\n                                        resyncDeviceIsClick = false\r\n                                        console.log('发送给主进程切换按钮');\r\n                                        let ipcRenderer = require('electron').ipcRenderer;\r\n                                        ipcRenderer.send('qiehuan')\r\n                                        const time = setTimeout(() => {\r\n                                            resyncDeviceIsClick = true\r\n                                            clearTimeout(time)\r\n                                        }, 2500)\r\n                                    }\r\n\r\n\r\n\r\n                                }}\r\n                            >Re-sync Base</div>\r\n                        </div>}\r\n\r\n\r\n                        <div id='myCharts'\r\n                            style={{ marginTop: mTop(50), width: windowWidth }}\r\n\r\n                        >\r\n                            <ReactECharts\r\n\r\n                                option={getOption()} theme=\"Imooc\" style={{ height: mTop(380), }}\r\n                                notMerge={true}\r\n                                lazyUpdate={true}\r\n                                // theme={\"theme_name\"}\r\n                                ref={echartsElement}\r\n                            />\r\n\r\n                            {_status()}\r\n                        </div>\r\n\r\n                        {/* 底部宠物信息 */}\r\n                        {_foot()}\r\n                        {_editModal()}\r\n\r\n                        {\r\n                            tipSpin &&\r\n                            // true &&\r\n                            <div className=\"modal\">\r\n                                <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\r\n                                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n\r\n\r\n                                </div>\r\n                                <p>\r\n                                    data is loading...\r\n                                </p>\r\n                            </div>\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nClinicalStudy.propTypes = {\r\n    bodyHeight: propTypes.number,\r\n}\r\nClinicalStudy.defaultProps = {\r\n    bodyHeight: 0,\r\n}\r\nexport default connect(\r\n    state => ({\r\n        mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\r\n        mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\r\n        mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\r\n\r\n        petDetailInfo: state.petReduce.petDetailInfo,\r\n    }),\r\n    {}\r\n)(ClinicalStudy);\r\n\r\n\r\n\r\n\r\n",["230","231"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx",["257","258","259","260","261","262"],"import React, {\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport { Image, Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun\r\n} from '../../../store/actions';\r\nimport _ from 'lodash';\r\nimport './linkEquipment.less';\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n    let { mellaConnectStatus } = hardwareMessage;\r\n    return (\r\n\r\n        <Content className={\"contentBox\"}>\r\n            <div className='chackPatientBox'>\r\n                <p className='chackPatientTitle'>Select a patient</p>\r\n            </div>\r\n        </Content>\r\n\r\n    );\r\n}\r\nexport default connect(\r\n    state => ({\r\n        petMessage: state.petReduce.petDetailInfo,\r\n        hardwareMessage: state.hardwareReduce,\r\n    }),\r\n    {\r\n        selectHardwareModalShowFun,\r\n        petSortTypeFun,\r\n        petDetailInfoFun,\r\n        setMellaConnectStatusFun,\r\n        setMellaMeasureValueFun,\r\n        setMellaPredictValueFun,\r\n        setMellaMeasurePartFun\r\n    }\r\n)(LinkEquipment);",["263","264"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\index.js",[],["265","266"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["267","268","269","270"],"import React, { Component, } from 'react'\r\nimport {\r\n\r\n  Select,\r\n  DatePicker, Space,\r\n  message,\r\n  Button,\r\n  Input\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './ezyVetSelectTime.less'\r\nimport { FetchEszVet } from './../../utils/FetchEszVet'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class EzyVetSelectTime extends Component {\r\n\r\n  state = {\r\n    startTime: moment(moment().format(\"YYYY-MM-DD\")),\r\n    endTime: moment(),\r\n    patientId: ''\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    console.log(storage.selectTime);\r\n    if (storage.selectTime && `${storage.selectTime}` !== `undefined` && storage.selectTime !== '') {\r\n      try {\r\n        this.setState({\r\n          startTime: moment(JSON.parse(storage.selectTime).startTime),\r\n          endTime: moment(JSON.parse(storage.selectTime).endTime)\r\n        })\r\n      } catch (error) {\r\n        console.log('时间转换错误', error);\r\n      }\r\n\r\n    }\r\n    console.log('============', storage.selectPatientId);\r\n    if (storage.selectPatientId && `${storage.selectPatientId}` !== `undefined` && storage.selectPatientId !== '') {\r\n      try {\r\n        this.setState({\r\n          patientId: storage.selectPatientId\r\n\r\n        })\r\n      } catch (error) {\r\n        console.log('时间转换错误', error);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  _next = () => {\r\n    let { startTime, endTime } = this.state\r\n    if (startTime === null || endTime === null) {\r\n      message.error('Please select a date range')\r\n      return\r\n    }\r\n    let saveSart = startTime.format('YYYY-MM-DD HH:mm:ss'), saveEnd = endTime.format('YYYY-MM-DD HH:mm:ss');\r\n    console.log('开始时间', startTime.format('YYYY-MM-DD HH:mm:ss'), '---------------结束时间', endTime.format('YYYY-MM-DD HH:mm:ss'));\r\n    let chazhi = new Date().getTimezoneOffset()\r\n    chazhi = chazhi + 360\r\n    console.log('差值', chazhi);\r\n    let start = startTime.add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n    let end = endTime.add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n    console.log(start, end);\r\n    let unix = `{\">\": ${moment(start).format('X')}, \"<\": ${moment(end).format('X')}}`\r\n    let uri = encodeURIComponent(unix)\r\n    console.log('-----------', unix, uri);\r\n    storage.unixToURI = uri\r\n    let selectTime = {\r\n      startTime: saveSart,\r\n      endTime: saveEnd,\r\n    }\r\n    console.log('最终的选择时间：', selectTime);\r\n    storage.selectTime = JSON.stringify(selectTime)\r\n    storage.selectPatientId = this.state.patientId\r\n    console.log(storage.selectTime, JSON.parse(storage.selectTime), storage.selectPatientId);\r\n    this.props.history.push('EzyVetSelectExam')\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"ezyVetSelectTime\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push('/ezyVetLogin')}\r\n        />\r\n        <div className=\"text\">\r\n          Please select the scope of <br /> search for medical records\r\n        </div>\r\n\r\n        <div className=\"patirntID\">\r\n          <p style={{ width: '80px' }}>Patient ID:</p>\r\n          <Input\r\n            style={{ outline: 'medium' }}\r\n            value={this.state.patientId}\r\n            // bordered={false}\r\n            onChange={(item) => {\r\n              console.log(item);\r\n              this.setState({\r\n                patientId: item.target.value\r\n              })\r\n            }}\r\n\r\n          />\r\n\r\n        </div>\r\n\r\n        <div className=\"time\">\r\n          <Space direction=\"vertical\" size={12}>\r\n            <RangePicker\r\n              value={[this.state.startTime, this.state.endTime]}\r\n              showTime\r\n              ranges={{\r\n                Today: [moment(moment().format(\"YYYY-MM-DD\")), moment(moment().endOf('day'))],\r\n              }}\r\n              onChange={(dates, dateStrings) => {\r\n                // console.log('From: ', dates[0], ', to: ', dates[1]);\r\n                // console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\r\n                console.log('我是第一个', dates, dateStrings);\r\n                // this.setState({\r\n                //   startTime: dateStrings[0],\r\n                //   endTime: dateStrings[1]\r\n                // })\r\n              }}\r\n              onCalendarChange={(dates, dateStrings) => {\r\n                console.log('我是第二个', dates, dateStrings);\r\n                this.setState({\r\n                  startTime: moment(dateStrings[0]),\r\n                  endTime: moment(dateStrings[1])\r\n                })\r\n              }}\r\n            />\r\n          </Space>\r\n        </div>\r\n\r\n        <div className=\"btn\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._next}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx",["271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\heard\\Heard.js",["287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Menu,\r\n  Popover,\r\n  Button,\r\n  Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { SyncOutlined, createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport moment from 'moment'\r\nimport MyModal from './../myModal/MyModal'\r\nimport { connect } from 'react-redux'\r\nimport { setMenuNum } from '../../store/actions';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './heard.less'\r\nimport help from './../../assets/images/help.png'\r\nimport message from './../../assets/images/message.png'\r\nimport triangle from './../../assets/img/triangle.png'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\nimport dog from './../../assets/images/reddog.png'\r\nimport cat from './../../assets/images/redcat.png'\r\nimport other from './../../assets/images/redother.png'\r\nimport menu from './../../assets/img/menu.png'\r\nimport heardLeft from './../../assets/img/heardLeft.png'\r\nimport blueSearchPng from './../../assets/img/blueSearch.png'\r\nimport close from './../../assets/img/close.png'\r\nimport MinClose from '../../utils/minClose/MinClose';\r\nimport jinggao from './../../assets/img/jinggao.png'\r\nimport redclose from './../../assets/img/redclose.png'\r\n\r\nimport rMin_red from './../../assets/img/min-red.png'\r\nimport rClose_red from './../../assets/img/close-red.png'\r\n\r\nimport rMin_white from './../../assets/img/min-white.png'\r\nimport rClose_white from './../../assets/img/close-white.png'\r\nimport mellaLogo from './../../assets/images/mellaLogo.png'\r\nimport { version, updateTime } from './../appversion'\r\nimport { fetchRequest4 } from '../FetchUtil4';\r\nimport Button1 from '../button/Button';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\n\r\nconst allPetList = electronStore.get('doctorExam')\r\nlet storage = window.localStorage\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\nlet mouseoutTimer = null\r\nlet matchingTimer = null\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst Heard = ({\r\n  onReturn,\r\n  onSearch,\r\n  menu1Click,\r\n  menu2Click,\r\n  menu3Click,\r\n  menu4Click,\r\n  menu5Click,\r\n  menu6Click,\r\n  menu7Click,\r\n  menu8Click,\r\n  menu9Click,\r\n  blueSearch,\r\n  setMenuNum\r\n}) => {\r\n  const [minbgc, setMinbgc] = useState('')        //最小化的背景颜色\r\n  const [closebgc, setClosebgc] = useState('')    //关闭按钮的背景色\r\n  const [rMin, setRMin] = useState(rMin_red)      //最小化的图标\r\n  const [rClose, setRClose] = useState(rClose_red) //关闭按钮图标\r\n  const [value, setValue] = useState('')          //搜索框输入的内容\r\n  const [visible, setVisible] = useState(false)   //搜索框下面的搜索model\r\n  const [loading, setLoading] = useState(false)     //搜索宠物过程中的加载图标\r\n  const [petList, setPetList] = useState([])        //搜索到的宠物列表\r\n  const [menuVisible, setMenuVisible] = useState(false)//菜单图标下面的菜单内容图标\r\n  const [menuMouseOverIndex, setMenuMouseOverIndex] = useState('')//用来定位鼠标滑到哪个菜单选项\r\n\r\n\r\n  const [modalvisible, setModalVisible] = useState(false)       //关于的弹窗\r\n  const [modalVis, setModalVis] = useState(false)               //RFID搜索是否有宠物的弹窗\r\n  const [isNotFound, setIsNotFound] = useState(false)           //是否找到RFID对应的图标\r\n  const [deviceModel, setDeviceModel] = useState(false)         //我的设备弹窗\r\n\r\n  const [noUSB, setNoUSB] = useState(false)                 //没有底座设备\r\n  const [searchMac, setSearchMac] = useState(false)         //是否展示狗牌mac搜索图标下面的Modal框\r\n  const [bluDevice, setBluDevice] = useState([])            //搜索到的狗牌设备mac地址\r\n\r\n  const [isShowBlePetList, setIsShowBlePetList] = useState(false)  //是否展示狗牌对应宠物\r\n  const [isMatchPet, setIsMatchPet] = useState(false)      //正在匹配狗牌对应的宠物\r\n  const [macMatchPetList, setMacMatchPetList] = useState([])\r\n  const [updateStatus, setUpdateStatus] = useState('init')\r\n  const [lastVersion, setLastVersion] = useState(version)\r\n  const [downLoadNum, setDownLoadingNum] = useState(0)\r\n  const [selectDeviceMac, setSelectDeviceMac] = useState('')\r\n\r\n  //这里是为了模拟数据所做出来的,后期要改成接口\r\n  const testPetList = [\r\n\r\n    { macId: \"E0:7C:62:30:08:08\", petName: 'Mella', petId: \"b9de0868-9202-4fc9-9f1b-325220ceeccf\" },\r\n    { macId: \"E0:7C:62:03:75:32\", petName: 'Possum', petId: \"e4b11580-1277-4b10-bd64-46b097f6f882\" },\r\n    { macId: \"E0:7D:EA:A8:8D:7E\", petName: 'Charlie', petId: \"b4e7a185-1c7e-4885-ab95-4a7d2d2ada83\" },\r\n    { macId: \"E0:7C:62:32:76:8C\", petName: 'Noah', petId: \"01b34bf2-47e6-4036-884f-47299447cb6a\" },\r\n\r\n    { macId: \"84:C2:E4:03:C3:06\", petName: \"Whitey\", petId: \"f713a238-f5df-4c85-8c4f-5766b0770c07\" },\r\n  ]\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('mac列表为空,初始化');\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    setBluDevice([])\r\n    return () => {\r\n      matchingTimer && clearTimeout(matchingTimer)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    ipcRenderer.on('uploadMessage', uploadMessage)\r\n    return () => {\r\n      ipcRenderer.removeListener('uploadMessage', uploadMessage)\r\n    }\r\n  }, [])\r\n\r\n  const uploadMessage = (e, data) => {\r\n    switch (data.payload.status) {\r\n      case -1:\r\n        console.log('查询异常');\r\n        break;\r\n\r\n      case 0:\r\n        console.log('正在检查应用程序更新');\r\n        setUpdateStatus('check')\r\n        break;\r\n\r\n      case 2:\r\n        console.log('正在检查应用程序更新');\r\n        setUpdateStatus('lastVersion')\r\n        break;\r\n\r\n      case 1:\r\n        console.log('检测到新版本');\r\n        let version = data.output.version\r\n        setLastVersion(version)\r\n\r\n        setUpdateStatus('newVersion')\r\n        break;\r\n\r\n      case 3:\r\n        console.log('下载新版成功');\r\n      case 4:\r\n        console.log('取消背景下载');\r\n      case 5:\r\n        console.log('取消安装');\r\n        setUpdateStatus('init')\r\n        break;\r\n      case 6:\r\n        console.log('正在下载');\r\n        setUpdateStatus('downLoading')\r\n        setDownLoadingNum((data.output.percent / 100).toFixed(1))\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (blueSearch) {\r\n      console.log('---渲染时执行----??????');\r\n      ipcRenderer.on('sned', _send)\r\n      ipcRenderer.on('noUSB', _noUSB)\r\n      return () => {\r\n        console.log('----卸载----?????????/');\r\n        ipcRenderer.removeListener('sned', _send)\r\n        ipcRenderer.removeListener('noUSB', _noUSB)\r\n      }\r\n    }\r\n\r\n  }, [])\r\n\r\n  const _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      setNoUSB(false)\r\n    } else {\r\n      if (!noUSB) {\r\n        setNoUSB(true)\r\n      }\r\n    }\r\n  }\r\n  const _send = (event, data) => {\r\n\r\n    command(data)()\r\n  }\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  const command = (newArr) => {\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    console.log(dataArr1);\r\n    const instruction = [255]\r\n    const commandArr = {\r\n\r\n      255: () => {\r\n        // console.log(dataArr1);\r\n        // console.log(bluDevice);\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n\r\n        let MAC = ''\r\n        let bluData = []\r\n        let UUID = ''\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5])\r\n          }\r\n          // console.log('循环得到的数据', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              break;\r\n            case 255:\r\n              break;\r\n            case 3: break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              let str = itemData[0]\r\n              for (let i = 1; i < itemData.length; i++) {\r\n                str += `:${itemData[i]}`\r\n              }\r\n              MAC = str.toUpperCase()\r\n\r\n              break;\r\n            case 7:\r\n              console.log('uuid');\r\n              let uuid = ''\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                uuid += `${itemData[i]}`\r\n              }\r\n              UUID = uuid\r\n              break\r\n            default: return;\r\n          }\r\n          dataIndex = itemLength\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\r\n\r\n          // console.log(itemLength, itemLength < length && (itemLength + 3 <= frameLength));\r\n        }\r\n        console.log('----mac', MAC, '-----uuid', UUID);\r\n        if (UUID === 'd7895ab1acc74de3b9919e825c24c809') {\r\n          // console.log('uuid相等', bluDevice, bluDevice.indexOf(MAC) === -1,);\r\n          if (bluDevice.indexOf(MAC) === -1) {\r\n            let dataArr = [].concat(bluDevice)\r\n            dataArr.push(MAC)\r\n            setBluDevice(dataArr)\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  let history = useHistory();\r\n  //最小化，关闭的\r\n  const MINCOLOSE = {\r\n    minMouseEnter: () => {\r\n      setMinbgc('rgba(70, 70, 70, 0.5)')\r\n      setRMin(rMin_white)\r\n    },\r\n    minMouseLeave: () => {\r\n      setMinbgc('')\r\n      setRMin(rMin_red)\r\n    },\r\n    minClock: () => {\r\n      setMinbgc('')\r\n      setRMin(rMin_red)\r\n      let ipcRenderer = window.electron.ipcRenderer\r\n      ipcRenderer.send('window-min')\r\n\r\n    },\r\n    closeMouseEnter: () => {\r\n      setClosebgc('rgba(232,17,35)')\r\n      setRClose(rClose_white)\r\n    },\r\n    closeMouseLeave: () => {\r\n      setClosebgc('')\r\n      setRClose(rClose_red)\r\n    },\r\n    closeClock: () => {\r\n      let ipcRenderer = window.electron.ipcRenderer\r\n      ipcRenderer.send('window-close')\r\n    },\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //搜索框内容\r\n  const searchPetBody = () => {\r\n\r\n\r\n    if (loading) {\r\n      //加载中\r\n      return (\r\n        <div className='searchPetLoading' style={{ padding: `${20}px 0` }}>\r\n          <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n            <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n          </div>\r\n          <p style={{ color: '#e1206d', marginTop: px(5) }}>\r\n            loading...\r\n          </p>\r\n        </div>\r\n      )\r\n    } else {\r\n      // console.log('-----展示', petList.length);\r\n      if (petList.length > 0) {\r\n        //找到了宠物，展示出来\r\n\r\n        // let petList = electronStore.get('doctorExam')\r\n        // console.log(petList);\r\n\r\n        let option = petList.map((item, index) => {\r\n          let { speciesId, url } = item\r\n\r\n          let images = `url(${url}?download=0&width=150)`\r\n          if (!url) {\r\n            switch (speciesId) {\r\n              case 1: images = `url(${cat})`\r\n\r\n                break;\r\n              case 2: images = `url(${dog})`\r\n                break\r\n              default: images = `url(${other})`\r\n                break;\r\n            }\r\n          }\r\n          return (\r\n            <li\r\n              key={`${index}`}\r\n              style={{ margin: `${px(20)}px 0` }}\r\n              onClick={() => {\r\n                // console.log(item);\r\n                setValue('')\r\n                setVisible(false)\r\n                setPetList([])\r\n\r\n                onSearch(item)\r\n              }}\r\n            >\r\n              <div className='item' style={{ paddingLeft: px(40) }}>\r\n                <div\r\n                  className='img'\r\n                  style={{\r\n                    width: px(50),\r\n                    height: px(50),\r\n                    marginRight: px(40),\r\n                    borderRadius: px(60),\r\n                    backgroundImage: images,\r\n                    // backgroundColor: 'hotpink',\r\n\r\n                  }}>\r\n                  {/* <img src={images} style={{ width: px(40) }} /> */}\r\n                </div>\r\n\r\n                <div className='petInfo'>\r\n                  <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.petName}</p>\r\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\r\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\r\n                </div>\r\n              </div>\r\n            </li >\r\n          )\r\n\r\n        })\r\n        let liStyle = { backgroundColor: '#fff', }\r\n        if (petList.length > 4) {\r\n          liStyle = { height: px(500), overflowY: 'auto' }\r\n        }\r\n\r\n\r\n        return (\r\n          <div className='searchPetList'>\r\n            <ul style={liStyle}>\r\n              {option}\r\n            </ul>\r\n          </div>\r\n        )\r\n      } else {\r\n        //没有发现这个宠物\r\n        return (\r\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\r\n\r\n            <p style={{ width: '80%', fontSize: px(18) }}>\r\n              Pet not found. Would you like\r\n              to add a new patient?\r\n            </p>\r\n\r\n            <div\r\n              className='searchPetBtn'\r\n              style={{ fontSize: px(18) }}\r\n              onClick={() => {\r\n                history.push('/pet/doctorAddPet')\r\n              }}\r\n            >\r\n              <p style={{ padding: `${px(8)}px 0` }}>+ New Patient</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const inputChange = (text) => {\r\n\r\n    function isNumber (val) {\r\n      var regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\r\n      var regNeg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\r\n      if (regPos.test(val) || regNeg.test(val)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    //去除前后空格\r\n    let search = text.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\")\r\n    setValue(search)\r\n    if (search.length > 0) {\r\n      setVisible(true)\r\n      setLoading(true)\r\n\r\n      //搜索分成两种，一种是通过手输入数据搜索，一种是通过RFID扫描过后搜索\r\n\r\n      if (search.length === 15 && isNumber(search)) {\r\n        //这是RFID扫描后的搜索\r\n        fetchRequest4(`/pet/getPetInfoByRFID/${search}/${storage.lastOrganization}`, 'GET')\r\n          .then(res => {\r\n            console.log('----RFID搜索结果', res);\r\n\r\n            if (res.flag === true && res.data) {\r\n              let { createTime, patientId, petName, firstName, lastName, url, speciesId, breedName, gender, birthday, petId, rfid, weight } = res.data\r\n              patientId = patientId || 'unknown'\r\n              petName = petName || 'unknown'\r\n              breedName = breedName || 'unknown'\r\n              weight = weight || 'unknown'\r\n              let owner = ''\r\n              if (!firstName) {\r\n                firstName = ''\r\n              }\r\n              if (!lastName) {\r\n                lastName = ''\r\n              }\r\n              if (lastName === '' && firstName === '') {\r\n                owner = 'unknown'\r\n              } else {\r\n                owner = `${lastName} ${firstName}`\r\n              }\r\n              createTime = moment(createTime).format('X')\r\n              let petGender = ''\r\n              switch (`${gender}`) {\r\n                case '1': petGender = 'F'\r\n\r\n                  break;\r\n                case '0': petGender = \"M\"\r\n                  break;\r\n                default: petGender = 'unknown'\r\n                  break;\r\n              }\r\n              let petAge = 'unknown'\r\n              if (birthday) {\r\n                petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n                // console.log('petAge', petAge);\r\n              }\r\n              let json = {\r\n                insertedAt: createTime,\r\n                patientId,\r\n                petName,\r\n                owner,\r\n                breed: breedName,\r\n                gender: petGender,\r\n                age: petAge,\r\n                petId,\r\n                id: 0,\r\n                weight,\r\n                rfid,\r\n                url,\r\n                speciesId\r\n              }\r\n              let searchData = []\r\n              searchData.push(json)\r\n              setLoading(false)\r\n              setPetList(searchData)\r\n\r\n\r\n\r\n            } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\r\n              console.log('找到了但是不是在这个组织下');\r\n              setLoading(false)\r\n              setModalVis(true)\r\n              setIsNotFound(false)\r\n              setValue('')\r\n              setVisible(false)\r\n\r\n\r\n              // this.setState({\r\n              //   loading: false,\r\n              //   modalVis: true,\r\n              //   isNotFound: false,\r\n              //   heardSearchText: ''\r\n              // })\r\n            } else {\r\n              console.log('没有找到');\r\n              setLoading(false)\r\n              setModalVis(true)\r\n              setIsNotFound(true)\r\n              setValue('')\r\n              setVisible(false)\r\n\r\n\r\n              // this.setState({\r\n              //   loading: false,\r\n              //   modalVis: true,\r\n              //   isNotFound: true,\r\n              //   heardSearchText: ''\r\n              // })\r\n            }\r\n          })\r\n          .catch(err => {\r\n\r\n            console.log('抛出异常:', err);\r\n            setLoading(false)\r\n          })\r\n        return\r\n      }\r\n\r\n      /**\r\n       * 使用indexof方法实现模糊查询\r\n       *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n       *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n       *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n       *  \r\n       * list         原数组\r\n       * keyWord      查询关键词\r\n       * searchData   查询的结果\r\n       * \r\n       * toLowerCase（）方法：将字符串统一转成小写\r\n       * toUpperCase（）方法：将字符串统一转成大写\r\n       * \r\n       */\r\n      // let list = allPetList \r\n      let list = electronStore.get('doctorExam') || []\r\n\r\n      let searchData = []\r\n      let keyWord = search\r\n      for (let i = 0; i < list.length; i++) {\r\n        let petName = list[i].petName.toLowerCase() || ''\r\n        let patientId = list[i].patientId.toLowerCase() || ''\r\n        let rfid = list[i].rfid || ''\r\n        if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n          || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n          || `${rfid}`.indexOf(keyWord) !== -1\r\n        ) {\r\n          searchData.push(list[i])\r\n        }\r\n      }\r\n      // console.log('找到的宠物', searchData);\r\n      console.log('---搜索词：', search, '---搜索数组：', list, '----搜索结果：', searchData);\r\n      setLoading(false)\r\n      setPetList(searchData)\r\n\r\n    } else {\r\n      setVisible(false)\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  //左侧菜单栏\r\n  const menuList = () => {\r\n    let menulistArr = [\r\n      { name: 'Home', index: '1' },\r\n      { name: 'All Patients', index: '2' },\r\n      { name: 'Scheduled Patients', index: '3' },\r\n      { name: 'My Account', index: '4' },\r\n      { name: 'Settings', index: '5' },\r\n      { name: 'Enter Clinical Study Mode', index: '6' },\r\n      { name: `Billing & Subscriptions`, index: '7' },\r\n      { name: 'About Mella', index: '8' },\r\n      { name: 'Log Out', index: '9' },\r\n\r\n    ]\r\n    let menuOption = menulistArr.map((item, index) => {\r\n\r\n      let pColor = menuMouseOverIndex === item.index ? '#e1206d' : '#1a1a1a'\r\n      return (\r\n        <li\r\n          key={item.index}\r\n          style={{ padding: `${px(15)}px ${px(20)}px` }}\r\n          onClick={() => {\r\n            menulistClick(item)\r\n\r\n          }}\r\n          onMouseOver={(e) => {\r\n            setMenuMouseOverIndex(item.index)\r\n            e.stopPropagation();\r\n            e.nativeEvent.stopImmediatePropagation();\r\n            menuMouseOver()\r\n          }}\r\n          onMouseOut={(e) => {\r\n            setMenuMouseOverIndex('')\r\n            e.stopPropagation();\r\n            e.nativeEvent.stopImmediatePropagation();\r\n            menuMouseOut()\r\n          }}\r\n        >\r\n          <div className='item'>\r\n            <p style={{ color: pColor }}>{item.name}</p>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    return (\r\n      <ul>\r\n        {menuOption}\r\n      </ul>\r\n    )\r\n\r\n\r\n  }\r\n  const menulistClick = e => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    setMenuVisible(false)\r\n    setMenuMouseOverIndex('')\r\n    console.log('click ', e);\r\n\r\n    switch (e.index) {\r\n      case \"1\":\r\n        history.push('/MainBody')\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"2\":\r\n        history.push('/MainBody')\r\n        console.log('全部的宠物');\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"3\":\r\n        history.push('/MainBody')\r\n        console.log('预约宠物');\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"4\":\r\n        console.log('我的账号');\r\n        break;\r\n      case \"5\":\r\n        //跳转到设置\r\n        // menu5Click()\r\n        history.push('/menuOptions/settings');\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"6\":\r\n        history.push('/MainBody')\r\n        console.log('临床测试');\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"7\":\r\n        console.log('billing');\r\n        break;\r\n\r\n      case \"8\":\r\n        setModalVisible(true)\r\n        console.log('关于');\r\n        break;\r\n      case \"9\":\r\n        console.log('退出登录');\r\n        storage.userId = ''\r\n        storage.roleId = ''\r\n        storage.userWorkplace = ''\r\n        storage.lastOrganization = ''\r\n        storage.lastWorkplaceId = ''\r\n        storage.connectionKey = ''\r\n        storage.isClinical = 'false'\r\n        setMenuNum('1')\r\n        history.push('/')\r\n        break;\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  const menuMouseOut = () => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    mouseoutTimer = setTimeout(() => {\r\n\r\n      setMenuVisible(false)\r\n      mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    }, 1000);\r\n\r\n\r\n  }\r\n  const menuMouseOver = () => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    setMenuVisible(true)\r\n  }\r\n  const updatePage = () => {\r\n    switch (updateStatus) {\r\n      case 'init':\r\n        return (\r\n          <div className='updateBtn' style={{ height: px(40), }}\r\n            onClick={() => {\r\n              setDownLoadingNum(0)\r\n              setUpdateStatus('check')\r\n\r\n              ipcRenderer.send('clickUpdateBtn')\r\n            }}\r\n          >\r\n            Check for Updates\r\n          </div>\r\n        )\r\n      case 'check':\r\n        return (\r\n          <div className='updateLoading flex' >\r\n            <div className=\"loadIcon1\" >\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginRight: px(20) }} />\r\n            </div>\r\n            <p style={{ color: '#e1206d', }}>Checking for updates</p>\r\n          </div>\r\n        )\r\n      case 'lastVersion':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            already the latest version\r\n          </div>\r\n        )\r\n\r\n      case 'newVersion':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            {`Found new version V${lastVersion}`}\r\n\r\n          </div>\r\n        )\r\n      case 'downLoading':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            {`Download progress: ${downLoadNum}%`}\r\n\r\n          </div>\r\n        )\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  //关于界面\r\n  const modal = () => {\r\n    return (\r\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\r\n        <div className='writeBox' style={{ borderRadius: px(25) }} >\r\n          <div className='modalHeadr'>\r\n            <div className='close'>\r\n              <div className='imgBox'\r\n                style={{ padding: `0 ${px(30)}px` }}\r\n                onClick={() => {\r\n                  setModalVisible(false)\r\n                  setUpdateStatus('init')\r\n                }}\r\n              >\r\n                <img src={close} style={{ width: px(23), }} />\r\n              </div>\r\n\r\n            </div>\r\n            <div className='heaerCenter'>\r\n              <div className='heaerCenterL'>\r\n                <img src={mellaLogo} style={{ width: '80%' }} />\r\n\r\n              </div>\r\n              <div className='heaerCenterR'>\r\n                <h1 style={{ fontSize: px(45), marginBottom: px(10) }}>About the System</h1>\r\n                <div className='version'>\r\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Version</div>\r\n                  <div className='versionR' style={{ fontSize: px(24) }}>{version}</div>\r\n                </div>\r\n                <div className='version'>\r\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Last Checked</div>\r\n                  <div className='versionR' style={{ fontSize: px(24) }}>{updateTime}</div>\r\n                </div>\r\n\r\n                <div className='check' style={{ marginTop: px(20) }}>\r\n                  {updatePage()}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className='modalfoot'>\r\n            <div className='about' style={{ marginTop: px(40), fontSize: px(18) }}>\r\n              Nanjing Jiubian Technology Co., Ltd. was founded in 2019, located in Nanjing Yuhuatai Software Valley Branch City, the company brings together medical sensors, mobile Internet and other industry's top professionals, business areas covering artificial intelligence, smart medical, pet health, sleep monitoring, etc., is a design, research and development, production, sales, service in one of the high-tech companies. The nine-sided science and technology to \"the number of heavens and earths, starting from one, finally nine\" as the cultural concept, adhering to the essence of Chinese artisans, with an international vision, always standing in the forefront of bio-intelligent medical monitoring technology.\r\n            </div>\r\n\r\n            <div className='aLable'>\r\n              <a href=\"#\"\r\n                style={{ fontSize: px(18), marginRight: px(50) }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >Terms and Agreements</a>\r\n              <a\r\n                href=\"#\"\r\n                style={{ fontSize: px(18), }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >Privacy Policy</a>\r\n            </div>\r\n\r\n            <div className='foot' style={{ marginBottom: px(40) }}>© 2021 Mella Pet Care All RIghts Reserved</div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //设备列表界面\r\n  const devices = () => {\r\n\r\n    let userId = storage.userId\r\n    // electronStore.delete(`${userId}-deviceList`)\r\n    let deviceList = electronStore.get(`${userId}-deviceList`)\r\n    console.log('---', deviceList);\r\n    if (!deviceList) {\r\n      let str = `${getRamNumber()}`\r\n      for (let i = 0; i < 5; i++) {\r\n        str += `:${getRamNumber()}`\r\n      }\r\n      console.log('随机生成的mac地址:', str);\r\n      deviceList = [{ name: 'MellaPro', deviceType: 'mellaPro', macId: str }]\r\n      electronStore.set(`${userId}-deviceList`, deviceList)\r\n    }\r\n\r\n\r\n    function getRamNumber () {\r\n      var result = '';\r\n      for (var i = 0; i < 2; i++) {\r\n        result += Math.floor(Math.random() * 16).toString(16);//获取0-15并通过toString转16进制\r\n      }\r\n      //默认字母小写，手动转大写\r\n      return result.toLowerCase();//另toLowerCase()转小写\r\n    }\r\n\r\n\r\n    // deviceList = [\r\n    //   // { name: 'Add Device', deviceType: 'add', macId: '0' },\r\n    //   { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //   { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:51:66' },\r\n    //   { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:35:66' },\r\n    //   { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:24:33:44:55:66' },\r\n    //   { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:25:66' },\r\n    //   { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:56:66' },\r\n    // ]\r\n\r\n    let options = deviceList.map((item, index) => {\r\n      return <li\r\n        className='flex'\r\n        key={`${index}`}\r\n        style={{ marginBottom: px(15), marginTop: px(5), }}\r\n        onClick={() => {\r\n          console.log(item.macId);\r\n          setSelectDeviceMac(item.macId)\r\n        }}\r\n      >\r\n        <div className='liLeft' style={{ fontSize: px(16) }}>{item.name}</div>\r\n        <div className='liCenter' style={{ fontSize: px(16) }}>{item.macId}</div>\r\n        <div className='liRight'>\r\n          <div className='circle flex' style={{ width: px(18), height: px(18) }}>\r\n            {selectDeviceMac === item.macId && <div className='redCircle' />}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    })\r\n\r\n    return (\r\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\r\n        <div className='writeBox devices' style={{ borderRadius: px(25), width: px(400) }} >\r\n          <div className='deviceHeadr'>\r\n            <div className='close'>\r\n              <div className='imgBox'\r\n                style={{ padding: `0 ${px(30)}px` }}\r\n                onClick={() => setDeviceModel(false)}\r\n              >\r\n                <img src={close} style={{ width: px(23), }} />\r\n              </div>\r\n\r\n            </div>\r\n            <div className='logo flex'>\r\n              <img src={mellaLogo} style={{ width: px(60) }} />\r\n              <div style={{ fontSize: px(22), marginTop: px(30) }}>Devices</div>\r\n              <div className='bodyText' style={{ fontSize: px(18), marginTop: px(40) }}>Select the device you would<br />\r\n                like to use or add a new device.</div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className='deviceCenter'>\r\n            <ul>\r\n              {options}\r\n            </ul>\r\n          </div>\r\n          <div className='deviceFooter flex' style={{ borderBottomLeftRadius: px(25), borderBottomRightRadius: px(25) }}>\r\n            <div className='btn' style={{ height: px(40) }}\r\n              onMouseDown={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[0].style.opacity = \"0.5\"\r\n              }}\r\n              onMouseUp={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[0].style.opacity = \"1\"\r\n              }}\r\n              onClick={() => {\r\n                setDeviceModel(false)\r\n                history.push('/menuOptions/AddDevice');\r\n\r\n              }}\r\n\r\n            >\r\n              <p className='btnText' style={{ fontSize: px(18) }}>New Device</p>\r\n            </div>\r\n            <div className='btn' style={{ height: px(40) }}\r\n\r\n              onMouseDown={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[1].style.opacity = \"0.5\"\r\n              }}\r\n              onMouseUp={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[1].style.opacity = \"1\"\r\n              }}\r\n              onClick={() => {\r\n                electronStore.set(`${storage.userId}-selectDevice`, selectDeviceMac)\r\n                setDeviceModel(false)\r\n              }}\r\n            >\r\n              <p className='btnText' style={{ fontSize: px(18) }}>Connect</p>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //点击蓝牙搜索图标\r\n  const blueClick = () => {\r\n    console.log('点击了蓝牙图标');\r\n    setIsShowBlePetList(false)\r\n    setSearchMac(true)\r\n\r\n\r\n  }\r\n  //点击取消链接\r\n  const cencleClick = (e) => {\r\n    console.log('mac列表为空,点击取消');\r\n    setBluDevice([])\r\n    setSearchMac(false)\r\n    setIsShowBlePetList(false)\r\n    setIsMatchPet(false)\r\n    setMacMatchPetList([])\r\n    if (e) {\r\n      e.preventDefault()\r\n    }\r\n    matchingTimer && clearTimeout(matchingTimer)\r\n\r\n\r\n  }\r\n  //搜索狗牌的蓝牙\r\n  const blusearchBody = () => {\r\n    console.log('搜索狗牌的蓝牙', searchMac, bluDevice);\r\n    if (isShowBlePetList) {\r\n      if (isMatchPet) {\r\n        return (\r\n          <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\r\n            <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n            </div>\r\n            <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>matching...</p>\r\n\r\n            <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\r\n              onClick={cencleClick}\r\n            >Cencle</a>\r\n          </div>\r\n        )\r\n      } else {\r\n        if (macMatchPetList.length > 0) {\r\n\r\n          let option = macMatchPetList.map((item, index) => {\r\n            let { speciesId, url } = item\r\n\r\n            let images = `url(${url}?download=0&width=150)`\r\n            if (!url) {\r\n              switch (speciesId) {\r\n                case 1: images = `url(${cat})`\r\n                  break;\r\n                case 2: images = `url(${dog})`\r\n                  break\r\n                default: images = `url(${other})`\r\n                  break;\r\n              }\r\n            }\r\n            return (\r\n              <li\r\n                key={`${index}`}\r\n                style={{ margin: `${px(20)}px 0` }}\r\n                onClick={() => {\r\n                  cencleClick()\r\n                  onSearch(item)\r\n                }}\r\n              >\r\n                <div className='item' style={{ paddingLeft: px(40) }}>\r\n                  <div\r\n                    className='img'\r\n                    style={{\r\n                      width: px(50),\r\n                      height: px(50),\r\n                      marginRight: px(40),\r\n                      borderRadius: px(60),\r\n                      backgroundImage: images,\r\n                    }}>\r\n                    {/* <img src={images} style={{ width: px(40) }} /> */}\r\n                  </div>\r\n\r\n                  <div className='petInfo'>\r\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20), textAlign: 'start' }}>{item.petName}</p>\r\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\r\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\r\n                  </div>\r\n                </div>\r\n              </li >\r\n            )\r\n\r\n          })\r\n          let liStyle = { backgroundColor: '#fff', }\r\n          if (petList.length > 4) {\r\n            liStyle = { height: px(500), overflowY: 'auto' }\r\n          }\r\n\r\n\r\n          return (\r\n            <div className='searchPetList flex' >\r\n              <ul style={liStyle}>\r\n                {option}\r\n              </ul>\r\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\r\n                onClick={cencleClick}\r\n              >Cencle</a>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    } else {\r\n      if (noUSB) {\r\n        return (\r\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\r\n\r\n            <p style={{ width: '80%', fontSize: px(18) }}>\r\n              Please insert address and scan\r\n            </p>\r\n\r\n            <a href=\"#\" style={{ color: '#e1206d' }}\r\n              onClick={cencleClick}\r\n            >Cencle</a>\r\n          </div>\r\n        )\r\n      } else {\r\n        if (bluDevice.length > 0) {\r\n          let option = bluDevice.map((item, index) => {\r\n            return (\r\n              <li\r\n                key={`${index}`}\r\n                style={{ margin: `${px(20)}px 0` }}\r\n                onClick={() => {\r\n                  console.log('mac列表为空,点击列表内容');\r\n                  setBluDevice([])\r\n                  // setSearchMac(false)\r\n                  setIsShowBlePetList(true)\r\n                  setIsMatchPet(true)\r\n                  matchingTimer && clearTimeout(matchingTimer)\r\n                  matchingTimer = setTimeout(() => {\r\n                    let haveFlog = false, index = -1\r\n                    for (let i = 0; i < testPetList.length; i++) {\r\n                      if (testPetList[i].macId === item) {\r\n                        haveFlog = true\r\n                        index = i\r\n                        break;\r\n                      }\r\n                    }\r\n                    if (haveFlog) {\r\n                      if (storage.lastOrganization === '1') {\r\n                        matchPet(testPetList[index].petId)\r\n                      } else {\r\n                        setModalVis(true)\r\n                        setIsNotFound(false)\r\n                        cencleClick()\r\n\r\n                      }\r\n                    } else {\r\n                      setModalVis(true)\r\n                      setIsNotFound(true)\r\n                      cencleClick()\r\n                    }\r\n\r\n\r\n                    setIsMatchPet(false)\r\n                    matchingTimer && clearTimeout(matchingTimer)\r\n                  }, 2000);\r\n\r\n\r\n                }}\r\n              >\r\n                <div className='item' style={{ paddingLeft: px(40) }}>\r\n                  <div className='petInfo'>\r\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>mac:{item}</p>\r\n                  </div>\r\n                </div>\r\n              </li >\r\n            )\r\n          })\r\n          let liStyle = { backgroundColor: '#fff', }\r\n          if (bluDevice.length > 4) {\r\n            liStyle = { height: px(500), overflowY: 'auto' }\r\n          }\r\n          return (\r\n            <div className='searchPetList' style={{ flexDirection: 'column' }}>\r\n              <ul style={liStyle}>\r\n                {option}\r\n              </ul>\r\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\r\n                onClick={cencleClick}\r\n              >Cencle</a>\r\n            </div>\r\n          )\r\n        } else {\r\n          return (\r\n            <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\r\n              <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n                <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n              </div>\r\n              <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>\r\n                scanning...\r\n              </p>\r\n\r\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\r\n                onClick={cencleClick}\r\n              >Cencle</a>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  const matchPet = (searchValue) => {\r\n    console.log('搜索词:', searchValue);\r\n    let list = electronStore.get('doctorExam')\r\n\r\n    let searchData = []\r\n    let keyWord = searchValue\r\n    for (let i = 0; i < list.length; i++) {\r\n\r\n      let petName = `${list[i].petId}`\r\n      if (keyWord === petName) {\r\n        searchData.push(list[i])\r\n      }\r\n    }\r\n\r\n\r\n    setIsMatchPet(false)\r\n\r\n    setMacMatchPetList(searchData)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"heard\"\r\n      style={{ height: px(50) }}\r\n    >\r\n      <div className='l'>\r\n        <div className='menuF' style={{ marginLeft: px(40), marginRight: px(40) }}>\r\n          <div className=\"menu\"\r\n            onMouseOver={menuMouseOver}\r\n            onMouseOut={menuMouseOut}>\r\n            <img src={menu} style={{ width: px(20), }} />\r\n            {\r\n              menuVisible\r\n                // true\r\n                ? <div\r\n                  className='manuBody'\r\n                  style={{ top: px(20), left: px(-40) }}\r\n                >\r\n                  <div className='triangle'\r\n                    style={{\r\n                      borderLeft: `${px(10)}px solid transparent`,\r\n                      borderRight: `${px(10)}px solid transparent`,\r\n                      borderBottom: `${px(13)}px solid #fff`,\r\n                      left: px(40)\r\n                    }} />\r\n\r\n                  <div className='manuBodyList' style={{ marginTop: px(13) }}>\r\n                    {menuList()}\r\n                  </div>\r\n                </div>\r\n                : null\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {/* <div className=\"return\" style={{ marginLeft: px(10) }}\r\n          onClick={() => { onReturn() }}\r\n        >\r\n          <img src={heardLeft} style={{ height: px(25), }} />\r\n        </div> */}\r\n        <div className=\"search\" style={{ width: px(300) }}>\r\n\r\n          <input\r\n            placeholder=\"Search Pet    &#xe63f;\"\r\n            style={{ fontSize: px(16), paddingLeft: px(20) }}\r\n            value={value}\r\n            onChange={(text) => {\r\n              inputChange(text)\r\n            }}\r\n\r\n            onKeyUp={(e) => {\r\n              // console.log(e);\r\n              if (e.keyCode === 13) {\r\n                console.log('回车,去搜索');\r\n              }\r\n              if (e.keyCode === 27) {\r\n                console.log('清空');\r\n                setValue('')\r\n                setVisible(false)\r\n              }\r\n            }}\r\n\r\n          />\r\n          {\r\n            blueSearch ?\r\n              <div className=\"searchIconFa bluSearch\"\r\n              // style={{ cursor: 'pointer', backgroundColor: 'pink' }}\r\n              // onClick={blueClick}\r\n              >\r\n                <div onClick={blueClick} >\r\n                  {/* <img src={blueSearchPng} style={{ width: '50%' }} /> */}\r\n                  <span className=\" iconfont icon-sousuo searchIcon\"\r\n                    style={{ fontSize: px(25) }}\r\n                  />\r\n                </div>\r\n\r\n                {\r\n                  searchMac ?\r\n                    // true ?\r\n                    <div className='searchPet flex' style={{ width: px(400), }}>\r\n                      <div className='triangle'\r\n                        style={{\r\n                          borderLeft: `${px(20)}px solid transparent`,\r\n                          borderRight: `${px(20)}px solid transparent`,\r\n                          borderBottom: `${px(25)}px solid #fff`,\r\n                          // marginLeft: px(30),\r\n                          zIndex: 999,\r\n\r\n                        }} />\r\n\r\n                      <div className='searchPetBody' style={{ width: '100%' }} >\r\n                        {blusearchBody()}\r\n                      </div>\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n              </div>\r\n              : <div className=\"searchIconFa\">\r\n                <span className=\" iconfont icon-sousuo searchIcon\"\r\n                  style={{ fontSize: px(25) }}\r\n                />\r\n              </div>\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {\r\n            visible ?\r\n              // true ?\r\n              <div className='searchPet' style={{ top: px(35), width: px(400), }}>\r\n                <div className='triangle'\r\n                  style={{\r\n                    borderLeft: `${px(20)}px solid transparent`,\r\n                    borderRight: `${px(20)}px solid transparent`,\r\n                    borderBottom: `${px(25)}px solid #fff`,\r\n                    marginLeft: px(30),\r\n                    zIndex: 999,\r\n\r\n                  }} />\r\n\r\n                <div className='searchPetBody' >\r\n                  {searchPetBody()}\r\n                </div>\r\n              </div>\r\n              : null\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </div >\r\n\r\n\r\n      <div className=\"r\"\r\n      >\r\n\r\n\r\n        <div className='heardCenter'>\r\n          <div className=\"message\"\r\n            onClick={() => history.push('/menuOptions/unassigned')}\r\n          >\r\n            <img src={message} alt=\"\" style={{ height: px(25), width: px(25) }} />\r\n          </div>\r\n          <div className=\"help\"\r\n            style={{ margin: `0 ${px(25)}px` }}\r\n            onClick={() => history.push('/menuOptions/help')}\r\n          >\r\n            <img src={help} alt=\"\" style={{ height: px(25) }} />\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"min_close\" >\r\n          <div\r\n            className='min_icon'\r\n            onClick={MINCOLOSE.minClock}\r\n            style={{ backgroundColor: minbgc, height: px(50), width: px(50) }}\r\n            onMouseEnter={MINCOLOSE.minMouseEnter}\r\n            onMouseLeave={MINCOLOSE.minMouseLeave}\r\n          >\r\n            <img src={rMin} alt=\"\" style={{ width: px(20) }} />\r\n          </div>\r\n          <div\r\n            className='min_icon'\r\n            onClick={MINCOLOSE.closeClock}\r\n            style={{ backgroundColor: closebgc, height: px(50), width: px(50) }}\r\n            onMouseEnter={MINCOLOSE.closeMouseEnter}\r\n            onMouseLeave={MINCOLOSE.closeMouseLeave}\r\n          >\r\n            <img src={rClose} alt=\"\" style={{ width: px(20) }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {modalvisible && modal()}\r\n      {deviceModel && devices()}\r\n\r\n      <MyModal\r\n        // visible={true}\r\n        visible={modalVis}\r\n        element={\r\n          <div className='tip' style={{ width: px(420), height: px(480), borderRadius: px(20) }}>\r\n            <div className='close'\r\n              style={{ height: px(60) }}\r\n              onClick={() => setModalVis(false)}\r\n            >\r\n              <div className='flex' style={{ height: px(60), width: px(60), }}>\r\n                <img src={close} alt=\"\" style={{ width: px(20) }} />\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"text\">\r\n              <h1 style={{ fontSize: px(36), marginTop: px(30) }}> {isNotFound ? 'Pet not found!' : 'Pet found!'}</h1>\r\n\r\n            </div>\r\n            <div className='flex' style={{ margin: `${px(20)}px 0` }}>\r\n              {isNotFound ?\r\n                <img src={redclose} width=\"50px\" /> :\r\n                <img src={jinggao} width=\"50px\" />\r\n              }\r\n            </div>\r\n            <div className='textbody' style={{ marginTop: px(30), color: '#000' }}>\r\n              {isNotFound ? <p style={{ fontSize: px(22) }}> This pet is not on your database</p> :\r\n                <p style={{ fontSize: px(22) }}>Pet Identified but does not <br /> belong to your organization.</p>}\r\n            </div>\r\n\r\n\r\n\r\n            <div className='flex' style={{ marginTop: px(30), width: '100%', }}>\r\n\r\n              <div\r\n                className='btn flex'\r\n                style={{ height: px(40) }}\r\n                onClick={() => {\r\n                  setModalVis(false)\r\n                  cencleClick()\r\n                }}\r\n              >\r\n                <p>OK</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n      />\r\n\r\n    </div >\r\n  )\r\n}\r\n\r\nHeard.propTypes = {\r\n  onReturn: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  menu1Click: PropTypes.func,\r\n  menu2Click: PropTypes.func,\r\n  menu3Click: PropTypes.func,\r\n  menu4Click: PropTypes.func,\r\n  menu5Click: PropTypes.func,\r\n  menu6Click: PropTypes.func,\r\n  menu7Click: PropTypes.func,\r\n  menu8Click: PropTypes.func,\r\n  menu9Click: PropTypes.func,\r\n  blueSearch: PropTypes.bool\r\n\r\n}\r\nHeard.defaultProps = {\r\n  onSearch: () => { },\r\n  onReturn: () => { },\r\n  menu1Click: () => { },\r\n  menu2Click: () => { },\r\n  menu3Click: () => { },\r\n  menu4Click: () => { },\r\n  menu5Click: () => { },\r\n  menu6Click: () => { },\r\n  menu7Click: () => { },\r\n  menu8Click: () => { },\r\n  menu9Click: () => { },\r\n  blueSearch: false,\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({\r\n\r\n  }),\r\n  { setMenuNum }\r\n)(Heard)","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil4.js",["319","320","321","322"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["323","324","325","326","327","328"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Menu,\r\n    Popover,\r\n    Button,\r\n    Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport pinyin from 'pinyin';\r\n\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './phoneBook.less'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\n\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\r\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\r\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\r\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\r\n\r\n    useEffect(() => {\r\n        if (confirmSelectBreed !== -1) {\r\n            setSelectBreed(confirmSelectBreed)\r\n        }\r\n    }, [confirmSelectBreed])\r\n\r\n\r\n    console.log('listsDate', phoneList)\r\n\r\n    useEffect(() => {\r\n        // console.log('listsDate', listDate)\r\n        console.log('进来了');\r\n        let test = []\r\n        listDate.map((item, index) => {\r\n            let data = {\r\n                name: item.breedName,\r\n                hidden: false,\r\n                petSpeciesBreedId: item.petSpeciesBreedId\r\n            }\r\n            test.push(data)\r\n        })\r\n        // 暂时静态数据替换\r\n        //获取联系人列表\r\n        console.log('11111111111', test)\r\n        let list = test;\r\n        let sections = [], letterArr = [];\r\n        // console.log('原始的数据:',list)\r\n\r\n        // 右侧字母栏数据处理\r\n        list.map((item, index) => {\r\n            letterArr.push(pinyin(item.name.substring(0, 1), {\r\n                style: pinyin.STYLE_FIRST_LETTER,\r\n            })[0][0].toUpperCase());\r\n\r\n            letterArr = [...new Set(letterArr)].sort();\r\n        });\r\n\r\n        // 分组数据处理\r\n        letterArr.map((item, index) => {\r\n            sections.push({\r\n                title: item,\r\n                data: []\r\n            })\r\n        });\r\n        list.map(item => {\r\n            let listItem = item;\r\n            sections.map(item => {\r\n                // console.log('}}}}}}}}}}}}}}',item)\r\n                let first = listItem.name.substring(0, 1);\r\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\r\n                if (item.title == test) {\r\n                    item.data.push({\r\n                        firstName: first,\r\n                        name: listItem.name,\r\n                        hidden: listItem.hidden,\r\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\r\n                    });\r\n                }\r\n            })\r\n        });\r\n\r\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\r\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\r\n        // console.log('-1----', sections, letterArr);\r\n        setPhoneList(sections)\r\n        setPhoneListCopy(sections)\r\n        setLetterList(letterArr)\r\n        setLetterListCopy(letterArr)\r\n    }, [])\r\n    useEffect(() => {\r\n        // if (searchText) {\r\n        console.log('搜索内容', searchText, letterListCopy);\r\n        if (letterListCopy.length > 0) {\r\n\r\n            let allData = phoneListCopy\r\n            let newArr = []\r\n            let arr = []\r\n            if (searchText.length > 0) {\r\n                allData.map((item, i) => {\r\n                    item.data.map((data, index) => {\r\n                        // console.log(index)\r\n                        let dataName = data.name ? data.name.toUpperCase() : ''\r\n                        let keyData = searchText ? searchText.toUpperCase() : ''\r\n                        if (dataName.search(keyData) !== -1) {\r\n                            newArr.push(data)\r\n                        }\r\n                    })\r\n                    // console.log('一组数据：', newArr)\r\n                    if (newArr.length != 0) {\r\n                        let oneGreep = {\r\n                            title: item.title,\r\n                            data: newArr\r\n                        }\r\n                        //   console.log('一11组数据：', oneGreep)\r\n                        arr.push(oneGreep)\r\n                    }\r\n\r\n                    newArr = []\r\n                })\r\n                //   console.log('--------------------------', arr)\r\n                let letterArr = []\r\n                arr.map((item, index) => {\r\n                    letterArr.push(item.title)\r\n                })\r\n                // newArr = []\r\n                // // console.log('---||-----',newArr)\r\n                setPhoneList(arr)\r\n                setLetterList(letterArr)\r\n            } else {\r\n\r\n                setPhoneList(phoneListCopy)\r\n                setLetterList(letterListCopy)\r\n            }\r\n        }\r\n\r\n\r\n    }, [searchText])\r\n\r\n\r\n\r\n    const _phoneList = () => {\r\n\r\n        let option = phoneList.map((item, index) => {\r\n            let data = item.data\r\n            let option1 = data.map((value, index1) => {\r\n                return (\r\n                    <li\r\n                        key={`option1${index1}`}\r\n                        onClick={() => {\r\n                            // console.log(value.petSpeciesBreedId);\r\n                            setSelectBreed(value.petSpeciesBreedId)\r\n                            selectFun(value)\r\n                        }}>\r\n                        {value.name}\r\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\r\n                    </li>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <div className=\"phoneBody\">\r\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\r\n                    <ul>\r\n                        {option1}\r\n                    </ul>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul>\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const _letterList = () => {\r\n\r\n        let option = letterList.map((item, index) => {\r\n\r\n\r\n            return (\r\n                <li\r\n                    key={`${index}`}\r\n\r\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\r\n                    <a\r\n\r\n                        onClick={() => {\r\n                            litterClick(item)\r\n                        }}\r\n                    >{item}</a>\r\n                </li>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul className=\"letterUL\">\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const litterClick = (anchorName) => {\r\n        // console.log(anchorName);\r\n        if (anchorName) {\r\n            // 找到锚点\r\n            let anchorElement = document.getElementById(anchorName);\r\n            // console.log(anchorElement);\r\n            // 如果对应id的锚点存在，就跳转到锚点\r\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\r\n        }\r\n        // e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"phoneBook\">\r\n            <div className=\"phone\">\r\n                {_phoneList()}\r\n            </div>\r\n            <div className=\"litter\">\r\n                {_letterList()}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n\r\n    listDate: PropTypes.array,\r\n    selectFun: PropTypes.func,\r\n    searchText: PropTypes.string,\r\n    confirmSelectBreed: PropTypes.number\r\n}\r\nPhoneBook.defaultProps = {\r\n    listDate: [],\r\n    selectFun: () => { },\r\n    searchText: '',\r\n    confirmSelectBreed: -1,\r\n}\r\n\r\nexport default PhoneBook","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\index.jsx",["350","351","352","353","354","355"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["356","357","358","359","360","361","362","363","364","365","366"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\App.js",["367","368"],"import React, { Component } from 'react'\r\n\r\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom'\r\n\r\nimport Home from './components/home/Home'\r\nimport Choose from './components/choose/Choose'\r\nimport EzyVetLogin from './components/ezyVetLogin/EzyVetLogin'\r\nimport EzyVetSelectTime from './components/ezyVetSelectTime/EzyVetSelectTime'\r\nimport SelectMella from './components/selectMella/SelectMella'\r\nimport APIkey from './components/apiKey/APIKey'\r\nimport VerifyOrganizationInformation from './components/selectLocation/VerifyOrganizationInformation'\r\nimport EzyVetSelectExam from './components/ezyVetSelectExam/EzyVetSelectExam'\r\nimport DoctorSelectExam from './components/doctorSelectExam/DoctorSelectScheduledExam'\r\n\r\nimport DoctorSelectAllExam from './components/doctorSelectExam/DoctorSelectAllExam'\r\nimport Praviders from './components/praviders/Praviders'\r\nimport SelectExam from \"./components/selectExam/SelectExam\";\r\n\r\nimport Mesasure from \"./components/measure/Mesasure\";\r\nimport NorMalMeasurement from \"./components/measure/NorMalMeasurement\";\r\n\r\nimport MaxMinReturn from './utils/maxminreturn/MaxMinReturn'\r\nimport EditPetInfo from './components/editPetInfo/EditPetInfo'\r\nimport WorkPlace from './components/workPlace/WorkPlace'\r\n\r\nimport DoctorAddPet from './components/doctorAddPet/DoctorAddPet'\r\nimport AddYuding from './components/doctorSelectExam/AddYuding'\r\n//登录部分\r\nimport SignIn from './components/signIn/SignIn'\r\nimport ForgotPassword from './components/signIn/forgotPassword/ForgotPassword'\r\nimport ResetPassword from './components/signIn/resetPassword/ResetPassword'\r\n\r\nimport ScanCodeLogin from './components/signIn/scanCodeLogin/ScanCodeLogin'\r\n\r\n//邮箱注册的整体部分\r\nimport VetPrifile from './components/createAccount/vetProfile/VetPrifile'\r\nimport JoinOrganizationByOption from './components/createAccount/joinOrganizationByOption/JoinOrganizationByOption'\r\nimport FindMyOrganization from './components/createAccount/findMyOrganization/FindMyOrganization'\r\nimport FindMyWorkplace from './components/createAccount/findMyWorkplace/FindMyWorkplace'\r\nimport IsHavePMS from './components/createAccount/ishavePMS/IsHavePMS'\r\nimport VerifyEmail from './components/createAccount/verifyEmail/index'\r\nimport NewOrganization from './components/createAccount/newOrganization/NewOrganization'\r\nimport NewWorkplace from './components/createAccount/newWorkplace/NewWorkplace'\r\n\r\nimport InviteTeam from './components/createAccount/inviteTeam/InviteTeam'\r\n\r\n//options\r\nimport Help from './components/menuOptions/help/Help'\r\nimport Unassigned from './components/menuOptions/unassigned/Unassigned'\r\nimport Settings from './components/menuOptions/settings/Settings'\r\nimport AdvancedSettings from './components/menuOptions/advancedSettings/AdvancedSettings'\r\nimport Invite from './components/menuOptions/invite/Invite'\r\nimport PetAndParents from './components/menuOptions/petAndParents/PetAndParents'\r\nimport EditParent from './components/menuOptions/editParent/EditParent'\r\n// import AdminAddPet from './components/menuOptions/adminAddPet/AdminAddPet'\r\nimport Veterinarians from './components/menuOptions/admin_VetProfile/Veterinarians'\r\nimport AddDevice from './components/menuOptions/addDevice/AddDevice'\r\nimport ConnectWorkplace from './components/menuOptions/orgAndPractice/ConnectWorkplace'\r\nimport NewOrg from './components/menuOptions/orgAndPractice/NewOrganization'\r\nimport Team from './components/menuOptions/orgAndPractice/InviteTeam'\r\n\r\nimport MainBody from './components/mainbody'\r\n\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/page1\" component={Choose} />\r\n          <Route exact path=\"/ezyVetLogin\" component={EzyVetLogin} />\r\n          <Route exact path=\"/EzyVetSelectTime\" component={EzyVetSelectTime} />\r\n          <Route exact path=\"/EzyVetSelectExam\" component={EzyVetSelectExam} />\r\n          <Route exact path=\"/page2\" component={APIkey} />\r\n          <Route exact path=\"/page3\" component={VerifyOrganizationInformation} />\r\n          <Route exact path=\"/page4\" component={SelectMella} />\r\n\r\n\r\n          <Route exact path=\"/VetSpireSelectExam\" component={SelectExam} />\r\n          <Route exact path=\"/page7\" component={MaxMinReturn} />\r\n\r\n          <Route exact path=\"/page8\" component={Mesasure} />\r\n          <Route exact path=\"/page9\" component={EditPetInfo} />\r\n          <Route exact path=\"/page10\" component={NorMalMeasurement} />\r\n          {/* <Route exact path=\"/page10\" component={MainBody} /> */}\r\n          <Route exact path=\"/MainBody\" component={MainBody} />\r\n\r\n\r\n\r\n          <Route exact path=\"/page12\" component={WorkPlace} />\r\n          <Route exact path=\"/AddYuding\" component={AddYuding} />\r\n\r\n\r\n          <Route exact path=\"/page11\" component={SignIn} />\r\n          <Route exact path=\"/user/login/forgotPassword\" component={ForgotPassword} />\r\n          <Route exact path=\"/user/login/resetPassword\" component={ResetPassword} />\r\n          <Route exact path=\"/user/login/scanCodeLogin\" component={ScanCodeLogin} />\r\n\r\n          <Route exact path=\"/uesr/logUp/FindMyOrganization\" component={FindMyOrganization} />\r\n          <Route exact path=\"/uesr/logUp/FindMyWorkplace\" component={FindMyWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/VetPrifile\" component={VetPrifile} />\r\n          <Route exact path=\"/uesr/logUp/JoinOrganizationByOption\" component={JoinOrganizationByOption} />\r\n          <Route exact path=\"/uesr/logUp/isHavePMS\" component={IsHavePMS} />\r\n          <Route exact path=\"/uesr/logUp/VerifyEmail\" component={VerifyEmail} />\r\n          <Route exact path=\"/uesr/logUp/NewOrganization\" component={NewOrganization} />\r\n          <Route exact path=\"/uesr/logUp/NewWorkplace\" component={NewWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/InviteTeam\" component={InviteTeam} />\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/uesr/selectExam\" component={DoctorSelectExam} />\r\n          <Route exact path=\"/uesr/DoctorSelectAllExam\" component={DoctorSelectAllExam} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/pet/doctorAddPet\" component={DoctorAddPet} />\r\n\r\n          {/* options */}\r\n          <Route exact path=\"/menuOptions/help\" component={Help} />\r\n          <Route exact path=\"/menuOptions/unassigned\" component={Unassigned} />\r\n          <Route exact path=\"/menuOptions/settings\" component={Settings} />\r\n          <Route exact path=\"/menuOptions/advancedsettings\" component={AdvancedSettings} />\r\n          <Route exact path=\"/menuOptions/invite\" component={Invite} />\r\n          <Route exact path=\"/menuOptions/petAndParents\" component={PetAndParents} />\r\n          <Route exact path=\"/menuOptions/editParent\" component={EditParent} />\r\n          {/* <Route exact path=\"/menuOptions/adminAddPet\" component={AdminAddPet} /> */}\r\n          <Route exact path=\"/menuOptions/veterinarians\" component={Veterinarians} />\r\n          <Route exact path=\"/menuOptions/AddDevice\" component={AddDevice} />\r\n          <Route exact path=\"/menuOptions/ConnectWorkplace\" component={ConnectWorkplace} />\r\n          <Route exact path=\"/menuOptions/NewOrg\" component={NewOrg} />\r\n          <Route exact path=\"/menuOptions/Team\" component={Team} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\nexport default App","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx",["369","370"],"import React, { Component, } from 'react'\r\nimport {\r\n    Button,\r\n    Input,\r\n    Form,\r\n    Select\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './esyVetLogin.less'\r\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\nexport default class EzyNetLogin extends Component {\r\n\r\n    state = {\r\n        isRemember: false,\r\n        client_id: '',\r\n        client_secret: '',\r\n        partner_id: ''\r\n    }\r\n\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('middle')\r\n        storage.ezyVetToken = ''\r\n    }\r\n    componentWillMount () {\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin1 !== '', storage.ezyVetToken1 !== undefined, `${storage.ezyVetToken1}` !== 'undefined');\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin !== '', storage.ezyVetToken !== undefined, `${storage.ezyVetToken}` !== 'undefined');\r\n        if (storage.ezyVetLogin !== '' && storage.ezyVetToken !== undefined && `${storage.ezyVetToken}` !== 'undefined') {\r\n            try {\r\n                let data = JSON.parse(storage.ezyVetLogin)\r\n                console.log('--', data);\r\n                this.setState({\r\n                    isRemember: data.isRemember,\r\n                    client_id: data.client_id,\r\n                    client_secret: data.client_secret,\r\n                    partner_id: data.partner_id\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 10 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 14 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 10,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 8,\r\n                    offset: 7,\r\n                },\r\n            },\r\n        };\r\n\r\n        const _next = (values) => {\r\n            console.log('Received values of form: ', values);\r\n            let parames = {\r\n                clientId: values.client_id,\r\n                clientSecret: values.client_secret,\r\n                partnerId: values.partner_id,\r\n            }\r\n            console.log(parames);\r\n            fetchRequest2('/EzyVet/ezyvetauth', 'GET', parames, '')\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res && res.msg === 'success') {\r\n\r\n                        storage.ezyVetToken = res.data\r\n                        if (this.state.isRemember) {\r\n                            storage.ezyVetLogin = JSON.stringify({\r\n                                client_id: values.client_id,\r\n                                client_secret: values.client_secret,\r\n                                partner_id: values.partner_id,\r\n                                isRemember: this.state.isRemember\r\n                            })\r\n                        } else {\r\n                            storage.ezyVetLogin = ''\r\n                        }\r\n                        storage.selectTime = ''\r\n                        storage.ezyVetReLogin = JSON.stringify({  //如果令牌过期了，需要重新输入信息重新获取令牌\r\n                            client_id: values.client_id,\r\n                            client_secret: values.client_secret,\r\n                            partner_id: values.partner_id,\r\n                        })\r\n\r\n                        this.props.history.push('EzyVetSelectTime')\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n\r\n        }\r\n        let { client_id, client_secret, partner_id } = this.state\r\n\r\n        return (\r\n            <div id=\"eszVetLogin\">\r\n                {/* 关闭缩小 */}\r\n                <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                    onClick1={() => this.props.history.push('/page1')}\r\n                />\r\n                <div className=\"text\">\r\n                    Please enter your user information\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form\r\n                        {...formItemLayout}\r\n                        name=\"register\"\r\n                        onFinish={_next}\r\n                        initialValues={{\r\n                            client_id, client_secret, partner_id\r\n                        }}\r\n\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"client_id\"\r\n                            label=\"Client ID\"\r\n                            rules={[{ required: true, message: 'Please input your Client ID!', whitespace: true }]}\r\n\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"client_secret\"\r\n                            label=\"Client Secret\"\r\n                            rules={[{ required: true, message: 'Please input your Client Secret!', whitespace: true }]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"partner_id\"\r\n                            label=\"Partner ID\"\r\n                            rules={[{ required: true, message: 'Please input your Partner ID!', whitespace: true }]}\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            {...tailFormItemLayout}\r\n                        >\r\n                            <div className=\"btn\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    htmlType=\"submit\"\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"remember\">\r\n                    <p>Stay Signed In:</p>\r\n                    <div className=\"box\" onClick={() => {\r\n                        let { isRemember } = this.state\r\n                        this.setState({\r\n                            isRemember: !isRemember\r\n                        })\r\n                        storage.isRemember = !isRemember\r\n                    }}>\r\n                        {this.state.isRemember && <img src={dui} alt=\"\" />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",["371","372"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx",["373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\px.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx",["395","396","397"],"import React, { Component, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { px } from '../../utils/px'\r\nimport mellaPro from './../../assets/img/hardList-mella.png'\r\nimport biggie from './../../assets/img/hardList-biggie.png'\r\nimport rfid from './../../assets/img/hardList-rfid.png'\r\nimport tape from './../../assets/img/hardList-tape.png'\r\nimport add from './../../assets/img/hardList-add.png'\r\nimport maeBowl from './../../assets/img/hardList-maeBowl.png'\r\nimport otterEQ from './../../assets/img/hardList-otterEQ.png'\r\nimport { selectHardwareInfoFun, setSelectHardwareType, setMenuNum } from './../../store/actions'\r\nimport electronStore from '../../utils/electronStore'\r\n\r\nlet storage = window.localStorage;\r\n//devicesTypeList是index传过来的硬件种类以及种类下的所有硬件\r\nconst HardWareTypeUI = ({ bodyHeight, devicesTypeList, selectHardwareInfoFun, setSelectHardwareType, selectHardwareType, setMenuNum, menuNum }) => {\r\n  //根据左侧列表的设备类型，获取当前选中的设备类型下选中的硬件,先看本地有没有存,没存就拿第一个展示\r\n  // useEffect(() => {\r\n  //   let Index = null\r\n  //   for (let i = 0; i < devicesTypeList.length; i++) {\r\n  //     const element = devicesTypeList[i];\r\n  //     if (element.type === selectHardwareType) {\r\n  //       Index = i\r\n  //       break\r\n  //     }\r\n  //   }\r\n  //   if (Index === null) {\r\n  //     return\r\n  //   }\r\n\r\n  //   let hard = devicesTypeList[Index]\r\n  //   if (hard && hard.type !== 'add') {\r\n  //     let devicesInfo = electronStore.get(`${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`)\r\n\r\n\r\n\r\n\r\n  //     if (!devicesInfo) {\r\n  //       devicesInfo = hard.devices[0]\r\n  //       electronStore.set(`${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`, devicesInfo)\r\n  //     } else {\r\n\r\n  //       let sameFlag = false\r\n  //       console.log('============', hard.devices, devicesInfo);\r\n  //       for (let i = 0; i < hard.devices.length; i++) {\r\n  //         const element = hard.devices[i];\r\n  //         if (element.mac === devicesInfo.mac && element.name === devicesInfo.name) {\r\n  //           sameFlag = true\r\n  //           break\r\n  //         }\r\n  //       }\r\n  //       if (!sameFlag) {\r\n  //         devicesInfo = hard.devices[0]\r\n  //         electronStore.set(`${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`, devicesInfo)\r\n  //       }\r\n  //     }\r\n\r\n  //     console.log('保存的折本信息', devicesInfo);;\r\n\r\n  //     selectHardwareInfoFun(devicesInfo)\r\n\r\n  //     selectHardwareList(hard)\r\n  //   }\r\n\r\n  // }, [devicesTypeList])\r\n\r\n\r\n\r\n  let options = devicesTypeList.map((item, index) => {\r\n\r\n    let img = null\r\n    switch (item.type) {\r\n      case 'mellaPro':\r\n        img = mellaPro\r\n        break;\r\n\r\n      case 'biggie':\r\n        img = biggie\r\n        break;\r\n\r\n      case 'rfid':\r\n        img = rfid\r\n        break;\r\n\r\n      case 'tape':\r\n        img = tape\r\n        break;\r\n      case \"maeBowl\":\r\n        img = maeBowl\r\n        break;\r\n      case 'add':\r\n        img = add\r\n        break;\r\n\r\n      case 'otterEQ':\r\n        img = otterEQ\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    let borderStyle = ``\r\n    if (item.type === selectHardwareType) {\r\n      borderStyle = ` 2px solid #3B3A3A`\r\n    }\r\n\r\n    return <li key={`${index}`} style={{ padding: `${px(10)}px 0`, }}\r\n      onClick={() => {\r\n        console.log(item.type);\r\n\r\n\r\n\r\n        if (menuNum !== '6') {\r\n          setMenuNum('1')\r\n          setSelectHardwareType(item.type)\r\n          if (item.type === 'add') {\r\n\r\n\r\n          } else {\r\n            let devicesInfo = electronStore.get(`${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`)\r\n\r\n            //要做个处理,看保存的数据是否和当前的一致，如果不一致，就把当前的保存下来\r\n\r\n\r\n            if (!devicesInfo && item.devices[0]) {\r\n              devicesInfo = item.devices[0]\r\n              electronStore.set(`${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`, devicesInfo)\r\n            }\r\n\r\n\r\n            selectHardwareInfoFun(devicesInfo)\r\n          }\r\n        } else {\r\n          setSelectHardwareType('mellaPro')\r\n        }\r\n\r\n\r\n      }\r\n      }\r\n    >\r\n      <div style={{ border: borderStyle, padding: px(2), borderRadius: px(10) }}>\r\n        <img src={img} alt=\"\" width={px(55)} />\r\n      </div>\r\n\r\n\r\n    </li>\r\n  })\r\n\r\n\r\n  return (\r\n    <div className=\"hardwareType\" style={{ width: px(80), height: bodyHeight }}>\r\n      <ul>\r\n        {options}\r\n      </ul>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nHardWareTypeUI.propTypes = {\r\n  bodyHeight: PropTypes.number,\r\n  devicesTypeList: PropTypes.array,\r\n\r\n}\r\n//默认值\r\nHardWareTypeUI.defaultProps = {\r\n  bodyHeight: 0,\r\n  devicesTypeList: []\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    menuNum: state.userReduce.menuNum,\r\n  }),\r\n  { selectHardwareInfoFun, setSelectHardwareType, setMenuNum }\r\n)(HardWareTypeUI)","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actionTypes\\hardwareType.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\hardwareAction.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\HardListModal.jsx",["398"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx",["399","400","401","402","403","404","405","406","407","408"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx",["409"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\index.jsx",["410","411","412","413"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Layout, Menu, PageHeader } from \"antd\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n} from \"../../store/actions\";\r\nimport _ from \"lodash\";\r\nimport HeaderItem from \"../temperaturePage/components/headerItem\";\r\nimport LinkEquipment from \"./components/linkEquipment\";\r\nimport ScanPet from \"./components/scanPet\";\r\nimport \"./index.less\";\r\n\r\nconst ScanPage = ({ petMessage, hardwareMessage }) => {\r\n  let { petId } = petMessage;\r\n\r\n  return (\r\n    <>\r\n      <Layout className=\"homeBox\">\r\n        <HeaderItem />\r\n        {_.isEmpty(petId) ? <LinkEquipment /> : <ScanPet />}\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n  }\r\n)(ScanPage);\r\n","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\signIn\\SignIn.jsx",["414","415","416","417","418","419","420","421","422","423","424","425","426","427","428"],"import React, { Component } from 'react'\r\nimport { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './signIn.less'\r\nimport mellaLogo from './../../assets/images/mellaLogo.png'\r\nimport dui from './../../assets/images/dui.png'\r\nimport back_white from './../../assets/img/back-white.png'\r\nimport back_hui from './../../assets/img/back-hui.png'\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\r\nimport temporaryStorage from '../../utils/temporaryStorage';\r\nimport { fetchRequest1 } from '../../utils/FetchUtil';\r\nimport { mTop, px, MTop, pX, win } from '../../utils/px';\r\nimport MinClose from './../../utils/minClose/MinClose'\r\nimport MouseDiv from './../../utils/mouseDiv/MouseDiv'\r\nimport { addLogin, addQRCode } from '../../utils/axios';\r\nlet storage = window.localStorage;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet num = 0\r\n//有可能出现,登录成功跳转后获取到了二维码,这样就会导致出现一直轮询,未解决这个问题设置变量isSign\r\nlet isSign = true\r\n\r\nexport default class SignIn extends Component {\r\n\r\n  state = {\r\n    isRemember: false,\r\n    email: '',\r\n    hash: '',\r\n    isCode: false,\r\n    baseUrl: '',\r\n    QRToken: '',\r\n    isExpired: false,  //二维码是否过期\r\n    spin: false,\r\n    isLoadQrCode: false //是否正在加载二维码\r\n\r\n  }\r\n  componentDidMount () {\r\n    isSign = true\r\n    storage.lastOrganization = ''\r\n    //通知main.js渲染一个small窗口\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small', win())\r\n    //如果有保存的账号密码则展示出来\r\n    if (storage.signIn !== undefined && storage.signIn !== '') {\r\n      let data = storage.signIn\r\n      data = JSON.parse(data)\r\n      this.setState({\r\n        email: data.email,\r\n        hash: data.hash,\r\n        QRToken: ''\r\n      })\r\n    }\r\n    //是否勾选了保持登录\r\n    if (storage.isRemember !== undefined) {\r\n      let isRemember = storage.isRemember === 'true' ? true : false\r\n      this.setState({\r\n        isRemember\r\n      })\r\n    }\r\n    // 监听分辨率是否改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    //清空本地的注册界面的信息\r\n    temporaryStorage.logupVetInfo = {}\r\n    this._getQRCode()\r\n\r\n  }\r\n  componentWillUnmount () {\r\n    isSign = false\r\n    this.timer && clearInterval(this.timer)\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    // ipcRenderer.send('small')\r\n    ipcRenderer.send('small', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _getQRCode = () => {\r\n    this.setState({\r\n      isLoadQrCode: true\r\n    })\r\n    num = 0\r\n    fetchRequest2('/user/getLoginQRcode', \"GET\", '')\r\n      // addQRCode()\r\n      .then(res => {\r\n        message.destroy()\r\n\r\n        console.log('---获取二维码', res);\r\n        if (res.flag === true) {\r\n          this.setState({\r\n            baseUrl: res.data.QRcode,\r\n            QRToken: res.data.QRToken,\r\n            isLoadQrCode: false\r\n          })\r\n          this.timer = setInterval(() => {\r\n            if (!isSign) {\r\n              this.timer && clearInterval(this.timer)\r\n\r\n            }\r\n            num++\r\n            console.log('lunxin');\r\n            this._polling()\r\n\r\n            if (num > 280) {   //超过280秒则去显示二维码过期，要重新获取\r\n              this.setState({\r\n                isExpired: true\r\n              })\r\n              num = 0\r\n              this.timer && clearInterval(this.timer)\r\n            }\r\n          }, 1000);\r\n        } else {\r\n          message.error('Failed to obtain QR code', 10)\r\n          this.setState({\r\n            isLoadQrCode: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        message.error('Failed to obtain QR code', 10)\r\n        this.setState({\r\n          isLoadQrCode: false\r\n        })\r\n        console.log(err);\r\n      })\r\n  }\r\n  //轮询\r\n  _polling = () => {\r\n    fetchRequest2(`/user/loginWithQRcode/${this.state.QRToken}`)\r\n      .then(res => {\r\n        console.log('轮询结果：', res);\r\n        if (res.flag === true) {\r\n          switch (res.code) {\r\n            case 10001:\r\n              console.log('未扫码');\r\n\r\n              break;\r\n\r\n            case 11033:\r\n              console.log('扫码未点击登录');\r\n              this.timer && clearInterval(this.timer)\r\n              temporaryStorage.QRToken = this.state.QRToken\r\n              let { name, url } = res.data\r\n              this.props.history.replace({ pathname: '/user/login/scanCodeLogin', params: { name, url } })\r\n\r\n              break;\r\n\r\n            case 11023:\r\n              console.log('过期');\r\n              this.setState({\r\n                isExpired: true\r\n              })\r\n              num = 0\r\n              this.timer && clearInterval(this.timer)\r\n\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n        console.log('code', res.code);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  //登录接口\r\n  _continue = () => {\r\n    const { email, hash, isRemember } = this.state\r\n\r\n\r\n    message.destroy()\r\n    let params = {\r\n      email: email.replace(/(^\\s*)/g, \"\"),\r\n      hash,\r\n      identityTypeId: '1'\r\n    }\r\n    if (email === '') {\r\n      message.error('please input your email')\r\n      return\r\n    }\r\n    if (hash === '') {\r\n      message.error('please input your password')\r\n      return\r\n    }\r\n    console.log(params);\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    // fetchRequest('/user/mellaLogin', 'POST', params)\r\n    addLogin(params)\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        if (res.status && res.status === 404) {\r\n          message.error('system error');\r\n          return\r\n        }\r\n        if (res.status === 500) {\r\n          message.error('system error');\r\n\r\n          return\r\n        }\r\n        if (res.code === 10001 && res.msg === '账号错误') {\r\n          message.error('Account error');\r\n          return\r\n        }\r\n        if (res.code === 10002 && res.msg === '密码错误') {\r\n          message.error('wrong password')\r\n          return;\r\n        }\r\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\r\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\r\n          return\r\n        }\r\n        if (res.code === 10004 && res.msg === '账号被限制') {\r\n          message.error('The account is restricted, please contact the management', 10)\r\n          return\r\n        }\r\n        if (res.code === 10003) {\r\n          message.error('The password or email is incorrect, please re-enter')\r\n          return\r\n        }\r\n\r\n\r\n        if (res.code === 0 && res.msg === 'success') {\r\n          this.timer && clearInterval(this.timer)\r\n          console.log('账号密码正确，登录进去了');\r\n          let { userWorkplace, lastOrganization, token } = res.success\r\n          storage.token = token\r\n          storage.userId = ''\r\n          let data = {\r\n            email: email.replace(/(^\\s*)/g, \"\"),\r\n            hash\r\n          }\r\n          data = JSON.stringify(data)\r\n          if (isRemember === true) {\r\n\r\n\r\n            storage.signIn = data\r\n          } else {\r\n            storage.signIn = ''\r\n          }\r\n          storage.saveSign = data\r\n\r\n\r\n          storage.userId = res.success.userId\r\n          storage.roleId = res.success.roleId\r\n\r\n          //每次登陆后清空宠物列表缓存的数据\r\n          storage.doctorList = ''\r\n          storage.defaultCurrent = ''\r\n\r\n          //由于后台接口原因，导致这里的最后工作场所可能不是自己的，因此下面全注释掉。改成如果有多个工作场所则跳转到选择工作场所界面，不是多个则跳转到选择宠物界面\r\n          if (res.success.lastWorkplaceId) {\r\n            storage.lastWorkplaceId = res.success.lastWorkplaceId\r\n          } else {\r\n            storage.lastWorkplaceId = ''\r\n          }\r\n\r\n          if (res.success.lastOrganization) {\r\n            storage.lastOrganization = res.success.lastOrganization\r\n          } else {\r\n            storage.lastOrganization = ''\r\n          }\r\n\r\n\r\n          console.log('----------', userWorkplace, userWorkplace.length);\r\n\r\n          if (userWorkplace) {\r\n            storage.userWorkplace = JSON.stringify(userWorkplace)\r\n            let connectionKey = ''\r\n            for (let i = 0; i < userWorkplace.length; i++) {\r\n              const element = userWorkplace[i];\r\n              if (element.organizationEntity) {\r\n                if (element.organizationEntity.organizationId === lastOrganization) {\r\n\r\n                  if (element.organizationEntity.connectionKey) {\r\n                    connectionKey = element.organizationEntity.connectionKey\r\n                  }\r\n                  if (element.roleId) {\r\n                    console.log(element.roleId);\r\n                    storage.roleId = element.roleId\r\n                  }\r\n\r\n                  break\r\n                }\r\n              }\r\n\r\n            }\r\n            console.log('----------key值为：', connectionKey);\r\n            storage.connectionKey = connectionKey\r\n\r\n          } else {\r\n            storage.userWorkplace = ''\r\n            storage.connectionKey = ''\r\n\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          this.props.history.push('/MainBody')\r\n        }\r\n\r\n\r\n\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        console.log(err);\r\n      })\r\n\r\n\r\n  }\r\n\r\n  _signUp = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push('/uesr/logUp/VetPrifile')\r\n  }\r\n  _change = () => {\r\n    let { isCode } = this.state\r\n    message.destroy()\r\n    if (isCode === false) {\r\n      this._getQRCode()\r\n    } else {\r\n      this.timer && clearInterval(this.timer)\r\n      num = 0\r\n      this.setState({\r\n        isExpired: false\r\n      })\r\n    }\r\n    this.setState({ isCode: !this.state.isCode })\r\n  }\r\n  //二维码界面\r\n  _qrCode = () => {\r\n    let { isCode, baseUrl, isExpired, isLoadQrCode } = this.state\r\n    let imgOpacity = isLoadQrCode\r\n      ? baseUrl ? '0.1' : 0.5\r\n      : '1'\r\n\r\n\r\n    if (!isExpired) {\r\n      const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n      return (\r\n        <div className=\"qrcode\" >\r\n          <img\r\n            src={`data:image/jpeg;base64,${baseUrl}`}\r\n            alt=\"\"\r\n            style={{ opacity: '1', width: px(120), height: px(120), opacity: imgOpacity }}\r\n\r\n          />\r\n          {\r\n            isLoadQrCode &&\r\n            // true &&\r\n\r\n            <div className=\"err\">\r\n              <Spin\r\n                indicator={antIcon}\r\n                tip=\"Loading...\"\r\n                style={{ fontSize: 16, color: '#e1206d', }} />\r\n            </div>\r\n\r\n          }\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"qrcode\">\r\n          <img src={`data:image/jpeg;base64,${baseUrl}`} alt=\"\" style={{ opacity: '0.1', width: px(120), height: px(120), }} />\r\n\r\n          <div className=\"err\">\r\n            <div className=\"errText\">QR code has expired</div>\r\n            <div className=\"btn\"\r\n              style={{ width: px(145), height: px(35), marginTop: px(10) }}\r\n              onClick={this.refresh}>Refresh</div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n  //点击refresh按钮\r\n  refresh = () => {\r\n    this.setState({\r\n      isExpired: false\r\n    })\r\n    num = 0\r\n    this._getQRCode()\r\n\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    let { isCode, baseUrl } = this.state\r\n    let code = isCode ? 'icon-diannao-copy' : 'icon-erweima-copy'\r\n    return (\r\n      <div id=\"signIn\">\r\n        <div className=\"heaed\">\r\n          <div className=\"l\"\r\n          >\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.push('/')\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" >\r\n          <div className=\"logo\">\r\n            <img src={mellaLogo} alt=\"\" style={{ width: px(120) }} />\r\n          </div>\r\n          <div className=\"body\" style={{ position: 'relative' }}>\r\n            <div className=\"text\"\r\n              style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(30), }}\r\n            >\r\n              Please enter email <br />and password\r\n            </div>\r\n\r\n            <div className=\"inpF\">\r\n              <Input className='inp'\r\n                style={{ width: px(310), height: px(45), marginLeft: px(6), marginBottom: px(18), fontSize: px(18) }}\r\n                value={this.state.email}\r\n                placeholder='rachel@friends.com'\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  let str = item.target.value\r\n                  this.setState({\r\n                    email: str\r\n                  })\r\n                }}\r\n              />\r\n              <Input.Password className='inp'\r\n                style={{ width: px(310), height: px(45), marginLeft: px(6), marginBottom: px(18), fontSize: px(18) }}\r\n\r\n                visibilityToggle={false}\r\n                // style={{ border: 'none', outline: 'medium' }}\r\n                value={this.state.hash}\r\n                placeholder='********'\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  let str = item.target.value\r\n                  this.setState({\r\n                    hash: str\r\n                  })\r\n                }}\r\n              />\r\n\r\n              <div className=\"text\"\r\n                style={{ fontSize: px(28), lineHeight: px(1), marginTop: px(10), marginBottom: px(20) }}\r\n              >\r\n                {'Or scan QR Code'}\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              this._qrCode()\r\n            }\r\n            <div className=\"littleText flex\" style={{ fontSize: px(12), marginTop: px(10), marginBottom: px(10) }}>\r\n              Go to your Mella mobile app to access<br />\r\n              the QR scanner\r\n            </div>\r\n            <div className=\"stay\" >\r\n              <div className=\"remember\">\r\n                <p style={{ fontSize: px(16) }}>Stay Signed In</p>\r\n                <div className=\"box\"\r\n                  style={{ width: px(20), height: px(20), marginLeft: px(12) }}\r\n                  onClick={() => {\r\n                    let { isRemember } = this.state\r\n                    this.setState({\r\n                      isRemember: !isRemember\r\n                    })\r\n                    storage.isRemember = !isRemember\r\n\r\n                  }}>\r\n                  {this.state.isRemember && <img src={dui} alt=\"\" />}\r\n                </div>\r\n              </div>\r\n              <div className=\"forgot\"\r\n                style={{ fontSize: px(16) }}\r\n                onMouseDown={() => {\r\n                  let forget = document.querySelectorAll('#signIn .forgot')\r\n                  forget[0].style.opacity = 0.5\r\n                }}\r\n                onMouseUp={() => {\r\n                  document.querySelectorAll('#signIn .forgot')[0].style.opacity = 1\r\n                  if (this.state.email) {\r\n                    temporaryStorage.forgotPassword_email = this.state.email\r\n                  }\r\n\r\n                  this.props.history.push('/user/login/forgotPassword')\r\n                }}\r\n              >Forgot?</div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"button11\" style={{ backgroundColor: '#E7E7E7', padding: `${px(32)}px 0` }} >\r\n\r\n          <div className=\"btn1 flex\"\r\n            onClick={this._continue}\r\n            style={{ height: px(40) }}>\r\n            <p>{`CONTINUE`}</p>\r\n          </div>\r\n\r\n          <div className=\"text2\" style={{ marginTop: px(12) }}>\r\n            <p style={{ fontSize: px(17) }}>Do not have an account? <a href=\"#\" onClick={this._signUp}>Sign Up</a></p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n        {\r\n          this.state.spin &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: px(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              loading...\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\index.jsx",["429","430","431","432","433","434","435","436","437","438"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\index.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\settings\\Settings.jsx",["439","440","441","442","443","444"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\Fetch_token.js",["445","446","447","448"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\home\\Home.jsx",["449","450"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchEszVet.js",["451","452"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\areaCode\\imgArray.js",["453"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx",["454","455","456","457","458","459","460","461","462","463","464"],"import React, {\r\n    useEffect,\r\n    useState,\r\n    useRef\r\n} from 'react';\r\nimport { Button, Progress, Layout, Carousel } from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\nimport Animation_1 from './../../../assets/img/Animation_1.png';\r\nimport Animation_2 from './../../../assets/img/Animation_2.png';\r\nimport Animation_3 from './../../../assets/img/Animation_3.png';\r\n// import HeaderItem from './headerItem';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun\r\n} from '../../../store/actions';\r\nimport _ from 'lodash';\r\nimport './measurement.less';\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst Measurement = ({ petMessage, hardwareMessage }) => {\r\n    let { mellaMeasureValue } = hardwareMessage;\r\n    const [percent, setPercent] = useState(0);\r\n    const [value, setValue] = useState(0);\r\n    const [timers, setTimers] = useState(0);\r\n    const saveCallBack = useRef();\r\n    const callBack = () => {\r\n        const random = 1;\r\n        setValue(value + random);\r\n        setTimers(timers + random);\r\n    };\r\n    //圆滑里面的文字\r\n    const ProgressTitle = (percent) => {\r\n        return (\r\n            <>\r\n                <p className='ProgressTitle'>{percent}\r\n                    <span className='symbol'>℃</span>\r\n                </p>\r\n                <p className='ProgressTitle'>Measuring</p>\r\n            </>\r\n\r\n        );\r\n    }\r\n    //图片切换\r\n    const checkImage = () => {\r\n        switch (timers) {\r\n            case 0:\r\n                return <img src={Animation_1} />\r\n            case 1:\r\n                return <img src={Animation_2} />\r\n            case 2:\r\n                return <img src={Animation_3} />\r\n            case 3:\r\n                return <img src={Animation_3} />\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        saveCallBack.current = callBack;\r\n        if (timers > 2) {\r\n            setTimers(0);\r\n        }\r\n        return () => { };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const tick = () => {\r\n            saveCallBack.current();\r\n        };\r\n        const timer = setInterval(tick, 1000);\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {/* <HeaderItem /> */}\r\n            <Content className={\"contentBox\"}>\r\n                <Progress type=\"dashboard\" percent={_.round(mellaMeasureValue, 1)} gapDegree={30} width={'260px'} strokeWidth={'8'} format={percent => ProgressTitle(percent)} />\r\n                {checkImage()}\r\n            </Content>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        petMessage: state.petReduce.petDetailInfo,\r\n        hardwareMessage: state.hardwareReduce,\r\n    }),\r\n    {\r\n        selectHardwareModalShowFun,\r\n        petSortTypeFun,\r\n        petDetailInfoFun,\r\n        setMellaConnectStatusFun,\r\n        setMellaMeasureValueFun,\r\n        setMellaPredictValueFun,\r\n        setMellaMeasurePartFun\r\n    }\r\n)(Measurement);","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectMella\\SelectMella.jsx",["465"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx",["466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n    Switch,\r\n    Select,\r\n} from 'antd'\r\n\r\n\r\n\r\n\r\nimport Heart from '../../../utils/heard/Heard'\r\nimport Slider from '../../../utils/slider/Slider'\r\nimport Button from '../../../utils/button/Button'\r\nimport electronStore from '../../../utils/electronStore'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport { mTop, px } from '../../../utils/px';\r\nimport MyModal from '../../../utils/myModal/MyModal'\r\nimport parent from './../../../assets/img/parent.png'\r\nimport dog from '../../../assets/images/reddog.png'\r\nimport cat from '../../../assets/images/redcat.png'\r\nimport other from '../../../assets/images/redother.png'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport moment from 'moment'\r\nimport './connectWorkplace.less'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class ConnectWorkplace extends Component {\r\n\r\n    state = {\r\n        orgArr: [],\r\n        workplaceJson: {},\r\n        connectionKey: '',\r\n        selectOrgId: -1,\r\n        selectRoleId: ''\r\n    }\r\n    componentDidMount() {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        let { height, width } = window.screen\r\n        ipcRenderer.send('Lowbig')\r\n        ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n\r\n        let userWorkplace = []\r\n        try {\r\n            userWorkplace = JSON.parse(storage.userWorkplace) || []\r\n        } catch (error) {\r\n            console.log('字符串转对象失败', error);\r\n        }\r\n        /*orgArr的格式为[{\r\n          organizationId:1,\r\n          organizationName:'11111',\r\n          connectionKey:''\r\n        }]\r\n        \r\n         workplace:{\r\n           1:{\r\n              workplaceId:1,\r\n              workplaceName:'122334\r\n            },\r\n         }\r\n        */\r\n        let orgArr = [], workplaceJson = {}\r\n        // console.log('存储的工作场所和组织id', storage.lastWorkplaceId, storage.lastOrganization);\r\n        for (let i = 0; i < userWorkplace.length; i++) {\r\n            let element = userWorkplace[i]\r\n            // console.log('每一项的值：', element);\r\n            if (element.organizationEntity && element.workplaceEntity) {\r\n                let { organizationEntity, workplaceEntity, roleId } = element\r\n                const { name, organizationId, connectionKey } = organizationEntity\r\n                const { workplaceName, workplaceId } = workplaceEntity\r\n\r\n                if (`${workplaceId}` === storage.lastWorkplaceId) {\r\n                    this.setState({\r\n                        workplaceName,\r\n                        workplaceId: storage.lastWorkplaceId\r\n                    })\r\n                }\r\n\r\n                if (`${organizationId}` === storage.lastOrganization) {\r\n                    this.setState({\r\n                        organizationName: name,\r\n                        organizationId: storage.lastOrganization,\r\n                        selectOrgId: storage.lastOrganization\r\n                    })\r\n                }\r\n\r\n                let orgRepeatFlog = false, repeatFlogNum = -1\r\n                for (let j = 0; j < orgArr.length; j++) {\r\n                    if (orgArr[j].organizationId === organizationId) {\r\n                        orgRepeatFlog = true\r\n                        repeatFlogNum = j\r\n                        break;\r\n                    }\r\n\r\n                }\r\n                if (orgRepeatFlog) {\r\n                    let workplace = {\r\n                        workplaceName, workplaceId\r\n                    }\r\n                    let id = orgArr[repeatFlogNum].organizationId\r\n                    workplaceJson[`${id}`] = workplace\r\n                } else {\r\n                    let connectKey = connectionKey || ''\r\n                    let json = {\r\n                        organizationId,\r\n                        organizationName: name,\r\n                        connectionKey: connectKey,\r\n                        roleId,\r\n\r\n                    }\r\n                    let workplace = [{\r\n                        workplaceName, workplaceId\r\n                    }]\r\n                    workplaceJson[`${organizationId}`] = workplace\r\n\r\n                    orgArr.push(json)\r\n                }\r\n            }\r\n        }\r\n        // console.log('-----转换后的组织信息--', orgArr, workplaceJson);\r\n        this.setState({\r\n            orgArr,\r\n            workplaceJson,\r\n            connectionKey: storage.connectionKey,\r\n            selectRoleId: storage.roleId,\r\n            connectionKey: storage.connectionKey\r\n        })\r\n\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n\r\n        ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n    }\r\n    changeFenBianLv = (e) => {\r\n        // console.log(e);\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        let { height, width } = window.screen\r\n        let windowsHeight = height > width ? width : height\r\n        ipcRenderer.send('Lowbig')\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        let { orgArr, selectOrgId } = this.state\r\n        let option = orgArr.map((item, index) => {\r\n            let bac = `${selectOrgId}` === `${item.organizationId}` ? '#e1206d' : '#fff'\r\n            let col = `${selectOrgId}` === `${item.organizationId}` ? '#fff' : '#000'\r\n            return <li key={`${item.organizationId}`}\r\n                style={{ background: bac, color: col }}\r\n                onClick={() => {\r\n\r\n                    this.setState({\r\n                        selectOrgId: item.organizationId,\r\n                        connectionKey: item.connectionKey,\r\n                        selectRoleId: item.roleId\r\n                    })\r\n                    // storage.roleId = item.roleId\r\n                }}\r\n            >\r\n                <div className=\"org\" style={{ fontSize: px(16), }}>{item.organizationName}</div>\r\n\r\n            </li>\r\n        })\r\n        return (\r\n            <div id=\"connectworkplace\">\r\n                <div className=\"heard\">\r\n                    <Heart\r\n                        onReturn={() => {\r\n                            this.props.history.goBack()\r\n                        }}\r\n                        onSearch={(data) => {\r\n\r\n                            storage.doctorExam = JSON.stringify(data)\r\n\r\n                            storage.doctorList = JSON.stringify(this.state.data)\r\n                            if (storage.isClinical === 'true') {\r\n                                this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\r\n                            } else {\r\n                                this.props.history.push({ pathname: '/page10', })\r\n                            }\r\n                        }}\r\n                        menu8Click={() => {\r\n                            // console.log('--', storage.identity);\r\n                            switch (storage.identity) {\r\n                                case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                                    break;\r\n                                case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n                                    break;\r\n                                case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                                    break;\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <div className=\"body\" >\r\n                    <div className=\"top\">\r\n                        <div className=\"title flex\">\r\n                            <p style={{ fontSize: px(24), fontWeight: '800' }}>Connected Workplaces</p>\r\n                            <div className=\"addbtn flex\" style={{ height: px(45) }}\r\n                                onClick={() => this.props.history.push('/menuOptions/NewOrg')}\r\n                            >\r\n\r\n                                <p>+ Add Workplace</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tablebox\">\r\n                            <div className=\"table\" style={{ height: px(220) }}>\r\n                                <ul>\r\n                                    {option}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"center\"></div>\r\n                    <div className=\"footer flex\">\r\n                        <div className=\"saveBtn flex\" style={{ height: px(45) }}\r\n                            onClick={() => {\r\n                                let { selectOrgId, selectRoleId, connectionKey, workplaceJson } = this.state\r\n                                // console.log({ selectOrgId, selectRoleId, connectionKey, workplaceJson });\r\n                                storage.roleId = selectRoleId\r\n                                storage.lastOrganization = selectOrgId\r\n                                try {\r\n                                    let key = parseInt(selectOrgId)\r\n                                    let lastWorkplaceId = workplaceJson[key][0].workplaceId\r\n                                    // console.log(lastWorkplaceId);\r\n                                    storage.lastWorkplaceId = lastWorkplaceId\r\n                                } catch (error) {\r\n\r\n                                }\r\n                                storage.connectionKey = connectionKey\r\n                                this.props.history.replace('/menuOptions/settings')\r\n\r\n                            }}\r\n                        >\r\n                            <p style={{ fontSize: px(18) }}>Save Changes</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                {/* <MyModal visible={this.state.loading} /> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\selectionBox\\SelectionBox.jsx",["484"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx",["485","486","487"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\gender.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\mouseDiv\\MouseDiv.js",["488","489"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\InitDate.js",[],{"ruleId":"490","severity":1,"message":"491","line":6,"column":5,"nodeType":"492","messageId":"493","endLine":6,"endColumn":9},{"ruleId":"490","severity":1,"message":"494","line":10,"column":5,"nodeType":"492","messageId":"493","endLine":10,"endColumn":12},{"ruleId":"490","severity":1,"message":"495","line":12,"column":5,"nodeType":"492","messageId":"493","endLine":12,"endColumn":9},{"ruleId":"490","severity":1,"message":"496","line":17,"column":10,"nodeType":"492","messageId":"493","endLine":17,"endColumn":30},{"ruleId":"490","severity":1,"message":"497","line":17,"column":32,"nodeType":"492","messageId":"493","endLine":17,"endColumn":44},{"ruleId":"490","severity":1,"message":"498","line":23,"column":8,"nodeType":"492","messageId":"493","endLine":23,"endColumn":15},{"ruleId":"490","severity":1,"message":"499","line":25,"column":8,"nodeType":"492","messageId":"493","endLine":25,"endColumn":10},{"ruleId":"490","severity":1,"message":"500","line":26,"column":8,"nodeType":"492","messageId":"493","endLine":26,"endColumn":10},{"ruleId":"490","severity":1,"message":"501","line":27,"column":8,"nodeType":"492","messageId":"493","endLine":27,"endColumn":12},{"ruleId":"490","severity":1,"message":"502","line":28,"column":8,"nodeType":"492","messageId":"493","endLine":28,"endColumn":11},{"ruleId":"490","severity":1,"message":"503","line":29,"column":8,"nodeType":"492","messageId":"493","endLine":29,"endColumn":11},{"ruleId":"490","severity":1,"message":"504","line":30,"column":8,"nodeType":"492","messageId":"493","endLine":30,"endColumn":13},{"ruleId":"490","severity":1,"message":"505","line":34,"column":8,"nodeType":"492","messageId":"493","endLine":34,"endColumn":18},{"ruleId":"490","severity":1,"message":"506","line":38,"column":8,"nodeType":"492","messageId":"493","endLine":38,"endColumn":13},{"ruleId":"490","severity":1,"message":"507","line":48,"column":7,"nodeType":"492","messageId":"493","endLine":48,"endColumn":24},{"ruleId":"490","severity":1,"message":"508","line":51,"column":19,"nodeType":"492","messageId":"493","endLine":51,"endColumn":27},{"ruleId":"490","severity":1,"message":"509","line":69,"column":19,"nodeType":"492","messageId":"493","endLine":69,"endColumn":27},{"ruleId":"490","severity":1,"message":"510","line":81,"column":12,"nodeType":"492","messageId":"493","endLine":81,"endColumn":20},{"ruleId":"490","severity":1,"message":"511","line":85,"column":12,"nodeType":"492","messageId":"493","endLine":85,"endColumn":15},{"ruleId":"490","severity":1,"message":"512","line":88,"column":20,"nodeType":"492","messageId":"493","endLine":88,"endColumn":29},{"ruleId":"513","severity":1,"message":"514","line":147,"column":8,"nodeType":"515","endLine":147,"endColumn":25,"suggestions":"516"},{"ruleId":"513","severity":1,"message":"517","line":172,"column":8,"nodeType":"515","endLine":172,"endColumn":28,"suggestions":"518"},{"ruleId":"490","severity":1,"message":"519","line":176,"column":15,"nodeType":"492","messageId":"493","endLine":176,"endColumn":18},{"ruleId":"490","severity":1,"message":"520","line":436,"column":26,"nodeType":"492","messageId":"493","endLine":436,"endColumn":30},{"ruleId":"521","severity":1,"message":"522","line":683,"column":75,"nodeType":"523","messageId":"524","endLine":683,"endColumn":76,"suggestions":"525"},{"ruleId":"521","severity":1,"message":"526","line":683,"column":181,"nodeType":"523","messageId":"524","endLine":683,"endColumn":182,"suggestions":"527"},{"ruleId":"521","severity":1,"message":"522","line":697,"column":75,"nodeType":"523","messageId":"524","endLine":697,"endColumn":76,"suggestions":"528"},{"ruleId":"521","severity":1,"message":"526","line":697,"column":181,"nodeType":"523","messageId":"524","endLine":697,"endColumn":182,"suggestions":"529"},{"ruleId":"521","severity":1,"message":"522","line":714,"column":75,"nodeType":"523","messageId":"524","endLine":714,"endColumn":76,"suggestions":"530"},{"ruleId":"521","severity":1,"message":"526","line":714,"column":181,"nodeType":"523","messageId":"524","endLine":714,"endColumn":182,"suggestions":"531"},{"ruleId":"521","severity":1,"message":"522","line":744,"column":75,"nodeType":"523","messageId":"524","endLine":744,"endColumn":76,"suggestions":"532"},{"ruleId":"521","severity":1,"message":"526","line":744,"column":181,"nodeType":"523","messageId":"524","endLine":744,"endColumn":182,"suggestions":"533"},{"ruleId":"521","severity":1,"message":"522","line":758,"column":75,"nodeType":"523","messageId":"524","endLine":758,"endColumn":76,"suggestions":"534"},{"ruleId":"521","severity":1,"message":"526","line":758,"column":181,"nodeType":"523","messageId":"524","endLine":758,"endColumn":182,"suggestions":"535"},{"ruleId":"521","severity":1,"message":"522","line":774,"column":75,"nodeType":"523","messageId":"524","endLine":774,"endColumn":76,"suggestions":"536"},{"ruleId":"521","severity":1,"message":"526","line":774,"column":181,"nodeType":"523","messageId":"524","endLine":774,"endColumn":182,"suggestions":"537"},{"ruleId":"521","severity":1,"message":"522","line":1258,"column":75,"nodeType":"523","messageId":"524","endLine":1258,"endColumn":76,"suggestions":"538"},{"ruleId":"521","severity":1,"message":"526","line":1258,"column":181,"nodeType":"523","messageId":"524","endLine":1258,"endColumn":182,"suggestions":"539"},{"ruleId":"521","severity":1,"message":"522","line":1274,"column":75,"nodeType":"523","messageId":"524","endLine":1274,"endColumn":76,"suggestions":"540"},{"ruleId":"521","severity":1,"message":"526","line":1274,"column":181,"nodeType":"523","messageId":"524","endLine":1274,"endColumn":182,"suggestions":"541"},{"ruleId":"542","replacedBy":"543"},{"ruleId":"544","replacedBy":"545"},{"ruleId":"490","severity":1,"message":"546","line":1,"column":38,"nodeType":"492","messageId":"493","endLine":1,"endColumn":44},{"ruleId":"490","severity":1,"message":"491","line":5,"column":3,"nodeType":"492","messageId":"493","endLine":5,"endColumn":7},{"ruleId":"490","severity":1,"message":"547","line":6,"column":3,"nodeType":"492","messageId":"493","endLine":6,"endColumn":13},{"ruleId":"490","severity":1,"message":"548","line":13,"column":3,"nodeType":"492","messageId":"493","endLine":13,"endColumn":11},{"ruleId":"490","severity":1,"message":"549","line":42,"column":18,"nodeType":"492","messageId":"493","endLine":42,"endColumn":24},{"ruleId":"490","severity":1,"message":"550","line":56,"column":10,"nodeType":"492","messageId":"493","endLine":56,"endColumn":17},{"ruleId":"490","severity":1,"message":"551","line":56,"column":19,"nodeType":"492","messageId":"493","endLine":56,"endColumn":29},{"ruleId":"552","severity":1,"message":"553","line":152,"column":11,"nodeType":"554","endLine":152,"endColumn":29},{"ruleId":"552","severity":1,"message":"553","line":154,"column":11,"nodeType":"554","endLine":154,"endColumn":32},{"ruleId":"552","severity":1,"message":"553","line":158,"column":11,"nodeType":"554","endLine":158,"endColumn":29},{"ruleId":"552","severity":1,"message":"553","line":160,"column":11,"nodeType":"554","endLine":160,"endColumn":32},{"ruleId":"552","severity":1,"message":"553","line":164,"column":11,"nodeType":"554","endLine":164,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":166,"column":11,"nodeType":"554","endLine":166,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":170,"column":11,"nodeType":"554","endLine":170,"endColumn":30},{"ruleId":"552","severity":1,"message":"553","line":172,"column":11,"nodeType":"554","endLine":172,"endColumn":33},{"ruleId":"552","severity":1,"message":"553","line":176,"column":11,"nodeType":"554","endLine":176,"endColumn":29},{"ruleId":"552","severity":1,"message":"553","line":178,"column":11,"nodeType":"554","endLine":178,"endColumn":32},{"ruleId":"552","severity":1,"message":"553","line":182,"column":11,"nodeType":"554","endLine":182,"endColumn":29},{"ruleId":"552","severity":1,"message":"553","line":184,"column":11,"nodeType":"554","endLine":184,"endColumn":32},{"ruleId":"552","severity":1,"message":"553","line":188,"column":11,"nodeType":"554","endLine":188,"endColumn":29},{"ruleId":"552","severity":1,"message":"553","line":190,"column":11,"nodeType":"554","endLine":190,"endColumn":32},{"ruleId":"513","severity":1,"message":"555","line":236,"column":6,"nodeType":"515","endLine":236,"endColumn":29,"suggestions":"556"},{"ruleId":"513","severity":1,"message":"557","line":258,"column":6,"nodeType":"515","endLine":258,"endColumn":25,"suggestions":"558"},{"ruleId":"513","severity":1,"message":"559","line":290,"column":6,"nodeType":"515","endLine":290,"endColumn":44,"suggestions":"560"},{"ruleId":"513","severity":1,"message":"561","line":301,"column":6,"nodeType":"515","endLine":301,"endColumn":17,"suggestions":"562"},{"ruleId":"490","severity":1,"message":"563","line":2,"column":5,"nodeType":"492","messageId":"493","endLine":2,"endColumn":14},{"ruleId":"490","severity":1,"message":"564","line":3,"column":5,"nodeType":"492","messageId":"493","endLine":3,"endColumn":13},{"ruleId":"490","severity":1,"message":"565","line":5,"column":10,"nodeType":"492","messageId":"493","endLine":5,"endColumn":15},{"ruleId":"490","severity":1,"message":"566","line":16,"column":8,"nodeType":"492","messageId":"493","endLine":16,"endColumn":9},{"ruleId":"490","severity":1,"message":"549","line":19,"column":18,"nodeType":"492","messageId":"493","endLine":19,"endColumn":24},{"ruleId":"490","severity":1,"message":"567","line":22,"column":11,"nodeType":"492","messageId":"493","endLine":22,"endColumn":29},{"ruleId":"542","replacedBy":"568"},{"ruleId":"544","replacedBy":"569"},{"ruleId":"542","replacedBy":"570"},{"ruleId":"544","replacedBy":"571"},{"ruleId":"490","severity":1,"message":"572","line":4,"column":3,"nodeType":"492","messageId":"493","endLine":4,"endColumn":9},{"ruleId":"490","severity":1,"message":"496","line":10,"column":10,"nodeType":"492","messageId":"493","endLine":10,"endColumn":30},{"ruleId":"490","severity":1,"message":"573","line":15,"column":8,"nodeType":"492","messageId":"493","endLine":15,"endColumn":11},{"ruleId":"490","severity":1,"message":"574","line":17,"column":10,"nodeType":"492","messageId":"493","endLine":17,"endColumn":21},{"ruleId":"490","severity":1,"message":"575","line":4,"column":3,"nodeType":"492","messageId":"493","endLine":4,"endColumn":9},{"ruleId":"490","severity":1,"message":"576","line":13,"column":8,"nodeType":"492","messageId":"493","endLine":13,"endColumn":14},{"ruleId":"490","severity":1,"message":"577","line":14,"column":8,"nodeType":"492","messageId":"493","endLine":14,"endColumn":14},{"ruleId":"490","severity":1,"message":"578","line":15,"column":8,"nodeType":"492","messageId":"493","endLine":15,"endColumn":21},{"ruleId":"490","severity":1,"message":"579","line":16,"column":8,"nodeType":"492","messageId":"493","endLine":16,"endColumn":24},{"ruleId":"490","severity":1,"message":"502","line":20,"column":8,"nodeType":"492","messageId":"493","endLine":20,"endColumn":11},{"ruleId":"490","severity":1,"message":"503","line":21,"column":8,"nodeType":"492","messageId":"493","endLine":21,"endColumn":11},{"ruleId":"490","severity":1,"message":"504","line":22,"column":8,"nodeType":"492","messageId":"493","endLine":22,"endColumn":13},{"ruleId":"490","severity":1,"message":"580","line":32,"column":9,"nodeType":"492","messageId":"493","endLine":32,"endColumn":15},{"ruleId":"490","severity":1,"message":"581","line":55,"column":11,"nodeType":"492","messageId":"493","endLine":55,"endColumn":17},{"ruleId":"490","severity":1,"message":"582","line":55,"column":19,"nodeType":"492","messageId":"493","endLine":55,"endColumn":24},{"ruleId":"490","severity":1,"message":"583","line":71,"column":9,"nodeType":"492","messageId":"493","endLine":71,"endColumn":22},{"ruleId":"490","severity":1,"message":"584","line":154,"column":18,"nodeType":"492","messageId":"493","endLine":154,"endColumn":27},{"ruleId":"490","severity":1,"message":"585","line":154,"column":29,"nodeType":"492","messageId":"493","endLine":154,"endColumn":37},{"ruleId":"552","severity":1,"message":"553","line":558,"column":19,"nodeType":"554","endLine":565,"endColumn":61},{"ruleId":"586","severity":1,"message":"587","line":573,"column":19,"nodeType":"554","endLine":581,"endColumn":30},{"ruleId":"490","severity":1,"message":"588","line":5,"column":3,"nodeType":"492","messageId":"493","endLine":5,"endColumn":10},{"ruleId":"490","severity":1,"message":"577","line":6,"column":3,"nodeType":"492","messageId":"493","endLine":6,"endColumn":9},{"ruleId":"490","severity":1,"message":"589","line":7,"column":3,"nodeType":"492","messageId":"493","endLine":7,"endColumn":8},{"ruleId":"490","severity":1,"message":"497","line":10,"column":10,"nodeType":"492","messageId":"493","endLine":10,"endColumn":22},{"ruleId":"490","severity":1,"message":"590","line":11,"column":10,"nodeType":"492","messageId":"493","endLine":11,"endColumn":24},{"ruleId":"490","severity":1,"message":"591","line":21,"column":8,"nodeType":"492","messageId":"493","endLine":21,"endColumn":16},{"ruleId":"490","severity":1,"message":"592","line":28,"column":8,"nodeType":"492","messageId":"493","endLine":28,"endColumn":17},{"ruleId":"490","severity":1,"message":"593","line":29,"column":8,"nodeType":"492","messageId":"493","endLine":29,"endColumn":21},{"ruleId":"490","severity":1,"message":"594","line":31,"column":8,"nodeType":"492","messageId":"493","endLine":31,"endColumn":16},{"ruleId":"490","severity":1,"message":"595","line":43,"column":8,"nodeType":"492","messageId":"493","endLine":43,"endColumn":15},{"ruleId":"490","severity":1,"message":"596","line":45,"column":9,"nodeType":"492","messageId":"493","endLine":45,"endColumn":16},{"ruleId":"490","severity":1,"message":"597","line":46,"column":7,"nodeType":"492","messageId":"493","endLine":46,"endColumn":13},{"ruleId":"490","severity":1,"message":"598","line":50,"column":7,"nodeType":"492","messageId":"493","endLine":50,"endColumn":17},{"ruleId":"599","severity":1,"message":"600","line":165,"column":7,"nodeType":"601","messageId":"602","endLine":166,"endColumn":31},{"ruleId":"599","severity":1,"message":"600","line":167,"column":7,"nodeType":"601","messageId":"602","endLine":170,"endColumn":15},{"ruleId":"599","severity":1,"message":"603","line":176,"column":7,"nodeType":"601","messageId":"604","endLine":177,"endColumn":15},{"ruleId":"513","severity":1,"message":"605","line":194,"column":6,"nodeType":"515","endLine":194,"endColumn":8,"suggestions":"606"},{"ruleId":"490","severity":1,"message":"607","line":232,"column":13,"nodeType":"492","messageId":"493","endLine":232,"endColumn":20},{"ruleId":"552","severity":1,"message":"553","line":816,"column":17,"nodeType":"554","endLine":816,"endColumn":63},{"ruleId":"552","severity":1,"message":"553","line":822,"column":17,"nodeType":"554","endLine":822,"endColumn":65},{"ruleId":"586","severity":1,"message":"587","line":856,"column":15,"nodeType":"554","endLine":861,"endColumn":16},{"ruleId":"586","severity":1,"message":"587","line":862,"column":15,"nodeType":"554","endLine":868,"endColumn":16},{"ruleId":"552","severity":1,"message":"553","line":948,"column":17,"nodeType":"554","endLine":948,"endColumn":63},{"ruleId":"552","severity":1,"message":"553","line":953,"column":15,"nodeType":"554","endLine":953,"endColumn":64},{"ruleId":"586","severity":1,"message":"587","line":1046,"column":13,"nodeType":"554","endLine":1048,"endColumn":14},{"ruleId":"586","severity":1,"message":"587","line":1111,"column":15,"nodeType":"554","endLine":1113,"endColumn":16},{"ruleId":"586","severity":1,"message":"587","line":1127,"column":13,"nodeType":"554","endLine":1129,"endColumn":14},{"ruleId":"586","severity":1,"message":"587","line":1195,"column":15,"nodeType":"554","endLine":1197,"endColumn":16},{"ruleId":"586","severity":1,"message":"587","line":1210,"column":15,"nodeType":"554","endLine":1212,"endColumn":16},{"ruleId":"552","severity":1,"message":"553","line":1251,"column":13,"nodeType":"554","endLine":1251,"endColumn":58},{"ruleId":"552","severity":1,"message":"553","line":1452,"column":17,"nodeType":"554","endLine":1452,"endColumn":52},{"ruleId":"552","severity":1,"message":"553","line":1453,"column":17,"nodeType":"554","endLine":1453,"endColumn":51},{"ruleId":"490","severity":1,"message":"608","line":7,"column":5,"nodeType":"492","messageId":"493","endLine":7,"endColumn":10},{"ruleId":"490","severity":1,"message":"609","line":20,"column":9,"nodeType":"492","messageId":"493","endLine":20,"endColumn":15},{"ruleId":"610","severity":1,"message":"611","line":23,"column":16,"nodeType":"612","messageId":"613","endLine":23,"endColumn":18},{"ruleId":"610","severity":1,"message":"611","line":74,"column":16,"nodeType":"612","messageId":"613","endLine":74,"endColumn":18},{"ruleId":"490","severity":1,"message":"563","line":2,"column":5,"nodeType":"492","messageId":"493","endLine":2,"endColumn":14},{"ruleId":"490","severity":1,"message":"564","line":3,"column":5,"nodeType":"492","messageId":"493","endLine":3,"endColumn":13},{"ruleId":"490","severity":1,"message":"565","line":5,"column":10,"nodeType":"492","messageId":"493","endLine":5,"endColumn":15},{"ruleId":"490","severity":1,"message":"549","line":22,"column":18,"nodeType":"492","messageId":"493","endLine":22,"endColumn":24},{"ruleId":"552","severity":1,"message":"553","line":35,"column":33,"nodeType":"554","endLine":35,"endColumn":60},{"ruleId":"552","severity":1,"message":"553","line":41,"column":33,"nodeType":"554","endLine":41,"endColumn":62},{"ruleId":"490","severity":1,"message":"614","line":2,"column":10,"nodeType":"492","messageId":"493","endLine":2,"endColumn":20},{"ruleId":"490","severity":1,"message":"491","line":4,"column":5,"nodeType":"492","messageId":"493","endLine":4,"endColumn":9},{"ruleId":"490","severity":1,"message":"588","line":5,"column":5,"nodeType":"492","messageId":"493","endLine":5,"endColumn":12},{"ruleId":"490","severity":1,"message":"577","line":6,"column":5,"nodeType":"492","messageId":"493","endLine":6,"endColumn":11},{"ruleId":"490","severity":1,"message":"589","line":7,"column":5,"nodeType":"492","messageId":"493","endLine":7,"endColumn":10},{"ruleId":"490","severity":1,"message":"615","line":15,"column":10,"nodeType":"492","messageId":"493","endLine":15,"endColumn":14},{"ruleId":"490","severity":1,"message":"616","line":15,"column":20,"nodeType":"492","messageId":"493","endLine":15,"endColumn":24},{"ruleId":"490","severity":1,"message":"578","line":16,"column":8,"nodeType":"492","messageId":"493","endLine":16,"endColumn":21},{"ruleId":"617","severity":1,"message":"618","line":49,"column":36,"nodeType":"619","messageId":"620","endLine":49,"endColumn":38},{"ruleId":"617","severity":1,"message":"618","line":65,"column":32,"nodeType":"619","messageId":"620","endLine":65,"endColumn":34},{"ruleId":"617","severity":1,"message":"618","line":74,"column":37,"nodeType":"619","messageId":"620","endLine":74,"endColumn":39},{"ruleId":"617","severity":1,"message":"618","line":80,"column":23,"nodeType":"619","messageId":"620","endLine":80,"endColumn":25},{"ruleId":"617","severity":1,"message":"618","line":82,"column":31,"nodeType":"619","messageId":"620","endLine":82,"endColumn":33},{"ruleId":"610","severity":1,"message":"611","line":86,"column":32,"nodeType":"612","messageId":"613","endLine":86,"endColumn":34},{"ruleId":"513","severity":1,"message":"621","line":104,"column":8,"nodeType":"515","endLine":104,"endColumn":10,"suggestions":"622"},{"ruleId":"617","severity":1,"message":"618","line":114,"column":39,"nodeType":"619","messageId":"620","endLine":114,"endColumn":41},{"ruleId":"617","severity":1,"message":"618","line":115,"column":49,"nodeType":"619","messageId":"620","endLine":115,"endColumn":51},{"ruleId":"610","severity":1,"message":"623","line":124,"column":39,"nodeType":"612","messageId":"613","endLine":124,"endColumn":41},{"ruleId":"617","severity":1,"message":"618","line":137,"column":39,"nodeType":"619","messageId":"620","endLine":137,"endColumn":41},{"ruleId":"513","severity":1,"message":"624","line":152,"column":8,"nodeType":"515","endLine":152,"endColumn":20,"suggestions":"625"},{"ruleId":"586","severity":1,"message":"626","line":202,"column":21,"nodeType":"554","endLine":207,"endColumn":22},{"ruleId":"490","severity":1,"message":"563","line":2,"column":5,"nodeType":"492","messageId":"493","endLine":2,"endColumn":14},{"ruleId":"490","severity":1,"message":"564","line":3,"column":5,"nodeType":"492","messageId":"493","endLine":3,"endColumn":13},{"ruleId":"490","severity":1,"message":"491","line":6,"column":18,"nodeType":"492","messageId":"493","endLine":6,"endColumn":22},{"ruleId":"490","severity":1,"message":"547","line":6,"column":24,"nodeType":"492","messageId":"493","endLine":6,"endColumn":34},{"ruleId":"490","severity":1,"message":"627","line":23,"column":9,"nodeType":"492","messageId":"493","endLine":23,"endColumn":16},{"ruleId":"490","severity":1,"message":"549","line":23,"column":18,"nodeType":"492","messageId":"493","endLine":23,"endColumn":24},{"ruleId":"490","severity":1,"message":"628","line":5,"column":28,"nodeType":"492","messageId":"493","endLine":5,"endColumn":33},{"ruleId":"490","severity":1,"message":"629","line":5,"column":42,"nodeType":"492","messageId":"493","endLine":5,"endColumn":45},{"ruleId":"490","severity":1,"message":"630","line":30,"column":18,"nodeType":"492","messageId":"493","endLine":30,"endColumn":22},{"ruleId":"552","severity":1,"message":"553","line":68,"column":28,"nodeType":"554","endLine":68,"endColumn":57},{"ruleId":"552","severity":1,"message":"553","line":70,"column":28,"nodeType":"554","endLine":70,"endColumn":57},{"ruleId":"552","severity":1,"message":"553","line":72,"column":28,"nodeType":"554","endLine":72,"endColumn":57},{"ruleId":"552","severity":1,"message":"553","line":74,"column":28,"nodeType":"554","endLine":74,"endColumn":57},{"ruleId":"552","severity":1,"message":"553","line":89,"column":21,"nodeType":"554","endLine":96,"endColumn":23},{"ruleId":"552","severity":1,"message":"553","line":98,"column":25,"nodeType":"554","endLine":98,"endColumn":45},{"ruleId":"610","severity":1,"message":"623","line":159,"column":32,"nodeType":"612","messageId":"613","endLine":159,"endColumn":34},{"ruleId":"513","severity":1,"message":"631","line":240,"column":8,"nodeType":"515","endLine":240,"endColumn":20,"suggestions":"632"},{"ruleId":"490","severity":1,"message":"633","line":3,"column":10,"nodeType":"492","messageId":"493","endLine":3,"endColumn":23},{"ruleId":"490","severity":1,"message":"634","line":16,"column":8,"nodeType":"492","messageId":"493","endLine":16,"endColumn":17},{"ruleId":"490","severity":1,"message":"496","line":8,"column":10,"nodeType":"492","messageId":"493","endLine":8,"endColumn":30},{"ruleId":"490","severity":1,"message":"580","line":18,"column":9,"nodeType":"492","messageId":"493","endLine":18,"endColumn":15},{"ruleId":"542","replacedBy":"635"},{"ruleId":"544","replacedBy":"636"},{"ruleId":"490","severity":1,"message":"637","line":2,"column":10,"nodeType":"492","messageId":"493","endLine":2,"endColumn":15},{"ruleId":"490","severity":1,"message":"577","line":2,"column":17,"nodeType":"492","messageId":"493","endLine":2,"endColumn":23},{"ruleId":"490","severity":1,"message":"638","line":2,"column":48,"nodeType":"492","messageId":"493","endLine":2,"endColumn":56},{"ruleId":"490","severity":1,"message":"639","line":2,"column":58,"nodeType":"492","messageId":"493","endLine":2,"endColumn":61},{"ruleId":"490","severity":1,"message":"640","line":2,"column":63,"nodeType":"492","messageId":"493","endLine":2,"endColumn":66},{"ruleId":"490","severity":1,"message":"495","line":2,"column":68,"nodeType":"492","messageId":"493","endLine":2,"endColumn":72},{"ruleId":"490","severity":1,"message":"641","line":3,"column":8,"nodeType":"492","messageId":"493","endLine":3,"endColumn":17},{"ruleId":"490","severity":1,"message":"642","line":6,"column":32,"nodeType":"492","messageId":"493","endLine":6,"endColumn":47},{"ruleId":"490","severity":1,"message":"643","line":11,"column":8,"nodeType":"492","messageId":"493","endLine":11,"endColumn":13},{"ruleId":"490","severity":1,"message":"644","line":12,"column":8,"nodeType":"492","messageId":"493","endLine":12,"endColumn":14},{"ruleId":"490","severity":1,"message":"573","line":15,"column":8,"nodeType":"492","messageId":"493","endLine":15,"endColumn":11},{"ruleId":"490","severity":1,"message":"645","line":16,"column":8,"nodeType":"492","messageId":"493","endLine":16,"endColumn":14},{"ruleId":"490","severity":1,"message":"646","line":17,"column":8,"nodeType":"492","messageId":"493","endLine":17,"endColumn":12},{"ruleId":"490","severity":1,"message":"596","line":23,"column":9,"nodeType":"492","messageId":"493","endLine":23,"endColumn":16},{"ruleId":"490","severity":1,"message":"580","line":24,"column":9,"nodeType":"492","messageId":"493","endLine":24,"endColumn":15},{"ruleId":"490","severity":1,"message":"597","line":25,"column":7,"nodeType":"492","messageId":"493","endLine":25,"endColumn":13},{"ruleId":"490","severity":1,"message":"647","line":28,"column":5,"nodeType":"492","messageId":"493","endLine":28,"endColumn":12},{"ruleId":"490","severity":1,"message":"648","line":29,"column":5,"nodeType":"492","messageId":"493","endLine":29,"endColumn":17},{"ruleId":"490","severity":1,"message":"649","line":30,"column":5,"nodeType":"492","messageId":"493","endLine":30,"endColumn":8},{"ruleId":"490","severity":1,"message":"649","line":92,"column":61,"nodeType":"492","messageId":"493","endLine":92,"endColumn":64},{"ruleId":"490","severity":1,"message":"650","line":92,"column":66,"nodeType":"492","messageId":"493","endLine":92,"endColumn":75},{"ruleId":"586","severity":1,"message":"587","line":277,"column":15,"nodeType":"554","endLine":283,"endColumn":16},{"ruleId":"490","severity":1,"message":"651","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"563","line":1,"column":28,"nodeType":"492","messageId":"493","endLine":1,"endColumn":37},{"ruleId":"490","severity":1,"message":"564","line":1,"column":39,"nodeType":"492","messageId":"493","endLine":1,"endColumn":47},{"ruleId":"513","severity":1,"message":"652","line":63,"column":6,"nodeType":"515","endLine":63,"endColumn":26,"suggestions":"653"},{"ruleId":"490","severity":1,"message":"641","line":9,"column":8,"nodeType":"492","messageId":"493","endLine":9,"endColumn":17},{"ruleId":"490","severity":1,"message":"496","line":10,"column":10,"nodeType":"492","messageId":"493","endLine":10,"endColumn":30},{"ruleId":"490","severity":1,"message":"654","line":10,"column":32,"nodeType":"492","messageId":"493","endLine":10,"endColumn":47},{"ruleId":"490","severity":1,"message":"655","line":14,"column":8,"nodeType":"492","messageId":"493","endLine":14,"endColumn":16},{"ruleId":"490","severity":1,"message":"615","line":19,"column":10,"nodeType":"492","messageId":"493","endLine":19,"endColumn":14},{"ruleId":"656","severity":1,"message":"657","line":85,"column":25,"nodeType":"658","messageId":"659","endLine":114,"endColumn":26},{"ruleId":"599","severity":1,"message":"600","line":103,"column":29,"nodeType":"601","messageId":"602","endLine":104,"endColumn":68},{"ruleId":"599","severity":1,"message":"600","line":105,"column":29,"nodeType":"601","messageId":"602","endLine":112,"endColumn":39},{"ruleId":"490","severity":1,"message":"660","line":290,"column":49,"nodeType":"492","messageId":"493","endLine":290,"endColumn":63},{"ruleId":"490","severity":1,"message":"661","line":290,"column":65,"nodeType":"492","messageId":"493","endLine":290,"endColumn":79},{"ruleId":"490","severity":1,"message":"662","line":24,"column":7,"nodeType":"492","messageId":"493","endLine":24,"endColumn":19},{"ruleId":"490","severity":1,"message":"563","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":26},{"ruleId":"490","severity":1,"message":"564","line":1,"column":28,"nodeType":"492","messageId":"493","endLine":1,"endColumn":36},{"ruleId":"490","severity":1,"message":"491","line":3,"column":18,"nodeType":"492","messageId":"493","endLine":3,"endColumn":22},{"ruleId":"490","severity":1,"message":"547","line":3,"column":24,"nodeType":"492","messageId":"493","endLine":3,"endColumn":34},{"ruleId":"490","severity":1,"message":"577","line":2,"column":17,"nodeType":"492","messageId":"493","endLine":2,"endColumn":23},{"ruleId":"490","severity":1,"message":"663","line":2,"column":40,"nodeType":"492","messageId":"493","endLine":2,"endColumn":47},{"ruleId":"490","severity":1,"message":"497","line":3,"column":32,"nodeType":"492","messageId":"493","endLine":3,"endColumn":44},{"ruleId":"490","severity":1,"message":"664","line":10,"column":10,"nodeType":"492","messageId":"493","endLine":10,"endColumn":22},{"ruleId":"490","severity":1,"message":"665","line":13,"column":10,"nodeType":"492","messageId":"493","endLine":13,"endColumn":23},{"ruleId":"490","severity":1,"message":"615","line":14,"column":10,"nodeType":"492","messageId":"493","endLine":14,"endColumn":14},{"ruleId":"490","severity":1,"message":"616","line":14,"column":20,"nodeType":"492","messageId":"493","endLine":14,"endColumn":24},{"ruleId":"490","severity":1,"message":"666","line":14,"column":26,"nodeType":"492","messageId":"493","endLine":14,"endColumn":28},{"ruleId":"490","severity":1,"message":"667","line":17,"column":20,"nodeType":"492","messageId":"493","endLine":17,"endColumn":29},{"ruleId":"490","severity":1,"message":"597","line":19,"column":7,"nodeType":"492","messageId":"493","endLine":19,"endColumn":13},{"ruleId":"490","severity":1,"message":"668","line":354,"column":11,"nodeType":"492","messageId":"493","endLine":354,"endColumn":17},{"ruleId":"669","severity":1,"message":"670","line":367,"column":69,"nodeType":"671","messageId":"613","endLine":367,"endColumn":76},{"ruleId":"490","severity":1,"message":"672","line":422,"column":19,"nodeType":"492","messageId":"493","endLine":422,"endColumn":26},{"ruleId":"490","severity":1,"message":"673","line":423,"column":9,"nodeType":"492","messageId":"493","endLine":423,"endColumn":13},{"ruleId":"586","severity":1,"message":"587","line":550,"column":69,"nodeType":"554","endLine":550,"endColumn":104},{"ruleId":"490","severity":1,"message":"615","line":4,"column":10,"nodeType":"492","messageId":"493","endLine":4,"endColumn":14},{"ruleId":"490","severity":1,"message":"666","line":4,"column":20,"nodeType":"492","messageId":"493","endLine":4,"endColumn":22},{"ruleId":"490","severity":1,"message":"674","line":309,"column":15,"nodeType":"492","messageId":"493","endLine":309,"endColumn":19},{"ruleId":"656","severity":1,"message":"657","line":329,"column":9,"nodeType":"658","messageId":"659","endLine":336,"endColumn":10},{"ruleId":"490","severity":1,"message":"675","line":355,"column":13,"nodeType":"492","messageId":"493","endLine":355,"endColumn":17},{"ruleId":"490","severity":1,"message":"676","line":356,"column":13,"nodeType":"492","messageId":"493","endLine":356,"endColumn":17},{"ruleId":"490","severity":1,"message":"677","line":507,"column":15,"nodeType":"492","messageId":"493","endLine":507,"endColumn":25},{"ruleId":"490","severity":1,"message":"678","line":551,"column":17,"nodeType":"492","messageId":"493","endLine":551,"endColumn":26},{"ruleId":"490","severity":1,"message":"679","line":722,"column":11,"nodeType":"492","messageId":"493","endLine":722,"endColumn":22},{"ruleId":"680","severity":1,"message":"681","line":901,"column":9,"nodeType":"682","messageId":"683","endLine":901,"endColumn":15},{"ruleId":"490","severity":1,"message":"579","line":16,"column":8,"nodeType":"492","messageId":"493","endLine":16,"endColumn":24},{"ruleId":"490","severity":1,"message":"615","line":17,"column":10,"nodeType":"492","messageId":"493","endLine":17,"endColumn":14},{"ruleId":"490","severity":1,"message":"580","line":23,"column":9,"nodeType":"492","messageId":"493","endLine":23,"endColumn":15},{"ruleId":"490","severity":1,"message":"684","line":381,"column":142,"nodeType":"492","messageId":"493","endLine":381,"endColumn":148},{"ruleId":"490","severity":1,"message":"685","line":381,"column":150,"nodeType":"492","messageId":"493","endLine":381,"endColumn":160},{"ruleId":"490","severity":1,"message":"686","line":385,"column":7,"nodeType":"492","messageId":"493","endLine":385,"endColumn":17},{"ruleId":"490","severity":1,"message":"608","line":6,"column":5,"nodeType":"492","messageId":"493","endLine":6,"endColumn":10},{"ruleId":"610","severity":1,"message":"611","line":18,"column":16,"nodeType":"612","messageId":"613","endLine":18,"endColumn":18},{"ruleId":"610","severity":1,"message":"611","line":61,"column":16,"nodeType":"612","messageId":"613","endLine":61,"endColumn":18},{"ruleId":"610","severity":1,"message":"611","line":95,"column":16,"nodeType":"612","messageId":"613","endLine":95,"endColumn":18},{"ruleId":"490","severity":1,"message":"578","line":13,"column":8,"nodeType":"492","messageId":"493","endLine":13,"endColumn":21},{"ruleId":"490","severity":1,"message":"687","line":14,"column":8,"nodeType":"492","messageId":"493","endLine":14,"endColumn":20},{"ruleId":"490","severity":1,"message":"608","line":3,"column":5,"nodeType":"492","messageId":"493","endLine":3,"endColumn":10},{"ruleId":"610","severity":1,"message":"611","line":94,"column":16,"nodeType":"612","messageId":"613","endLine":94,"endColumn":18},{"ruleId":"688","severity":1,"message":"689","line":1,"column":1,"nodeType":"690","endLine":256,"endColumn":3},{"ruleId":"490","severity":1,"message":"577","line":6,"column":10,"nodeType":"492","messageId":"493","endLine":6,"endColumn":16},{"ruleId":"490","severity":1,"message":"548","line":6,"column":36,"nodeType":"492","messageId":"493","endLine":6,"endColumn":44},{"ruleId":"490","severity":1,"message":"691","line":7,"column":10,"nodeType":"492","messageId":"493","endLine":7,"endColumn":22},{"ruleId":"490","severity":1,"message":"549","line":25,"column":18,"nodeType":"492","messageId":"493","endLine":25,"endColumn":24},{"ruleId":"490","severity":1,"message":"692","line":29,"column":12,"nodeType":"492","messageId":"493","endLine":29,"endColumn":19},{"ruleId":"490","severity":1,"message":"693","line":29,"column":21,"nodeType":"492","messageId":"493","endLine":29,"endColumn":31},{"ruleId":"552","severity":1,"message":"553","line":54,"column":24,"nodeType":"554","endLine":54,"endColumn":49},{"ruleId":"552","severity":1,"message":"553","line":56,"column":24,"nodeType":"554","endLine":56,"endColumn":49},{"ruleId":"552","severity":1,"message":"553","line":58,"column":24,"nodeType":"554","endLine":58,"endColumn":49},{"ruleId":"552","severity":1,"message":"553","line":60,"column":24,"nodeType":"554","endLine":60,"endColumn":49},{"ruleId":"513","severity":1,"message":"694","line":66,"column":5,"nodeType":"492","endLine":66,"endColumn":14,"suggestions":"695"},{"ruleId":"490","severity":1,"message":"696","line":60,"column":13,"nodeType":"492","messageId":"493","endLine":60,"endColumn":22},{"ruleId":"490","severity":1,"message":"575","line":4,"column":5,"nodeType":"492","messageId":"493","endLine":4,"endColumn":11},{"ruleId":"490","severity":1,"message":"576","line":12,"column":8,"nodeType":"492","messageId":"493","endLine":12,"endColumn":14},{"ruleId":"490","severity":1,"message":"577","line":13,"column":8,"nodeType":"492","messageId":"493","endLine":13,"endColumn":14},{"ruleId":"490","severity":1,"message":"578","line":14,"column":8,"nodeType":"492","messageId":"493","endLine":14,"endColumn":21},{"ruleId":"490","severity":1,"message":"579","line":15,"column":8,"nodeType":"492","messageId":"493","endLine":15,"endColumn":24},{"ruleId":"490","severity":1,"message":"615","line":16,"column":10,"nodeType":"492","messageId":"493","endLine":16,"endColumn":14},{"ruleId":"490","severity":1,"message":"498","line":17,"column":8,"nodeType":"492","messageId":"493","endLine":17,"endColumn":15},{"ruleId":"490","severity":1,"message":"697","line":18,"column":8,"nodeType":"492","messageId":"493","endLine":18,"endColumn":14},{"ruleId":"490","severity":1,"message":"502","line":19,"column":8,"nodeType":"492","messageId":"493","endLine":19,"endColumn":11},{"ruleId":"490","severity":1,"message":"503","line":20,"column":8,"nodeType":"492","messageId":"493","endLine":20,"endColumn":11},{"ruleId":"490","severity":1,"message":"504","line":21,"column":8,"nodeType":"492","messageId":"493","endLine":21,"endColumn":13},{"ruleId":"490","severity":1,"message":"664","line":22,"column":10,"nodeType":"492","messageId":"493","endLine":22,"endColumn":22},{"ruleId":"490","severity":1,"message":"698","line":23,"column":8,"nodeType":"492","messageId":"493","endLine":23,"endColumn":14},{"ruleId":"490","severity":1,"message":"580","line":26,"column":9,"nodeType":"492","messageId":"493","endLine":26,"endColumn":15},{"ruleId":"490","severity":1,"message":"581","line":40,"column":15,"nodeType":"492","messageId":"493","endLine":40,"endColumn":21},{"ruleId":"490","severity":1,"message":"582","line":40,"column":23,"nodeType":"492","messageId":"493","endLine":40,"endColumn":28},{"ruleId":"669","severity":1,"message":"699","line":129,"column":13,"nodeType":"671","messageId":"613","endLine":129,"endColumn":26},{"ruleId":"490","severity":1,"message":"583","line":143,"column":13,"nodeType":"492","messageId":"493","endLine":143,"endColumn":26},{"ruleId":"513","severity":1,"message":"700","line":27,"column":8,"nodeType":"515","endLine":27,"endColumn":10,"suggestions":"701"},{"ruleId":"490","severity":1,"message":"564","line":1,"column":17,"nodeType":"492","messageId":"493","endLine":1,"endColumn":25},{"ruleId":"490","severity":1,"message":"702","line":8,"column":8,"nodeType":"492","messageId":"493","endLine":8,"endColumn":17},{"ruleId":"703","severity":1,"message":"704","line":16,"column":20,"nodeType":"705","messageId":"613","endLine":16,"endColumn":23},{"ruleId":"490","severity":1,"message":"563","line":2,"column":27,"nodeType":"492","messageId":"493","endLine":2,"endColumn":36},{"ruleId":"490","severity":1,"message":"615","line":7,"column":14,"nodeType":"492","messageId":"493","endLine":7,"endColumn":18},"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Tooltip' is defined but never used.","'Spin' is defined but never used.","'createFromIconfontCN' is defined but never used.","'SyncOutlined' is defined but never used.","'MyModal' is defined but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setUnits' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'echarsData', 'getOption', and 'mellaMeasureValue'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.","ArrayExpression",["706"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["707"],"'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["708","709"],"Unnecessary escape character: \\-.",["710","711"],["712","713"],["714","715"],["716","717"],["718","719"],["720","721"],["722","723"],["724","725"],["726","727"],["728","729"],["730","731"],["732","733"],["734","735"],["736","737"],["738","739"],"no-native-reassign",["740"],"no-negated-in-lhs",["741"],"'useRef' is defined but never used.","'PageHeader' is defined but never used.","'Carousel' is defined but never used.","'Header' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["742"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["743"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["744"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["745"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'_' is defined but never used.","'mellaConnectStatus' is assigned a value but never used.",["740"],["741"],["740"],["741"],"'Select' is defined but never used.","'dui' is defined but never used.","'FetchEszVet' is defined but never used.","'Switch' is defined but never used.","'Slider' is defined but never used.","'Button' is defined but never used.","'electronStore' is defined but never used.","'temporaryStorage' is defined but never used.","'Option' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Popover' is defined but never used.","'Modal' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'SubMenu' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'allPetList' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["746"],"'bluData' is assigned a value but never used.","'token' is assigned a value but never used.","'header' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useHistory' is defined but never used.","'mTop' is defined but never used.","'MTop' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["747"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["748"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Content' is assigned a value but never used.","'Space' is defined but never used.","'Tag' is defined but never used.","'memo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["749"],"'BrowserRouter' is defined but never used.","'Praviders' is defined but never used.",["740"],["741"],"'Input' is defined but never used.","'Calendar' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Draggable' is defined but never used.","'LoadingOutlined' is defined but never used.","'horse' is defined but never used.","'rabbit' is defined but never used.","'female' is defined but never used.","'male' is defined but never used.","'storage' is assigned a value but never used.","'errPatientId' is assigned a value but never used.","'url' is assigned a value but never used.","'userImage' is assigned a value but never used.","'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["750"],"'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'selectDevice' is assigned a value but never used.","'BackTop' is defined but never used.","'fetchRequest' is defined but never used.","'fetchRequest1' is defined but never used.","'pX' is defined but never used.","'addQRCode' is defined but never used.","'isCode' is assigned a value but never used.","no-dupe-keys","Duplicate key 'opacity'.","ObjectExpression","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","'temp' is assigned a value but never used.","'beep' is assigned a value but never used.","'unit' is assigned a value but never used.","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.","'SelectionBox' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'PlusOutlined' is defined but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["751"],"'chooseNum' is assigned a value but never used.","'parent' is defined but never used.","'moment' is defined but never used.","Duplicate key 'connectionKey'.","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["752"],"'PropTypes' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern",{"desc":"753","fix":"754"},{"desc":"755","fix":"756"},{"messageId":"757","fix":"758","desc":"759"},{"messageId":"760","fix":"761","desc":"762"},{"messageId":"757","fix":"763","desc":"759"},{"messageId":"760","fix":"764","desc":"762"},{"messageId":"757","fix":"765","desc":"759"},{"messageId":"760","fix":"766","desc":"762"},{"messageId":"757","fix":"767","desc":"759"},{"messageId":"760","fix":"768","desc":"762"},{"messageId":"757","fix":"769","desc":"759"},{"messageId":"760","fix":"770","desc":"762"},{"messageId":"757","fix":"771","desc":"759"},{"messageId":"760","fix":"772","desc":"762"},{"messageId":"757","fix":"773","desc":"759"},{"messageId":"760","fix":"774","desc":"762"},{"messageId":"757","fix":"775","desc":"759"},{"messageId":"760","fix":"776","desc":"762"},{"messageId":"757","fix":"777","desc":"759"},{"messageId":"760","fix":"778","desc":"762"},{"messageId":"757","fix":"779","desc":"759"},{"messageId":"760","fix":"780","desc":"762"},{"messageId":"757","fix":"781","desc":"759"},{"messageId":"760","fix":"782","desc":"762"},{"messageId":"757","fix":"783","desc":"759"},{"messageId":"760","fix":"784","desc":"762"},{"messageId":"757","fix":"785","desc":"759"},{"messageId":"760","fix":"786","desc":"762"},{"messageId":"757","fix":"787","desc":"759"},{"messageId":"760","fix":"788","desc":"762"},{"messageId":"757","fix":"789","desc":"759"},{"messageId":"760","fix":"790","desc":"762"},{"messageId":"757","fix":"791","desc":"759"},{"messageId":"760","fix":"792","desc":"762"},"no-global-assign","no-unsafe-negation",{"desc":"793","fix":"794"},{"desc":"795","fix":"796"},{"desc":"797","fix":"798"},{"desc":"799","fix":"800"},{"desc":"801","fix":"802"},{"desc":"803","fix":"804"},{"desc":"805","fix":"806"},{"desc":"807","fix":"808"},{"desc":"809","fix":"810"},{"desc":"811","fix":"812"},{"desc":"813","fix":"814"},"Update the dependencies array to be: [echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",{"range":"815","text":"816"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"817","text":"818"},"removeEscape",{"range":"819","text":"820"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"821","text":"822"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"823","text":"820"},{"range":"824","text":"822"},{"range":"825","text":"820"},{"range":"826","text":"822"},{"range":"827","text":"820"},{"range":"828","text":"822"},{"range":"829","text":"820"},{"range":"830","text":"822"},{"range":"831","text":"820"},{"range":"832","text":"822"},{"range":"833","text":"820"},{"range":"834","text":"822"},{"range":"835","text":"820"},{"range":"836","text":"822"},{"range":"837","text":"820"},{"range":"838","text":"822"},{"range":"839","text":"820"},{"range":"840","text":"822"},{"range":"841","text":"820"},{"range":"842","text":"822"},{"range":"843","text":"820"},{"range":"844","text":"822"},{"range":"845","text":"820"},{"range":"846","text":"822"},{"range":"847","text":"820"},{"range":"848","text":"822"},{"range":"849","text":"820"},{"range":"850","text":"822"},{"range":"851","text":"820"},{"range":"852","text":"822"},"Update the dependencies array to be: [finishScan, inputIndex, newData, patientId]",{"range":"853","text":"854"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"855","text":"856"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"857","text":"858"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"859","text":"860"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"861","text":"862"},"Update the dependencies array to be: [listDate]",{"range":"863","text":"864"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"865","text":"866"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"867","text":"868"},"Update the dependencies array to be: [hardwareList, selectHardwareType]",{"range":"869","text":"870"},"Add dependencies array: [callBack, timers]",{"range":"871","text":"872"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"873","text":"874"},[5519,5536],"[echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",[6119,6139],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[25342,25343],"",[25342,25342],"\\",[25448,25449],[25448,25448],[26393,26394],[26393,26393],[26499,26500],[26499,26499],[27478,27479],[27478,27478],[27584,27585],[27584,27584],[29145,29146],[29145,29145],[29251,29252],[29251,29251],[30158,30159],[30158,30158],[30264,30265],[30264,30264],[31282,31283],[31282,31282],[31388,31389],[31388,31388],[49726,49727],[49726,49726],[49832,49833],[49832,49832],[50528,50529],[50528,50528],[50634,50635],[50634,50634],[6285,6308],"[finishScan, inputIndex, newData, patientId]",[6779,6798],"[inputIndex, rulerConfirmCount]",[7539,7577],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[8011,8022],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[6407,6409],"[_noUSB, _send, blueSearch]",[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]",[8363,8375],"[getPetTemperatureData, petMessage]",[2600,2620],"[hardwareList, selectHardwareType]",[2131,2131],", [callBack, timers]",[885,887],"[initSelectVale, listArr]"]