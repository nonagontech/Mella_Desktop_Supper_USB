[{"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx":"2","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"3","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"4","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"5","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js":"6","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js":"7","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectMella\\SelectMella.jsx":"8","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectLocation\\VerifyOrganizationInformation.jsx":"9","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\AddYuding.jsx":"10","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx":"11","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\forgotPassword\\ForgotPassword.jsx":"12","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx":"13","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx":"14","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx":"15","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx":"16","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx":"17","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\settings\\Settings.jsx":"18","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx":"19","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\NewOrganization.jsx":"20","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil2.js":"21","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js":"22","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\px.js":"23","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js":"24","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js":"25","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js":"26","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx":"27","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\current.js":"28","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js":"29","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js":"30","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx":"31","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"32","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx":"33","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx":"34","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx":"35","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\userAction.js":"36","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil3.js":"37","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"38","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"39","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js":"40","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx":"41","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js":"42","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"43","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx":"44","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\apiKey\\APIKey.jsx":"45","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"46","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectScheduledExam.jsx":"47","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx":"48","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx":"49","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx":"50","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx":"51","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx":"52","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx":"53","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx":"54","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js":"55","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\imgArray.js":"56","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js":"57","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx":"58","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js":"59","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx":"60","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx":"61","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js":"62","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\Fetch_token.js":"63"},{"size":30530,"mtime":1655723830881,"results":"64","hashOfConfig":"65"},{"size":5140,"mtime":1655723373494,"results":"66","hashOfConfig":"65"},{"size":14470,"mtime":1655723277541,"results":"67","hashOfConfig":"65"},{"size":11016,"mtime":1655380842375,"results":"68","hashOfConfig":"65"},{"size":59739,"mtime":1655723373523,"results":"69","hashOfConfig":"65"},{"size":356,"mtime":1655467295857,"results":"70","hashOfConfig":"65"},{"size":52228,"mtime":1655168677431,"results":"71","hashOfConfig":"65"},{"size":3973,"mtime":1655168677493,"results":"72","hashOfConfig":"65"},{"size":10192,"mtime":1655168677490,"results":"73","hashOfConfig":"65"},{"size":12945,"mtime":1655467295802,"results":"74","hashOfConfig":"65"},{"size":141874,"mtime":1655377730766,"results":"75","hashOfConfig":"65"},{"size":12531,"mtime":1655168677496,"results":"76","hashOfConfig":"65"},{"size":7651,"mtime":1655168677499,"results":"77","hashOfConfig":"65"},{"size":2615,"mtime":1655168677801,"results":"78","hashOfConfig":"65"},{"size":6453,"mtime":1655168677397,"results":"79","hashOfConfig":"65"},{"size":17966,"mtime":1655168677405,"results":"80","hashOfConfig":"65"},{"size":13197,"mtime":1655168677400,"results":"81","hashOfConfig":"65"},{"size":26733,"mtime":1655168677477,"results":"82","hashOfConfig":"65"},{"size":12616,"mtime":1655168677474,"results":"83","hashOfConfig":"65"},{"size":16247,"mtime":1655168677470,"results":"84","hashOfConfig":"65"},{"size":2667,"mtime":1655168677528,"results":"85","hashOfConfig":"65"},{"size":152,"mtime":1655168677794,"results":"86","hashOfConfig":"65"},{"size":3002,"mtime":1655168677812,"results":"87","hashOfConfig":"65"},{"size":343,"mtime":1655168677793,"results":"88","hashOfConfig":"65"},{"size":2445,"mtime":1655168677803,"results":"89","hashOfConfig":"65"},{"size":18925,"mtime":1655168677533,"results":"90","hashOfConfig":"65"},{"size":1410,"mtime":1655168677807,"results":"91","hashOfConfig":"65"},{"size":1150,"mtime":1655427981745,"results":"92","hashOfConfig":"65"},{"size":81,"mtime":1655168677532,"results":"93","hashOfConfig":"65"},{"size":3126,"mtime":1655168677530,"results":"94","hashOfConfig":"65"},{"size":14708,"mtime":1655467295809,"results":"95","hashOfConfig":"65"},{"size":846,"mtime":1655168677772,"results":"96","hashOfConfig":"65"},{"size":6248,"mtime":1655467295815,"results":"97","hashOfConfig":"65"},{"size":4482,"mtime":1655723373498,"results":"98","hashOfConfig":"65"},{"size":3371,"mtime":1655168677813,"results":"99","hashOfConfig":"65"},{"size":293,"mtime":1655467295883,"results":"100","hashOfConfig":"65"},{"size":2624,"mtime":1655168677529,"results":"101","hashOfConfig":"65"},{"size":9771,"mtime":1655723373531,"results":"102","hashOfConfig":"65"},{"size":2311,"mtime":1655359312401,"results":"103","hashOfConfig":"65"},{"size":58,"mtime":1655467295877,"results":"104","hashOfConfig":"65"},{"size":1273,"mtime":1655467441863,"results":"105","hashOfConfig":"65"},{"size":3044,"mtime":1655168677819,"results":"106","hashOfConfig":"65"},{"size":8196,"mtime":1655168677810,"results":"107","hashOfConfig":"65"},{"size":3737,"mtime":1655168677392,"results":"108","hashOfConfig":"65"},{"size":8762,"mtime":1655168677387,"results":"109","hashOfConfig":"65"},{"size":5178,"mtime":1655168677434,"results":"110","hashOfConfig":"65"},{"size":39476,"mtime":1655467295805,"results":"111","hashOfConfig":"65"},{"size":39743,"mtime":1655168677418,"results":"112","hashOfConfig":"65"},{"size":1678,"mtime":1655168677403,"results":"113","hashOfConfig":"65"},{"size":4706,"mtime":1655168677413,"results":"114","hashOfConfig":"65"},{"size":6007,"mtime":1655168677501,"results":"115","hashOfConfig":"65"},{"size":3459,"mtime":1655168677395,"results":"116","hashOfConfig":"65"},{"size":11451,"mtime":1655168677459,"results":"117","hashOfConfig":"65"},{"size":15939,"mtime":1655168677454,"results":"118","hashOfConfig":"65"},{"size":91,"mtime":1655467295880,"results":"119","hashOfConfig":"65"},{"size":11452,"mtime":1655168677771,"results":"120","hashOfConfig":"65"},{"size":4449,"mtime":1655168677816,"results":"121","hashOfConfig":"65"},{"size":7652,"mtime":1655467295863,"results":"122","hashOfConfig":"65"},{"size":71,"mtime":1655257026122,"results":"123","hashOfConfig":"65"},{"size":4495,"mtime":1655379990556,"results":"124","hashOfConfig":"65"},{"size":12104,"mtime":1655467295852,"results":"125","hashOfConfig":"65"},{"size":1451,"mtime":1655168677805,"results":"126","hashOfConfig":"65"},{"size":3717,"mtime":1655168677531,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wlgw0n",{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"133"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"133"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"133"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"133"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"133"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"133"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"133"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"133"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"133"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"133"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"133"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"133"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx",["270","271","272","273","274","275","276","277","278","279"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx",["280","281","282"],"import React, { Component, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { px } from '../../utils/px'\r\nimport mellaPro from './../../assets/img/hardList-mella.png'\r\nimport biggie from './../../assets/img/hardList-biggie.png'\r\nimport rfid from './../../assets/img/hardList-rfid.png'\r\nimport tape from './../../assets/img/hardList-tape.png'\r\nimport add from './../../assets/img/hardList-add.png'\r\nimport maeBowl from './../../assets/img/hardList-maeBowl.png'\r\nimport otterEQ from './../../assets/img/hardList-otterEQ.png'\r\nimport { selectHardwareInfoFun, setSelectHardwareType, setMenuNum } from './../../store/actions'\r\nimport electronStore from '../../utils/electronStore'\r\n\r\nlet storage = window.localStorage;\r\n//devicesTypeList是index传过来的硬件种类以及种类下的所有硬件\r\nconst HardWareTypeUI = ({ bodyHeight, devicesTypeList, selectHardwareInfoFun, setSelectHardwareType, selectHardwareType, setMenuNum, menuNum }) => {\r\n  //根据左侧列表的设备类型，获取当前选中的设备类型下选中的硬件,先看本地有没有存,没存就拿第一个展示\r\n  // useEffect(() => {\r\n  //   let Index = null\r\n  //   for (let i = 0; i < devicesTypeList.length; i++) {\r\n  //     const element = devicesTypeList[i];\r\n  //     if (element.type === selectHardwareType) {\r\n  //       Index = i\r\n  //       break\r\n  //     }\r\n  //   }\r\n  //   if (Index === null) {\r\n  //     return\r\n  //   }\r\n\r\n  //   let hard = devicesTypeList[Index]\r\n  //   if (hard && hard.type !== 'add') {\r\n  //     let devicesInfo = electronStore.get(`${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`)\r\n\r\n\r\n\r\n\r\n  //     if (!devicesInfo) {\r\n  //       devicesInfo = hard.devices[0]\r\n  //       electronStore.set(`${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`, devicesInfo)\r\n  //     } else {\r\n\r\n  //       let sameFlag = false\r\n  //       console.log('============', hard.devices, devicesInfo);\r\n  //       for (let i = 0; i < hard.devices.length; i++) {\r\n  //         const element = hard.devices[i];\r\n  //         if (element.mac === devicesInfo.mac && element.name === devicesInfo.name) {\r\n  //           sameFlag = true\r\n  //           break\r\n  //         }\r\n  //       }\r\n  //       if (!sameFlag) {\r\n  //         devicesInfo = hard.devices[0]\r\n  //         electronStore.set(`${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`, devicesInfo)\r\n  //       }\r\n  //     }\r\n\r\n  //     console.log('保存的折本信息', devicesInfo);;\r\n\r\n  //     selectHardwareInfoFun(devicesInfo)\r\n\r\n  //     selectHardwareList(hard)\r\n  //   }\r\n\r\n  // }, [devicesTypeList])\r\n\r\n\r\n\r\n  let options = devicesTypeList.map((item, index) => {\r\n\r\n    let img = null\r\n    switch (item.type) {\r\n      case 'mellaPro':\r\n        img = mellaPro\r\n        break;\r\n\r\n      case 'biggie':\r\n        img = biggie\r\n        break;\r\n\r\n      case 'rfid':\r\n        img = rfid\r\n        break;\r\n\r\n      case 'tape':\r\n        img = tape\r\n        break;\r\n      case \"maeBowl\":\r\n        img = maeBowl\r\n        break;\r\n      case 'add':\r\n        img = add\r\n        break;\r\n\r\n      case 'otterEQ':\r\n        img = otterEQ\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    let borderStyle = ``\r\n    if (item.type === selectHardwareType) {\r\n      borderStyle = ` 2px solid #3B3A3A`\r\n    }\r\n\r\n    return <li key={`${index}`} style={{ padding: `${px(10)}px 0`, }}\r\n      onClick={() => {\r\n        console.log(item.type);\r\n\r\n\r\n\r\n        if (menuNum !== '6') {\r\n          setMenuNum('1')\r\n          setSelectHardwareType(item.type)\r\n          if (item.type === 'add') {\r\n\r\n\r\n          } else {\r\n            let devicesInfo = electronStore.get(`${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`)\r\n\r\n            //要做个处理,看保存的数据是否和当前的一致，如果不一致，就把当前的保存下来\r\n\r\n\r\n            if (!devicesInfo && item.devices[0]) {\r\n              devicesInfo = item.devices[0]\r\n              electronStore.set(`${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`, devicesInfo)\r\n            }\r\n\r\n\r\n            selectHardwareInfoFun(devicesInfo)\r\n          }\r\n        } else {\r\n          setSelectHardwareType('mellaPro')\r\n        }\r\n\r\n\r\n      }\r\n      }\r\n    >\r\n      <div style={{ border: borderStyle, padding: px(2), borderRadius: px(10) }}>\r\n        <img src={img} alt=\"\" width={px(55)} />\r\n      </div>\r\n\r\n\r\n    </li>\r\n  })\r\n\r\n\r\n  return (\r\n    <div className=\"hardwareType\" style={{ width: px(80), height: bodyHeight }}>\r\n      <ul>\r\n        {options}\r\n      </ul>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nHardWareTypeUI.propTypes = {\r\n  bodyHeight: PropTypes.number,\r\n  devicesTypeList: PropTypes.array,\r\n\r\n}\r\n//默认值\r\nHardWareTypeUI.defaultProps = {\r\n  bodyHeight: 0,\r\n  devicesTypeList: []\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    menuNum: state.userReduce.menuNum,\r\n  }),\r\n  { selectHardwareInfoFun, setSelectHardwareType, setMenuNum }\r\n)(HardWareTypeUI)",["283","284"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    Layout, message,\r\n    Input,\r\n    Menu,\r\n    Modal,\r\n    Table,\r\n    Popconfirm,\r\n    Tooltip,\r\n    Select,\r\n    Spin\r\n} from 'antd'\r\nimport ReactECharts from 'echarts-for-react';\r\nimport propTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate';\r\nimport { px, mTop } from '../../utils/px';\r\nimport HeaderItem from './../temperaturePage/components/headerItem';\r\nimport MyModal from './../../utils/myModal/MyModal'\r\n\r\nimport ye from './../../assets/images/ye1.png'\r\nimport er from './../../assets/images/er3.png'\r\nimport gang from './../../assets/images/gang3.png'\r\nimport dog from './../../assets/images/dog.png'\r\nimport cat from './../../assets/images/cat.png'\r\nimport other from './../../assets/images/other.png'\r\nimport edit from './../../assets/images/edit.png'\r\nimport del from './../../assets/images/del.png'\r\nimport start from './../../assets/img/start.png'\r\nimport redjinggao from './../../assets/img/redjinggao.png'\r\nimport placement_gang from './../../assets/images/placement_gang.png'\r\nimport placement_er from './../../assets/images/placement_er.png'\r\nimport palcement_ye from './../../assets/images/palcement_ye.png'\r\nimport close from './../../assets/img/close.png'\r\n\r\nimport './clinical.less'\r\nimport { fetchRequest } from '../../utils/FetchUtil1';\r\nimport { fetchRequest3 } from '../../utils/FetchUtil3';\r\n\r\nlet resyncDeviceIsClick = true //用于控制多次点击重新配对按钮\r\nlet storage = window.localStorage;\r\n\r\n//定义echarts的数据个数\r\nconst echartsDataLength = 0\r\nconst { Option } = Select;\r\nconst ClinicalStudy = ({ bodyHeight, mellaConnectStatus, mellaMeasureValue, mellaMeasureNum, petDetailInfo }) => {\r\n    const [units, setUnits] = useState('℃')\r\n    const [temperature, setTemp] = useState(0)\r\n    const echartsElement = useRef(null)\r\n    const [showHistoryEchart, setShowHistoryEchart] = useState(false)\r\n    const [saveHistoryTime, setSaveHistoryTime] = useState(null)\r\n    const [echarsData, setEcharsData] = useState({\r\n        Eci: [],\r\n        wen0: [],\r\n        wen1: []\r\n    })\r\n    const [mellaStatus, setMellaStatus] = useState('disconnected')\r\n    const [roomTemperature, setRoomTemperature] = useState('')\r\n    const [referenceRectalTemperature, setReferenceRectalTemperature] = useState('')\r\n    const [bodyConditionScore, setBodyConditionScore] = useState('')\r\n    const [furLength, setFurLength] = useState('')\r\n    const [heartRate, setHeartRate] = useState('')\r\n    const [bloodPressure, setBloodPressure] = useState('')\r\n    const [respiratoryRate, setRespiratoryRate] = useState('')\r\n    const [notes, setNotes] = useState('')\r\n\r\n    const [isPetCharacteristics, setIsPetCharacteristics] = useState(false)\r\n    const [historyData, setHistoryData] = useState([])\r\n    const [editRectal, setEditRectal] = useState('')\r\n    const [editRoomTemperature, setEditRoomTemperature] = useState('')\r\n    const [editHeartRate, setEditHeartRate] = useState('')\r\n    //定义变量 editBloodPressure,  editRespiratoryRate, editVisible: true, editId: key, memo: record.note, editBodyConditionScore, editFurLength\r\n    const [editBloodPressure, setEditBloodPressure] = useState('')\r\n    const [editRespiratoryRate, setEditRespiratoryRate] = useState('')\r\n    const [editVisible, setEditVisible] = useState(false)\r\n    const [editId, setEditId] = useState('')\r\n    const [editMemo, setEditMemo] = useState('')\r\n    const [editBodyConditionScore, setEditBodyConditionScore] = useState('')\r\n    const [editFurLength, setEditFurLength] = useState('')\r\n    const [tipSpin, setTipSpin] = useState(false)\r\n    const [tip, setTip] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n    const [disabled, setDisabled] = useState(true)\r\n    const [bounds, setBounds] = useState({ left: 0, top: 0, bottom: 0, right: 0 })\r\n    const [memo, setMemo] = useState('')\r\n    const [windowWidth, setWindowWidth] = useState(px(550))\r\n\r\n    const clinicalRef = useRef(null)\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (petDetailInfo.petId) {\r\n            _getHistory11(petDetailInfo.petId)\r\n        } else if (petDetailInfo.isWalkIn) {\r\n            _getEmergencyHistory()\r\n        }\r\n    }, [petDetailInfo])\r\n\r\n    useEffect(() => {\r\n        //react监听屏幕窗口改变\r\n        window.addEventListener('resize', resize)\r\n        return () => {\r\n            window.removeEventListener('resize', resize)\r\n        }\r\n    }, [])\r\n\r\n    const resize = () => {\r\n        if (clinicalRef.current) {\r\n\r\n            let { offsetWidth } = clinicalRef.current\r\n            console.log('改变', offsetWidth);\r\n            setWindowWidth(offsetWidth)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log('监听', mellaMeasureValue);\r\n        setTemp(mellaMeasureValue)\r\n        let { Eci, wen0, wen1 } = echarsData\r\n        //两个数组合并成一个数组\r\n        let EciCopy = [...Eci]\r\n\r\n        let win0Copy = [...wen0]\r\n        let wen1Copy = [...wen1]\r\n        EciCopy.push(EciCopy.length + 1)\r\n        win0Copy.push(mellaMeasureValue)\r\n        wen1Copy.push(mellaMeasureValue)\r\n        let json = {\r\n            Eci: EciCopy,\r\n            wen0: win0Copy,\r\n            wen1: wen1Copy\r\n\r\n        }\r\n        setEcharsData(json)\r\n        const option = getOption();\r\n        echartsElement.current.getEchartsInstance().setOption(option)\r\n\r\n\r\n    }, [mellaMeasureNum])\r\n\r\n    useEffect(() => {\r\n        if (mellaConnectStatus === 'complete' && echarsData.Eci.length > 10) {\r\n\r\n            addClinical()\r\n        }\r\n        if (mellaConnectStatus === 'isMeasuring' && mellaStatus !== 'isMeasuring') {\r\n            setEcharsData(\r\n                {\r\n                    Eci: [],\r\n                    wen0: [],\r\n                    wen1: []\r\n                }\r\n            )\r\n\r\n        }\r\n        if (mellaConnectStatus === 'isMeasuring') {\r\n            setShowHistoryEchart(false)\r\n        }\r\n\r\n        setMellaStatus(mellaConnectStatus)\r\n\r\n\r\n\r\n    }, [mellaConnectStatus])\r\n    const addClinical = () => {\r\n        console.log('调用接口进行保存数据');\r\n        let emerData = []\r\n        let { Eci, wen0, wen1 } = echarsData\r\n        for (let i = 0; i < wen0.length; i++) {\r\n            const element = wen0[i];\r\n            let str = {\r\n                data0: element,\r\n                data1: wen1[i]\r\n            }\r\n            emerData.push(str)\r\n\r\n        }\r\n\r\n        saveHistoryTime && clearTimeout(saveHistoryTime)\r\n        let time = setTimeout(() => {\r\n            let BCS = bodyConditionScore === '' ? null : parseFloat(bodyConditionScore)\r\n            let hrartR = heartRate === '' ? null : parseFloat(heartRate)\r\n            let respireatoryR = respiratoryRate === '' ? null : parseFloat(respiratoryRate)\r\n\r\n            let roomT = roomTemperature === '' ? null : ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2)\r\n\r\n            let referenceT = referenceRectalTemperature === '' ? null : ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2)\r\n\r\n            let furL = furLength === '' ? null : parseFloat(furLength)\r\n\r\n\r\n\r\n            let petVitalId = 1\r\n\r\n            let datas = {\r\n\r\n                temperature: parseFloat(temperature),  //测量温度\r\n                roomTemperature: roomT,//室温\r\n                bodyConditionScore: BCS,//身体状况评分\r\n                heartRate: hrartR,//心率\r\n                respiratoryRate: respireatoryR,//呼吸率\r\n                referenceRectalTemperature: referenceT,//参考腹部温度\r\n                furLength: furL,//毛发长度\r\n                bloodPressure: bloodPressure,//血压\r\n                memo: notes,\r\n                petVitalTypeId: petVitalId,\r\n                clinicalDataEntityList: emerData\r\n            }\r\n            if (storage.roleId === `1`) {\r\n                datas.userId = storage.userId\r\n            } else {\r\n                datas.doctorId = storage.userId\r\n                datas.userId = storage.userId\r\n            }\r\n            let { petId, isWalkIn } = petDetailInfo\r\n            if (petId && !isWalkIn) {\r\n                datas.petId = petId\r\n                console.log('入参数据:', datas);\r\n                fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\r\n                    .then(res => {\r\n                        console.log(res);\r\n\r\n                        if (res.flag === true) {\r\n                            console.log('上传成功');\r\n                            message.success('Uploaded successfully')\r\n                            _getHistory11(petDetailInfo.petId)\r\n                        } else {\r\n                            console.log('上传失败');\r\n\r\n                            message.error('upload failed')\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        message.error('upload failed')\r\n\r\n\r\n                    })\r\n            } else if (isWalkIn) {\r\n                console.log('温度数据保存入参：', datas);\r\n\r\n                fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\r\n                    .then(res => {\r\n\r\n                        if (res.flag === true) {\r\n\r\n                            message.success('Uploaded successfully')\r\n\r\n                            _getEmergencyHistory()\r\n                        } else {\r\n                            console.log('上传失败');\r\n                            message.error('upload failed')\r\n\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                        message.error(err)\r\n\r\n                    })\r\n            }\r\n\r\n\r\n\r\n        }, 500)\r\n        setSaveHistoryTime(time)\r\n    }\r\n    const _getHistory11 = (petId) => {\r\n        let historys = []\r\n        setLoading(true)\r\n        fetchRequest(`/pet/getPetExamAndClinicalByPetId/${petId}`, 'GET', '')  //userID要自动的\r\n            .then(res => {\r\n                console.log('获取历史记录', res);\r\n                setLoading(false)\r\n\r\n\r\n                if (res.flag === true) {\r\n                    let datas = res.data\r\n                    console.log('-------', datas);\r\n                    for (let i = datas.length - 1; i >= 0; i--) {\r\n\r\n                        let data = datas[i]\r\n\r\n                        let { petId, examId, clinicalDatagroupId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo,\r\n                            bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity, modifiedTime } = data\r\n\r\n                        if (!clinicalDatagroupId) {\r\n                            continue\r\n                        }\r\n                        let Tem = temperature\r\n                        if (clinicalDataEntity) {\r\n                            Tem = Tem || clinicalDataEntity.data0\r\n                        }\r\n                        // console.log('==============', Tem);\r\n                        Tem = Tem ? Tem : 0\r\n\r\n\r\n                        let time = null\r\n                        if (modifiedTime && `${modifiedTime}` !== '' && `${modifiedTime}` !== `undefined`) {\r\n                            time = modifiedTime\r\n                        } else {\r\n                            time = createTime\r\n                        }\r\n                        let json = {\r\n                            time,\r\n                            Temp: Tem,\r\n                            placement: petVitalTypeId,\r\n                            note: memo,\r\n                            historyId: examId,\r\n                            bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\r\n                        }\r\n                        historys.push(json)\r\n\r\n\r\n                    }\r\n                    console.log('---', historys);\r\n                    let historyData = []\r\n                    for (let i = 0; i < historys.length; i++) {\r\n                        let history = historys[i]\r\n                        let { bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId, examId } = history\r\n                        // console.log('--------', history.placement);\r\n                        let placement = history.placement\r\n                        if (placement === null || placement === '') {\r\n                            placement = 1\r\n                        }\r\n                        let str = {\r\n                            date: moment(history.time).format('MMM DD'),\r\n                            time: moment(history.time).format('hh:mm A'),\r\n                            temp: history.Temp,\r\n                            placement,\r\n                            note: history.note,\r\n                            historyId: history.historyId,\r\n                            bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId,\r\n                            key: examId\r\n                        }\r\n                        historyData.push(str)\r\n                    }\r\n                    // this.setState({\r\n                    //     historyData\r\n                    // })\r\n                    setHistoryData(historyData)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    loading: false\r\n                })\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n    const _getEmergencyHistory = () => {\r\n\r\n        //封装的日期排序方法\r\n        function ForwardRankingDate(data, p) {\r\n            for (let i = 0; i < data.length - 1; i++) {\r\n                for (let j = 0; j < data.length - 1 - i; j++) {\r\n                    if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n                        var temp = data[j];\r\n                        data[j] = data[j + 1];\r\n                        data[j + 1] = temp;\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n        let historys = []\r\n        setLoading(true)\r\n        fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, 'GET', '')  //userID要自动的\r\n            .then(res => {\r\n                setLoading(false)\r\n                if (res.flag === true) {\r\n                    let datas = res.data\r\n                    for (let i = datas.length - 1; i >= 0; i--) {\r\n                        if (datas[i].petId === null) {\r\n                            let { petId, examId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo, clinicalDatagroupId,\r\n                                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity } = datas[i]\r\n                            let Tem = temperature\r\n                            try {\r\n                                Tem = temperature || clinicalDataEntity.data0\r\n                            } catch (error) {\r\n                                console.log('抛出的异常', error);\r\n                            }\r\n\r\n\r\n                            let str = {\r\n                                clinicalDatagroupId,\r\n                                createTime,\r\n                                date: moment(createTime).format('MMM DD'),\r\n                                time: moment(createTime).format('hh:mm A'),\r\n                                temp: parseInt(Tem * 10) / 10,\r\n                                placement: petVitalTypeId,\r\n                                note: memo,\r\n                                historyId: examId,\r\n                                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\r\n                            }\r\n\r\n                            historys.push(str)\r\n                        }\r\n                    }\r\n\r\n                    //把所有数据拿完后做个排序\r\n\r\n                    let historyData = ForwardRankingDate(historys, \"createTime\");\r\n                    console.log('historyData:', historyData);\r\n                    setHistoryData(historyData)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setLoading(false)\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n\r\n\r\n    const getOption = () => {\r\n\r\n        let min, max;\r\n        if (units === '℃') {\r\n            min = 25\r\n            max = 45\r\n        } else {\r\n            min = 75\r\n            max = 115\r\n        }\r\n        let { Eci, wen0, wen1 } = echarsData\r\n\r\n        let option = {\r\n            color: ['#81b22f'],\r\n            tooltip: {\r\n                /*返回需要的信息*/\r\n                trigger: 'axis',\r\n                triggerOn: 'mousemove',\r\n                enterable: true,\r\n                formatter: function (param) {\r\n                    var value = param[0].value;\r\n                    // console.log('----para', param);\r\n                    return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(1)}${units}</div>`\r\n                }\r\n            },\r\n            xAxis: {\r\n                name: 'SPL',\r\n                nameLocation: 'end',\r\n                nameTextStyle: {\r\n                    align: 'left',\r\n                },\r\n                type: 'category',\r\n                // data: [\"\", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,],\r\n                data: Eci,\r\n                // data:['','15miao','30miao'],\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        // 设置x轴颜色\r\n                        color: '#A0A0A0',\r\n                        show: true\r\n                    }\r\n                },\r\n                // 设置X轴数据旋转倾斜\r\n                axisLabel: {\r\n                    rotate: 0, // 旋转角度\r\n                    interval: 29  //设置X轴数据间隔几个显示一个，为0表示都显示\r\n\r\n                },\r\n\r\n            },\r\n            yAxis: {\r\n                name: 'temperature',\r\n                type: 'value',\r\n                min, // 设置y轴刻度的最小值\r\n                max,  // 设置y轴刻度的最大值\r\n                splitNumber: 0,  // 设置y轴刻度间隔个数\r\n                nameTextStyle: {\r\n                    padding: [0, 0, 0, 8],\r\n                    // backgroundColor: 'pink',\r\n                    width: '1200px',\r\n                    // fontSize: 20,\r\n                    align: 'left',\r\n                },\r\n\r\n                axisLine: {\r\n                    lineStyle: {\r\n                        // 设置x轴颜色\r\n                        color: '#A0A0A0',\r\n                        show: true\r\n                    }\r\n                },\r\n                splitLine: {\r\n                    show: false\r\n                },\r\n            },\r\n            series: [{\r\n                name: '模拟数据',\r\n                type: 'line',\r\n                showSymbol: false,\r\n                hoverAnimation: false,\r\n                // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\r\n                data: wen0,\r\n                smooth: 0.5,\r\n                symbol: 'none',\r\n                // itemStyle: {\r\n                //     normal: {\r\n\r\n                //     }\r\n                // }\r\n                lineStyle: {        // 系列级个性化折线样式 \r\n                    width: 2,\r\n                    type: 'solid',\r\n                    color: {\r\n                        type: 'linear',\r\n                        x: 0,\r\n                        y: 1,\r\n                        x2: 0,\r\n                        y2: 0,\r\n                        colorStops: [{\r\n                            offset: 0.5, color: '#47C2ED' // 0% 处的颜色  蓝\r\n                        }, {\r\n                            offset: 1, color: '#78D35D' // 50% 处的颜色  绿\r\n                        },\r\n                            // {\r\n                            //   offset: 1, color: 'red' // 100% 处的颜色   红\r\n                            // }\r\n                        ],\r\n                        globalCoord: false // 缺省为 false\r\n                    }\r\n                },\r\n            }]\r\n        }\r\n        return option;\r\n    }\r\n    const _status = () => {\r\n        let text = '', unit = '', temColor = ''\r\n        let Temp = parseFloat(temperature)\r\n\r\n        if (mellaConnectStatus === 'disconnected') {\r\n            if (!showHistoryEchart) {\r\n                Temp = ''\r\n                text = 'disconnected'\r\n                temColor = '#3B3A3A'\r\n            } else {\r\n                text = 'disconnected'\r\n                temColor = '#3B3A3A'\r\n            }\r\n\r\n        } else {\r\n            text = 'connected'\r\n            temColor = '#3B3A3A'\r\n            if (Temp > 15) {\r\n                unit = units\r\n                if (Temp > 39) {\r\n                    text = 'High'\r\n                    temColor = '#E1206D'\r\n                } else if (Temp < 31) {\r\n                    text = 'Low'\r\n                    temColor = '#47C2ED'\r\n                } else {\r\n                    text = 'Normal'\r\n                    temColor = '#78D35D'\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        let temp = ''\r\n\r\n        if (`${Temp}` !== 'NaN' && Temp !== '') {\r\n            temp = units === '℉' ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1)\r\n        }\r\n        let lowFlog = false\r\n        if (unit === '℃') {\r\n            if (temp < 24.8) {\r\n                lowFlog = true\r\n            }\r\n        } else {\r\n            if (temp < 76.6) {\r\n                lowFlog = true\r\n            }\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className='Tem' style={{ color: temColor, right: px(30), bottom: mTop(120) }}>\r\n\r\n                {(mellaConnectStatus !== 'isMeasuring') ? (\r\n                    showHistoryEchart ? <>\r\n                        <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{units}</sup></span><br />\r\n                        {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\r\n\r\n                        <span style={{ fontSize: px(22), color: '#8a8a8a' }}>{`History`}</span>\r\n                    </> :\r\n\r\n                        <>\r\n                            <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\r\n                            <span style={{ fontSize: px(22) }}>{text}</span>\r\n                        </>\r\n                ) : (\r\n                    lowFlog ? (\r\n                        <>\r\n                            <span style={{ fontSize: px(36) }}>{'Low'}</span><br />\r\n\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\r\n\r\n                        </>\r\n                    )\r\n\r\n                )}\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    const _foot = () => {\r\n        let lbgc = '', rbgc = ''\r\n        if (isPetCharacteristics) {\r\n            lbgc = 'rgba(25,173,228,0.5)'; rbgc = 'rgba(105,201,237,1)'\r\n        } else {\r\n            lbgc = 'rgba(105,201,237,1)'; rbgc = 'rgba(25,173,228,0.5)'\r\n        }\r\n        return (\r\n            <div className=\"clinical_foot\"  >\r\n                <div className=\"top\"\r\n                    style={{ height: px(40), }}\r\n                >\r\n\r\n                    <div className=\"foot_l\" style={{ backgroundColor: lbgc }} onClick={() => setIsPetCharacteristics(true)}>\r\n                        Pet Characteristics\r\n                    </div>\r\n                    <div className=\"foot_l\" style={{ backgroundColor: rbgc }} onClick={() => setIsPetCharacteristics(false)}>\r\n                        History\r\n                    </div>\r\n                </div>\r\n                {isPetCharacteristics ?\r\n                    _petCharacteristics() :\r\n                    _history()\r\n                }\r\n            </div >\r\n        )\r\n    }\r\n    const handleChange = index => {\r\n        console.log('---------', index);\r\n        setFurLength(index)\r\n    };\r\n    const _petCharacteristics = () => {\r\n\r\n        let placeholder = ''\r\n        switch (`${furLength}`) {\r\n            case '1': placeholder = 'smooth'; break;\r\n            case '2': placeholder = 'short'; break;\r\n            case '3': placeholder = 'medium'; break;\r\n            case '4': placeholder = 'long'; break;\r\n            default: break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"petChaeacteristics\"\r\n                style={{ paddingLeft: px(10), paddingRight: px(10), height: '100%' }}\r\n            >\r\n                <div className=\"child\" style={{ marginTop: mTop(30), }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n                        <p style={{ width: '150px' }}>Room Temperature: </p>\r\n                        <Input className='inp'\r\n                            // style={{ border: 'none', outline: 'medium' }}\r\n                            // style={{ width: px(105), height: mTop(33), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                            value={`${roomTemperature}`}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setRoomTemperature(str)\r\n                            }}\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"5%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n                        <p style={{ width: '150px' }}>Reference Rectal Temperature: </p>\r\n                        <Input className='inp'\r\n                            // style={{ border: 'none', outline: 'medium' }}\r\n\r\n                            value={`${referenceRectalTemperature}`}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setReferenceRectalTemperature(str)\r\n                            }}\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"10%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"child\">\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                        <p style={{ width: '150px' }}>Body Condition Score:  </p>\r\n                        <Input className='inp'\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n\r\n                            value={bodyConditionScore}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setBodyConditionScore(str)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className='furLength' >\r\n                        <p style={{ width: '150px' }}>Fur Length: </p>\r\n                        <Select\r\n                            placeholder\r\n                            onChange={handleChange}\r\n                            style={{ width: '105px', borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n                            value={placeholder}\r\n                        >\r\n                            <Option value=\"1\">smooth</Option>\r\n                            <Option value=\"2\">short</Option>\r\n                            <Option value=\"3\">medium</Option>\r\n                            <Option value=\"4\">long</Option>\r\n                        </Select>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"child\">\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\r\n                        <p style={{ width: '150px' }}>Heart Rate:  </p>\r\n                        <Input className='inp'\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            value={`${heartRate}`}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setHeartRate(str)\r\n                            }}\r\n\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\r\n                    </div>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n                        <p style={{ width: '150px' }}>Blood Pressure:  </p>\r\n                        <Input className='inp'\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            value={bloodPressure}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setBloodPressure(str)\r\n                            }}\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>mm</span>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"child\" style={{ marginBottom: px(40) }}>\r\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\r\n                        <p style={{ width: '150px' }}>Respiratory Rate:  </p>\r\n                        <Input className='inp'\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            value={`${respiratoryRate}`}\r\n                            bordered={false}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setRespiratoryRate(str)\r\n                            }}\r\n\r\n                        />\r\n                        <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\r\n                    </div>\r\n                    <div className='furLength' id='_bodyType'  >\r\n\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n    const _history = () => {\r\n\r\n        const _del = (key, record) => {\r\n            console.log('删除', key, record);\r\n\r\n\r\n            /**------------这里还要删除后台的数据------------ */\r\n            fetchRequest(`/pet/deletePetExamByExamId/${key}`, 'DELETE')\r\n                .then(res => {\r\n                    if (res.flag === true) {\r\n\r\n                        const historyData1 = [...historyData];\r\n                        console.log('删除成功', historyData1);\r\n                        setHistoryData(historyData1.filter(item => item.historyId !== key));\r\n                    } else {\r\n                        console.log('删除失败');\r\n                    }\r\n                })\r\n        }\r\n        const _edit = (key, record) => {\r\n\r\n            let { heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature, bodyConditionScore, furLength, note } = record\r\n            console.log('转换前：', record);\r\n            let editHeartRate = (heartRate !== null && heartRate !== undefined) ? heartRate : ''\r\n            let editBloodPressure = (bloodPressure !== null && bloodPressure !== undefined) ? bloodPressure : ''\r\n            let editRespiratoryRate = (respiratoryRate !== null && respiratoryRate !== undefined) ? respiratoryRate : ''\r\n            let editRectal = (referenceRectalTemperature !== null && referenceRectalTemperature !== undefined) ? (referenceRectalTemperature * 1.8 + 32).toFixed(1) : ''\r\n            let editRoomTemperature = (roomTemperature !== null && roomTemperature !== undefined) ? (roomTemperature * 1.8 + 32).toFixed(1) : ''\r\n            let editBodyConditionScore = (bodyConditionScore !== null && bodyConditionScore !== undefined) ? bodyConditionScore : ''\r\n            let editFurLength = furLength\r\n            let mome = note ? note : ''\r\n\r\n\r\n\r\n            console.log(editRectal,\r\n                editRoomTemperature,\r\n                editHeartRate,\r\n                editBloodPressure,\r\n                editRespiratoryRate);\r\n\r\n            //更新editRectal,editRoomTemperature,editHeartRate,editBloodPressure,editRespiratoryRate,editVisible: true,editId: key,memo: record.note,editBodyConditionScore,editFurLength\r\n            setEditRectal(editRectal)\r\n            setEditRoomTemperature(editRoomTemperature)\r\n            setEditHeartRate(editHeartRate)\r\n            setEditBloodPressure(editBloodPressure)\r\n            setEditRespiratoryRate(editRespiratoryRate)\r\n            setEditVisible(true)\r\n            setEditId(key)\r\n            setEditMemo(record.note)\r\n            setEditBodyConditionScore(editBodyConditionScore)\r\n            setEditFurLength(editFurLength)\r\n            setMemo(mome)\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n        const see = (id, record) => {\r\n            console.log(id, record);\r\n            setTip('data is loading')\r\n            setTipSpin(true)\r\n\r\n            fetchRequest3(`/exam/getClinicalDataByExamId/${id}`, 'GET')\r\n                .then(res => {\r\n                    console.log('此条记录的全部数据：', res);\r\n                    setTip('')\r\n                    setTipSpin(false)\r\n                    if (res.flag) {\r\n                        let datas = res.data.clinicalDataEntityList\r\n\r\n\r\n                        if (datas) {\r\n\r\n                            let echarsData = {\r\n                                Eci: [],\r\n                                wen0: [],\r\n                                wen1: []\r\n                            }\r\n                            let { wen0, wen1, Eci } = echarsData\r\n                            for (let i = 0; i < datas.length; i++) {\r\n                                let { data0, data1 } = datas[i]\r\n\r\n\r\n                                Eci.push(i)\r\n                                if (units === '℃') {\r\n                                    wen0.push(data0)\r\n                                    wen1.push(data1)\r\n\r\n                                } else {\r\n                                    wen0.push(data0 * 1.8 + 32)\r\n                                    wen1.push(data1 * 1.8 + 32)\r\n                                }\r\n\r\n                            }\r\n                            let Temp = datas[datas.length - 1].data0 || ''\r\n                            console.log('----------------', Temp);\r\n                            setEcharsData(echarsData)\r\n                            setTemp(Temp)\r\n                            setShowHistoryEchart(true)\r\n                            const option = getOption();\r\n                            echartsElement.current.getEchartsInstance().setOption(option)  // 实时改变\r\n\r\n                        }\r\n\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    setTip('')\r\n                    setTipSpin(false)\r\n                    console.log(err);\r\n                })\r\n        }\r\n        const isflog = window.screen.height < 1000 ? true : false\r\n\r\n        const columns = [\r\n            {\r\n                title: '',\r\n                dataIndex: 'operation',\r\n                key: 'operation',\r\n                width: '16%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n                    // console.log('狩猎:', text, record, index);\r\n                    //record:\r\n                    return (\r\n                        <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', padding: `${px(18)}px 0` }} >\r\n                            <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\r\n                                <img src={del} alt=\"\" style={{ width: px(25) }} />\r\n                            </Popconfirm>\r\n                            {\r\n                                (petDetailInfo.isWalkIn) ? (\r\n                                    <div className=\"assign\"\r\n                                        style={{ width: mTop(60), height: mTop(28), fontSize: px(14) }}\r\n\r\n                                        onClick={() => {\r\n                                            console.log(text, record, index);\r\n                                            this.setState({\r\n                                                visible: true,\r\n                                                seleceEmergencies: record\r\n                                            })\r\n                                        }}>Assign</div>\r\n                                ) : (\r\n                                    <>\r\n                                        <img src={edit} alt=\"\" style={{ width: px(25) }}\r\n                                            onClick={() => _edit(record.historyId, record)}\r\n                                        />\r\n\r\n                                        <img src={start} alt=\"\" style={{ width: px(25) }}\r\n                                            onClick={() => see(record.historyId, record)}\r\n                                        />\r\n                                    </>\r\n                                )\r\n                            }\r\n\r\n\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: 'Date',\r\n                dataIndex: 'date',\r\n                key: 'date',\r\n                width: '14%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{text}</p>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: 'Time',\r\n                dataIndex: 'time',\r\n                key: 'time',\r\n                width: '14%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{text}</p>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: `Temp(${units})`,\r\n                // title: `Temp(℉)`,\r\n                key: 'temp',\r\n                dataIndex: 'temp',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                width: '14%',\r\n                render: (text, record, index) => {\r\n                    // console.log(text, record);\r\n\r\n                    /**\r\n                    * bag：温度数值前的圆圈的背景颜色\r\n                    * tem：展示的温度\r\n                    * endvalue:将从后台得到的数据全部转化成华氏度\r\n                    * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n                    * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n                    * \r\n                    */\r\n\r\n\r\n                    let bag = '', tem = ''\r\n\r\n                    let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\r\n                    let min = 100.4, max = 102.56\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    if (endValue > max) {\r\n                        bag = '#E1206D'\r\n                    } else if (endValue < min) {\r\n                        bag = '#98DA86'\r\n                    } else {\r\n                        bag = '#58BDE6'\r\n                    }\r\n\r\n                    if (units === '℃') {\r\n                        if (text) {\r\n                            tem = `${text}${units}`\r\n                            if (text > 55) {\r\n\r\n                                tem = `${((text - 32) / 1.8).toFixed(1)}${units}`\r\n                            } else {\r\n                                tem = `${text.toFixed(1)}${units}`\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (text) {\r\n                            if (text > 55) {\r\n                                tem = `${text}${units}`\r\n                            } else {\r\n                                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${units}`\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    return (\r\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                            {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\r\n                            <p style={{ margin: 0, padding: 0 }}>{tem}</p>\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: `Rectal Temperature`,\r\n                key: 'referenceRectalTemperature',\r\n                dataIndex: 'referenceRectalTemperature',\r\n                width: '15%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n                    // console.log('肛温的值：', text);\r\n                    let num = text\r\n                    if (text !== null) {\r\n                        num = (text * 1.8 + 32).toFixed(1)\r\n                    }\r\n\r\n                    return (\r\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                            {text !== null && <p style={{ margin: 0, padding: 0 }}>{num} <span>{'℉'}</span></p>}\r\n\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n            },\r\n            {\r\n                title: 'Placement',\r\n                dataIndex: 'placement',\r\n                key: 'placement',\r\n                align: 'center',\r\n                width: '15%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n                    switch (record.placement) {\r\n                        case 1: return (    //腋温\r\n                            <div>\r\n                                <img src={palcement_ye} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                        case 3: return (     //肛温\r\n                            <div>\r\n                                <img src={placement_gang} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                        case 2: return (     //肛温\r\n                            <div>\r\n                                <img src={placement_gang} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                        case 4: return (    //耳温\r\n                            <div>\r\n                                <img src={placement_er} alt=\"\" />\r\n                            </div>\r\n                        )\r\n                        default: return null;\r\n                    }\r\n\r\n                }\r\n            },\r\n            {\r\n                title: 'Note',\r\n                dataIndex: 'note',\r\n                key: 'note',\r\n                width: '12%',\r\n                className: `${isflog ? 'operation' : ''}`,\r\n                render: (text, record, index) => {\r\n\r\n                    return (\r\n                        <p style={{ width: '100%' }}>{text}</p>\r\n                    )\r\n\r\n                }\r\n            },\r\n        ];\r\n\r\n\r\n\r\n        let hisHe = mTop(200)\r\n        try {\r\n            let historyElement = document.querySelectorAll('#clinicalMeasure11 .historyTable')\r\n            hisHe = historyElement[0].clientHeight - mTop(100)\r\n        } catch (error) {\r\n\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <div className='historyTable' style={{ height: '90%' }}>\r\n                <Table\r\n                    columns={columns}\r\n                    loading={loading}\r\n                    dataSource={historyData}\r\n                    rowKey={columns => columns.historyId}\r\n                    // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\r\n                    pagination={false}\r\n                    scroll={{\r\n                        y: hisHe\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        )\r\n    }\r\n    const _editModal = () => {\r\n\r\n        function save() {\r\n            let datas = {\r\n                memo: memo,\r\n                bodyConditionScore: parseInt(editBodyConditionScore),\r\n                furLength: parseInt(editFurLength),\r\n                heartRate: editHeartRate,\r\n                bloodPressure: editBloodPressure,\r\n                respiratoryRate: editRespiratoryRate\r\n            }\r\n            if (editRoomTemperature) {\r\n                datas.roomTemperature = ((parseFloat(editRoomTemperature) - 32) / 1.8).toFixed(2)\r\n            }\r\n            if (editRectal) {\r\n                datas.referenceRectalTemperature = ((parseFloat(editRectal) - 32) / 1.8).toFixed(2)\r\n            }\r\n\r\n            console.log('入参：', datas, editId);\r\n            setEditVisible(false)\r\n            setTip('Data is being modified')\r\n            setTipSpin(true)\r\n\r\n            fetchRequest(`/pet/updatePetExam/${editId}`, 'POST', datas)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    setTipSpin(false)\r\n                    setTip('')\r\n                    message.success('Data modified successfully')\r\n\r\n                    _getHistory11(petDetailInfo.petId)\r\n                })\r\n                .catch(err => {\r\n                    setTipSpin(false)\r\n                    setTip('')\r\n\r\n                    message.success(' Data modification failed')\r\n\r\n                    console.log(err);\r\n                })\r\n\r\n        }\r\n\r\n\r\n\r\n        let furLength = ''\r\n        if (editFurLength !== null && editFurLength !== undefined) {\r\n            switch (`${editFurLength}`) {\r\n                case '1': furLength = 'smooth'; break;\r\n                case '2': furLength = 'short'; break;\r\n                case '3': furLength = 'medium'; break;\r\n                case '4': furLength = 'long'; break;\r\n\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Modal\r\n                title={\r\n                    <div\r\n                        style={{\r\n                            width: '100%',\r\n                            cursor: 'move',\r\n                            height: '20px',\r\n                            textAlign: 'center'\r\n                        }}\r\n                        onMouseOver={() => {\r\n                            if (disabled) {\r\n                                setDisabled(false)\r\n                            }\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            setDisabled(true)\r\n                        }}\r\n\r\n                        onFocus={() => { }}\r\n                        onBlur={() => { }}\r\n                    // end\r\n                    >\r\n                        Modification history information\r\n                    </div>\r\n                }\r\n                visible={editVisible}\r\n                // visible={true}\r\n                onCancel={() => { setEditVisible(false) }}\r\n                modalRender={(modal) => (\r\n                    <Draggable\r\n                        disabled={disabled}\r\n                        bounds={bounds}\r\n                        onStart={(event, uiData) => this.onStart(event, uiData)}\r\n                    >\r\n                        <div >{modal}</div>\r\n                    </Draggable>\r\n                )}\r\n                footer={\r\n                    [] // 设置footer为空，去掉 取消 确定默认按钮\r\n                }\r\n                destroyOnClose={true}\r\n            >\r\n                <div id=\"selectEmergenciesModal\">\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Room Temperature </p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editRoomTemperature}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n\r\n                                setEditRoomTemperature(str)\r\n                            }}\r\n\r\n                        />\r\n                        <span>℉</span>\r\n                    </div>\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Rectal Temperature</p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editRectal}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                                setEditRectal(str)\r\n                            }}\r\n\r\n                        />\r\n                        <span>℉</span>\r\n                    </div>\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Body Condition Score</p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editBodyConditionScore}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d]/g, '')\r\n\r\n                                setEditBodyConditionScore(str)\r\n                            }}\r\n\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='bodyType11' >\r\n                        <p style={{ width: '140px' }}>Fur Length: </p>\r\n                        <Select\r\n                            placeholder\r\n                            onChange={(index) => {\r\n                                console.log(index);\r\n                                setEditFurLength(index)\r\n                            }}\r\n                            style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n                            value={furLength}\r\n                        >\r\n                            <Option value=\"1\">smooth</Option>\r\n                            <Option value=\"2\">short</Option>\r\n                            <Option value=\"3\">medium</Option>\r\n                            <Option value=\"4\">long</Option>\r\n                        </Select>\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Heart Rate: </p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editHeartRate}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d]/g, '')\r\n                                setEditHeartRate(str)\r\n\r\n                            }}\r\n\r\n                        />\r\n                        <span>bpm</span>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Blood Pressure </p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editBloodPressure}\r\n                            onChange={(item) => {\r\n                                setEditBloodPressure(item.target.value)\r\n                            }}\r\n\r\n                        />\r\n                        <span>mm</span>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '140px' }}>Respiratory Rate: </p>\r\n                        <Input\r\n                            style={{ border: 'none', outline: 'medium' }}\r\n                            bordered={false}\r\n                            value={editRespiratoryRate}\r\n                            onChange={(item) => {\r\n                                let str = item.target.value.replace(/[^\\d]/g, '')\r\n                                setEditRespiratoryRate(str)\r\n\r\n                            }}\r\n\r\n                        />\r\n                        <span>bpm</span>\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    <div className=\"selectEmergenciesModal\">\r\n                        <p style={{ width: '80px' }}>Notes</p>\r\n                        <textarea\r\n                            rows=\"2\"\r\n                            cols=\"40\"\r\n                            style={{ textIndent: '10px' }}\r\n                            value={memo}\r\n                            onChange={(val) => {\r\n                                setMemo(val.target.value)\r\n                            }}\r\n\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n\r\n                    <div className=\"btn\" onClick={save}>Save</div>\r\n                </div>\r\n\r\n            </Modal>\r\n\r\n\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div id=\"clinical\" style={{ height: bodyHeight, minWidth: px(200), minHeight: bodyHeight, overflow: 'hidden' }} ref={clinicalRef}>\r\n            <div className=\"clinicalTitle\">\r\n                <Layout>\r\n                    <HeaderItem />\r\n                </Layout>\r\n            </div>\r\n            <div className='clinicalBody' style={{ width: '100%', height: bodyHeight - devicesTitleHeight }}>\r\n                <div className='clinical_top'  >\r\n                    <div className=\"r\" >\r\n                        {mellaConnectStatus === 'disconnected' && <div className=\"bb1\"\r\n                        // style={{ left: px(150) }}\r\n                        >\r\n                            <div className=\"btn78\"\r\n                                style={{ width: px(220), height: mTop(30), fontSize: px(16) }}\r\n                                onClick={() => {\r\n                                    console.log('点击了切换按钮');\r\n\r\n                                    if (resyncDeviceIsClick === true) {\r\n                                        resyncDeviceIsClick = false\r\n                                        console.log('发送给主进程切换按钮');\r\n                                        let ipcRenderer = require('electron').ipcRenderer;\r\n                                        ipcRenderer.send('qiehuan')\r\n                                        const time = setTimeout(() => {\r\n                                            resyncDeviceIsClick = true\r\n                                            clearTimeout(time)\r\n                                        }, 2500)\r\n                                    }\r\n\r\n\r\n\r\n                                }}\r\n                            >Re-sync Base</div>\r\n                        </div>}\r\n\r\n\r\n                        <div id='myCharts'\r\n                            style={{ marginTop: mTop(50), width: windowWidth }}\r\n\r\n                        >\r\n                            <ReactECharts\r\n\r\n                                option={getOption()} theme=\"Imooc\" style={{ height: mTop(380), }}\r\n                                notMerge={true}\r\n                                lazyUpdate={true}\r\n                                // theme={\"theme_name\"}\r\n                                ref={echartsElement}\r\n                            />\r\n\r\n                            {_status()}\r\n                        </div>\r\n\r\n                        {/* 底部宠物信息 */}\r\n                        {_foot()}\r\n                        {_editModal()}\r\n\r\n                        {\r\n                            tipSpin &&\r\n                            // true &&\r\n                            <div className=\"modal\">\r\n                                <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\r\n                                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n\r\n\r\n                                </div>\r\n                                <p>\r\n                                    data is loading...\r\n                                </p>\r\n                            </div>\r\n                        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nClinicalStudy.propTypes = {\r\n    bodyHeight: propTypes.number,\r\n}\r\nClinicalStudy.defaultProps = {\r\n    bodyHeight: 0,\r\n}\r\nexport default connect(\r\n    state => ({\r\n        mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\r\n        mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\r\n        mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\r\n\r\n        petDetailInfo: state.petReduce.petDetailInfo,\r\n    }),\r\n    {}\r\n)(ClinicalStudy);\r\n\r\n\r\n\r\n\r\n",["367","368"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js",["369","370","371","372","373","374","375","376","377","378","379","380","381","382","383"],"//这里主要是直接从ezyVet获取数据\r\n//这是ezyVet的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  message\r\n\r\n} from 'antd';\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\r\nimport './ezyVetSelectExam.less'\r\n\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { FetchEszVet } from '../../utils/FetchEszVet'\r\nimport { fetchRequest2 } from '../../utils/FetchUtil2'\r\nimport gender from './../../utils/gender'\r\n\r\nlet storage = window.localStorage;\r\n\r\n\r\nexport default class EzyVetSelectExam extends Component {\r\n  state = {\r\n    loading: false,\r\n    api: '',\r\n    id: '',  //选择location的id\r\n    locations: [],\r\n    data: [],\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    seleceID: '',  //宠物医生id\r\n    spin: false,   //刷新按钮是否旋转\r\n    unixToURI: '',\r\n    ezyVetToken: '',\r\n    current: 1\r\n  }\r\n  componentWillMount () {\r\n    try {\r\n      if ((this.props.location.listDate)) {\r\n        console.log('------------', this.props.location);\r\n        let data = JSON.parse(this.props.location.listDate)\r\n        this.setState({\r\n          data,\r\n          current: parseInt(this.props.location.defaultCurrent)\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    if (window.screen.height < 950) {\r\n      ipcRenderer.send('table')\r\n    } else {\r\n      ipcRenderer.send('big')\r\n    }\r\n    storage.identity = '2'\r\n    if (storage.unixToURI !== '' && storage.unixToURI !== undefined) {\r\n      this.setState({\r\n        unixToURI: storage.unixToURI\r\n      })\r\n    }\r\n\r\n    if (storage.ezyVetToken !== '' && storage.ezyVetToken !== undefined) {\r\n      this.setState({\r\n        ezyVetToken: storage.ezyVetToken\r\n      })\r\n    }\r\n\r\n\r\n\r\n    if ((this.props.location.listDate)) {\r\n      console.log('------------', this.props.location);\r\n      let data = JSON.parse(this.props.location.listDate)\r\n      this.setState({\r\n        data,\r\n        current: parseInt(this.props.location.defaultCurrent)\r\n      })\r\n    } else {\r\n      this._getExam()\r\n    }\r\n\r\n\r\n\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy()\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    console.log(storage.unixToURI, '------------', storage.ezyVetToken);\r\n    let params = {\r\n      limit: '100',\r\n      timestamp: storage.unixToURI\r\n    }\r\n\r\n    //1.获取病历单号但是缺少宠物信息\r\n    let url = `/healthstatus?limit=100&timestamp=${storage.unixToURI}`\r\n    if (storage.selectPatientId) {\r\n      url += `&animal_id=${storage.selectPatientId}`\r\n    }\r\n    FetchEszVet(url, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n      .then(res => {\r\n        console.log('------------------------------res', res);\r\n        if (res.messages.length === 0) {\r\n          let examArr = res.items\r\n          console.log('examArr', examArr);\r\n          let healthStatusArr = [], animalIdArr = []\r\n\r\n\r\n          for (let i = 0; i < examArr.length; i++) {\r\n            if (examArr[i].healthstatus.active !== '1') {\r\n              console.log(examArr[i]);\r\n              continue\r\n            }\r\n            let { animal_id, consult_id, created_at, id, timestamp, modified_at, heart_rate, notes, weight } = examArr[i].healthstatus\r\n            if (weight) {\r\n              weight = parseFloat(weight).toFixed(1)\r\n              weight += ' kg'\r\n            } else {\r\n              weight = 'unknown'\r\n            }\r\n\r\n            let json = {\r\n              animal_id,\r\n              consult_id,\r\n              insertedAt: timestamp,\r\n              key: id,\r\n              created_at,\r\n              heart_rate, notes,\r\n              modified_at,\r\n              weight\r\n            }\r\n\r\n            healthStatusArr.push(json)\r\n            if (animalIdArr.indexOf(parseInt(animal_id)) === -1) {\r\n              animalIdArr.push(parseInt(animal_id))\r\n            }\r\n          }\r\n\r\n          console.log(healthStatusArr, animalIdArr);\r\n          let animal = `{\"in\":[${animalIdArr}]}`\r\n          let uri = encodeURIComponent(animal)\r\n          console.log('宠物id集合：', uri)\r\n          //2.获取宠物信息\r\n          FetchEszVet(`/animal?id=${uri}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n            .then(res => {\r\n              console.log('获取到的宠物信息1:', res, `Bearer ${storage.ezyVetToken}`);\r\n              if (res.messages.length === 0) {\r\n\r\n                let animalArr = res.items\r\n                let animalInfoArr = []\r\n                let breedIdArr = [], contactIDArr = []\r\n\r\n                for (let i = 0; i < animalArr.length; i++) {\r\n                  let { breed_id, date_of_birth, id, name, weight, weight_unit, contact_id, sex_id, animalcolour_id, guid,\r\n                    referring_clinic_id, referring_vet_id, residence_contact_id, species_id, created_at, modified_at, notes } = animalArr[i].animal\r\n                  let animalInfo = {\r\n                    breed_id, date_of_birth, id, name, weight, weight_unit, contact_id, sex_id, animalcolour_id, guid,\r\n                    referring_clinic_id, referring_vet_id, residence_contact_id, species_id, created_at, modified_at, notes\r\n                  }\r\n                  if (breedIdArr.indexOf(breed_id) === -1) {\r\n                    breedIdArr.push(breed_id)\r\n                  }\r\n                  if (contactIDArr.indexOf(contact_id) === -1) {\r\n                    contactIDArr.push(contact_id)\r\n                  }\r\n                  animalInfoArr.push(animalInfo)\r\n\r\n                }\r\n                console.log('我拿到了宠物的信息', animalInfoArr, '品种id集合', breedIdArr, '宠物主人id集合', contactIDArr);\r\n                //3.遍历记录数组，把宠物信息添加到病历单-缺少宠物主人信息与品种\r\n                let endArr = healthStatusArr.map((data, index) => {\r\n                  let oneExam = data\r\n\r\n                  for (let i = 0; i < animalInfoArr.length; i++) {\r\n\r\n                    if (animalInfoArr[i].id === oneExam.animal_id) {\r\n                      let { breed_id, date_of_birth, name, weight, weight_unit, contact_id, sex_id,\r\n\r\n                        bree_id, animalcolour_id, guid,\r\n                        referring_clinic_id, referring_vet_id, residence_contact_id, species_id\r\n\r\n                      } = animalInfoArr[i]\r\n                      let age = moment().diff(moment(parseInt(date_of_birth) * 1000), 'years')\r\n                      oneExam.age = age\r\n                      oneExam.breed = breed_id\r\n                      oneExam.gender = gender[sex_id]\r\n                      oneExam.contact_id = contact_id\r\n                      oneExam.petName = name\r\n                      // oneExam.weight = `${parseInt(weight).toFixed(1)} ${weight_unit}`\r\n                      oneExam.weightNum = `${parseInt(weight).toFixed(1)}`\r\n                      oneExam.weight_unit = weight_unit\r\n                      oneExam.animal = animalInfoArr[i]\r\n\r\n                      break\r\n                    }\r\n\r\n                  }\r\n                  return oneExam\r\n                })\r\n\r\n                console.log('融合后', endArr);\r\n                let contactIDStr = `{\"in\":[${contactIDArr}]}`\r\n\r\n                let contactIDUri = encodeURIComponent(contactIDStr)\r\n                console.log(contactIDStr);\r\n\r\n                let getContactArr = []\r\n                //4. 获取宠物主人信息\r\n                FetchEszVet(`/contact?id=${contactIDUri}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n                  .then(res => {\r\n                    console.log('-------宠物主人信息：', res);\r\n                    if (res.messages.length === 0) {\r\n                      let items = res.items\r\n                      for (let i = 0; i < items.length; i++) {\r\n\r\n                        const { first_name, last_name, id, address_physical, address_postal, business_name, code, contact_detail_list, created_at,\r\n                          is_business, is_customer, is_staff_member, is_supplier, is_syndicate, is_vet, modified_at, ownership_id } = items[i].contact\r\n                        let name = ''\r\n                        if (first_name === '' && last_name === '') {\r\n                          name = 'unknown'\r\n                        } else {\r\n                          name = `${last_name} ${first_name}`\r\n                        }\r\n                        let json = {\r\n                          name,\r\n                          id,\r\n                          first_name, last_name, address_physical, address_postal, business_name, code, contact_detail_list, created_at,\r\n                          is_business, is_customer, is_staff_member, is_supplier, is_syndicate, is_vet, modified_at, ownership_id\r\n                        }\r\n                        getContactArr.push(json)\r\n                      }\r\n\r\n                      console.log('endArr', endArr);\r\n                      //5.把宠物信息并到病历单-----缺少品种\r\n                      let dataArr = endArr.map((data) => {\r\n                        let oneExam = data\r\n                        for (let i = 0; i < getContactArr.length; i++) {\r\n                          if (getContactArr[i].id === oneExam.contact_id) {\r\n                            let { name } = getContactArr[i]\r\n                            oneExam.owner = name\r\n                            oneExam.contact = getContactArr[i]\r\n                          }\r\n\r\n                        }\r\n                        return oneExam\r\n                      })\r\n                      console.log('添加过主人信息的记录：', dataArr);\r\n\r\n                      //6.获取病历单\r\n                      let breedIdStr = `{\"in\":[${breedIdArr}]}`\r\n\r\n                      let breedIdUri = encodeURIComponent(breedIdStr)\r\n                      console.log(breedIdUri);\r\n\r\n                      let getbreedIdArr = []\r\n\r\n                      FetchEszVet(`/breed?id=${breedIdUri}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n                        .then(res => {\r\n                          console.log('获取到了品种信息', res);\r\n\r\n                          if (res.messages.length === 0) {\r\n\r\n                            let items = res.items\r\n                            for (let i = 0; i < items.length; i++) {\r\n\r\n                              const { name, id, created_at, modified_at, species_id } = items[i].breed\r\n\r\n                              if (name === '') {\r\n                                name = 'unKnown'\r\n                              }\r\n                              let json = {\r\n                                name,\r\n                                id,\r\n                                created_at, modified_at, species_id\r\n                              }\r\n                              getbreedIdArr.push(json)\r\n                            }\r\n\r\n                            console.log('endArr', endArr);\r\n                            //5.把宠物品种并到病历单\r\n                            let endExamArr = dataArr.map((data, index) => {\r\n                              let oneExam = data\r\n\r\n                              for (let i = 0; i < getbreedIdArr.length; i++) {\r\n\r\n                                if (getbreedIdArr[i].id === oneExam.breed) {\r\n                                  let { name } = getbreedIdArr[i]\r\n                                  oneExam.breed = name\r\n                                  oneExam.allBreed = getbreedIdArr[i]\r\n                                }\r\n\r\n                              }\r\n                              return oneExam\r\n                            })\r\n                            console.log('最终合成的数据：', endExamArr);\r\n                            this.setState({\r\n                              data: endExamArr,\r\n                              loading: false,\r\n                              spin: false\r\n                            })\r\n                          }\r\n                        })\r\n                        .catch(err => {\r\n                          console.log(err);\r\n                          this.setState({\r\n                            loading: false,\r\n                            spin: false\r\n                          })\r\n                        })\r\n\r\n\r\n\r\n\r\n                    }\r\n\r\n                  })\r\n                  .catch(err => {\r\n                    this.setState({\r\n                      loading: false,\r\n                      spin: false\r\n                    })\r\n                    console.log(err);\r\n                  })\r\n\r\n\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.setState({\r\n                loading: false,\r\n                spin: false\r\n              })\r\n              console.log(err);\r\n            })\r\n\r\n        } else {\r\n          console.log('很有可能是令牌过期了');\r\n          if (res.messages[0].text.indexOf(`Check the \\\"access token\\\" parameter`) !== -1 ||\r\n            res.messages[0].text.indexOf(`The resource owner or authorization server denied the reques`) !== -1) {\r\n            console.log('令牌就是过期了');\r\n            if (storage.ezyVetReLogin) {\r\n              let data = JSON.parse(storage.ezyVetReLogin)\r\n              let { client_id, client_secret, partner_id } = data\r\n              let prams = {\r\n                clientId: client_id,\r\n                clientSecret: client_secret,\r\n                partnerId: partner_id\r\n              }\r\n              let url = '/EzyVet/ezyvetauth'\r\n              fetchRequest2(url, \"GET\", prams)\r\n                .then(res => {\r\n                  console.log('重新获取token', res);\r\n                  if (res.flag === true && res.data) {\r\n                    storage.ezyVetToken = res.data\r\n                    this._getExam()\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  console.log(err);\r\n                })\r\n            } else {\r\n              // this.props.history.push('ezyVetLogin')\r\n              message.error('The access token is invalid, please obtain it again')\r\n              this.setState({\r\n                loading: false,\r\n                spin: false\r\n              })\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false,\r\n          spin: false\r\n        })\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n\r\n  //封装的日期排序方法<div className=\" ForwardRankingDate(data, p) {\r\n  ForwardRankingDate = (data, p) => {\r\n    for (let i = 0; i < data.length - 1; i++) {\r\n      for (let j = 0; j < data.length - 1 - i; j++) {\r\n        // console.log(Date.parse(data[j][p]));\r\n        if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n          var temp = data[j];\r\n          data[j] = data[j + 1];\r\n          data[j + 1] = temp;\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    //dataIndex 是标题名称\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    //自定义Icon\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\r\n    onFilter: (value, record) => {\r\n      console.log(value, record, dataIndex);\r\n      return record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : ''\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n  _refresh = () => {\r\n    console.log('点击了');\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    // this._getData()\r\n    this._getExam()\r\n  }\r\n  render () {\r\n    const columns = [\r\n      {\r\n        title: 'Pet Name',\r\n        dataIndex: 'petName',\r\n        key: 'petName',\r\n        //   width: '30%',\r\n        ...this.getColumnSearchProps('petName'),\r\n      },\r\n      {\r\n        title: 'Owner',\r\n        dataIndex: 'owner',\r\n        key: 'owner',\r\n        //   width: '20%',\r\n        ...this.getColumnSearchProps('owner'),\r\n      },\r\n      {\r\n        title: 'Breed',\r\n        dataIndex: 'breed',\r\n        key: 'breed',\r\n        ...this.getColumnSearchProps('breed'),\r\n      },\r\n\r\n      {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        key: 'gender',\r\n        // width: '30%',\r\n        ...this.getColumnSearchProps('gender'),\r\n      },\r\n      {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n        // width: '20%',\r\n        render: (text, record, index) => {\r\n          // console.log(text);\r\n\r\n          if (`${text}` === 'NaN') {\r\n            return (\r\n              <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\r\n            )\r\n          } else {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{text}</p>\r\n            )\r\n          }\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Weight',\r\n        dataIndex: 'weight',\r\n        key: 'weight',\r\n        ...this.getColumnSearchProps('weight'),\r\n      },\r\n      {\r\n        title: 'Time',\r\n        dataIndex: 'insertedAt',\r\n        key: 'insertedAt',\r\n        render: (text, record, index) => {\r\n          let chazhi = new Date().getTimezoneOffset()\r\n          // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\r\n          let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\r\n          // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\r\n          return (\r\n            <p style={{ textAlign: 'center' }}>{newTime}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n\r\n    ];\r\n    const { loading, data, api, id, seleceID, spin } = this.state\r\n    return (\r\n\r\n      <div id=\"ezyVetSelectExam\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push({ pathname: '/EzyVetSelectTime' })}\r\n        />\r\n\r\n        <div className=\"textfa1\">\r\n          <div className=\"textfa\">\r\n            <div className=\"text\">Select Patient Exam</div>\r\n            <div className=\"text3\"><SyncOutlined onClick={this._refresh} spin={spin} />   </div>\r\n          </div>\r\n          <div className=\"r\"\r\n            ref={add => this.add = add}\r\n            onClick={() => {\r\n              let electron = window.electron\r\n              electron.shell.openExternal('https://apisandbox.trial.ezyvet.com/#')\r\n            }}\r\n            onMouseDown={() => {\r\n              this.add.style.color = 'rgba(0,0,0,0.3)'\r\n            }}\r\n            onMouseUp={() => {\r\n              this.add.style.color = 'rgba(0,0,0)'\r\n            }}\r\n          >+</div>\r\n        </div>\r\n\r\n\r\n        <div className=\"table\">\r\n          <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            loading={loading}\r\n            locale={{ filterConfirm: <div>111</div> }}\r\n            pagination={{ pageSize: 7, showSizeChanger: false, showQuickJumper: true, defaultCurrent: this.state.current }}\r\n            onRow={(record) => {\r\n              return {\r\n                onClick: (event) => {\r\n\r\n                  console.log('record', record);\r\n\r\n                  if (record.consult_id === '') {\r\n                    message.error('This record cannot be updated. Please try another record', 10)\r\n                    return\r\n                  }\r\n\r\n                  let { allBreed, animal, contact } = record\r\n                  let { animalcolour_id, breed_id, contact_id, date_of_birth, guid, id, name, referring_clinic_id, referring_vet_id,\r\n                    residence_contact_id, sex_id, species_id, weight, weight_unit, created_at, modified_at\r\n                  } = animal\r\n                  let { address_physical, address_postal, business_name, contact_detail_list, first_name, is_business, is_customer,\r\n                    is_staff_member, is_supplier, is_syndicate, is_vet, last_name, ownership_id, code, notes\r\n                  } = contact\r\n                  let breed = {}\r\n                  if (allBreed) {\r\n                    breed = {\r\n                      id: allBreed.id,\r\n                      created_at: allBreed.created_at,\r\n                      modified_at: allBreed.modified_at,\r\n                      name: allBreed.name,\r\n                      species_id: allBreed.species_id\r\n                    }\r\n                  }\r\n                  let params = [{\r\n                    id,\r\n                    created_at,\r\n                    modified_at,\r\n                    name,\r\n                    sex_id,\r\n                    animalcolour_id,\r\n                    species_id,\r\n                    breed_id,\r\n                    contact_id,\r\n                    date_of_birth,\r\n                    referring_clinic_id,\r\n                    referring_vet_id,\r\n                    residence_contact_id,\r\n                    weight,\r\n                    weight_unit,\r\n                    notes,\r\n                    guid,\r\n                    sex: '',\r\n                    breed,\r\n                    species: {\r\n                      id: \"\",\r\n                      created_at: \"\",\r\n                      modified_at: \"\",\r\n                      name: \"\",\r\n                      icon: \"\"\r\n                    },\r\n                    contact: {\r\n                      id: contact.id,\r\n                      created_at: contact.created_at,\r\n                      modified_at: contact.modified_at,\r\n                      code,\r\n                      first_name,\r\n                      last_name,\r\n                      business_name,\r\n                      is_business,\r\n                      is_customer,\r\n                      is_supplier,\r\n                      is_vet,\r\n                      is_syndicate,\r\n                      is_staff_member,\r\n                      contact_detail_list,\r\n                      address_physical,\r\n                      address_postal,\r\n                      ownership_id\r\n                    }\r\n                  }]\r\n                  console.log('入参：', params);\r\n                  fetchRequest2('/EzyVet/checkAndSaveAnimalList', 'POST', params)\r\n                    .then(res => {\r\n                      console.log('====', res);\r\n                      if (res.flag === true) {\r\n                        storage.ezyVetSelectHealthstatus = JSON.stringify(record)\r\n                        storage.ezyVetList = JSON.stringify(this.state.data)\r\n                        let selectNum = document.getElementsByClassName('ant-pagination-item-active')\r\n\r\n                        storage.defaultCurrent = selectNum[0].title\r\n\r\n                        // this.props.history.push({ pathname: '/page10', })\r\n                        if (storage.isClinical === 'true') {\r\n                          this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.animal_id })\r\n                        } else {\r\n                          this.props.history.push({ pathname: '/page10', })\r\n                        }\r\n                      }\r\n                    })\r\n                    .catch(err => {\r\n                      console.log(err);\r\n                    })\r\n                }, // 点击行\r\n\r\n              };\r\n            }}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n//下面这一块是通过后台获取到exam且进行集成\r\n// import React, { Component } from 'react'\r\n// import {\r\n//   Table,\r\n//   Input,\r\n//   Button,\r\n//   Space,\r\n//   message\r\n\r\n// } from 'antd';\r\n// import moment from 'moment'\r\n// //import 'antd/dist/antd.css';\r\n// import { SyncOutlined } from '@ant-design/icons';\r\n// import MaxMin from '../../utils/maxminreturn/MaxMinReturn'\r\n// import './ezyVetSelectExam.less'\r\n\r\n// import Highlighter from 'react-highlight-words';\r\n// import { SearchOutlined } from '@ant-design/icons';\r\n// import { FetchEszVet } from '../../utils/FetchEszVet'\r\n// import { fetchToken } from '../../utils/Fetch_token'\r\n// import gender from './../../utils/gender'\r\n\r\n// let storage = window.localStorage;\r\n\r\n\r\n// export default class EzyVetSelectExam extends Component {\r\n//   state = {\r\n//     loading: false,\r\n//     api: '',\r\n//     id: '',  //选择location的id\r\n//     locations: [],\r\n//     data: [],\r\n//     searchText: '',\r\n//     searchedColumn: '',\r\n//     seleceID: '',  //宠物医生id\r\n//     spin: false,   //刷新按钮是否旋转\r\n\r\n\r\n\r\n//     unixToURI: '',\r\n//     ezyVetToken: ''\r\n//   }\r\n\r\n//   componentDidMount () {\r\n//     let ipcRenderer = window.electron.ipcRenderer\r\n//     ipcRenderer.send('big')\r\n//     if (storage.unixToURI !== '' && storage.unixToURI !== undefined) {\r\n//       this.setState({\r\n//         unixToURI: storage.unixToURI\r\n//       })\r\n//     }\r\n\r\n//     if (storage.ezyVetToken !== '' && storage.ezyVetToken !== undefined) {\r\n//       this.setState({\r\n//         ezyVetToken: storage.ezyVetToken\r\n//       })\r\n//     }\r\n\r\n//     this._getExam()\r\n\r\n//   }\r\n//   componentWillUnmount () {\r\n//     message.destroy()\r\n//   }\r\n\r\n//   _getExam = async () => {\r\n//     console.log('进来了');\r\n//     this.setState({\r\n//       loading: true\r\n//     })\r\n//     console.log(storage.unixToURI, '------------', storage.ezyVetToken);\r\n//     let params = {\r\n//       limit: '100',\r\n//       timestamp: storage.unixToURI\r\n//     }\r\n\r\n//     //1.获取病历单号但是缺少宠物信息\r\n//     fetchToken(`/EzyVet/healthstatus`, \"GET\", params, `Bearer ${storage.ezyVetToken}`)\r\n//       .then(res => {\r\n//         console.log('res', res);\r\n//         if (res.msg === 'success') {\r\n//           let examArr = res.data.items\r\n//           console.log(examArr);\r\n//           let healthStatusArr = [], animalIdArr = []\r\n\r\n\r\n//           for (let i = 0; i < examArr.length; i++) {\r\n//             let { animal_id, consult_id, created_at, id, timestamp, modified_at } = examArr[i]\r\n\r\n//             let json = {\r\n//               animal_id,\r\n//               consult_id,\r\n//               insertedAt: timestamp,\r\n//               key: id\r\n//             }\r\n//             healthStatusArr.push(json)\r\n//             if (animalIdArr.indexOf(parseInt(animal_id)) === -1) {\r\n//               animalIdArr.push(parseInt(animal_id))\r\n//             }\r\n//           }\r\n\r\n//           console.log(healthStatusArr, animalIdArr);\r\n//           let animal = `{\"in\":[${animalIdArr}]}`\r\n//           let uri = encodeURIComponent(animal)\r\n//           console.log('宠物id集合：', uri)\r\n//           //2.获取宠物信息\r\n//           fetchToken(`/EzyVet/animal?id=${uri}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n//             .then(res => {\r\n//               console.log('获取到的宠物信息:', res, `Bearer ${storage.ezyVetToken}`);\r\n//               if (res.msg === 'success') {\r\n\r\n//                 let animalArr = res.data.items\r\n//                 let animalInfoArr = []\r\n//                 let breedIdArr = [], contactIDArr = []\r\n\r\n//                 for (let i = 0; i < animalArr.length; i++) {\r\n//                   let { breed_id, date_of_birth, id, name, weight, weight_unit, contact_id, sex_id, } = animalArr[i]\r\n//                   let animalInfo = {\r\n//                     breed_id, date_of_birth, id, name, weight, weight_unit, contact_id, sex_id\r\n//                   }\r\n//                   if (breedIdArr.indexOf(breed_id) === -1) {\r\n//                     breedIdArr.push(breed_id)\r\n//                   }\r\n//                   if (contactIDArr.indexOf(contact_id) === -1) {\r\n//                     contactIDArr.push(contact_id)\r\n//                   }\r\n\r\n//                   animalInfoArr.push(animalInfo)\r\n\r\n//                 }\r\n//                 console.log('我拿到了宠物的信息', animalInfoArr, '品种id集合', breedIdArr, '宠物主人id集合', contactIDArr);\r\n//                 //3.遍历记录数组，把宠物信息添加到病历单-缺少宠物主人信息与品种\r\n//                 let endArr = healthStatusArr.map((data, index) => {\r\n//                   let oneExam = data\r\n\r\n//                   for (let i = 0; i < animalInfoArr.length; i++) {\r\n\r\n//                     if (animalInfoArr[i].id === oneExam.animal_id) {\r\n//                       let { breed_id, date_of_birth, id, name, weight, weight_unit, contact_id, sex_id, } = animalInfoArr[i]\r\n//                       let age = moment().diff(moment(parseInt(date_of_birth) * 1000), 'years')\r\n//                       oneExam.age = age\r\n//                       oneExam.breed = breed_id\r\n//                       oneExam.gender = gender[sex_id]\r\n//                       oneExam.contact_id = contact_id\r\n//                       oneExam.petName = name\r\n//                       oneExam.weight = `${parseInt(weight).toFixed(1)} ${weight_unit}`\r\n//                       break\r\n//                     }\r\n\r\n//                   }\r\n//                   return oneExam\r\n//                 })\r\n\r\n//                 console.log('融合后', endArr);\r\n//                 let contactIDStr = `{\"in\":[${contactIDArr}]}`\r\n\r\n//                 let contactIDUri = encodeURIComponent(contactIDStr)\r\n//                 console.log(contactIDStr);\r\n\r\n//                 let getContactArr = []\r\n//                 //4. 获取宠物主人信息\r\n//                 fetchToken(`/EzyVet/contact?id=${contactIDUri}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n//                   .then(res => {\r\n//                     console.log('-------宠物主人信息：', res);\r\n//                     if (res.msg === 'success') {\r\n//                       let items = res.data\r\n//                       for (let i = 0; i < items.length; i++) {\r\n\r\n//                         const { first_name, last_name, id } = items[i]\r\n//                         let name = ''\r\n//                         if (first_name === '' && last_name === '') {\r\n//                           name = 'UnKnown'\r\n//                         } else {\r\n//                           name = `${last_name} ${first_name}`\r\n//                         }\r\n//                         let json = {\r\n//                           name,\r\n//                           id\r\n//                         }\r\n//                         getContactArr.push(json)\r\n//                       }\r\n\r\n//                       console.log('endArr', endArr);\r\n//                       //5.把宠物信息并到病历单-----缺少品种\r\n//                       let dataArr = endArr.map((data) => {\r\n//                         let oneExam = data\r\n//                         for (let i = 0; i < getContactArr.length; i++) {\r\n//                           if (getContactArr[i].id === oneExam.contact_id) {\r\n//                             let { name } = getContactArr[i]\r\n//                             oneExam.owner = name\r\n//                           }\r\n\r\n//                         }\r\n//                         return oneExam\r\n//                       })\r\n\r\n\r\n//                       //6.获取病历单\r\n//                       let breedIdStr = `{\"in\":[${breedIdArr}]}`\r\n\r\n//                       let breedIdUri = encodeURIComponent(breedIdStr)\r\n//                       console.log(breedIdUri);\r\n\r\n//                       let getbreedIdArr = []\r\n\r\n//                       fetchToken(`/EzyVet/breed?id=${breedIdUri}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n//                         .then(res => {\r\n//                           console.log('获取到了品种信息', res);\r\n\r\n\r\n\r\n//                           let items = res.data\r\n//                           for (let i = 0; i < items.length; i++) {\r\n\r\n//                             const { name, id } = items[i]\r\n\r\n//                             if (name === '') {\r\n//                               name = 'UnKnown'\r\n//                             }\r\n//                             let json = {\r\n//                               name,\r\n//                               id\r\n//                             }\r\n//                             getbreedIdArr.push(json)\r\n//                           }\r\n\r\n//                           console.log('endArr', endArr);\r\n//                           //5.把宠物品种并到病历单\r\n//                           let endExamArr = dataArr.map((data, index) => {\r\n//                             let oneExam = data\r\n\r\n//                             for (let i = 0; i < getbreedIdArr.length; i++) {\r\n\r\n//                               if (getbreedIdArr[i].id === oneExam.breed) {\r\n//                                 let { name } = getbreedIdArr[i]\r\n//                                 oneExam.breed = name\r\n//                               }\r\n\r\n//                             }\r\n//                             return oneExam\r\n//                           })\r\n//                           this.setState({\r\n//                             data: endExamArr,\r\n//                             loading: false,\r\n//                             spin: false\r\n//                           })\r\n//                         })\r\n//                         .catch(err => {\r\n//                           console.log(err);\r\n//                           this.setState({\r\n//                             loading: false,\r\n//                             spin: false\r\n//                           })\r\n//                         })\r\n\r\n\r\n\r\n\r\n//                     }\r\n\r\n//                   })\r\n//                   .catch(err => {\r\n//                     this.setState({\r\n//                       loading: false,\r\n//                       spin: false\r\n//                     })\r\n//                     console.log(err);\r\n//                   })\r\n\r\n\r\n//               }\r\n//             })\r\n//             .catch(err => {\r\n//               this.setState({\r\n//                 loading: false,\r\n//                 spin: false\r\n//               })\r\n//               console.log(err);\r\n//             })\r\n\r\n//         }\r\n//       })\r\n//       .catch(err => {\r\n//         this.setState({\r\n//           loading: false,\r\n//           spin: false\r\n//         })\r\n//         console.log(err);\r\n//       })\r\n\r\n\r\n\r\n//     // FetchEszVet(`/healthstatus?limit=100&timestamp=${storage.unixToURI}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n//     //   .then(res => {\r\n//     //     console.log(res);\r\n//     //     let examArr = res.items\r\n//     //     console.log(examArr);\r\n//     //     let healthStatusArr = [], animalIdArr = []\r\n\r\n\r\n//     //     for (let i = 0; i < examArr.length; i++) {\r\n//     //       let { animal_id, consult_id, created_at, id, timestamp, modified_at } = examArr[i].healthstatus\r\n\r\n//     //       let json = {\r\n//     //         animal_id,\r\n//     //         consult_id,\r\n//     //         insertedAt: timestamp,\r\n//     //         key: id\r\n//     //       }\r\n//     //       healthStatusArr.push(json)\r\n//     //       if (animalIdArr.indexOf(parseInt(animal_id)) === -1) {\r\n//     //         animalIdArr.push(parseInt(animal_id))\r\n//     //       }\r\n//     //     }\r\n\r\n//     //     console.log(healthStatusArr, animalIdArr);\r\n//     //     let animal = `{\"in\":[${animalIdArr}]}`\r\n//     //     // console.log(animal);\r\n//     //     let uri = encodeURIComponent(animal)\r\n//     //     //2.获取宠物信息\r\n//     //     FetchEszVet(`/animal?id=${uri}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n//     //       .then(res => {\r\n//     //         console.log('宠物信息', res);\r\n//     //         let animalArr = res.items\r\n//     //         let animalInfoArr = []\r\n//     //         let breedIdArr = [], contactIDArr = []\r\n\r\n//     //         for (let i = 0; i < animalArr.length; i++) {\r\n//     //           let { breed_id, date_of_birth, id, name, weight, weight_unit, contact_id, sex_id, } = animalArr[i].animal\r\n//     //           let animalInfo = {\r\n//     //             breed_id, date_of_birth, id, name, weight, weight_unit, contact_id, sex_id\r\n//     //           }\r\n//     //           if (breedIdArr.indexOf(breed_id) === -1) {\r\n//     //             breedIdArr.push(breed_id)\r\n//     //           }\r\n//     //           if (contactIDArr.indexOf(contact_id) === -1) {\r\n//     //             contactIDArr.push(contact_id)\r\n//     //           }\r\n\r\n//     //           animalInfoArr.push(animalInfo)\r\n\r\n//     //         }\r\n//     //         console.log('我拿到了宠物的信息', animalInfoArr, '品种id集合', breedIdArr, '宠物主人id集合', contactIDArr);\r\n//     //         //3.遍历记录数组，把宠物信息添加到病历单-缺少宠物主人信息与品种\r\n//     //         let endArr = healthStatusArr.map((data, index) => {\r\n//     //           let oneExam = data\r\n\r\n//     //           for (let i = 0; i < animalInfoArr.length; i++) {\r\n\r\n//     //             if (animalInfoArr[i].id === oneExam.animal_id) {\r\n//     //               let { breed_id, date_of_birth, id, name, weight, weight_unit, contact_id, sex_id, } = animalInfoArr[i]\r\n//     //               let age = moment().diff(moment(parseInt(date_of_birth) * 1000), 'years')\r\n//     //               oneExam.age = age\r\n//     //               oneExam.breed = breed_id\r\n//     //               oneExam.gender = gender[sex_id]\r\n//     //               oneExam.contact_id = contact_id\r\n//     //               oneExam.petName = name\r\n//     //               oneExam.weight = `${parseInt(weight).toFixed(1)} ${weight_unit}`\r\n//     //               break\r\n//     //             }\r\n\r\n//     //           }\r\n//     //           return oneExam\r\n//     //         })\r\n\r\n//     //         console.log(endArr);\r\n//     //         let contactIDStr = `{\"in\":[${contactIDArr}]}`\r\n\r\n//     //         let contactIDUri = encodeURIComponent(contactIDStr)\r\n//     //         console.log(contactIDStr);\r\n\r\n//     //         let getContactArr = []\r\n//     //         //4. 获取宠物信息\r\n//     //         FetchEszVet(`/contact?id=${contactIDUri}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n//     //           .then(res => {\r\n//     //             console.log('-------宠物主人信息：', res);\r\n//     //             let items = res.items\r\n//     //             for (let i = 0; i < items.length; i++) {\r\n\r\n//     //               const { first_name, last_name, id } = items[i].contact\r\n//     //               let name = ''\r\n//     //               if (first_name === '' && last_name === '') {\r\n//     //                 name = 'UnKnown'\r\n//     //               } else {\r\n//     //                 name = `${last_name} ${first_name}`\r\n//     //               }\r\n//     //               let json = {\r\n//     //                 name,\r\n//     //                 id\r\n//     //               }\r\n//     //               getContactArr.push(json)\r\n//     //             }\r\n\r\n//     //             console.log('endArr', endArr);\r\n//     //             //5.把宠物信息并到病历单-----缺少品种\r\n//     //             let dataArr = endArr.map((data) => {\r\n//     //               let oneExam = data\r\n//     //               for (let i = 0; i < getContactArr.length; i++) {\r\n//     //                 if (getContactArr[i].id === oneExam.contact_id) {\r\n//     //                   let { name } = getContactArr[i]\r\n//     //                   oneExam.owner = name\r\n//     //                 }\r\n\r\n//     //               }\r\n//     //               return oneExam\r\n//     //             })\r\n\r\n\r\n//     //             //6.获取病历单\r\n//     //             let breedIdStr = `{\"in\":[${breedIdArr}]}`\r\n\r\n//     //             let breedIdUri = encodeURIComponent(breedIdStr)\r\n//     //             console.log(breedIdUri);\r\n\r\n//     //             let getbreedIdArr = []\r\n\r\n//     //             FetchEszVet(`/breed?id=${breedIdUri}`, \"GET\", '', `Bearer ${storage.ezyVetToken}`)\r\n//     //               .then(res => {\r\n//     //                 console.log('获取到了品种信息', res);\r\n\r\n\r\n\r\n//     //                 let items = res.items\r\n//     //                 for (let i = 0; i < items.length; i++) {\r\n\r\n//     //                   const { name, id } = items[i].breed\r\n\r\n//     //                   if (name === '') {\r\n//     //                     name = 'UnKnown'\r\n//     //                   }\r\n//     //                   let json = {\r\n//     //                     name,\r\n//     //                     id\r\n//     //                   }\r\n//     //                   getbreedIdArr.push(json)\r\n//     //                 }\r\n\r\n//     //                 console.log('endArr', endArr);\r\n//     //                 //5.把宠物品种并到病历单\r\n//     //                 let endExamArr = dataArr.map((data, index) => {\r\n//     //                   let oneExam = data\r\n\r\n//     //                   for (let i = 0; i < getbreedIdArr.length; i++) {\r\n\r\n//     //                     if (getbreedIdArr[i].id === oneExam.breed) {\r\n//     //                       let { name } = getbreedIdArr[i]\r\n//     //                       oneExam.breed = name\r\n//     //                     }\r\n\r\n//     //                   }\r\n//     //                   return oneExam\r\n//     //                 })\r\n//     //                 this.setState({\r\n//     //                   data: endExamArr,\r\n//     //                   loading: false,\r\n//     //                   spin: false\r\n//     //                 })\r\n//     //               })\r\n//     //               .catch(err => {\r\n//     //                 console.log(err);\r\n//     //                 this.setState({\r\n//     //                   loading: false,\r\n//     //                   spin: false\r\n//     //                 })\r\n//     //               })\r\n\r\n//     //           })\r\n//     //           .catch(err => {\r\n//     //             console.log(err);\r\n//     //             this.setState({\r\n//     //               loading: false,\r\n//     //               spin: false\r\n//     //             })\r\n//     //           })\r\n\r\n\r\n\r\n//     //       })\r\n//     //       .catch(err => {\r\n//     //         this.setState({\r\n//     //           loading: false,\r\n//     //           spin: false\r\n//     //         })\r\n//     //         console.log(err);\r\n//     //       })\r\n\r\n\r\n//     //   })\r\n//     //   .catch(err => {\r\n//     //     console.log(err);\r\n//     //     this.setState({\r\n//     //       loading: false,\r\n//     //       spin: false\r\n//     //     })\r\n//     //   })\r\n\r\n//   }\r\n\r\n//   //封装的日期排序方法<div className=\" ForwardRankingDate(data, p) {\r\n//   ForwardRankingDate = (data, p) => {\r\n//     for (let i = 0; i < data.length - 1; i++) {\r\n//       for (let j = 0; j < data.length - 1 - i; j++) {\r\n//         // console.log(Date.parse(data[j][p]));\r\n//         if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n//           var temp = data[j];\r\n//           data[j] = data[j + 1];\r\n//           data[j + 1] = temp;\r\n//         }\r\n//       }\r\n//     }\r\n//     return data;\r\n//   }\r\n\r\n\r\n//   getColumnSearchProps = dataIndex => ({\r\n//     //dataIndex 是标题名称\r\n//     filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\r\n//       <div style={{ padding: 8 }}>\r\n//         <Input\r\n//           ref={node => {\r\n//             this.searchInput = node;\r\n//           }}\r\n//           placeholder={`Search ${dataIndex}`}\r\n//           value={selectedKeys[0]}\r\n//           onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n//           onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n//           style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n//         />\r\n//         <Space>\r\n//           <Button\r\n//             type=\"primary\"\r\n//             onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n//             icon={<SearchOutlined />}\r\n//             size=\"small\"\r\n//             style={{ width: 90 }}\r\n//           >\r\n//             Search\r\n//           </Button>\r\n//           <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n//             Reset\r\n//           </Button>\r\n//         </Space>\r\n//       </div>\r\n//     ),\r\n//     //自定义Icon\r\n//     filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n//     //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\r\n//     onFilter: (value, record) => {\r\n//       console.log(value, record, dataIndex);\r\n//       return record[dataIndex]\r\n//         ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n//         : ''\r\n//     },\r\n//     onFilterDropdownVisibleChange: visible => {\r\n//       if (visible) {\r\n//         setTimeout(() => this.searchInput.select(), 100);\r\n//       }\r\n//     },\r\n//     render: text =>\r\n//       this.state.searchedColumn === dataIndex ? (\r\n//         <Highlighter\r\n//           highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n//           searchWords={[this.state.searchText]}\r\n//           autoEscape\r\n//           textToHighlight={text ? text.toString() : ''}\r\n//         />\r\n//       ) : (\r\n//         text\r\n//       ),\r\n//   });\r\n\r\n//   handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n//     confirm();\r\n//     this.setState({\r\n//       searchText: selectedKeys[0],\r\n//       searchedColumn: dataIndex,\r\n//     });\r\n//   };\r\n\r\n//   handleReset = clearFilters => {\r\n//     clearFilters();\r\n//     this.setState({ searchText: '' });\r\n//   };\r\n//   _refresh = () => {\r\n//     console.log('点击了');\r\n//     this.setState({\r\n//       spin: true\r\n//     })\r\n//     // this._getData()\r\n//     this._getExam()\r\n//   }\r\n//   render () {\r\n//     const columns = [\r\n//       {\r\n//         title: 'Pet Name',\r\n//         dataIndex: 'petName',\r\n//         key: 'petName',\r\n//         //   width: '30%',\r\n//         ...this.getColumnSearchProps('petName'),\r\n//       },\r\n//       {\r\n//         title: 'Owner',\r\n//         dataIndex: 'owner',\r\n//         key: 'owner',\r\n//         //   width: '20%',\r\n//         ...this.getColumnSearchProps('owner'),\r\n//       },\r\n//       {\r\n//         title: 'Breed',\r\n//         dataIndex: 'breed',\r\n//         key: 'breed',\r\n//         ...this.getColumnSearchProps('breed'),\r\n//       },\r\n\r\n//       {\r\n//         title: 'Gender',\r\n//         dataIndex: 'gender',\r\n//         key: 'gender',\r\n//         // width: '30%',\r\n//         ...this.getColumnSearchProps('gender'),\r\n//       },\r\n//       {\r\n//         title: 'Age',\r\n//         dataIndex: 'age',\r\n//         key: 'age',\r\n//         // width: '20%',\r\n//         render: (text, record, index) => {\r\n//           // console.log(text);\r\n\r\n//           if (`${text}` === 'NaN') {\r\n//             return (\r\n//               <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\r\n//             )\r\n//           } else {\r\n//             return (\r\n//               <p style={{ textAlign: 'center' }}>{text}</p>\r\n//             )\r\n//           }\r\n\r\n//         }\r\n//       },\r\n//       {\r\n//         title: 'Weight',\r\n//         dataIndex: 'weight',\r\n//         key: 'weight',\r\n//         ...this.getColumnSearchProps('weight'),\r\n//       },\r\n//       {\r\n//         title: 'Creation time',\r\n//         dataIndex: 'insertedAt',\r\n//         key: 'insertedAt',\r\n//         render: (text, record, index) => {\r\n//           let chazhi = new Date().getTimezoneOffset()\r\n//           // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\r\n//           let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\r\n//           // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\r\n//           return (\r\n//             <p style={{ textAlign: 'center' }}>{newTime}</p>\r\n//           )\r\n\r\n//         }\r\n//       },\r\n\r\n//     ];\r\n//     const { loading, data, api, id, seleceID, spin } = this.state\r\n//     return (\r\n\r\n//       <div id=\"ezyVetSelectExam\">\r\n//         {/* 关闭缩小 */}\r\n//         <MaxMin\r\n//           onClick={() => { this.props.history.push('/') }}\r\n//           onClick1={() => this.props.history.push({ pathname: '/EzyVetSelectTime' })}\r\n//         />\r\n\r\n//         <div className=\"textfa1\">\r\n//           <div className=\"textfa\">\r\n//             <div className=\"text\">Select Patient Exam</div>\r\n//             <div className=\"text3\"><SyncOutlined onClick={this._refresh} spin={spin} />   </div>\r\n//           </div>\r\n//           <div className=\"r\" onClick={() => {\r\n//             let electron = window.electron\r\n//             electron.shell.openExternal('https://mella.vetspire.com/clients')\r\n//           }}>+</div>\r\n//         </div>\r\n\r\n\r\n//         <div className=\"table\">\r\n//           <Table\r\n//             columns={columns}\r\n//             dataSource={data}\r\n//             loading={loading}\r\n//             locale={{ filterConfirm: <div>111</div> }}\r\n//             pagination={{ pageSize: 7, showSizeChanger: false, showQuickJumper: true }}\r\n//             onRow={(record) => {\r\n//               return {\r\n//                 onClick: (event) => {\r\n\r\n//                   console.log(record);\r\n//                   if (record.consult_id === '') {\r\n//                     message.error('This record cannot be updated. Please try another record', 10)\r\n//                     return\r\n//                   }\r\n//                   storage.ezyVetSelectHealthstatus = JSON.stringify(record)\r\n\r\n//                   // let patientId = record.key\r\n//                   // let petName = record.petName\r\n\r\n//                   // console.log(patientId, petName);\r\n//                   // storage.selectExamId = record.key\r\n//                   // storage.selectPatientId = record.patientId\r\n\r\n//                   // storage.selectAge = record.age\r\n//                   // storage.selectBreed = record.breed\r\n//                   // storage.selectOwner = record.owner\r\n//                   // storage.selectWeight = record.weight\r\n//                   // storage.selectPetName = record.petName\r\n\r\n//                   this.props.history.push({ pathname: '/page10', })\r\n\r\n//                 }, // 点击行\r\n\r\n//               };\r\n//             }}\r\n//           />\r\n//         </div>\r\n\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectMella\\SelectMella.jsx",["384"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectLocation\\VerifyOrganizationInformation.jsx",["385","386","387","388","389","390","391"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\AddYuding.jsx",["392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx",["408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\forgotPassword\\ForgotPassword.jsx",["435","436","437","438","439","440"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  message,\r\n  Spin\r\n\r\n} from 'antd';\r\n// import { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './forgotPassword.less'\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport { px, mTop, pX, MTop } from '../../../utils/px';\r\nimport MouseDiv from '../../../utils/mouseDiv/MouseDiv'\r\nimport MinClose from '../../../utils/minClose/MinClose'\r\nimport back_white from '../../../assets/img/back-white.png'\r\nimport back_hui from '../../../assets/img/back-hui.png'\r\nimport mellaLogo from '../../../assets/images/mellaLogo.png'\r\nimport errorIcon from '../../../assets/images/errorIcon.png'\r\n\r\n\r\n//num做超时处理\r\nlet num = 0\r\nexport default class ForgotPassword extends Component {\r\n\r\n  state = {\r\n    email: '',\r\n    success1: false,\r\n    spin: false,        //调用接口加载中\r\n    noRegistered: false, //邮箱没被注册跳出的弹窗\r\n    isLimit: false,      //账号被限制、注册未激活状态\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    if (temporaryStorage.forgotPassword_email) {\r\n      this.setState({\r\n        email: temporaryStorage.forgotPassword_email\r\n      })\r\n    }\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  componentWillUnmount () {\r\n    this.timer && clearInterval(this.timer)\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _continue = () => {\r\n    let { email } = this.state\r\n    message.destroy()\r\n    console.log('点击了发送按钮', email)\r\n    if (email.length < 2 || email.indexOf('@') === -1) {\r\n      message.error('Email number format is incorrect')\r\n      return\r\n    }\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    console.log('开始去检测邮箱');\r\n    fetchRequest(`/user/checkUser/${email}`, 'GET', '')\r\n      .then(res => {\r\n        console.log('检测邮箱存不存在', res);\r\n        if (res.code) {\r\n          switch (res.code) {\r\n\r\n            case 11011:\r\n              console.log('邮箱存在，发送邮件');\r\n              this._sendEmail()\r\n              break;\r\n            case 11012:\r\n              console.log('账号被限制、注册未激活状态');\r\n              this.setState({\r\n                isLimit: true\r\n              })\r\n              break;\r\n\r\n\r\n            case 11013:\r\n              console.log('邮箱未被注册，跳出弹框询问是否前往注册');\r\n            case 11014:\r\n              console.log('邮箱被注销或者封停，跳出弹框询问是否前往注册');\r\n              this.setState({\r\n                noRegistered: true,\r\n                spin: false\r\n              })\r\n              return\r\n              break\r\n\r\n          }\r\n        } else {\r\n          console.log('系统错误', res);\r\n          message.error('system error')\r\n          this.setState({\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        message.error('system error')\r\n\r\n      })\r\n\r\n\r\n\r\n  }\r\n  _sendEmail = () => {\r\n    fetchRequest(`/user/forgetPwd/${this.state.email}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('调用验证邮箱返回的数据', res);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        if (res.flag === true) {\r\n          console.log('邮件发送成功,请注意查收')\r\n          this.timer && clearInterval(this.timer)\r\n          this.timer = setInterval(() => {\r\n            num++\r\n            if (num > 300) {\r\n              message.error('The email is invalid, please click send again', 10)\r\n              num = 0\r\n              this.timer && clearInterval(this.timer)\r\n            }\r\n            this._validation()\r\n\r\n          }, 1000);\r\n          message.success('The email was sent successfully, please check it', 10)\r\n        } else {\r\n          console.log('邮件发送失败');\r\n          message.error('The account does not exist', 10)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n  _validation = () => {\r\n\r\n    fetchRequest(`/user/checkForgetPassword/${this.state.email}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('验证结果', res);\r\n        if (res.flag === true) {\r\n          temporaryStorage.forgotUserId = res.data.userId\r\n\r\n          this.timer && clearInterval(this.timer)\r\n          if (this.state.success1 === false) {\r\n            this.setState({\r\n              success1: true\r\n            }, () => {\r\n              console.log('跳转');\r\n              this.props.history.push('/user/login/resetPassword')\r\n            })\r\n          }\r\n          console.log('成功了');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"forgotPassword\">\r\n\r\n        <div className=\"heaed\"  >\r\n          <div className=\"l\"\r\n          >\r\n\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"body\" style={{ height: MTop(280), }}>\r\n          <div className=\"logo\"\r\n            style={{ paddingTop: mTop(10) }}\r\n          >\r\n            <img src={mellaLogo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n          <div className=\"text\"\r\n            style={{ fontSize: px(30), padding: `${px(20)}px 0`, marginBottom: mTop(10), marginTop: mTop(20) }}\r\n          >\r\n            Forgot Your Password?\r\n          </div>\r\n          <p className=\"text1\" style={{ fontSize: px(20) }}>\r\n            Please enter email and we<br />\r\n            will send you a link if there is an<br />\r\n            account associated with that address.<br />\r\n          </p>\r\n          {/* <div className=\"text1\">Please enter email and we</div>\r\n          <div className=\"text1\">will send you a link if there is an</div>\r\n          <div className=\"text1\">account associated with that address.</div> */}\r\n          <div className=\"inpF\">\r\n\r\n            <Input className='inp'\r\n              style={{ width: px(310), height: mTop(50), marginLeft: px(6), marginBottom: mTop(18), fontSize: px(18) }}\r\n              value={this.state.email}\r\n              placeholder='rachel@friends.com'\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value\r\n                this.setState({\r\n                  email: str\r\n                })\r\n              }}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"button1\" >\r\n          <Button\r\n            style={{ width: px(300), fontSize: px(18), height: px(300 / 6.5) }}\r\n\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            SEND LINK\r\n          </Button>\r\n        </div>\r\n\r\n        {\r\n          this.state.spin &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              loading...\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n\r\n        {\r\n          this.state.noRegistered &&\r\n          <div className=\"modal\">\r\n            <div className=\"modalChaild\" style={{ borderRadius: pX(20) }}>\r\n              <img src={errorIcon} alt=\"\" style={{ width: pX(30), margin: `${pX(20)}px 0` }} />\r\n              <p style={{ fontSize: px(17) }}>\r\n                This account is not registered. Do you want to go to register?\r\n              </p>\r\n\r\n              <div className=\"modalbutton\" style={{ margin: `${pX(0)}px 0 ${pX(20)}px` }}>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      noRegistered: false\r\n                    })\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      noRegistered: false\r\n                    })\r\n                    this.props.history.push({ pathname: '/uesr/logUp/VetPrifile', email: this.state.email })\r\n\r\n                  }}\r\n                >\r\n                  Jump\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        }\r\n\r\n\r\n        {\r\n          this.state.isLimit &&\r\n          <div className=\"modal\">\r\n            <div className=\"modalChaild\" style={{ borderRadius: pX(20) }}>\r\n              <img src={errorIcon} alt=\"\" style={{ width: pX(30), margin: `${pX(20)}px 0` }} />\r\n              <p style={{ fontSize: px(17) }}>\r\n                Your email is not verified - please verify\r\n              </p>\r\n\r\n              <div className=\"modalbutton\" style={{ margin: `${pX(0)}px 0 ${pX(20)}px` }}>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      isLimit: false\r\n                    })\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      isLimit: false,\r\n                      spin: true\r\n                    })\r\n\r\n                    fetchRequest(`/user/sendActivateEmail/${this.state.email}`, \"GET\", \"\")\r\n                      .then(res => {\r\n                        console.log(res);\r\n                        this.setState({\r\n                          spin: false,\r\n                        })\r\n                        if (res.flag === true) {\r\n                          console.log('发送成功');\r\n                          const time = setTimeout(() => {\r\n                            message.success('The email has been sent, please follow the prompts')\r\n                            clearTimeout(time)\r\n                          }, 5);\r\n\r\n                        } else {\r\n                          console.log('发送失败');\r\n                          const time = setTimeout(() => {\r\n                            message.error('Failed to send mail')\r\n                            clearTimeout(time)\r\n                          }, 5);\r\n\r\n                        }\r\n                      })\r\n                      .catch(err => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                          spin: false,\r\n                        })\r\n                      })\r\n                  }}\r\n                >\r\n                  Jump\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx",["441","442","443"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx",["444","445"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx",["446","447","448","449","450","451","452","453"],"import React, { Component } from 'react'\r\nimport {\r\n  // Button,\r\n  message,\r\n  Modal,\r\n  Input\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\r\nimport { createFromIconfontCN, SyncOutlined } from '@ant-design/icons';\r\nimport Button from './../../../utils/button/Button'\r\nimport Close from './../../../assets/img/close.png'\r\nimport left1 from './../../../assets/img/left1.png'\r\n\r\n\r\n\r\nimport './joinOrganizationByOption.less'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { px } from '../../../utils/px'\r\nimport MyModal from '../../../utils/myModal/MyModal';\r\nimport { fetchRequest2 } from '../../../utils/FetchUtil2';\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nexport default class FindWorkplace extends Component {\r\n\r\n  state = {\r\n    search: '',\r\n    listData: [],\r\n    searchData: [],\r\n    selectId: {},\r\n    isOrg: false,       //nodel框是否显示\r\n    isWorkplace: false,\r\n    workplaceList: [],\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n    selectworkplace: {}\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    fetchRequest(`/organization/listAll`, \"GET\", '')\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.msg === 'success') {\r\n          this.setState({\r\n            listData: res.data\r\n          })\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n    this.setState({\r\n      selectId: temporaryStorage.logupSelectOrganization\r\n    })\r\n    temporaryStorage.logupSelectOrganization = {}\r\n\r\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n\r\n  }\r\n  componentWillUnmount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n  _logIn = () => {\r\n\r\n    let storage = window.localStorage;\r\n    let { email, hash } = temporaryStorage.logupVetInfo\r\n    let params = {\r\n      email: email.replace(/(^\\s*)/g, \"\"),\r\n      hash,\r\n      identityTypeId: '1'\r\n    }\r\n    console.log('---登录入参', params);\r\n    fetchRequest('/user/mellaLogin', 'POST', params)\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          isLoading: false\r\n        })\r\n        if (res.status && res.status === 404) {\r\n          message.error('system error');\r\n          return\r\n        }\r\n        if (res.status && res.status === 500) {\r\n          message.error('Internal Server Error');\r\n          return\r\n        }\r\n        if (res.code === 10001 && res.msg === '账号错误') {\r\n          message.error('Account error');\r\n          return\r\n        }\r\n        if (res.code === 10002 && res.msg === '密码错误') {\r\n          message.error('wrong password')\r\n          return;\r\n        }\r\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\r\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\r\n          return\r\n        }\r\n\r\n        if (res.code === 0 && res.msg === 'success') {\r\n          console.log('账号密码正确，登录进去了');\r\n          let { userWorkplace, lastOrganization, token } = res.success\r\n          storage.token = token\r\n          storage.userId = ''\r\n\r\n          storage.userId = res.success.userId\r\n          storage.roleId = res.success.roleId\r\n\r\n          //每次登陆后清空宠物列表缓存的数据\r\n          storage.doctorList = ''\r\n          storage.defaultCurrent = ''\r\n          this.setState({\r\n            isOrg: false,\r\n            isWorkplace: false\r\n          })\r\n\r\n          if (userWorkplace) {\r\n            storage.userWorkplace = JSON.stringify(userWorkplace)\r\n            let connectionKey = ''\r\n            const element = userWorkplace[0];\r\n            storage.lastOrganization = element.organizationEntity.organizationId\r\n            storage.lastWorkplaceId = element.workplaceEntity.workplaceId\r\n            if (element.organizationEntity.connectionKey) {\r\n              connectionKey = element.organizationEntity.connectionKey\r\n            }\r\n            if (element.roleId) {\r\n              console.log(element.roleId);\r\n              storage.roleId = element.roleId\r\n            }\r\n            if (userWorkplace.length === 1) {\r\n              this.props.history.push('/uesr/selectExam')\r\n\r\n            } else {\r\n              this.props.history.push('/page12')\r\n            }\r\n          } else {\r\n            storage.userWorkplace = ''\r\n            storage.connectionKey = ''\r\n            this.props.history.push('/uesr/selectExam')\r\n            storage.lastOrganization = ''\r\n            storage.lastWorkplaceId = ''\r\n          }\r\n\r\n        }\r\n        if (res.code === 10000 && res.msg === '系统内部错误') {\r\n          message.error('system error')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          isLoading: false\r\n        })\r\n        message.error('Login failed')\r\n      })\r\n  }\r\n  _search = (val) => {\r\n    let search = val.target.value\r\n    let { listData } = this.state\r\n    let searchData = []\r\n    for (let i = 0; i < listData.length; i++) {\r\n      if (listData[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        searchData.push(listData[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      search,\r\n      searchData\r\n    })\r\n\r\n  }\r\n  _searchworkPlace = (val) => {\r\n    let search = val.target.value\r\n    let listData = this.state.workplaceList\r\n    console.log('----------------', listData);\r\n    let searchData = []\r\n    for (let i = 0; i < listData.length; i++) {\r\n      if (listData[i].workplaceName.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        searchData.push(listData[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      search,\r\n      searchData\r\n    })\r\n\r\n  }\r\n\r\n  _list = () => {\r\n    const { search, listData, searchData } = this.state\r\n    let data = (search.length > 0) ? searchData : listData\r\n    let option = data.map((item, index) => {\r\n      return <li key={item.organizationId}\r\n        onClick={() => {\r\n          this.setState({\r\n            selectId: item\r\n          })\r\n          console.log(item);\r\n          temporaryStorage.logupSelectOrganization = item\r\n\r\n\r\n        }}\r\n\r\n      >\r\n        <div className=\"item\"> {item.name}</div>\r\n\r\n        {(this.state.selectId.organizationId === item.organizationId ? <span className=\"search\">&#xe614;</span> : null)}\r\n      </li>\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  _list1 = () => {\r\n    const { search, workplaceList, searchData } = this.state\r\n    let data = (search.length > 0) ? searchData : workplaceList\r\n    let option = data.map((item, index) => {\r\n      return <li key={item.workplaceId}\r\n        onClick={() => {\r\n          this.setState({\r\n            selectworkplace: item\r\n          })\r\n          console.log(item);\r\n\r\n        }}\r\n\r\n      >\r\n\r\n        {item.workplaceName}\r\n        {(this.state.selectworkplace === item ? <span className=\"search\">&#xe614;</span> : null)}\r\n      </li>\r\n\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  _goNewOrg = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      isOrg: false,\r\n      isWorkplace: false\r\n    })\r\n    this.props.history.push('/uesr/logUp/NewOrganization')\r\n  }\r\n  _goNewWorkplace = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      isOrg: false,\r\n      isWorkplace: false\r\n    })\r\n    this.props.history.push('/uesr/logUp/NewWorkplace')\r\n  }\r\n  _goWorkplace = () => {\r\n    console.log('前往工作场所');\r\n    fetchRequest(`/workplace/listAllWorkplaceByOrganizationId/${temporaryStorage.logupSelectOrganization.organizationId}`, \"GET\", '')\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.msg === 'success') {\r\n          this.setState({\r\n            workplaceList: res.data,\r\n            isOrg: false,\r\n\r\n          }, () => {\r\n            this.setState({\r\n              isWorkplace: true\r\n            })\r\n          })\r\n        } else {\r\n          console.log('请求错误');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  _addworkplaced = () => {\r\n    let params = {\r\n      userId: temporaryStorage.logupSuccessData.userId,\r\n      roleId: 2,\r\n      workplaceId: this.state.selectworkplace.workplaceId,\r\n      organizationId: this.state.selectworkplace.organizationId\r\n    }\r\n    console.log('入参：', params);\r\n    this.setState({\r\n      isLoading: true,\r\n      isWorkplace: false,\r\n      isOrg: false\r\n    })\r\n\r\n    fetchRequest('/user/updateUserInfo', 'POST', params)\r\n      .then(res => {\r\n        console.log(res);\r\n\r\n        if (res.flag === true) {\r\n          message.success('Join successfully', 3)\r\n\r\n          console.log('成功',);\r\n          this._logIn()\r\n        } else {\r\n          this.setState({\r\n            isLoading: false\r\n          })\r\n          message.error('Join failed', 3)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          isLoading: false\r\n        })\r\n        console.log(err);\r\n        message.error(err.message, 3)\r\n      })\r\n  }\r\n\r\n  render () {\r\n    let { disabled, bounds, isOrg, isWorkplace } = this.state\r\n    return (\r\n      <div id=\"joinOrganizationByOption\">\r\n        <div className=\"heard\">\r\n          {/* 关闭缩小 */}\r\n          <MaxMin\r\n            onClick={() => { this.props.history.push('/') }}\r\n            onClick1={() => this.props.history.push('/uesr/logUp/VetPrifile')}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"text\">Join an Organization</div>\r\n\r\n          <div className=\"way\" style={{ marginTop: px(20), marginBottom: px(60) }}>\r\n            <div className=\"item\" style={{ paddingTop: px(60) }}\r\n              onClick={() => {\r\n                // this.props.history.push('/uesr/logUp/FindMyOrganization')\r\n                this.setState({\r\n                  isOrg: true\r\n                })\r\n                console.log('搜索名称加入');\r\n              }}\r\n            >\r\n              <div className=\"iconBox\">\r\n                <MyIcon type='icon-search' className=\"icon\" />\r\n              </div>\r\n              <div className=\"r\">\r\n\r\n                <div className=\"title\">Search organization</div>\r\n\r\n                <div className=\"arrow\">\r\n                  <MyIcon type='icon-jiantou2' className=\"icon\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n            <div className=\"item\" style={{ paddingTop: px(60) }}\r\n              onClick={() => {\r\n                console.log('创建');\r\n                this.props.history.push('/uesr/logUp/NewOrganization')\r\n              }}>\r\n              <div className=\"iconBox\">\r\n                <MyIcon type='icon-tianjia4' className=\"icon\" />\r\n              </div>\r\n              <div className=\"r\">\r\n                <div className=\"listtext\">\r\n                  <div className=\"title\">Create an organization</div>\r\n                </div>\r\n                <div className=\"arrow\">\r\n                  <MyIcon type='icon-jiantou2' className=\"icon\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"item\" style={{ paddingTop: px(60) }}\r\n              onClick={() => {\r\n\r\n                let params = {\r\n                  userId: temporaryStorage.logupSuccessData.userId,\r\n                  roleId: 2,\r\n                }\r\n                message.destroy()\r\n                this.setState({\r\n                  isLoading: true\r\n                })\r\n                console.log('搜索id加入', params);\r\n                fetchRequest2('/user/updateUserInfo', 'POST', params)\r\n                  .then(res => {\r\n                    console.log(res);\r\n                    if (res.flag === true) {\r\n\r\n                      console.log('成功',);\r\n                      this._logIn()\r\n                    } else {\r\n                      this.setState({\r\n                        isLoading: false\r\n                      })\r\n                      message.error('Identity update failed')\r\n                    }\r\n                  })\r\n                  .catch(err => {\r\n                    console.log(err);\r\n                    message.error(err.message, 3)\r\n                  })\r\n              }}>\r\n              <div className=\"iconBox\">\r\n                <MyIcon type='icon-guanbi2' className=\"icon\" />\r\n              </div>\r\n              <div className=\"r\">\r\n                <div className=\"listtext\">\r\n                  <div className=\"title\">Continue without organization</div>\r\n                </div>\r\n                <div className=\"arrow\">\r\n                  <MyIcon type='icon-jiantou2' className=\"icon\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <MyModal\r\n          visible={isOrg}\r\n          element={\r\n            <div className='myfindOrg' >\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div\r\n                  // className=\" iconfont icon-left return\"\r\n                  // onClick={() => { this.setState({ isWorkplace: false, isOrg: true }) }}\r\n                  >\r\n                    {/* <img src={left1} alt=\"\" style={{ height: px(25) }} /> */}\r\n                  </div>\r\n                  <div\r\n                    onClick={() => { this.setState({ isWorkplace: false, isOrg: false }) }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"text\"\r\n                  onMouseOver={() => {\r\n                    if (disabled) {\r\n                      this.setState({\r\n                        disabled: false,\r\n                      });\r\n                    }\r\n                  }}\r\n                  onMouseOut={() => {\r\n                    this.setState({\r\n                      disabled: true,\r\n                    });\r\n                  }}\r\n\r\n                >Find my organization</div>\r\n\r\n                <div className=\"searchBox\">\r\n\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search organization\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.search}\r\n                    onChange={this._search}\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"list\"\r\n\r\n              >\r\n                {this._list()}\r\n              </div>\r\n\r\n              <div className=\"foot\">\r\n                <Button\r\n                  text={'Join Organization'}\r\n                  onClick={this._goWorkplace}\r\n                />\r\n                <span style={{ marginTop: px(20) }}>{`Don’t see your organization? `}</span>\r\n                <a href=\"#\" onClick={this._goNewOrg}>Create a new organization</a>\r\n              </div>\r\n\r\n            </div>\r\n          }\r\n\r\n        />\r\n\r\n\r\n\r\n\r\n        <MyModal\r\n          visible={isWorkplace}\r\n          element={\r\n            <div className='myfindOrg' >\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div\r\n                    // className=\" iconfont icon-left return\"\r\n                    onClick={() => { this.setState({ isWorkplace: false, isOrg: true }) }}\r\n                  >\r\n                    <img src={left1} alt=\"\" style={{ height: px(25) }} />\r\n                  </div>\r\n                  <div\r\n                    onClick={() => { this.setState({ isWorkplace: false, isOrg: false }) }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"text\" style={{ fontSize: px(35) }}>Find my workplace</div>\r\n\r\n                <div className=\"searchBox\" style={{ borderRadius: px(15) }} >\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search workplace\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.search}\r\n                    onChange={this._searchworkPlace}\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"list\"\r\n\r\n              >\r\n                {this._list1()}\r\n              </div>\r\n\r\n              <div className=\"foot\">\r\n                <Button\r\n                  text={'Join Workplace'}\r\n                  onClick={this._addworkplaced}\r\n                />\r\n                <span style={{ marginTop: px(20) }}>{`Don’t see your workplace? `}</span>\r\n                <a href=\"#\" onClick={this._goNewWorkplace}>Create a new workplace</a>\r\n              </div>\r\n\r\n            </div>\r\n          }\r\n\r\n        />\r\n        <MyModal\r\n          visible={this.state.isLoading}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx",["454","455","456","457","458","459","460","461","462","463","464","465"],"import React, { Component, } from 'react'\r\nimport {\r\n    Tag,\r\n    Input,\r\n    Tooltip,\r\n    message,\r\n    // Button\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport { createFromIconfontCN, CaretDownFilled, PlusOutlined } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport './inviteTeam.less'\r\nimport imgArray from './../../../utils/areaCode/imgArray'\r\nimport MaxMin from './../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest } from './../../../utils/FetchUtil1'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport { fetchRequest2 } from '../../../utils/FetchUtil2';\r\nimport { mTop, px } from '../../../utils/px';\r\nimport Button from './../../../utils/button/Button'\r\nimport MyModal from '../../../utils/myModal/MyModal';\r\n\r\nexport default class InviteTeam extends Component {\r\n\r\n    state = {\r\n\r\n        tags: [],\r\n        inputVisible: false,\r\n        inputValue: '',\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n        visible: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big')\r\n\r\n        //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n        ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n    }\r\n    componentWillUnmount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n    }\r\n    changeFenBianLv = (e) => {\r\n        console.log(e);\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big')\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n\r\n\r\n    handleClose = removedTag => {\r\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n        console.log(tags);\r\n        this.setState({ tags });\r\n    };\r\n\r\n    showInput = () => {\r\n        this.setState({ inputVisible: true }, () => this.input.focus());\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({ inputValue: e.target.value });\r\n    };\r\n\r\n    handleInputConfirm = () => {\r\n        const { inputValue } = this.state;\r\n        let { tags } = this.state;\r\n        if (inputValue && tags.indexOf(inputValue) === -1) {\r\n            console.log('输入的内容为：', inputValue);\r\n            message.destroy()\r\n            fetchRequest(`/user/checkUser/${inputValue}`, 'GET', '')\r\n                .then(res => {\r\n\r\n\r\n                    console.log('检测邮箱存不存在', res);\r\n\r\n                    if (res.code) {\r\n                        switch (res.code) {\r\n\r\n                            case 11011:\r\n                                console.log('邮箱存在，发送邮件');\r\n                                tags = [...tags, inputValue];\r\n                                console.log(tags);\r\n\r\n                                this.setState({\r\n                                    tags,\r\n                                    inputVisible: false,\r\n                                    inputValue: '',\r\n                                });\r\n                                break;\r\n                            case 11012:\r\n                                console.log('账号被限制、注册未激活状态');\r\n\r\n\r\n\r\n                            case 11013:\r\n                                console.log('邮箱未被注册，跳出弹框询问是否前往注册');\r\n                            case 11014:\r\n                                console.log('邮箱被注销或者封停，跳出弹框询问是否前往注册');\r\n                                message.error('This mailbox was not found!', 3)\r\n                                this.setState({\r\n                                    inputVisible: false,\r\n                                    inputValue: '',\r\n                                });\r\n                                break;\r\n\r\n                        }\r\n                    } else {\r\n                        console.log('系统错误', res);\r\n                        message.error('system error')\r\n                        this.setState({\r\n                            spin: false\r\n                        })\r\n                    }\r\n\r\n\r\n                })\r\n                .catch(err => {\r\n                    message.error(`Error:${err.message}`)\r\n                    console.log('检测邮箱号的接口出错了', err);\r\n                })\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    saveInputRef = input => {\r\n        this.input = input;\r\n    };\r\n\r\n    saveEditInputRef = input => {\r\n        this.editInput = input;\r\n    };\r\n\r\n    _next = () => {\r\n        message.destroy()\r\n        let { tags } = this.state\r\n        let { userId } = temporaryStorage.logupSuccessData\r\n        let { organizationId } = temporaryStorage.logupOrganization\r\n        console.log({ tags, userId, organizationId });\r\n        if (tags.length === 0) {\r\n            this._logIn()\r\n        }\r\n        this.setState({\r\n            visible: true\r\n        })\r\n        console.log('入参:', tags);\r\n        fetchRequest2(`/user/inviteUserByEmail/${userId}/${organizationId}`, \"POST\", tags)\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.flag === true) {\r\n                    console.log('成功，跳转');\r\n                    message.success('Invitation successful', 3)\r\n                    this._logIn()\r\n                } else {\r\n                    this.setState({\r\n                        visible: false\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    visible: false\r\n                })\r\n                console.log(err);\r\n                message.error(err.message, 3)\r\n            })\r\n    }\r\n    _logIn = () => {\r\n\r\n        let storage = window.localStorage;\r\n        let { email, hash } = temporaryStorage.logupVetInfo\r\n        let params = {\r\n            email: email.replace(/(^\\s*)/g, \"\"),\r\n            hash,\r\n            identityTypeId: '1'\r\n        }\r\n        console.log('登录入参:', params);\r\n        fetchRequest('/user/mellaLogin', 'POST', params)\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    visible: false\r\n                })\r\n                if (res.status && res.status === 404) {\r\n                    message.error('system error');\r\n                    return\r\n                }\r\n                if (res.code === 10001 && res.msg === '账号错误') {\r\n                    message.error('Account error');\r\n                    return\r\n                }\r\n                if (res.code === 10002 && res.msg === '密码错误') {\r\n                    message.error('wrong password')\r\n                    return;\r\n                }\r\n                if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\r\n                    message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\r\n                    return\r\n                }\r\n\r\n                if (res.code === 0 && res.msg === 'success') {\r\n                    console.log('账号密码正确，登录进去了');\r\n                    let { userWorkplace, lastOrganization, token } = res.success\r\n                    storage.token = token\r\n                    storage.userId = ''\r\n\r\n                    storage.userId = res.success.userId\r\n                    storage.roleId = res.success.roleId\r\n\r\n                    //每次登陆后清空宠物列表缓存的数据\r\n                    storage.doctorList = ''\r\n                    storage.defaultCurrent = ''\r\n\r\n\r\n\r\n\r\n                    if (userWorkplace) {\r\n                        storage.userWorkplace = JSON.stringify(userWorkplace)\r\n                        let connectionKey = ''\r\n                        const element = userWorkplace[0];\r\n                        storage.lastOrganization = element.organizationEntity.organizationId\r\n                        storage.lastWorkplaceId = element.workplaceEntity.workplaceId\r\n                        if (element.organizationEntity.connectionKey) {\r\n                            connectionKey = element.organizationEntity.connectionKey\r\n                        }\r\n                        if (element.roleId) {\r\n                            console.log(element.roleId);\r\n                            storage.roleId = element.roleId\r\n                        }\r\n                        if (userWorkplace.length === 1) {\r\n                            this.props.history.push('/uesr/selectExam')\r\n\r\n                        } else {\r\n                            this.props.history.push('/page12')\r\n                        }\r\n                    } else {\r\n                        storage.userWorkplace = ''\r\n                        storage.connectionKey = ''\r\n                        this.props.history.push('/uesr/selectExam')\r\n                    }\r\n\r\n\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    visible: false\r\n                })\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render () {\r\n        const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n        // console.log('---', editInputIndex);\r\n        return (\r\n            <div id=\"inviteTeam\" >\r\n                {/* 关闭缩小 */}\r\n                <div className=\"heard\">\r\n                    <MaxMin\r\n                        onClick={() => { this.props.history.push('/') }}\r\n                        onClick1={() => this.props.history.goBack()}\r\n                    />\r\n                    <div className=\"text\">Invite your Team</div>\r\n\r\n                    <div className=\"addF\">\r\n                        <p>To:</p>\r\n                        <div className=\"add\">\r\n\r\n                            <>\r\n                                {tags.map((tag, index) => {\r\n                                    const isLongTag = tag.length > 25;  //标签里面的字符串的长度\r\n\r\n                                    const tagElem = (\r\n                                        <Tag\r\n                                            className=\"edit-tag\"\r\n                                            key={tag}\r\n                                            closable={true}\r\n                                            onClose={() => this.handleClose(tag)}\r\n                                        >\r\n                                            <span>\r\n                                                {isLongTag ? `${tag.slice(0, 25)}...` : tag}\r\n                                            </span>\r\n                                        </Tag>\r\n                                    );\r\n                                    return isLongTag ? (\r\n                                        <Tooltip title={tag} key={tag}>\r\n                                            {tagElem}\r\n                                        </Tooltip>\r\n                                    ) : (\r\n                                        tagElem\r\n                                    );\r\n                                })}\r\n                                {inputVisible && (\r\n                                    <Input\r\n                                        ref={this.saveInputRef}\r\n                                        type=\"text\"\r\n                                        size=\"small\"\r\n                                        className=\"tag-input\"\r\n                                        value={inputValue}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.handleInputConfirm}\r\n                                        onPressEnter={this.handleInputConfirm}\r\n                                    />\r\n                                )}\r\n                                {!inputVisible && (\r\n                                    <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n                                        <PlusOutlined />Press Enter to add mailbox\r\n                                    </Tag>\r\n                                )}\r\n                            </>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"btn\"\r\n                    style={{ padding: `${px(40)}px 0` }}\r\n                >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        size='large'\r\n                        htmlType=\"submit\"\r\n                        onClick={this._logIn}\r\n                        text={'Skip'}\r\n                    >\r\n                        Skip\r\n                    </Button>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        size='large'\r\n                        htmlType=\"submit\"\r\n                        onClick={this._next}\r\n                        text={'Send'}\r\n                    >\r\n\r\n                    </Button>\r\n                </div>\r\n                <MyModal visible={this.state.visible} />\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\settings\\Settings.jsx",["466","467","468","469","470","471"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx",["472","473","474","475","476","477","478","479","480","481","482","483"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\NewOrganization.jsx",["484"],"import React, { Component, } from 'react'\r\nimport {\r\n  Button,\r\n  Select,\r\n  Modal,\r\n  message\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport { CaretDownFilled } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport './newOrganization.less'\r\nimport imgArray from './../../../utils/areaCode/imgArray'\r\nimport MaxMin from './../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest } from './../../../utils/FetchUtil1'\r\nimport countryList from './../../../utils/areaCode/country';\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport { px } from './../../../utils/px'\r\nimport MyModal from '../../../utils/myModal/MyModal';\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\nexport default class NewOrg extends Component {\r\n\r\n  state = {\r\n    code: 1,\r\n    imgArrayIndex: 0,\r\n    phone: '',\r\n    organizationName: '',\r\n    practiceName: '',\r\n    address: '',\r\n    country: 'US',\r\n    city: '',\r\n    state: '',\r\n    zipcode: '',\r\n    address1: '',\r\n    address2: '',\r\n    workplaceTypeId: 1,\r\n    email: '',\r\n    visible: false,       //nodel框是否显示\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n    countryArr: []\r\n\r\n\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    let arr = countryList.map(item => item.locale)\r\n    arr.sort(function (a, b) {\r\n      return a.localeCompare(b)\r\n    })\r\n    this.setState({\r\n      countryArr: arr\r\n    })\r\n\r\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n  }\r\n  componentWillUnmount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n  _next = () => {\r\n    let { organizationName, practiceName, workplaceTypeId, code, phone, country, city, state, address1, address2, zipcode, email } = this.state\r\n    console.log({ organizationName, practiceName, workplaceTypeId, code, phone, country, city, state, address1, address2, zipcode });\r\n    message.destroy()\r\n    if (!organizationName) {\r\n      message.error('Please enter an organization name', 3)\r\n      return;\r\n    }\r\n    if (!practiceName) {\r\n      message.error('Please enter an Practice name', 3)\r\n      return;\r\n    }\r\n    // if (!phone) {\r\n    //   message.error('Please enter the phone number', 3)\r\n    //   return;\r\n    // }\r\n    if (!country) {\r\n      message.error('Please enter country name', 3)\r\n      return;\r\n    }\r\n    if (!city) {\r\n      message.error('Please enter the city name', 3)\r\n      return;\r\n    }\r\n    if (!address1) {\r\n      message.error('Please enter address1', 3)\r\n      return;\r\n    }\r\n    // if (!address2) {\r\n    //   message.error('Please enter address2', 3)\r\n    //   return;\r\n    // }\r\n    if (!zipcode) {\r\n      message.error('Please enter the postal code', 3)\r\n      return;\r\n    }\r\n    if (!email) {\r\n      message.error('Please enter the contact email', 3)\r\n      return;\r\n    } else {\r\n      if (email.indexOf('@') === -1 || email.indexOf('@') === 0 || email.indexOf('@') === email.length - 1) {\r\n        message.error('E-mail format is incorrect', 3)\r\n        return\r\n      }\r\n    }\r\n    zipcode = parseInt(zipcode)\r\n\r\n    let params = {\r\n      name: organizationName,\r\n      workplaceName: practiceName,\r\n      workplaceTypeId,\r\n      address1,\r\n      address2,\r\n      // phone: `+${code}${phone}`,\r\n      country,\r\n      city,\r\n      state,\r\n      zipcode,\r\n      email\r\n    }\r\n    if (phone) {\r\n      params.phone = `+${code}${phone}`\r\n    }\r\n    this.setState({\r\n      loadVisible: true\r\n    })\r\n\r\n    console.log('入参信息：', params, storage.userId);\r\n    fetchRequest(`/organization/addOrganization/${storage.userId}`, \"POST\", params)\r\n\r\n      .then(res => {\r\n        console.log('添加组织返回的信息', res);\r\n        this.setState({\r\n          loadVisible: false\r\n        })\r\n        if (res.flag === true) {\r\n          if (res.code === 11030) {\r\n            this.setState({ visible: true })\r\n          }\r\n          if (res.code === 20000) {\r\n            console.log('添加成功，跳转');\r\n            this.props.history.push('/menuOptions/Team')\r\n          }\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('添加组织接口失败', err);\r\n        this.setState({\r\n          loadVisible: false\r\n        })\r\n        message.error(err.message, 3)\r\n      })\r\n  }\r\n\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  render () {\r\n\r\n    let { disabled, visible, bounds, address1, address2, phone, organizationName, practiceName, city, state, zipcode, workplaceTypeId, email } = this.state\r\n    return (\r\n      <div id=\"newOraganization\" >\r\n        <div className=\"heard\">\r\n          {/* 关闭缩小 */}\r\n          <MaxMin\r\n            onClick={() => { this.props.history.push('/') }}\r\n            onClick1={() => { console.log('fanhui'); this.props.history.goBack() }}\r\n          />\r\n        </div>\r\n        <div className=\"body\">\r\n          <div className=\"bodyHeard\">\r\n            <div className=\"text\">New Organization and Practice</div>\r\n            <div className=\"text1\" style={{ marginTop: px(10) }}>Tell us more about the place you will be using Mella!</div>\r\n\r\n          </div>\r\n\r\n          <div className=\"form\">\r\n            <div className=\"item\" style={{ marginTop: px(40) }}>\r\n              <div className=\"l\">\r\n                <p>Organization Name*</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={organizationName}\r\n                  placeholder={'Organization Name'}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      organizationName: data\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"item\" style={{ marginTop: px(40) }}>\r\n              <div className=\"l\">\r\n                <p>Practice Name*</p>\r\n                <input\r\n                  type=\"text\"\r\n                  value={practiceName}\r\n                  placeholder={'Practice Name'}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      practiceName: data\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n\r\n\r\n              <div className=\"l\">\r\n                <p>Contact Email*</p>\r\n                <input\r\n                  type=\"Email\"\r\n                  value={email}\r\n                  onChange={(value) => {\r\n                    let data = value.target.value\r\n                    this.setState({\r\n                      email: data\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"item\" style={{ marginTop: px(40) }}>\r\n\r\n              <div className=\"l\">\r\n                <p>Type of Practice*</p>\r\n                <div className=\"select\" >\r\n                  <Select\r\n                    value={workplaceTypeId}\r\n                    style={{ width: '100%', borderRadius: '100px' }}\r\n                    onChange={(value) => { this.setState({ workplaceTypeId: value }) }}\r\n                  >\r\n                    <Option value={1}>practice </Option>\r\n                    <Option value={2}>clinic </Option>\r\n                    <Option value={3}>shelter</Option>\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"l\">\r\n                <ul id=\"list\" style={{ top: -px(90), left: px(10) }}>\r\n                  {countryList.map((item, index) => {\r\n                    let url = imgArray[item.locale.toLowerCase()] ? imgArray[item.locale.toLowerCase()].default : ''\r\n                    return (\r\n                      <li key={index}>\r\n                        <div key={index}\r\n                          style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\r\n                          onClick={() => {\r\n                            console.log(item, index);\r\n                            this.setState({\r\n                              code: item.code,\r\n                              imgArrayIndex: index\r\n                            })\r\n                            document.getElementById('list').style.display = \"none\"\r\n                          }}\r\n                        >\r\n                          <img src={url} alt=\"\" />\r\n                          <p >{`${item.en}   +${item.code}`}</p>\r\n                        </div>\r\n                      </li>\r\n                    )\r\n                  })}\r\n                </ul>\r\n\r\n                <p>Contact Number*</p>\r\n                <div className='phone'>\r\n                  <div\r\n                    style={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}\r\n                    onClick={() => {\r\n                      document.getElementById('list').style.display = \"block\"\r\n                    }}\r\n                  >\r\n                    <img style={{ zIndex: '888' }}\r\n                      src={imgArray[countryList[this.state.imgArrayIndex].locale.toLowerCase()].default} alt=\"\"\r\n                    />\r\n                    <CaretDownFilled style={{ marginRight: '10px' }} />\r\n                  </div>\r\n\r\n\r\n                  <input\r\n                    type=\"Phone\"\r\n                    value={phone}\r\n                    onChange={(value) => {\r\n                      let data = value.target.value\r\n                      this.setState({\r\n                        phone: data.replace(/[^\\-?\\d]/g, '')\r\n                      })\r\n                    }}\r\n                  />\r\n                </div>\r\n\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"item\" style={{ marginTop: px(40) }}>\r\n              <div className=\"l\">\r\n                <p>Address*</p>\r\n                <div className=\"inputs\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={address1}\r\n                    placeholder={'address1'}\r\n                    onChange={(value) => {\r\n                      let data = value.target.value\r\n                      this.setState({\r\n                        address1: data\r\n                      })\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={address2}\r\n                    placeholder={'address2'}\r\n                    onChange={(value) => {\r\n                      let data = value.target.value\r\n                      this.setState({\r\n                        address2: data\r\n                      })\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={city}\r\n                    placeholder={'city'}\r\n                    onChange={(value) => {\r\n                      let data = value.target.value\r\n                      this.setState({\r\n                        city: data\r\n                      })\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={state}\r\n                    placeholder={'state'}\r\n                    onChange={(value) => {\r\n                      let data = value.target.value\r\n                      this.setState({\r\n                        state: data\r\n                      })\r\n                    }}\r\n                  />\r\n                  <input\r\n                    type=\"text\"\r\n                    value={zipcode}\r\n                    placeholder={'zipcode'}\r\n                    onChange={(value) => {\r\n                      let data = value.target.value.replace(/\\D/g, '')\r\n                      this.setState({\r\n                        zipcode: data\r\n                      })\r\n                    }}\r\n                  />\r\n\r\n                  <Select\r\n                    // showSearch\r\n                    style={{ width: 100, borderBottom: '1px solid rgba(216,216,216,1)' }}\r\n                    bordered={false}\r\n                    optionFilterProp=\"children\"\r\n                    defaultValue=\"US\"\r\n                    onSelect={(val) => {\r\n                      console.log('选择的国家：', val);\r\n                      this.setState({\r\n                        country: val\r\n                      })\r\n                    }}\r\n                  >\r\n                    {this.state.countryArr.map((item, index) => (\r\n                      <Option key={index} value={item}>{item}</Option>\r\n                    ))}\r\n                  </Select>\r\n\r\n\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"footer\" style={{ height: px(120) }}>\r\n          {/* 按钮 */}\r\n          <div className=\"btn\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size='large'\r\n              htmlType=\"submit\"\r\n              onClick={this._next}\r\n            >\r\n              Next\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        <Modal\r\n          title={\r\n            <div\r\n              style={{\r\n                width: '100%',\r\n                cursor: 'move',\r\n                height: '20px',\r\n                fontWeight: '700'\r\n              }}\r\n              onMouseOver={() => {\r\n                if (disabled) {\r\n                  this.setState({\r\n                    disabled: false,\r\n                  });\r\n                }\r\n              }}\r\n              onMouseOut={() => {\r\n                this.setState({\r\n                  disabled: true,\r\n                });\r\n              }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  visible: false\r\n                })\r\n              }}\r\n            >\r\n              remind\r\n            </div>\r\n          }\r\n          visible={visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          modalRender={(modal) => (\r\n            <Draggable\r\n              disabled={disabled}\r\n              bounds={bounds}\r\n              onStart={(event, uiData) => this.onStart(event, uiData)}\r\n            >\r\n              <div ref={this.draggleRef}>{modal}</div>\r\n            </Draggable>\r\n          )}\r\n          footer={[\r\n            <button\r\n              style={{ width: '110px', height: '40px', border: 0, backgroundColor: '#E1206D', color: '#fff', borderRadius: '60px', fontSize: '18px' }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  visible: false,\r\n                  organizationName: ''\r\n                })\r\n              }}\r\n            >Cancel</button>,\r\n            <button\r\n              style={{ width: '110px', height: '40px', border: 0, backgroundColor: '#E1206D', color: '#fff', borderRadius: '60px', fontSize: '18px' }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  visible: false\r\n                })\r\n                this.props.history.replace('/uesr/logUp/JoinOrganizationByOption')\r\n              }}\r\n            >Join</button>\r\n\r\n          ]}\r\n          destroyOnClose={true}\r\n        >\r\n          <div id='vetPrifileModal'>\r\n\r\n            <p>This organization has already been registered, do you want to join?</p>\r\n          </div>\r\n\r\n        </Modal>\r\n\r\n        <MyModal\r\n          visible={this.state.loadVisible}\r\n        />\r\n\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil2.js",["485","486","487","488"],"\r\n// let COMMON_URL = 'http://192.168.0.36:8080/melladesk';//本地\r\nlet COMMON_URL = 'https://www.mellaserver.com/api/melladesk';//企业AWS\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchRequest2 (url, method, params = '', Authorization) {\r\n\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": 'text/plain'\r\n          }\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          // mode: 'cors',\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\px.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js",["489","490","491"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx",["492","493"],"\r\n/**\r\n * \r\n * @param {boolean} visible 控制modal框是否显示\r\n * @param {element} element 自定义modal框里面的内容，默认是组件是加载中。。。\r\n * @returns {element} 这是自己写的一个modal框\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport './myModal.less'\r\nimport { px, pX, MTop, mTop } from '../px'\r\n\r\nclass MyModal extends Component {\r\n\r\n  render () {\r\n    let { visible, element, text } = this.props\r\n    // console.log('---上层组件传来的值---', this.props);\r\n\r\n    if (visible) {\r\n      let body = element ? element :\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n          <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n            <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n          </div>\r\n          <p>\r\n            {text ? text : 'loading...'}\r\n          </p>\r\n        </div>\r\n      return (\r\n        <div className=\"myModal\">\r\n          {body}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (null)\r\n    }\r\n\r\n  }\r\n}\r\n\r\nMyModal.propTypes = {\r\n  visible: PropTypes.bool,\r\n  element: PropTypes.element,\r\n  text: PropTypes.string\r\n\r\n}\r\nMyModal.defaultProps = {\r\n  visible: false,\r\n  text: 'loading...'\r\n}\r\n\r\nexport default MyModal","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\current.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js",["494","495","496","497"],"\r\nlet COMMON_URL = 'https://www.mellaserver.com/big/mellabiggie';//内部负载均衡\r\n\r\n//let COMMON_URL = 'http://34.206.181.105:31668/mellabiggie';//内部负载均衡\r\n\r\n// let COMMON_URL = 'http://192.168.0.36:9090/mellabiggie';//本地测试\r\nlet token = '';\r\n\r\n\r\nexport async function fetchRequest4 (url, method, params = '', Authorization = '', isLogin) {\r\n\r\n  // if (isLogin) {\r\n\r\n  //     COMMON_URL = 'http://34.206.181.105:31667/mellaserver'\r\n  // } else {\r\n  //     COMMON_URL = 'https://www.mellaserver.com/big/mellabiggie'\r\n  // }\r\n  console.log(COMMON_URL, url);\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          headers: {\r\n            Authorization\r\n          },\r\n          method: method,\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      console.log(COMMON_URL + url);\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": 'text/plain',\r\n            Authorization\r\n          },\r\n\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx",["498","499","500","501","502","503","504","505","506","507","508","509","510","511","512"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx",["513","514","515"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { px } from '../../utils/px'\r\nimport { petSortTypeFun, petDetailInfoFun, setPetListArrFun } from '../../store/actions'\r\nimport electronStore from '../../utils/electronStore'\r\nimport petIcon from './../../assets/img/petIcon.png'\r\nimport xia from './../../assets/img/xia.png'\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate'\r\n\r\n\r\nimport './mainbody.less'\r\nimport { fetchRequest } from '../../utils/FetchUtil1';\r\n\r\nlet storage = window.localStorage;\r\n\r\n\r\nconst PetsUI = ({ bodyHeight, petSortTypeFun, petSortType, petDetailInfoFun, petDetailInfo, setPetListArrFun, petListArr }) => {\r\n  //定义宠物列表数组\r\n  const [petList, setPetList] = useState([])\r\n\r\n  useEffect(() => {\r\n    //设置宠物列表数据\r\n    setPetList(petListArr)\r\n  }, [petListArr])\r\n\r\n  useEffect(() => {\r\n    //从本地获取宠物列表数据\r\n    let petList = electronStore.get('petList') || [];\r\n    _getExam()\r\n  }, [])\r\n\r\n  //获取宠物列表数据\r\n  const _getExam = () => {\r\n\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\r\n      .then(res => {\r\n        console.log('查询所有宠物', res);\r\n        if (res.flag === true && res.data) {\r\n          let oldList = res.data\r\n          let petArr = dataSort(oldList)\r\n          setPetList(petArr)\r\n          setPetListArrFun(petArr)\r\n        } else {\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n\r\n      })\r\n  }\r\n  const dataSort = (data) => {\r\n    let petList = [].concat(data)\r\n    switch (petSortType) {\r\n      case 'Time':\r\n        petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\r\n        break;\r\n      case 'Pet ID':\r\n        petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\r\n        break;\r\n      case 'Owner':\r\n        petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\r\n        break;\r\n      case 'Breed':\r\n        petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\r\n        break;\r\n      case 'Pet Name':\r\n        petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\r\n        break;\r\n      case 'Gender':\r\n        petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\r\n        break;\r\n    }\r\n    return petList\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  const menu = () => {\r\n    let menuList = [\r\n      { value: 'Time' },\r\n      { value: 'Pet ID' },\r\n      { value: 'Owner' },\r\n      { value: 'Breed' },\r\n      { value: 'Pet Name' },\r\n      { value: 'Gender' },\r\n    ];\r\n    let options = menuList.map((item, index) => {\r\n      let itemstyle = {}, textColor = '#1a1a1a'\r\n      if (petSortType === item.value) {\r\n        itemstyle = { backgroundColor: '#e1206D' }\r\n        textColor = '#fff'\r\n      }\r\n      return (\r\n        <Menu.Item style={itemstyle} key={`${item.value}`}>\r\n          <div style={{ color: textColor }}>{item.value}</div>\r\n        </Menu.Item>\r\n      )\r\n    })\r\n    return (\r\n      <Menu onClick={({ key, }) => {\r\n        petSortTypeFun(key)\r\n        dataSort(petList)\r\n      }}>\r\n        {options}\r\n\r\n      </Menu>\r\n    );\r\n  }\r\n  const petListUI = () => {\r\n    let options = petList.map((item, index) => {\r\n      let itemBac = '#E7E7E7', itemColor = '#141414'\r\n      if (item.petId === petDetailInfo.petId) {\r\n        itemBac = '#e1206D'\r\n        itemColor = '#fff'\r\n      }\r\n      return (\r\n        <li key={index} >\r\n          <div className='petItem'\r\n            style={{ padding: `${px(7)}px 0 ${px(7)}px ${px(20)}px`, fontSize: 14, backgroundColor: itemBac, color: itemColor }}\r\n            onClick={() => {\r\n              console.log('点击了宠物', item);\r\n              petDetailInfoFun(item)\r\n            }}\r\n          >\r\n            {`${item.patientId}, ${item.petName}`}\r\n          </div>\r\n        </li>\r\n      )\r\n\r\n    })\r\n\r\n    return (\r\n      <div className=\"petList\" style={{ marginTop: px(10), height: bodyHeight - devicesTitleHeight - px(220) }}>\r\n        <ul>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"PetUI\" style={{ height: bodyHeight - devicesTitleHeight, }}>\r\n      <div className=\"title\" style={{ padding: `${px(20)}px 0px ${px(20)}px ${px(20)}px ` }}>\r\n        <img src={petIcon} alt=\"\" width={px(25)} style={{ marginRight: px(10) }} />\r\n        <div className=\"titleText\" >Pets</div>\r\n      </div>\r\n      <div className=\"sort\" style={{ paddingLeft: px(20) }}>\r\n        <Dropdown overlay={menu} trigger={['click']}>\r\n          <div className=\"sortBox\">\r\n            <img src={xia} alt=\"\" width={px(20)} style={{ marginRight: px(10) }} />\r\n            <div className=\"sortText\" >\r\n              {`Sort by: ${petSortType}`}\r\n            </div>\r\n          </div>\r\n        </Dropdown>\r\n      </div>\r\n      {petListUI()}\r\n\r\n      <div className=\"walkBtn\">\r\n        <div\r\n          className=\"walkbtnBox\"\r\n          style={{ height: px(40), marginTop: px(30) }}\r\n          onClick={() => {\r\n            let json = {\r\n              isWalkIn: true,\r\n              petId: null,\r\n              petName: null,\r\n              owner: null,\r\n              breed: null,\r\n\r\n            }\r\n            petDetailInfoFun(json)\r\n          }}\r\n        >\r\n          <div className=\"walkText\">Walk-In</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nPetsUI.propTypes = {\r\n  bodyHeight: PropTypes.number\r\n}\r\n//默认值\r\nPetsUI.defaultProps = {\r\n  bodyHeight: 0\r\n}\r\nexport default connect(\r\n  state => ({\r\n    petSortType: state.petReduce.petSortType,\r\n    petDetailInfo: state.petReduce.petDetailInfo,\r\n    petListArr: state.petReduce.petListArr,\r\n  }),\r\n  { petSortTypeFun, petDetailInfoFun, setPetListArrFun }\r\n)(PetsUI)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx",["516","517","518","519","520","521","522","523","524"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx",["525"],"\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './selectionBox.less'\r\nimport { px } from './../px'\r\nimport { stopBubble } from './../current'\r\n\r\nimport blackTriangle from './../../assets/img/blackTriangle.png'\r\n\r\n\r\nconst SelectionBox = ({ listArr, clickItem, clickitemBgc, clickItemColor, initSelectVale }) => {\r\n    const [selectValue, setSelectValue] = useState('')\r\n    const [mouseValue, setMouseValue] = useState('')\r\n    const [showSelect, setShowSelect] = useState(false)\r\n    // const [bacColor, setBacColor] = useState('#fff')\r\n    // const [textColor, setTextColor] = useState('#000')\r\n\r\n    useEffect(() => {\r\n        console.log(listArr[0]);\r\n        setSelectValue(listArr[0].value)\r\n        setMouseValue(listArr[0].value)\r\n        if (initSelectVale) {\r\n            setSelectValue(initSelectVale)\r\n        }\r\n    }, [])\r\n\r\n    const selection = () => {\r\n        let option = listArr.map((item, index) => {\r\n            let bacColor = item.value === selectValue ? clickitemBgc : item.value === mouseValue ? '#e7e7e7' : '#fff'\r\n            let textColor = item.value === selectValue ? clickItemColor : '#000'\r\n\r\n\r\n            // setBacColor(bacColor1)\r\n            // setTextColor(textColor1)\r\n            return <li\r\n                key={item.key}\r\n                style={{ paddingTop: px(5), paddingBottom: px(5), backgroundColor: bacColor, color: textColor }}\r\n                onClick={() => {\r\n                    setSelectValue(item.value)\r\n                    setShowSelect(false)\r\n                    clickItem(item)\r\n                }}\r\n                onMouseMove={() => {\r\n                    console.log();\r\n                    if (item.value !== selectValue) {\r\n                        setMouseValue(item.value)\r\n                    }\r\n                }}\r\n                onMouseLeave={() => {\r\n                    if (item.value !== selectValue) {\r\n                        // setBacColor('#fff')\r\n                        setMouseValue('')\r\n                    }\r\n                }}\r\n            >{item.value}</li>\r\n        })\r\n        return (\r\n            <ul>\r\n                {option}\r\n            </ul>\r\n        )\r\n\r\n\r\n    }\r\n    return (\r\n        <div className='selectionbox'>\r\n\r\n            <div className=\"select flex\" style={{ height: px(26) }}>\r\n                <div className=\"flex box\" onClick={(e) => {\r\n                    setShowSelect(true)\r\n                    stopBubble(e)\r\n                }}>\r\n                    <p style={{ fontSize: px(16), }}>{selectValue}</p>\r\n                    <img src={blackTriangle} alt=\"\" style={{ height: '50%' }} />\r\n                </div>\r\n\r\n                {\r\n                    showSelect &&\r\n                    true &&\r\n                    <div className=\"sortList\" style={{ top: px(26), }}>\r\n                        {selection()}\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nSelectionBox.propTypes = {\r\n    listArr: PropTypes.array.isRequired,\r\n    clickItem: PropTypes.func,\r\n    clickitemBgc: PropTypes.string,\r\n    clickItemColor: PropTypes.string,\r\n    initSelectVale: PropTypes.string\r\n\r\n\r\n}\r\nSelectionBox.defaultProps = {\r\n    clickitemBgc: '#e1206d',\r\n    clickItemColor: '#fff',\r\n    initSelectVale: '',\r\n    clickItem: () => {\r\n\r\n    }\r\n}\r\nexport default SelectionBox","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\userAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil3.js",["526","527","528","529"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["530","531","532","533","534","535","536","537"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["538","539","540","541","542","543"],"import React, {\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport { Image, Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PressButton_Pro from './../../../assets/img/PressButton_Pro.png';\r\nimport AxillaryPlacement from './../../../assets/img/AxillaryPlacement.png';\r\nimport {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun\r\n} from '../../../store/actions';\r\nimport _ from 'lodash';\r\n// import HeaderItem from './headerItem';\r\nimport './linkEquipment.less';\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n    let { mellaConnectStatus } = hardwareMessage;\r\n    return (\r\n        <>\r\n            {/* <HeaderItem /> */}\r\n            <Content className={\"contentBox\"}>\r\n                {\r\n                    _.isEqual(mellaConnectStatus, 'disconnected') ?\r\n                        (\r\n                            <div className='startBox'>\r\n                                <p className='startTitle'>Turn on your<br />Mella Thermometer<br />or Pair New Mella</p>\r\n                                <img src={PressButton_Pro}></img>\r\n                            </div>\r\n                        ) :\r\n                        (\r\n                            <div className='startBox'>\r\n                                <p className='startTitle'>Ready, place under foreleg</p>\r\n                                <img src={AxillaryPlacement}></img>\r\n                                <div className='bottomTip'>\r\n                                    <p className='tipTitle'>Need Help With Accurate Placement On Pet?</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                }\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\nexport default connect(\r\n    state => ({\r\n        petMessage: state.petReduce.petDetailInfo,\r\n        hardwareMessage: state.hardwareReduce,\r\n    }),\r\n    {\r\n        selectHardwareModalShowFun,\r\n        petSortTypeFun,\r\n        petDetailInfoFun,\r\n        setMellaConnectStatusFun,\r\n        setMellaMeasureValueFun,\r\n        setMellaPredictValueFun,\r\n        setMellaMeasurePartFun\r\n    }\r\n)(LinkEquipment);","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx",["544","545","546","547","548","549"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js",["550"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Menu,\r\n    Popover,\r\n    Button,\r\n    Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport pinyin from 'pinyin';\r\n\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './phoneBook.less'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\n\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\r\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\r\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\r\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\r\n\r\n    useEffect(() => {\r\n        if (confirmSelectBreed !== -1) {\r\n            setSelectBreed(confirmSelectBreed)\r\n        }\r\n    }, [confirmSelectBreed])\r\n\r\n\r\n    console.log('listsDate', phoneList)\r\n\r\n    useEffect(() => {\r\n        // console.log('listsDate', listDate)\r\n        console.log('进来了');\r\n        let test = []\r\n        listDate.map((item, index) => {\r\n            let data = {\r\n                name: item.breedName,\r\n                hidden: false,\r\n                petSpeciesBreedId: item.petSpeciesBreedId\r\n            }\r\n            test.push(data)\r\n        })\r\n        // 暂时静态数据替换\r\n        //获取联系人列表\r\n        console.log('11111111111', test)\r\n        let list = test;\r\n        let sections = [], letterArr = [];\r\n        // console.log('原始的数据:',list)\r\n\r\n        // 右侧字母栏数据处理\r\n        list.map((item, index) => {\r\n            letterArr.push(pinyin(item.name.substring(0, 1), {\r\n                style: pinyin.STYLE_FIRST_LETTER,\r\n            })[0][0].toUpperCase());\r\n\r\n            letterArr = [...new Set(letterArr)].sort();\r\n        });\r\n\r\n        // 分组数据处理\r\n        letterArr.map((item, index) => {\r\n            sections.push({\r\n                title: item,\r\n                data: []\r\n            })\r\n        });\r\n        list.map(item => {\r\n            let listItem = item;\r\n            sections.map(item => {\r\n                // console.log('}}}}}}}}}}}}}}',item)\r\n                let first = listItem.name.substring(0, 1);\r\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\r\n                if (item.title == test) {\r\n                    item.data.push({\r\n                        firstName: first,\r\n                        name: listItem.name,\r\n                        hidden: listItem.hidden,\r\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\r\n                    });\r\n                }\r\n            })\r\n        });\r\n\r\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\r\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\r\n        // console.log('-1----', sections, letterArr);\r\n        setPhoneList(sections)\r\n        setPhoneListCopy(sections)\r\n        setLetterList(letterArr)\r\n        setLetterListCopy(letterArr)\r\n    }, [])\r\n    useEffect(() => {\r\n        // if (searchText) {\r\n        console.log('搜索内容', searchText, letterListCopy);\r\n        if (letterListCopy.length > 0) {\r\n\r\n            let allData = phoneListCopy\r\n            let newArr = []\r\n            let arr = []\r\n            if (searchText.length > 0) {\r\n                allData.map((item, i) => {\r\n                    item.data.map((data, index) => {\r\n                        // console.log(index)\r\n                        let dataName = data.name ? data.name.toUpperCase() : ''\r\n                        let keyData = searchText ? searchText.toUpperCase() : ''\r\n                        if (dataName.search(keyData) !== -1) {\r\n                            newArr.push(data)\r\n                        }\r\n                    })\r\n                    // console.log('一组数据：', newArr)\r\n                    if (newArr.length != 0) {\r\n                        let oneGreep = {\r\n                            title: item.title,\r\n                            data: newArr\r\n                        }\r\n                        //   console.log('一11组数据：', oneGreep)\r\n                        arr.push(oneGreep)\r\n                    }\r\n\r\n                    newArr = []\r\n                })\r\n                //   console.log('--------------------------', arr)\r\n                let letterArr = []\r\n                arr.map((item, index) => {\r\n                    letterArr.push(item.title)\r\n                })\r\n                // newArr = []\r\n                // // console.log('---||-----',newArr)\r\n                setPhoneList(arr)\r\n                setLetterList(letterArr)\r\n            } else {\r\n\r\n                setPhoneList(phoneListCopy)\r\n                setLetterList(letterListCopy)\r\n            }\r\n        }\r\n\r\n\r\n    }, [searchText])\r\n\r\n\r\n\r\n    const _phoneList = () => {\r\n\r\n        let option = phoneList.map((item, index) => {\r\n            let data = item.data\r\n            let option1 = data.map((value, index1) => {\r\n                return (\r\n                    <li\r\n                        key={`option1${index1}`}\r\n                        onClick={() => {\r\n                            // console.log(value.petSpeciesBreedId);\r\n                            setSelectBreed(value.petSpeciesBreedId)\r\n                            selectFun(value)\r\n                        }}>\r\n                        {value.name}\r\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\r\n                    </li>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <div className=\"phoneBody\">\r\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\r\n                    <ul>\r\n                        {option1}\r\n                    </ul>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul>\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const _letterList = () => {\r\n\r\n        let option = letterList.map((item, index) => {\r\n\r\n\r\n            return (\r\n                <li\r\n                    key={`${index}`}\r\n\r\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\r\n                    <a\r\n\r\n                        onClick={() => {\r\n                            litterClick(item)\r\n                        }}\r\n                    >{item}</a>\r\n                </li>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul className=\"letterUL\">\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const litterClick = (anchorName) => {\r\n        // console.log(anchorName);\r\n        if (anchorName) {\r\n            // 找到锚点\r\n            let anchorElement = document.getElementById(anchorName);\r\n            // console.log(anchorElement);\r\n            // 如果对应id的锚点存在，就跳转到锚点\r\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\r\n        }\r\n        // e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"phoneBook\">\r\n            <div className=\"phone\">\r\n                {_phoneList()}\r\n            </div>\r\n            <div className=\"litter\">\r\n                {_letterList()}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n\r\n    listDate: PropTypes.array,\r\n    selectFun: PropTypes.func,\r\n    searchText: PropTypes.string,\r\n    confirmSelectBreed: PropTypes.number\r\n}\r\nPhoneBook.defaultProps = {\r\n    listDate: [],\r\n    selectFun: () => { },\r\n    searchText: '',\r\n    confirmSelectBreed: -1,\r\n}\r\n\r\nexport default PhoneBook","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\apiKey\\APIKey.jsx",["572","573","574","575"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["576","577","578","579"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectScheduledExam.jsx",["580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx",["608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\ishavePMS\\IsHavePMS.jsx",["633","634","635"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx",["636","637"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx",["638","639","640","641"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx",["642"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx",["643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx",["665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\imgArray.js",["681"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx",["682","683","684","685","686","687","688","689","690","691","692","693"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx",["694","695","696","697","698","699","700","701","702"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx",["703","704","705","706","707","708","709","710"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js",["711","712"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\Fetch_token.js",["713","714","715","716"],{"ruleId":"717","severity":1,"message":"718","line":4,"column":10,"nodeType":"719","messageId":"720","endLine":4,"endColumn":14},{"ruleId":"717","severity":1,"message":"721","line":4,"column":20,"nodeType":"719","messageId":"720","endLine":4,"endColumn":22},{"ruleId":"717","severity":1,"message":"722","line":309,"column":15,"nodeType":"719","messageId":"720","endLine":309,"endColumn":19},{"ruleId":"723","severity":1,"message":"724","line":329,"column":9,"nodeType":"725","messageId":"726","endLine":336,"endColumn":10},{"ruleId":"717","severity":1,"message":"727","line":355,"column":13,"nodeType":"719","messageId":"720","endLine":355,"endColumn":17},{"ruleId":"717","severity":1,"message":"728","line":356,"column":13,"nodeType":"719","messageId":"720","endLine":356,"endColumn":17},{"ruleId":"717","severity":1,"message":"729","line":507,"column":15,"nodeType":"719","messageId":"720","endLine":507,"endColumn":25},{"ruleId":"717","severity":1,"message":"730","line":551,"column":17,"nodeType":"719","messageId":"720","endLine":551,"endColumn":26},{"ruleId":"717","severity":1,"message":"731","line":722,"column":11,"nodeType":"719","messageId":"720","endLine":722,"endColumn":22},{"ruleId":"732","severity":1,"message":"733","line":901,"column":9,"nodeType":"734","messageId":"735","endLine":901,"endColumn":15},{"ruleId":"717","severity":1,"message":"736","line":1,"column":17,"nodeType":"719","messageId":"720","endLine":1,"endColumn":26},{"ruleId":"717","severity":1,"message":"737","line":1,"column":28,"nodeType":"719","messageId":"720","endLine":1,"endColumn":37},{"ruleId":"717","severity":1,"message":"738","line":1,"column":39,"nodeType":"719","messageId":"720","endLine":1,"endColumn":47},{"ruleId":"739","replacedBy":"740"},{"ruleId":"741","replacedBy":"742"},{"ruleId":"717","severity":1,"message":"743","line":1,"column":38,"nodeType":"719","messageId":"720","endLine":1,"endColumn":44},{"ruleId":"717","severity":1,"message":"744","line":5,"column":3,"nodeType":"719","messageId":"720","endLine":5,"endColumn":7},{"ruleId":"717","severity":1,"message":"745","line":6,"column":3,"nodeType":"719","messageId":"720","endLine":6,"endColumn":13},{"ruleId":"717","severity":1,"message":"746","line":13,"column":3,"nodeType":"719","messageId":"720","endLine":13,"endColumn":11},{"ruleId":"717","severity":1,"message":"747","line":42,"column":18,"nodeType":"719","messageId":"720","endLine":42,"endColumn":24},{"ruleId":"717","severity":1,"message":"748","line":56,"column":10,"nodeType":"719","messageId":"720","endLine":56,"endColumn":17},{"ruleId":"717","severity":1,"message":"749","line":56,"column":19,"nodeType":"719","messageId":"720","endLine":56,"endColumn":29},{"ruleId":"750","severity":1,"message":"751","line":152,"column":11,"nodeType":"752","endLine":152,"endColumn":29},{"ruleId":"750","severity":1,"message":"751","line":154,"column":11,"nodeType":"752","endLine":154,"endColumn":32},{"ruleId":"750","severity":1,"message":"751","line":158,"column":11,"nodeType":"752","endLine":158,"endColumn":29},{"ruleId":"750","severity":1,"message":"751","line":160,"column":11,"nodeType":"752","endLine":160,"endColumn":32},{"ruleId":"750","severity":1,"message":"751","line":164,"column":11,"nodeType":"752","endLine":164,"endColumn":30},{"ruleId":"750","severity":1,"message":"751","line":166,"column":11,"nodeType":"752","endLine":166,"endColumn":33},{"ruleId":"750","severity":1,"message":"751","line":170,"column":11,"nodeType":"752","endLine":170,"endColumn":30},{"ruleId":"750","severity":1,"message":"751","line":172,"column":11,"nodeType":"752","endLine":172,"endColumn":33},{"ruleId":"750","severity":1,"message":"751","line":176,"column":11,"nodeType":"752","endLine":176,"endColumn":29},{"ruleId":"750","severity":1,"message":"751","line":178,"column":11,"nodeType":"752","endLine":178,"endColumn":32},{"ruleId":"750","severity":1,"message":"751","line":182,"column":11,"nodeType":"752","endLine":182,"endColumn":29},{"ruleId":"750","severity":1,"message":"751","line":184,"column":11,"nodeType":"752","endLine":184,"endColumn":32},{"ruleId":"750","severity":1,"message":"751","line":188,"column":11,"nodeType":"752","endLine":188,"endColumn":29},{"ruleId":"750","severity":1,"message":"751","line":190,"column":11,"nodeType":"752","endLine":190,"endColumn":32},{"ruleId":"753","severity":1,"message":"754","line":236,"column":6,"nodeType":"755","endLine":236,"endColumn":29,"suggestions":"756"},{"ruleId":"753","severity":1,"message":"757","line":258,"column":6,"nodeType":"755","endLine":258,"endColumn":25,"suggestions":"758"},{"ruleId":"753","severity":1,"message":"759","line":290,"column":6,"nodeType":"755","endLine":290,"endColumn":44,"suggestions":"760"},{"ruleId":"753","severity":1,"message":"761","line":301,"column":6,"nodeType":"755","endLine":301,"endColumn":17,"suggestions":"762"},{"ruleId":"717","severity":1,"message":"763","line":5,"column":10,"nodeType":"719","messageId":"720","endLine":5,"endColumn":16},{"ruleId":"717","severity":1,"message":"764","line":5,"column":18,"nodeType":"719","messageId":"720","endLine":5,"endColumn":26},{"ruleId":"717","severity":1,"message":"765","line":5,"column":28,"nodeType":"719","messageId":"720","endLine":5,"endColumn":33},{"ruleId":"717","severity":1,"message":"766","line":5,"column":42,"nodeType":"719","messageId":"720","endLine":5,"endColumn":45},{"ruleId":"717","severity":1,"message":"767","line":29,"column":18,"nodeType":"719","messageId":"720","endLine":29,"endColumn":22},{"ruleId":"717","severity":1,"message":"768","line":36,"column":12,"nodeType":"719","messageId":"720","endLine":36,"endColumn":20},{"ruleId":"750","severity":1,"message":"751","line":66,"column":28,"nodeType":"752","endLine":66,"endColumn":57},{"ruleId":"750","severity":1,"message":"751","line":68,"column":28,"nodeType":"752","endLine":68,"endColumn":57},{"ruleId":"750","severity":1,"message":"751","line":70,"column":28,"nodeType":"752","endLine":70,"endColumn":57},{"ruleId":"750","severity":1,"message":"751","line":72,"column":28,"nodeType":"752","endLine":72,"endColumn":57},{"ruleId":"750","severity":1,"message":"751","line":85,"column":21,"nodeType":"752","endLine":92,"endColumn":23},{"ruleId":"750","severity":1,"message":"751","line":94,"column":25,"nodeType":"752","endLine":94,"endColumn":45},{"ruleId":"717","severity":1,"message":"769","line":111,"column":11,"nodeType":"719","messageId":"720","endLine":111,"endColumn":24},{"ruleId":"717","severity":1,"message":"770","line":146,"column":11,"nodeType":"719","messageId":"720","endLine":146,"endColumn":28},{"ruleId":"771","severity":1,"message":"772","line":147,"column":32,"nodeType":"773","messageId":"774","endLine":147,"endColumn":34},{"ruleId":"717","severity":1,"message":"775","line":154,"column":11,"nodeType":"719","messageId":"720","endLine":154,"endColumn":19},{"ruleId":"753","severity":1,"message":"776","line":228,"column":8,"nodeType":"755","endLine":228,"endColumn":10,"suggestions":"777"},{"ruleId":"717","severity":1,"message":"744","line":6,"column":5,"nodeType":"719","messageId":"720","endLine":6,"endColumn":9},{"ruleId":"717","severity":1,"message":"778","line":10,"column":5,"nodeType":"719","messageId":"720","endLine":10,"endColumn":12},{"ruleId":"717","severity":1,"message":"779","line":12,"column":5,"nodeType":"719","messageId":"720","endLine":12,"endColumn":9},{"ruleId":"717","severity":1,"message":"780","line":17,"column":10,"nodeType":"719","messageId":"720","endLine":17,"endColumn":30},{"ruleId":"717","severity":1,"message":"781","line":17,"column":32,"nodeType":"719","messageId":"720","endLine":17,"endColumn":44},{"ruleId":"717","severity":1,"message":"782","line":23,"column":8,"nodeType":"719","messageId":"720","endLine":23,"endColumn":15},{"ruleId":"717","severity":1,"message":"783","line":25,"column":8,"nodeType":"719","messageId":"720","endLine":25,"endColumn":10},{"ruleId":"717","severity":1,"message":"784","line":26,"column":8,"nodeType":"719","messageId":"720","endLine":26,"endColumn":10},{"ruleId":"717","severity":1,"message":"785","line":27,"column":8,"nodeType":"719","messageId":"720","endLine":27,"endColumn":12},{"ruleId":"717","severity":1,"message":"786","line":28,"column":8,"nodeType":"719","messageId":"720","endLine":28,"endColumn":11},{"ruleId":"717","severity":1,"message":"787","line":29,"column":8,"nodeType":"719","messageId":"720","endLine":29,"endColumn":11},{"ruleId":"717","severity":1,"message":"788","line":30,"column":8,"nodeType":"719","messageId":"720","endLine":30,"endColumn":13},{"ruleId":"717","severity":1,"message":"789","line":34,"column":8,"nodeType":"719","messageId":"720","endLine":34,"endColumn":18},{"ruleId":"717","severity":1,"message":"790","line":38,"column":8,"nodeType":"719","messageId":"720","endLine":38,"endColumn":13},{"ruleId":"717","severity":1,"message":"791","line":48,"column":7,"nodeType":"719","messageId":"720","endLine":48,"endColumn":24},{"ruleId":"717","severity":1,"message":"792","line":51,"column":19,"nodeType":"719","messageId":"720","endLine":51,"endColumn":27},{"ruleId":"717","severity":1,"message":"793","line":69,"column":19,"nodeType":"719","messageId":"720","endLine":69,"endColumn":27},{"ruleId":"717","severity":1,"message":"794","line":81,"column":12,"nodeType":"719","messageId":"720","endLine":81,"endColumn":20},{"ruleId":"717","severity":1,"message":"795","line":85,"column":12,"nodeType":"719","messageId":"720","endLine":85,"endColumn":15},{"ruleId":"717","severity":1,"message":"796","line":88,"column":20,"nodeType":"719","messageId":"720","endLine":88,"endColumn":29},{"ruleId":"753","severity":1,"message":"797","line":147,"column":8,"nodeType":"755","endLine":147,"endColumn":25,"suggestions":"798"},{"ruleId":"753","severity":1,"message":"799","line":172,"column":8,"nodeType":"755","endLine":172,"endColumn":28,"suggestions":"800"},{"ruleId":"717","severity":1,"message":"801","line":176,"column":15,"nodeType":"719","messageId":"720","endLine":176,"endColumn":18},{"ruleId":"717","severity":1,"message":"802","line":436,"column":26,"nodeType":"719","messageId":"720","endLine":436,"endColumn":30},{"ruleId":"803","severity":1,"message":"804","line":683,"column":75,"nodeType":"805","messageId":"806","endLine":683,"endColumn":76,"suggestions":"807"},{"ruleId":"803","severity":1,"message":"808","line":683,"column":181,"nodeType":"805","messageId":"806","endLine":683,"endColumn":182,"suggestions":"809"},{"ruleId":"803","severity":1,"message":"804","line":697,"column":75,"nodeType":"805","messageId":"806","endLine":697,"endColumn":76,"suggestions":"810"},{"ruleId":"803","severity":1,"message":"808","line":697,"column":181,"nodeType":"805","messageId":"806","endLine":697,"endColumn":182,"suggestions":"811"},{"ruleId":"803","severity":1,"message":"804","line":714,"column":75,"nodeType":"805","messageId":"806","endLine":714,"endColumn":76,"suggestions":"812"},{"ruleId":"803","severity":1,"message":"808","line":714,"column":181,"nodeType":"805","messageId":"806","endLine":714,"endColumn":182,"suggestions":"813"},{"ruleId":"803","severity":1,"message":"804","line":744,"column":75,"nodeType":"805","messageId":"806","endLine":744,"endColumn":76,"suggestions":"814"},{"ruleId":"803","severity":1,"message":"808","line":744,"column":181,"nodeType":"805","messageId":"806","endLine":744,"endColumn":182,"suggestions":"815"},{"ruleId":"803","severity":1,"message":"804","line":758,"column":75,"nodeType":"805","messageId":"806","endLine":758,"endColumn":76,"suggestions":"816"},{"ruleId":"803","severity":1,"message":"808","line":758,"column":181,"nodeType":"805","messageId":"806","endLine":758,"endColumn":182,"suggestions":"817"},{"ruleId":"803","severity":1,"message":"804","line":774,"column":75,"nodeType":"805","messageId":"806","endLine":774,"endColumn":76,"suggestions":"818"},{"ruleId":"803","severity":1,"message":"808","line":774,"column":181,"nodeType":"805","messageId":"806","endLine":774,"endColumn":182,"suggestions":"819"},{"ruleId":"803","severity":1,"message":"804","line":1258,"column":75,"nodeType":"805","messageId":"806","endLine":1258,"endColumn":76,"suggestions":"820"},{"ruleId":"803","severity":1,"message":"808","line":1258,"column":181,"nodeType":"805","messageId":"806","endLine":1258,"endColumn":182,"suggestions":"821"},{"ruleId":"803","severity":1,"message":"804","line":1274,"column":75,"nodeType":"805","messageId":"806","endLine":1274,"endColumn":76,"suggestions":"822"},{"ruleId":"803","severity":1,"message":"808","line":1274,"column":181,"nodeType":"805","messageId":"806","endLine":1274,"endColumn":182,"suggestions":"823"},{"ruleId":"739","replacedBy":"824"},{"ruleId":"741","replacedBy":"825"},{"ruleId":"717","severity":1,"message":"826","line":102,"column":9,"nodeType":"719","messageId":"720","endLine":102,"endColumn":15},{"ruleId":"717","severity":1,"message":"827","line":191,"column":25,"nodeType":"719","messageId":"720","endLine":191,"endColumn":32},{"ruleId":"717","severity":1,"message":"828","line":191,"column":34,"nodeType":"719","messageId":"720","endLine":191,"endColumn":49},{"ruleId":"717","severity":1,"message":"829","line":191,"column":51,"nodeType":"719","messageId":"720","endLine":191,"endColumn":55},{"ruleId":"717","severity":1,"message":"830","line":192,"column":25,"nodeType":"719","messageId":"720","endLine":192,"endColumn":44},{"ruleId":"717","severity":1,"message":"831","line":192,"column":46,"nodeType":"719","messageId":"720","endLine":192,"endColumn":62},{"ruleId":"717","severity":1,"message":"832","line":192,"column":64,"nodeType":"719","messageId":"720","endLine":192,"endColumn":84},{"ruleId":"717","severity":1,"message":"833","line":192,"column":86,"nodeType":"719","messageId":"720","endLine":192,"endColumn":96},{"ruleId":"834","severity":1,"message":"835","line":281,"column":33,"nodeType":"719","messageId":"836","endLine":281,"endColumn":37},{"ruleId":"803","severity":1,"message":"837","line":350,"column":55,"nodeType":"838","messageId":"806","endLine":350,"endColumn":56,"suggestions":"839"},{"ruleId":"803","severity":1,"message":"837","line":350,"column":69,"nodeType":"838","messageId":"806","endLine":350,"endColumn":70,"suggestions":"840"},{"ruleId":"717","severity":1,"message":"841","line":548,"column":15,"nodeType":"719","messageId":"720","endLine":548,"endColumn":21},{"ruleId":"717","severity":1,"message":"842","line":560,"column":28,"nodeType":"719","messageId":"720","endLine":560,"endColumn":31},{"ruleId":"717","severity":1,"message":"843","line":560,"column":33,"nodeType":"719","messageId":"720","endLine":560,"endColumn":35},{"ruleId":"717","severity":1,"message":"844","line":560,"column":37,"nodeType":"719","messageId":"720","endLine":560,"endColumn":45},{"ruleId":"717","severity":1,"message":"845","line":60,"column":13,"nodeType":"719","messageId":"720","endLine":60,"endColumn":22},{"ruleId":"717","severity":1,"message":"846","line":3,"column":5,"nodeType":"719","messageId":"720","endLine":3,"endColumn":10},{"ruleId":"717","severity":1,"message":"847","line":49,"column":29,"nodeType":"719","messageId":"720","endLine":49,"endColumn":36},{"ruleId":"717","severity":1,"message":"848","line":49,"column":38,"nodeType":"719","messageId":"720","endLine":49,"endColumn":49},{"ruleId":"717","severity":1,"message":"849","line":49,"column":57,"nodeType":"719","messageId":"720","endLine":49,"endColumn":68},{"ruleId":"771","severity":1,"message":"772","line":243,"column":33,"nodeType":"773","messageId":"774","endLine":243,"endColumn":35},{"ruleId":"771","severity":1,"message":"772","line":243,"column":92,"nodeType":"773","messageId":"774","endLine":243,"endColumn":94},{"ruleId":"771","severity":1,"message":"772","line":243,"column":130,"nodeType":"773","messageId":"774","endLine":243,"endColumn":132},{"ruleId":"717","severity":1,"message":"846","line":4,"column":3,"nodeType":"719","messageId":"720","endLine":4,"endColumn":8},{"ruleId":"717","severity":1,"message":"850","line":5,"column":3,"nodeType":"719","messageId":"720","endLine":5,"endColumn":8},{"ruleId":"717","severity":1,"message":"763","line":6,"column":3,"nodeType":"719","messageId":"720","endLine":6,"endColumn":9},{"ruleId":"717","severity":1,"message":"765","line":7,"column":3,"nodeType":"719","messageId":"720","endLine":7,"endColumn":8},{"ruleId":"717","severity":1,"message":"851","line":10,"column":3,"nodeType":"719","messageId":"720","endLine":10,"endColumn":8},{"ruleId":"717","severity":1,"message":"852","line":11,"column":3,"nodeType":"719","messageId":"720","endLine":11,"endColumn":9},{"ruleId":"717","severity":1,"message":"853","line":12,"column":3,"nodeType":"719","messageId":"720","endLine":12,"endColumn":17},{"ruleId":"717","severity":1,"message":"854","line":15,"column":8,"nodeType":"719","messageId":"720","endLine":15,"endColumn":17},{"ruleId":"717","severity":1,"message":"855","line":16,"column":8,"nodeType":"719","messageId":"720","endLine":16,"endColumn":15},{"ruleId":"717","severity":1,"message":"856","line":17,"column":8,"nodeType":"719","messageId":"720","endLine":17,"endColumn":14},{"ruleId":"717","severity":1,"message":"781","line":20,"column":10,"nodeType":"719","messageId":"720","endLine":20,"endColumn":22},{"ruleId":"717","severity":1,"message":"857","line":21,"column":8,"nodeType":"719","messageId":"720","endLine":21,"endColumn":14},{"ruleId":"717","severity":1,"message":"858","line":27,"column":10,"nodeType":"719","messageId":"720","endLine":27,"endColumn":14},{"ruleId":"717","severity":1,"message":"718","line":27,"column":16,"nodeType":"719","messageId":"720","endLine":27,"endColumn":20},{"ruleId":"717","severity":1,"message":"721","line":27,"column":22,"nodeType":"719","messageId":"720","endLine":27,"endColumn":24},{"ruleId":"717","severity":1,"message":"859","line":39,"column":9,"nodeType":"719","messageId":"720","endLine":39,"endColumn":16},{"ruleId":"717","severity":1,"message":"778","line":2,"column":35,"nodeType":"719","messageId":"720","endLine":2,"endColumn":42},{"ruleId":"717","severity":1,"message":"860","line":13,"column":10,"nodeType":"719","messageId":"720","endLine":13,"endColumn":21},{"ruleId":"717","severity":1,"message":"721","line":43,"column":20,"nodeType":"719","messageId":"720","endLine":43,"endColumn":22},{"ruleId":"717","severity":1,"message":"859","line":50,"column":9,"nodeType":"719","messageId":"720","endLine":50,"endColumn":16},{"ruleId":"717","severity":1,"message":"861","line":52,"column":7,"nodeType":"719","messageId":"720","endLine":52,"endColumn":13},{"ruleId":"717","severity":1,"message":"862","line":79,"column":5,"nodeType":"719","messageId":"720","endLine":79,"endColumn":15},{"ruleId":"717","severity":1,"message":"863","line":212,"column":48,"nodeType":"719","messageId":"720","endLine":212,"endColumn":54},{"ruleId":"723","severity":1,"message":"724","line":331,"column":9,"nodeType":"725","messageId":"726","endLine":344,"endColumn":10},{"ruleId":"723","severity":1,"message":"724","line":744,"column":9,"nodeType":"725","messageId":"726","endLine":748,"endColumn":10},{"ruleId":"717","severity":1,"message":"864","line":752,"column":9,"nodeType":"719","messageId":"720","endLine":752,"endColumn":27},{"ruleId":"865","severity":1,"message":"866","line":798,"column":7,"nodeType":"867","messageId":"774","endLine":798,"endColumn":10},{"ruleId":"723","severity":1,"message":"724","line":1051,"column":11,"nodeType":"725","messageId":"726","endLine":1058,"endColumn":12},{"ruleId":"723","severity":1,"message":"724","line":1274,"column":13,"nodeType":"725","messageId":"726","endLine":1281,"endColumn":14},{"ruleId":"723","severity":1,"message":"724","line":1431,"column":13,"nodeType":"725","messageId":"726","endLine":1438,"endColumn":14},{"ruleId":"717","severity":1,"message":"868","line":1502,"column":15,"nodeType":"719","messageId":"720","endLine":1502,"endColumn":26},{"ruleId":"732","severity":1,"message":"733","line":1789,"column":9,"nodeType":"734","messageId":"735","endLine":1789,"endColumn":15},{"ruleId":"732","severity":1,"message":"733","line":1798,"column":9,"nodeType":"734","messageId":"735","endLine":1798,"endColumn":14},{"ruleId":"723","severity":1,"message":"724","line":2024,"column":9,"nodeType":"725","messageId":"726","endLine":2037,"endColumn":10},{"ruleId":"803","severity":1,"message":"808","line":2430,"column":36,"nodeType":"805","messageId":"806","endLine":2430,"endColumn":37,"suggestions":"869"},{"ruleId":"771","severity":1,"message":"772","line":2431,"column":47,"nodeType":"773","messageId":"774","endLine":2431,"endColumn":49},{"ruleId":"717","severity":1,"message":"870","line":2632,"column":107,"nodeType":"719","messageId":"720","endLine":2632,"endColumn":112},{"ruleId":"717","severity":1,"message":"871","line":3057,"column":11,"nodeType":"719","messageId":"720","endLine":3057,"endColumn":14},{"ruleId":"717","severity":1,"message":"872","line":3694,"column":17,"nodeType":"719","messageId":"720","endLine":3694,"endColumn":23},{"ruleId":"717","severity":1,"message":"873","line":4322,"column":13,"nodeType":"719","messageId":"720","endLine":4322,"endColumn":23},{"ruleId":"717","severity":1,"message":"874","line":4322,"column":25,"nodeType":"719","messageId":"720","endLine":4322,"endColumn":33},{"ruleId":"717","severity":1,"message":"875","line":4322,"column":35,"nodeType":"719","messageId":"720","endLine":4322,"endColumn":41},{"ruleId":"723","severity":1,"message":"724","line":4355,"column":17,"nodeType":"725","messageId":"726","endLine":4368,"endColumn":18},{"ruleId":"717","severity":1,"message":"779","line":6,"column":3,"nodeType":"719","messageId":"720","endLine":6,"endColumn":7},{"ruleId":"717","severity":1,"message":"780","line":10,"column":10,"nodeType":"719","messageId":"720","endLine":10,"endColumn":30},{"ruleId":"717","severity":1,"message":"781","line":10,"column":32,"nodeType":"719","messageId":"720","endLine":10,"endColumn":44},{"ruleId":"723","severity":1,"message":"724","line":78,"column":11,"nodeType":"725","messageId":"726","endLine":103,"endColumn":12},{"ruleId":"876","severity":1,"message":"877","line":94,"column":13,"nodeType":"878","messageId":"879","endLine":101,"endColumn":20},{"ruleId":"732","severity":1,"message":"733","line":101,"column":15,"nodeType":"734","messageId":"735","endLine":101,"endColumn":20},{"ruleId":"717","severity":1,"message":"780","line":8,"column":10,"nodeType":"719","messageId":"720","endLine":8,"endColumn":30},{"ruleId":"717","severity":1,"message":"781","line":8,"column":32,"nodeType":"719","messageId":"720","endLine":8,"endColumn":44},{"ruleId":"717","severity":1,"message":"721","line":14,"column":20,"nodeType":"719","messageId":"720","endLine":14,"endColumn":22},{"ruleId":"717","severity":1,"message":"880","line":133,"column":32,"nodeType":"719","messageId":"720","endLine":133,"endColumn":48},{"ruleId":"717","severity":1,"message":"881","line":150,"column":15,"nodeType":"719","messageId":"720","endLine":150,"endColumn":28},{"ruleId":"717","severity":1,"message":"851","line":5,"column":3,"nodeType":"719","messageId":"720","endLine":5,"endColumn":8},{"ruleId":"717","severity":1,"message":"854","line":8,"column":8,"nodeType":"719","messageId":"720","endLine":8,"endColumn":17},{"ruleId":"717","severity":1,"message":"781","line":11,"column":32,"nodeType":"719","messageId":"720","endLine":11,"endColumn":44},{"ruleId":"717","severity":1,"message":"880","line":132,"column":32,"nodeType":"719","messageId":"720","endLine":132,"endColumn":48},{"ruleId":"717","severity":1,"message":"881","line":154,"column":15,"nodeType":"719","messageId":"720","endLine":154,"endColumn":28},{"ruleId":"717","severity":1,"message":"882","line":353,"column":21,"nodeType":"719","messageId":"720","endLine":353,"endColumn":27},{"ruleId":"883","severity":1,"message":"884","line":519,"column":17,"nodeType":"752","endLine":519,"endColumn":54},{"ruleId":"883","severity":1,"message":"884","line":577,"column":17,"nodeType":"752","endLine":577,"endColumn":60},{"ruleId":"717","severity":1,"message":"854","line":9,"column":8,"nodeType":"719","messageId":"720","endLine":9,"endColumn":17},{"ruleId":"717","severity":1,"message":"780","line":10,"column":10,"nodeType":"719","messageId":"720","endLine":10,"endColumn":30},{"ruleId":"717","severity":1,"message":"885","line":10,"column":32,"nodeType":"719","messageId":"720","endLine":10,"endColumn":47},{"ruleId":"717","severity":1,"message":"886","line":14,"column":8,"nodeType":"719","messageId":"720","endLine":14,"endColumn":16},{"ruleId":"717","severity":1,"message":"718","line":19,"column":10,"nodeType":"719","messageId":"720","endLine":19,"endColumn":14},{"ruleId":"723","severity":1,"message":"724","line":85,"column":25,"nodeType":"725","messageId":"726","endLine":114,"endColumn":26},{"ruleId":"876","severity":1,"message":"877","line":103,"column":29,"nodeType":"878","messageId":"879","endLine":104,"endColumn":68},{"ruleId":"876","severity":1,"message":"877","line":105,"column":29,"nodeType":"878","messageId":"879","endLine":112,"endColumn":39},{"ruleId":"717","severity":1,"message":"880","line":214,"column":42,"nodeType":"719","messageId":"720","endLine":214,"endColumn":58},{"ruleId":"717","severity":1,"message":"881","line":235,"column":29,"nodeType":"719","messageId":"720","endLine":235,"endColumn":42},{"ruleId":"717","severity":1,"message":"887","line":270,"column":49,"nodeType":"719","messageId":"720","endLine":270,"endColumn":63},{"ruleId":"717","severity":1,"message":"888","line":270,"column":65,"nodeType":"719","messageId":"720","endLine":270,"endColumn":79},{"ruleId":"717","severity":1,"message":"889","line":16,"column":8,"nodeType":"719","messageId":"720","endLine":16,"endColumn":24},{"ruleId":"717","severity":1,"message":"718","line":17,"column":10,"nodeType":"719","messageId":"720","endLine":17,"endColumn":14},{"ruleId":"717","severity":1,"message":"890","line":23,"column":9,"nodeType":"719","messageId":"720","endLine":23,"endColumn":15},{"ruleId":"717","severity":1,"message":"891","line":381,"column":142,"nodeType":"719","messageId":"720","endLine":381,"endColumn":148},{"ruleId":"717","severity":1,"message":"892","line":381,"column":150,"nodeType":"719","messageId":"720","endLine":381,"endColumn":160},{"ruleId":"717","severity":1,"message":"893","line":385,"column":7,"nodeType":"719","messageId":"720","endLine":385,"endColumn":17},{"ruleId":"717","severity":1,"message":"894","line":4,"column":3,"nodeType":"719","messageId":"720","endLine":4,"endColumn":9},{"ruleId":"717","severity":1,"message":"895","line":12,"column":8,"nodeType":"719","messageId":"720","endLine":12,"endColumn":14},{"ruleId":"717","severity":1,"message":"763","line":13,"column":8,"nodeType":"719","messageId":"720","endLine":13,"endColumn":14},{"ruleId":"717","severity":1,"message":"896","line":14,"column":8,"nodeType":"719","messageId":"720","endLine":14,"endColumn":21},{"ruleId":"717","severity":1,"message":"889","line":15,"column":8,"nodeType":"719","messageId":"720","endLine":15,"endColumn":24},{"ruleId":"717","severity":1,"message":"718","line":16,"column":10,"nodeType":"719","messageId":"720","endLine":16,"endColumn":14},{"ruleId":"717","severity":1,"message":"897","line":25,"column":10,"nodeType":"719","messageId":"720","endLine":25,"endColumn":22},{"ruleId":"717","severity":1,"message":"890","line":27,"column":9,"nodeType":"719","messageId":"720","endLine":27,"endColumn":15},{"ruleId":"717","severity":1,"message":"898","line":43,"column":11,"nodeType":"719","messageId":"720","endLine":43,"endColumn":17},{"ruleId":"717","severity":1,"message":"899","line":43,"column":19,"nodeType":"719","messageId":"720","endLine":43,"endColumn":24},{"ruleId":"717","severity":1,"message":"900","line":59,"column":9,"nodeType":"719","messageId":"720","endLine":59,"endColumn":22},{"ruleId":"717","severity":1,"message":"901","line":78,"column":11,"nodeType":"719","messageId":"720","endLine":78,"endColumn":19},{"ruleId":"717","severity":1,"message":"889","line":17,"column":8,"nodeType":"719","messageId":"720","endLine":17,"endColumn":24},{"ruleId":"717","severity":1,"message":"902","line":4,"column":5,"nodeType":"719","messageId":"720","endLine":4,"endColumn":10},{"ruleId":"717","severity":1,"message":"903","line":10,"column":9,"nodeType":"719","messageId":"720","endLine":10,"endColumn":15},{"ruleId":"771","severity":1,"message":"904","line":13,"column":16,"nodeType":"773","messageId":"774","endLine":13,"endColumn":18},{"ruleId":"771","severity":1,"message":"904","line":58,"column":16,"nodeType":"773","messageId":"774","endLine":58,"endColumn":18},{"ruleId":"717","severity":1,"message":"737","line":2,"column":27,"nodeType":"719","messageId":"720","endLine":2,"endColumn":36},{"ruleId":"717","severity":1,"message":"905","line":3,"column":10,"nodeType":"719","messageId":"720","endLine":3,"endColumn":20},{"ruleId":"717","severity":1,"message":"718","line":8,"column":14,"nodeType":"719","messageId":"720","endLine":8,"endColumn":18},{"ruleId":"717","severity":1,"message":"906","line":13,"column":10,"nodeType":"719","messageId":"720","endLine":13,"endColumn":12},{"ruleId":"717","severity":1,"message":"721","line":13,"column":14,"nodeType":"719","messageId":"720","endLine":13,"endColumn":16},{"ruleId":"717","severity":1,"message":"902","line":7,"column":5,"nodeType":"719","messageId":"720","endLine":7,"endColumn":10},{"ruleId":"717","severity":1,"message":"903","line":20,"column":9,"nodeType":"719","messageId":"720","endLine":20,"endColumn":15},{"ruleId":"771","severity":1,"message":"904","line":23,"column":16,"nodeType":"773","messageId":"774","endLine":23,"endColumn":18},{"ruleId":"771","severity":1,"message":"904","line":74,"column":16,"nodeType":"773","messageId":"774","endLine":74,"endColumn":18},{"ruleId":"717","severity":1,"message":"850","line":4,"column":10,"nodeType":"719","messageId":"720","endLine":4,"endColumn":15},{"ruleId":"717","severity":1,"message":"763","line":4,"column":17,"nodeType":"719","messageId":"720","endLine":4,"endColumn":23},{"ruleId":"717","severity":1,"message":"779","line":4,"column":34,"nodeType":"719","messageId":"720","endLine":4,"endColumn":38},{"ruleId":"717","severity":1,"message":"907","line":4,"column":40,"nodeType":"719","messageId":"720","endLine":4,"endColumn":47},{"ruleId":"717","severity":1,"message":"780","line":5,"column":10,"nodeType":"719","messageId":"720","endLine":5,"endColumn":30},{"ruleId":"717","severity":1,"message":"781","line":5,"column":32,"nodeType":"719","messageId":"720","endLine":5,"endColumn":44},{"ruleId":"717","severity":1,"message":"908","line":9,"column":8,"nodeType":"719","messageId":"720","endLine":9,"endColumn":18},{"ruleId":"717","severity":1,"message":"909","line":18,"column":8,"nodeType":"719","messageId":"720","endLine":18,"endColumn":16},{"ruleId":"717","severity":1,"message":"910","line":19,"column":8,"nodeType":"719","messageId":"720","endLine":19,"endColumn":16},{"ruleId":"717","severity":1,"message":"911","line":20,"column":8,"nodeType":"719","messageId":"720","endLine":20,"endColumn":18},{"ruleId":"717","severity":1,"message":"912","line":21,"column":8,"nodeType":"719","messageId":"720","endLine":21,"endColumn":16},{"ruleId":"717","severity":1,"message":"782","line":23,"column":8,"nodeType":"719","messageId":"720","endLine":23,"endColumn":15},{"ruleId":"717","severity":1,"message":"721","line":24,"column":26,"nodeType":"719","messageId":"720","endLine":24,"endColumn":28},{"ruleId":"753","severity":1,"message":"913","line":60,"column":8,"nodeType":"755","endLine":60,"endColumn":10,"suggestions":"914"},{"ruleId":"753","severity":1,"message":"915","line":102,"column":8,"nodeType":"755","endLine":102,"endColumn":38,"suggestions":"916"},{"ruleId":"717","severity":1,"message":"917","line":35,"column":9,"nodeType":"719","messageId":"720","endLine":35,"endColumn":16},{"ruleId":"753","severity":1,"message":"918","line":37,"column":6,"nodeType":"755","endLine":37,"endColumn":8,"suggestions":"919"},{"ruleId":"723","severity":1,"message":"724","line":75,"column":5,"nodeType":"725","messageId":"726","endLine":94,"endColumn":6},{"ruleId":"717","severity":1,"message":"763","line":5,"column":10,"nodeType":"719","messageId":"720","endLine":5,"endColumn":16},{"ruleId":"717","severity":1,"message":"764","line":5,"column":18,"nodeType":"719","messageId":"720","endLine":5,"endColumn":26},{"ruleId":"717","severity":1,"message":"765","line":5,"column":28,"nodeType":"719","messageId":"720","endLine":5,"endColumn":33},{"ruleId":"717","severity":1,"message":"846","line":5,"column":35,"nodeType":"719","messageId":"720","endLine":5,"endColumn":40},{"ruleId":"717","severity":1,"message":"766","line":5,"column":42,"nodeType":"719","messageId":"720","endLine":5,"endColumn":45},{"ruleId":"717","severity":1,"message":"920","line":5,"column":47,"nodeType":"719","messageId":"720","endLine":5,"endColumn":52},{"ruleId":"717","severity":1,"message":"921","line":14,"column":8,"nodeType":"719","messageId":"720","endLine":14,"endColumn":21},{"ruleId":"717","severity":1,"message":"922","line":27,"column":12,"nodeType":"719","messageId":"720","endLine":27,"endColumn":25},{"ruleId":"753","severity":1,"message":"923","line":50,"column":8,"nodeType":"755","endLine":50,"endColumn":24,"suggestions":"924"},{"ruleId":"753","severity":1,"message":"925","line":27,"column":8,"nodeType":"755","endLine":27,"endColumn":10,"suggestions":"926"},{"ruleId":"717","severity":1,"message":"902","line":5,"column":5,"nodeType":"719","messageId":"720","endLine":5,"endColumn":10},{"ruleId":"717","severity":1,"message":"903","line":11,"column":9,"nodeType":"719","messageId":"720","endLine":11,"endColumn":15},{"ruleId":"771","severity":1,"message":"904","line":14,"column":16,"nodeType":"773","messageId":"774","endLine":14,"endColumn":18},{"ruleId":"771","severity":1,"message":"904","line":58,"column":16,"nodeType":"773","messageId":"774","endLine":58,"endColumn":18},{"ruleId":"717","severity":1,"message":"927","line":7,"column":10,"nodeType":"719","messageId":"720","endLine":7,"endColumn":15},{"ruleId":"717","severity":1,"message":"765","line":7,"column":53,"nodeType":"719","messageId":"720","endLine":7,"endColumn":58},{"ruleId":"717","severity":1,"message":"928","line":7,"column":60,"nodeType":"719","messageId":"720","endLine":7,"endColumn":64},{"ruleId":"717","severity":1,"message":"929","line":9,"column":8,"nodeType":"719","messageId":"720","endLine":9,"endColumn":15},{"ruleId":"930","severity":1,"message":"931","line":82,"column":67,"nodeType":"773","messageId":"932","endLine":82,"endColumn":68},{"ruleId":"930","severity":1,"message":"931","line":90,"column":51,"nodeType":"773","messageId":"932","endLine":90,"endColumn":52},{"ruleId":"753","severity":1,"message":"933","line":180,"column":8,"nodeType":"755","endLine":180,"endColumn":15,"suggestions":"934"},{"ruleId":"753","severity":1,"message":"935","line":201,"column":8,"nodeType":"755","endLine":201,"endColumn":28,"suggestions":"936"},{"ruleId":"717","severity":1,"message":"737","line":2,"column":5,"nodeType":"719","messageId":"720","endLine":2,"endColumn":14},{"ruleId":"717","severity":1,"message":"738","line":3,"column":5,"nodeType":"719","messageId":"720","endLine":3,"endColumn":13},{"ruleId":"717","severity":1,"message":"927","line":5,"column":10,"nodeType":"719","messageId":"720","endLine":5,"endColumn":15},{"ruleId":"717","severity":1,"message":"747","line":22,"column":18,"nodeType":"719","messageId":"720","endLine":22,"endColumn":24},{"ruleId":"750","severity":1,"message":"751","line":35,"column":33,"nodeType":"752","endLine":35,"endColumn":60},{"ruleId":"750","severity":1,"message":"751","line":41,"column":33,"nodeType":"752","endLine":41,"endColumn":62},{"ruleId":"717","severity":1,"message":"737","line":2,"column":5,"nodeType":"719","messageId":"720","endLine":2,"endColumn":14},{"ruleId":"717","severity":1,"message":"738","line":3,"column":5,"nodeType":"719","messageId":"720","endLine":3,"endColumn":13},{"ruleId":"717","severity":1,"message":"927","line":5,"column":10,"nodeType":"719","messageId":"720","endLine":5,"endColumn":15},{"ruleId":"717","severity":1,"message":"937","line":16,"column":8,"nodeType":"719","messageId":"720","endLine":16,"endColumn":9},{"ruleId":"717","severity":1,"message":"747","line":19,"column":18,"nodeType":"719","messageId":"720","endLine":19,"endColumn":24},{"ruleId":"717","severity":1,"message":"938","line":22,"column":11,"nodeType":"719","messageId":"720","endLine":22,"endColumn":29},{"ruleId":"717","severity":1,"message":"738","line":2,"column":17,"nodeType":"719","messageId":"720","endLine":2,"endColumn":25},{"ruleId":"717","severity":1,"message":"905","line":2,"column":10,"nodeType":"719","messageId":"720","endLine":2,"endColumn":20},{"ruleId":"717","severity":1,"message":"744","line":4,"column":5,"nodeType":"719","messageId":"720","endLine":4,"endColumn":9},{"ruleId":"717","severity":1,"message":"939","line":5,"column":5,"nodeType":"719","messageId":"720","endLine":5,"endColumn":12},{"ruleId":"717","severity":1,"message":"763","line":6,"column":5,"nodeType":"719","messageId":"720","endLine":6,"endColumn":11},{"ruleId":"717","severity":1,"message":"851","line":7,"column":5,"nodeType":"719","messageId":"720","endLine":7,"endColumn":10},{"ruleId":"717","severity":1,"message":"718","line":15,"column":10,"nodeType":"719","messageId":"720","endLine":15,"endColumn":14},{"ruleId":"717","severity":1,"message":"858","line":15,"column":20,"nodeType":"719","messageId":"720","endLine":15,"endColumn":24},{"ruleId":"717","severity":1,"message":"896","line":16,"column":8,"nodeType":"719","messageId":"720","endLine":16,"endColumn":21},{"ruleId":"940","severity":1,"message":"941","line":49,"column":36,"nodeType":"942","messageId":"943","endLine":49,"endColumn":38},{"ruleId":"940","severity":1,"message":"941","line":65,"column":32,"nodeType":"942","messageId":"943","endLine":65,"endColumn":34},{"ruleId":"940","severity":1,"message":"941","line":74,"column":37,"nodeType":"942","messageId":"943","endLine":74,"endColumn":39},{"ruleId":"940","severity":1,"message":"941","line":80,"column":23,"nodeType":"942","messageId":"943","endLine":80,"endColumn":25},{"ruleId":"940","severity":1,"message":"941","line":82,"column":31,"nodeType":"942","messageId":"943","endLine":82,"endColumn":33},{"ruleId":"771","severity":1,"message":"904","line":86,"column":32,"nodeType":"773","messageId":"774","endLine":86,"endColumn":34},{"ruleId":"753","severity":1,"message":"944","line":104,"column":8,"nodeType":"755","endLine":104,"endColumn":10,"suggestions":"945"},{"ruleId":"940","severity":1,"message":"941","line":114,"column":39,"nodeType":"942","messageId":"943","endLine":114,"endColumn":41},{"ruleId":"940","severity":1,"message":"941","line":115,"column":49,"nodeType":"942","messageId":"943","endLine":115,"endColumn":51},{"ruleId":"771","severity":1,"message":"772","line":124,"column":39,"nodeType":"773","messageId":"774","endLine":124,"endColumn":41},{"ruleId":"940","severity":1,"message":"941","line":137,"column":39,"nodeType":"942","messageId":"943","endLine":137,"endColumn":41},{"ruleId":"753","severity":1,"message":"946","line":152,"column":8,"nodeType":"755","endLine":152,"endColumn":20,"suggestions":"947"},{"ruleId":"883","severity":1,"message":"948","line":202,"column":21,"nodeType":"752","endLine":207,"endColumn":22},{"ruleId":"717","severity":1,"message":"949","line":6,"column":5,"nodeType":"719","messageId":"720","endLine":6,"endColumn":10},{"ruleId":"717","severity":1,"message":"950","line":10,"column":10,"nodeType":"719","messageId":"720","endLine":10,"endColumn":28},{"ruleId":"717","severity":1,"message":"951","line":10,"column":30,"nodeType":"719","messageId":"720","endLine":10,"endColumn":42},{"ruleId":"717","severity":1,"message":"861","line":19,"column":7,"nodeType":"719","messageId":"720","endLine":19,"endColumn":13},{"ruleId":"717","severity":1,"message":"852","line":4,"column":3,"nodeType":"719","messageId":"720","endLine":4,"endColumn":9},{"ruleId":"717","severity":1,"message":"780","line":10,"column":10,"nodeType":"719","messageId":"720","endLine":10,"endColumn":30},{"ruleId":"717","severity":1,"message":"952","line":15,"column":8,"nodeType":"719","messageId":"720","endLine":15,"endColumn":11},{"ruleId":"717","severity":1,"message":"860","line":17,"column":10,"nodeType":"719","messageId":"720","endLine":17,"endColumn":21},{"ruleId":"717","severity":1,"message":"852","line":11,"column":3,"nodeType":"719","messageId":"720","endLine":11,"endColumn":9},{"ruleId":"717","severity":1,"message":"857","line":21,"column":8,"nodeType":"719","messageId":"720","endLine":21,"endColumn":14},{"ruleId":"717","severity":1,"message":"860","line":26,"column":10,"nodeType":"719","messageId":"720","endLine":26,"endColumn":21},{"ruleId":"717","severity":1,"message":"953","line":28,"column":8,"nodeType":"719","messageId":"720","endLine":28,"endColumn":14},{"ruleId":"717","severity":1,"message":"858","line":30,"column":10,"nodeType":"719","messageId":"720","endLine":30,"endColumn":14},{"ruleId":"717","severity":1,"message":"718","line":30,"column":16,"nodeType":"719","messageId":"720","endLine":30,"endColumn":20},{"ruleId":"717","severity":1,"message":"954","line":31,"column":10,"nodeType":"719","messageId":"720","endLine":31,"endColumn":20},{"ruleId":"717","severity":1,"message":"955","line":36,"column":8,"nodeType":"719","messageId":"720","endLine":36,"endColumn":21},{"ruleId":"717","severity":1,"message":"956","line":37,"column":8,"nodeType":"719","messageId":"720","endLine":37,"endColumn":15},{"ruleId":"717","severity":1,"message":"859","line":42,"column":9,"nodeType":"719","messageId":"720","endLine":42,"endColumn":16},{"ruleId":"717","severity":1,"message":"861","line":43,"column":7,"nodeType":"719","messageId":"720","endLine":43,"endColumn":13},{"ruleId":"717","severity":1,"message":"957","line":166,"column":9,"nodeType":"719","messageId":"720","endLine":166,"endColumn":16},{"ruleId":"717","severity":1,"message":"958","line":176,"column":15,"nodeType":"719","messageId":"720","endLine":176,"endColumn":21},{"ruleId":"717","severity":1,"message":"959","line":630,"column":15,"nodeType":"719","messageId":"720","endLine":630,"endColumn":24},{"ruleId":"717","severity":1,"message":"841","line":905,"column":15,"nodeType":"719","messageId":"720","endLine":905,"endColumn":21},{"ruleId":"717","severity":1,"message":"960","line":909,"column":15,"nodeType":"719","messageId":"720","endLine":909,"endColumn":22},{"ruleId":"717","severity":1,"message":"842","line":993,"column":28,"nodeType":"719","messageId":"720","endLine":993,"endColumn":31},{"ruleId":"717","severity":1,"message":"843","line":993,"column":33,"nodeType":"719","messageId":"720","endLine":993,"endColumn":35},{"ruleId":"717","severity":1,"message":"844","line":993,"column":37,"nodeType":"719","messageId":"720","endLine":993,"endColumn":45},{"ruleId":"717","severity":1,"message":"873","line":993,"column":53,"nodeType":"719","messageId":"720","endLine":993,"endColumn":63},{"ruleId":"717","severity":1,"message":"874","line":993,"column":65,"nodeType":"719","messageId":"720","endLine":993,"endColumn":73},{"ruleId":"717","severity":1,"message":"875","line":993,"column":75,"nodeType":"719","messageId":"720","endLine":993,"endColumn":81},{"ruleId":"717","severity":1,"message":"891","line":993,"column":111,"nodeType":"719","messageId":"720","endLine":993,"endColumn":117},{"ruleId":"717","severity":1,"message":"892","line":993,"column":119,"nodeType":"719","messageId":"720","endLine":993,"endColumn":129},{"ruleId":"883","severity":1,"message":"884","line":1005,"column":11,"nodeType":"752","endLine":1021,"endColumn":12},{"ruleId":"723","severity":1,"message":"724","line":1104,"column":19,"nodeType":"725","messageId":"726","endLine":1123,"endColumn":20},{"ruleId":"750","severity":1,"message":"751","line":1233,"column":17,"nodeType":"752","endLine":1233,"endColumn":52},{"ruleId":"750","severity":1,"message":"751","line":1234,"column":17,"nodeType":"752","endLine":1234,"endColumn":51},{"ruleId":"717","severity":1,"message":"779","line":2,"column":60,"nodeType":"719","messageId":"720","endLine":2,"endColumn":64},{"ruleId":"717","severity":1,"message":"854","line":3,"column":8,"nodeType":"719","messageId":"720","endLine":3,"endColumn":17},{"ruleId":"717","severity":1,"message":"961","line":6,"column":32,"nodeType":"719","messageId":"720","endLine":6,"endColumn":47},{"ruleId":"717","severity":1,"message":"859","line":31,"column":9,"nodeType":"719","messageId":"720","endLine":31,"endColumn":16},{"ruleId":"717","severity":1,"message":"861","line":33,"column":7,"nodeType":"719","messageId":"720","endLine":33,"endColumn":13},{"ruleId":"717","severity":1,"message":"962","line":38,"column":5,"nodeType":"719","messageId":"720","endLine":38,"endColumn":8},{"ruleId":"865","severity":1,"message":"963","line":75,"column":9,"nodeType":"867","messageId":"774","endLine":75,"endColumn":15},{"ruleId":"723","severity":1,"message":"724","line":116,"column":9,"nodeType":"725","messageId":"726","endLine":122,"endColumn":10},{"ruleId":"940","severity":1,"message":"941","line":129,"column":51,"nodeType":"942","messageId":"943","endLine":129,"endColumn":53},{"ruleId":"940","severity":1,"message":"941","line":168,"column":51,"nodeType":"942","messageId":"943","endLine":168,"endColumn":53},{"ruleId":"717","severity":1,"message":"964","line":277,"column":15,"nodeType":"719","messageId":"720","endLine":277,"endColumn":25},{"ruleId":"717","severity":1,"message":"965","line":277,"column":53,"nodeType":"719","messageId":"720","endLine":277,"endColumn":59},{"ruleId":"717","severity":1,"message":"966","line":350,"column":15,"nodeType":"719","messageId":"720","endLine":350,"endColumn":28},{"ruleId":"750","severity":1,"message":"751","line":554,"column":29,"nodeType":"752","endLine":554,"endColumn":77},{"ruleId":"717","severity":1,"message":"967","line":577,"column":9,"nodeType":"719","messageId":"720","endLine":577,"endColumn":16},{"ruleId":"717","severity":1,"message":"968","line":578,"column":15,"nodeType":"719","messageId":"720","endLine":578,"endColumn":24},{"ruleId":"750","severity":1,"message":"751","line":612,"column":29,"nodeType":"752","endLine":612,"endColumn":77},{"ruleId":"723","severity":1,"message":"724","line":643,"column":9,"nodeType":"725","messageId":"726","endLine":646,"endColumn":10},{"ruleId":"723","severity":1,"message":"724","line":648,"column":9,"nodeType":"725","messageId":"726","endLine":651,"endColumn":10},{"ruleId":"717","severity":1,"message":"873","line":732,"column":17,"nodeType":"719","messageId":"720","endLine":732,"endColumn":27},{"ruleId":"717","severity":1,"message":"874","line":732,"column":29,"nodeType":"719","messageId":"720","endLine":732,"endColumn":37},{"ruleId":"717","severity":1,"message":"875","line":732,"column":39,"nodeType":"719","messageId":"720","endLine":732,"endColumn":45},{"ruleId":"717","severity":1,"message":"969","line":732,"column":47,"nodeType":"719","messageId":"720","endLine":732,"endColumn":55},{"ruleId":"717","severity":1,"message":"970","line":798,"column":97,"nodeType":"719","messageId":"720","endLine":798,"endColumn":102},{"ruleId":"717","severity":1,"message":"971","line":798,"column":135,"nodeType":"719","messageId":"720","endLine":798,"endColumn":157},{"ruleId":"717","severity":1,"message":"738","line":1,"column":17,"nodeType":"719","messageId":"720","endLine":1,"endColumn":25},{"ruleId":"717","severity":1,"message":"972","line":8,"column":8,"nodeType":"719","messageId":"720","endLine":8,"endColumn":17},{"ruleId":"973","severity":1,"message":"974","line":16,"column":20,"nodeType":"975","messageId":"774","endLine":16,"endColumn":23},{"ruleId":"717","severity":1,"message":"718","line":10,"column":10,"nodeType":"719","messageId":"720","endLine":10,"endColumn":14},{"ruleId":"717","severity":1,"message":"976","line":30,"column":9,"nodeType":"719","messageId":"720","endLine":30,"endColumn":16},{"ruleId":"717","severity":1,"message":"850","line":3,"column":3,"nodeType":"719","messageId":"720","endLine":3,"endColumn":8},{"ruleId":"717","severity":1,"message":"977","line":5,"column":3,"nodeType":"719","messageId":"720","endLine":5,"endColumn":10},{"ruleId":"717","severity":1,"message":"978","line":10,"column":8,"nodeType":"719","messageId":"720","endLine":10,"endColumn":17},{"ruleId":"717","severity":1,"message":"979","line":12,"column":10,"nodeType":"719","messageId":"720","endLine":12,"endColumn":22},{"ruleId":"717","severity":1,"message":"781","line":5,"column":32,"nodeType":"719","messageId":"720","endLine":5,"endColumn":44},{"ruleId":"717","severity":1,"message":"850","line":2,"column":10,"nodeType":"719","messageId":"720","endLine":2,"endColumn":15},{"ruleId":"717","severity":1,"message":"763","line":2,"column":17,"nodeType":"719","messageId":"720","endLine":2,"endColumn":23},{"ruleId":"717","severity":1,"message":"980","line":2,"column":48,"nodeType":"719","messageId":"720","endLine":2,"endColumn":56},{"ruleId":"717","severity":1,"message":"981","line":2,"column":58,"nodeType":"719","messageId":"720","endLine":2,"endColumn":61},{"ruleId":"717","severity":1,"message":"982","line":2,"column":63,"nodeType":"719","messageId":"720","endLine":2,"endColumn":66},{"ruleId":"717","severity":1,"message":"779","line":2,"column":68,"nodeType":"719","messageId":"720","endLine":2,"endColumn":72},{"ruleId":"717","severity":1,"message":"854","line":3,"column":8,"nodeType":"719","messageId":"720","endLine":3,"endColumn":17},{"ruleId":"717","severity":1,"message":"961","line":6,"column":32,"nodeType":"719","messageId":"720","endLine":6,"endColumn":47},{"ruleId":"717","severity":1,"message":"983","line":11,"column":8,"nodeType":"719","messageId":"720","endLine":11,"endColumn":13},{"ruleId":"717","severity":1,"message":"984","line":12,"column":8,"nodeType":"719","messageId":"720","endLine":12,"endColumn":14},{"ruleId":"717","severity":1,"message":"952","line":15,"column":8,"nodeType":"719","messageId":"720","endLine":15,"endColumn":11},{"ruleId":"717","severity":1,"message":"985","line":16,"column":8,"nodeType":"719","messageId":"720","endLine":16,"endColumn":14},{"ruleId":"717","severity":1,"message":"986","line":17,"column":8,"nodeType":"719","messageId":"720","endLine":17,"endColumn":12},{"ruleId":"717","severity":1,"message":"859","line":23,"column":9,"nodeType":"719","messageId":"720","endLine":23,"endColumn":16},{"ruleId":"717","severity":1,"message":"890","line":24,"column":9,"nodeType":"719","messageId":"720","endLine":24,"endColumn":15},{"ruleId":"717","severity":1,"message":"861","line":25,"column":7,"nodeType":"719","messageId":"720","endLine":25,"endColumn":13},{"ruleId":"717","severity":1,"message":"987","line":28,"column":5,"nodeType":"719","messageId":"720","endLine":28,"endColumn":12},{"ruleId":"717","severity":1,"message":"988","line":29,"column":5,"nodeType":"719","messageId":"720","endLine":29,"endColumn":17},{"ruleId":"717","severity":1,"message":"962","line":30,"column":5,"nodeType":"719","messageId":"720","endLine":30,"endColumn":8},{"ruleId":"717","severity":1,"message":"962","line":92,"column":61,"nodeType":"719","messageId":"720","endLine":92,"endColumn":64},{"ruleId":"717","severity":1,"message":"989","line":92,"column":66,"nodeType":"719","messageId":"720","endLine":92,"endColumn":75},{"ruleId":"883","severity":1,"message":"884","line":277,"column":15,"nodeType":"752","endLine":283,"endColumn":16},{"ruleId":"717","severity":1,"message":"894","line":4,"column":3,"nodeType":"719","messageId":"720","endLine":4,"endColumn":9},{"ruleId":"717","severity":1,"message":"895","line":13,"column":8,"nodeType":"719","messageId":"720","endLine":13,"endColumn":14},{"ruleId":"717","severity":1,"message":"763","line":14,"column":8,"nodeType":"719","messageId":"720","endLine":14,"endColumn":14},{"ruleId":"717","severity":1,"message":"896","line":15,"column":8,"nodeType":"719","messageId":"720","endLine":15,"endColumn":21},{"ruleId":"717","severity":1,"message":"889","line":16,"column":8,"nodeType":"719","messageId":"720","endLine":16,"endColumn":24},{"ruleId":"717","severity":1,"message":"786","line":20,"column":8,"nodeType":"719","messageId":"720","endLine":20,"endColumn":11},{"ruleId":"717","severity":1,"message":"787","line":21,"column":8,"nodeType":"719","messageId":"720","endLine":21,"endColumn":11},{"ruleId":"717","severity":1,"message":"788","line":22,"column":8,"nodeType":"719","messageId":"720","endLine":22,"endColumn":13},{"ruleId":"717","severity":1,"message":"890","line":32,"column":9,"nodeType":"719","messageId":"720","endLine":32,"endColumn":15},{"ruleId":"717","severity":1,"message":"898","line":55,"column":11,"nodeType":"719","messageId":"720","endLine":55,"endColumn":17},{"ruleId":"717","severity":1,"message":"899","line":55,"column":19,"nodeType":"719","messageId":"720","endLine":55,"endColumn":24},{"ruleId":"717","severity":1,"message":"900","line":71,"column":9,"nodeType":"719","messageId":"720","endLine":71,"endColumn":22},{"ruleId":"717","severity":1,"message":"990","line":154,"column":18,"nodeType":"719","messageId":"720","endLine":154,"endColumn":27},{"ruleId":"717","severity":1,"message":"991","line":154,"column":29,"nodeType":"719","messageId":"720","endLine":154,"endColumn":37},{"ruleId":"750","severity":1,"message":"751","line":558,"column":19,"nodeType":"752","endLine":565,"endColumn":61},{"ruleId":"883","severity":1,"message":"884","line":573,"column":19,"nodeType":"752","endLine":581,"endColumn":30},{"ruleId":"992","severity":1,"message":"993","line":1,"column":1,"nodeType":"994","endLine":256,"endColumn":3},{"ruleId":"717","severity":1,"message":"972","line":2,"column":8,"nodeType":"719","messageId":"720","endLine":2,"endColumn":17},{"ruleId":"717","severity":1,"message":"850","line":4,"column":10,"nodeType":"719","messageId":"720","endLine":4,"endColumn":15},{"ruleId":"717","severity":1,"message":"763","line":4,"column":17,"nodeType":"719","messageId":"720","endLine":4,"endColumn":23},{"ruleId":"717","severity":1,"message":"977","line":4,"column":25,"nodeType":"719","messageId":"720","endLine":4,"endColumn":32},{"ruleId":"717","severity":1,"message":"779","line":4,"column":34,"nodeType":"719","messageId":"720","endLine":4,"endColumn":38},{"ruleId":"717","severity":1,"message":"907","line":4,"column":40,"nodeType":"719","messageId":"720","endLine":4,"endColumn":47},{"ruleId":"717","severity":1,"message":"780","line":5,"column":10,"nodeType":"719","messageId":"720","endLine":5,"endColumn":30},{"ruleId":"717","severity":1,"message":"961","line":5,"column":46,"nodeType":"719","messageId":"720","endLine":5,"endColumn":61},{"ruleId":"717","severity":1,"message":"718","line":9,"column":10,"nodeType":"719","messageId":"720","endLine":9,"endColumn":14},{"ruleId":"717","severity":1,"message":"858","line":9,"column":20,"nodeType":"719","messageId":"720","endLine":9,"endColumn":24},{"ruleId":"717","severity":1,"message":"721","line":9,"column":26,"nodeType":"719","messageId":"720","endLine":9,"endColumn":28},{"ruleId":"753","severity":1,"message":"918","line":30,"column":8,"nodeType":"755","endLine":30,"endColumn":10,"suggestions":"995"},{"ruleId":"717","severity":1,"message":"738","line":1,"column":17,"nodeType":"719","messageId":"720","endLine":1,"endColumn":25},{"ruleId":"717","severity":1,"message":"737","line":1,"column":27,"nodeType":"719","messageId":"720","endLine":1,"endColumn":36},{"ruleId":"717","severity":1,"message":"781","line":3,"column":10,"nodeType":"719","messageId":"720","endLine":3,"endColumn":22},{"ruleId":"717","severity":1,"message":"780","line":3,"column":24,"nodeType":"719","messageId":"720","endLine":3,"endColumn":44},{"ruleId":"717","severity":1,"message":"996","line":4,"column":10,"nodeType":"719","messageId":"720","endLine":4,"endColumn":24},{"ruleId":"750","severity":1,"message":"751","line":44,"column":11,"nodeType":"752","endLine":47,"endColumn":13},{"ruleId":"750","severity":1,"message":"751","line":53,"column":13,"nodeType":"752","endLine":56,"endColumn":15},{"ruleId":"750","severity":1,"message":"751","line":61,"column":11,"nodeType":"752","endLine":64,"endColumn":13},{"ruleId":"750","severity":1,"message":"751","line":74,"column":11,"nodeType":"752","endLine":77,"endColumn":13},{"ruleId":"717","severity":1,"message":"737","line":1,"column":27,"nodeType":"719","messageId":"720","endLine":1,"endColumn":36},{"ruleId":"717","severity":1,"message":"718","line":8,"column":10,"nodeType":"719","messageId":"720","endLine":8,"endColumn":14},{"ruleId":"717","severity":1,"message":"858","line":8,"column":20,"nodeType":"719","messageId":"720","endLine":8,"endColumn":24},{"ruleId":"717","severity":1,"message":"997","line":18,"column":9,"nodeType":"719","messageId":"720","endLine":18,"endColumn":16},{"ruleId":"717","severity":1,"message":"841","line":68,"column":21,"nodeType":"719","messageId":"720","endLine":68,"endColumn":27},{"ruleId":"717","severity":1,"message":"960","line":72,"column":21,"nodeType":"719","messageId":"720","endLine":72,"endColumn":28},{"ruleId":"883","severity":1,"message":"884","line":160,"column":17,"nodeType":"752","endLine":176,"endColumn":18},{"ruleId":"723","severity":1,"message":"724","line":224,"column":29,"nodeType":"725","messageId":"726","endLine":243,"endColumn":30},{"ruleId":"717","severity":1,"message":"737","line":2,"column":27,"nodeType":"719","messageId":"720","endLine":2,"endColumn":36},{"ruleId":"717","severity":1,"message":"718","line":7,"column":14,"nodeType":"719","messageId":"720","endLine":7,"endColumn":18},{"ruleId":"717","severity":1,"message":"902","line":6,"column":5,"nodeType":"719","messageId":"720","endLine":6,"endColumn":10},{"ruleId":"771","severity":1,"message":"904","line":18,"column":16,"nodeType":"773","messageId":"774","endLine":18,"endColumn":18},{"ruleId":"771","severity":1,"message":"904","line":61,"column":16,"nodeType":"773","messageId":"774","endLine":61,"endColumn":18},{"ruleId":"771","severity":1,"message":"904","line":95,"column":16,"nodeType":"773","messageId":"774","endLine":95,"endColumn":18},"no-unused-vars","'mTop' is defined but never used.","Identifier","unusedVar","'pX' is defined but never used.","'temp' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'beep' is assigned a value but never used.","'unit' is assigned a value but never used.","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'Component' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","no-native-reassign",["998"],"no-negated-in-lhs",["999"],"'useRef' is defined but never used.","'Menu' is defined but never used.","'PageHeader' is defined but never used.","'Carousel' is defined but never used.","'Header' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.","ArrayExpression",["1000"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1001"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["1002"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1003"],"'Button' is defined but never used.","'Progress' is defined but never used.","'Space' is defined but never used.","'Tag' is defined but never used.","'memo' is assigned a value but never used.","'saveType' is assigned a value but never used.","'ProgressTitle' is assigned a value but never used.","'backConnectedPage' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'saveData' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["1004"],"'Tooltip' is defined but never used.","'Spin' is defined but never used.","'createFromIconfontCN' is defined but never used.","'SyncOutlined' is defined but never used.","'MyModal' is defined but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setUnits' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'echarsData', 'getOption', and 'mellaMeasureValue'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["1005"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["1006"],"'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1007","1008"],"Unnecessary escape character: \\-.",["1009","1010"],["1011","1012"],["1013","1014"],["1015","1016"],["1017","1018"],["1019","1020"],["1021","1022"],["1023","1024"],["1025","1026"],["1027","1028"],["1029","1030"],["1031","1032"],["1033","1034"],["1035","1036"],["1037","1038"],["998"],["999"],"'params' is assigned a value but never used.","'bree_id' is assigned a value but never used.","'animalcolour_id' is assigned a value but never used.","'guid' is assigned a value but never used.","'referring_clinic_id' is assigned a value but never used.","'referring_vet_id' is assigned a value but never used.","'residence_contact_id' is assigned a value but never used.","'species_id' is assigned a value but never used.","no-const-assign","'name' is constant.","const","Unnecessary escape character: \\\".","TemplateElement",["1039","1040"],["1041","1042"],"'chazhi' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'chooseNum' is assigned a value but never used.","'Table' is defined but never used.","'address' is assigned a value but never used.","'displayName' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","'Input' is defined but never used.","'Modal' is defined but never used.","'Select' is defined but never used.","'ConfigProvider' is defined but never used.","'Draggable' is defined but never used.","'Button1' is defined but never used.","'moment' is defined but never used.","'MaxMin' is defined but never used.","'MTop' is defined but never used.","'SubMenu' is assigned a value but never used.","'FetchEszVet' is defined but never used.","'MyIcon' is assigned a value but never used.","'biggieSave' is assigned a value but never used.","'gender' is assigned a value but never used.","'lastConnectionTime' is assigned a value but never used.","no-dupe-keys","Duplicate key '194'.","ObjectExpression","'weightUnits' is assigned a value but never used.",["1043","1044"],"'petId' is assigned a value but never used.","'pas' is assigned a value but never used.","'temp15' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'lastOrganization' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'bounds' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'temporaryStorage' is defined but never used.","'Option' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.","'Switch' is defined but never used.","'Slider' is defined but never used.","'electronStore' is defined but never used.","'parseGeoJSON' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'isUnKnow' is assigned a value but never used.","'token' is assigned a value but never used.","'header' is assigned a value but never used.","Expected '===' and instead saw '=='.","'useHistory' is defined but never used.","'px' is defined but never used.","'BackTop' is defined but never used.","'blueSearch' is defined but never used.","'MinClose' is defined but never used.","'MouseDiv' is defined but never used.","'back_white' is defined but never used.","'back_hui' is defined but never used.","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1045"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["1046"],"'petList' is assigned a value but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["1047"],"'Badge' is defined but never used.","'LinkEquipment' is defined but never used.","'connectStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["1048"],"React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["1049"],"'Image' is defined but never used.","'Card' is defined but never used.","'Charlie' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'callBack' and 'prediction'. Either include them or remove the dependency array.",["1050"],"React Hook useEffect has missing dependencies: 'mellaMeasureValue' and 'value'. Either include them or remove the dependency array.",["1051"],"'_' is defined but never used.","'mellaConnectStatus' is assigned a value but never used.","'Popover' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["1052"],"React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["1053"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Alert' is defined but never used.","'InfoCircleOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'dui' is defined but never used.","'gender' is defined but never used.","'stopBubble' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'newTime' is assigned a value but never used.","'LoadingOutlined' is defined but never used.","'url' is assigned a value but never used.","Duplicate key 'imgurl'.","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.","'disabled' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","'PropTypes' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'_resend' is assigned a value but never used.","'message' is defined but never used.","'mellaLogo' is defined but never used.","'fetchRequest' is defined but never used.","'Calendar' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'horse' is defined but never used.","'rabbit' is defined but never used.","'female' is defined but never used.","'male' is defined but never used.","'storage' is assigned a value but never used.","'errPatientId' is assigned a value but never used.","'userImage' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["1054"],"'SearchOutlined' is defined but never used.","'history' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1055","fix":"1056"},{"desc":"1057","fix":"1058"},{"desc":"1059","fix":"1060"},{"desc":"1061","fix":"1062"},{"desc":"1063","fix":"1064"},{"desc":"1065","fix":"1066"},{"desc":"1067","fix":"1068"},{"messageId":"1069","fix":"1070","desc":"1071"},{"messageId":"1072","fix":"1073","desc":"1074"},{"messageId":"1069","fix":"1075","desc":"1071"},{"messageId":"1072","fix":"1076","desc":"1074"},{"messageId":"1069","fix":"1077","desc":"1071"},{"messageId":"1072","fix":"1078","desc":"1074"},{"messageId":"1069","fix":"1079","desc":"1071"},{"messageId":"1072","fix":"1080","desc":"1074"},{"messageId":"1069","fix":"1081","desc":"1071"},{"messageId":"1072","fix":"1082","desc":"1074"},{"messageId":"1069","fix":"1083","desc":"1071"},{"messageId":"1072","fix":"1084","desc":"1074"},{"messageId":"1069","fix":"1085","desc":"1071"},{"messageId":"1072","fix":"1086","desc":"1074"},{"messageId":"1069","fix":"1087","desc":"1071"},{"messageId":"1072","fix":"1088","desc":"1074"},{"messageId":"1069","fix":"1089","desc":"1071"},{"messageId":"1072","fix":"1090","desc":"1074"},{"messageId":"1069","fix":"1091","desc":"1071"},{"messageId":"1072","fix":"1092","desc":"1074"},{"messageId":"1069","fix":"1093","desc":"1071"},{"messageId":"1072","fix":"1094","desc":"1074"},{"messageId":"1069","fix":"1095","desc":"1071"},{"messageId":"1072","fix":"1096","desc":"1074"},{"messageId":"1069","fix":"1097","desc":"1071"},{"messageId":"1072","fix":"1098","desc":"1074"},{"messageId":"1069","fix":"1099","desc":"1071"},{"messageId":"1072","fix":"1100","desc":"1074"},{"messageId":"1069","fix":"1101","desc":"1071"},{"messageId":"1072","fix":"1102","desc":"1074"},{"messageId":"1069","fix":"1103","desc":"1071"},{"messageId":"1072","fix":"1104","desc":"1074"},{"messageId":"1069","fix":"1105","desc":"1071"},{"messageId":"1072","fix":"1106","desc":"1074"},{"messageId":"1069","fix":"1107","desc":"1071"},{"messageId":"1072","fix":"1108","desc":"1074"},{"messageId":"1069","fix":"1109","desc":"1071"},{"messageId":"1072","fix":"1110","desc":"1074"},{"desc":"1111","fix":"1112"},{"desc":"1113","fix":"1114"},{"desc":"1115","fix":"1116"},{"desc":"1117","fix":"1118"},{"desc":"1119","fix":"1120"},{"desc":"1121","fix":"1122"},{"desc":"1123","fix":"1124"},{"desc":"1125","fix":"1126"},{"desc":"1127","fix":"1128"},{"desc":"1115","fix":"1129"},"Update the dependencies array to be: [finishScan, inputIndex, newData, patientId]",{"range":"1130","text":"1131"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1132","text":"1133"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"1134","text":"1135"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"1136","text":"1137"},"Update the dependencies array to be: [getPetTemperatureData]",{"range":"1138","text":"1139"},"Update the dependencies array to be: [echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",{"range":"1140","text":"1141"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"1142","text":"1143"},"removeEscape",{"range":"1144","text":"1145"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1146","text":"1147"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1148","text":"1145"},{"range":"1149","text":"1147"},{"range":"1150","text":"1145"},{"range":"1151","text":"1147"},{"range":"1152","text":"1145"},{"range":"1153","text":"1147"},{"range":"1154","text":"1145"},{"range":"1155","text":"1147"},{"range":"1156","text":"1145"},{"range":"1157","text":"1147"},{"range":"1158","text":"1145"},{"range":"1159","text":"1147"},{"range":"1160","text":"1145"},{"range":"1161","text":"1147"},{"range":"1162","text":"1145"},{"range":"1163","text":"1147"},{"range":"1164","text":"1145"},{"range":"1165","text":"1147"},{"range":"1166","text":"1145"},{"range":"1167","text":"1147"},{"range":"1168","text":"1145"},{"range":"1169","text":"1147"},{"range":"1170","text":"1145"},{"range":"1171","text":"1147"},{"range":"1172","text":"1145"},{"range":"1173","text":"1147"},{"range":"1174","text":"1145"},{"range":"1175","text":"1147"},{"range":"1176","text":"1145"},{"range":"1177","text":"1147"},{"range":"1178","text":"1145"},{"range":"1179","text":"1147"},{"range":"1180","text":"1145"},{"range":"1181","text":"1147"},{"range":"1182","text":"1145"},{"range":"1183","text":"1147"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1184","text":"1185"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1186","text":"1187"},"Update the dependencies array to be: [_getExam]",{"range":"1188","text":"1189"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"1190","text":"1191"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"1192","text":"1193"},"Update the dependencies array to be: [callBack, prediction, value]",{"range":"1194","text":"1195"},"Update the dependencies array to be: [mellaConnectStatus, mellaMeasureValue, value]",{"range":"1196","text":"1197"},"Update the dependencies array to be: [listDate]",{"range":"1198","text":"1199"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1200","text":"1201"},{"range":"1202","text":"1189"},[6285,6308],"[finishScan, inputIndex, newData, patientId]",[6779,6798],"[inputIndex, rulerConfirmCount]",[7539,7577],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[8011,8022],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[7772,7774],"[getPetTemperatureData]",[5519,5536],"[echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",[6119,6139],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[25342,25343],"",[25342,25342],"\\",[25448,25449],[25448,25448],[26393,26394],[26393,26393],[26499,26500],[26499,26499],[27478,27479],[27478,27478],[27584,27585],[27584,27584],[29145,29146],[29145,29145],[29251,29252],[29251,29251],[30158,30159],[30158,30158],[30264,30265],[30264,30264],[31282,31283],[31282,31282],[31388,31389],[31388,31388],[49726,49727],[49726,49726],[49832,49833],[49832,49832],[50528,50529],[50528,50528],[50634,50635],[50634,50634],[12789,12790],[12789,12789],[12803,12804],[12803,12803],[75103,75104],[75103,75103],[2680,2682],"[setReceiveBroadcastHardwareInfoFun]",[3991,4021],"[devicesList, receiveBroadcastHardwareInfo]",[1069,1071],"[_getExam]",[1723,1739],"[hardwareReduce, weight]",[885,887],"[initSelectVale, listArr]",[6696,6703],"[callBack, prediction, value]",[7351,7371],"[mellaConnectStatus, mellaMeasureValue, value]",[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]",[1031,1033]]