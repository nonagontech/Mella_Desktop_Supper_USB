[{"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/linkEquipment.jsx":"1","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/index.js":"2","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/praviders/Praviders.jsx":"3","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/editPetInfo/EditPetInfo.jsx":"4","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/InviteTeam.jsx":"5","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/AddDevice.jsx":"6","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/clinicalStudyPage/index.jsx":"7","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/Biggie.jsx":"8","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/petTable/index.jsx":"9","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx":"10","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/home/Home.jsx":"11","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js":"12","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/AddYuding.jsx":"13","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/ishavePMS/IsHavePMS.jsx":"14","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/unassigned/Unassigned.jsx":"15","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/reducers/userReduce.js":"16","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/areaCode/country.js":"17","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/allPetsPage/index.jsx":"18","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/userAction.js":"19","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/userType.js":"20","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/measure/NorMalMeasurement.jsx":"21","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/areaCode/imgArray.js":"22","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/index.js":"23","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/scanPet.jsx":"24","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectExam/SelectExam.jsx":"25","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorAddPet/DoctorAddPet.jsx":"26","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/NewOrganization.jsx":"27","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/temporaryStorage.js":"28","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil.js":"29","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addScheduledPet/index.jsx":"30","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/historyTable/index.jsx":"31","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/index.jsx":"32","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/PetsUI.jsx":"33","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/index.jsx":"34","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/appversion.js":"35","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectScheduledExam.jsx":"36","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/px.js":"37","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/myModal/MyModal.jsx":"38","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/headerItem.jsx":"39","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/petAction.js":"40","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/signIn/resetPassword/ResetPassword.jsx":"41","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/admin_VetProfile/Veterinarians.jsx":"42","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/index.js":"43"},{"size":6126,"mtime":1657529691549,"results":"44","hashOfConfig":"45"},{"size":555,"mtime":1655269876082,"results":"46","hashOfConfig":"45"},{"size":6255,"mtime":1655269876067,"results":"47","hashOfConfig":"45"},{"size":40197,"mtime":1655719343130,"results":"48","hashOfConfig":"45"},{"size":13114,"mtime":1655269876064,"results":"49","hashOfConfig":"45"},{"size":14344,"mtime":1656392763259,"results":"50","hashOfConfig":"45"},{"size":54973,"mtime":1657507971278,"results":"51","hashOfConfig":"45"},{"size":4467,"mtime":1655726154499,"results":"52","hashOfConfig":"45"},{"size":11797,"mtime":1655464363174,"results":"53","hashOfConfig":"45"},{"size":7938,"mtime":1655269876168,"results":"54","hashOfConfig":"45"},{"size":6204,"mtime":1657515873237,"results":"55","hashOfConfig":"45"},{"size":48353,"mtime":1657521583745,"results":"56","hashOfConfig":"45"},{"size":12510,"mtime":1655465386474,"results":"57","hashOfConfig":"45"},{"size":1605,"mtime":1655269876046,"results":"58","hashOfConfig":"45"},{"size":38143,"mtime":1656483089194,"results":"59","hashOfConfig":"45"},{"size":340,"mtime":1655452584535,"results":"60","hashOfConfig":"45"},{"size":17767,"mtime":1655269876086,"results":"61","hashOfConfig":"45"},{"size":7436,"mtime":1655462758292,"results":"62","hashOfConfig":"45"},{"size":280,"mtime":1655452088388,"results":"63","hashOfConfig":"45"},{"size":57,"mtime":1655451970438,"results":"64","hashOfConfig":"45"},{"size":137339,"mtime":1655378427105,"results":"65","hashOfConfig":"45"},{"size":11196,"mtime":1655269876151,"results":"66","hashOfConfig":"45"},{"size":85,"mtime":1655451978574,"results":"67","hashOfConfig":"45"},{"size":14822,"mtime":1656669619162,"results":"68","hashOfConfig":"45"},{"size":12336,"mtime":1655269876068,"results":"69","hashOfConfig":"45"},{"size":38775,"mtime":1655269876050,"results":"70","hashOfConfig":"45"},{"size":15732,"mtime":1655269876064,"results":"71","hashOfConfig":"45"},{"size":1251,"mtime":1655269876170,"results":"72","hashOfConfig":"45"},{"size":3314,"mtime":1655269876084,"results":"73","hashOfConfig":"45"},{"size":12674,"mtime":1655686821305,"results":"74","hashOfConfig":"45"},{"size":11843,"mtime":1657519719973,"results":"75","hashOfConfig":"45"},{"size":34000,"mtime":1657525764256,"results":"76","hashOfConfig":"45"},{"size":7856,"mtime":1657521203314,"results":"77","hashOfConfig":"45"},{"size":4874,"mtime":1657526743317,"results":"78","hashOfConfig":"45"},{"size":74,"mtime":1657529987141,"results":"79","hashOfConfig":"45"},{"size":38204,"mtime":1654166626112,"results":"80","hashOfConfig":"45"},{"size":2868,"mtime":1655269876168,"results":"81","hashOfConfig":"45"},{"size":1357,"mtime":1655269876167,"results":"82","hashOfConfig":"45"},{"size":10862,"mtime":1656669619163,"results":"83","hashOfConfig":"45"},{"size":513,"mtime":1655454782838,"results":"84","hashOfConfig":"45"},{"size":7379,"mtime":1655269876071,"results":"85","hashOfConfig":"45"},{"size":15338,"mtime":1655269876061,"results":"86","hashOfConfig":"45"},{"size":89,"mtime":1655452097264,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"15mxaen",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"95"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"95"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"92"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"92"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"121"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"183","messages":"184","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/linkEquipment.jsx",["187","188","189","190","191","192","193","194"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/index.js",[],["195","196"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/praviders/Praviders.jsx",[],["197","198"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/editPetInfo/EditPetInfo.jsx",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/InviteTeam.jsx",["224","225","226","227","228","229","230","231","232","233"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/AddDevice.jsx",["234","235","236","237","238","239","240","241","242","243","244","245","246","247","248"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Input, Button, message, Spin, BackTop } from 'antd';\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport { devicesTitleHeight } from '../../utils/InitDate'\nimport electronStore from '../../utils/electronStore';\nimport blueSearch from './../../assets/img/blueSerch.png'\nimport biggieHome from './../../assets/img/searchType-biggieHome.png'\nimport biggiePro from './../../assets/img/searchType-biggiePro.png'\nimport mellaHome from './../../assets/img/searchType-home.png'\nimport mellaPro from './../../assets/img/searchType-mellaPro.png'\nimport maeBowl from './../../assets/img/searchType-maeBowl.png'\nimport other from './../../assets/img/searchType-other.png'\nimport possum from './../../assets/img/searchType-possum.png'\nimport rfid from './../../assets/img/searchType-rfid.png'\nimport MinClose from '../../utils/minClose/MinClose'\nimport MouseDiv from '../../utils/mouseDiv/MouseDiv'\nimport back_white from '../../assets/img/back-white.png'\nimport back_hui from '../../assets/img/back-hui.png'\nimport redclose from '../../assets/img/redclose.png'\nimport MyModal from './../../utils/myModal/MyModal'\nimport { mTop, px, MTop, pX } from '../../utils/px';\nimport './mainbody.less'\nimport { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList } from '../../store/actions';\n\n\nlet storage = window.localStorage;\nconst AddDevice = ({ bodyHeight, hardwareReducer, isHaveUsbDevice, receiveBroadcastHardwareInfo, hardwareList, setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }) => {\n    //是否有底座设备\n    const [noUSB, setNoUSB] = useState(false)\n    //设备列表\n    const [devicesList, setDevicesList] = useState([])\n    //选择的设备\n    const [selectDevice, setSelectDevice] = useState(null)\n    //重命名\n    const [reName, setReName] = useState('')\n    //房间号\n    const [examRoom, setExamRoom] = useState('')\n    //已经保存过的设备的macid\n    const [saveDeviceMac, setSaveDeviceMac] = useState([])\n    //顶部文本\n    const [topText, setTopText] = useState(' Pair Device')\n\n    //初始化\n    useEffect(() => {\n        setNoUSB(false)\n        setDevicesList([])\n        setSelectDevice(null)\n        setReName('')\n        setSaveDeviceMac([])\n        setTopText(' Pair Device')\n        //组件渲染完毕后要先清空广播的硬件信息\n        setReceiveBroadcastHardwareInfoFun({\n            deviceType: '',\n            macId: '',\n            name: ''\n        })\n    }, [])\n\n    useEffect(() => {\n\n        if (hardwareList.length > 0) {\n            let saveDeviceMac = []\n            for (let i = 0; i < hardwareList.length; i++) {\n                const element = hardwareList[i];\n                for (let j = 0; j < element.devices.length; j++) {\n                    const device = element.devices[j];\n                    saveDeviceMac.push(device.mac)\n                }\n            }\n            setSaveDeviceMac(saveDeviceMac)\n\n        }\n    }, [hardwareList])\n    useEffect(() => {\n        if (!selectDevice) {\n            setTopText(' Pair Device')\n        } else {\n            setTopText('Device Connected')\n        }\n\n    }, [selectDevice])\n    useEffect(() => {\n        setNoUSB(!isHaveUsbDevice)\n    }, [isHaveUsbDevice])\n    useEffect(() => {\n        let sameFlog = devicesList.some((device, index) => {\n            return device.macId === receiveBroadcastHardwareInfo.macId\n        })\n        if (sameFlog || !receiveBroadcastHardwareInfo.macId) {   //重复直接退出\n            return\n        }\n        console.log('receiveBroadcastHardwareInfo', devicesList, receiveBroadcastHardwareInfo);\n        let deviceArr = [].concat(devicesList)\n        deviceArr.push(receiveBroadcastHardwareInfo)\n        setDevicesList(deviceArr)\n\n\n\n    }, [receiveBroadcastHardwareInfo])\n\n    const addDevice = () => {\n        //从redux拿到列表中的所有硬件设备 hardwareList\n        console.log('hardwareList', hardwareList);\n        //拿到硬件的macid 类型 名称 房间号\n        console.log('selectDevice', selectDevice);\n        let sameFlog = hardwareList.some((item, index) => {\n            return item.type === selectDevice.deviceType\n        })\n        let hardwareArr = [].concat(hardwareList)\n        let { deviceType, macId, name } = selectDevice\n        let newDevice = {\n            name: reName || name,\n            mac: macId,\n            deviceType,\n            examRoom: examRoom || '',\n        }\n        console.log('newDevice', newDevice);\n        if (sameFlog) {\n            //相同就代表有这个硬件类型,可以直接去push\n\n            for (let i = 0; i < hardwareArr.length; i++) {\n                if (hardwareArr[i].type === selectDevice.deviceType) {\n                    hardwareArr[i].devices.push(newDevice)\n                    break\n                }\n            }\n\n        } else {\n            //没有就要新建一个硬件类型\n            let json = {\n                type: selectDevice.deviceType,\n                devices: [newDevice]\n            }\n            hardwareArr.push(json)\n        }\n        setReName('')\n        setExamRoom('')\n        setHardwareList(hardwareArr)\n\n        return newDevice\n\n\n    }\n\n    const body = () => {\n\n        if (selectDevice) {\n            return <div className=\"addDevice1 flex\">\n                <div className=\"addDeviceTop flex\">\n                    <div className=\"title\" style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(20) }}>Would you like to name<br />\n                        {`this ${selectDevice.name} device?`}</div>\n\n                    <div className=\"title\" style={{ fontSize: px(24), marginBottom: px(40), }}>\n                        {`SN: ${selectDevice.macId}`}</div>\n\n\n                    <div className=\"input flex\" style={{ marginBottom: px(20), width: px(400) }}>\n                        <input type=\"text\" style={{ height: px(45) }}\n                            value={reName}\n                            onChange={(value) => {\n                                setReName(value.target.value)\n\n                            }}\n                            placeholder={`${selectDevice.name} Device Name`}\n                        />\n                    </div>\n                    <div className=\"input flex\" style={{ marginBottom: px(60), width: px(400) }}>\n                        <input type=\"text\" style={{ height: px(45) }}\n                            value={examRoom}\n                            onChange={(value) => {\n                                setExamRoom(value.target.value)\n\n                            }}\n                            placeholder={`Exam Room Name`}\n                        />\n                    </div>\n                    <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\n                        on the Exam Room. Write<br /> the name\n                        on the sticker provided so it is easy\n                        to select<br /> your device in the future.</div>\n                </div>\n                <div className=\"addDeviceFoot flex\">\n                    <div className=\"btn\"\n                        onClick={() => {\n                            addDevice()\n                            setSelectDevice(null)\n                            setSelectHardwareType('add')\n\n                        }}\n                    >\n                        <p className='btnText'>Add Another Device</p>\n                    </div>\n                    <div className=\"btn\"\n                        onClick={() => {\n                            let newDevice = addDevice()\n                            setSelectHardwareType(selectDevice.deviceType)\n\n\n                            electronStore.set(`${storage.lastOrganization}-${storage.userId}-${selectDevice.deviceType}-selectDeviceInfo`, newDevice)\n                            setSelectDevice(null)\n                        }}\n                    >\n                        <p className='btnText'>Finish</p>\n                    </div>\n                </div>\n\n\n            </div>\n        } else {\n            if (noUSB) {\n                return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\n                    <img src={redclose} alt=\"\" style={{ width: px(80) }} />\n\n                    <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\n                </div>\n            } else {\n                if (devicesList.length === 0) {\n                    let options = (val) => {\n                        let arr = []\n                        if (val === 1) {\n                            arr = [mellaPro, mellaHome, biggiePro, biggieHome, rfid]\n                        } else {\n                            arr = [possum, maeBowl, other]\n                        }\n                        let option = arr.map((item, index) => {\n                            let imgWidth = px(80)\n                            imgWidth = index === 2 ? px(65) : imgWidth\n                            return (<li key={index.toString()} style={{ margin: `${px(20)}px` }}>\n                                <div className=\"searchType-item\" key={index} >\n                                    <img src={item} alt=\"\" width={imgWidth} />\n                                </div>\n                            </li>)\n                        })\n                        return (\n                            <ul>\n                                {option}\n                            </ul>\n                        )\n                    }\n                    return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n\n\n                        <div className=\"addDeviceContent\">\n                            <div className=\"blueAnimal\" style={{ marginTop: px(50) }}>\n                                {/* <img src={blueSearch} alt=\"\" width={px(150)} /> */}\n                                <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                                    <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\n                                </div>\n                            </div>\n                            <div className=\"openText\" style={{ margin: `${px(15)}px 0` }}>\n                                Make sure your bluetooth and wifi is<br /> activated and turn on your device.\n                            </div>\n                            <div className=\"btn\" style={{ width: px(350), height: px(40) }}>\n                                <div className=\"btnText\">\n                                    Scan For Devices\n                                </div>\n                            </div>\n                            <div className=\"or\" style={{ marginTop: px(10), marginBottom: px(15) }}>\n                                Or\n                            </div>\n                            <div className=\"select\">\n                                Select device type to\n                            </div>\n                            <div className=\"add\">\n                                add manually\n                            </div>\n\n                            <div className=\"item\">\n                                {options(1)}\n                                {options(2)}\n                            </div>\n                        </div>\n\n                        {/* <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\n                          \n                            <p>\n                                {'searching...'}\n                            </p>\n                        </div> */}\n                    </div>\n                } else {\n                    let options = devicesList.map((item, index) => {\n\n                        let flog = saveDeviceMac.some((device, index) => {\n                            return device === item.macId\n                        })\n                        let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\n                        return <li\n                            className='flex'\n                            style={{ marginBottom: px(20) }}\n                            key={`${index}`}\n                            onClick={() => {\n                                if (!flog) {\n                                    setSelectDevice(item)\n\n                                } else {\n                                    message.destroy();\n                                    message.error('This device has already been added')\n                                }\n\n                            }}\n                        >\n\n                            <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\n                            <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\n\n                        </li>\n                    })\n                    return <div className='deviceList ' >\n                        <ul>\n                            {options}\n                        </ul>\n                    </div>\n                }\n            }\n        }\n\n    }\n\n    return (\n        <div className='addDevice' style={{ height: bodyHeight }}>\n            <div className=\"addDeviceTitle\" style={{ height: devicesTitleHeight, fontSize: 26, paddingLeft: px(20) }}>\n                {topText}\n            </div>\n\n            {body()}\n        </div >\n\n    )\n}\n\n\nAddDevice.propTypes = {\n    bodyHeight: PropTypes.number,\n    devicesTypeList: PropTypes.array\n}\n//默认值\nAddDevice.defaultProps = {\n    bodyHeight: 0,\n    devicesTypeList: []\n}\nexport default connect(\n    state => ({\n        hardwareReducer: state.hardwareReduce,\n        isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n        receiveBroadcastHardwareInfo: state.hardwareReduce.receiveBroadcastHardwareInfo,\n        hardwareList: state.hardwareReduce.hardwareList,\n    }),\n    { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }\n)(AddDevice)","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/clinicalStudyPage/index.jsx",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Layout,\n  message,\n  Input,\n  Menu,\n  Modal,\n  Table,\n  Popconfirm,\n  Tooltip,\n  Select,\n  Spin,\n} from \"antd\";\nimport ReactECharts from \"echarts-for-react\";\nimport propTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {\n  createFromIconfontCN,\n  SyncOutlined,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\nimport Draggable from \"react-draggable\";\nimport { devicesTitleHeight } from \"../../utils/InitDate\";\nimport { px, mTop } from \"../../utils/px\";\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\nimport MyModal from \"./../../utils/myModal/MyModal\";\nimport electronStore from \"../../utils/electronStore\";\nimport _ from \"lodash\";\n\nimport ye from \"./../../assets/images/ye1.png\";\nimport er from \"./../../assets/images/er3.png\";\nimport gang from \"./../../assets/images/gang3.png\";\nimport dog from \"./../../assets/images/dog.png\";\nimport cat from \"./../../assets/images/cat.png\";\nimport other from \"./../../assets/images/other.png\";\nimport edit from \"./../../assets/images/edit.png\";\nimport del from \"./../../assets/images/del.png\";\nimport start from \"./../../assets/img/start.png\";\nimport redjinggao from \"./../../assets/img/redjinggao.png\";\nimport placement_gang from \"./../../assets/images/placement_gang.png\";\nimport placement_er from \"./../../assets/images/placement_er.png\";\nimport palcement_ye from \"./../../assets/images/palcement_ye.png\";\nimport close from \"./../../assets/img/close.png\";\n\nimport \"./clinical.less\";\nimport { fetchRequest } from \"../../utils/FetchUtil1\";\nimport { fetchRequest3 } from \"../../utils/FetchUtil3\";\n\nlet resyncDeviceIsClick = true; //用于控制多次点击重新配对按钮\nlet storage = window.localStorage;\n\n//定义echarts的数据个数\nconst echartsDataLength = 0;\nconst { Option } = Select;\nlet saveHistoryTime = null;\nconst ClinicalStudy = ({\n  bodyHeight,\n  mellaConnectStatus,\n  mellaMeasureValue,\n  mellaMeasureNum,\n  petDetailInfo,\n}) => {\n  const [units, setUnits] = useState(\"\");\n  const [temperature, setTemp] = useState(0);\n  const echartsElement = useRef(null);\n  const [showHistoryEchart, setShowHistoryEchart] = useState(false);\n  const [echarsData, setEcharsData] = useState({\n    Eci: [],\n    wen0: [],\n    wen1: [],\n  });\n\n  const [echarsData1, setEcharsData1] = useState({\n    Eci: [],\n    wen0: [],\n    wen1: [],\n  });\n  const [mellaStatus, setMellaStatus] = useState(\"disconnected\");\n  const [roomTemperature, setRoomTemperature] = useState(\"\");\n  const [referenceRectalTemperature, setReferenceRectalTemperature] =\n    useState(\"\");\n  const [bodyConditionScore, setBodyConditionScore] = useState(\"\");\n  const [furLength, setFurLength] = useState(\"\");\n  const [heartRate, setHeartRate] = useState(\"\");\n  const [bloodPressure, setBloodPressure] = useState(\"\");\n  const [respiratoryRate, setRespiratoryRate] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n\n  const [isPetCharacteristics, setIsPetCharacteristics] = useState(false);\n  const [historyData, setHistoryData] = useState([]);\n  const [editRectal, setEditRectal] = useState(\"\");\n  const [editRoomTemperature, setEditRoomTemperature] = useState(\"\");\n  const [editHeartRate, setEditHeartRate] = useState(\"\");\n  //定义变量 editBloodPressure,  editRespiratoryRate, editVisible: true, editId: key, memo: record.note, editBodyConditionScore, editFurLength\n  const [editBloodPressure, setEditBloodPressure] = useState(\"\");\n  const [editRespiratoryRate, setEditRespiratoryRate] = useState(\"\");\n  const [editVisible, setEditVisible] = useState(false);\n  const [editId, setEditId] = useState(\"\");\n  const [editMemo, setEditMemo] = useState(\"\");\n  const [editBodyConditionScore, setEditBodyConditionScore] = useState(\"\");\n  const [editFurLength, setEditFurLength] = useState(\"\");\n  const [tipSpin, setTipSpin] = useState(false);\n  const [tip, setTip] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [bounds, setBounds] = useState({\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  });\n  const [memo, setMemo] = useState(\"\");\n  const [windowWidth, setWindowWidth] = useState(px(550));\n\n  const clinicalRef = useRef(null);\n  const resize = () => {\n    if (clinicalRef.current) {\n      let { offsetWidth } = clinicalRef.current;\n      //   console.log(\"改变\", offsetWidth);\n      setWindowWidth(offsetWidth);\n    }\n  };\n  const addClinical = () => {\n    console.log(\"调用接口进行保存数据\");\n    let emerData = [];\n    let { Eci, wen0, wen1 } = echarsData;\n    for (let i = 0; i < wen0.length; i++) {\n      const element = wen0[i];\n      let str = {\n        data0: element,\n        data1: wen1[i],\n      };\n      emerData.push(str);\n    }\n\n    saveHistoryTime && clearTimeout(saveHistoryTime);\n    saveHistoryTime = setTimeout(() => {\n      let BCS =\n        bodyConditionScore === \"\" ? null : parseFloat(bodyConditionScore);\n      let hrartR = heartRate === \"\" ? null : parseFloat(heartRate);\n      let respireatoryR =\n        respiratoryRate === \"\" ? null : parseFloat(respiratoryRate);\n\n      let roomT =\n        roomTemperature === \"\"\n          ? null\n          : ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2);\n\n      let referenceT =\n        referenceRectalTemperature === \"\"\n          ? null\n          : ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2);\n\n      let furL = furLength === \"\" ? null : parseFloat(furLength);\n\n      let petVitalId = 1;\n\n      let datas = {\n        temperature: parseFloat(temperature), //测量温度\n        roomTemperature: roomT, //室温\n        bodyConditionScore: BCS, //身体状况评分\n        heartRate: hrartR, //心率\n        respiratoryRate: respireatoryR, //呼吸率\n        referenceRectalTemperature: referenceT, //参考腹部温度\n        furLength: furL, //毛发长度\n        bloodPressure: bloodPressure, //血压\n        memo: notes,\n        petVitalTypeId: petVitalId,\n        clinicalDataEntityList: emerData,\n      };\n      if (storage.roleId === `1`) {\n        datas.userId = storage.userId;\n      } else {\n        datas.doctorId = storage.userId;\n        datas.userId = storage.userId;\n      }\n      let { petId, isWalkIn } = petDetailInfo;\n      if (petId && !isWalkIn) {\n        datas.petId = petId;\n        console.log(\"入参数据:\", datas);\n        fetchRequest(`/clinical/addAllClinical`, \"POST\", datas)\n          .then((res) => {\n            console.log(res);\n\n            if (res.flag === true) {\n              console.log(\"上传成功\");\n              message.success(\"Uploaded successfully\");\n              _getHistory11(petDetailInfo.petId);\n            } else {\n              console.log(\"上传失败\");\n\n              message.error(\"upload failed\");\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            message.error(\"upload failed\");\n          });\n      } else if (isWalkIn) {\n        console.log(\"温度数据保存入参：\", datas);\n\n        fetchRequest(`/clinical/addAllClinical`, \"POST\", datas)\n          .then((res) => {\n            if (res.flag === true) {\n              message.success(\"Uploaded successfully\");\n\n              _getEmergencyHistory();\n            } else {\n              console.log(\"上传失败\");\n              message.error(\"upload failed\");\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            message.error(err);\n          });\n      }\n    }, 500);\n  };\n  const _getHistory11 = (petId) => {\n    let historys = [];\n    setLoading(true);\n    fetchRequest(`/pet/getPetExamAndClinicalByPetId/${petId}`, \"GET\", \"\") //userID要自动的\n      .then((res) => {\n        console.log(\"获取历史记录\", res);\n        setLoading(false);\n\n        if (res.flag === true) {\n          let datas = res.data;\n          console.log(\"-------\", datas);\n          for (let i = datas.length - 1; i >= 0; i--) {\n            let data = datas[i];\n\n            let {\n              petId,\n              examId,\n              clinicalDatagroupId,\n              userId,\n              petVitalTypeId,\n              temperature,\n              roomTemperature,\n              bloodPressure,\n              memo,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              createTime,\n              clinicalDataEntity,\n              modifiedTime,\n            } = data;\n\n            if (!clinicalDatagroupId) {\n              continue;\n            }\n            let Tem = temperature;\n            if (clinicalDataEntity) {\n              Tem = Tem || clinicalDataEntity.data0;\n            }\n            // console.log('==============', Tem);\n            Tem = Tem ? Tem : 0;\n\n            let time = null;\n            if (\n              modifiedTime &&\n              `${modifiedTime}` !== \"\" &&\n              `${modifiedTime}` !== `undefined`\n            ) {\n              time = modifiedTime;\n            } else {\n              time = createTime;\n            }\n            let json = {\n              time,\n              Temp: Tem,\n              placement: petVitalTypeId,\n              note: memo,\n              historyId: examId,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n            };\n            historys.push(json);\n          }\n          console.log(\"---\", historys);\n          let historyData = [];\n          for (let i = 0; i < historys.length; i++) {\n            let history = historys[i];\n            let {\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n              examId,\n            } = history;\n            // console.log('--------', history.placement);\n            let placement = history.placement;\n            if (placement === null || placement === \"\") {\n              placement = 1;\n            }\n            let str = {\n              date: moment(history.time).format(\"MMM DD\"),\n              time: moment(history.time).format(\"hh:mm A\"),\n              temp: history.Temp,\n              placement,\n              note: history.note,\n              historyId: history.historyId,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n              key: examId,\n            };\n            historyData.push(str);\n          }\n          // this.setState({\n          //     historyData\n          // })\n          setHistoryData(historyData);\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          loading: false,\n        });\n        console.log(err);\n      });\n  };\n  const _getEmergencyHistory = () => {\n    //封装的日期排序方法\n    function ForwardRankingDate(data, p) {\n      for (let i = 0; i < data.length - 1; i++) {\n        for (let j = 0; j < data.length - 1 - i; j++) {\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\n            var temp = data[j];\n            data[j] = data[j + 1];\n            data[j + 1] = temp;\n          }\n        }\n      }\n      return data;\n    }\n    let historys = [];\n    setLoading(true);\n    fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, \"GET\", \"\") //userID要自动的\n      .then((res) => {\n        setLoading(false);\n        if (res.flag === true) {\n          let datas = res.data;\n          for (let i = datas.length - 1; i >= 0; i--) {\n            if (datas[i].petId === null) {\n              let {\n                petId,\n                examId,\n                userId,\n                petVitalTypeId,\n                temperature,\n                roomTemperature,\n                bloodPressure,\n                memo,\n                clinicalDatagroupId,\n                bodyConditionScore,\n                heartRate,\n                respiratoryRate,\n                referenceRectalTemperature,\n                furLength,\n                createTime,\n                clinicalDataEntity,\n              } = datas[i];\n              let Tem = temperature;\n              try {\n                Tem = temperature || clinicalDataEntity.data0;\n              } catch (error) {\n                console.log(\"抛出的异常\", error);\n              }\n\n              let str = {\n                clinicalDatagroupId,\n                createTime,\n                date: moment(createTime).format(\"MMM DD\"),\n                time: moment(createTime).format(\"hh:mm A\"),\n                temp: parseInt(Tem * 10) / 10,\n                placement: petVitalTypeId,\n                note: memo,\n                historyId: examId,\n                bodyConditionScore,\n                heartRate,\n                respiratoryRate,\n                referenceRectalTemperature,\n                furLength,\n                roomTemperature,\n                bloodPressure,\n                petId,\n                userId,\n              };\n\n              historys.push(str);\n            }\n          }\n\n          //把所有数据拿完后做个排序\n\n          let historyData = ForwardRankingDate(historys, \"createTime\");\n          console.log(\"historyData:\", historyData);\n          setHistoryData(historyData);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  };\n  const getOption = () => {\n    let min, max;\n    if (units === \"℃\") {\n      min = 25;\n      max = 45;\n    } else {\n      min = 75;\n      max = 115;\n    }\n    let { Eci, wen0, wen1 } = _.isEmpty(echarsData1.Eci) ? echarsData : echarsData1;\n    let option = {\n      color: [\"#81b22f\"],\n      tooltip: {\n        /*返回需要的信息*/\n        trigger: \"axis\",\n        triggerOn: \"mousemove\",\n        enterable: true,\n        formatter: function (param) {\n          var value = param[0].value;\n          return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(\n            1\n          )}${units}</div>`;\n        },\n      },\n      xAxis: {\n        name: \"SPL\",\n        nameLocation: \"end\",\n        nameTextStyle: {\n          align: \"left\",\n        },\n        type: \"category\",\n        data: Eci,\n        axisLine: {\n          lineStyle: {\n            // 设置x轴颜色\n            color: \"#A0A0A0\",\n            show: true,\n          },\n        },\n        // 设置X轴数据旋转倾斜\n        axisLabel: {\n          rotate: 0, // 旋转角度\n          interval: 29, //设置X轴数据间隔几个显示一个，为0表示都显示\n        },\n      },\n      yAxis: {\n        name: \"temperature\",\n        type: \"value\",\n        min, // 设置y轴刻度的最小值\n        max, // 设置y轴刻度的最大值\n        splitNumber: 0, // 设置y轴刻度间隔个数\n        nameTextStyle: {\n          padding: [0, 0, 0, 8],\n          // backgroundColor: 'pink',\n          width: \"1200px\",\n          // fontSize: 20,\n          align: \"left\",\n        },\n\n        axisLine: {\n          lineStyle: {\n            // 设置x轴颜色\n            color: \"#A0A0A0\",\n            show: true,\n          },\n        },\n        splitLine: {\n          show: false,\n        },\n      },\n      series: [\n        {\n          name: \"模拟数据\",\n          type: \"line\",\n          showSymbol: false,\n          hoverAnimation: false,\n          // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\n          data: wen0,\n          smooth: 0.5,\n          symbol: \"none\",\n          // itemStyle: {\n          //     normal: {\n\n          //     }\n          // }\n          lineStyle: {\n            // 系列级个性化折线样式\n            width: 2,\n            type: \"solid\",\n            color: {\n              type: \"linear\",\n              x: 0,\n              y: 1,\n              x2: 0,\n              y2: 0,\n              colorStops: [\n                {\n                  offset: 0.5,\n                  color: \"#47C2ED\", // 0% 处的颜色  蓝\n                },\n                {\n                  offset: 1,\n                  color: \"#78D35D\", // 50% 处的颜色  绿\n                },\n                // {\n                //   offset: 1, color: 'red' // 100% 处的颜色   红\n                // }\n              ],\n              globalCoord: false, // 缺省为 false\n            },\n          },\n        },\n      ],\n    };\n    return option;\n  };\n  const _status = () => {\n    let text = \"\",\n      unit = \"\",\n      temColor = \"\";\n    let Temp = parseFloat(temperature);\n    if (mellaConnectStatus === \"disconnected\") {\n      if (!showHistoryEchart) {\n        Temp = \"\";\n        text = \"disconnected\";\n        temColor = \"#3B3A3A\";\n      } else {\n        text = \"disconnected\";\n        temColor = \"#3B3A3A\";\n      }\n    }else if(mellaConnectStatus === \"connected\"){\n      Temp = \"\";\n      text = \"connected\";\n      temColor = \"#3B3A3A\";\n    }\n     else {\n      text = \"connected\";\n      temColor = \"#3B3A3A\";\n      if (Temp > 15) {\n        unit = units;\n        if (Temp > 39) {\n          text = \"High\";\n          temColor = \"#E1206D\";\n        } else if (Temp < 31) {\n          text = \"Low\";\n          temColor = \"#47C2ED\";\n        } else {\n          text = \"Normal\";\n          temColor = \"#78D35D\";\n        }\n      }\n    }\n    let temp = \"\";\n    if (`${Temp}` !== \"NaN\" && Temp !== \"\") {\n      temp =\n        units === \"℉\" ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1);\n    }\n    let lowFlog = false;\n    if (unit === \"℃\") {\n      if (temp < 24.8) {\n        lowFlog = true;\n      }\n    } else {\n      if (temp < 76.6) {\n        lowFlog = true;\n      }\n    }\n    return (\n      <div\n        className=\"Tem\"\n        style={{\n          color: temColor,\n          right: px(100),\n          bottom: mTop(120),\n          pointerEvents: \"none\",\n        }}\n      >\n        {mellaConnectStatus !== \"isMeasuring\" ? (\n          showHistoryEchart ? (\n            <>\n              <span style={{ fontSize: px(46),fontWeight:'bold' }}>\n                {temp} <sup style={{ fontSize: px(28),fontWeight:'bold' }}>{units}</sup>\n              </span>\n              <br />\n              {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\n\n              <span\n                style={{ fontSize: px(32), color: \"#8a8a8a\",fontWeight:'bold' }}\n              >{`History`}</span>\n            </>\n          ) : (\n            <>\n              <span style={{ fontSize: px(46) ,fontWeight:'bold'}}>\n                {temp < 3 ? null : temp}{\" \"}\n                <sup style={{ fontSize: px(28),fontWeight:'bold' }}>{unit}</sup>\n              </span>\n              <br />\n              <span style={{ fontSize: px(32),fontWeight:'bold' }}>{text}</span>\n            </>\n          )\n        ) : lowFlog ? (\n          <>\n            <span style={{ fontSize: px(46),fontWeight:'bold' }}>{\"Low\"}</span>\n            <br />\n          </>\n        ) : (\n          <>\n            <span style={{ fontSize: px(46),fontWeight:'bold' }}>\n              {temp} <sup style={{ fontSize: px(28),fontWeight:'bold' }}>{unit}</sup>\n            </span>\n            <br />\n          </>\n        )}\n      </div>\n    );\n  };\n  const handleChange = (index) => {\n    console.log(\"---------\", index);\n    setFurLength(index);\n  };\n  const _petCharacteristics = () => {\n    let placeholder = \"\";\n    switch (`${furLength}`) {\n      case \"1\":\n        placeholder = \"smooth\";\n        break;\n      case \"2\":\n        placeholder = \"short\";\n        break;\n      case \"3\":\n        placeholder = \"medium\";\n        break;\n      case \"4\":\n        placeholder = \"long\";\n        break;\n      default:\n        break;\n    }\n\n    return (\n      <div\n        className=\"petChaeacteristics\"\n        style={{ paddingLeft: px(10), paddingRight: px(10), height: \"100%\" }}\n      >\n        <div className=\"child\" style={{ marginTop: mTop(30) }}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <p style={{ width: \"150px\" }}>Room Temperature: </p>\n            <Input\n              className=\"inp\"\n              // style={{ border: 'none', outline: 'medium' }}\n              // style={{ width: px(105), height: mTop(33), fontSize: px(18), marginRight: px(6) }}\n\n              value={`${roomTemperature}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setRoomTemperature(str);\n              }}\n            />\n            <span\n              style={{\n                position: \"absolute\",\n                top: \"5%\",\n                right: \"5%\",\n                display: \"table-cell\",\n                whiteSpace: \"nowrap\",\n                paddingTop: \"5px\",\n                paddingRight: \"5px\",\n              }}\n            >\n              ℉\n            </span>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <p style={{ width: \"150px\" }}>Reference Rectal Temperature: </p>\n            <Input\n              className=\"inp\"\n              // style={{ border: 'none', outline: 'medium' }}\n\n              value={`${referenceRectalTemperature}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setReferenceRectalTemperature(str);\n              }}\n            />\n            <span\n              style={{\n                position: \"absolute\",\n                top: \"10%\",\n                right: \"5%\",\n                display: \"table-cell\",\n                whiteSpace: \"nowrap\",\n                paddingTop: \"5px\",\n                paddingRight: \"5px\",\n              }}\n            >\n              ℉\n            </span>\n          </div>\n        </div>\n        <div className=\"child\">\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <p style={{ width: \"150px\" }}>Body Condition Score: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={bodyConditionScore}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setBodyConditionScore(str);\n              }}\n            />\n          </div>\n          <div className=\"furLength\">\n            <p style={{ width: \"150px\" }}>Fur Length: </p>\n            <Select\n              placeholder\n              onChange={handleChange}\n              style={{\n                width: \"105px\",\n                borderRadius: \"40px\",\n                height: \"33px\",\n                outline: \"none\",\n                borderWidth: 0,\n              }}\n              value={placeholder}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n        </div>\n        <div className=\"child\">\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <p style={{ width: \"150px\" }}>Heart Rate: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={`${heartRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setHeartRate(str);\n              }}\n            />\n            <span\n              style={{\n                position: \"absolute\",\n                top: \"2%\",\n                right: \"5%\",\n                display: \"table-cell\",\n                whiteSpace: \"nowrap\",\n                paddingTop: \"5px\",\n                paddingRight: \"1px\",\n              }}\n            >\n              bpm\n            </span>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <p style={{ width: \"150px\" }}>Blood Pressure: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={bloodPressure}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setBloodPressure(str);\n              }}\n            />\n            <span\n              style={{\n                position: \"absolute\",\n                top: \"2%\",\n                right: \"5%\",\n                display: \"table-cell\",\n                whiteSpace: \"nowrap\",\n                paddingTop: \"5px\",\n                paddingRight: \"5px\",\n              }}\n            >\n              mm\n            </span>\n          </div>\n        </div>\n        <div className=\"child\" style={{ marginBottom: px(40) }}>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              position: \"relative\",\n            }}\n          >\n            <p style={{ width: \"150px\" }}>Respiratory Rate: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={`${respiratoryRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setRespiratoryRate(str);\n              }}\n            />\n            <span\n              style={{\n                position: \"absolute\",\n                top: \"2%\",\n                right: \"5%\",\n                display: \"table-cell\",\n                whiteSpace: \"nowrap\",\n                paddingTop: \"5px\",\n                paddingRight: \"1px\",\n              }}\n            >\n              bpm\n            </span>\n          </div>\n          <div className=\"furLength\" id=\"_bodyType\"></div>\n        </div>\n      </div>\n    );\n  };\n  const _history = () => {\n    const _del = (key, record) => {\n      // console.log(\"删除\", key, record);\n      /**------------这里还要删除后台的数据------------ */\n      fetchRequest(`/pet/deletePetExamByExamId/${key}`, \"DELETE\").then(\n        (res) => {\n          if (res.flag === true) {\n            const historyData1 = [...historyData];\n            console.log(\"删除成功\", historyData1);\n            setHistoryData(\n              historyData1.filter((item) => item.historyId !== key)\n            );\n          } else {\n            console.log(\"删除失败\");\n          }\n        }\n      );\n    };\n    const _edit = (key, record) => {\n      let {\n        heartRate,\n        bloodPressure,\n        respiratoryRate,\n        referenceRectalTemperature,\n        roomTemperature,\n        bodyConditionScore,\n        furLength,\n        note,\n      } = record;\n      console.log(\"转换前：\", record);\n      let editHeartRate =\n        heartRate !== null && heartRate !== undefined ? heartRate : \"\";\n      let editBloodPressure =\n        bloodPressure !== null && bloodPressure !== undefined\n          ? bloodPressure\n          : \"\";\n      let editRespiratoryRate =\n        respiratoryRate !== null && respiratoryRate !== undefined\n          ? respiratoryRate\n          : \"\";\n      let editRectal =\n        referenceRectalTemperature !== null &&\n        referenceRectalTemperature !== undefined\n          ? (referenceRectalTemperature * 1.8 + 32).toFixed(1)\n          : \"\";\n      let editRoomTemperature =\n        roomTemperature !== null && roomTemperature !== undefined\n          ? (roomTemperature * 1.8 + 32).toFixed(1)\n          : \"\";\n      let editBodyConditionScore =\n        bodyConditionScore !== null && bodyConditionScore !== undefined\n          ? bodyConditionScore\n          : \"\";\n      let editFurLength = furLength;\n      let mome = note ? note : \"\";\n\n      console.log(\n        editRectal,\n        editRoomTemperature,\n        editHeartRate,\n        editBloodPressure,\n        editRespiratoryRate\n      );\n\n      //更新editRectal,editRoomTemperature,editHeartRate,editBloodPressure,editRespiratoryRate,editVisible: true,editId: key,memo: record.note,editBodyConditionScore,editFurLength\n      setEditRectal(editRectal);\n      setEditRoomTemperature(editRoomTemperature);\n      setEditHeartRate(editHeartRate);\n      setEditBloodPressure(editBloodPressure);\n      setEditRespiratoryRate(editRespiratoryRate);\n      setEditVisible(true);\n      setEditId(key);\n      setEditMemo(record.note);\n      setEditBodyConditionScore(editBodyConditionScore);\n      setEditFurLength(editFurLength);\n      setMemo(mome);\n    };\n    const see = (id, record) => {\n      setEcharsData1({\n        Eci: [],\n        wen0: [],\n        wen1: [],\n      });\n      console.log(id, record);\n      setTip(\"data is loading\");\n      setTipSpin(true);\n      fetchRequest3(`/exam/getClinicalDataByExamId/${id}`, \"GET\")\n        .then((res) => {\n          console.log(\"此条记录的全部数据：\", res);\n          setTip(\"\");\n          setTipSpin(false);\n          if (res.flag) {\n            let datas = res.data.clinicalDataEntityList;\n            if (datas) {\n              let echarsData = {\n                Eci: [],\n                wen0: [],\n                wen1: [],\n              };\n              let { wen0, wen1, Eci } = echarsData;\n              for (let i = 0; i < datas.length; i++) {\n                let { data0, data1 } = datas[i];\n\n                Eci.push(i);\n                if (units === \"℃\") {\n                  wen0.push(data0);\n                  wen1.push(data1);\n                } else {\n                  wen0.push(data0 * 1.8 + 32);\n                  wen1.push(data1 * 1.8 + 32);\n                }\n              }\n              let Temp = datas[datas.length - 1].data0 || \"\";\n              console.log(\"----------------\", Temp);\n              setEcharsData(echarsData);\n              setTemp(Temp);\n              setShowHistoryEchart(true);\n            }\n          }\n        })\n        .catch((err) => {\n          setTip(\"\");\n          setTipSpin(false);\n          console.log(err);\n        });\n    };\n    const isflog = window.screen.height < 1000 ? true : false;\n\n    const columns = [\n      {\n        title: \"\",\n        dataIndex: \"operation\",\n        key: \"operation\",\n        width: \"16%\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        render: (text, record, index) => {\n          // console.log('狩猎:', text, record, index);\n          //record:\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                alignItems: \"center\",\n                padding: `${px(18)}px 0`,\n              }}\n            >\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => _del(record.historyId, record)}\n              >\n                <img src={del} alt=\"\" style={{ width: px(25) }} />\n              </Popconfirm>\n              {petDetailInfo.isWalkIn ? (\n                <div\n                  className=\"assign\"\n                  style={{\n                    width: mTop(60),\n                    height: mTop(28),\n                    fontSize: px(14),\n                  }}\n                  onClick={() => {\n                    console.log(text, record, index);\n                    this.setState({\n                      visible: true,\n                      seleceEmergencies: record,\n                    });\n                  }}\n                >\n                  Assign\n                </div>\n              ) : (\n                <>\n                  <img\n                    src={edit}\n                    alt=\"\"\n                    style={{ width: px(25) }}\n                    onClick={() => _edit(record.historyId, record)}\n                  />\n\n                  <img\n                    src={start}\n                    alt=\"\"\n                    style={{ width: px(25) }}\n                    onClick={() => see(record.historyId, record)}\n                  />\n                </>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        key: \"date\",\n        width: \"14%\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      {\n        title: \"Time\",\n        dataIndex: \"time\",\n        key: \"time\",\n        width: \"14%\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      {\n        title: `Temp(${units})`,\n        // title: `Temp(℉)`,\n        key: \"temp\",\n        dataIndex: \"temp\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        width: \"14%\",\n        render: (text, record, index) => {\n          // console.log(text, record);\n\n          /**\n           * bag：温度数值前的圆圈的背景颜色\n           * tem：展示的温度\n           * endvalue:将从后台得到的数据全部转化成华氏度\n           * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n           * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n           *\n           */\n\n          let bag = \"\",\n            tem = \"\";\n\n          let endValue =\n            text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10;\n          let min = 100.4,\n            max = 102.56;\n\n          if (endValue > max) {\n            bag = \"#E1206D\";\n          } else if (endValue < min) {\n            bag = \"#98DA86\";\n          } else {\n            bag = \"#58BDE6\";\n          }\n\n          if (units === \"℃\") {\n            if (text) {\n              tem = `${text}${units}`;\n              if (text > 55) {\n                tem = `${((text - 32) / 1.8).toFixed(1)}${units}`;\n              } else {\n                tem = `${text.toFixed(1)}${units}`;\n              }\n            }\n          } else {\n            if (text) {\n              if (text > 55) {\n                tem = `${text}${units}`;\n              } else {\n                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${units}`;\n              }\n            }\n          }\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {tem ? (\n                <div\n                  style={{\n                    width: \"8px\",\n                    height: \"8px\",\n                    borderRadius: \"8px\",\n                    backgroundColor: bag,\n                    marginRight: \"3px\",\n                  }}\n                />\n              ) : null}\n              <p style={{ margin: 0, padding: 0 }}>{tem}</p>\n            </div>\n          );\n        },\n      },\n      {\n        title: `Rectal Temperature`,\n        key: \"referenceRectalTemperature\",\n        dataIndex: \"referenceRectalTemperature\",\n        width: \"15%\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        render: (text, record, index) => {\n          // console.log('肛温的值：', text);\n          let num = text;\n          if (text !== null) {\n            num = (text * 1.8 + 32).toFixed(1);\n          }\n\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {text !== null && (\n                <p style={{ margin: 0, padding: 0 }}>\n                  {num} <span>{\"℉\"}</span>\n                </p>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        title: \"Placement\",\n        dataIndex: \"placement\",\n        key: \"placement\",\n        align: \"center\",\n        width: \"15%\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        render: (text, record, index) => {\n          switch (record.placement) {\n            case 1:\n              return (\n                //腋温\n                <div>\n                  <img src={palcement_ye} alt=\"\" />\n                </div>\n              );\n            case 3:\n              return (\n                //肛温\n                <div>\n                  <img src={placement_gang} alt=\"\" />\n                </div>\n              );\n            case 2:\n              return (\n                //肛温\n                <div>\n                  <img src={placement_gang} alt=\"\" />\n                </div>\n              );\n            case 4:\n              return (\n                //耳温\n                <div>\n                  <img src={placement_er} alt=\"\" />\n                </div>\n              );\n            default:\n              return null;\n          }\n        },\n      },\n      {\n        title: \"Note\",\n        dataIndex: \"note\",\n        key: \"note\",\n        width: \"12%\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        render: (text, record, index) => {\n          return <p style={{ width: \"100%\" }}>{text}</p>;\n        },\n      },\n    ];\n\n    let hisHe = mTop(200);\n    try {\n      let historyElement = document.querySelectorAll(\n        \"#clinicalMeasure11 .historyTable\"\n      );\n      hisHe = historyElement[0].clientHeight - mTop(100);\n    } catch (error) {}\n\n    return (\n      <div className=\"historyTable\" style={{ height: \"90%\" }}>\n        <Table\n          columns={columns}\n          loading={loading}\n          dataSource={historyData}\n          rowKey={(columns) => columns.historyId}\n          // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\n          pagination={false}\n          scroll={{\n            y: hisHe,\n          }}\n        />\n      </div>\n    );\n  };\n  const _editModal = () => {\n    function save() {\n      let datas = {\n        memo: memo,\n        bodyConditionScore: parseInt(editBodyConditionScore),\n        furLength: parseInt(editFurLength),\n        heartRate: editHeartRate,\n        bloodPressure: editBloodPressure,\n        respiratoryRate: editRespiratoryRate,\n      };\n      if (editRoomTemperature) {\n        datas.roomTemperature = (\n          (parseFloat(editRoomTemperature) - 32) /\n          1.8\n        ).toFixed(2);\n      }\n      if (editRectal) {\n        datas.referenceRectalTemperature = (\n          (parseFloat(editRectal) - 32) /\n          1.8\n        ).toFixed(2);\n      }\n\n      console.log(\"入参：\", datas, editId);\n      setEditVisible(false);\n      setTip(\"Data is being modified\");\n      setTipSpin(true);\n\n      fetchRequest(`/pet/updatePetExam/${editId}`, \"POST\", datas)\n        .then((res) => {\n          console.log(res);\n          setTipSpin(false);\n          setTip(\"\");\n          message.success(\"Data modified successfully\");\n\n          _getHistory11(petDetailInfo.petId);\n        })\n        .catch((err) => {\n          setTipSpin(false);\n          setTip(\"\");\n\n          message.success(\" Data modification failed\");\n\n          console.log(err);\n        });\n    }\n\n    let furLength = \"\";\n    if (editFurLength !== null && editFurLength !== undefined) {\n      switch (`${editFurLength}`) {\n        case \"1\":\n          furLength = \"smooth\";\n          break;\n        case \"2\":\n          furLength = \"short\";\n          break;\n        case \"3\":\n          furLength = \"medium\";\n          break;\n        case \"4\":\n          furLength = \"long\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return (\n      <Modal\n        title={\n          <div\n            style={{\n              width: \"100%\",\n              cursor: \"move\",\n              height: \"20px\",\n              textAlign: \"center\",\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                setDisabled(false);\n              }\n            }}\n            onMouseOut={() => {\n              setDisabled(true);\n            }}\n            onFocus={() => {}}\n            onBlur={() => {}}\n            // end\n          >\n            Modification history information\n          </div>\n        }\n        visible={editVisible}\n        // visible={true}\n        onCancel={() => {\n          setEditVisible(false);\n        }}\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div>{modal}</div>\n          </Draggable>\n        )}\n        footer={\n          [] // 设置footer为空，去掉 取消 确定默认按钮\n        }\n        destroyOnClose={true}\n      >\n        <div id=\"selectEmergenciesModal\">\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Room Temperature </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editRoomTemperature}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n\n                setEditRoomTemperature(str);\n              }}\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Rectal Temperature</p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editRectal}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setEditRectal(str);\n              }}\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Body Condition Score</p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editBodyConditionScore}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, \"\");\n\n                setEditBodyConditionScore(str);\n              }}\n            />\n          </div>\n\n          <div className=\"bodyType11\">\n            <p style={{ width: \"140px\" }}>Fur Length: </p>\n            <Select\n              placeholder\n              onChange={(index) => {\n                console.log(index);\n                setEditFurLength(index);\n              }}\n              style={{\n                borderRadius: \"40px\",\n                height: \"33px\",\n                outline: \"none\",\n                borderWidth: 0,\n              }}\n              value={furLength}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Heart Rate: </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editHeartRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, \"\");\n                setEditHeartRate(str);\n              }}\n            />\n            <span>bpm</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Blood Pressure </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editBloodPressure}\n              onChange={(item) => {\n                setEditBloodPressure(item.target.value);\n              }}\n            />\n            <span>mm</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Respiratory Rate: </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editRespiratoryRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, \"\");\n                setEditRespiratoryRate(str);\n              }}\n            />\n            <span>bpm</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"80px\" }}>Notes</p>\n            <textarea\n              rows=\"2\"\n              cols=\"40\"\n              style={{ textIndent: \"10px\" }}\n              value={memo}\n              onChange={(val) => {\n                setMemo(val.target.value);\n              }}\n            ></textarea>\n          </div>\n\n          <div className=\"btn\" onClick={save}>\n            Save\n          </div>\n        </div>\n      </Modal>\n    );\n  };\n  const _foot = () => {\n    let lbgc = \"\",\n      rbgc = \"\";\n    if (isPetCharacteristics) {\n      lbgc = \"rgba(25,173,228,0.5)\";\n      rbgc = \"rgba(105,201,237,1)\";\n    } else {\n      lbgc = \"rgba(105,201,237,1)\";\n      rbgc = \"rgba(25,173,228,0.5)\";\n    }\n    return (\n      <div className=\"clinical_foot\">\n        <div className=\"top\" style={{ height: px(40) }}>\n          <div\n            className=\"foot_l\"\n            style={{ backgroundColor: lbgc }}\n            onClick={() => setIsPetCharacteristics(true)}\n          >\n            Pet Characteristics\n          </div>\n          <div\n            className=\"foot_l\"\n            style={{ backgroundColor: rbgc }}\n            onClick={() => setIsPetCharacteristics(false)}\n          >\n            History\n          </div>\n        </div>\n        {isPetCharacteristics ? _petCharacteristics() : _history()}\n      </div>\n    );\n  };\n  //获取本地数据\n  const getLocalSetting = () => {\n    let settings = {\n      isHua: true,\n      is15: true,\n      self_tarting: false, //自启动\n      isBacklight: true,\n      isBeep: true,\n      backlightTimer: { length: 140, number: \"45\" },\n      autoOff: { length: 0, number: \"30\" },\n    };\n    electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\n  };\n\n  useEffect(() => {\n    if (petDetailInfo.petId) {\n      _getHistory11(petDetailInfo.petId);\n    } else if (petDetailInfo.isWalkIn) {\n      _getEmergencyHistory();\n    }\n    return () => {};\n  }, [petDetailInfo]);\n\n  useEffect(() => {\n    return () => {\n      saveHistoryTime && clearTimeout(saveHistoryTime);\n    };\n  }, []);\n\n  useEffect(() => {\n    //react监听屏幕窗口改变\n    window.addEventListener(\"resize\", resize);\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    // console.log('监听', mellaMeasureValue);\n    setTemp(mellaMeasureValue);\n    let { Eci, wen0, wen1 } = echarsData;\n    //两个数组合并成一个数组\n    let EciCopy = [...Eci];\n\n    let win0Copy = [...wen0];\n    let wen1Copy = [...wen1];\n    EciCopy.push(EciCopy.length + 1);\n    win0Copy.push(mellaMeasureValue);\n    wen1Copy.push(mellaMeasureValue);\n    let json = {\n      Eci: EciCopy,\n      wen0: win0Copy,\n      wen1: wen1Copy,\n    };\n\n    setEcharsData(json);\n\n    let Eci1 = echarsData1.Eci;\n    let wen01 = echarsData1.wen0;\n    let wen11 = echarsData1.wen1;\n    let EciCopy1 = [...Eci1];\n\n    let win0Copy1 = [...wen01];\n    let wen1Copy1 = [...wen11];\n    EciCopy1.push(EciCopy1.length + 1);\n    let num =\n      units === \"℃\"\n        ? mellaMeasureValue\n        : _.floor(mellaMeasureValue * 1.8 + 32, 2);\n    win0Copy1.push(num);\n    wen1Copy1.push(num);\n    let json1 = {\n      Eci: EciCopy1,\n      wen0: win0Copy1,\n      wen1: wen1Copy1,\n    };\n    setEcharsData1(json1);\n\n    // const option = getOption();\n    // echartsElement.current.getEchartsInstance().setOption(option);\n    return () => {};\n  }, [mellaMeasureNum]);\n\n  useEffect(() => {\n    // console.log(\n    //   \"=======监听mellaConnectStatus\",\n    //   mellaConnectStatus,\n    //   echarsData.Eci.length\n    // );\n    if (mellaConnectStatus === \"complete\" && echarsData.Eci.length > 10) {\n      addClinical();\n    }\n    if (mellaConnectStatus === \"isMeasuring\" && mellaStatus !== \"isMeasuring\") {\n      setEcharsData({\n        Eci: [],\n        wen0: [],\n        wen1: [],\n      });\n      setEcharsData1({\n        Eci: [],\n        wen0: [],\n        wen1: [],\n      });\n    }\n    if (mellaConnectStatus === \"isMeasuring\") {\n      setShowHistoryEchart(false);\n    }\n\n    setMellaStatus(mellaConnectStatus);\n    return () => {};\n  }, [mellaConnectStatus]);\n\n  useEffect(() => {\n    const option = getOption();\n    echartsElement.current.getEchartsInstance().setOption(option); // 实时改变\n    return () => {};\n  }, [echarsData]);\n\n  useEffect(() => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (!hardSet) {\n      getLocalSetting();\n    } else {\n      setUnits(hardSet.isHua ? \"℉\" : \"℃\");\n    }\n    return () => {};\n  }, []);\n\n  return (\n    <div\n      id=\"clinical\"\n      style={{\n        height: bodyHeight,\n        minWidth: px(200),\n        minHeight: bodyHeight,\n        overflow: \"hidden\",\n      }}\n      ref={clinicalRef}\n    >\n      <div className=\"clinicalTitle\">\n        <Layout>\n          <HeaderItem timeNum={60} />\n        </Layout>\n      </div>\n      <div\n        className=\"clinicalBody\"\n        style={{ width: \"100%\", height: bodyHeight - devicesTitleHeight }}\n      >\n        <div className=\"clinical_top\">\n          <div className=\"r\">\n            {/*顶部按钮Re-sync Base*/}\n            {mellaConnectStatus === \"disconnected\" && (\n              <div\n                className=\"bb1\"\n                // style={{ left: px(150) }}\n              >\n                <div\n                  className=\"btn78\"\n                  style={{ width: px(220), height: mTop(30), fontSize: px(16) }}\n                  onClick={() => {\n                    console.log(\"点击了切换按钮\");\n\n                    if (resyncDeviceIsClick === true) {\n                      resyncDeviceIsClick = false;\n                      console.log(\"发送给主进程切换按钮\");\n                      let ipcRenderer = window.electron.ipcRenderer;\n                      ipcRenderer.send(\"qiehuan\");\n                      const time = setTimeout(() => {\n                        resyncDeviceIsClick = true;\n                        clearTimeout(time);\n                      }, 2500);\n                    }\n                  }}\n                >\n                  Re-sync Base\n                </div>\n              </div>\n            )}\n            <div\n              id=\"myCharts\"\n              style={{ marginTop: mTop(50), width: windowWidth }}\n            >\n              <ReactECharts\n                option={getOption()}\n                theme=\"Imooc\"\n                style={{ height: mTop(380) }}\n                notMerge={true}\n                lazyUpdate={true}\n                // theme={\"theme_name\"}\n                ref={echartsElement}\n              />\n\n              {_status()}\n            </div>\n\n            {/* 底部宠物信息 */}\n            {_foot()}\n            {_editModal()}\n\n            {tipSpin && (\n              // true &&\n              <div className=\"modal\">\n                <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\n                  <LoadingOutlined\n                    style={{\n                      fontSize: 30,\n                      color: \"#fff\",\n                      marginTop: mTop(-30),\n                    }}\n                  />\n                </div>\n                <p>data is loading...</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nClinicalStudy.propTypes = {\n  bodyHeight: propTypes.number,\n};\nClinicalStudy.defaultProps = {\n  bodyHeight: 0,\n};\nexport default connect(\n  (state) => ({\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\n\n    petDetailInfo: state.petReduce.petDetailInfo,\n  }),\n  {}\n)(ClinicalStudy);\n",["289","290"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/Biggie.jsx",["291","292","293","294","295","296","297","298","299"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { px, mTop } from './../../utils/px'\nimport cir from './../../assets/images/cir.png'\nimport xia from './../../assets/img/xia.png'\n\n//import 'antd/dist/antd.css';\nimport './biggie.less'\n\n/**\n * \n * @param {string} weight   体重值\n * @param {string} bodyFat   体脂\n * @param {string} score   健康指数\n * @param {string} impedance   阻抗值\n * @param {boolean} issave   按钮文本，为true展示save，为false展示send to pms\n * @param {function} onPress   点击按钮调用的函数\n * \n * @returns \n */\n\nconst Biggie = ({ weight, bodyFat, score, impedance, issave, onPress, discardOnPress, isIbs, isHaveSaveBtn = true }) => {\n\n  // let { weight, bodyFat, score } = this.props\n\n  let lTColor = bodyFat !== null && bodyFat >= 0 ? '#87C563' : '#D8D9D9'\n  let rTColor = score !== null && score >= 0 ? '#87C563' : '#D8D9D9'\n  let lTtext = bodyFat !== null && bodyFat >= 0 ? `${bodyFat}%` : `Not Available`\n  let lTtextSize = bodyFat !== null && bodyFat >= 0 ? px(16) : px(15)\n  let rTtext = score !== null && score >= 0 ? `${score}` : `Not\\nAvailable`\n  let rTtextSize = score !== null && score >= 0 ? px(16) : px(15)\n\n  return (\n    <div className=\"biggie\" >\n      <div className=\"top\">\n\n        <div style={{ marginTop: px(150), height: px(160), borderRadius: px(150) }} className='biggiel'>\n          <div style={{ backgroundColor: lTColor, borderRadius: px(75), }} className='lT'>\n            <div className='lTText' style={{ fontSize: lTtextSize }}>{lTtext}</div>\n          </div>\n          <div style={{ fontSize: px(14) }}>{`Body Fat\\nPercent`}</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(5) }}\n          />\n        </div>\n\n\n        <div style={{ height: px(240), borderRadius: px(150), marginBottom: px(50) }} className='cen'>\n          <div style={{ borderRadius: px(75) }} className='lT'>\n            <img\n              src={cir}\n              width={'100%'}\n            />\n          </div>\n          <div className='cTText' style={{ top: px(45), fontSize: px(32), fontWeight: '800' }}>{weight}</div>\n          <div style={{ top: px(95), fontSize: px(25) }} className='cTText'>{`${isIbs ? 'lbs' : 'kgs'}`}</div>\n          <div className='cenCText' style={{ fontSize: px(24) }}>Weight</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(6) }}\n          />\n        </div>\n\n\n\n        <div style={{ marginTop: px(150), height: px(160), borderRadius: px(150) }} className='biggiel'>\n          <div style={{ backgroundColor: rTColor, borderRadius: px(75) }} className='lT'>\n            <div className='lTText' style={{ fontSize: rTtextSize }}>{rTtext}</div>\n          </div>\n          <div style={{ fontSize: px(14) }}>{`Body\\nCondition\\nScore`}</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(5) }}\n          />\n        </div>\n      </div>\n\n\n\n\n      <div className='biggiefoot' style={{ marginTop: px(10), }}>\n        {isHaveSaveBtn &&\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', width: '100%' }}>\n            <div\n              className='biggiefootbtn'\n              style={{ height: px(36), }}\n              onClick={() => {\n                discardOnPress()\n              }}\n            >\n              <div style={{ color: '#fff', fontSize: px(16) }}>{`Discard`}</div>\n            </div>\n\n\n            <div\n              className='biggiefootbtn'\n              style={{ height: px(36), }}\n              onClick={() => {\n                onPress()\n              }}\n            >\n              <div style={{ color: '#fff', fontSize: px(16) }}>{issave ? `Save` : `Send to PMS`}</div>\n            </div>\n\n\n          </div>\n        }\n\n\n        {(impedance && impedance > 0) ? <div style={{ color: '#000', fontSize: px(18), marginTop: mTop(10) }}>{`Impedance ${impedance} Ohms`}</div> : null}\n      </div>\n    </div>\n  )\n\n}\n\nBiggie.propTypes = {\n  weight: PropTypes.string || PropTypes.number,\n  bodyFat: PropTypes.number || PropTypes.string,\n  score: PropTypes.number || PropTypes.string,\n  impedance: PropTypes.number || PropTypes.string,\n  issave: PropTypes.bool,\n  onPress: PropTypes.func,\n  isIbs: PropTypes.bool\n}\nexport default Biggie","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/petTable/index.jsx",["300","301","302","303","304","305","306","307"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { ConfigProvider, Table } from 'antd';\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment'\n\nimport { mTop, px, MTop, pX } from '../../utils/px';\nimport './petTable.less'\nimport { petDetailInfoFun, setMenuNum, } from '../../store/actions';\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\n\n\n\n\n\nconst PetTable = ({ petListArr, loading, bodyHeight, petDetailInfoFun, setMenuNum, resetPetList, type }) => {\n    let history = useHistory()\n    const [heardSearchText, setHeardSearchText] = useState('')\n    //搜索后展示的宠物列表\n    const [searchData, setSearchData] = useState([])\n    const _search = (value) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\n        let keyWord = value || heardSearchText\n        /**\n         * 使用indexof方法实现模糊查询\n         *     语法：stringObject.indexOf(searchvalue, fromindex)\n         *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n         *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n         *  \n         * list         原数组\n         * keyWord      查询关键词\n         * searchData   查询的结果\n         * \n         * toLowerCase（）方法：将字符串统一转成小写\n         * toUpperCase（）方法：将字符串统一转成大写\n         * \n         */\n        let list = petListArr\n        let searchData = []\n        for (let i = 0; i < list.length; i++) {\n            let petName = list[i].petName.toLowerCase() || ''\n            let patientId = list[i].patientId.toLowerCase() || ''\n            let rfid = list[i].rfid || ''\n            if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n                || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n                || `${rfid}`.indexOf(keyWord) !== -1\n            ) {\n                searchData.push(list[i])\n            }\n        }\n        console.log(searchData);\n        setSearchData(searchData)\n\n\n\n\n\n    }\n\n    const columns = [\n        {\n            title: 'Time',\n            dataIndex: 'insertedAt',\n            key: 'insertedAt',\n            width: '16%',\n            // ...this.getColumnSearchProps('insertedAt'),\n            render: (text, record, index) => {\n                let chazhi = new Date().getTimezoneOffset()\n                // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\n                let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\n                let time = moment(parseInt(text) * 1000).format('hh:mm a');\n                let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\n                // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\n                return (\n                    <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\n                        <p>{`${year}`}</p>\n                        <p>{`${time}`}</p>\n                    </div>\n                )\n            },\n\n        },\n        {\n            title: 'Pet ID',\n            dataIndex: 'patientId',\n            key: 'patientId',\n            width: '15%',\n            // ...this.getColumnSearchProps('patientId'),\n        },\n        {\n            title: 'Pet Name',\n            dataIndex: 'petName',\n            key: 'petName',\n            width: '15%',\n            // ...this.getColumnSearchProps('petName'),\n        },\n        {\n            title: 'Owner',\n            dataIndex: 'owner',\n            key: 'owner',\n            width: '15%',\n            // ...this.getColumnSearchProps('owner'),\n        },\n        {\n            title: 'Breed',\n            dataIndex: 'breed',\n            key: 'breed',\n            width: '15%',\n            // ...this.getColumnSearchProps('breed'),\n            render: (text, record, index) => {\n                if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\n                    return (\n                        <p style={{ textAlign: 'center' }}>{'unknown'}</p>\n                    )\n                } else {\n                    return (\n                        <p style={{ textAlign: 'center' }}>{text}</p>\n                    )\n                }\n\n            }\n        },\n\n        {\n            title: 'Gender',\n            dataIndex: 'gender',\n            key: 'gender',\n            width: '12%',\n            // width: '30%',\n            // ...this.getColumnSearchProps('gender'),\n        },\n        {\n            title: 'Age',\n            dataIndex: 'age',\n            key: 'age',\n            width: '12%',\n            // width: '20%',\n            render: (text, record, index) => {\n                // console.log(text);\n\n                if (`${text}` === 'NaN') {\n                    return (\n                        <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\n                    )\n                } else {\n                    return (\n                        <p style={{ textAlign: 'center' }}>{text}</p>\n                    )\n                }\n\n            }\n        },\n\n\n    ];\n    const noData = () => {\n        return (\n            <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\n                <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\n                <a style={{ fontSize: px(22) }} href=\"#\"\n                    onClick={(e) => {\n                        console.log('我要去添加宠物');\n                        try {\n                            if (type === 'scheduled') {\n                                setMenuNum('AddScheduledPet')\n                            } else {\n                                setMenuNum('AddPet')\n                            }\n                        } catch (error) {\n                            console.log('错误信息', error);\n                        }\n                        e.preventDefault();\n\n                    }}\n\n                >{`go to add`}</a>\n            </div>\n        )\n    }\n    return (\n        <div className='petTable' >\n            <div className=\"pet_table_heard\" style={{ marginTop: px(40) }}>\n                <div className=\"search\" style={{ height: px(28) }}>\n                    <input\n                        type=\"text\"\n                        placeholder=\"&#xe61b;    search\"\n                        value={heardSearchText}\n                        onChange={(e) => {\n                            setHeardSearchText(e.target.value)\n                            _search(e.target.value)\n                        }\n                        }\n\n                    />\n                </div>\n\n                <div className=\"walkBtn1\" style={{ marginRight: px(28) }}>\n                    <div\n                        className=\"walkbtnBox\"\n                        style={{ height: px(28), width: px(80) }}\n                        onClick={_search}\n                    >\n                        <div className=\"walkText\">Search</div>\n                    </div>\n                </div>\n\n            </div>\n            <div className=\"heard2 flex\" style={{ marginTop: px(40), marginBottom: px(8), marginLeft: px(20) }}>\n\n                <div className=\"sort flex\" >\n                    <p style={{ fontSize: px(16), marginRight: px(10) }}>Sort By:</p>\n\n                    <SelectionBox\n                        listArr={[\n                            { key: 'time', value: 'Time' },\n                            { key: 'petid', value: 'Pet ID' },\n                            { key: 'owner', value: 'Owner' },\n                            { key: 'breed', value: 'Breed' },\n                            { key: 'petname', value: 'Pet Name' },\n                            { key: 'gender', value: 'Gender' },\n                        ]}\n                        clickItem={(item) => {\n                            let petList = [].concat(petListArr)\n                            switch (item.key) {\n                                case 'time':\n                                    petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n                                    break;\n                                case 'petid':\n                                    petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n                                    break;\n                                case 'owner':\n                                    petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n                                    break;\n                                case 'breed':\n                                    petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n                                    break;\n                                case 'petname':\n                                    petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n                                    break;\n                                case 'gender':\n                                    petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n                                    break;\n                            }\n                            resetPetList(petList)\n\n                        }}\n                    />\n                </div>\n\n\n\n            </div>\n            <div className=\"table\" >\n                <ConfigProvider renderEmpty={noData}>\n                    <Table\n                        style={{\n                            // border: ' #979797 1px solid',\n                            padding: 0,\n                            margin: 0,\n                            width: '95%',\n                            // height: px(500)\n                        }}\n                        rowKey={data => data.id}\n                        bordered={false}\n                        columns={columns}\n                        dataSource={(heardSearchText.length === 0) ? petListArr : searchData}\n                        loading={loading}\n                        locale={{ filterConfirm: <div>111</div> }}\n                        pagination={false}\n                        scroll={{\n                            y: px(480)\n                        }}\n                        onRow={(record) => {\n                            return {\n                                onClick: (event) => {\n                                    setMenuNum('1')\n                                    petDetailInfoFun(record)\n                                    console.log('record', record);\n                                }, // 点击行\n\n                            };\n                        }}\n                    />\n                </ConfigProvider>\n            </div>\n\n        </div >\n\n    )\n}\n\n\nPetTable.propTypes = {\n    petListArr: PropTypes.array,\n    resetPetList: PropTypes.func,\n}\n//默认值\nPetTable.defaultProps = {\n    bodyHeight: 0,\n    petListArr: [],\n    resetPetList: () => { },\n}\nexport default connect(\n    state => ({\n\n    }),\n    { petDetailInfoFun, setMenuNum, }\n)(PetTable)","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx",["308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Menu,\n    Popover,\n    Button,\n    Modal\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport pinyin from 'pinyin';\n\n\n//import 'antd/dist/antd.css';\nimport './phoneBook.less'\nimport { mTop, px, MTop } from '../px';\nimport electronStore from '../electronStore';\n\n\n/**\n * \n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns \n */\n\n\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\n\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\n\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\n\n    useEffect(() => {\n        if (confirmSelectBreed !== -1) {\n            setSelectBreed(confirmSelectBreed)\n        }\n    }, [confirmSelectBreed])\n\n\n    console.log('listsDate', phoneList)\n\n    useEffect(() => {\n        // console.log('listsDate', listDate)\n        console.log('进来了');\n        let test = []\n        listDate.map((item, index) => {\n            let data = {\n                name: item.breedName,\n                hidden: false,\n                petSpeciesBreedId: item.petSpeciesBreedId\n            }\n            test.push(data)\n        })\n        // 暂时静态数据替换\n        //获取联系人列表\n        console.log('11111111111', test)\n        let list = test;\n        let sections = [], letterArr = [];\n        // console.log('原始的数据:',list)\n\n        // 右侧字母栏数据处理\n        list.map((item, index) => {\n            letterArr.push(pinyin(item.name.substring(0, 1), {\n                style: pinyin.STYLE_FIRST_LETTER,\n            })[0][0].toUpperCase());\n\n            letterArr = [...new Set(letterArr)].sort();\n        });\n\n        // 分组数据处理\n        letterArr.map((item, index) => {\n            sections.push({\n                title: item,\n                data: []\n            })\n        });\n        list.map(item => {\n            let listItem = item;\n            sections.map(item => {\n                // console.log('}}}}}}}}}}}}}}',item)\n                let first = listItem.name.substring(0, 1);\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\n                if (item.title == test) {\n                    item.data.push({\n                        firstName: first,\n                        name: listItem.name,\n                        hidden: listItem.hidden,\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\n                    });\n                }\n            })\n        });\n\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\n        // console.log('-1----', sections, letterArr);\n        setPhoneList(sections)\n        setPhoneListCopy(sections)\n        setLetterList(letterArr)\n        setLetterListCopy(letterArr)\n    }, [])\n    useEffect(() => {\n        // if (searchText) {\n        console.log('搜索内容', searchText, letterListCopy);\n        if (letterListCopy.length > 0) {\n\n            let allData = phoneListCopy\n            let newArr = []\n            let arr = []\n            if (searchText.length > 0) {\n                allData.map((item, i) => {\n                    item.data.map((data, index) => {\n                        // console.log(index)\n                        let dataName = data.name ? data.name.toUpperCase() : ''\n                        let keyData = searchText ? searchText.toUpperCase() : ''\n                        if (dataName.search(keyData) !== -1) {\n                            newArr.push(data)\n                        }\n                    })\n                    // console.log('一组数据：', newArr)\n                    if (newArr.length != 0) {\n                        let oneGreep = {\n                            title: item.title,\n                            data: newArr\n                        }\n                        //   console.log('一11组数据：', oneGreep)\n                        arr.push(oneGreep)\n                    }\n\n                    newArr = []\n                })\n                //   console.log('--------------------------', arr)\n                let letterArr = []\n                arr.map((item, index) => {\n                    letterArr.push(item.title)\n                })\n                // newArr = []\n                // // console.log('---||-----',newArr)\n                setPhoneList(arr)\n                setLetterList(letterArr)\n            } else {\n\n                setPhoneList(phoneListCopy)\n                setLetterList(letterListCopy)\n            }\n        }\n\n\n    }, [searchText])\n\n\n\n    const _phoneList = () => {\n\n        let option = phoneList.map((item, index) => {\n            let data = item.data\n            let option1 = data.map((value, index1) => {\n                return (\n                    <li\n                        key={`option1${index1}`}\n                        onClick={() => {\n                            // console.log(value.petSpeciesBreedId);\n                            setSelectBreed(value.petSpeciesBreedId)\n                            selectFun(value)\n                        }}>\n                        {value.name}\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\n                    </li>\n                )\n            })\n\n            return (\n                <div className=\"phoneBody\">\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\n                    <ul>\n                        {option1}\n                    </ul>\n                </div>\n            )\n\n        })\n\n        return (\n            <ul>\n                {option}\n            </ul>\n        )\n    }\n    const _letterList = () => {\n\n        let option = letterList.map((item, index) => {\n\n\n            return (\n                <li\n                    key={`${index}`}\n\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\n                    <a\n\n                        onClick={() => {\n                            litterClick(item)\n                        }}\n                    >{item}</a>\n                </li>\n            )\n\n        })\n\n        return (\n            <ul className=\"letterUL\">\n                {option}\n            </ul>\n        )\n    }\n    const litterClick = (anchorName) => {\n        // console.log(anchorName);\n        if (anchorName) {\n            // 找到锚点\n            let anchorElement = document.getElementById(anchorName);\n            // console.log(anchorElement);\n            // 如果对应id的锚点存在，就跳转到锚点\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\n        }\n        // e.preventDefault();\n    }\n\n\n\n    return (\n        <div id=\"phoneBook\">\n            <div className=\"phone\">\n                {_phoneList()}\n            </div>\n            <div className=\"litter\">\n                {_letterList()}\n            </div>\n        </div >\n    )\n}\n\nPhoneBook.propTypes = {\n\n    listDate: PropTypes.array,\n    selectFun: PropTypes.func,\n    searchText: PropTypes.string,\n    confirmSelectBreed: PropTypes.number\n}\nPhoneBook.defaultProps = {\n    listDate: [],\n    selectFun: () => { },\n    searchText: '',\n    confirmSelectBreed: -1,\n}\n\nexport default PhoneBook","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/home/Home.jsx",["329","330"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Menu,\n  Popover,\n  Button,\n  Modal\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { SyncOutlined, createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\nimport { SearchOutlined } from '@ant-design/icons';\nimport moment from 'moment'\nimport MyModal from './../myModal/MyModal'\nimport { connect } from 'react-redux'\nimport { setMenuNum, setSelectHardwareType, petDetailInfoFun } from '../../store/actions';\n\n//import 'antd/dist/antd.css';\nimport './heard.less'\nimport help from './../../assets/images/help.png'\nimport message from './../../assets/images/message.png'\nimport triangle from './../../assets/img/triangle.png'\nimport { mTop, px, MTop } from '../px';\nimport electronStore from '../electronStore';\nimport dog from './../../assets/images/reddog.png'\nimport cat from './../../assets/images/redcat.png'\nimport other from './../../assets/images/redother.png'\nimport menu from './../../assets/img/menu.png'\nimport heardLeft from './../../assets/img/heardLeft.png'\nimport blueSearchPng from './../../assets/img/blueSearch.png'\nimport close from './../../assets/img/close.png'\nimport MinClose from '../../utils/minClose/MinClose';\nimport jinggao from './../../assets/img/jinggao.png'\nimport redclose from './../../assets/img/redclose.png'\n\nimport rMin_red from './../../assets/img/min-red.png'\nimport rClose_red from './../../assets/img/close-red.png'\n\nimport rMin_white from './../../assets/img/min-white.png'\nimport rClose_white from './../../assets/img/close-white.png'\nimport mellaLogo from './../../assets/images/mellaLogo.png'\nimport { version, updateTime } from './../appversion'\nimport { fetchRequest4 } from '../FetchUtil4';\nimport Button1 from '../button/Button';\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\n\nconst allPetList = electronStore.get('doctorExam')\nlet storage = window.localStorage\nlet ipcRenderer = window.electron.ipcRenderer\n\nlet mouseoutTimer = null\nlet matchingTimer = null\n\n/**\n * \n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns \n */\n\n\nconst Heard = ({\n  onReturn,\n  onSearch,\n  menu1Click,\n  menu2Click,\n  menu3Click,\n  menu4Click,\n  menu5Click,\n  menu6Click,\n  menu7Click,\n  menu8Click,\n  menu9Click,\n  blueSearch,\n  setMenuNum,\n  menuNum,\n  setSelectHardwareType,\n  petListArr,\n  petDetailInfoFun\n}) => {\n  const [minbgc, setMinbgc] = useState('')        //最小化的背景颜色\n  const [closebgc, setClosebgc] = useState('')    //关闭按钮的背景色\n  const [rMin, setRMin] = useState(rMin_red)      //最小化的图标\n  const [rClose, setRClose] = useState(rClose_red) //关闭按钮图标\n  const [value, setValue] = useState('')          //搜索框输入的内容\n  const [visible, setVisible] = useState(false)   //搜索框下面的搜索model\n  const [loading, setLoading] = useState(false)     //搜索宠物过程中的加载图标\n  const [petList, setPetList] = useState([])        //搜索到的宠物列表\n  const [menuVisible, setMenuVisible] = useState(false)//菜单图标下面的菜单内容图标\n  const [menuMouseOverIndex, setMenuMouseOverIndex] = useState('')//用来定位鼠标滑到哪个菜单选项\n\n\n  const [modalvisible, setModalVisible] = useState(false)       //关于的弹窗\n  const [modalVis, setModalVis] = useState(false)               //RFID搜索是否有宠物的弹窗\n  const [isNotFound, setIsNotFound] = useState(false)           //是否找到RFID对应的图标\n  const [deviceModel, setDeviceModel] = useState(false)         //我的设备弹窗\n\n  const [noUSB, setNoUSB] = useState(false)                 //没有底座设备\n  const [searchMac, setSearchMac] = useState(false)         //是否展示狗牌mac搜索图标下面的Modal框\n  const [bluDevice, setBluDevice] = useState([])            //搜索到的狗牌设备mac地址\n\n  const [isShowBlePetList, setIsShowBlePetList] = useState(false)  //是否展示狗牌对应宠物\n  const [isMatchPet, setIsMatchPet] = useState(false)      //正在匹配狗牌对应的宠物\n  const [macMatchPetList, setMacMatchPetList] = useState([])\n  const [updateStatus, setUpdateStatus] = useState('init')\n  const [lastVersion, setLastVersion] = useState(version)\n  const [downLoadNum, setDownLoadingNum] = useState(0)\n  const [selectDeviceMac, setSelectDeviceMac] = useState('')\n  const [clickType, setClickType] = useState(false);\n\n  //这里是为了模拟数据所做出来的,后期要改成接口\n  const testPetList = [\n\n    { macId: \"E0:7C:62:30:08:08\", petName: 'Mella', petId: \"b9de0868-9202-4fc9-9f1b-325220ceeccf\" },\n    { macId: \"E0:7C:62:03:75:32\", petName: 'Possum', petId: \"e4b11580-1277-4b10-bd64-46b097f6f882\" },\n    { macId: \"E0:7D:EA:A8:8D:7E\", petName: 'Charlie', petId: \"b4e7a185-1c7e-4885-ab95-4a7d2d2ada83\" },\n    { macId: \"E0:7C:62:32:76:8C\", petName: 'Noah', petId: \"01b34bf2-47e6-4036-884f-47299447cb6a\" },\n\n    { macId: \"84:C2:E4:03:C3:06\", petName: \"Whitey\", petId: \"f713a238-f5df-4c85-8c4f-5766b0770c07\" },\n  ]\n\n\n\n\n\n  useEffect(() => {\n    console.log('mac列表为空,初始化');\n    mouseoutTimer && clearTimeout(mouseoutTimer)\n    setBluDevice([])\n    return () => {\n      matchingTimer && clearTimeout(matchingTimer)\n    }\n  }, [])\n  useEffect(() => {\n    ipcRenderer.on('uploadMessage', uploadMessage)\n    return () => {\n      ipcRenderer.removeListener('uploadMessage', uploadMessage)\n    }\n  }, [])\n\n  const uploadMessage = (e, data) => {\n    switch (data.payload.status) {\n      case -1:\n        console.log('查询异常');\n        setUpdateStatus('error')\n        break;\n\n      case 0:\n        console.log('正在检查应用程序更新');\n        setUpdateStatus('check')\n        break;\n\n      case 2:\n        console.log('正在检查应用程序更新');\n        setUpdateStatus('lastVersion')\n        break;\n\n      case 1:\n        console.log('检测到新版本');\n        let version = data.output.version\n        setLastVersion(version)\n\n        setUpdateStatus('newVersion')\n        break;\n\n      case 3:\n        console.log('下载新版成功');\n      case 4:\n        console.log('取消背景下载');\n      case 5:\n        console.log('取消安装');\n        setUpdateStatus('init')\n        break;\n      case 6:\n        console.log('正在下载');\n        setUpdateStatus('downLoading')\n        let loadNum = data.output.percent ? (data.output.percent / 100).toFixed(1) : 0\n        setDownLoadingNum(loadNum)\n\n      default:\n        break;\n    }\n  }\n\n\n  useEffect(() => {\n    if (blueSearch) {\n      console.log('---渲染时执行----??????');\n      ipcRenderer.on('sned', _send)\n      ipcRenderer.on('noUSB', _noUSB)\n      return () => {\n        console.log('----卸载----?????????/');\n        ipcRenderer.removeListener('sned', _send)\n        ipcRenderer.removeListener('noUSB', _noUSB)\n      }\n    }\n\n  }, [])\n\n  const _noUSB = (e, data) => {\n    console.log('没有USB设备：', data);\n    if (data === false) {\n      setNoUSB(false)\n    } else {\n      if (!noUSB) {\n        setNoUSB(true)\n      }\n    }\n  }\n  const _send = (event, data) => {\n    command(data)()\n  }\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  const command = (newArr) => {\n    let dataArr1 = newArr.map(item => {\n      if (item.toString(16).length < 2) {\n        return '0' + item.toString(16)\n      } else {\n        return item.toString(16)\n      }\n    })\n    console.log(dataArr1);\n    const instruction = [255]\n    const commandArr = {\n\n      255: () => {\n        // console.log(dataArr1);\n        // console.log(bluDevice);\n        let length = newArr.length\n        let frameLength = newArr[1]   //帧长\n        let itemLength = newArr[3] + 1  //数据位的长度   13\n        let dataIndex = 0\n\n        let MAC = ''\n        let bluData = []\n        let UUID = ''\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\n          let itemData = []\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5])\n          }\n          // console.log('循环得到的数据', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              break;\n            case 255:\n              break;\n            case 3: break;\n            case 239:\n              // console.log('---mac地址');\n              let str = itemData[0]\n              for (let i = 1; i < itemData.length; i++) {\n                str += `:${itemData[i]}`\n              }\n              MAC = str.toUpperCase()\n\n              break;\n            case 7:\n              console.log('uuid');\n              let uuid = ''\n              for (let i = 0; i < itemData.length; i++) {\n                uuid += `${itemData[i]}`\n              }\n              UUID = uuid\n              break\n            default: return;\n          }\n          dataIndex = itemLength\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\n\n          // console.log(itemLength, itemLength < length && (itemLength + 3 <= frameLength));\n        }\n        console.log('----mac', MAC, '-----uuid', UUID);\n        if (UUID === 'd7895ab1acc74de3b9919e825c24c809') {\n          // console.log('uuid相等', bluDevice, bluDevice.indexOf(MAC) === -1,);\n          if (bluDevice.indexOf(MAC) === -1) {\n            let dataArr = [].concat(bluDevice)\n            dataArr.push(MAC)\n            setBluDevice(dataArr)\n          }\n\n        }\n      }\n\n\n\n\n    }\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]]\n    } else {\n      return () => {\n        console.log('没有控制命令', commandArr);\n      }\n    }\n  }\n\n  let history = useHistory();\n  //最小化，关闭的\n  const MINCOLOSE = {\n    minMouseEnter: () => {\n      setMinbgc('rgba(70, 70, 70, 0.5)')\n      setRMin(rMin_white)\n    },\n    minMouseLeave: () => {\n      setMinbgc('')\n      setRMin(rMin_red)\n    },\n    minClock: () => {\n      setMinbgc('')\n      setRMin(rMin_red)\n      let ipcRenderer = window.electron.ipcRenderer\n      ipcRenderer.send('window-min')\n\n    },\n    closeMouseEnter: () => {\n      setClosebgc('rgba(232,17,35)')\n      setRClose(rClose_white)\n    },\n    closeMouseLeave: () => {\n      setClosebgc('')\n      setRClose(rClose_red)\n    },\n    closeClock: () => {\n      let ipcRenderer = window.electron.ipcRenderer\n      ipcRenderer.send('window-close')\n    },\n  }\n\n  //搜索框内容\n  const searchPetBody = () => {\n\n\n    if (loading) {\n      //加载中\n      return (\n        <div className='searchPetLoading' style={{ padding: `${20}px 0` }}>\n          <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n            <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\n          </div>\n          <p style={{ color: '#e1206d', marginTop: px(5) }}>\n            loading...\n          </p>\n        </div>\n      )\n    } else {\n      // console.log('-----展示', petList.length);\n      if (petList.length > 0) {\n        //找到了宠物，展示出来\n\n        // let petList = electronStore.get('doctorExam')\n        // console.log(petList);\n\n        let option = petList.map((item, index) => {\n          let { speciesId, url } = item\n\n          let images = `url(${url}?download=0&width=150)`\n          if (!url) {\n            switch (speciesId) {\n              case 1: images = `url(${cat})`\n\n                break;\n              case 2: images = `url(${dog})`\n                break\n              default: images = `url(${other})`\n                break;\n            }\n          }\n          return (\n            <li\n              key={`${index}`}\n              style={{ margin: `${px(20)}px 0` }}\n              onClick={() => {\n                setValue('')\n                setVisible(false)\n                setPetList([])\n                petDetailInfoFun(item)\n                onSearch(item)\n              }}\n            >\n              <div className='item' style={{ paddingLeft: px(40) }}>\n                <div\n                  className='img'\n                  style={{\n                    width: px(50),\n                    height: px(50),\n                    marginRight: px(40),\n                    borderRadius: px(60),\n                    backgroundImage: images,\n                    // backgroundColor: 'hotpink',\n\n                  }}>\n                  {/* <img src={images} style={{ width: px(40) }} /> */}\n                </div>\n\n                <div className='petInfo'>\n                  <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.petName}</p>\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\n                </div>\n              </div>\n            </li >\n          )\n\n        })\n        let liStyle = { backgroundColor: '#fff', }\n        if (petList.length > 4) {\n          liStyle = { height: px(500), overflowY: 'auto' }\n        }\n\n\n        return (\n          <div className='searchPetList'>\n            <ul style={liStyle}>\n              {option}\n            </ul>\n          </div>\n        )\n      } else {\n        //没有发现这个宠物\n        return (\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\n\n            <p style={{ width: '80%', fontSize: px(18) }}>\n              Pet not found. Would you like\n              to add a new patient?\n            </p>\n\n            <div\n              className='searchPetBtn'\n              style={{ fontSize: px(18) }}\n              onClick={() => {\n                history.push('/pet/doctorAddPet')\n              }}\n            >\n              <p style={{ padding: `${px(8)}px 0` }}>+ New Patient</p>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n  }\n\n  const inputChange = (text) => {\n\n    function isNumber(val) {\n      var regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\n      var regNeg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\n      if (regPos.test(val) || regNeg.test(val)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    //去除前后空格\n    let search = text.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\")\n    setValue(search)\n    if (search.length > 0) {\n      setVisible(true)\n      setLoading(true)\n\n      //搜索分成两种，一种是通过手输入数据搜索，一种是通过RFID扫描过后搜索\n\n      if (search.length === 15 && isNumber(search)) {\n        //这是RFID扫描后的搜索\n        fetchRequest4(`/pet/getPetInfoByRFID/${search}/${storage.lastOrganization}`, 'GET')\n          .then(res => {\n            console.log('----RFID搜索结果', res);\n\n            if (res.flag === true && res.data) {\n              let { createTime, patientId, petName, firstName, lastName, url, speciesId, breedName, gender, birthday, petId, rfid, weight } = res.data\n              patientId = patientId || 'unknown'\n              petName = petName || 'unknown'\n              breedName = breedName || 'unknown'\n              weight = weight || 'unknown'\n              let owner = ''\n              if (!firstName) {\n                firstName = ''\n              }\n              if (!lastName) {\n                lastName = ''\n              }\n              if (lastName === '' && firstName === '') {\n                owner = 'unknown'\n              } else {\n                owner = `${lastName} ${firstName}`\n              }\n              createTime = moment(createTime).format('X')\n              let petGender = ''\n              switch (`${gender}`) {\n                case '1': petGender = 'F'\n\n                  break;\n                case '0': petGender = \"M\"\n                  break;\n                default: petGender = 'unknown'\n                  break;\n              }\n              let petAge = 'unknown'\n              if (birthday) {\n                petAge = moment(new Date()).diff(moment(birthday), 'years')\n                // console.log('petAge', petAge);\n              }\n              let json = {\n                insertedAt: createTime,\n                patientId,\n                petName,\n                owner,\n                breed: breedName,\n                gender: petGender,\n                age: petAge,\n                petId,\n                id: 0,\n                weight,\n                rfid,\n                url,\n                speciesId\n              }\n              let searchData = []\n              searchData.push(json)\n              setLoading(false)\n              setPetList(searchData)\n\n\n\n            } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\n              console.log('找到了但是不是在这个组织下');\n              setLoading(false)\n              setModalVis(true)\n              setIsNotFound(false)\n              setValue('')\n              setVisible(false)\n\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: false,\n              //   heardSearchText: ''\n              // })\n            } else {\n              console.log('没有找到');\n              setLoading(false)\n              setModalVis(true)\n              setIsNotFound(true)\n              setValue('')\n              setVisible(false)\n\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: true,\n              //   heardSearchText: ''\n              // })\n            }\n          })\n          .catch(err => {\n\n            console.log('抛出异常:', err);\n            setLoading(false)\n          })\n        return\n      }\n\n      /**\n       * 使用indexof方法实现模糊查询\n       *     语法：stringObject.indexOf(searchvalue, fromindex)\n       *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n       *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n       *  \n       * list         原数组\n       * keyWord      查询关键词\n       * searchData   查询的结果\n       * \n       * toLowerCase（）方法：将字符串统一转成小写\n       * toUpperCase（）方法：将字符串统一转成大写\n       * \n       */\n      // let list = allPetList \n      let list = petListArr || []\n\n      let searchData = []\n      let keyWord = search\n      for (let i = 0; i < list.length; i++) {\n        let petName = list[i].petName ? list[i].petName.toLowerCase() : ''\n        let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : ''\n        let rfid = list[i].rfid || ''\n        if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${rfid}`.indexOf(keyWord) !== -1\n        ) {\n          searchData.push(list[i])\n        }\n      }\n      // console.log('找到的宠物', searchData);\n      console.log('---搜索词：', search, '---搜索数组：', list, '----搜索结果：', searchData);\n      setLoading(false)\n      setPetList(searchData)\n\n    } else {\n      setVisible(false)\n    }\n\n\n\n  }\n\n  //左侧菜单栏\n  const menuList = () => {\n    let name = electronStore.get(`${storage.userId}-isClical`) ? 'Exit Clinical Study Mode' : 'Enter Clinical Study Mode'\n    let menulistArr = [\n      { name: 'Home', index: '1' },\n      { name: 'All Patients', index: '2' },\n      { name: 'Scheduled Patients', index: '3' },\n      { name: 'My Account', index: '4' },\n      { name: 'Settings', index: '5' },\n      { name: name, index: '6' },\n      { name: `Billing & Subscriptions`, index: '7' },\n      { name: 'About Mella', index: '8' },\n      { name: 'Log Out', index: '9' },\n\n    ]\n    let menuOption = menulistArr.map((item, index) => {\n\n      let pColor = menuMouseOverIndex === item.index ? '#e1206d' : '#1a1a1a'\n      return (\n        <li\n          key={item.index}\n          style={{ padding: `${px(15)}px ${px(20)}px` }}\n          onClick={() => {\n            menulistClick(item)\n\n          }}\n          onMouseOver={(e) => {\n            setMenuMouseOverIndex(item.index)\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOver()\n          }}\n          onMouseOut={(e) => {\n            setMenuMouseOverIndex('')\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOut()\n          }}\n        >\n          <div className='item'>\n            <p style={{ color: pColor }}>{item.name}</p>\n          </div>\n        </li >\n      )\n\n    })\n\n    return (\n      <ul>\n        {menuOption}\n      </ul>\n    )\n\n\n  }\n  const menulistClick = e => {\n    mouseoutTimer && clearTimeout(mouseoutTimer)\n    setMenuVisible(false)\n    setMenuMouseOverIndex('')\n    console.log('click ', e);\n\n    switch (e.index) {\n      case \"1\":\n        history.push('/MainBody')\n        setMenuNum(e.index)\n        break;\n      case \"2\":\n        history.push('/MainBody')\n        console.log('全部的宠物');\n        setMenuNum(e.index)\n        break;\n      case \"3\":\n        history.push('/MainBody')\n        console.log('预约宠物');\n        setMenuNum(e.index)\n        break;\n      case \"4\":\n        console.log('我的账号');\n        break;\n      case \"5\":\n        //跳转到设置\n        // menu5Click()\n        history.push('/menuOptions/settings');\n        // setMenuNum(e.index)\n        break;\n      case \"6\":\n        if (e.name === \"Exit Clinical Study Mode\") {\n          setMenuNum('1');\n          electronStore.set(`${storage.userId}-isClical`, false)\n        } else {\n          setMenuNum(e.index);\n          electronStore.set(`${storage.userId}-isClical`, true)\n          setSelectHardwareType(\"mellaPro\");\n        }\n        history.push('/MainBody')\n        console.log('临床测试');\n        break;\n      case \"7\":\n        console.log('billing');\n        break;\n\n      case \"8\":\n        setModalVisible(true)\n        console.log('关于');\n        break;\n      case \"9\":\n        console.log('退出登录');\n        storage.userId = ''\n        storage.roleId = ''\n        storage.userWorkplace = ''\n        storage.lastOrganization = ''\n        storage.lastWorkplaceId = ''\n        storage.connectionKey = ''\n        storage.isClinical = 'false'\n        setMenuNum('1')\n        history.push('/')\n        break;\n\n\n      default:\n        break;\n    }\n  }\n  const menuMouseOut = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer)\n    mouseoutTimer = setTimeout(() => {\n\n      setMenuVisible(false)\n      mouseoutTimer && clearTimeout(mouseoutTimer)\n    }, 1000);\n\n\n  }\n  const menuMouseOver = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer)\n    setMenuVisible(true)\n  }\n  const updatePage = () => {\n    switch (updateStatus) {\n      case 'init':\n        return (\n          <div className='updateBtn' style={{ height: px(40), }}\n            onClick={() => {\n              setDownLoadingNum(0)\n              setUpdateStatus('check')\n\n              ipcRenderer.send('clickUpdateBtn')\n            }}\n          >\n            Check for Updates\n          </div>\n        )\n      case 'check':\n        return (\n          <div className='updateLoading flex' >\n            <div className=\"loadIcon1\" >\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginRight: px(20) }} />\n            </div>\n            <p style={{ color: '#e1206d', }}>Checking for updates</p>\n          </div>\n        )\n      case 'lastVersion':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            already the latest version\n          </div>\n        )\n      case 'error':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            Failed to get the latest version, please try again later\n          </div>\n        )\n\n\n      case 'newVersion':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            {`Found new version V${lastVersion}`}\n\n          </div>\n        )\n      case 'downLoading':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            {`Download progress: ${downLoadNum}%`}\n\n          </div>\n        )\n\n      default:\n        break;\n    }\n\n\n\n\n  }\n  //关于界面\n  const modal = () => {\n    return (\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\n        <div className='writeBox' style={{ borderRadius: px(25) }} >\n          <div className='modalHeadr'>\n            <div className='close'>\n              <div className='imgBox'\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => {\n                  setModalVisible(false)\n                  setUpdateStatus('init')\n                }}\n              >\n                <img src={close} style={{ width: px(23), }} />\n              </div>\n\n            </div>\n            <div className='heaerCenter'>\n              <div className='heaerCenterL'>\n                <img src={mellaLogo} style={{ width: '80%' }} />\n\n              </div>\n              <div className='heaerCenterR'>\n                <h1 style={{ fontSize: px(45), marginBottom: px(10) }}>About the System</h1>\n                <div className='version'>\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Version</div>\n                  <div className='versionR' style={{ fontSize: px(24) }}>{version}</div>\n                </div>\n                <div className='version'>\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Last Checked</div>\n                  <div className='versionR' style={{ fontSize: px(24) }}>{updateTime}</div>\n                </div>\n\n                <div className='check' style={{ marginTop: px(20) }}>\n                  {updatePage()}\n\n\n\n\n\n\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n          <div className='modalfoot'>\n            <div className='about' style={{ marginTop: px(40), fontSize: px(18) }}>\n              Nanjing Jiubian Technology Co., Ltd. was founded in 2019, located in Nanjing Yuhuatai Software Valley Branch City, the company brings together medical sensors, mobile Internet and other industry's top professionals, business areas covering artificial intelligence, smart medical, pet health, sleep monitoring, etc., is a design, research and development, production, sales, service in one of the high-tech companies. The nine-sided science and technology to \"the number of heavens and earths, starting from one, finally nine\" as the cultural concept, adhering to the essence of Chinese artisans, with an international vision, always standing in the forefront of bio-intelligent medical monitoring technology.\n            </div>\n\n            <div className='aLable'>\n              <a href=\"#\"\n                style={{ fontSize: px(18), marginRight: px(50) }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >Terms and Agreements</a>\n              <a\n                href=\"#\"\n                style={{ fontSize: px(18), }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >Privacy Policy</a>\n            </div>\n\n            <div className='foot' style={{ marginBottom: px(40) }}>© 2021 Mella Pet Care All RIghts Reserved</div>\n\n          </div>\n\n        </div>\n\n      </div>\n    )\n  }\n\n  //设备列表界面\n  const devices = () => {\n\n    let userId = storage.userId\n    // electronStore.delete(`${userId}-deviceList`)\n    let deviceList = electronStore.get(`${userId}-deviceList`)\n    console.log('---', deviceList);\n    if (!deviceList) {\n      let str = `${getRamNumber()}`\n      for (let i = 0; i < 5; i++) {\n        str += `:${getRamNumber()}`\n      }\n      console.log('随机生成的mac地址:', str);\n      deviceList = [{ name: 'MellaPro', deviceType: 'mellaPro', macId: str }]\n      electronStore.set(`${userId}-deviceList`, deviceList)\n    }\n\n\n    function getRamNumber() {\n      var result = '';\n      for (var i = 0; i < 2; i++) {\n        result += Math.floor(Math.random() * 16).toString(16);//获取0-15并通过toString转16进制\n      }\n      //默认字母小写，手动转大写\n      return result.toLowerCase();//另toLowerCase()转小写\n    }\n\n\n    // deviceList = [\n    //   // { name: 'Add Device', deviceType: 'add', macId: '0' },\n    //   { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\n    //   { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:51:66' },\n    //   { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:35:66' },\n    //   { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:24:33:44:55:66' },\n    //   { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:25:66' },\n    //   { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:56:66' },\n    // ]\n\n    let options = deviceList.map((item, index) => {\n      return <li\n        className='flex'\n        key={`${index}`}\n        style={{ marginBottom: px(15), marginTop: px(5), }}\n        onClick={() => {\n          console.log(item.macId);\n          setSelectDeviceMac(item.macId)\n        }}\n      >\n        <div className='liLeft' style={{ fontSize: px(16) }}>{item.name}</div>\n        <div className='liCenter' style={{ fontSize: px(16) }}>{item.macId}</div>\n        <div className='liRight'>\n          <div className='circle flex' style={{ width: px(18), height: px(18) }}>\n            {selectDeviceMac === item.macId && <div className='redCircle' />}\n          </div>\n        </div>\n      </li>\n    })\n\n    return (\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\n        <div className='writeBox devices' style={{ borderRadius: px(25), width: px(400) }} >\n          <div className='deviceHeadr'>\n            <div className='close'>\n              <div className='imgBox'\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => setDeviceModel(false)}\n              >\n                <img src={close} style={{ width: px(23), }} />\n              </div>\n\n            </div>\n            <div className='logo flex'>\n              <img src={mellaLogo} style={{ width: px(60) }} />\n              <div style={{ fontSize: px(22), marginTop: px(30) }}>Devices</div>\n              <div className='bodyText' style={{ fontSize: px(18), marginTop: px(40) }}>Select the device you would<br />\n                like to use or add a new device.</div>\n            </div>\n\n          </div>\n\n          <div className='deviceCenter'>\n            <ul>\n              {options}\n            </ul>\n          </div>\n          <div className='deviceFooter flex' style={{ borderBottomLeftRadius: px(25), borderBottomRightRadius: px(25) }}>\n            <div className='btn' style={{ height: px(40) }}\n              onMouseDown={() => {\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\n                button[0].style.opacity = \"0.5\"\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\n                button[0].style.opacity = \"1\"\n              }}\n              onClick={() => {\n                setDeviceModel(false)\n                history.push('/menuOptions/AddDevice');\n\n              }}\n\n            >\n              <p className='btnText' style={{ fontSize: px(18) }}>New Device</p>\n            </div>\n            <div className='btn' style={{ height: px(40) }}\n\n              onMouseDown={() => {\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\n                button[1].style.opacity = \"0.5\"\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\n                button[1].style.opacity = \"1\"\n              }}\n              onClick={() => {\n                electronStore.set(`${storage.userId}-selectDevice`, selectDeviceMac)\n                setDeviceModel(false)\n              }}\n            >\n              <p className='btnText' style={{ fontSize: px(18) }}>Connect</p>\n            </div>\n          </div>\n\n\n        </div>\n\n      </div>\n    )\n  }\n\n  //点击蓝牙搜索图标\n  const blueClick = () => {\n    console.log('点击了蓝牙图标');\n    setIsShowBlePetList(false)\n    setSearchMac(true)\n\n\n  }\n  //点击取消链接\n  const cencleClick = (e) => {\n    console.log('mac列表为空,点击取消');\n    setBluDevice([])\n    setSearchMac(false)\n    setIsShowBlePetList(false)\n    setIsMatchPet(false)\n    setMacMatchPetList([])\n    if (e) {\n      e.preventDefault()\n    }\n    matchingTimer && clearTimeout(matchingTimer)\n\n\n  }\n  //搜索狗牌的蓝牙\n  const blusearchBody = () => {\n    console.log('搜索狗牌的蓝牙', searchMac, bluDevice);\n    if (isShowBlePetList) {\n      if (isMatchPet) {\n        return (\n          <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\n            <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\n            </div>\n            <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>matching...</p>\n\n            <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\n              onClick={cencleClick}\n            >Cencle</a>\n          </div>\n        )\n      } else {\n        if (macMatchPetList.length > 0) {\n\n          let option = macMatchPetList.map((item, index) => {\n            let { speciesId, url } = item\n\n            let images = `url(${url}?download=0&width=150)`\n            if (!url) {\n              switch (speciesId) {\n                case 1: images = `url(${cat})`\n                  break;\n                case 2: images = `url(${dog})`\n                  break\n                default: images = `url(${other})`\n                  break;\n              }\n            }\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  cencleClick()\n                  onSearch(item)\n                }}\n              >\n                <div className='item' style={{ paddingLeft: px(40) }}>\n                  <div\n                    className='img'\n                    style={{\n                      width: px(50),\n                      height: px(50),\n                      marginRight: px(40),\n                      borderRadius: px(60),\n                      backgroundImage: images,\n                    }}>\n                    {/* <img src={images} style={{ width: px(40) }} /> */}\n                  </div>\n\n                  <div className='petInfo'>\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20), textAlign: 'start' }}>{item.petName}</p>\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\n                  </div>\n                </div>\n              </li >\n            )\n\n          })\n          let liStyle = { backgroundColor: '#fff', }\n          if (petList.length > 4) {\n            liStyle = { height: px(500), overflowY: 'auto' }\n          }\n\n\n          return (\n            <div className='searchPetList flex' >\n              <ul style={liStyle}>\n                {option}\n              </ul>\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\n                onClick={cencleClick}\n              >Cencle</a>\n            </div>\n          )\n        }\n      }\n    } else {\n      if (noUSB) {\n        return (\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\n\n            <p style={{ width: '80%', fontSize: px(18) }}>\n              Please insert address and scan\n            </p>\n\n            <a href=\"#\" style={{ color: '#e1206d' }}\n              onClick={cencleClick}\n            >Cencle</a>\n          </div>\n        )\n      } else {\n        if (bluDevice.length > 0) {\n          let option = bluDevice.map((item, index) => {\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  console.log('mac列表为空,点击列表内容');\n                  setBluDevice([])\n                  // setSearchMac(false)\n                  setIsShowBlePetList(true)\n                  setIsMatchPet(true)\n                  matchingTimer && clearTimeout(matchingTimer)\n                  matchingTimer = setTimeout(() => {\n                    let haveFlog = false, index = -1\n                    for (let i = 0; i < testPetList.length; i++) {\n                      if (testPetList[i].macId === item) {\n                        haveFlog = true\n                        index = i\n                        break;\n                      }\n                    }\n                    if (haveFlog) {\n                      if (storage.lastOrganization === '1') {\n                        matchPet(testPetList[index].petId)\n                      } else {\n                        setModalVis(true)\n                        setIsNotFound(false)\n                        cencleClick()\n\n                      }\n                    } else {\n                      setModalVis(true)\n                      setIsNotFound(true)\n                      cencleClick()\n                    }\n\n\n                    setIsMatchPet(false)\n                    matchingTimer && clearTimeout(matchingTimer)\n                  }, 2000);\n\n\n                }}\n              >\n                <div className='item' style={{ paddingLeft: px(40) }}>\n                  <div className='petInfo'>\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>mac:{item}</p>\n                  </div>\n                </div>\n              </li >\n            )\n          })\n          let liStyle = { backgroundColor: '#fff', }\n          if (bluDevice.length > 4) {\n            liStyle = { height: px(500), overflowY: 'auto' }\n          }\n          return (\n            <div className='searchPetList' style={{ flexDirection: 'column' }}>\n              <ul style={liStyle}>\n                {option}\n              </ul>\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\n                onClick={cencleClick}\n              >Cencle</a>\n            </div>\n          )\n        } else {\n          return (\n            <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\n              <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n                <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\n              </div>\n              <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>\n                scanning...\n              </p>\n\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\n                onClick={cencleClick}\n              >Cencle</a>\n            </div>\n          )\n        }\n      }\n    }\n\n  }\n  const matchPet = (searchValue) => {\n    console.log('搜索词:', searchValue);\n    let list = electronStore.get('doctorExam')\n\n    let searchData = []\n    let keyWord = searchValue\n    for (let i = 0; i < list.length; i++) {\n\n      let petName = `${list[i].petId}`\n      if (keyWord === petName) {\n        searchData.push(list[i])\n      }\n    }\n\n\n    setIsMatchPet(false)\n\n    setMacMatchPetList(searchData)\n  }\n\n\n\n  return (\n    <div id=\"heard\"\n      style={{ height: px(50) }}\n    >\n      <div className='l'>\n        <div className='menuF' style={{ marginLeft: px(40), marginRight: px(40) }}>\n          <div className=\"menu\"\n            onMouseOver={menuMouseOver}\n            onMouseOut={menuMouseOut}>\n            <img src={menu} style={{ width: px(20), }} />\n            {\n              menuVisible\n                // true\n                ? <div\n                  className='manuBody'\n                  style={{ top: px(20), left: px(-40) }}\n                >\n                  <div className='triangle'\n                    style={{\n                      borderLeft: `${px(10)}px solid transparent`,\n                      borderRight: `${px(10)}px solid transparent`,\n                      borderBottom: `${px(13)}px solid #fff`,\n                      left: px(40)\n                    }} />\n\n                  <div className='manuBodyList' style={{ marginTop: px(13) }}>\n                    {menuList()}\n                  </div>\n                </div>\n                : null\n            }\n\n\n\n\n\n\n          </div>\n        </div>\n\n\n\n        <div className=\"search\" style={{ width: px(300) }}>\n\n          <input\n            placeholder=\"Search Pet    &#xe63f;\"\n            style={{ fontSize: px(16), paddingLeft: px(20) }}\n            value={value}\n            onChange={(text) => {\n              inputChange(text)\n            }}\n\n            onKeyUp={(e) => {\n              // console.log(e);\n              if (e.keyCode === 13) {\n                console.log('回车,去搜索');\n              }\n              if (e.keyCode === 27) {\n                console.log('清空');\n                setValue('')\n                setVisible(false)\n              }\n            }}\n\n          />\n          {\n            blueSearch ?\n              <div className=\"searchIconFa bluSearch\"\n              // style={{ cursor: 'pointer', backgroundColor: 'pink' }}\n              // onClick={blueClick}\n              >\n                <div onClick={blueClick} >\n                  {/* <img src={blueSearchPng} style={{ width: '50%' }} /> */}\n                  <span className=\" iconfont icon-sousuo searchIcon\"\n                    style={{ fontSize: px(25) }}\n                  />\n                </div>\n\n                {\n                  searchMac ?\n                    // true ?\n                    <div className='searchPet flex' style={{ width: px(400), }}>\n                      <div className='triangle'\n                        style={{\n                          borderLeft: `${px(20)}px solid transparent`,\n                          borderRight: `${px(20)}px solid transparent`,\n                          borderBottom: `${px(25)}px solid #fff`,\n                          // marginLeft: px(30),\n                          zIndex: 999,\n\n                        }} />\n\n                      <div className='searchPetBody' style={{ width: '100%' }} >\n                        {blusearchBody()}\n                      </div>\n                    </div>\n                    : null\n                }\n\n              </div>\n              : <div className=\"searchIconFa\">\n                <span className=\" iconfont icon-sousuo searchIcon\"\n                  style={{ fontSize: px(25) }}\n                />\n              </div>\n          }\n\n\n\n\n\n\n          {\n            visible ?\n              // true ?\n              <div className='searchPet' style={{ top: px(35), width: px(400), }}>\n                <div className='triangle'\n                  style={{\n                    borderLeft: `${px(20)}px solid transparent`,\n                    borderRight: `${px(20)}px solid transparent`,\n                    borderBottom: `${px(25)}px solid #fff`,\n                    marginLeft: px(30),\n                    zIndex: 999,\n\n                  }} />\n\n                <div className='searchPetBody' >\n                  {searchPetBody()}\n                </div>\n              </div>\n              : null\n          }\n\n\n\n\n\n        </div>\n      </div >\n\n\n      <div className=\"r\"\n      >\n\n\n        <div className='heardCenter'>\n          <div className=\"message\"\n            onClick={() => history.push('/menuOptions/unassigned')}\n          >\n            <img src={message} alt=\"\" style={{ height: px(25), width: px(25) }} />\n          </div>\n          <div className=\"help\"\n            style={{ margin: `0 ${px(25)}px` }}\n            onClick={() => history.push('/menuOptions/help')}\n          >\n            <img src={help} alt=\"\" style={{ height: px(25) }} />\n          </div>\n\n        </div>\n        <div className=\"min_close\" style={{ paddingRight: px(15) }}>\n          <div\n            className='min_icon'\n            onClick={MINCOLOSE.minClock}\n            style={{ backgroundColor: minbgc, height: px(50), width: px(50) }}\n            onMouseEnter={MINCOLOSE.minMouseEnter}\n            onMouseLeave={MINCOLOSE.minMouseLeave}\n          >\n            <img src={rMin} alt=\"\" style={{ width: px(20) }} />\n          </div>\n          <div\n            className='min_icon'\n            onClick={MINCOLOSE.closeClock}\n            style={{ backgroundColor: closebgc, height: px(50), width: px(50) }}\n            onMouseEnter={MINCOLOSE.closeMouseEnter}\n            onMouseLeave={MINCOLOSE.closeMouseLeave}\n          >\n            <img src={rClose} alt=\"\" style={{ width: px(20) }} />\n          </div>\n        </div>\n      </div>\n\n      {modalvisible && modal()}\n      {deviceModel && devices()}\n\n      <MyModal\n        // visible={true}\n        visible={modalVis}\n        element={\n          <div className='tip' style={{ width: px(420), height: px(480), borderRadius: px(20) }}>\n            <div className='close'\n              style={{ height: px(60) }}\n              onClick={() => setModalVis(false)}\n            >\n              <div className='flex' style={{ height: px(60), width: px(60), }}>\n                <img src={close} alt=\"\" style={{ width: px(20) }} />\n              </div>\n\n\n\n            </div>\n            <div className=\"text\">\n              <h1 style={{ fontSize: px(36), marginTop: px(30) }}> {isNotFound ? 'Pet not found!' : 'Pet found!'}</h1>\n\n            </div>\n            <div className='flex' style={{ margin: `${px(20)}px 0` }}>\n              {isNotFound ?\n                <img src={redclose} width=\"50px\" /> :\n                <img src={jinggao} width=\"50px\" />\n              }\n            </div>\n            <div className='textbody' style={{ marginTop: px(30), color: '#000' }}>\n              {isNotFound ? <p style={{ fontSize: px(22) }}> This pet is not on your database</p> :\n                <p style={{ fontSize: px(22) }}>Pet Identified but does not <br /> belong to your organization.</p>}\n            </div>\n\n\n\n            <div className='flex' style={{ marginTop: px(30), width: '100%', }}>\n\n              <div\n                className='btn flex'\n                style={{ height: px(40) }}\n                onClick={() => {\n                  setModalVis(false)\n                  cencleClick()\n                }}\n              >\n                <p>OK</p>\n              </div>\n            </div>\n          </div>\n        }\n      />\n\n    </div >\n  )\n}\n\nHeard.propTypes = {\n  onReturn: PropTypes.func,\n  onSearch: PropTypes.func,\n  menu1Click: PropTypes.func,\n  menu2Click: PropTypes.func,\n  menu3Click: PropTypes.func,\n  menu4Click: PropTypes.func,\n  menu5Click: PropTypes.func,\n  menu6Click: PropTypes.func,\n  menu7Click: PropTypes.func,\n  menu8Click: PropTypes.func,\n  menu9Click: PropTypes.func,\n  blueSearch: PropTypes.bool\n\n}\nHeard.defaultProps = {\n  onSearch: () => { },\n  onReturn: () => { },\n  menu1Click: () => { },\n  menu2Click: () => { },\n  menu3Click: () => { },\n  menu4Click: () => { },\n  menu5Click: () => { },\n  menu6Click: () => { },\n  menu7Click: () => { },\n  menu8Click: () => { },\n  menu9Click: () => { },\n  blueSearch: false,\n}\n\n\nexport default connect(\n  state => ({\n    menuNum: state.userReduce.menuNum,\n    petListArr: state.petReduce.petListArr,\n  }),\n  { setMenuNum, setSelectHardwareType, petDetailInfoFun }\n)(Heard)",["365","366"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/AddYuding.jsx",["367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382"],"////这是普通用户的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\nimport React, { Component } from 'react'\nimport {\n  Table,\n  Input,\n  Button,\n  Space,\n  message,\n  Menu,\n  Modal,\n  Select,\n  ConfigProvider\n\n} from 'antd';\nimport Draggable from \"react-draggable\";\nimport Button1 from '../../utils/button/Button'\nimport moment from 'moment'\n//import 'antd/dist/antd.css';\nimport Heard from '../../utils/heard/Heard'\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport MYButton from './../../utils/button/Button'\nimport './doctorSelectExam.less'\n\n\nimport { fetchRequest } from '../../utils/FetchUtil1'\nimport { MTop, mTop, pX, px, win } from '../../utils/px';\n\nimport dog from './../../assets/images/pinkdog.png'\nimport cat from './../../assets/images/pinkcat.png'\nimport redDog from './../../assets/images/reddog.png'\nimport redCat from './../../assets/images/redcat.png'\nimport redother from './../../assets/images/redother.png'\nimport other from './../../assets/images/other.png'\nimport redJinggao from './../../assets/img/redjinggao.png'\n\nimport MyModal from '../../utils/myModal/MyModal';\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\n\nlet storage = window.localStorage;\n\nlet defaultData = {\n  patientId: \"\",\n  wuzhong: 'dog',\n  petName: '',\n  miaoshu: ''\n}\n\n\nexport default class DoctorSelectExam extends Component {\n  state = {\n    addPetist: [],\n    petName: '',\n    wuzhong: 'dog',\n    patientId: '',\n    miaoshu: '',\n    loading: false,\n    isSave: false\n  }\n\n\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    // ipcRenderer.send('big')\n    message.destroy()\n\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n\n  }\n  componentWillUnmount() {\n    message.destroy()\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    this.setState({\n\n    })\n  }\n\n  selsectwuzhong = (val) => {\n    this.setState({\n      wuzhong: val\n    })\n  }\n  add = () => {\n    message.destroy()\n    let { patientId, petName, wuzhong, miaoshu, addPetist } = this.state\n    if (!patientId) {\n      message.error(`Please enter the pet's patientId`)\n      return\n    }\n    this.setState({\n      loading: true\n    })\n\n    let petSpeciesBreedId = 12001\n    switch (wuzhong) {\n      case 'dog': petSpeciesBreedId = 12001; break;\n      case 'cat': petSpeciesBreedId = 11001; break;\n      case 'other': petSpeciesBreedId = 13001; break;\n      default:\n        break;\n    }\n    let params = {\n      description: miaoshu,\n      doctorId: storage.userId,\n      patientId,\n      petName,\n      petSpeciesBreedId\n    }\n\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    console.log('入参', params);\n    fetchRequest('/new/petall/subscribe', \"POST\", params)\n      .then(res => {\n        console.log(res);\n        if (res.flag) {\n          let json = {\n            patientId,\n            wuzhong,\n            petName,\n            miaoshu\n          }\n          let list = [].concat(addPetist)\n          list.push(json)\n          this.setState({\n            loading: false,\n            patientId: '',\n            wuzhong: 'dog',\n            petName: '',\n            miaoshu: '',\n            addPetist: list\n          })\n        } else {\n          this.setState({\n            loading: false\n          })\n          message.error('add failed')\n        }\n      })\n      .catch(err => {\n        console.log('错误原因', err);\n        this.setState({\n          loading: false\n        })\n        message.error('add failed')\n      })\n\n  }\n  render() {\n    let addPetist = [].concat(this.state.addPetist)\n    addPetist.push(defaultData)\n\n    let options = addPetist.map((item, index) => {\n\n\n      if (index === addPetist.length - 1) {\n        let { patientId, wuzhong, petName, miaoshu } = this.state\n        return <li key={`${index}`} style={{ width: '100%', }}>\n          <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\n            <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\n              <input type=\"text\" className='tableInput'\n                value={patientId}\n                onChange={value => {\n                  this.setState({\n                    patientId: value.target.value\n                  })\n                }}\n              />\n            </div>\n            <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\n              <input type=\"text\" className='tableInput'\n                value={petName}\n                onChange={value => {\n                  this.setState({\n                    petName: value.target.value\n                  })\n                }}\n              />\n            </div>\n            <div className='tableHeard flex' style={{ flexDirection: 'row', paddingTop: px(5), paddingBottom: px(5), justifyContent: 'space-around', borderTopWidth: '0px' }} >\n              <div\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  this.selsectwuzhong('dog')\n                }}>\n                <img src={wuzhong === 'dog' ? redDog : dog} alt=\"\" width={px(40)} />\n              </div>\n              <div\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  this.selsectwuzhong('cat')\n                }}>\n                <img src={wuzhong === 'cat' ? redCat : cat} alt=\"\" width={px(40)} />\n              </div>\n\n              <div\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  this.selsectwuzhong('other')\n                }}>\n                <img src={wuzhong === 'other' ? redother : other} alt=\"\" width={px(40)} />\n              </div>\n\n\n\n            </div>\n            <div className='tableHeard' style={{ borderTopWidth: '0px', width: '30%' }}>\n              <input type=\"text\" className='tableInput'\n                value={miaoshu}\n                onChange={value => {\n                  this.setState({\n                    miaoshu: value.target.value\n                  })\n                }}\n\n              />\n            </div>\n            <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', borderTopWidth: '0px', width: '10%' }}>\n\n\n\n              <div\n                className='flex'\n                style={{ width: px(30), height: px(30), borderRadius: px(30), backgroundColor: '#e1206d', cursor: 'pointer' }}\n                onClick={this.add}\n\n              >\n\n                <MyIcon type={'icon-baocun-copy'} className=\"icon \" style={{ color: '#fff', fontSize: px(16) }} />\n              </div>\n\n\n\n\n\n\n\n            </div>\n\n          </div>\n        </li>\n      } else {\n        let { patientId, wuzhong, petName, miaoshu } = item\n        return <li key={`${index}`} style={{ width: '100%', }}>\n          <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\n            <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\n              <div className='tableText'>\n                {patientId}\n              </div>\n            </div>\n            <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\n              <div className='tableText'> {petName}</div>\n            </div>\n            <div className='tableHeard flex' style={{ flexDirection: 'row', paddingTop: px(5), paddingBottom: px(5), justifyContent: 'space-around', borderTopWidth: '0px' }} >\n              <img src={wuzhong === 'dog' ? redDog : dog} alt=\"\" width={px(40)} />\n              <img src={wuzhong === 'cat' ? redCat : cat} alt=\"\" width={px(40)} />\n              <img src={wuzhong === 'other' ? redother : other} alt=\"\" width={px(40)} />\n            </div>\n            <div className='tableHeard' style={{ borderTopWidth: '0px', width: '30%' }}>\n              <div className='tableText'>{miaoshu}</div>\n            </div>\n            <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', borderTopWidth: '0px', width: '10%' }}>\n\n            </div>\n          </div>\n\n\n        </li>\n      }\n\n\n    })\n\n\n\n\n\n\n    return (\n\n      <div id=\"doctorSelectExam\" onClick={(e) => {\n        console.log('隐藏');\n        this.setState({\n          showsortBy: false\n        })\n      }}>\n        {/* 关闭缩小 */}\n        <Heard\n          onReturn={() => {\n            let { patientId } = this.state\n            if (!patientId) {\n              this.props.history.goBack()\n            } else {\n              this.setState({\n                isSave: true\n              })\n            }\n\n          }}\n          onSearch={(data) => {\n\n            storage.doctorExam = JSON.stringify(data)\n\n            storage.doctorList = JSON.stringify(this.state.data)\n            if (storage.isClinical === 'true') {\n              this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\n            } else {\n              this.props.history.push({ pathname: '/page10', })\n            }\n          }}\n          blueSearch={true}\n        />\n        <div style={{ width: '100%', marginTop: px(80), height: px(650), overflowY: 'auto', paddingLeft: '5%', paddingRight: '5%' }}>\n          <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\n            <div className='tableHeard'>Patient Id</div>\n            <div className='tableHeard'>Pet Name</div>\n            <div className='tableHeard'>species</div>\n            <div className='tableHeard' style={{ width: '30%' }}>description</div>\n            <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', width: '10%' }}></div>\n\n          </div>\n\n          <ul >\n            {options}\n          </ul>\n\n\n        </div>\n\n\n\n        <div className='continueBox'>\n          <div className='continueBtn'\n            style={{ borderRadius: px(50), height: px(45), fontSize: px(20), }}\n            onClick={() => {\n              let { patientId } = this.state\n              if (!patientId) {\n                this.props.history.goBack()\n              } else {\n                this.setState({\n                  isSave: true\n                })\n              }\n            }}\n          >Continue</div>\n        </div>\n\n        <MyModal\n          visible={this.state.loading}\n        />\n        <MyModal\n          visible={this.state.isSave}\n          element={\n            <div className='isSave'\n            //  style={{ borderRadius: `${px(20)}px`, backgroundColor: '#fff' }}\n            >\n              <img src={redJinggao} alt=\"\" style={{ width: px(50), margin: `${px(25)}px 0` }} />\n              <p style={{ textAlign: 'center' }}>There are unsaved patient appointments, <br />are you sure you want to exit?</p>\n              <div className=\"btn\" style={{ margin: `${px(30)}px 0` }} >\n                <MYButton\n                  text={'Cancel'}\n                  onClick={() => {\n                    this.setState({\n                      isSave: false\n                    })\n                  }}\n                  textBoxStyle={{\n                    width: '40%',\n                    height: px(40)\n                  }}\n                />\n                <MYButton\n                  text={'Exit'}\n                  onClick={() => {\n                    this.setState({\n                      isSave: false\n                    })\n                    this.props.history.goBack()\n                  }}\n                  textBoxStyle={{\n                    width: '40%',\n                    height: px(40)\n                  }}\n                />\n              </div>\n            </div>\n          }\n        />\n\n\n\n\n\n\n\n\n\n\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/ishavePMS/IsHavePMS.jsx",["383","384","385"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/unassigned/Unassigned.jsx",["386","387","388","389","390","391","392","393","394"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/reducers/userReduce.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/areaCode/country.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/allPetsPage/index.jsx",["395","396","397","398","399","400","401","402","403","404","405","406"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/userAction.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/userType.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/measure/NorMalMeasurement.jsx",["407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/areaCode/imgArray.js",["434"],"export default {\n  ac: require('./countryFlag/flag_ac.png'),\n  ad: require('./countryFlag/flag_ad.png'),\n  ae: require('./countryFlag/flag_ae.png'),\n  af: require('./countryFlag/flag_af.png'),\n  ag: require('./countryFlag/flag_ag.png'),\n  ai: require('./countryFlag/flag_ai.png'),\n  al: require('./countryFlag/flag_al.png'),\n  am: require('./countryFlag/flag_am.png'),\n  an: require('./countryFlag/flag_an.png'),\n  ao: require('./countryFlag/flag_ao.png'),\n  aq: require('./countryFlag/flag_aq.png'),\n  ar: require('./countryFlag/flag_ar.png'),\n  as: require('./countryFlag/flag_as.png'),\n  at: require('./countryFlag/flag_at.png'),\n  au: require('./countryFlag/flag_au.png'),\n  aw: require('./countryFlag/flag_aw.png'),\n  ax: require('./countryFlag/flag_ax.png'),\n  az: require('./countryFlag/flag_az.png'),\n  ba: require('./countryFlag/flag_ba.png'),\n  bb: require('./countryFlag/flag_bb.png'),\n  bd: require('./countryFlag/flag_bd.png'),\n  be: require('./countryFlag/flag_be.png'),\n  bf: require('./countryFlag/flag_bf.png'),\n  bg: require('./countryFlag/flag_bg.png'),\n  bh: require('./countryFlag/flag_bh.png'),\n  bi: require('./countryFlag/flag_bi.png'),\n  bj: require('./countryFlag/flag_bj.png'),\n  bl: require('./countryFlag/flag_bl.png'),\n  bm: require('./countryFlag/flag_bm.png'),\n  bn: require('./countryFlag/flag_bn.png'),\n  bo: require('./countryFlag/flag_bo.png'),\n  bq: require('./countryFlag/flag_bq.png'),\n  br: require('./countryFlag/flag_br.png'),\n  bs: require('./countryFlag/flag_bs.png'),\n  bt: require('./countryFlag/flag_bt.png'),\n  bv: require('./countryFlag/flag_bv.png'),\n  bw: require('./countryFlag/flag_bw.png'),\n  by: require('./countryFlag/flag_by.png'),\n  bz: require('./countryFlag/flag_bz.png'),\n  ca: require('./countryFlag/flag_ca.png'),\n  cc: require('./countryFlag/flag_cc.png'),\n  cd: require('./countryFlag/flag_cd.png'),\n  cf: require('./countryFlag/flag_cf.png'),\n  cg: require('./countryFlag/flag_cg.png'),\n  ch: require('./countryFlag/flag_ch.png'),\n  ci: require('./countryFlag/flag_ci.png'),\n  ck: require('./countryFlag/flag_ck.png'),\n  cl: require('./countryFlag/flag_cl.png'),\n  cm: require('./countryFlag/flag_cm.png'),\n  cn: require('./countryFlag/flag_cn.png'),\n  co: require('./countryFlag/flag_co.png'),\n  cr: require('./countryFlag/flag_cr.png'),\n  cu: require('./countryFlag/flag_cu.png'),\n  cv: require('./countryFlag/flag_cv.png'),\n  cw: require('./countryFlag/flag_cw.png'),\n  cx: require('./countryFlag/flag_cx.png'),\n  cy: require('./countryFlag/flag_cy.png'),\n  cz: require('./countryFlag/flag_cz.png'),\n  de: require('./countryFlag/flag_de.png'),\n  dj: require('./countryFlag/flag_dj.png'),\n  dk: require('./countryFlag/flag_dk.png'),\n  dm: require('./countryFlag/flag_dm.png'),\n  do: require('./countryFlag/flag_do.png'),\n  dz: require('./countryFlag/flag_dz.png'),\n  ec: require('./countryFlag/flag_ec.png'),\n  ee: require('./countryFlag/flag_ee.png'),\n  eg: require('./countryFlag/flag_eg.png'),\n  eh: require('./countryFlag/flag_eh.png'),\n  er: require('./countryFlag/flag_er.png'),\n  es: require('./countryFlag/flag_es.png'),\n  et: require('./countryFlag/flag_et.png'),\n  fi: require('./countryFlag/flag_fi.png'),\n  fj: require('./countryFlag/flag_fj.png'),\n  fk: require('./countryFlag/flag_fk.png'),\n  fm: require('./countryFlag/flag_fm.png'),\n  fo: require('./countryFlag/flag_fo.png'),\n  fr: require('./countryFlag/flag_fr.png'),\n  fx: require('./countryFlag/flag_fx.png'),\n  ga: require('./countryFlag/flag_ga.png'),\n  gb: require('./countryFlag/flag_gb.png'),\n  gd: require('./countryFlag/flag_gd.png'),\n  ge: require('./countryFlag/flag_ge.png'),\n  gf: require('./countryFlag/flag_gf.png'),\n  gg: require('./countryFlag/flag_gg.png'),\n  gh: require('./countryFlag/flag_gh.png'),\n  gi: require('./countryFlag/flag_gi.png'),\n  gl: require('./countryFlag/flag_gl.png'),\n  gm: require('./countryFlag/flag_gm.png'),\n  gn: require('./countryFlag/flag_gn.png'),\n  gp: require('./countryFlag/flag_gp.png'),\n  gq: require('./countryFlag/flag_gq.png'),\n  gr: require('./countryFlag/flag_gr.png'),\n  gs: require('./countryFlag/flag_gs.png'),\n  gt: require('./countryFlag/flag_gt.png'),\n  gu: require('./countryFlag/flag_gu.png'),\n  gw: require('./countryFlag/flag_gw.png'),\n  gy: require('./countryFlag/flag_gy.png'),\n  hk: require('./countryFlag/flag_hk.png'),\n  hm: require('./countryFlag/flag_hm.png'),\n  hn: require('./countryFlag/flag_hn.png'),\n  hr: require('./countryFlag/flag_hr.png'),\n  ht: require('./countryFlag/flag_ht.png'),\n  hu: require('./countryFlag/flag_hu.png'),\n  id: require('./countryFlag/flag_id.png'),\n  ie: require('./countryFlag/flag_ie.png'),\n  il: require('./countryFlag/flag_il.png'),\n  im: require('./countryFlag/flag_im.png'),\n  in: require('./countryFlag/flag_in.png'),\n  io: require('./countryFlag/flag_io.png'),\n  iq: require('./countryFlag/flag_iq.png'),\n  ir: require('./countryFlag/flag_ir.png'),\n  is: require('./countryFlag/flag_is.png'),\n  it: require('./countryFlag/flag_it.png'),\n  je: require('./countryFlag/flag_je.png'),\n  jm: require('./countryFlag/flag_jm.png'),\n  jo: require('./countryFlag/flag_jo.png'),\n  jp: require('./countryFlag/flag_jp.png'),\n  ke: require('./countryFlag/flag_ke.png'),\n  kg: require('./countryFlag/flag_kg.png'),\n  kh: require('./countryFlag/flag_kh.png'),\n  ki: require('./countryFlag/flag_ki.png'),\n  km: require('./countryFlag/flag_km.png'),\n  kn: require('./countryFlag/flag_kn.png'),\n  kp: require('./countryFlag/flag_kp.png'),\n  kr: require('./countryFlag/flag_kr.png'),\n  kw: require('./countryFlag/flag_kw.png'),\n  ky: require('./countryFlag/flag_ky.png'),\n  kz: require('./countryFlag/flag_kz.png'),\n  la: require('./countryFlag/flag_la.png'),\n  lb: require('./countryFlag/flag_lb.png'),\n  lc: require('./countryFlag/flag_lc.png'),\n  li: require('./countryFlag/flag_li.png'),\n  lk: require('./countryFlag/flag_lk.png'),\n  lr: require('./countryFlag/flag_lr.png'),\n  ls: require('./countryFlag/flag_ls.png'),\n  lt: require('./countryFlag/flag_lt.png'),\n  lu: require('./countryFlag/flag_lu.png'),\n  lv: require('./countryFlag/flag_lv.png'),\n  ly: require('./countryFlag/flag_ly.png'),\n  ma: require('./countryFlag/flag_ma.png'),\n  mc: require('./countryFlag/flag_mc.png'),\n  md: require('./countryFlag/flag_md.png'),\n  me: require('./countryFlag/flag_me.png'),\n  mf: require('./countryFlag/flag_mf.png'),\n  mg: require('./countryFlag/flag_mg.png'),\n  mh: require('./countryFlag/flag_mh.png'),\n  mk: require('./countryFlag/flag_mk.png'),\n  ml: require('./countryFlag/flag_ml.png'),\n  mm: require('./countryFlag/flag_mm.png'),\n  mn: require('./countryFlag/flag_mn.png'),\n  mo: require('./countryFlag/flag_mo.png'),\n  mp: require('./countryFlag/flag_mp.png'),\n  mq: require('./countryFlag/flag_mq.png'),\n  mr: require('./countryFlag/flag_mr.png'),\n  ms: require('./countryFlag/flag_ms.png'),\n  mt: require('./countryFlag/flag_mt.png'),\n  mu: require('./countryFlag/flag_mu.png'),\n  mv: require('./countryFlag/flag_mv.png'),\n  mw: require('./countryFlag/flag_mw.png'),\n  mx: require('./countryFlag/flag_mx.png'),\n  my: require('./countryFlag/flag_my.png'),\n  mz: require('./countryFlag/flag_mz.png'),\n  na: require('./countryFlag/flag_na.png'),\n  nc: require('./countryFlag/flag_nc.png'),\n  ne: require('./countryFlag/flag_ne.png'),\n  nf: require('./countryFlag/flag_nf.png'),\n  ng: require('./countryFlag/flag_ng.png'),\n  ni: require('./countryFlag/flag_ni.png'),\n  nl: require('./countryFlag/flag_nl.png'),\n  no: require('./countryFlag/flag_no.png'),\n  np: require('./countryFlag/flag_np.png'),\n  nr: require('./countryFlag/flag_nr.png'),\n  nu: require('./countryFlag/flag_nu.png'),\n  nz: require('./countryFlag/flag_nz.png'),\n  om: require('./countryFlag/flag_om.png'),\n  pa: require('./countryFlag/flag_pa.png'),\n  pe: require('./countryFlag/flag_pe.png'),\n  pf: require('./countryFlag/flag_pf.png'),\n  pg: require('./countryFlag/flag_pg.png'),\n  ph: require('./countryFlag/flag_ph.png'),\n  pk: require('./countryFlag/flag_pk.png'),\n  pl: require('./countryFlag/flag_pl.png'),\n  pm: require('./countryFlag/flag_pm.png'),\n  pn: require('./countryFlag/flag_pn.png'),\n  pr: require('./countryFlag/flag_pr.png'),\n  ps: require('./countryFlag/flag_ps.png'),\n  pt: require('./countryFlag/flag_pt.png'),\n  pw: require('./countryFlag/flag_pw.png'),\n  py: require('./countryFlag/flag_py.png'),\n  qa: require('./countryFlag/flag_qa.png'),\n  re: require('./countryFlag/flag_re.png'),\n  ro: require('./countryFlag/flag_ro.png'),\n  rs: require('./countryFlag/flag_rs.png'),\n  ru: require('./countryFlag/flag_ru.png'),\n  rw: require('./countryFlag/flag_rw.png'),\n  sa: require('./countryFlag/flag_sa.png'),\n  sb: require('./countryFlag/flag_sb.png'),\n  sc: require('./countryFlag/flag_sc.png'),\n  sd: require('./countryFlag/flag_sd.png'),\n  se: require('./countryFlag/flag_se.png'),\n  sg: require('./countryFlag/flag_sg.png'),\n  sh: require('./countryFlag/flag_sh.png'),\n  si: require('./countryFlag/flag_si.png'),\n  sj: require('./countryFlag/flag_sj.png'),\n  sk: require('./countryFlag/flag_sk.png'),\n  sl: require('./countryFlag/flag_sl.png'),\n  sm: require('./countryFlag/flag_sm.png'),\n  sn: require('./countryFlag/flag_sn.png'),\n  so: require('./countryFlag/flag_so.png'),\n  sr: require('./countryFlag/flag_sr.png'),\n  ss: require('./countryFlag/flag_ss.png'),\n  st: require('./countryFlag/flag_st.png'),\n  sv: require('./countryFlag/flag_sv.png'),\n  sx: require('./countryFlag/flag_sx.png'),\n  sy: require('./countryFlag/flag_sy.png'),\n  sz: require('./countryFlag/flag_sz.png'),\n  tc: require('./countryFlag/flag_tc.png'),\n  td: require('./countryFlag/flag_td.png'),\n  tf: require('./countryFlag/flag_tf.png'),\n  tg: require('./countryFlag/flag_tg.png'),\n  th: require('./countryFlag/flag_th.png'),\n  tj: require('./countryFlag/flag_tj.png'),\n  tk: require('./countryFlag/flag_tk.png'),\n  tl: require('./countryFlag/flag_tl.png'),\n  tm: require('./countryFlag/flag_tm.png'),\n  tn: require('./countryFlag/flag_tn.png'),\n  to: require('./countryFlag/flag_to.png'),\n  tr: require('./countryFlag/flag_tr.png'),\n  tt: require('./countryFlag/flag_tt.png'),\n  tv: require('./countryFlag/flag_tv.png'),\n  tw: require('./countryFlag/flag_tw.png'),\n  tz: require('./countryFlag/flag_tz.png'),\n  ua: require('./countryFlag/flag_ua.png'),\n  ug: require('./countryFlag/flag_ug.png'),\n  um: require('./countryFlag/flag_um.png'),\n  us: require('./countryFlag/flag_us.png'),\n  uy: require('./countryFlag/flag_uy.png'),\n  uz: require('./countryFlag/flag_uz.png'),\n  va: require('./countryFlag/flag_va.png'),\n  vc: require('./countryFlag/flag_vc.png'),\n  ve: require('./countryFlag/flag_ve.png'),\n  vg: require('./countryFlag/flag_vg.png'),\n  vi: require('./countryFlag/flag_vi.png'),\n  vn: require('./countryFlag/flag_vn.png'),\n  vu: require('./countryFlag/flag_vu.png'),\n  wf: require('./countryFlag/flag_wf.png'),\n  ws: require('./countryFlag/flag_ws.png'),\n  xk: require('./countryFlag/flag_xk.png'),\n  ye: require('./countryFlag/flag_ye.png'),\n  yt: require('./countryFlag/flag_yt.png'),\n  yu: require('./countryFlag/flag_yu.png'),\n  za: require('./countryFlag/flag_za.png'),\n  zm: require('./countryFlag/flag_zm.png'),\n  zw: require('./countryFlag/flag_zw.png'),\n};\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/scanPet.jsx",["435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectExam/SelectExam.jsx",["461","462","463","464"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorAddPet/DoctorAddPet.jsx",["465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/NewOrganization.jsx",["490"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/temporaryStorage.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil.js",["491","492","493","494"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addScheduledPet/index.jsx",["495","496","497","498","499","500","501","502","503","504","505","506"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Input, Button, message, Spin, BackTop, } from 'antd';\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport { devicesTitleHeight } from '../../utils/InitDate'\nimport electronStore from '../../utils/electronStore';\nimport dog from './../../assets/images/pinkdog.png'\nimport cat from './../../assets/images/pinkcat.png'\nimport redDog from './../../assets/images/reddog.png'\nimport redCat from './../../assets/images/redcat.png'\nimport redother from './../../assets/images/redother.png'\nimport other from './../../assets/images/other.png'\nimport redJinggao from './../../assets/img/redjinggao.png'\n\nimport MyModal from '../../utils/myModal/MyModal';\nimport { mTop, px, MTop, pX } from '../../utils/px';\nimport './addScheduledPet.less'\nimport { setMenuNum } from '../../store/actions';\nimport { fetchRequest } from '../../utils/FetchUtil1';\nimport MYButton from './../../utils/button/Button'\n\nconst MyIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\n\nlet defaultData = {\n    patientId: \"\",\n    wuzhong: 'dog',\n    petName: '',\n    miaoshu: ''\n}\n\nlet storage = window.localStorage;\nconst AddScheduledPet = ({ bodyHeight, setMenuNum }) => {\n    const [addPetist1, setAddPetist] = useState([]);\n    const [petName, setPetName] = useState('');\n    const [wuzhong, setWuzhong] = useState('dog');\n    const [patientId, setPatientId] = useState('');\n    const [miaoshu, setMiaoshu] = useState('');\n    const [loading, setLoading] = useState(false);\n    const [isSave, setIsSave] = useState(false);\n\n    const selsectwuzhong = (val) => {\n        setWuzhong(val);\n\n    }\n    console.log('addPetist1', addPetist1);\n\n    const add = () => {\n        message.destroy()\n        if (!patientId) {\n            message.error(`Please enter the pet's patientId`)\n            return\n        }\n        setLoading(true)\n\n        let petSpeciesBreedId = 12001\n        switch (wuzhong) {\n            case 'dog': petSpeciesBreedId = 12001; break;\n            case 'cat': petSpeciesBreedId = 11001; break;\n            case 'other': petSpeciesBreedId = 13001; break;\n            default:\n                break;\n        }\n        let params = {\n            description: miaoshu,\n            doctorId: storage.userId,\n            patientId,\n            petName,\n            petSpeciesBreedId\n        }\n\n        if (storage.lastOrganization) {\n            params.organizationId = storage.lastOrganization\n        }\n        if (storage.lastWorkplaceId) {\n            params.workplaceId = storage.lastWorkplaceId\n        }\n        console.log('入参', params);\n        fetchRequest('/new/petall/subscribe', \"POST\", params)\n            .then(res => {\n                console.log(res);\n                if (res.flag) {\n                    let json = {\n                        patientId,\n                        wuzhong,\n                        petName,\n                        miaoshu\n                    }\n                    let list = [].concat(addPetist1)\n                    list.push(json)\n                    setAddPetist(list)\n                    setLoading(false)\n                    setPatientId('')\n                    setWuzhong('')\n                    setPetName('')\n                    setMiaoshu('')\n\n                } else {\n\n                    setLoading(false)\n                    message.error('add failed')\n                }\n            })\n            .catch(err => {\n                console.log('错误原因', err);\n                setLoading(false)\n                message.error('add failed')\n            })\n\n    }\n    const body = () => {\n        let addPetist = [].concat(addPetist1)\n        addPetist.push(defaultData)\n        console.log('新的:', addPetist);\n\n        let options = addPetist.map((item, index) => {\n\n\n            if (index === addPetist.length - 1) {\n                return <li key={`${index}`} style={{ width: '100%', }}>\n                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\n                            <input type=\"text\" className='tableInput'\n                                value={patientId}\n                                onChange={value => {\n                                    setPatientId(value.target.value)\n\n                                }}\n                            />\n                        </div>\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\n                            <input type=\"text\" className='tableInput'\n                                value={petName}\n                                onChange={value => {\n\n                                    setPetName(value.target.value)\n                                }}\n                            />\n                        </div>\n                        <div className='tableHeard flex' style={{ flexDirection: 'row', paddingTop: px(5), paddingBottom: px(5), justifyContent: 'space-around', borderTopWidth: '0px' }} >\n                            <div\n                                style={{ cursor: 'pointer' }}\n                                onClick={() => {\n                                    selsectwuzhong('dog')\n                                }}>\n                                <img src={wuzhong === 'dog' ? redDog : dog} alt=\"\" width={px(40)} />\n                            </div>\n                            <div\n                                style={{ cursor: 'pointer' }}\n                                onClick={() => {\n                                    selsectwuzhong('cat')\n                                }}>\n                                <img src={wuzhong === 'cat' ? redCat : cat} alt=\"\" width={px(40)} />\n                            </div>\n\n                            <div\n                                style={{ cursor: 'pointer' }}\n                                onClick={() => {\n                                    selsectwuzhong('other')\n                                }}>\n                                <img src={wuzhong === 'other' ? redother : other} alt=\"\" width={px(40)} />\n                            </div>\n\n\n\n                        </div>\n                        <div className='tableHeard' style={{ borderTopWidth: '0px', width: '30%' }}>\n                            <input type=\"text\" className='tableInput'\n                                value={miaoshu}\n                                onChange={value => {\n\n                                    setMiaoshu(value.target.value)\n                                }}\n\n                            />\n                        </div>\n                        <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', borderTopWidth: '0px', width: '10%' }}>\n                            <div\n                                className='flex'\n                                style={{ width: px(30), height: px(30), borderRadius: px(30), backgroundColor: '#e1206d', cursor: 'pointer' }}\n                                onClick={add}\n\n                            >\n\n                                <MyIcon type={'icon-baocun-copy'} className=\"icon \" style={{ color: '#fff', fontSize: px(16) }} />\n                            </div>\n\n\n\n\n\n\n\n                        </div>\n\n                    </div>\n                </li>\n            } else {\n                let { patientId, wuzhong, petName, miaoshu } = item\n                return <li key={`${index}`} style={{ width: '100%', }}>\n                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\n                            <div className='tableText'>\n                                {patientId}\n                            </div>\n                        </div>\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\n                            <div className='tableText'> {petName}</div>\n                        </div>\n                        <div className='tableHeard flex' style={{ flexDirection: 'row', paddingTop: px(5), paddingBottom: px(5), justifyContent: 'space-around', borderTopWidth: '0px' }} >\n                            <img src={wuzhong === 'dog' ? redDog : dog} alt=\"\" width={px(40)} />\n                            <img src={wuzhong === 'cat' ? redCat : cat} alt=\"\" width={px(40)} />\n                            <img src={wuzhong === 'other' ? redother : other} alt=\"\" width={px(40)} />\n                        </div>\n                        <div className='tableHeard' style={{ borderTopWidth: '0px', width: '30%' }}>\n                            <div className='tableText'>{miaoshu}</div>\n                        </div>\n                        <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', borderTopWidth: '0px', width: '10%' }}>\n\n                        </div>\n                    </div>\n\n\n                </li>\n            }\n\n\n        })\n\n        return (\n            <div style={{ width: '100%', marginTop: px(30), height: px(500), overflowY: 'auto', paddingLeft: '5%', paddingRight: '5%', }}>\n                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\n                    <div className='tableHeard'>Patient Id</div>\n                    <div className='tableHeard'>Pet Name</div>\n                    <div className='tableHeard'>species</div>\n                    <div className='tableHeard' style={{ width: '30%' }}>description</div>\n                    <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', width: '10%' }}></div>\n\n                </div>\n                <ul >\n                    {options}\n                </ul>\n            </div>\n        )\n    }\n    return (\n        <div className='addScjediled' style={{ height: bodyHeight }}>\n            <div className=\"addDeviceTitle\" style={{ height: devicesTitleHeight, fontSize: 26, paddingLeft: px(20) }}>Create New Scheduled </div>\n            <div className='addSBody' style={{ width: '100%', height: bodyHeight - devicesTitleHeight, }}>\n                {body()}\n\n\n                <div className='continueBox'>\n                    <div className='continueBtn'\n                        style={{ borderRadius: px(50), height: px(45), fontSize: px(20), }}\n                        onClick={() => {\n\n                            if (!patientId) {\n                                setMenuNum('3')\n                            } else {\n                                setIsSave(true)\n                            }\n                        }}\n                    >Continue</div>\n                </div>\n\n            </div>\n\n            <MyModal\n                visible={loading}\n            />\n            <MyModal\n                visible={isSave}\n                element={\n                    <div className='isSave'\n                    //  style={{ borderRadius: `${px(20)}px`, backgroundColor: '#fff' }}\n                    >\n                        <img src={redJinggao} alt=\"\" style={{ width: px(50), margin: `${px(25)}px 0` }} />\n                        <p style={{ textAlign: 'center' }}>There are unsaved patient appointments, <br />are you sure you want to exit?</p>\n                        <div className=\"btn\" style={{ margin: `${px(30)}px 0` }} >\n                            <MYButton\n                                text={'Cancel'}\n                                onClick={() => {\n                                    setIsSave(false)\n\n                                }}\n                                textBoxStyle={{\n                                    width: '40%',\n                                    height: px(40)\n                                }}\n                            />\n                            <MYButton\n                                text={'Exit'}\n                                onClick={() => {\n                                    setIsSave(false)\n                                    setMenuNum('3')\n                                }}\n                                textBoxStyle={{\n                                    width: '40%',\n                                    height: px(40)\n                                }}\n                            />\n                        </div>\n                    </div>\n                }\n            />\n\n\n\n\n\n\n\n        </div >\n\n    )\n}\n\n\nAddScheduledPet.propTypes = {\n\n}\n//默认值\nAddScheduledPet.defaultProps = {\n\n}\nexport default connect(\n    state => ({\n\n    }),\n    { setMenuNum }\n)(AddScheduledPet)","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/historyTable/index.jsx",["507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/index.jsx",["529","530","531","532","533","534","535"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/PetsUI.jsx",["536","537","538"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/index.jsx",["539","540","541","542","543"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/appversion.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectScheduledExam.jsx",["544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/px.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/myModal/MyModal.jsx",["572","573"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/headerItem.jsx",["574","575","576","577","578","579","580","581","582","583"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/petAction.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/signIn/resetPassword/ResetPassword.jsx",["584","585","586"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/admin_VetProfile/Veterinarians.jsx",["587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/index.js",[],{"ruleId":"603","severity":1,"message":"604","line":2,"column":10,"nodeType":"605","messageId":"606","endLine":2,"endColumn":15},{"ruleId":"603","severity":1,"message":"607","line":15,"column":10,"nodeType":"605","messageId":"606","endLine":15,"endColumn":12},{"ruleId":"603","severity":1,"message":"608","line":28,"column":8,"nodeType":"605","messageId":"606","endLine":28,"endColumn":14},{"ruleId":"603","severity":1,"message":"609","line":31,"column":18,"nodeType":"605","messageId":"606","endLine":31,"endColumn":24},{"ruleId":"610","severity":1,"message":"611","line":75,"column":6,"nodeType":"612","endLine":75,"endColumn":21,"suggestions":"613"},{"ruleId":"614","severity":1,"message":"615","line":108,"column":15,"nodeType":"616","endLine":108,"endColumn":74},{"ruleId":"614","severity":1,"message":"615","line":124,"column":19,"nodeType":"616","endLine":124,"endColumn":43},{"ruleId":"614","severity":1,"message":"615","line":141,"column":27,"nodeType":"616","endLine":147,"endColumn":29},{"ruleId":"617","replacedBy":"618"},{"ruleId":"619","replacedBy":"620"},{"ruleId":"617","replacedBy":"621"},{"ruleId":"619","replacedBy":"622"},{"ruleId":"603","severity":1,"message":"623","line":2,"column":60,"nodeType":"605","messageId":"606","endLine":2,"endColumn":64},{"ruleId":"603","severity":1,"message":"624","line":3,"column":8,"nodeType":"605","messageId":"606","endLine":3,"endColumn":17},{"ruleId":"603","severity":1,"message":"625","line":6,"column":32,"nodeType":"605","messageId":"606","endLine":6,"endColumn":44},{"ruleId":"603","severity":1,"message":"626","line":6,"column":46,"nodeType":"605","messageId":"606","endLine":6,"endColumn":61},{"ruleId":"603","severity":1,"message":"627","line":31,"column":9,"nodeType":"605","messageId":"606","endLine":31,"endColumn":16},{"ruleId":"603","severity":1,"message":"628","line":38,"column":5,"nodeType":"605","messageId":"606","endLine":38,"endColumn":8},{"ruleId":"603","severity":1,"message":"629","line":118,"column":29,"nodeType":"605","messageId":"606","endLine":118,"endColumn":36},{"ruleId":"603","severity":1,"message":"630","line":118,"column":38,"nodeType":"605","messageId":"606","endLine":118,"endColumn":46},{"ruleId":"603","severity":1,"message":"631","line":118,"column":48,"nodeType":"605","messageId":"606","endLine":118,"endColumn":57},{"ruleId":"603","severity":1,"message":"632","line":118,"column":59,"nodeType":"605","messageId":"606","endLine":118,"endColumn":68},{"ruleId":"633","severity":1,"message":"634","line":161,"column":5,"nodeType":"635","messageId":"636","endLine":167,"endColumn":6},{"ruleId":"637","severity":1,"message":"638","line":174,"column":41,"nodeType":"639","messageId":"640","endLine":174,"endColumn":43},{"ruleId":"641","severity":1,"message":"642","line":318,"column":34,"nodeType":"643","messageId":"644","endLine":318,"endColumn":48},{"ruleId":"641","severity":1,"message":"642","line":369,"column":29,"nodeType":"643","messageId":"644","endLine":369,"endColumn":42},{"ruleId":"603","severity":1,"message":"645","line":457,"column":11,"nodeType":"605","messageId":"606","endLine":457,"endColumn":21},{"ruleId":"603","severity":1,"message":"646","line":590,"column":11,"nodeType":"605","messageId":"606","endLine":590,"endColumn":24},{"ruleId":"614","severity":1,"message":"615","line":786,"column":15,"nodeType":"616","endLine":786,"endColumn":63},{"ruleId":"603","severity":1,"message":"647","line":850,"column":5,"nodeType":"605","messageId":"606","endLine":850,"endColumn":12},{"ruleId":"603","severity":1,"message":"632","line":851,"column":11,"nodeType":"605","messageId":"606","endLine":851,"endColumn":20},{"ruleId":"614","severity":1,"message":"615","line":886,"column":15,"nodeType":"616","endLine":886,"endColumn":63},{"ruleId":"633","severity":1,"message":"634","line":917,"column":5,"nodeType":"635","messageId":"636","endLine":920,"endColumn":6},{"ruleId":"633","severity":1,"message":"634","line":922,"column":5,"nodeType":"635","messageId":"636","endLine":925,"endColumn":6},{"ruleId":"603","severity":1,"message":"648","line":1059,"column":61,"nodeType":"605","messageId":"606","endLine":1059,"endColumn":78},{"ruleId":"603","severity":1,"message":"649","line":1059,"column":80,"nodeType":"605","messageId":"606","endLine":1059,"endColumn":85},{"ruleId":"603","severity":1,"message":"632","line":1059,"column":118,"nodeType":"605","messageId":"606","endLine":1059,"endColumn":127},{"ruleId":"603","severity":1,"message":"624","line":9,"column":8,"nodeType":"605","messageId":"606","endLine":9,"endColumn":17},{"ruleId":"603","severity":1,"message":"650","line":10,"column":10,"nodeType":"605","messageId":"606","endLine":10,"endColumn":30},{"ruleId":"603","severity":1,"message":"651","line":10,"column":32,"nodeType":"605","messageId":"606","endLine":10,"endColumn":47},{"ruleId":"603","severity":1,"message":"652","line":14,"column":8,"nodeType":"605","messageId":"606","endLine":14,"endColumn":16},{"ruleId":"603","severity":1,"message":"653","line":19,"column":10,"nodeType":"605","messageId":"606","endLine":19,"endColumn":14},{"ruleId":"633","severity":1,"message":"634","line":85,"column":25,"nodeType":"635","messageId":"636","endLine":114,"endColumn":26},{"ruleId":"654","severity":1,"message":"655","line":103,"column":29,"nodeType":"656","messageId":"657","endLine":104,"endColumn":68},{"ruleId":"654","severity":1,"message":"655","line":105,"column":29,"nodeType":"656","messageId":"657","endLine":112,"endColumn":39},{"ruleId":"603","severity":1,"message":"658","line":290,"column":49,"nodeType":"605","messageId":"606","endLine":290,"endColumn":63},{"ruleId":"603","severity":1,"message":"659","line":290,"column":65,"nodeType":"605","messageId":"606","endLine":290,"endColumn":79},{"ruleId":"603","severity":1,"message":"660","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":15},{"ruleId":"603","severity":1,"message":"661","line":4,"column":17,"nodeType":"605","messageId":"606","endLine":4,"endColumn":23},{"ruleId":"603","severity":1,"message":"623","line":4,"column":34,"nodeType":"605","messageId":"606","endLine":4,"endColumn":38},{"ruleId":"603","severity":1,"message":"662","line":4,"column":40,"nodeType":"605","messageId":"606","endLine":4,"endColumn":47},{"ruleId":"603","severity":1,"message":"650","line":5,"column":10,"nodeType":"605","messageId":"606","endLine":5,"endColumn":30},{"ruleId":"603","severity":1,"message":"625","line":5,"column":32,"nodeType":"605","messageId":"606","endLine":5,"endColumn":44},{"ruleId":"603","severity":1,"message":"663","line":9,"column":8,"nodeType":"605","messageId":"606","endLine":9,"endColumn":18},{"ruleId":"603","severity":1,"message":"664","line":18,"column":8,"nodeType":"605","messageId":"606","endLine":18,"endColumn":16},{"ruleId":"603","severity":1,"message":"665","line":19,"column":8,"nodeType":"605","messageId":"606","endLine":19,"endColumn":16},{"ruleId":"603","severity":1,"message":"666","line":20,"column":8,"nodeType":"605","messageId":"606","endLine":20,"endColumn":18},{"ruleId":"603","severity":1,"message":"667","line":21,"column":8,"nodeType":"605","messageId":"606","endLine":21,"endColumn":16},{"ruleId":"603","severity":1,"message":"668","line":23,"column":8,"nodeType":"605","messageId":"606","endLine":23,"endColumn":15},{"ruleId":"603","severity":1,"message":"669","line":24,"column":26,"nodeType":"605","messageId":"606","endLine":24,"endColumn":28},{"ruleId":"610","severity":1,"message":"670","line":60,"column":8,"nodeType":"612","endLine":60,"endColumn":10,"suggestions":"671"},{"ruleId":"610","severity":1,"message":"672","line":102,"column":8,"nodeType":"612","endLine":102,"endColumn":38,"suggestions":"673"},{"ruleId":"603","severity":1,"message":"674","line":7,"column":3,"nodeType":"605","messageId":"606","endLine":7,"endColumn":7},{"ruleId":"603","severity":1,"message":"675","line":11,"column":3,"nodeType":"605","messageId":"606","endLine":11,"endColumn":10},{"ruleId":"603","severity":1,"message":"623","line":13,"column":3,"nodeType":"605","messageId":"606","endLine":13,"endColumn":7},{"ruleId":"603","severity":1,"message":"650","line":19,"column":3,"nodeType":"605","messageId":"606","endLine":19,"endColumn":23},{"ruleId":"603","severity":1,"message":"625","line":20,"column":3,"nodeType":"605","messageId":"606","endLine":20,"endColumn":15},{"ruleId":"603","severity":1,"message":"668","line":27,"column":8,"nodeType":"605","messageId":"606","endLine":27,"endColumn":15},{"ruleId":"603","severity":1,"message":"676","line":31,"column":8,"nodeType":"605","messageId":"606","endLine":31,"endColumn":10},{"ruleId":"603","severity":1,"message":"677","line":32,"column":8,"nodeType":"605","messageId":"606","endLine":32,"endColumn":10},{"ruleId":"603","severity":1,"message":"678","line":33,"column":8,"nodeType":"605","messageId":"606","endLine":33,"endColumn":12},{"ruleId":"603","severity":1,"message":"679","line":34,"column":8,"nodeType":"605","messageId":"606","endLine":34,"endColumn":11},{"ruleId":"603","severity":1,"message":"680","line":35,"column":8,"nodeType":"605","messageId":"606","endLine":35,"endColumn":11},{"ruleId":"603","severity":1,"message":"681","line":36,"column":8,"nodeType":"605","messageId":"606","endLine":36,"endColumn":13},{"ruleId":"603","severity":1,"message":"682","line":40,"column":8,"nodeType":"605","messageId":"606","endLine":40,"endColumn":18},{"ruleId":"603","severity":1,"message":"683","line":44,"column":8,"nodeType":"605","messageId":"606","endLine":44,"endColumn":13},{"ruleId":"603","severity":1,"message":"684","line":54,"column":7,"nodeType":"605","messageId":"606","endLine":54,"endColumn":24},{"ruleId":"603","severity":1,"message":"685","line":88,"column":17,"nodeType":"605","messageId":"606","endLine":88,"endColumn":25},{"ruleId":"603","severity":1,"message":"686","line":100,"column":10,"nodeType":"605","messageId":"606","endLine":100,"endColumn":18},{"ruleId":"603","severity":1,"message":"687","line":104,"column":10,"nodeType":"605","messageId":"606","endLine":104,"endColumn":13},{"ruleId":"603","severity":1,"message":"688","line":107,"column":18,"nodeType":"605","messageId":"606","endLine":107,"endColumn":27},{"ruleId":"603","severity":1,"message":"689","line":127,"column":11,"nodeType":"605","messageId":"606","endLine":127,"endColumn":14},{"ruleId":"603","severity":1,"message":"690","line":440,"column":22,"nodeType":"605","messageId":"606","endLine":440,"endColumn":26},{"ruleId":"691","severity":1,"message":"692","line":694,"column":34,"nodeType":"693","messageId":"694","endLine":694,"endColumn":35,"suggestions":"695"},{"ruleId":"691","severity":1,"message":"696","line":699,"column":31,"nodeType":"693","messageId":"694","endLine":699,"endColumn":32,"suggestions":"697"},{"ruleId":"691","severity":1,"message":"692","line":734,"column":34,"nodeType":"693","messageId":"694","endLine":734,"endColumn":35,"suggestions":"698"},{"ruleId":"691","severity":1,"message":"696","line":739,"column":31,"nodeType":"693","messageId":"694","endLine":739,"endColumn":32,"suggestions":"699"},{"ruleId":"691","severity":1,"message":"692","line":774,"column":34,"nodeType":"693","messageId":"694","endLine":774,"endColumn":35,"suggestions":"700"},{"ruleId":"691","severity":1,"message":"696","line":779,"column":31,"nodeType":"693","messageId":"694","endLine":779,"endColumn":32,"suggestions":"701"},{"ruleId":"691","severity":1,"message":"692","line":822,"column":34,"nodeType":"693","messageId":"694","endLine":822,"endColumn":35,"suggestions":"702"},{"ruleId":"691","severity":1,"message":"696","line":827,"column":31,"nodeType":"693","messageId":"694","endLine":827,"endColumn":32,"suggestions":"703"},{"ruleId":"691","severity":1,"message":"692","line":861,"column":34,"nodeType":"693","messageId":"694","endLine":861,"endColumn":35,"suggestions":"704"},{"ruleId":"691","severity":1,"message":"696","line":866,"column":31,"nodeType":"693","messageId":"694","endLine":866,"endColumn":32,"suggestions":"705"},{"ruleId":"691","severity":1,"message":"692","line":902,"column":34,"nodeType":"693","messageId":"694","endLine":902,"endColumn":35,"suggestions":"706"},{"ruleId":"691","severity":1,"message":"696","line":907,"column":31,"nodeType":"693","messageId":"694","endLine":907,"endColumn":32,"suggestions":"707"},{"ruleId":"691","severity":1,"message":"692","line":1448,"column":34,"nodeType":"693","messageId":"694","endLine":1448,"endColumn":35,"suggestions":"708"},{"ruleId":"691","severity":1,"message":"696","line":1453,"column":31,"nodeType":"693","messageId":"694","endLine":1453,"endColumn":32,"suggestions":"709"},{"ruleId":"691","severity":1,"message":"692","line":1469,"column":34,"nodeType":"693","messageId":"694","endLine":1469,"endColumn":35,"suggestions":"710"},{"ruleId":"691","severity":1,"message":"696","line":1474,"column":31,"nodeType":"693","messageId":"694","endLine":1474,"endColumn":32,"suggestions":"711"},{"ruleId":"610","severity":1,"message":"712","line":1692,"column":6,"nodeType":"612","endLine":1692,"endColumn":23,"suggestions":"713"},{"ruleId":"610","severity":1,"message":"714","line":1721,"column":6,"nodeType":"612","endLine":1721,"endColumn":26,"suggestions":"715"},{"ruleId":"610","severity":1,"message":"716","line":1727,"column":6,"nodeType":"612","endLine":1727,"endColumn":18,"suggestions":"717"},{"ruleId":"617","replacedBy":"718"},{"ruleId":"619","replacedBy":"719"},{"ruleId":"603","severity":1,"message":"720","line":1,"column":17,"nodeType":"605","messageId":"606","endLine":1,"endColumn":25},{"ruleId":"603","severity":1,"message":"721","line":1,"column":27,"nodeType":"605","messageId":"606","endLine":1,"endColumn":36},{"ruleId":"603","severity":1,"message":"625","line":3,"column":10,"nodeType":"605","messageId":"606","endLine":3,"endColumn":22},{"ruleId":"603","severity":1,"message":"650","line":3,"column":24,"nodeType":"605","messageId":"606","endLine":3,"endColumn":44},{"ruleId":"603","severity":1,"message":"722","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":24},{"ruleId":"614","severity":1,"message":"615","line":44,"column":11,"nodeType":"616","endLine":47,"endColumn":13},{"ruleId":"614","severity":1,"message":"615","line":53,"column":13,"nodeType":"616","endLine":56,"endColumn":15},{"ruleId":"614","severity":1,"message":"615","line":61,"column":11,"nodeType":"616","endLine":64,"endColumn":13},{"ruleId":"614","severity":1,"message":"615","line":74,"column":11,"nodeType":"616","endLine":77,"endColumn":13},{"ruleId":"603","severity":1,"message":"721","line":1,"column":27,"nodeType":"605","messageId":"606","endLine":1,"endColumn":36},{"ruleId":"603","severity":1,"message":"653","line":8,"column":10,"nodeType":"605","messageId":"606","endLine":8,"endColumn":14},{"ruleId":"603","severity":1,"message":"723","line":8,"column":20,"nodeType":"605","messageId":"606","endLine":8,"endColumn":24},{"ruleId":"603","severity":1,"message":"724","line":18,"column":9,"nodeType":"605","messageId":"606","endLine":18,"endColumn":16},{"ruleId":"603","severity":1,"message":"725","line":68,"column":21,"nodeType":"605","messageId":"606","endLine":68,"endColumn":27},{"ruleId":"603","severity":1,"message":"726","line":72,"column":21,"nodeType":"605","messageId":"606","endLine":72,"endColumn":28},{"ruleId":"727","severity":1,"message":"728","line":160,"column":17,"nodeType":"616","endLine":176,"endColumn":18},{"ruleId":"633","severity":1,"message":"634","line":224,"column":29,"nodeType":"635","messageId":"636","endLine":243,"endColumn":30},{"ruleId":"603","severity":1,"message":"729","line":2,"column":10,"nodeType":"605","messageId":"606","endLine":2,"endColumn":20},{"ruleId":"603","severity":1,"message":"674","line":4,"column":5,"nodeType":"605","messageId":"606","endLine":4,"endColumn":9},{"ruleId":"603","severity":1,"message":"730","line":5,"column":5,"nodeType":"605","messageId":"606","endLine":5,"endColumn":12},{"ruleId":"603","severity":1,"message":"661","line":6,"column":5,"nodeType":"605","messageId":"606","endLine":6,"endColumn":11},{"ruleId":"603","severity":1,"message":"731","line":7,"column":5,"nodeType":"605","messageId":"606","endLine":7,"endColumn":10},{"ruleId":"603","severity":1,"message":"653","line":15,"column":10,"nodeType":"605","messageId":"606","endLine":15,"endColumn":14},{"ruleId":"603","severity":1,"message":"723","line":15,"column":20,"nodeType":"605","messageId":"606","endLine":15,"endColumn":24},{"ruleId":"603","severity":1,"message":"732","line":16,"column":8,"nodeType":"605","messageId":"606","endLine":16,"endColumn":21},{"ruleId":"637","severity":1,"message":"638","line":49,"column":36,"nodeType":"639","messageId":"640","endLine":49,"endColumn":38},{"ruleId":"637","severity":1,"message":"638","line":65,"column":32,"nodeType":"639","messageId":"640","endLine":65,"endColumn":34},{"ruleId":"637","severity":1,"message":"638","line":74,"column":37,"nodeType":"639","messageId":"640","endLine":74,"endColumn":39},{"ruleId":"637","severity":1,"message":"638","line":80,"column":23,"nodeType":"639","messageId":"640","endLine":80,"endColumn":25},{"ruleId":"637","severity":1,"message":"638","line":82,"column":31,"nodeType":"639","messageId":"640","endLine":82,"endColumn":33},{"ruleId":"733","severity":1,"message":"734","line":86,"column":32,"nodeType":"643","messageId":"735","endLine":86,"endColumn":34},{"ruleId":"610","severity":1,"message":"736","line":104,"column":8,"nodeType":"612","endLine":104,"endColumn":10,"suggestions":"737"},{"ruleId":"637","severity":1,"message":"638","line":114,"column":39,"nodeType":"639","messageId":"640","endLine":114,"endColumn":41},{"ruleId":"637","severity":1,"message":"638","line":115,"column":49,"nodeType":"639","messageId":"640","endLine":115,"endColumn":51},{"ruleId":"733","severity":1,"message":"738","line":124,"column":39,"nodeType":"643","messageId":"735","endLine":124,"endColumn":41},{"ruleId":"637","severity":1,"message":"638","line":137,"column":39,"nodeType":"639","messageId":"640","endLine":137,"endColumn":41},{"ruleId":"610","severity":1,"message":"739","line":152,"column":8,"nodeType":"612","endLine":152,"endColumn":20,"suggestions":"740"},{"ruleId":"727","severity":1,"message":"741","line":202,"column":21,"nodeType":"616","endLine":207,"endColumn":22},{"ruleId":"603","severity":1,"message":"732","line":13,"column":8,"nodeType":"605","messageId":"606","endLine":13,"endColumn":21},{"ruleId":"603","severity":1,"message":"742","line":14,"column":8,"nodeType":"605","messageId":"606","endLine":14,"endColumn":20},{"ruleId":"603","severity":1,"message":"730","line":5,"column":3,"nodeType":"605","messageId":"606","endLine":5,"endColumn":10},{"ruleId":"603","severity":1,"message":"661","line":6,"column":3,"nodeType":"605","messageId":"606","endLine":6,"endColumn":9},{"ruleId":"603","severity":1,"message":"731","line":7,"column":3,"nodeType":"605","messageId":"606","endLine":7,"endColumn":8},{"ruleId":"603","severity":1,"message":"625","line":10,"column":10,"nodeType":"605","messageId":"606","endLine":10,"endColumn":22},{"ruleId":"603","severity":1,"message":"722","line":11,"column":10,"nodeType":"605","messageId":"606","endLine":11,"endColumn":24},{"ruleId":"603","severity":1,"message":"743","line":21,"column":8,"nodeType":"605","messageId":"606","endLine":21,"endColumn":16},{"ruleId":"603","severity":1,"message":"744","line":28,"column":8,"nodeType":"605","messageId":"606","endLine":28,"endColumn":17},{"ruleId":"603","severity":1,"message":"745","line":29,"column":8,"nodeType":"605","messageId":"606","endLine":29,"endColumn":21},{"ruleId":"603","severity":1,"message":"664","line":31,"column":8,"nodeType":"605","messageId":"606","endLine":31,"endColumn":16},{"ruleId":"603","severity":1,"message":"746","line":43,"column":8,"nodeType":"605","messageId":"606","endLine":43,"endColumn":15},{"ruleId":"603","severity":1,"message":"627","line":45,"column":9,"nodeType":"605","messageId":"606","endLine":45,"endColumn":16},{"ruleId":"603","severity":1,"message":"747","line":46,"column":7,"nodeType":"605","messageId":"606","endLine":46,"endColumn":13},{"ruleId":"603","severity":1,"message":"748","line":50,"column":7,"nodeType":"605","messageId":"606","endLine":50,"endColumn":17},{"ruleId":"603","severity":1,"message":"749","line":112,"column":10,"nodeType":"605","messageId":"606","endLine":112,"endColumn":19},{"ruleId":"603","severity":1,"message":"750","line":112,"column":21,"nodeType":"605","messageId":"606","endLine":112,"endColumn":33},{"ruleId":"654","severity":1,"message":"655","line":171,"column":7,"nodeType":"656","messageId":"657","endLine":172,"endColumn":31},{"ruleId":"654","severity":1,"message":"655","line":173,"column":7,"nodeType":"656","messageId":"657","endLine":176,"endColumn":15},{"ruleId":"654","severity":1,"message":"751","line":183,"column":7,"nodeType":"656","messageId":"752","endLine":184,"endColumn":15},{"ruleId":"610","severity":1,"message":"753","line":201,"column":6,"nodeType":"612","endLine":201,"endColumn":8,"suggestions":"754"},{"ruleId":"603","severity":1,"message":"755","line":238,"column":13,"nodeType":"605","messageId":"606","endLine":238,"endColumn":20},{"ruleId":"614","severity":1,"message":"615","line":827,"column":17,"nodeType":"616","endLine":827,"endColumn":63},{"ruleId":"614","severity":1,"message":"615","line":833,"column":17,"nodeType":"616","endLine":833,"endColumn":65},{"ruleId":"727","severity":1,"message":"728","line":867,"column":15,"nodeType":"616","endLine":872,"endColumn":16},{"ruleId":"727","severity":1,"message":"728","line":873,"column":15,"nodeType":"616","endLine":879,"endColumn":16},{"ruleId":"614","severity":1,"message":"615","line":959,"column":17,"nodeType":"616","endLine":959,"endColumn":63},{"ruleId":"614","severity":1,"message":"615","line":964,"column":15,"nodeType":"616","endLine":964,"endColumn":64},{"ruleId":"727","severity":1,"message":"728","line":1057,"column":13,"nodeType":"616","endLine":1059,"endColumn":14},{"ruleId":"727","severity":1,"message":"728","line":1122,"column":15,"nodeType":"616","endLine":1124,"endColumn":16},{"ruleId":"727","severity":1,"message":"728","line":1138,"column":13,"nodeType":"616","endLine":1140,"endColumn":14},{"ruleId":"727","severity":1,"message":"728","line":1206,"column":15,"nodeType":"616","endLine":1208,"endColumn":16},{"ruleId":"727","severity":1,"message":"728","line":1221,"column":15,"nodeType":"616","endLine":1223,"endColumn":16},{"ruleId":"614","severity":1,"message":"615","line":1262,"column":13,"nodeType":"616","endLine":1262,"endColumn":58},{"ruleId":"614","severity":1,"message":"615","line":1459,"column":17,"nodeType":"616","endLine":1459,"endColumn":52},{"ruleId":"614","severity":1,"message":"615","line":1460,"column":17,"nodeType":"616","endLine":1460,"endColumn":51},{"ruleId":"617","replacedBy":"756"},{"ruleId":"619","replacedBy":"757"},{"ruleId":"603","severity":1,"message":"758","line":4,"column":3,"nodeType":"605","messageId":"606","endLine":4,"endColumn":8},{"ruleId":"603","severity":1,"message":"660","line":5,"column":3,"nodeType":"605","messageId":"606","endLine":5,"endColumn":8},{"ruleId":"603","severity":1,"message":"661","line":6,"column":3,"nodeType":"605","messageId":"606","endLine":6,"endColumn":9},{"ruleId":"603","severity":1,"message":"759","line":7,"column":3,"nodeType":"605","messageId":"606","endLine":7,"endColumn":8},{"ruleId":"603","severity":1,"message":"731","line":10,"column":3,"nodeType":"605","messageId":"606","endLine":10,"endColumn":8},{"ruleId":"603","severity":1,"message":"760","line":11,"column":3,"nodeType":"605","messageId":"606","endLine":11,"endColumn":9},{"ruleId":"603","severity":1,"message":"761","line":12,"column":3,"nodeType":"605","messageId":"606","endLine":12,"endColumn":17},{"ruleId":"603","severity":1,"message":"624","line":15,"column":8,"nodeType":"605","messageId":"606","endLine":15,"endColumn":17},{"ruleId":"603","severity":1,"message":"746","line":16,"column":8,"nodeType":"605","messageId":"606","endLine":16,"endColumn":15},{"ruleId":"603","severity":1,"message":"608","line":17,"column":8,"nodeType":"605","messageId":"606","endLine":17,"endColumn":14},{"ruleId":"603","severity":1,"message":"625","line":20,"column":10,"nodeType":"605","messageId":"606","endLine":20,"endColumn":22},{"ruleId":"603","severity":1,"message":"762","line":21,"column":8,"nodeType":"605","messageId":"606","endLine":21,"endColumn":14},{"ruleId":"603","severity":1,"message":"723","line":27,"column":10,"nodeType":"605","messageId":"606","endLine":27,"endColumn":14},{"ruleId":"603","severity":1,"message":"653","line":27,"column":16,"nodeType":"605","messageId":"606","endLine":27,"endColumn":20},{"ruleId":"603","severity":1,"message":"669","line":27,"column":22,"nodeType":"605","messageId":"606","endLine":27,"endColumn":24},{"ruleId":"603","severity":1,"message":"627","line":39,"column":9,"nodeType":"605","messageId":"606","endLine":39,"endColumn":16},{"ruleId":"603","severity":1,"message":"720","line":1,"column":17,"nodeType":"605","messageId":"606","endLine":1,"endColumn":25},{"ruleId":"603","severity":1,"message":"763","line":8,"column":8,"nodeType":"605","messageId":"606","endLine":8,"endColumn":17},{"ruleId":"764","severity":1,"message":"765","line":16,"column":20,"nodeType":"766","messageId":"735","endLine":16,"endColumn":23},{"ruleId":"603","severity":1,"message":"653","line":14,"column":10,"nodeType":"605","messageId":"606","endLine":14,"endColumn":14},{"ruleId":"603","severity":1,"message":"661","line":17,"column":8,"nodeType":"605","messageId":"606","endLine":17,"endColumn":14},{"ruleId":"767","severity":1,"message":"768","line":48,"column":5,"nodeType":"769","messageId":"735","endLine":48,"endColumn":13},{"ruleId":"603","severity":1,"message":"770","line":59,"column":9,"nodeType":"605","messageId":"606","endLine":59,"endColumn":22},{"ruleId":"603","severity":1,"message":"770","line":95,"column":9,"nodeType":"605","messageId":"606","endLine":95,"endColumn":22},{"ruleId":"637","severity":1,"message":"638","line":213,"column":41,"nodeType":"639","messageId":"640","endLine":213,"endColumn":43},{"ruleId":"637","severity":1,"message":"638","line":226,"column":47,"nodeType":"639","messageId":"640","endLine":226,"endColumn":49},{"ruleId":"603","severity":1,"message":"771","line":397,"column":23,"nodeType":"605","messageId":"606","endLine":397,"endColumn":28},{"ruleId":"603","severity":1,"message":"772","line":450,"column":21,"nodeType":"605","messageId":"606","endLine":450,"endColumn":36},{"ruleId":"603","severity":1,"message":"763","line":2,"column":8,"nodeType":"605","messageId":"606","endLine":2,"endColumn":17},{"ruleId":"603","severity":1,"message":"660","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":15},{"ruleId":"603","severity":1,"message":"661","line":4,"column":17,"nodeType":"605","messageId":"606","endLine":4,"endColumn":23},{"ruleId":"603","severity":1,"message":"773","line":4,"column":25,"nodeType":"605","messageId":"606","endLine":4,"endColumn":32},{"ruleId":"603","severity":1,"message":"623","line":4,"column":34,"nodeType":"605","messageId":"606","endLine":4,"endColumn":38},{"ruleId":"603","severity":1,"message":"662","line":4,"column":40,"nodeType":"605","messageId":"606","endLine":4,"endColumn":47},{"ruleId":"603","severity":1,"message":"650","line":5,"column":10,"nodeType":"605","messageId":"606","endLine":5,"endColumn":30},{"ruleId":"603","severity":1,"message":"626","line":5,"column":46,"nodeType":"605","messageId":"606","endLine":5,"endColumn":61},{"ruleId":"603","severity":1,"message":"653","line":9,"column":10,"nodeType":"605","messageId":"606","endLine":9,"endColumn":14},{"ruleId":"603","severity":1,"message":"723","line":9,"column":20,"nodeType":"605","messageId":"606","endLine":9,"endColumn":24},{"ruleId":"603","severity":1,"message":"669","line":9,"column":26,"nodeType":"605","messageId":"606","endLine":9,"endColumn":28},{"ruleId":"610","severity":1,"message":"774","line":30,"column":8,"nodeType":"612","endLine":30,"endColumn":10,"suggestions":"775"},{"ruleId":"603","severity":1,"message":"675","line":2,"column":35,"nodeType":"605","messageId":"606","endLine":2,"endColumn":42},{"ruleId":"603","severity":1,"message":"776","line":13,"column":10,"nodeType":"605","messageId":"606","endLine":13,"endColumn":21},{"ruleId":"603","severity":1,"message":"669","line":43,"column":20,"nodeType":"605","messageId":"606","endLine":43,"endColumn":22},{"ruleId":"603","severity":1,"message":"627","line":50,"column":9,"nodeType":"605","messageId":"606","endLine":50,"endColumn":16},{"ruleId":"603","severity":1,"message":"747","line":52,"column":7,"nodeType":"605","messageId":"606","endLine":52,"endColumn":13},{"ruleId":"603","severity":1,"message":"777","line":79,"column":5,"nodeType":"605","messageId":"606","endLine":79,"endColumn":15},{"ruleId":"603","severity":1,"message":"778","line":212,"column":48,"nodeType":"605","messageId":"606","endLine":212,"endColumn":54},{"ruleId":"633","severity":1,"message":"634","line":331,"column":9,"nodeType":"635","messageId":"636","endLine":344,"endColumn":10},{"ruleId":"633","severity":1,"message":"634","line":744,"column":9,"nodeType":"635","messageId":"636","endLine":748,"endColumn":10},{"ruleId":"603","severity":1,"message":"779","line":752,"column":9,"nodeType":"605","messageId":"606","endLine":752,"endColumn":27},{"ruleId":"767","severity":1,"message":"780","line":798,"column":7,"nodeType":"769","messageId":"735","endLine":798,"endColumn":10},{"ruleId":"633","severity":1,"message":"634","line":1051,"column":11,"nodeType":"635","messageId":"636","endLine":1058,"endColumn":12},{"ruleId":"633","severity":1,"message":"634","line":1274,"column":13,"nodeType":"635","messageId":"636","endLine":1281,"endColumn":14},{"ruleId":"633","severity":1,"message":"634","line":1431,"column":13,"nodeType":"635","messageId":"636","endLine":1438,"endColumn":14},{"ruleId":"603","severity":1,"message":"781","line":1502,"column":15,"nodeType":"605","messageId":"606","endLine":1502,"endColumn":26},{"ruleId":"782","severity":1,"message":"783","line":1789,"column":9,"nodeType":"784","messageId":"785","endLine":1789,"endColumn":15},{"ruleId":"782","severity":1,"message":"783","line":1798,"column":9,"nodeType":"784","messageId":"785","endLine":1798,"endColumn":14},{"ruleId":"633","severity":1,"message":"634","line":2024,"column":9,"nodeType":"635","messageId":"636","endLine":2037,"endColumn":10},{"ruleId":"691","severity":1,"message":"696","line":2430,"column":36,"nodeType":"693","messageId":"694","endLine":2430,"endColumn":37,"suggestions":"786"},{"ruleId":"733","severity":1,"message":"738","line":2431,"column":47,"nodeType":"643","messageId":"735","endLine":2431,"endColumn":49},{"ruleId":"603","severity":1,"message":"771","line":2632,"column":107,"nodeType":"605","messageId":"606","endLine":2632,"endColumn":112},{"ruleId":"603","severity":1,"message":"787","line":3057,"column":11,"nodeType":"605","messageId":"606","endLine":3057,"endColumn":14},{"ruleId":"603","severity":1,"message":"788","line":3694,"column":17,"nodeType":"605","messageId":"606","endLine":3694,"endColumn":23},{"ruleId":"603","severity":1,"message":"789","line":4322,"column":13,"nodeType":"605","messageId":"606","endLine":4322,"endColumn":23},{"ruleId":"603","severity":1,"message":"790","line":4322,"column":25,"nodeType":"605","messageId":"606","endLine":4322,"endColumn":33},{"ruleId":"603","severity":1,"message":"791","line":4322,"column":35,"nodeType":"605","messageId":"606","endLine":4322,"endColumn":41},{"ruleId":"633","severity":1,"message":"634","line":4355,"column":17,"nodeType":"635","messageId":"636","endLine":4368,"endColumn":18},{"ruleId":"792","severity":1,"message":"793","line":1,"column":1,"nodeType":"794","endLine":256,"endColumn":3},{"ruleId":"603","severity":1,"message":"795","line":1,"column":38,"nodeType":"605","messageId":"606","endLine":1,"endColumn":44},{"ruleId":"603","severity":1,"message":"674","line":5,"column":3,"nodeType":"605","messageId":"606","endLine":5,"endColumn":7},{"ruleId":"603","severity":1,"message":"796","line":6,"column":3,"nodeType":"605","messageId":"606","endLine":6,"endColumn":13},{"ruleId":"603","severity":1,"message":"797","line":13,"column":3,"nodeType":"605","messageId":"606","endLine":13,"endColumn":11},{"ruleId":"603","severity":1,"message":"609","line":42,"column":18,"nodeType":"605","messageId":"606","endLine":42,"endColumn":24},{"ruleId":"603","severity":1,"message":"798","line":56,"column":10,"nodeType":"605","messageId":"606","endLine":56,"endColumn":17},{"ruleId":"603","severity":1,"message":"799","line":56,"column":19,"nodeType":"605","messageId":"606","endLine":56,"endColumn":29},{"ruleId":"614","severity":1,"message":"615","line":152,"column":11,"nodeType":"616","endLine":152,"endColumn":29},{"ruleId":"614","severity":1,"message":"615","line":154,"column":11,"nodeType":"616","endLine":154,"endColumn":32},{"ruleId":"614","severity":1,"message":"615","line":158,"column":11,"nodeType":"616","endLine":158,"endColumn":29},{"ruleId":"614","severity":1,"message":"615","line":160,"column":11,"nodeType":"616","endLine":160,"endColumn":32},{"ruleId":"614","severity":1,"message":"615","line":164,"column":11,"nodeType":"616","endLine":164,"endColumn":30},{"ruleId":"614","severity":1,"message":"615","line":166,"column":11,"nodeType":"616","endLine":166,"endColumn":33},{"ruleId":"614","severity":1,"message":"615","line":170,"column":11,"nodeType":"616","endLine":170,"endColumn":30},{"ruleId":"614","severity":1,"message":"615","line":172,"column":11,"nodeType":"616","endLine":172,"endColumn":33},{"ruleId":"614","severity":1,"message":"615","line":176,"column":11,"nodeType":"616","endLine":176,"endColumn":29},{"ruleId":"614","severity":1,"message":"615","line":178,"column":11,"nodeType":"616","endLine":178,"endColumn":32},{"ruleId":"614","severity":1,"message":"615","line":182,"column":11,"nodeType":"616","endLine":182,"endColumn":29},{"ruleId":"614","severity":1,"message":"615","line":184,"column":11,"nodeType":"616","endLine":184,"endColumn":32},{"ruleId":"614","severity":1,"message":"615","line":188,"column":11,"nodeType":"616","endLine":188,"endColumn":29},{"ruleId":"614","severity":1,"message":"615","line":190,"column":11,"nodeType":"616","endLine":190,"endColumn":32},{"ruleId":"610","severity":1,"message":"800","line":248,"column":6,"nodeType":"612","endLine":248,"endColumn":29,"suggestions":"801"},{"ruleId":"610","severity":1,"message":"802","line":270,"column":6,"nodeType":"612","endLine":270,"endColumn":25,"suggestions":"803"},{"ruleId":"610","severity":1,"message":"804","line":292,"column":6,"nodeType":"612","endLine":292,"endColumn":13,"suggestions":"805"},{"ruleId":"610","severity":1,"message":"806","line":319,"column":6,"nodeType":"612","endLine":319,"endColumn":44,"suggestions":"807"},{"ruleId":"610","severity":1,"message":"808","line":330,"column":6,"nodeType":"612","endLine":330,"endColumn":17,"suggestions":"809"},{"ruleId":"603","severity":1,"message":"810","line":18,"column":10,"nodeType":"605","messageId":"606","endLine":18,"endColumn":23},{"ruleId":"603","severity":1,"message":"811","line":358,"column":28,"nodeType":"605","messageId":"606","endLine":358,"endColumn":31},{"ruleId":"603","severity":1,"message":"812","line":358,"column":33,"nodeType":"605","messageId":"606","endLine":358,"endColumn":35},{"ruleId":"603","severity":1,"message":"813","line":358,"column":37,"nodeType":"605","messageId":"606","endLine":358,"endColumn":45},{"ruleId":"603","severity":1,"message":"623","line":2,"column":60,"nodeType":"605","messageId":"606","endLine":2,"endColumn":64},{"ruleId":"603","severity":1,"message":"624","line":3,"column":8,"nodeType":"605","messageId":"606","endLine":3,"endColumn":17},{"ruleId":"603","severity":1,"message":"626","line":6,"column":32,"nodeType":"605","messageId":"606","endLine":6,"endColumn":47},{"ruleId":"603","severity":1,"message":"627","line":31,"column":9,"nodeType":"605","messageId":"606","endLine":31,"endColumn":16},{"ruleId":"603","severity":1,"message":"747","line":33,"column":7,"nodeType":"605","messageId":"606","endLine":33,"endColumn":13},{"ruleId":"603","severity":1,"message":"628","line":38,"column":5,"nodeType":"605","messageId":"606","endLine":38,"endColumn":8},{"ruleId":"767","severity":1,"message":"814","line":75,"column":9,"nodeType":"769","messageId":"735","endLine":75,"endColumn":15},{"ruleId":"633","severity":1,"message":"634","line":116,"column":9,"nodeType":"635","messageId":"636","endLine":122,"endColumn":10},{"ruleId":"637","severity":1,"message":"638","line":129,"column":51,"nodeType":"639","messageId":"640","endLine":129,"endColumn":53},{"ruleId":"637","severity":1,"message":"638","line":168,"column":51,"nodeType":"639","messageId":"640","endLine":168,"endColumn":53},{"ruleId":"603","severity":1,"message":"645","line":277,"column":15,"nodeType":"605","messageId":"606","endLine":277,"endColumn":25},{"ruleId":"603","severity":1,"message":"815","line":277,"column":53,"nodeType":"605","messageId":"606","endLine":277,"endColumn":59},{"ruleId":"603","severity":1,"message":"646","line":350,"column":15,"nodeType":"605","messageId":"606","endLine":350,"endColumn":28},{"ruleId":"614","severity":1,"message":"615","line":554,"column":29,"nodeType":"616","endLine":554,"endColumn":77},{"ruleId":"603","severity":1,"message":"647","line":577,"column":9,"nodeType":"605","messageId":"606","endLine":577,"endColumn":16},{"ruleId":"603","severity":1,"message":"632","line":578,"column":15,"nodeType":"605","messageId":"606","endLine":578,"endColumn":24},{"ruleId":"614","severity":1,"message":"615","line":612,"column":29,"nodeType":"616","endLine":612,"endColumn":77},{"ruleId":"633","severity":1,"message":"634","line":643,"column":9,"nodeType":"635","messageId":"636","endLine":646,"endColumn":10},{"ruleId":"633","severity":1,"message":"634","line":648,"column":9,"nodeType":"635","messageId":"636","endLine":651,"endColumn":10},{"ruleId":"603","severity":1,"message":"789","line":732,"column":17,"nodeType":"605","messageId":"606","endLine":732,"endColumn":27},{"ruleId":"603","severity":1,"message":"790","line":732,"column":29,"nodeType":"605","messageId":"606","endLine":732,"endColumn":37},{"ruleId":"603","severity":1,"message":"791","line":732,"column":39,"nodeType":"605","messageId":"606","endLine":732,"endColumn":45},{"ruleId":"603","severity":1,"message":"816","line":732,"column":47,"nodeType":"605","messageId":"606","endLine":732,"endColumn":55},{"ruleId":"603","severity":1,"message":"649","line":798,"column":97,"nodeType":"605","messageId":"606","endLine":798,"endColumn":102},{"ruleId":"603","severity":1,"message":"817","line":798,"column":135,"nodeType":"605","messageId":"606","endLine":798,"endColumn":157},{"ruleId":"603","severity":1,"message":"818","line":17,"column":8,"nodeType":"605","messageId":"606","endLine":17,"endColumn":24},{"ruleId":"603","severity":1,"message":"819","line":6,"column":5,"nodeType":"605","messageId":"606","endLine":6,"endColumn":10},{"ruleId":"603","severity":1,"message":"820","line":12,"column":13,"nodeType":"605","messageId":"606","endLine":12,"endColumn":19},{"ruleId":"733","severity":1,"message":"734","line":15,"column":20,"nodeType":"643","messageId":"735","endLine":15,"endColumn":22},{"ruleId":"733","severity":1,"message":"734","line":59,"column":20,"nodeType":"643","messageId":"735","endLine":59,"endColumn":22},{"ruleId":"603","severity":1,"message":"721","line":1,"column":27,"nodeType":"605","messageId":"606","endLine":1,"endColumn":36},{"ruleId":"603","severity":1,"message":"763","line":2,"column":8,"nodeType":"605","messageId":"606","endLine":2,"endColumn":17},{"ruleId":"603","severity":1,"message":"660","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":15},{"ruleId":"603","severity":1,"message":"661","line":4,"column":17,"nodeType":"605","messageId":"606","endLine":4,"endColumn":23},{"ruleId":"603","severity":1,"message":"623","line":4,"column":34,"nodeType":"605","messageId":"606","endLine":4,"endColumn":38},{"ruleId":"603","severity":1,"message":"662","line":4,"column":40,"nodeType":"605","messageId":"606","endLine":4,"endColumn":47},{"ruleId":"603","severity":1,"message":"625","line":5,"column":32,"nodeType":"605","messageId":"606","endLine":5,"endColumn":44},{"ruleId":"603","severity":1,"message":"626","line":5,"column":46,"nodeType":"605","messageId":"606","endLine":5,"endColumn":61},{"ruleId":"603","severity":1,"message":"732","line":8,"column":8,"nodeType":"605","messageId":"606","endLine":8,"endColumn":21},{"ruleId":"603","severity":1,"message":"653","line":18,"column":10,"nodeType":"605","messageId":"606","endLine":18,"endColumn":14},{"ruleId":"603","severity":1,"message":"723","line":18,"column":20,"nodeType":"605","messageId":"606","endLine":18,"endColumn":24},{"ruleId":"603","severity":1,"message":"669","line":18,"column":26,"nodeType":"605","messageId":"606","endLine":18,"endColumn":28},{"ruleId":"603","severity":1,"message":"661","line":3,"column":3,"nodeType":"605","messageId":"606","endLine":3,"endColumn":9},{"ruleId":"603","severity":1,"message":"821","line":4,"column":3,"nodeType":"605","messageId":"606","endLine":4,"endColumn":11},{"ruleId":"603","severity":1,"message":"759","line":5,"column":3,"nodeType":"605","messageId":"606","endLine":5,"endColumn":8},{"ruleId":"603","severity":1,"message":"822","line":7,"column":3,"nodeType":"605","messageId":"606","endLine":7,"endColumn":6},{"ruleId":"603","severity":1,"message":"607","line":31,"column":10,"nodeType":"605","messageId":"606","endLine":31,"endColumn":12},{"ruleId":"603","severity":1,"message":"823","line":43,"column":9,"nodeType":"605","messageId":"606","endLine":43,"endColumn":26},{"ruleId":"603","severity":1,"message":"824","line":43,"column":28,"nodeType":"605","messageId":"606","endLine":43,"endColumn":46},{"ruleId":"603","severity":1,"message":"825","line":43,"column":48,"nodeType":"605","messageId":"606","endLine":43,"endColumn":64},{"ruleId":"603","severity":1,"message":"826","line":45,"column":16,"nodeType":"605","messageId":"606","endLine":45,"endColumn":20},{"ruleId":"603","severity":1,"message":"827","line":58,"column":10,"nodeType":"605","messageId":"606","endLine":58,"endColumn":18},{"ruleId":"603","severity":1,"message":"828","line":58,"column":20,"nodeType":"605","messageId":"606","endLine":58,"endColumn":31},{"ruleId":"614","severity":1,"message":"615","line":136,"column":11,"nodeType":"616","endLine":143,"endColumn":13},{"ruleId":"614","severity":1,"message":"615","line":148,"column":13,"nodeType":"616","endLine":148,"endColumn":33},{"ruleId":"614","severity":1,"message":"615","line":196,"column":18,"nodeType":"616","endLine":196,"endColumn":47},{"ruleId":"614","severity":1,"message":"615","line":198,"column":18,"nodeType":"616","endLine":198,"endColumn":47},{"ruleId":"614","severity":1,"message":"615","line":200,"column":18,"nodeType":"616","endLine":200,"endColumn":47},{"ruleId":"614","severity":1,"message":"615","line":202,"column":18,"nodeType":"616","endLine":202,"endColumn":47},{"ruleId":"614","severity":1,"message":"615","line":226,"column":11,"nodeType":"616","endLine":233,"endColumn":13},{"ruleId":"614","severity":1,"message":"615","line":238,"column":13,"nodeType":"616","endLine":238,"endColumn":63},{"ruleId":"610","severity":1,"message":"829","line":345,"column":6,"nodeType":"612","endLine":345,"endColumn":18,"suggestions":"830"},{"ruleId":"610","severity":1,"message":"831","line":353,"column":6,"nodeType":"612","endLine":353,"endColumn":15,"suggestions":"832"},{"ruleId":"610","severity":1,"message":"833","line":361,"column":6,"nodeType":"612","endLine":361,"endColumn":8,"suggestions":"834"},{"ruleId":"603","severity":1,"message":"653","line":4,"column":10,"nodeType":"605","messageId":"606","endLine":4,"endColumn":14},{"ruleId":"603","severity":1,"message":"669","line":4,"column":20,"nodeType":"605","messageId":"606","endLine":4,"endColumn":22},{"ruleId":"633","severity":1,"message":"634","line":381,"column":9,"nodeType":"635","messageId":"636","endLine":388,"endColumn":10},{"ruleId":"603","severity":1,"message":"835","line":591,"column":15,"nodeType":"605","messageId":"606","endLine":591,"endColumn":25},{"ruleId":"603","severity":1,"message":"836","line":635,"column":17,"nodeType":"605","messageId":"606","endLine":635,"endColumn":26},{"ruleId":"603","severity":1,"message":"837","line":810,"column":11,"nodeType":"605","messageId":"606","endLine":810,"endColumn":22},{"ruleId":"782","severity":1,"message":"783","line":999,"column":9,"nodeType":"784","messageId":"785","endLine":999,"endColumn":15},{"ruleId":"603","severity":1,"message":"732","line":11,"column":8,"nodeType":"605","messageId":"606","endLine":11,"endColumn":21},{"ruleId":"610","severity":1,"message":"838","line":47,"column":6,"nodeType":"612","endLine":47,"endColumn":8,"suggestions":"839"},{"ruleId":"633","severity":1,"message":"634","line":87,"column":5,"nodeType":"635","messageId":"636","endLine":106,"endColumn":6},{"ruleId":"603","severity":1,"message":"609","line":16,"column":9,"nodeType":"605","messageId":"606","endLine":16,"endColumn":15},{"ruleId":"603","severity":1,"message":"840","line":16,"column":26,"nodeType":"605","messageId":"606","endLine":16,"endColumn":32},{"ruleId":"603","severity":1,"message":"841","line":16,"column":34,"nodeType":"605","messageId":"606","endLine":16,"endColumn":39},{"ruleId":"610","severity":1,"message":"842","line":94,"column":6,"nodeType":"612","endLine":94,"endColumn":22,"suggestions":"843"},{"ruleId":"610","severity":1,"message":"844","line":103,"column":6,"nodeType":"612","endLine":103,"endColumn":21,"suggestions":"845"},{"ruleId":"603","severity":1,"message":"760","line":11,"column":3,"nodeType":"605","messageId":"606","endLine":11,"endColumn":9},{"ruleId":"603","severity":1,"message":"762","line":21,"column":8,"nodeType":"605","messageId":"606","endLine":21,"endColumn":14},{"ruleId":"603","severity":1,"message":"776","line":26,"column":10,"nodeType":"605","messageId":"606","endLine":26,"endColumn":21},{"ruleId":"603","severity":1,"message":"846","line":28,"column":8,"nodeType":"605","messageId":"606","endLine":28,"endColumn":14},{"ruleId":"603","severity":1,"message":"723","line":30,"column":10,"nodeType":"605","messageId":"606","endLine":30,"endColumn":14},{"ruleId":"603","severity":1,"message":"653","line":30,"column":16,"nodeType":"605","messageId":"606","endLine":30,"endColumn":20},{"ruleId":"603","severity":1,"message":"847","line":31,"column":10,"nodeType":"605","messageId":"606","endLine":31,"endColumn":20},{"ruleId":"603","severity":1,"message":"848","line":36,"column":8,"nodeType":"605","messageId":"606","endLine":36,"endColumn":21},{"ruleId":"603","severity":1,"message":"849","line":37,"column":8,"nodeType":"605","messageId":"606","endLine":37,"endColumn":15},{"ruleId":"603","severity":1,"message":"627","line":42,"column":9,"nodeType":"605","messageId":"606","endLine":42,"endColumn":16},{"ruleId":"603","severity":1,"message":"747","line":43,"column":7,"nodeType":"605","messageId":"606","endLine":43,"endColumn":13},{"ruleId":"603","severity":1,"message":"850","line":166,"column":9,"nodeType":"605","messageId":"606","endLine":166,"endColumn":16},{"ruleId":"603","severity":1,"message":"851","line":176,"column":15,"nodeType":"605","messageId":"606","endLine":176,"endColumn":21},{"ruleId":"603","severity":1,"message":"852","line":630,"column":15,"nodeType":"605","messageId":"606","endLine":630,"endColumn":24},{"ruleId":"603","severity":1,"message":"725","line":905,"column":15,"nodeType":"605","messageId":"606","endLine":905,"endColumn":21},{"ruleId":"603","severity":1,"message":"726","line":909,"column":15,"nodeType":"605","messageId":"606","endLine":909,"endColumn":22},{"ruleId":"603","severity":1,"message":"811","line":993,"column":28,"nodeType":"605","messageId":"606","endLine":993,"endColumn":31},{"ruleId":"603","severity":1,"message":"812","line":993,"column":33,"nodeType":"605","messageId":"606","endLine":993,"endColumn":35},{"ruleId":"603","severity":1,"message":"813","line":993,"column":37,"nodeType":"605","messageId":"606","endLine":993,"endColumn":45},{"ruleId":"603","severity":1,"message":"789","line":993,"column":53,"nodeType":"605","messageId":"606","endLine":993,"endColumn":63},{"ruleId":"603","severity":1,"message":"790","line":993,"column":65,"nodeType":"605","messageId":"606","endLine":993,"endColumn":73},{"ruleId":"603","severity":1,"message":"791","line":993,"column":75,"nodeType":"605","messageId":"606","endLine":993,"endColumn":81},{"ruleId":"603","severity":1,"message":"853","line":993,"column":111,"nodeType":"605","messageId":"606","endLine":993,"endColumn":117},{"ruleId":"603","severity":1,"message":"854","line":993,"column":119,"nodeType":"605","messageId":"606","endLine":993,"endColumn":129},{"ruleId":"727","severity":1,"message":"728","line":1005,"column":11,"nodeType":"616","endLine":1021,"endColumn":12},{"ruleId":"633","severity":1,"message":"634","line":1104,"column":19,"nodeType":"635","messageId":"636","endLine":1123,"endColumn":20},{"ruleId":"614","severity":1,"message":"615","line":1233,"column":17,"nodeType":"616","endLine":1233,"endColumn":52},{"ruleId":"614","severity":1,"message":"615","line":1234,"column":17,"nodeType":"616","endLine":1234,"endColumn":51},{"ruleId":"603","severity":1,"message":"607","line":13,"column":10,"nodeType":"605","messageId":"606","endLine":13,"endColumn":12},{"ruleId":"603","severity":1,"message":"669","line":13,"column":14,"nodeType":"605","messageId":"606","endLine":13,"endColumn":16},{"ruleId":"603","severity":1,"message":"604","line":4,"column":3,"nodeType":"605","messageId":"606","endLine":4,"endColumn":8},{"ruleId":"603","severity":1,"message":"759","line":10,"column":3,"nodeType":"605","messageId":"606","endLine":10,"endColumn":8},{"ruleId":"603","severity":1,"message":"855","line":11,"column":3,"nodeType":"605","messageId":"606","endLine":11,"endColumn":7},{"ruleId":"603","severity":1,"message":"856","line":16,"column":8,"nodeType":"605","messageId":"606","endLine":16,"endColumn":15},{"ruleId":"603","severity":1,"message":"823","line":69,"column":5,"nodeType":"605","messageId":"606","endLine":69,"endColumn":22},{"ruleId":"603","severity":1,"message":"857","line":73,"column":5,"nodeType":"605","messageId":"606","endLine":73,"endColumn":23},{"ruleId":"858","severity":1,"message":"859","line":131,"column":61,"nodeType":"643","messageId":"860","endLine":131,"endColumn":62},{"ruleId":"858","severity":1,"message":"859","line":139,"column":45,"nodeType":"643","messageId":"860","endLine":139,"endColumn":46},{"ruleId":"610","severity":1,"message":"861","line":283,"column":6,"nodeType":"612","endLine":283,"endColumn":13,"suggestions":"862"},{"ruleId":"610","severity":1,"message":"863","line":305,"column":6,"nodeType":"612","endLine":305,"endColumn":26,"suggestions":"864"},{"ruleId":"603","severity":1,"message":"650","line":8,"column":10,"nodeType":"605","messageId":"606","endLine":8,"endColumn":30},{"ruleId":"603","severity":1,"message":"625","line":8,"column":32,"nodeType":"605","messageId":"606","endLine":8,"endColumn":44},{"ruleId":"603","severity":1,"message":"669","line":14,"column":20,"nodeType":"605","messageId":"606","endLine":14,"endColumn":22},{"ruleId":"603","severity":1,"message":"865","line":4,"column":3,"nodeType":"605","messageId":"606","endLine":4,"endColumn":9},{"ruleId":"603","severity":1,"message":"866","line":13,"column":8,"nodeType":"605","messageId":"606","endLine":13,"endColumn":14},{"ruleId":"603","severity":1,"message":"661","line":14,"column":8,"nodeType":"605","messageId":"606","endLine":14,"endColumn":14},{"ruleId":"603","severity":1,"message":"732","line":15,"column":8,"nodeType":"605","messageId":"606","endLine":15,"endColumn":21},{"ruleId":"603","severity":1,"message":"818","line":16,"column":8,"nodeType":"605","messageId":"606","endLine":16,"endColumn":24},{"ruleId":"603","severity":1,"message":"679","line":20,"column":8,"nodeType":"605","messageId":"606","endLine":20,"endColumn":11},{"ruleId":"603","severity":1,"message":"680","line":21,"column":8,"nodeType":"605","messageId":"606","endLine":21,"endColumn":11},{"ruleId":"603","severity":1,"message":"681","line":22,"column":8,"nodeType":"605","messageId":"606","endLine":22,"endColumn":13},{"ruleId":"603","severity":1,"message":"867","line":32,"column":9,"nodeType":"605","messageId":"606","endLine":32,"endColumn":15},{"ruleId":"603","severity":1,"message":"868","line":55,"column":11,"nodeType":"605","messageId":"606","endLine":55,"endColumn":17},{"ruleId":"603","severity":1,"message":"869","line":55,"column":19,"nodeType":"605","messageId":"606","endLine":55,"endColumn":24},{"ruleId":"603","severity":1,"message":"770","line":71,"column":9,"nodeType":"605","messageId":"606","endLine":71,"endColumn":22},{"ruleId":"603","severity":1,"message":"631","line":154,"column":18,"nodeType":"605","messageId":"606","endLine":154,"endColumn":27},{"ruleId":"603","severity":1,"message":"630","line":154,"column":29,"nodeType":"605","messageId":"606","endLine":154,"endColumn":37},{"ruleId":"614","severity":1,"message":"615","line":558,"column":19,"nodeType":"616","endLine":565,"endColumn":61},{"ruleId":"727","severity":1,"message":"728","line":573,"column":19,"nodeType":"616","endLine":581,"endColumn":30},"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'px' is defined but never used.","'moment' is defined but never used.","'Header' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.","ArrayExpression",["870"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["871"],"no-negated-in-lhs",["872"],["871"],["872"],"'Spin' is defined but never used.","'Draggable' is defined but never used.","'SyncOutlined' is defined but never used.","'LoadingOutlined' is defined but never used.","'SubMenu' is assigned a value but never used.","'url' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'breedName' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","'petSpecies' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'options' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","'createFromIconfontCN' is defined but never used.","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","'mTop' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'BackTop' is defined but never used.","'blueSearch' is defined but never used.","'MinClose' is defined but never used.","'MouseDiv' is defined but never used.","'back_white' is defined but never used.","'back_hui' is defined but never used.","'MyModal' is defined but never used.","'pX' is defined but never used.","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["873"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["874"],"'Menu' is defined but never used.","'Tooltip' is defined but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["875","876"],"Unnecessary escape character: \\-.",["877","878"],["879","880"],["881","882"],["883","884"],["885","886"],["887","888"],["889","890"],["891","892"],["893","894"],["895","896"],["897","898"],["899","900"],["901","902"],["903","904"],["905","906"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["907"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["908"],"React Hook useEffect has a missing dependency: 'getOption'. Either include it or remove the dependency array.",["909"],["871"],["872"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'SearchOutlined' is defined but never used.","'MTop' is defined but never used.","'history' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useHistory' is defined but never used.","'Popover' is defined but never used.","'Modal' is defined but never used.","'electronStore' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["910"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["911"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'SelectionBox' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'Button1' is defined but never used.","'MyIcon' is assigned a value but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","Expected a 'break' statement before 'default'.","default","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["912"],"'bluData' is assigned a value but never used.",["871"],["872"],"'Table' is defined but never used.","'Space' is defined but never used.","'Select' is defined but never used.","'ConfigProvider' is defined but never used.","'MaxMin' is defined but never used.","'PropTypes' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","no-dupe-keys","Duplicate key 'disabled'.","ObjectExpression","'windowsHeight' is assigned a value but never used.","'petId' is assigned a value but never used.","'assignOwnerName' is assigned a value but never used.","'message' is defined but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["913"],"'FetchEszVet' is defined but never used.","'biggieSave' is assigned a value but never used.","'gender' is assigned a value but never used.","'lastConnectionTime' is assigned a value but never used.","Duplicate key '194'.","'weightUnits' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["914","915"],"'pas' is assigned a value but never used.","'temp15' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useRef' is defined but never used.","'PageHeader' is defined but never used.","'Carousel' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["916"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["917"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["918"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["919"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["920"],"'fetchRequest1' is defined but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","Duplicate key 'imgurl'.","'imgurl' is assigned a value but never used.","'disabled' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","'temporaryStorage' is defined but never used.","'token' is assigned a value but never used.","'header' is assigned a value but never used.","'Progress' is defined but never used.","'Tag' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'mellaConnectStatus' is assigned a value but never used.","'mellaMeasurePart' is assigned a value but never used.","'memo' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["921"],"React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["922"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["923"],"'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_getExam' and 'petList'. Either include them or remove the dependency array. You can also do a functional update 'setPetList(p => ...)' if you only need 'petList' in the 'setPetList' call.",["924"],"'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["925"],"React Hook useEffect has a missing dependency: 'setBiggieConnectStatusFun'. Either include it or remove the dependency array. If 'setBiggieConnectStatusFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["926"],"'gender' is defined but never used.","'stopBubble' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","'Card' is defined but never used.","'Charlie' is defined but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["927"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["928"],"'Switch' is defined but never used.","'Slider' is defined but never used.","'Option' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.",{"desc":"929","fix":"930"},"no-global-assign","no-unsafe-negation",{"desc":"931","fix":"932"},{"desc":"933","fix":"934"},{"messageId":"935","fix":"936","desc":"937"},{"messageId":"938","fix":"939","desc":"940"},{"messageId":"935","fix":"941","desc":"937"},{"messageId":"938","fix":"942","desc":"940"},{"messageId":"935","fix":"943","desc":"937"},{"messageId":"938","fix":"944","desc":"940"},{"messageId":"935","fix":"945","desc":"937"},{"messageId":"938","fix":"946","desc":"940"},{"messageId":"935","fix":"947","desc":"937"},{"messageId":"938","fix":"948","desc":"940"},{"messageId":"935","fix":"949","desc":"937"},{"messageId":"938","fix":"950","desc":"940"},{"messageId":"935","fix":"951","desc":"937"},{"messageId":"938","fix":"952","desc":"940"},{"messageId":"935","fix":"953","desc":"937"},{"messageId":"938","fix":"954","desc":"940"},{"messageId":"935","fix":"955","desc":"937"},{"messageId":"938","fix":"956","desc":"940"},{"messageId":"935","fix":"957","desc":"937"},{"messageId":"938","fix":"958","desc":"940"},{"messageId":"935","fix":"959","desc":"937"},{"messageId":"938","fix":"960","desc":"940"},{"messageId":"935","fix":"961","desc":"937"},{"messageId":"938","fix":"962","desc":"940"},{"messageId":"935","fix":"963","desc":"937"},{"messageId":"938","fix":"964","desc":"940"},{"messageId":"935","fix":"965","desc":"937"},{"messageId":"938","fix":"966","desc":"940"},{"messageId":"935","fix":"967","desc":"937"},{"messageId":"938","fix":"968","desc":"940"},{"messageId":"935","fix":"969","desc":"937"},{"messageId":"938","fix":"970","desc":"940"},{"desc":"971","fix":"972"},{"desc":"973","fix":"974"},{"desc":"975","fix":"976"},{"desc":"977","fix":"978"},{"desc":"979","fix":"980"},{"desc":"981","fix":"982"},{"desc":"983","fix":"984"},{"messageId":"935","fix":"985","desc":"937"},{"messageId":"938","fix":"986","desc":"940"},{"desc":"987","fix":"988"},{"desc":"989","fix":"990"},{"desc":"991","fix":"992"},{"desc":"993","fix":"994"},{"desc":"995","fix":"996"},{"desc":"997","fix":"998"},{"desc":"999","fix":"1000"},{"desc":"1001","fix":"1002"},{"desc":"1003","fix":"1004"},{"desc":"1005","fix":"1006"},{"desc":"1007","fix":"1008"},{"desc":"1009","fix":"1010"},{"desc":"1011","fix":"1012"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1013","text":"1014"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1015","text":"1016"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1017","text":"1018"},"removeEscape",{"range":"1019","text":"1020"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1021","text":"1022"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1023","text":"1020"},{"range":"1024","text":"1022"},{"range":"1025","text":"1020"},{"range":"1026","text":"1022"},{"range":"1027","text":"1020"},{"range":"1028","text":"1022"},{"range":"1029","text":"1020"},{"range":"1030","text":"1022"},{"range":"1031","text":"1020"},{"range":"1032","text":"1022"},{"range":"1033","text":"1020"},{"range":"1034","text":"1022"},{"range":"1035","text":"1020"},{"range":"1036","text":"1022"},{"range":"1037","text":"1020"},{"range":"1038","text":"1022"},{"range":"1039","text":"1020"},{"range":"1040","text":"1022"},{"range":"1041","text":"1020"},{"range":"1042","text":"1022"},{"range":"1043","text":"1020"},{"range":"1044","text":"1022"},{"range":"1045","text":"1020"},{"range":"1046","text":"1022"},{"range":"1047","text":"1020"},{"range":"1048","text":"1022"},{"range":"1049","text":"1020"},{"range":"1050","text":"1022"},{"range":"1051","text":"1020"},{"range":"1052","text":"1022"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"1053","text":"1054"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"1055","text":"1056"},"Update the dependencies array to be: [echarsData, getOption]",{"range":"1057","text":"1058"},"Update the dependencies array to be: [listDate]",{"range":"1059","text":"1060"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1061","text":"1062"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1063","text":"1064"},"Update the dependencies array to be: [_getExam]",{"range":"1065","text":"1066"},{"range":"1067","text":"1020"},{"range":"1068","text":"1022"},"Update the dependencies array to be: [finishScan, inputIndex, newData, patientId]",{"range":"1069","text":"1070"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1071","text":"1072"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1073","text":"1074"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"1075","text":"1076"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1081","text":"1082"},"Update the dependencies array to be: [storage.userId]",{"range":"1083","text":"1084"},"Update the dependencies array to be: [_getExam, petList]",{"range":"1085","text":"1086"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"1087","text":"1088"},"Update the dependencies array to be: [petDetailInfo, setBiggieConnectStatusFun]",{"range":"1089","text":"1090"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"1091","text":"1092"},"Update the dependencies array to be: [mellaConnectStatus, value]",{"range":"1093","text":"1094"},[2280,2295],"[callBack, carouselIndex]",[2621,2623],"[setReceiveBroadcastHardwareInfoFun]",[3890,3920],"[devicesList, receiveBroadcastHardwareInfo]",[20468,20469],"",[20468,20468],"\\",[20669,20670],[20669,20669],[21739,21740],[21739,21739],[21940,21941],[21940,21940],[23008,23009],[23008,23008],[23209,23210],[23209,23209],[24603,24604],[24603,24603],[24804,24805],[24804,24804],[25834,25835],[25834,25834],[26035,26036],[26035,26035],[27157,27158],[27157,27157],[27358,27359],[27358,27358],[42697,42698],[42697,42697],[42898,42899],[42898,42898],[43428,43429],[43428,43428],[43629,43630],[43629,43629],[49767,49784],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[50454,50474],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[50631,50643],"[echarsData, getOption]",[3263,3265],"[listDate]",[4962,4974],"[letterListCopy, phoneListCopy, searchText]",[6467,6469],"[_noUSB, _send, blueSearch]",[1002,1004],"[_getExam]",[72674,72675],[72674,72674],[6313,6336],"[finishScan, inputIndex, newData, patientId]",[6785,6804],"[inputIndex, rulerConfirmCount]",[7417,7424],"[petId, petLengthDataConvert, petMessage]",[8039,8077],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[8500,8511],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[9096,9108],"[getPetTemperatureData, petMessage]",[9256,9265],"[getPetTemperatureData, reRender, saveNum]",[9453,9455],"[storage.userId]",[1414,1416],"[_getExam, petList]",[2824,2840],"[hardwareReduce, weight]",[3028,3043],"[petDetailInfo, setBiggieConnectStatusFun]",[8065,8072],"[callBack, prediction, timeNum, value]",[8691,8711],"[mellaConnectStatus, value]"]