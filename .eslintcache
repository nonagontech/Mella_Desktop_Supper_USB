[{"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/App.js":"1","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/praviders/Praviders.jsx":"2","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectAllExam.jsx":"3","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/signIn/SignIn.jsx":"4","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/ishavePMS/IsHavePMS.jsx":"5","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/invite/Invite.jsx":"6","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/InviteTeam.jsx":"7","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil5.js":"8","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/avatar/Avatar.jsx":"9","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/PetsUI.jsx":"10","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/HardListModal.jsx":"11","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/headerItem.jsx":"12","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx":"13","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/appversion.js":"14","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectScheduledExam.jsx":"15","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorAddPet/DoctorAddPet.jsx":"16","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/joinOrganizationByOption/JoinOrganizationByOption.jsx":"17","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/NewOrganization.jsx":"18","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/myModal/MyModal.jsx":"19","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/userType.js":"20","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/AddYuding.jsx":"21","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectExam/SelectExam.jsx":"22","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/findMyWorkplace/FindMyWorkplace.jsx":"23","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/unassigned/Unassigned.jsx":"24","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/minClose/MinClose.js":"25","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/axios/index.js":"26","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/hardwareAction.js":"27","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/petType.js":"28","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/workPlace/WorkPlace.jsx":"29","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/admin_VetProfile/Veterinarians.jsx":"30","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js":"31","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/AddDevice.jsx":"32","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/clinicalStudyPage/index.jsx":"33","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/index.js":"34","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/maxminreturn/MaxMinReturn.jsx":"35","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/editParent/EditParent.jsx":"36","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/selectionBox/SelectionBox.jsx":"37","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/allPetsPage/index.jsx":"38","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/userAction.js":"39"},{"size":7271,"mtime":1655454585051,"results":"40","hashOfConfig":"41"},{"size":6255,"mtime":1655269876067,"results":"42","hashOfConfig":"41"},{"size":37156,"mtime":1655795177439,"results":"43","hashOfConfig":"41"},{"size":16574,"mtime":1655800342112,"results":"44","hashOfConfig":"41"},{"size":1605,"mtime":1655269876046,"results":"45","hashOfConfig":"41"},{"size":6721,"mtime":1655269876063,"results":"46","hashOfConfig":"41"},{"size":13114,"mtime":1655269876064,"results":"47","hashOfConfig":"41"},{"size":3528,"mtime":1655269876085,"results":"48","hashOfConfig":"41"},{"size":2892,"mtime":1655269876044,"results":"49","hashOfConfig":"41"},{"size":6127,"mtime":1655801074996,"results":"50","hashOfConfig":"41"},{"size":7051,"mtime":1655806599192,"results":"51","hashOfConfig":"41"},{"size":9985,"mtime":1655806599194,"results":"52","hashOfConfig":"41"},{"size":7938,"mtime":1655269876168,"results":"53","hashOfConfig":"41"},{"size":74,"mtime":1655806683187,"results":"54","hashOfConfig":"41"},{"size":38204,"mtime":1654166626112,"results":"55","hashOfConfig":"41"},{"size":38775,"mtime":1655269876050,"results":"56","hashOfConfig":"41"},{"size":17376,"mtime":1655269876047,"results":"57","hashOfConfig":"41"},{"size":15732,"mtime":1655269876064,"results":"58","hashOfConfig":"41"},{"size":1357,"mtime":1655269876167,"results":"59","hashOfConfig":"41"},{"size":57,"mtime":1655451970438,"results":"60","hashOfConfig":"41"},{"size":12510,"mtime":1655465386474,"results":"61","hashOfConfig":"41"},{"size":12336,"mtime":1655269876068,"results":"62","hashOfConfig":"41"},{"size":6236,"mtime":1655269876045,"results":"63","hashOfConfig":"41"},{"size":38081,"mtime":1655806599193,"results":"64","hashOfConfig":"41"},{"size":2352,"mtime":1655269876162,"results":"65","hashOfConfig":"41"},{"size":421,"mtime":1655269876152,"results":"66","hashOfConfig":"41"},{"size":3589,"mtime":1655703299839,"results":"67","hashOfConfig":"41"},{"size":215,"mtime":1655454743688,"results":"68","hashOfConfig":"41"},{"size":9420,"mtime":1655269876073,"results":"69","hashOfConfig":"41"},{"size":15338,"mtime":1655269876061,"results":"70","hashOfConfig":"41"},{"size":47462,"mtime":1655800714571,"results":"71","hashOfConfig":"41"},{"size":14350,"mtime":1655449546983,"results":"72","hashOfConfig":"41"},{"size":58420,"mtime":1655806599205,"results":"73","hashOfConfig":"41"},{"size":85,"mtime":1655451978574,"results":"74","hashOfConfig":"41"},{"size":2531,"mtime":1655269876162,"results":"75","hashOfConfig":"41"},{"size":11046,"mtime":1655269876062,"results":"76","hashOfConfig":"41"},{"size":3261,"mtime":1655269876169,"results":"77","hashOfConfig":"41"},{"size":7436,"mtime":1655462758292,"results":"78","hashOfConfig":"41"},{"size":280,"mtime":1655452088388,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"1brez7n",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"104"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"104"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"83"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"92"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"98"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"83"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/App.js",["175","176"],"import React, { Component } from 'react'\n\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom'\n\nimport Home from './components/home/Home'\nimport Choose from './components/choose/Choose'\nimport EzyVetLogin from './components/ezyVetLogin/EzyVetLogin'\nimport EzyVetSelectTime from './components/ezyVetSelectTime/EzyVetSelectTime'\nimport SelectMella from './components/selectMella/SelectMella'\nimport APIkey from './components/apiKey/APIKey'\nimport VerifyOrganizationInformation from './components/selectLocation/VerifyOrganizationInformation'\nimport EzyVetSelectExam from './components/ezyVetSelectExam/EzyVetSelectExam'\nimport DoctorSelectExam from './components/doctorSelectExam/DoctorSelectScheduledExam'\n\nimport DoctorSelectAllExam from './components/doctorSelectExam/DoctorSelectAllExam'\nimport Praviders from './components/praviders/Praviders'\nimport SelectExam from \"./components/selectExam/SelectExam\";\n\nimport Mesasure from \"./components/measure/Mesasure\";\nimport NorMalMeasurement from \"./components/measure/NorMalMeasurement\";\n\nimport MaxMinReturn from './utils/maxminreturn/MaxMinReturn'\nimport EditPetInfo from './components/editPetInfo/EditPetInfo'\nimport WorkPlace from './components/workPlace/WorkPlace'\n\nimport DoctorAddPet from './components/doctorAddPet/DoctorAddPet'\nimport AddYuding from './components/doctorSelectExam/AddYuding'\n//登录部分\nimport SignIn from './components/signIn/SignIn'\nimport ForgotPassword from './components/signIn/forgotPassword/ForgotPassword'\nimport ResetPassword from './components/signIn/resetPassword/ResetPassword'\n\nimport ScanCodeLogin from './components/signIn/scanCodeLogin/ScanCodeLogin'\n\n//邮箱注册的整体部分\nimport VetPrifile from './components/createAccount/vetProfile/VetPrifile'\nimport JoinOrganizationByOption from './components/createAccount/joinOrganizationByOption/JoinOrganizationByOption'\nimport FindMyOrganization from './components/createAccount/findMyOrganization/FindMyOrganization'\nimport FindMyWorkplace from './components/createAccount/findMyWorkplace/FindMyWorkplace'\nimport IsHavePMS from './components/createAccount/ishavePMS/IsHavePMS'\nimport VerifyEmail from './components/createAccount/verifyEmail/index'\nimport NewOrganization from './components/createAccount/newOrganization/NewOrganization'\nimport NewWorkplace from './components/createAccount/newWorkplace/NewWorkplace'\n\nimport InviteTeam from './components/createAccount/inviteTeam/InviteTeam'\n\n//options\nimport Help from './components/menuOptions/help/Help'\nimport Unassigned from './components/menuOptions/unassigned/Unassigned'\nimport Settings from './components/menuOptions/settings/Settings'\nimport AdvancedSettings from './components/menuOptions/advancedSettings/AdvancedSettings'\nimport Invite from './components/menuOptions/invite/Invite'\nimport PetAndParents from './components/menuOptions/petAndParents/PetAndParents'\nimport EditParent from './components/menuOptions/editParent/EditParent'\n// import AdminAddPet from './components/menuOptions/adminAddPet/AdminAddPet'\nimport Veterinarians from './components/menuOptions/admin_VetProfile/Veterinarians'\nimport AddDevice from './components/menuOptions/addDevice/AddDevice'\nimport ConnectWorkplace from './components/menuOptions/orgAndPractice/ConnectWorkplace'\nimport NewOrg from './components/menuOptions/orgAndPractice/NewOrganization'\nimport Team from './components/menuOptions/orgAndPractice/InviteTeam'\n\nimport MainBody from './components/mainbody'\n\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/page1\" component={Choose} />\n          <Route exact path=\"/ezyVetLogin\" component={EzyVetLogin} />\n          <Route exact path=\"/EzyVetSelectTime\" component={EzyVetSelectTime} />\n          <Route exact path=\"/EzyVetSelectExam\" component={EzyVetSelectExam} />\n          <Route exact path=\"/page2\" component={APIkey} />\n          <Route exact path=\"/page3\" component={VerifyOrganizationInformation} />\n          <Route exact path=\"/page4\" component={SelectMella} />\n\n\n          <Route exact path=\"/VetSpireSelectExam\" component={SelectExam} />\n          <Route exact path=\"/page7\" component={MaxMinReturn} />\n\n          <Route exact path=\"/page8\" component={Mesasure} />\n          <Route exact path=\"/page9\" component={EditPetInfo} />\n          <Route exact path=\"/page10\" component={NorMalMeasurement} />\n          {/* <Route exact path=\"/page10\" component={MainBody} /> */}\n          <Route exact path=\"/MainBody\" component={MainBody} />\n\n\n\n          <Route exact path=\"/page12\" component={WorkPlace} />\n          <Route exact path=\"/AddYuding\" component={AddYuding} />\n\n\n          <Route exact path=\"/page11\" component={SignIn} />\n          <Route exact path=\"/user/login/forgotPassword\" component={ForgotPassword} />\n          <Route exact path=\"/user/login/resetPassword\" component={ResetPassword} />\n          <Route exact path=\"/user/login/scanCodeLogin\" component={ScanCodeLogin} />\n\n          <Route exact path=\"/uesr/logUp/FindMyOrganization\" component={FindMyOrganization} />\n          <Route exact path=\"/uesr/logUp/FindMyWorkplace\" component={FindMyWorkplace} />\n          <Route exact path=\"/uesr/logUp/VetPrifile\" component={VetPrifile} />\n          <Route exact path=\"/uesr/logUp/JoinOrganizationByOption\" component={JoinOrganizationByOption} />\n          <Route exact path=\"/uesr/logUp/isHavePMS\" component={IsHavePMS} />\n          <Route exact path=\"/uesr/logUp/VerifyEmail\" component={VerifyEmail} />\n          <Route exact path=\"/uesr/logUp/NewOrganization\" component={NewOrganization} />\n          <Route exact path=\"/uesr/logUp/NewWorkplace\" component={NewWorkplace} />\n          <Route exact path=\"/uesr/logUp/InviteTeam\" component={InviteTeam} />\n\n\n\n\n\n          <Route exact path=\"/uesr/selectExam\" component={DoctorSelectExam} />\n          <Route exact path=\"/uesr/DoctorSelectAllExam\" component={DoctorSelectAllExam} />\n\n\n\n\n\n\n\n          <Route exact path=\"/pet/doctorAddPet\" component={DoctorAddPet} />\n\n          {/* options */}\n          <Route exact path=\"/menuOptions/help\" component={Help} />\n          <Route exact path=\"/menuOptions/unassigned\" component={Unassigned} />\n          <Route exact path=\"/menuOptions/settings\" component={Settings} />\n          <Route exact path=\"/menuOptions/advancedsettings\" component={AdvancedSettings} />\n          <Route exact path=\"/menuOptions/invite\" component={Invite} />\n          <Route exact path=\"/menuOptions/petAndParents\" component={PetAndParents} />\n          <Route exact path=\"/menuOptions/editParent\" component={EditParent} />\n          {/* <Route exact path=\"/menuOptions/adminAddPet\" component={AdminAddPet} /> */}\n          <Route exact path=\"/menuOptions/veterinarians\" component={Veterinarians} />\n          <Route exact path=\"/menuOptions/AddDevice\" component={AddDevice} />\n          <Route exact path=\"/menuOptions/ConnectWorkplace\" component={ConnectWorkplace} />\n          <Route exact path=\"/menuOptions/NewOrg\" component={NewOrg} />\n          <Route exact path=\"/menuOptions/Team\" component={Team} />\n\n\n\n\n\n\n\n\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\nexport default App",["177","178"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/praviders/Praviders.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectAllExam.jsx",["179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206"],"////这是普通用户的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\nimport React, { Component } from 'react'\nimport {\n  Table,\n  Input,\n  Button,\n  Space,\n  message,\n  Menu,\n  Modal,\n  Select,\n  ConfigProvider\n\n} from 'antd';\nimport Draggable from \"react-draggable\";\nimport Button1 from '../../utils/button/Button'\nimport moment from 'moment'\n//import 'antd/dist/antd.css';\nimport Heard from '../../utils/heard/Heard'\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport './doctorSelectExam.less'\n\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { FetchEszVet } from '../../utils/FetchEszVet'\nimport { fetchRequest } from '../../utils/FetchUtil1'\nimport gender from '../../utils/gender'\nimport temporaryStorage from '../../utils/temporaryStorage';\nimport { MTop, mTop, pX, px, win } from '../../utils/px';\nimport { stopBubble } from '../../utils/current'\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\nimport { fetchRhapsody } from '../../utils/FetchUtil5';\nimport jinggao from './../../assets/img/jinggao.png'\nimport redclose from './../../assets/img/redclose.png'\nimport blackTriangle from './../../assets/img/blackTriangle.png'\nimport refresh from './../../assets/img/Refresh.png'\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\n\nimport electronStore from '../../utils/electronStore';\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\nlet storage = window.localStorage;\n\n\n\nexport default class DoctorSelectAllExam extends Component {\n  state = {\n    loading: false,\n    api: '',\n    id: '',  //选择location的id\n    locations: [],\n    data: [],\n    searchData: [],\n    searchText: '',\n    searchedColumn: '',\n    seleceID: '',  //宠物医生id\n    spin: false,   //刷新按钮是否旋转\n    unixToURI: '',\n    ezyVetToken: '',\n    current: 1,\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    heardSearchText: '',\n\n    isNotFound: true,\n    modalVis: false,\n\n    disabled: true,       //model是否可拖拽\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\n\n    sortBy: 'Time',\n    showsortBy: false\n  }\n  componentWillMount () {\n    // console.log('------------', this.props.location.listDate);\n    try {\n      if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\n        // console.log('------------', this.props.location);\n        let data = JSON.parse(this.props.location.listDate)\n        this.setState({\n          data,\n        })\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount () {\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    // ipcRenderer.send('big')\n    message.destroy()\n\n\n\n    storage.identity = '3'\n\n    if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\n      let data = JSON.parse(this.props.location.listDate)\n      this.setState({\n        data,\n      })\n    } else {\n      this.setState({\n        loading: true,\n      })\n    }\n    this._getExam()\n    temporaryStorage.logupVetInfo = {}\n    temporaryStorage.logupSelectOrganization = {}\n    temporaryStorage.logupSuccessData = {}\n    temporaryStorage.logupOrganization = {}\n    temporaryStorage.logupEmailCode = ''\n\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\n    for (let i = 0; i < items.length; i++) {\n      let style = items[i].style\n      style.padding = \"5px 5px\"\n      style.textAlign = 'center'\n\n\n    }\n\n  }\n  componentWillUnmount () {\n    message.destroy()\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    this.setState({\n\n    })\n  }\n\n  rhapsody = async (patientsArr) => {\n\n    // console.log(patientsArr);\n    let dataArr = []\n    try {\n      for (let i = 0; i < patientsArr.length; i++) {\n        let params = { query: `query { patient (id:\"${patientsArr[i].patientId}\") {  vitals { data{ id, weight{value}, createdAt, updatedAt}}}}` }\n        let item = await fetchRhapsody('', 'POST', params, storage.connectionKey)\n        if (item.data) {\n\n          let { vitals } = item.data.patient\n          let vitalData = vitals.data\n          console.log('-----------', vitalData);\n          let weight = ''\n          if (vitalData.length > 0) {\n            vitalData.sort((a, b) => {\n              return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n            })\n            if (vitalData[0].weight && vitalData[0].weight.value) {\n              patientsArr[i].weight = (vitalData[0].weight.value * 0.45).toFixed(1)\n            }\n          }\n\n        }\n\n      }\n      console.log(patientsArr);\n      patientsArr.sort((a, b) => {\n        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n      })\n      this.setState({\n        data: patientsArr,\n        loading: false\n      })\n\n      electronStore.set('doctorExam', patientsArr)\n    } catch (error) {\n      this.setState({\n        loading: false,\n      })\n      message.destroy()\n      message.error('Medical record acquisition failed')\n    }\n\n\n  }\n\n  _getExam = async () => {\n    console.log('进来了');\n\n\n\n\n\n    //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\n    if (storage.lastOrganization === '34') {\n\n      console.log(storage.connectionKey);\n      //1.获取用户id\n\n      let params = { query: `query { business { id, name, state } }` }\n      fetchRhapsody('', 'POST', params, storage.connectionKey)\n\n        .then(res => {\n          console.log('---', res);\n          if (res.errors) {\n            this.setState({\n              loading: false,\n              spin: false\n            })\n            message.destroy()\n            message.error('Data acquisition failed')\n\n          } else {\n            console.log('获取到了businessId');\n            let businessId = res.data.business.id\n            // let param = {\n            //   query: `query  { patients (businessId:\"${businessId}\") { data{ id, clientId, name,gender, dateOfBirth\n            //   species{id,name},\n            //   breeds{id,name},\n            //   createdAt,owners{owner{firstName,lastName} }}}` }\n            let param = {\n              query: `query { \n                patients (businessId:\"${businessId}\") {\n                    data{ \n                         id, \n                         clientId, \n                         businessId, \n                         name  \n                         gender,\n                         dateOfBirth,\n                         species{id,name},\n                         breeds{id,name},\n                         createdAt ,\n                         owners{owner{firstName,lastName}}\n                    }\n                }\n            }`\n            }\n\n            console.log('获取病历单的入参', param, JSON.stringify(param));\n            fetchRhapsody('', 'POST', param, storage.connectionKey)\n              .then(res => {\n                console.log(res);\n                if (res.errors) {\n                  this.setState({\n                    loading: false,\n                    spin: false\n                  })\n                  message.destroy()\n                  message.error('Failed to get pet list')\n\n                } else {\n                  let patientsArr = res.data.patients.data\n                  let dataArr = []\n                  for (let i = 0; i < patientsArr.length; i++) {\n                    const patient = patientsArr[i];\n                    let { id, name, gender, dateOfBirth, breeds, owners, createdAt } = patient\n\n                    createdAt = moment(createdAt).format('X')\n                    let owner = 'unknown'\n                    if (owners.length > 0) {\n                      let ownerItem = owners[0]\n                      if (ownerItem && ownerItem.owner) {\n                        let { firstName, lastName } = ownerItem.owner\n                        if (firstName || lastName) {\n                          owner = `${lastName} ${firstName}`\n                        }\n                      }\n\n                    }\n\n                    let breed = 'unknown'\n                    if (breeds.length > 0 && breeds[0].name) {\n                      breed = breeds[0].name\n                    }\n\n                    let petAge = 'unknown'\n                    if (dateOfBirth) {\n                      petAge = moment(new Date()).diff(moment(dateOfBirth), 'years')\n                      // console.log('petAge', petAge);\n                    }\n\n                    let json = {\n                      insertedAt: createdAt,\n                      patientId: id,\n                      petName: name,\n                      owner,\n                      breed,\n                      gender: gender || 'unknown',\n                      age: petAge,\n                      petId: '',\n                      id: `${i}`,\n                      weight: null,\n                      rfid: null,\n                      url: null,\n                      speciesId: null,\n                    }\n                    dataArr.push(json)\n\n\n                  }\n\n                  console.log(dataArr);\n\n\n\n                  this.rhapsody(dataArr)\n                }\n\n              })\n              .catch(err => {\n                console.log(err);\n                this.setState({\n                  loading: false,\n                  spin: false\n                })\n                message.destroy()\n                message.error('Failed to get pet list')\n              })\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false,\n            spin: false\n          })\n          message.destroy()\n          message.error('Data acquisition failed')\n        })\n\n\n\n\n      return\n    }\n\n\n\n\n\n\n\n\n    let params = {\n      doctorId: storage.userId,\n      offset: 0,\n      size: 100,\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n\n\n\n\n\n\n\n\n\n\n\n    console.log('查询宠物的入参', params);\n    const isUnKnow = (val) => {\n      if (val) {\n        return val\n      } else {\n        return 'unknown'\n      }\n    }\n\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\n      // fetchRequest('/new/pet/subscribe/page', 'POST', params)\n\n      .then(res => {\n        console.log('查询到的宠物列表,/user/listAllPetInfo', res);\n\n        if (res.flag === true && res.data) {\n          let data = []\n          let oldList = res.data\n          // let oldList = res.data.list\n          for (let i = 0; i < oldList.length; i++) {\n            let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\n              h2tLength, torsoLength } = oldList[i]\n            let owner = ''\n            patientId = isUnKnow(patientId)\n            petName = isUnKnow(petName)\n            breedName = isUnKnow(breedName)\n            age = isUnKnow(age)\n            weight = isUnKnow(weight)\n            if (!firstName) {\n              firstName = ''\n            }\n            if (!lastName) {\n              lastName = ''\n            }\n            if (lastName === '' && firstName === '') {\n              owner = 'unknown'\n            } else {\n              owner = `${lastName} ${firstName}`\n            }\n            createTime = moment(createTime).format('X')\n            let petGender = ''\n            switch (`${gender}`) {\n              case '1': petGender = 'F'\n\n                break;\n              case '0': petGender = \"M\"\n                break;\n              default: petGender = 'unknown'\n                break;\n            }\n            let petAge = 'unknown'\n            if (birthday) {\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\n            }\n\n            let json = {\n              insertedAt: createTime,\n              patientId,\n              petName,\n              owner,\n              breed: breedName,\n              gender: petGender,\n              age: petAge,\n              petId,\n              id: i,\n              weight,\n              rfid,\n              url,\n              speciesId,\n              l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\n              h2tLength, torsoLength,\n              pethubId, macId,\n\n            }\n            data.push(json)\n\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          console.log('列表的数据：', data);\n          storage.doctorList = JSON.stringify(data)\n          this.setState({\n            data,\n            loading: false,\n            spin: false\n          })\n\n          electronStore.set('doctorExam', data)\n\n\n        } else {\n          this.setState({\n            loading: false,\n            spin: false\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false,\n          spin: false\n        })\n      })\n\n\n\n  }\n\n\n  getColumnSearchProps = dataIndex => ({\n    //dataIndex 是标题名称\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    //自定义Icon\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\n    onFilter: (value, record) => {\n      console.log(value, record, dataIndex);\n      return record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : ''\n    },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n  _refresh = () => {\n    console.log('点击了');\n    this.setState({\n      spin: true\n    })\n    // this._getData()\n    this._getExam()\n  }\n\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n\n  handleClick = e => {\n    console.log('click ', e);\n\n    switch (e.key) {\n      case '1': this.props.history.push('/page11'); break;\n      case '2': this.props.history.push('/'); break;\n      case '3':\n        try {\n\n          let selectNum = document.getElementsByClassName('ant-pagination-item-active')\n          // storage.defaultCurrent = selectNum[0].title\n          storage.doctorList = JSON.stringify(this.state.data)\n        } catch (error) {\n          console.log('错误信息', error);\n        }\n\n\n        this.props.history.push('/page8'); break;\n      case '4': this.props.history.push('/page12'); break;\n\n      default:\n        break;\n    }\n\n  };\n\n  _search1 = (search) => {       //这个是搜索调用后台的函数，现在废弃20210929\n    let params = {\n      doctorId: storage.userId,\n      petName: search,\n    }\n    this.setState({\n      loading: true\n    })\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    const isUnKnow = (val) => {\n      if (val) {\n        return val\n      } else {\n        return 'unknown'\n      }\n    }\n    console.log('搜索的数据', params);\n    fetchRequest('/pet/listPetsLike', \"POST\", params)\n      .then(res => {\n        console.log(res);\n\n        if (res.flag === true) {\n          let data = []\n          for (let i = 0; i < res.data.length; i++) {\n            let { age, createTime, patientId, petName, firstName, birthday, lastName, breedName, gender, petId, weight } = res.data[i]\n            let owner = ''\n            patientId = isUnKnow(patientId)\n            petName = isUnKnow(petName)\n            breedName = isUnKnow(breedName)\n            age = isUnKnow(age)\n            weight = isUnKnow(weight)\n            if (!firstName) {\n              firstName = ''\n            }\n            if (!lastName) {\n              lastName = ''\n            }\n            if (lastName === '' && firstName === '') {\n              owner = 'unknown'\n            } else {\n              owner = `${lastName} ${firstName}`\n            }\n            createTime = moment(createTime).format('X')\n            let petGender = ''\n            switch (`${gender}`) {\n              case '1': petGender = 'F'\n\n                break;\n              case '0': petGender = \"M\"\n                break;\n              default: petGender = 'unknown'\n                break;\n            }\n            let petAge = 'unknown'\n            if (birthday) {\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\n              // console.log('petAge', petAge);\n            }\n\n            let json = {\n              insertedAt: createTime,\n              patientId,\n              petName,\n              owner,\n              breed: breedName,\n              gender: petGender,\n              age: petAge,\n              petId,\n              id: i,\n              weight\n\n            }\n            data.push(json)\n\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          this.setState({\n            searchData: data,\n            loading: false\n          })\n        } else {\n          this.setState({\n            searchData: [],\n            loading: false\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        })\n      })\n  }\n\n  _search = (keyWord) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\n\n    /**\n     * 使用indexof方法实现模糊查询\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n     *  \n     * list         原数组\n     * keyWord      查询关键词\n     * searchData   查询的结果\n     * \n     * toLowerCase（）方法：将字符串统一转成小写\n     * toUpperCase（）方法：将字符串统一转成大写\n     * \n     */\n    this.setState({\n      loading: true\n    })\n    let list = this.state.data\n    let searchData = []\n    for (let i = 0; i < list.length; i++) {\n      let petName = list[i].petName.toLowerCase() || ''\n      let patientId = list[i].patientId.toLowerCase() || ''\n      let rfid = list[i].rfid || ''\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${rfid}`.indexOf(keyWord) !== -1\n      ) {\n        searchData.push(list[i])\n      }\n    }\n    console.log(searchData);\n    this.setState({\n      searchData,\n      loading: false\n    })\n\n\n\n\n\n  }\n\n  RFIDSearch = () => {\n    this.setState({\n      loading: true\n    })\n    fetchRequest4(`/pet/getPetInfoByRFID/${this.state.heardSearchText}/${storage.lastOrganization}`, 'GET')\n      .then(res => {\n        console.log('----RFID搜索结果', res);\n\n        if (res.flag === true && res.data) {\n          let { createTime, patientId, petName, firstName, lastName, breedName, gender, birthday, petId, rfid, weight } = res.data\n          patientId = patientId || 'unknown'\n          petName = petName || 'unknown'\n          breedName = breedName || 'unknown'\n          weight = weight || 'unknown'\n          let owner = ''\n          if (!firstName) {\n            firstName = ''\n          }\n          if (!lastName) {\n            lastName = ''\n          }\n          if (lastName === '' && firstName === '') {\n            owner = 'unknown'\n          } else {\n            owner = `${lastName} ${firstName}`\n          }\n          createTime = moment(createTime).format('X')\n          let petGender = ''\n          switch (`${gender}`) {\n            case '1': petGender = 'F'\n\n              break;\n            case '0': petGender = \"M\"\n              break;\n            default: petGender = 'unknown'\n              break;\n          }\n          let petAge = 'unknown'\n          if (birthday) {\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\n            // console.log('petAge', petAge);\n          }\n          let json = {\n            insertedAt: createTime,\n            patientId,\n            petName,\n            owner,\n            breed: breedName,\n            gender: petGender,\n            age: petAge,\n            petId,\n            id: 0,\n            weight,\n            rfid\n          }\n          let searchData = []\n          searchData.push(json)\n          this.setState({\n            searchData,\n            loading: false\n          })\n\n\n\n\n        } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\n          console.log('找到了但是不是在这个组织下');\n          this.setState({\n            loading: false,\n            modalVis: true,\n            isNotFound: false,\n            heardSearchText: ''\n          })\n        } else {\n          console.log('没有找到');\n          this.setState({\n            loading: false,\n            modalVis: true,\n            isNotFound: true,\n            heardSearchText: ''\n          })\n        }\n      })\n      .catch(err => {\n\n        console.log('抛出异常:', err);\n        this.setState({\n          loading: false,\n        })\n      })\n  }\n  draggleRef = React.createRef();\n  onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\n      }\n    });\n  };\n\n\n  render () {\n    const columns = [\n      {\n        title: 'Time',\n        dataIndex: 'insertedAt',\n        key: 'insertedAt',\n        width: '16%',\n        // ...this.getColumnSearchProps('insertedAt'),\n        render: (text, record, index) => {\n          let chazhi = new Date().getTimezoneOffset()\n          // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\n          let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\n          let time = moment(parseInt(text) * 1000).format('hh:mm a');\n          let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\n          // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\n          return (\n            <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\n              <p>{`${year}`}</p>\n              <p>{`${time}`}</p>\n            </div>\n          )\n        },\n\n      },\n      {\n        title: 'Pet ID',\n        dataIndex: 'patientId',\n        key: 'patientId',\n        width: '15%',\n        // ...this.getColumnSearchProps('patientId'),\n      },\n      {\n        title: 'Pet Name',\n        dataIndex: 'petName',\n        key: 'petName',\n        width: '15%',\n        // ...this.getColumnSearchProps('petName'),\n      },\n      {\n        title: 'Owner',\n        dataIndex: 'owner',\n        key: 'owner',\n        width: '15%',\n        // ...this.getColumnSearchProps('owner'),\n      },\n      {\n        title: 'Breed',\n        dataIndex: 'breed',\n        key: 'breed',\n        width: '15%',\n        // ...this.getColumnSearchProps('breed'),\n        render: (text, record, index) => {\n          if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\n            return (\n              <p style={{ textAlign: 'center' }}>{'unknown'}</p>\n            )\n          } else {\n            return (\n              <p style={{ textAlign: 'center' }}>{text}</p>\n            )\n          }\n\n        }\n      },\n\n      {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n        width: '12%',\n        // width: '30%',\n        // ...this.getColumnSearchProps('gender'),\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        width: '12%',\n        // width: '20%',\n        render: (text, record, index) => {\n          // console.log(text);\n\n          if (`${text}` === 'NaN') {\n            return (\n              <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\n            )\n          } else {\n            return (\n              <p style={{ textAlign: 'center' }}>{text}</p>\n            )\n          }\n\n        }\n      },\n\n\n    ];\n    const { loading, data, api, id, seleceID, spin, closeColor, closebgc, minbgc, disabled, bounds, modalVis, sortBy, showsortBy } = this.state\n\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\n    for (let i = 0; i < items.length; i++) {\n      let style = items[i].style\n      style.padding = `5px 5px`\n      style.textAlign = 'center'\n    }\n    const noData = () => {\n      return (\n        <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\n          <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\n          <a style={{ fontSize: px(22) }} href=\"#\"\n            onClick={(e) => {\n              console.log('我要去添加宠物');\n              try {\n\n                storage.doctorList = JSON.stringify(this.state.data)\n              } catch (error) {\n                console.log('错误信息', error);\n              }\n              // /pet/doctorAddPet\n              this.props.history.push({ pathname: '/pet/doctorAddPet' })\n\n              e.preventDefault();\n\n            }}\n\n          >{`go to add`}</a>\n        </div>\n      )\n    }\n\n\n\n\n\n    return (\n\n      <div id=\"doctorSelectExam\" onClick={(e) => {\n        console.log('隐藏');\n        this.setState({\n          showsortBy: false\n        })\n      }}>\n        {/* 关闭缩小 */}\n        <Heard\n          onReturn={() => {\n            this.props.history.push('/page11')\n          }}\n          onSearch={(data) => {\n\n            storage.doctorExam = JSON.stringify(data)\n\n            storage.doctorList = JSON.stringify(this.state.data)\n            if (storage.isClinical === 'true') {\n              this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\n            } else {\n              this.props.history.push({ pathname: '/page10', })\n            }\n          }}\n          menu8Click={() => {\n            this.props.history.push({ pathname: '/uesr/selectExam', })\n          }}\n          blueSearch={true}\n        />\n\n\n        <div className=\"hread flex\">\n          <div className=\"hread1 flex\" style={{ marginTop: px(30) }}>\n            <div className=\"heard1L flex\">\n              <div className=\"title\" style={{ fontSize: px(25) }}>Client Results</div>\n              <div className=\"refresh flex\"\n                style={{ fontSize: px(25), marginLeft: px(10) }}\n              >\n                <SyncOutlined onClick={this._refresh} spin={spin} />\n              </div>\n            </div>\n\n            <div className=\"walkin flex\"\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20) }}\n              onClick={() => {\n                storage.doctorExam = JSON.stringify('')\n                storage.doctorList = JSON.stringify(this.state.data)\n                if (storage.isClinical === 'true') {\n                  this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: null })\n                } else {\n                  this.props.history.push({ pathname: '/page10', })\n                }\n\n              }}\n            >Walk-In</div>\n\n          </div>\n          <div className=\"heard2 flex\" style={{ marginTop: px(8), marginBottom: px(8) }}>\n\n            <div className=\"sort flex\" >\n              <p style={{ fontSize: px(16), marginRight: px(10) }}>sort By:</p>\n\n              <SelectionBox\n                listArr={[\n                  { key: 'time', value: 'Time' },\n                  { key: 'petid', value: 'Pet ID' },\n                  { key: 'owner', value: 'Owner' },\n                  { key: 'breed', value: 'Breed' },\n                  { key: 'petname', value: 'Pet Name' },\n                  { key: 'gender', value: 'Gender' },\n                ]}\n                clickItem={(item) => {\n                  let petList = [].concat(data)\n                  switch (item.key) {\n                    case 'time':\n                      petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n                      break;\n                    case 'petid':\n                      petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n                      break;\n                    case 'owner':\n                      petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n                      break;\n                    case 'breed':\n                      petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n                      break;\n                    case 'petname':\n                      petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n                      break;\n                    case 'gender':\n                      petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n                      break;\n                  }\n\n                  this.setState({\n                    sortBy: item.value,\n                    showsortBy: false,\n                    data: petList\n                  })\n                }}\n              />\n            </div>\n\n          </div>\n        </div>\n\n\n        <div className=\"table\" >\n          <ConfigProvider renderEmpty={noData}>\n            <Table\n              style={{\n                // border: ' #979797 1px solid',\n                padding: 0,\n                margin: 0,\n                width: '95%',\n                // height: px(500)\n              }}\n              rowKey={data => data.id}\n              bordered={false}\n              columns={columns}\n              dataSource={(this.state.heardSearchText.length === 0) ? this.state.data : this.state.searchData}\n              loading={loading}\n              locale={{ filterConfirm: <div>111</div> }}\n              // pagination={{ showSizeChanger: false, showQuickJumper: true, defaultCurrent: this.state.current }}\n              pagination={false}\n              scroll={{\n                y: px(600)\n              }}\n              onRow={(record) => {\n                return {\n                  onClick: (event) => {\n\n                    console.log('record', record);\n                    storage.doctorExam = JSON.stringify(record)\n                    storage.doctorList = JSON.stringify(this.state.data)\n\n                    if (storage.isClinical === 'true') {\n                      this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.patientId })\n                    } else {\n                      this.props.history.push({ pathname: '/page10', })\n                    }\n\n\n                  }, // 点击行\n\n                };\n              }}\n            />\n          </ConfigProvider>\n        </div>\n\n        <Modal\n\n          // visible={isOrg}\n          visible={modalVis}\n          onCancel={() => this.setState({ modalVis: false })}\n          width={350}\n          footer={[]}\n          modalRender={(modal) => (\n            <Draggable\n              disabled={disabled}\n              bounds={bounds}\n              onStart={(event, uiData) => this.onStart(event, uiData)}\n            >\n              <div ref={this.draggleRef}>{modal}</div>\n            </Draggable>\n          )}\n          destroyOnClose={true}\n          wrapClassName=\"doctorSelectExamModal\"\n        >\n          <div id='doctorSelectExamModal'>\n            <div className=\"text\"\n              onMouseOver={() => {\n                if (disabled) {\n                  this.setState({\n                    disabled: false,\n                  });\n                }\n              }}\n              onMouseOut={() => {\n                this.setState({\n                  disabled: true,\n                });\n              }}\n\n            >{this.state.isNotFound ? 'Pet not found!' : 'Pet found!'}</div>\n            <div className='Img'>\n              {this.state.isNotFound ?\n                <img src={redclose} width=\"50px\" /> :\n                <img src={jinggao} width=\"50px\" />\n              }\n\n            </div>\n\n\n\n\n            {this.state.isNotFound ? <p > This pet is not on your database</p> :\n              <p >Pet Identified but does not <br /> belong to your organization.</p>}\n\n\n            <div style={{ marginTop: px(20) }}>\n              <Button1\n                text={'OK'}\n\n                onClick={() => this.setState({\n                  modalVis: false\n                })}\n              />\n            </div>\n\n\n\n\n\n\n\n\n          </div>\n\n        </Modal>\n\n\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/signIn/SignIn.jsx",["207","208","209","210","211","212","213","214","215","216","217","218","219","220","221"],"import React, { Component } from 'react'\nimport { Input, Button, message, Spin, BackTop } from 'antd';\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport './signIn.less'\nimport mellaLogo from './../../assets/images/mellaLogo.png'\nimport dui from './../../assets/images/dui.png'\nimport back_white from './../../assets/img/back-white.png'\nimport back_hui from './../../assets/img/back-hui.png'\nimport { fetchRequest } from './../../utils/FetchUtil1'\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\nimport temporaryStorage from '../../utils/temporaryStorage';\nimport { fetchRequest1 } from '../../utils/FetchUtil';\nimport { mTop, px, MTop, pX, win } from '../../utils/px';\nimport MinClose from './../../utils/minClose/MinClose'\nimport MouseDiv from './../../utils/mouseDiv/MouseDiv'\nimport { addLogin, addQRCode } from '../../utils/axios';\nlet storage = window.localStorage;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\nlet num = 0\n//有可能出现,登录成功跳转后获取到了二维码,这样就会导致出现一直轮询,未解决这个问题设置变量isSign\nlet isSign = true\n\nexport default class SignIn extends Component {\n\n  state = {\n    isRemember: false,\n    email: '',\n    hash: '',\n    isCode: false,\n    baseUrl: '',\n    QRToken: '',\n    isExpired: false,  //二维码是否过期\n    spin: false,\n    isLoadQrCode: false //是否正在加载二维码\n\n  }\n  componentDidMount() {\n    isSign = true\n    storage.lastOrganization = ''\n    //通知main.js渲染一个small窗口\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('small', win())\n    //如果有保存的账号密码则展示出来\n    if (storage.signIn !== undefined && storage.signIn !== '') {\n      let data = storage.signIn\n      data = JSON.parse(data)\n      this.setState({\n        email: data.email,\n        hash: data.hash,\n        QRToken: ''\n      })\n    }\n    //是否勾选了保持登录\n    if (storage.isRemember !== undefined) {\n      let isRemember = storage.isRemember === 'true' ? true : false\n      this.setState({\n        isRemember\n      })\n    }\n    // 监听分辨率是否改变\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n    //清空本地的注册界面的信息\n    temporaryStorage.logupVetInfo = {}\n    this._getQRCode()\n\n  }\n  componentWillUnmount() {\n    isSign = false\n    this.timer && clearInterval(this.timer)\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    // ipcRenderer.send('small')\n    ipcRenderer.send('small', win())\n    this.setState({\n\n    })\n  }\n  _getQRCode = () => {\n    this.setState({\n      isLoadQrCode: true\n    })\n    num = 0\n    fetchRequest2('/user/getLoginQRcode', \"GET\", '')\n      // addQRCode()\n      .then(res => {\n        message.destroy()\n\n        console.log('---获取二维码', res);\n        if (res.flag === true) {\n          this.setState({\n            baseUrl: res.data.QRcode,\n            QRToken: res.data.QRToken,\n            isLoadQrCode: false\n          })\n          this.timer = setInterval(() => {\n            if (!isSign) {\n              this.timer && clearInterval(this.timer)\n\n            }\n            num++\n            console.log('lunxin');\n            this._polling()\n\n            if (num > 280) {   //超过280秒则去显示二维码过期，要重新获取\n              this.setState({\n                isExpired: true\n              })\n              num = 0\n              this.timer && clearInterval(this.timer)\n            }\n          }, 1000);\n        } else {\n          message.error('Failed to obtain QR code', 10)\n          this.setState({\n            isLoadQrCode: false\n          })\n        }\n      })\n      .catch(err => {\n        message.error('Failed to obtain QR code', 10)\n        this.setState({\n          isLoadQrCode: false\n        })\n        console.log(err);\n      })\n  }\n  //轮询\n  _polling = () => {\n    fetchRequest2(`/user/loginWithQRcode/${this.state.QRToken}`)\n      .then(res => {\n        console.log('轮询结果：', res);\n        if (res.flag === true) {\n          switch (res.code) {\n            case 10001:\n              console.log('未扫码');\n\n              break;\n\n            case 11033:\n              console.log('扫码未点击登录');\n              this.timer && clearInterval(this.timer)\n              temporaryStorage.QRToken = this.state.QRToken\n              let { name, url } = res.data\n              this.props.history.replace({ pathname: '/user/login/scanCodeLogin', params: { name, url } })\n\n              break;\n\n            case 11023:\n              console.log('过期');\n              this.setState({\n                isExpired: true\n              })\n              num = 0\n              this.timer && clearInterval(this.timer)\n\n              break;\n\n            default:\n              break;\n          }\n        }\n        console.log('code', res.code);\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n\n  //登录接口\n  _continue = () => {\n    const { email, hash, isRemember } = this.state\n\n\n    message.destroy()\n    let params = {\n      email: email.replace(/(^\\s*)/g, \"\"),\n      hash,\n      identityTypeId: '1'\n    }\n    if (email === '') {\n      message.error('please input your email')\n      return\n    }\n    if (hash === '') {\n      message.error('please input your password')\n      return\n    }\n    console.log(params);\n    this.setState({\n      spin: true\n    })\n    // fetchRequest('/user/mellaLogin', 'POST', params)\n    addLogin(params)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          spin: false\n        })\n        if (res.status && res.status === 404) {\n          message.error('system error');\n          return\n        }\n        if (res.status === 500) {\n          message.error('system error');\n\n          return\n        }\n        if (res.code === 10001 && res.msg === '账号错误') {\n          message.error('Account error');\n          return\n        }\n        if (res.code === 10002 && res.msg === '密码错误') {\n          message.error('wrong password')\n          return;\n        }\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\n          return\n        }\n        if (res.code === 10004 && res.msg === '账号被限制') {\n          message.error('The account is restricted, please contact the management', 10)\n          return\n        }\n        if (res.code === 10003) {\n          message.error('The password or email is incorrect, please re-enter')\n          return\n        }\n\n\n        if (res.code === 0 && res.msg === 'success') {\n          this.timer && clearInterval(this.timer)\n          console.log('账号密码正确，登录进去了');\n          let { userWorkplace, lastOrganization, token } = res.success\n          storage.token = token\n          storage.userId = ''\n          let data = {\n            email: email.replace(/(^\\s*)/g, \"\"),\n            hash\n          }\n          data = JSON.stringify(data)\n          if (isRemember === true) {\n\n\n            storage.signIn = data\n          } else {\n            storage.signIn = ''\n          }\n          storage.saveSign = data\n\n\n          storage.userId = res.success.userId\n          storage.roleId = res.success.roleId\n\n          //每次登陆后清空宠物列表缓存的数据\n          storage.doctorList = ''\n          storage.defaultCurrent = ''\n\n          //由于后台接口原因，导致这里的最后工作场所可能不是自己的，因此下面全注释掉。改成如果有多个工作场所则跳转到选择工作场所界面，不是多个则跳转到选择宠物界面\n          if (res.success.lastWorkplaceId) {\n            storage.lastWorkplaceId = res.success.lastWorkplaceId\n          } else {\n            storage.lastWorkplaceId = ''\n          }\n\n          if (res.success.lastOrganization) {\n            storage.lastOrganization = res.success.lastOrganization\n          } else {\n            storage.lastOrganization = ''\n          }\n\n\n          console.log('----------', userWorkplace, userWorkplace.length);\n\n          if (userWorkplace) {\n            storage.userWorkplace = JSON.stringify(userWorkplace)\n            let connectionKey = ''\n            for (let i = 0; i < userWorkplace.length; i++) {\n              const element = userWorkplace[i];\n              if (element.organizationEntity) {\n                if (element.organizationEntity.organizationId === lastOrganization) {\n\n                  if (element.organizationEntity.connectionKey) {\n                    connectionKey = element.organizationEntity.connectionKey\n                  }\n                  if (element.roleId) {\n                    console.log(element.roleId);\n                    storage.roleId = element.roleId\n                  }\n\n                  break\n                }\n              }\n\n            }\n            console.log('----------key值为：', connectionKey);\n            storage.connectionKey = connectionKey\n\n          } else {\n            storage.userWorkplace = ''\n            storage.connectionKey = ''\n\n          }\n\n\n\n\n\n\n\n          this.props.history.push('/MainBody')\n        }\n\n\n\n      })\n      .catch(err => {\n        this.setState({\n          spin: false\n        })\n        console.log(err);\n      })\n\n\n  }\n\n  _signUp = (e) => {\n    e.preventDefault();\n    this.props.history.push('/uesr/logUp/VetPrifile')\n  }\n  _change = () => {\n    let { isCode } = this.state\n    message.destroy()\n    if (isCode === false) {\n      this._getQRCode()\n    } else {\n      this.timer && clearInterval(this.timer)\n      num = 0\n      this.setState({\n        isExpired: false\n      })\n    }\n    this.setState({ isCode: !this.state.isCode })\n  }\n  //二维码界面\n  _qrCode = () => {\n    let { isCode, baseUrl, isExpired, isLoadQrCode } = this.state\n    let imgOpacity = isLoadQrCode\n      ? baseUrl ? '0.1' : 0.5\n      : '1'\n\n\n    if (!isExpired) {\n      const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n      return (\n        <div className=\"qrcode\" >\n          <img\n            src={`data:image/jpeg;base64,${baseUrl}`}\n            alt=\"\"\n            style={{ opacity: '1', width: px(120), height: px(120), opacity: imgOpacity }}\n\n          />\n          {\n            isLoadQrCode &&\n            // true &&\n\n            <div className=\"err\">\n              <Spin\n                indicator={antIcon}\n                tip=\"Loading...\"\n                style={{ fontSize: 16, color: '#e1206d', }} />\n            </div>\n\n          }\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"qrcode\">\n          <img src={`data:image/jpeg;base64,${baseUrl}`} alt=\"\" style={{ opacity: '0.1', width: px(120), height: px(120), }} />\n\n          <div className=\"err\">\n            <div className=\"errText\">QR code has expired</div>\n            <div className=\"btn\"\n              style={{ width: px(145), height: px(35), marginTop: px(10) }}\n              onClick={this.refresh}>Refresh</div>\n          </div>\n        </div>\n      )\n    }\n\n  }\n  //点击refresh按钮\n  refresh = () => {\n    this.setState({\n      isExpired: false\n    })\n    num = 0\n    this._getQRCode()\n\n  }\n  beforeDiv = () => {\n    return (\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\n    )\n  }\n  afterDiv = () => {\n    return (\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\n    )\n\n  }\n\n  render() {\n    let { isCode, baseUrl } = this.state\n    let code = isCode ? 'icon-diannao-copy' : 'icon-erweima-copy'\n    return (\n      <div id=\"signIn\">\n        <div className=\"heaed\" style={{ paddingTop: px(10), paddingRight: px(20) }}>\n          <div className=\"l\" >\n            <MouseDiv\n              className='mouseDiv'\n              beforeDiv={this.beforeDiv}\n              afterDiv={this.afterDiv}\n              divClick={() => {\n                this.props.history.push('/')\n              }}\n            />\n          </div>\n          <div className=\"r\">\n\n            < MinClose\n\n            />\n          </div>\n        </div>\n\n\n        <div className=\"body\" >\n          <div className=\"logo\">\n            <img src={mellaLogo} alt=\"\" style={{ width: px(120) }} />\n          </div>\n          <div className=\"body\" style={{ position: 'relative' }}>\n            <div className=\"text\"\n              style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(30), }}\n            >\n              Please enter email <br />and password\n            </div>\n\n            <div className=\"inpF\">\n              <Input className='inp'\n                style={{ width: px(310), height: px(45), marginLeft: px(6), marginBottom: px(18), fontSize: px(18) }}\n                value={this.state.email}\n                placeholder='rachel@friends.com'\n                bordered={false}\n                onChange={(item) => {\n                  let str = item.target.value\n                  this.setState({\n                    email: str\n                  })\n                }}\n              />\n              <Input.Password className='inp'\n                style={{ width: px(310), height: px(45), marginLeft: px(6), marginBottom: px(18), fontSize: px(18) }}\n\n                visibilityToggle={false}\n                // style={{ border: 'none', outline: 'medium' }}\n                value={this.state.hash}\n                placeholder='********'\n                bordered={false}\n                onChange={(item) => {\n                  let str = item.target.value\n                  this.setState({\n                    hash: str\n                  })\n                }}\n              />\n\n              <div className=\"text\"\n                style={{ fontSize: px(28), lineHeight: px(1), marginTop: px(10), marginBottom: px(20) }}\n              >\n                {'Or scan QR Code'}\n              </div>\n            </div>\n\n            {\n              this._qrCode()\n            }\n            <div className=\"littleText flex\" style={{ fontSize: px(12), marginTop: px(10), marginBottom: px(10) }}>\n              Go to your Mella mobile app to access<br />\n              the QR scanner\n            </div>\n            <div className=\"stay\" >\n              <div className=\"remember\">\n                <p style={{ fontSize: px(16) }}>Stay Signed In</p>\n                <div className=\"box\"\n                  style={{ width: px(20), height: px(20), marginLeft: px(12) }}\n                  onClick={() => {\n                    let { isRemember } = this.state\n                    this.setState({\n                      isRemember: !isRemember\n                    })\n                    storage.isRemember = !isRemember\n\n                  }}>\n                  {this.state.isRemember && <img src={dui} alt=\"\" />}\n                </div>\n              </div>\n              <div className=\"forgot\"\n                style={{ fontSize: px(16) }}\n                onMouseDown={() => {\n                  let forget = document.querySelectorAll('#signIn .forgot')\n                  forget[0].style.opacity = 0.5\n                }}\n                onMouseUp={() => {\n                  document.querySelectorAll('#signIn .forgot')[0].style.opacity = 1\n                  if (this.state.email) {\n                    temporaryStorage.forgotPassword_email = this.state.email\n                  }\n\n                  this.props.history.push('/user/login/forgotPassword')\n                }}\n              >Forgot?</div>\n\n\n            </div>\n\n\n          </div>\n        </div>\n\n\n        <div className=\"button11\" style={{ backgroundColor: '#E7E7E7', padding: `${px(32)}px 0` }} >\n\n          <div className=\"btn1 flex\"\n            onClick={this._continue}\n            style={{ height: px(40) }}>\n            <p>{`CONTINUE`}</p>\n          </div>\n\n          <div className=\"text2\" style={{ marginTop: px(12) }}>\n            <p style={{ fontSize: px(17) }}>Do not have an account? <a href=\"#\" onClick={this._signUp}>Sign Up</a></p>\n          </div>\n\n        </div>\n\n\n\n\n        {\n          this.state.spin &&\n          <div className=\"modal\">\n            <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: px(-30), }} />\n\n\n            </div>\n            <p>\n              loading...\n            </p>\n          </div>\n        }\n\n\n\n      </div>\n    )\n  }\n}\n\n",["222","223"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/ishavePMS/IsHavePMS.jsx",["224","225","226"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/invite/Invite.jsx",["227","228","229","230","231","232","233"],"import React, { Component, } from 'react'\nimport {\n  Tag,\n  Input,\n  Tooltip,\n  message,\n  // Button\n} from 'antd';\nimport Draggable from \"react-draggable\";\nimport { createFromIconfontCN, CaretDownFilled, PlusOutlined } from '@ant-design/icons';\n//import 'antd/dist/antd.css';\n\nimport './invite.less'\nimport imgArray from './../../../utils/areaCode/imgArray'\nimport MaxMin from './../../../utils/maxminreturn/MaxMinReturn'\nimport { fetchRequest } from './../../../utils/FetchUtil1'\nimport temporaryStorage from '../../../utils/temporaryStorage'\nimport { fetchRequest2 } from '../../../utils/FetchUtil2';\nimport { mTop, px } from '../../../utils/px';\nimport Button from './../../../utils/button/Button'\nimport MyModal from '../../../utils/myModal/MyModal';\nlet storage = window.localStorage;\n\nexport default class Invite extends Component {\n\n  state = {\n\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n    visible: false\n  }\n\n  componentDidMount () {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n  }\n  componentWillUnmount () {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n    this.setState({\n\n    })\n  }\n\n\n  handleClose = removedTag => {\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\n    console.log(tags);\n    this.setState({ tags });\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n    const { inputValue } = this.state;\n    let { tags } = this.state;\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      console.log('输入的内容为：', inputValue);\n      message.destroy()\n      fetchRequest(`/user/checkUser/${inputValue}`, 'GET', '')\n        .then(res => {\n          console.log(res);\n          if (res.code === 11011) {\n            console.log('邮箱号以被注册，是否忘记密码');\n            tags = [...tags, inputValue];\n            console.log(tags);\n\n            this.setState({\n              tags,\n              inputVisible: false,\n              inputValue: '',\n            });\n          }\n          else {\n            message.error('This mailbox was not found!', 3)\n            this.setState({\n              inputVisible: false,\n              inputValue: '',\n            });\n          }\n        })\n        .catch(err => {\n          message.error(`Error:${err.message}`)\n          console.log('检测邮箱号的接口出错了', err);\n        })\n\n\n    }\n\n  };\n\n\n  saveInputRef = input => {\n    this.input = input;\n  };\n\n  saveEditInputRef = input => {\n    this.editInput = input;\n  };\n\n  _next = () => {\n    message.destroy()\n    let { tags } = this.state\n    let userId = storage.userId\n    let organizationId = storage.lastOrganization\n    console.log({ tags, userId, organizationId });\n    if (tags.length === 0) {\n      message.error('Please enter the invitation email')\n      return\n    }\n    this.setState({\n      visible: true\n    })\n    fetchRequest2(`/user/inviteUserByEmail/${userId}/${organizationId}`, \"POST\", tags)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          visible: false\n        })\n        if (res.flag === true) {\n          console.log('成功，跳转');\n          message.success('Invitation successful', 3)\n          this.props.history.goBack()\n\n        } else {\n          message.error('Invitation failed')\n\n        }\n\n      })\n      .catch(err => {\n        this.setState({\n          visible: false\n        })\n        console.log(err);\n        message.error(err.message, 3)\n      })\n  }\n  render () {\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\n    console.log('---', editInputIndex);\n    return (\n      <div id=\"inviteTeam\" >\n        {/* 关闭缩小 */}\n        <div className=\"heard\">\n          <MaxMin\n            onClick={() => { this.props.history.push('/') }}\n            onClick1={() => this.props.history.goBack()}\n          />\n          <div className=\"text\">Invite your Team</div>\n\n          <div className=\"addF\">\n            <p>To:</p>\n            <div className=\"add\">\n\n              <>\n                {tags.map((tag, index) => {\n                  const isLongTag = tag.length > 25;  //标签里面的字符串的长度\n\n                  const tagElem = (\n                    <Tag\n                      className=\"edit-tag\"\n                      key={tag}\n                      closable={true}\n                      onClose={() => this.handleClose(tag)}\n                    >\n                      <span>\n                        {isLongTag ? `${tag.slice(0, 25)}...` : tag}\n                      </span>\n                    </Tag>\n                  );\n                  return isLongTag ? (\n                    <Tooltip title={tag} key={tag}>\n                      {tagElem}\n                    </Tooltip>\n                  ) : (\n                    tagElem\n                  );\n                })}\n                {inputVisible && (\n                  <Input\n                    ref={this.saveInputRef}\n                    type=\"text\"\n                    size=\"small\"\n                    className=\"tag-input\"\n                    value={inputValue}\n                    onChange={this.handleInputChange}\n                    onBlur={this.handleInputConfirm}\n                    onPressEnter={this.handleInputConfirm}\n                  />\n                )}\n                {!inputVisible && (\n                  <Tag className=\"site-tag-plus\" onClick={this.showInput}>\n                    <PlusOutlined />Press Enter to add mailbox\n                  </Tag>\n                )}\n              </>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"btn\"\n          style={{ padding: `${px(40)}px 0` }}\n        >\n\n          {/* <Button\n            type=\"primary\"\n            shape=\"round\"\n            size='large'\n            htmlType=\"submit\"\n            onClick={this._next}\n            text={'Send'}\n          >\n\n          </Button> */}\n\n          <Button\n\n            onClick={this._next}\n            text={'Send'}\n            textBoxStyle={{ height: px(45), width: '45%' }}\n          >\n\n          </Button>\n        </div>\n        <MyModal visible={this.state.visible} />\n\n      </div>\n\n\n    )\n  }\n}",["234","235"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/InviteTeam.jsx",["236","237","238","239","240","241","242","243","244","245"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil5.js",["246","247","248","249"],"\n\nlet COMMON_URL = 'https://api.rhapsody.vet/graphql';//集成Rhapsody\nlet token = '';\n\n//'/v1/appUser/login', 'POST', params\nexport function fetchRhapsody (url, method, params = '', token = '') {\n\n  if (method === 'GET' || method === 'DELETE') {\n    let headers = null\n    if (token !== '') {\n      headers = {\n        'authorization': token,\n      };\n    }\n    if (params == '') {\n      return new Promise(function (resolve, reject) {\n        fetch(COMMON_URL + url, {\n          method: method,\n          headers\n        }).then((Response) => Response.json())\n          .then((responseData) => {\n            resolve(responseData)\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    } else {\n      // 定一个空数组\n      let paramsArray = [];\n      //  拆分对象\n      Object.keys(params).forEach(key =>\n        paramsArray.push(key + \"=\" + params[key])\n      );\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \n      if (url.search(/\\?/) === -1) {\n        url = url + \"?\" + paramsArray.join(\"&\");\n      } else {\n        url = url + \"&\" + paramsArray.join(\"&\");\n      }\n      return new Promise(function (resolve, reject) {\n        fetch(COMMON_URL + url, {\n          method: method,\n          headers\n        }).then((response) => response.json())\n          .then((responseData) => {\n            resolve(responseData);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    }\n  } else if (method === 'POST') {\n\n\n    let header = {\n      \"Content-type\": \"application/json\"\n    };\n    if (token !== '') {\n      header = {\n        'authorization': token,\n        \"Content-type\": \"application/json\"\n      };\n    }\n    if (params == '') {\n      return new Promise(function (resolve, reject) {\n        fetch(COMMON_URL + url, {\n          method: method,\n          headers: header\n        }).then((Response) => Response.json())\n          .then((responseData) => {\n            resolve(responseData)\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    } else {\n      return new Promise(function (resolve, reject) {\n        fetch(COMMON_URL + url, {\n          method: method,\n          // mode: 'cors',\n          headers: header,\n          body: JSON.stringify(params),\n        }).then((response) => response.json())\n          .then((responseData) => {\n            resolve(responseData);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    }\n  } else {\n    let header = {\n      \"Content-type\": \"application/merge-patch+json\",\n      authorization: token\n    };\n    if (params == '') {\n      return new Promise(function (resolve, reject) {\n        fetch(COMMON_URL + url, {\n          method: method,\n          headers: header\n        }).then((Response) => Response.json())\n          .then((responseData) => {\n            resolve(responseData)\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    } else {\n      return new Promise(function (resolve, reject) {\n        fetch(COMMON_URL + url, {\n          method: method,\n          headers: header,\n          body: JSON.stringify(params),\n        }).then((response) => response.json())\n          .then((responseData) => {\n            resolve(responseData);\n          })\n          .catch((err) => {\n            reject(err);\n          });\n      });\n    }\n  }\n}\n",["250","251"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/avatar/Avatar.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/PetsUI.jsx",["252","253","254"],"import React, { useEffect, useState } from 'react'\nimport {\n  Dropdown,\n  Menu,\n} from 'antd'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { px } from '../../utils/px'\nimport { petSortTypeFun, petDetailInfoFun, setPetListArrFun } from '../../store/actions'\nimport electronStore from '../../utils/electronStore'\nimport petIcon from './../../assets/img/petIcon.png'\nimport xia from './../../assets/img/xia.png'\n\nimport { devicesTitleHeight } from '../../utils/InitDate'\n\n\nimport './mainbody.less'\nimport { fetchRequest } from '../../utils/FetchUtil1';\n\nlet storage = window.localStorage;\n\n\nconst PetsUI = ({ bodyHeight, petSortTypeFun, petSortType, petDetailInfoFun, petDetailInfo, setPetListArrFun, petListArr }) => {\n  //定义宠物列表数组\n  const [petList, setPetList] = useState([])\n\n  useEffect(() => {\n    //设置宠物列表数据\n    setPetList(petListArr)\n  }, [petListArr])\n\n  useEffect(() => {\n    //从本地获取宠物列表数据\n    // let petList = electronStore.get('petList') || [];\n    setPetList(petList)\n    _getExam()\n  }, [])\n\n  //获取宠物列表数据\n  const _getExam = () => {\n\n    let params = {\n      doctorId: storage.userId,\n      offset: 0,\n      size: 100,\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n    console.log('查询宠物的入参', params);\n\n\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\n      .then(res => {\n        console.log('查询所有宠物', res);\n        if (res.flag === true && res.data) {\n          let oldList = res.data\n          let petArr = dataSort(oldList)\n          setPetList(petArr)\n          setPetListArrFun(petArr)\n        } else {\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n\n      })\n  }\n  const dataSort = (data) => {\n    let petList = [].concat(data)\n    switch (petSortType) {\n      case 'Time':\n        petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n        break;\n      case 'Pet ID':\n        petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n        break;\n      case 'Owner':\n        petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n        break;\n      case 'Breed':\n        petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n        break;\n      case 'Pet Name':\n        petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n        break;\n      case 'Gender':\n        petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n        break;\n    }\n    return petList\n\n\n\n  }\n\n\n  const menu = () => {\n    let menuList = [\n      { value: 'Time' },\n      { value: 'Pet ID' },\n      { value: 'Owner' },\n      { value: 'Breed' },\n      { value: 'Pet Name' },\n      { value: 'Gender' },\n    ];\n    let options = menuList.map((item, index) => {\n      let itemstyle = {}, textColor = '#1a1a1a'\n      if (petSortType === item.value) {\n        itemstyle = { backgroundColor: '#e1206D' }\n        textColor = '#fff'\n      }\n      return (\n        <Menu.Item style={itemstyle} key={`${item.value}`}>\n          <div style={{ color: textColor }}>{item.value}</div>\n        </Menu.Item>\n      )\n    })\n    return (\n      <Menu onClick={({ key, }) => {\n        petSortTypeFun(key)\n        let petArr = dataSort(petList)\n        setPetList(petArr)\n        setPetListArrFun(petArr)\n      }}>\n        {options}\n\n      </Menu>\n    );\n  }\n  const petListUI = () => {\n    let options = petList.map((item, index) => {\n      let itemBac = '#E7E7E7', itemColor = '#141414'\n      if (item.petId === petDetailInfo.petId) {\n        itemBac = '#e1206D'\n        itemColor = '#fff'\n      }\n      return (\n        <li key={index} >\n          <div className='petItem'\n            style={{ padding: `${px(7)}px 0 ${px(7)}px ${px(20)}px`, fontSize: 14, backgroundColor: itemBac, color: itemColor }}\n            onClick={() => {\n              console.log('点击了宠物', item);\n              petDetailInfoFun(item)\n            }}\n          >\n            {`${item.patientId}, ${item.petName}`}\n          </div>\n        </li>\n      )\n\n    })\n\n    return (\n      <div className=\"petList\" style={{ marginTop: px(10), height: bodyHeight - devicesTitleHeight - px(220) }}>\n        <ul>\n          {options}\n        </ul>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"PetUI\" style={{ height: bodyHeight - devicesTitleHeight, }}>\n      <div className=\"title\" style={{ padding: `${px(20)}px 0px ${px(20)}px ${px(20)}px ` }}>\n        <img src={petIcon} alt=\"\" width={px(25)} style={{ marginRight: px(10) }} />\n        <div className=\"titleText\" >Pets</div>\n      </div>\n      <div className=\"sort\" style={{ paddingLeft: px(20) }}>\n        <Dropdown overlay={menu} trigger={['click']}>\n          <div className=\"sortBox\">\n            <img src={xia} alt=\"\" width={px(20)} style={{ marginRight: px(10) }} />\n            <div className=\"sortText\" >\n              {`Sort by: ${petSortType}`}\n            </div>\n          </div>\n        </Dropdown>\n      </div>\n      {petListUI()}\n\n      <div className=\"walkBtn\">\n        <div\n          className=\"walkbtnBox\"\n          style={{ height: px(40), marginTop: px(30) }}\n          onClick={() => {\n            let json = {\n              isWalkIn: true,\n              petId: null,\n              petName: null,\n              owner: null,\n              breed: null,\n\n            }\n            petDetailInfoFun(json)\n          }}\n        >\n          <div className=\"walkText\">Walk-In</div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n\n\nPetsUI.propTypes = {\n  bodyHeight: PropTypes.number\n}\n//默认值\nPetsUI.defaultProps = {\n  bodyHeight: 0\n}\nexport default connect(\n  state => ({\n    petSortType: state.petReduce.petSortType,\n    petDetailInfo: state.petReduce.petDetailInfo,\n    petListArr: state.petReduce.petListArr,\n  }),\n  { petSortTypeFun, petDetailInfoFun, setPetListArrFun }\n)(PetsUI)","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/HardListModal.jsx",["255"],"import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { px } from '../../utils/px'\nimport { selectHardwareInfoFun, selectHardwareModalShowFun } from './../../store/actions'\nimport electronStore from '../../utils/electronStore'\n\nimport deviceBiggie from './../../assets/img/deviceIcon-biggie.png'\nimport nextImg from './../../assets/img/nextImg.png'\nimport dui from './../../assets/img/dui.png'\nimport deviceMella from './../../assets/img/deviceIcon-mella.png'\nimport deviceRfid from './../../assets/img/deviceIcon-rfid.png'\nimport deviceMaeBowl from './../../assets/img/deviceIcon-maeBowl.png'\nimport deviceTape from './../../assets/img/deviceIcon-tape.png'\nimport deivceAdd from './../../assets/img/hardList-add.png'\nimport scales from './../../assets/img/scales.png'\nimport './mainbody.less'\nimport { compareObject } from '../../utils/current'\n\nlet storage = window.localStorage;\nconst HardAndPetsUI = ({ hardwareList, selectHardwareType, selectHardwareInfoFun, selectHardwareModalShowFun, setInfo }) => {\n  //定义数组hardwareList\n  const [hardwareListArr, setHardwareList] = useState([])\n  //定义选择的硬件详细信息\n  const [selectHardwareDetail, setSelectHardwareDetail] = useState({})\n  useEffect(() => {\n    //根据设备类型获取到此类型下的所有硬件,并用来展示\n    for (let i = 0; i < hardwareList.length; i++) {\n      const element = hardwareList[i];\n      if (element.type === selectHardwareType) {\n        let list = element.devices || []\n        setHardwareList(list)\n        //获取被选中的硬件的详细信息\n        let selectHardwareInfo = electronStore.get(`${storage.lastOrganization}-${storage.userId}-${selectHardwareType}-selectDeviceInfo`) || {}\n        console.log('------=========--------', selectHardwareInfo);\n        if (selectHardwareInfo === {}) {\n          let selectHardwareInfo = list[0] || {}\n          setSelectHardwareDetail(selectHardwareInfo)\n        } else {\n          let sameFlag = false\n          for (let i = 0; i < list.length; i++) {\n            const element = list[i];\n            if (element.name === selectHardwareInfo.name && element.mac === selectHardwareInfo.mac) {\n              setSelectHardwareDetail(selectHardwareInfo)\n              sameFlag = true\n              break\n            }\n          }\n          console.log('sameFlag', sameFlag);\n          if (!sameFlag) {\n            console.log('设置了默认值');\n            let selectHardwareInfo = list[0] || {}\n            setSelectHardwareDetail(selectHardwareInfo)\n          }\n        }\n        break\n      }\n    }\n\n\n\n\n  }, [selectHardwareType])\n\n\n  let options = hardwareListArr.map((item, index) => {\n\n    let { name, mac, deviceType } = item\n    let deviceTypeStr = '', img = null\n    switch (deviceType) {\n      case 'biggie': deviceTypeStr = 'Biggie Pro Scale'\n        img = <img src={deviceBiggie} alt=\"\" width={px(75)} />\n        break;\n      case 'rfid': deviceTypeStr = 'RFID'\n        img = <img src={deviceRfid} alt=\"\" width={px(40)} />\n        break;\n      case 'tape': deviceTypeStr = 'Tabby'\n        img = <img src={deviceTape} alt=\"\" width={px(50)} />\n        break;\n      case 'maeBowl': deviceTypeStr = 'MaeBowl'\n        img = <img src={deviceMaeBowl} alt=\"\" width={px(40)} />\n\n        break;\n      case 'otterEQ': deviceTypeStr = 'Otter EQ'\n\n        break;\n      case 'mellaPro': deviceTypeStr = 'Mella Pro'\n        img = <img src={deviceMella} alt=\"\" width={px(20)} />\n        break;\n\n\n\n      default:\n        break;\n    }\n    //判断对象是否相等\n\n    let isEqual = compareObject(item, selectHardwareDetail)\n    console.log('判断两个对象是否相同', isEqual, item, selectHardwareDetail);\n    return <li key={`${index}`}\n      onClick={() => {\n        setSelectHardwareDetail(item)\n        electronStore.set(`${storage.lastOrganization}-${storage.userId}-${deviceType}-selectDeviceInfo`, item)\n        selectHardwareInfoFun(item)\n        setInfo && setInfo(item)\n\n      }}>\n      <div className=\"hardListInfo\" style={{ paddingTop: px(15), paddingBottom: px(15) }}>\n        <div className=\"deviceL\" >\n          <div className=\"hardIcon\" style={{ marginLeft: px(3), marginRight: px(3), width: px(75) }}>\n            {img}\n          </div>\n          <div className=\"deviceInfo\">\n            <div className=\"deviceName\" >{`Device Name: ${name}`}</div>\n            <div className=\"deviceName\" >{deviceTypeStr}</div>\n            <div className=\"deviceName\" >{`SN: ${mac}`}</div>\n\n          </div>\n        </div>\n\n        <div className=\"deviceR\" style={{ marginRight: px(20) }}>\n          <img src={nextImg} alt=\"\" width={px(13)} />\n          {\n            isEqual && <div className=\"seleIcon\" style={{ width: px(18), height: px(18), top: px(-30) }}>\n              <img src={dui} alt=\"\" width={px(12)} />\n            </div>\n          }\n\n        </div>\n      </div>\n    </li>\n  }\n  )\n  const otherItems = () => {\n    let deviceType = selectHardwareDetail.deviceType\n    let isBiggie = deviceType === 'biggie', deviceTypeStr = ''\n    switch (deviceType) {\n      case 'biggie': deviceTypeStr = 'Biggie'\n        break;\n      case 'rfid': deviceTypeStr = 'RFID'\n        break;\n      case 'tape': deviceTypeStr = 'Tabby'\n\n        break;\n      case 'maeBowl': deviceTypeStr = 'MaeBowl'\n\n        break;\n      case 'otterEQ': deviceTypeStr = 'Otter EQ'\n        break;\n      case 'mellaPro': deviceTypeStr = 'Mella'\n        break;\n      default:\n        break;\n    }\n    console.log('selectHardwareDetail', selectHardwareDetail);\n    return (\n      <div>\n        {isBiggie &&\n          <div className=\"addNewDevice\"\n            style={{ paddingTop: px(10), paddingBottom: px(10) }}\n\n\n          >\n            <div className=\"addNewDeviceText\" style={{ paddingLeft: px(25) }}>{`Combine Scales`}</div>\n            <div className=\"addNewDeviceImg\">\n              <img src={scales} alt=\"\" width={px(30)} style={{ marginRight: px(20) }} />\n            </div>\n          </div>\n        }\n        <div className=\"addNewDevice\" style={{ paddingTop: px(10), paddingBottom: px(10) }}>\n          <div className=\"addNewDeviceText\" style={{ paddingLeft: px(25) }}>{`Add New ${deviceTypeStr}`}</div>\n          <div className=\"addNewDeviceImg\">\n            <img src={deivceAdd} alt=\"\" width={px(30)} style={{ marginRight: px(20) }} />\n          </div>\n        </div>\n      </div>\n\n\n    )\n\n  }\n\n  return (\n    <div className=\"hardList\"\n      style={{ top: px(90),zIndex:999 }}\n      onClick={(e) => {\n        e.stopPropagation()\n        selectHardwareModalShowFun(false)\n      }}\n    >\n      <ul>\n        {options}\n      </ul>\n      {otherItems()}\n\n    </div>\n  )\n}\n\n\nHardAndPetsUI.propTypes = {\n  setInfo: PropTypes.func,\n}\n//默认值\nHardAndPetsUI.defaultProps = {\n  setInfo: () => { },\n}\nexport default connect(\n  state => ({\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    hardwareList: state.hardwareReduce.hardwareList\n  }),\n  { selectHardwareInfoFun, selectHardwareModalShowFun }\n)(HardAndPetsUI)","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/headerItem.jsx",["256","257","258","259","260","261","262","263","264"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx",["265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Menu,\n    Popover,\n    Button,\n    Modal\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport pinyin from 'pinyin';\n\n\n//import 'antd/dist/antd.css';\nimport './phoneBook.less'\nimport { mTop, px, MTop } from '../px';\nimport electronStore from '../electronStore';\n\n\n/**\n * \n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns \n */\n\n\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\n\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\n\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\n\n    useEffect(() => {\n        if (confirmSelectBreed !== -1) {\n            setSelectBreed(confirmSelectBreed)\n        }\n    }, [confirmSelectBreed])\n\n\n    console.log('listsDate', phoneList)\n\n    useEffect(() => {\n        // console.log('listsDate', listDate)\n        console.log('进来了');\n        let test = []\n        listDate.map((item, index) => {\n            let data = {\n                name: item.breedName,\n                hidden: false,\n                petSpeciesBreedId: item.petSpeciesBreedId\n            }\n            test.push(data)\n        })\n        // 暂时静态数据替换\n        //获取联系人列表\n        console.log('11111111111', test)\n        let list = test;\n        let sections = [], letterArr = [];\n        // console.log('原始的数据:',list)\n\n        // 右侧字母栏数据处理\n        list.map((item, index) => {\n            letterArr.push(pinyin(item.name.substring(0, 1), {\n                style: pinyin.STYLE_FIRST_LETTER,\n            })[0][0].toUpperCase());\n\n            letterArr = [...new Set(letterArr)].sort();\n        });\n\n        // 分组数据处理\n        letterArr.map((item, index) => {\n            sections.push({\n                title: item,\n                data: []\n            })\n        });\n        list.map(item => {\n            let listItem = item;\n            sections.map(item => {\n                // console.log('}}}}}}}}}}}}}}',item)\n                let first = listItem.name.substring(0, 1);\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\n                if (item.title == test) {\n                    item.data.push({\n                        firstName: first,\n                        name: listItem.name,\n                        hidden: listItem.hidden,\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\n                    });\n                }\n            })\n        });\n\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\n        // console.log('-1----', sections, letterArr);\n        setPhoneList(sections)\n        setPhoneListCopy(sections)\n        setLetterList(letterArr)\n        setLetterListCopy(letterArr)\n    }, [])\n    useEffect(() => {\n        // if (searchText) {\n        console.log('搜索内容', searchText, letterListCopy);\n        if (letterListCopy.length > 0) {\n\n            let allData = phoneListCopy\n            let newArr = []\n            let arr = []\n            if (searchText.length > 0) {\n                allData.map((item, i) => {\n                    item.data.map((data, index) => {\n                        // console.log(index)\n                        let dataName = data.name ? data.name.toUpperCase() : ''\n                        let keyData = searchText ? searchText.toUpperCase() : ''\n                        if (dataName.search(keyData) !== -1) {\n                            newArr.push(data)\n                        }\n                    })\n                    // console.log('一组数据：', newArr)\n                    if (newArr.length != 0) {\n                        let oneGreep = {\n                            title: item.title,\n                            data: newArr\n                        }\n                        //   console.log('一11组数据：', oneGreep)\n                        arr.push(oneGreep)\n                    }\n\n                    newArr = []\n                })\n                //   console.log('--------------------------', arr)\n                let letterArr = []\n                arr.map((item, index) => {\n                    letterArr.push(item.title)\n                })\n                // newArr = []\n                // // console.log('---||-----',newArr)\n                setPhoneList(arr)\n                setLetterList(letterArr)\n            } else {\n\n                setPhoneList(phoneListCopy)\n                setLetterList(letterListCopy)\n            }\n        }\n\n\n    }, [searchText])\n\n\n\n    const _phoneList = () => {\n\n        let option = phoneList.map((item, index) => {\n            let data = item.data\n            let option1 = data.map((value, index1) => {\n                return (\n                    <li\n                        key={`option1${index1}`}\n                        onClick={() => {\n                            // console.log(value.petSpeciesBreedId);\n                            setSelectBreed(value.petSpeciesBreedId)\n                            selectFun(value)\n                        }}>\n                        {value.name}\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\n                    </li>\n                )\n            })\n\n            return (\n                <div className=\"phoneBody\">\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\n                    <ul>\n                        {option1}\n                    </ul>\n                </div>\n            )\n\n        })\n\n        return (\n            <ul>\n                {option}\n            </ul>\n        )\n    }\n    const _letterList = () => {\n\n        let option = letterList.map((item, index) => {\n\n\n            return (\n                <li\n                    key={`${index}`}\n\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\n                    <a\n\n                        onClick={() => {\n                            litterClick(item)\n                        }}\n                    >{item}</a>\n                </li>\n            )\n\n        })\n\n        return (\n            <ul className=\"letterUL\">\n                {option}\n            </ul>\n        )\n    }\n    const litterClick = (anchorName) => {\n        // console.log(anchorName);\n        if (anchorName) {\n            // 找到锚点\n            let anchorElement = document.getElementById(anchorName);\n            // console.log(anchorElement);\n            // 如果对应id的锚点存在，就跳转到锚点\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\n        }\n        // e.preventDefault();\n    }\n\n\n\n    return (\n        <div id=\"phoneBook\">\n            <div className=\"phone\">\n                {_phoneList()}\n            </div>\n            <div className=\"litter\">\n                {_letterList()}\n            </div>\n        </div >\n    )\n}\n\nPhoneBook.propTypes = {\n\n    listDate: PropTypes.array,\n    selectFun: PropTypes.func,\n    searchText: PropTypes.string,\n    confirmSelectBreed: PropTypes.number\n}\nPhoneBook.defaultProps = {\n    listDate: [],\n    selectFun: () => { },\n    searchText: '',\n    confirmSelectBreed: -1,\n}\n\nexport default PhoneBook","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/appversion.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectScheduledExam.jsx",["286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313"],"////这是普通用户的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\nimport React, { Component } from 'react'\nimport {\n  Table,\n  Input,\n  Button,\n  Space,\n  message,\n  Menu,\n  Modal,\n  Select,\n  ConfigProvider\n\n} from 'antd';\nimport Draggable from \"react-draggable\";\nimport Button1 from '../../utils/button/Button'\nimport moment from 'moment'\n//import 'antd/dist/antd.css';\nimport Heard from '../../utils/heard/Heard'\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport './doctorSelectExam.less'\n\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { FetchEszVet } from '../../utils/FetchEszVet'\nimport { fetchRequest } from '../../utils/FetchUtil1'\nimport gender from '../../utils/gender'\nimport temporaryStorage from '../../utils/temporaryStorage';\nimport { MTop, mTop, pX, px, win } from '../../utils/px';\nimport { stopBubble } from '../../utils/current'\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\nimport { fetchRhapsody } from '../../utils/FetchUtil5';\nimport jinggao from './../../assets/img/jinggao.png'\nimport redclose from './../../assets/img/redclose.png'\nimport blackTriangle from './../../assets/img/blackTriangle.png'\nimport refresh from './../../assets/img/Refresh.png'\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\n\nimport electronStore from '../../utils/electronStore';\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\nlet storage = window.localStorage;\n\n\n\nexport default class DoctorSelecScheduledtExam extends Component {\n  state = {\n    loading: false,\n    api: '',\n    id: '',  //选择location的id\n    locations: [],\n    data: [],\n    searchData: [],\n    searchText: '',\n    searchedColumn: '',\n    seleceID: '',  //宠物医生id\n    spin: false,   //刷新按钮是否旋转\n    unixToURI: '',\n    ezyVetToken: '',\n    current: 1,\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    heardSearchText: '',\n\n    isNotFound: true,\n    modalVis: false,\n\n    disabled: true,       //model是否可拖拽\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\n\n    sortBy: 'Time',\n    showsortBy: false\n  }\n  componentWillMount () {\n    // console.log('------------', this.props.location.listDate);\n    try {\n      if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\n        // console.log('------------', this.props.location);\n        let data = JSON.parse(this.props.location.listDate)\n        this.setState({\n          data,\n        })\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount () {\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    // ipcRenderer.send('big')\n    message.destroy()\n\n\n\n    storage.identity = '3'\n\n    if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\n      let data = JSON.parse(this.props.location.listDate)\n      this.setState({\n        data,\n      })\n    } else {\n      this.setState({\n        loading: true,\n      })\n    }\n    this._getExam()\n    temporaryStorage.logupVetInfo = {}\n    temporaryStorage.logupSelectOrganization = {}\n    temporaryStorage.logupSuccessData = {}\n    temporaryStorage.logupOrganization = {}\n    temporaryStorage.logupEmailCode = ''\n\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\n    for (let i = 0; i < items.length; i++) {\n      let style = items[i].style\n      style.padding = \"5px 5px\"\n      style.textAlign = 'center'\n\n\n    }\n\n  }\n  componentWillUnmount () {\n    message.destroy()\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    this.setState({\n\n    })\n  }\n\n  rhapsody = async (patientsArr) => {\n\n    // console.log(patientsArr);\n    let dataArr = []\n    try {\n      for (let i = 0; i < patientsArr.length; i++) {\n        let params = { query: `query { patient (id:\"${patientsArr[i].patientId}\") {  vitals { data{ id, weight{value}, createdAt, updatedAt}}}}` }\n        let item = await fetchRhapsody('', 'POST', params, storage.connectionKey)\n        if (item.data) {\n\n          let { vitals } = item.data.patient\n          let vitalData = vitals.data\n          console.log('-----------', vitalData);\n          let weight = ''\n          if (vitalData.length > 0) {\n            vitalData.sort((a, b) => {\n              return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n            })\n            if (vitalData[0].weight && vitalData[0].weight.value) {\n              patientsArr[i].weight = (vitalData[0].weight.value * 0.45).toFixed(1)\n            }\n          }\n\n        }\n\n      }\n      console.log(patientsArr);\n      patientsArr.sort((a, b) => {\n        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n      })\n      this.setState({\n        data: patientsArr,\n        loading: false\n      })\n\n      electronStore.set('doctorExam', patientsArr)\n    } catch (error) {\n      this.setState({\n        loading: false,\n      })\n      message.destroy()\n      message.error('Medical record acquisition failed')\n    }\n\n\n  }\n\n  _getExam = async () => {\n    console.log('进来了');\n\n\n\n\n\n    //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\n    if (storage.lastOrganization === '34') {\n\n      console.log(storage.connectionKey);\n      //1.获取用户id\n\n      let params = { query: `query { business { id, name, state } }` }\n      fetchRhapsody('', 'POST', params, storage.connectionKey)\n\n        .then(res => {\n          console.log('---', res);\n          if (res.errors) {\n            this.setState({\n              loading: false,\n              spin: false\n            })\n            message.destroy()\n            message.error('Data acquisition failed')\n\n          } else {\n            console.log('获取到了businessId');\n            let businessId = res.data.business.id\n            // let param = {\n            //   query: `query  { patients (businessId:\"${businessId}\") { data{ id, clientId, name,gender, dateOfBirth\n            //   species{id,name},\n            //   breeds{id,name},\n            //   createdAt,owners{owner{firstName,lastName} }}}` }\n            let param = {\n              query: `query { \n                patients (businessId:\"${businessId}\") {\n                    data{ \n                         id, \n                         clientId, \n                         businessId, \n                         name  \n                         gender,\n                         dateOfBirth,\n                         species{id,name},\n                         breeds{id,name},\n                         createdAt ,\n                         owners{owner{firstName,lastName}}\n                    }\n                }\n            }`\n            }\n\n            console.log('获取病历单的入参', param, JSON.stringify(param));\n            fetchRhapsody('', 'POST', param, storage.connectionKey)\n              .then(res => {\n                console.log(res);\n                if (res.errors) {\n                  this.setState({\n                    loading: false,\n                    spin: false\n                  })\n                  message.destroy()\n                  message.error('Failed to get pet list')\n\n                } else {\n                  let patientsArr = res.data.patients.data\n                  let dataArr = []\n                  for (let i = 0; i < patientsArr.length; i++) {\n                    const patient = patientsArr[i];\n                    let { id, name, gender, dateOfBirth, breeds, owners, createdAt } = patient\n\n                    createdAt = moment(createdAt).format('X')\n                    let owner = 'unknown'\n                    if (owners.length > 0) {\n                      let ownerItem = owners[0]\n                      if (ownerItem && ownerItem.owner) {\n                        let { firstName, lastName } = ownerItem.owner\n                        if (firstName || lastName) {\n                          owner = `${lastName} ${firstName}`\n                        }\n                      }\n\n                    }\n\n                    let breed = 'unknown'\n                    if (breeds.length > 0 && breeds[0].name) {\n                      breed = breeds[0].name\n                    }\n\n                    let petAge = 'unknown'\n                    if (dateOfBirth) {\n                      petAge = moment(new Date()).diff(moment(dateOfBirth), 'years')\n                      // console.log('petAge', petAge);\n                    }\n\n                    let json = {\n                      insertedAt: createdAt,\n                      patientId: id,\n                      petName: name,\n                      owner,\n                      breed,\n                      gender: gender || 'unknown',\n                      age: petAge,\n                      petId: '',\n                      id: `${i}`,\n                      weight: null,\n                      rfid: null,\n                      url: null,\n                      speciesId: null,\n                    }\n                    dataArr.push(json)\n\n\n                  }\n\n                  console.log(dataArr);\n\n\n\n                  this.rhapsody(dataArr)\n                }\n\n              })\n              .catch(err => {\n                console.log(err);\n                this.setState({\n                  loading: false,\n                  spin: false\n                })\n                message.destroy()\n                message.error('Failed to get pet list')\n              })\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false,\n            spin: false\n          })\n          message.destroy()\n          message.error('Data acquisition failed')\n        })\n\n\n\n\n      return\n    }\n\n\n\n\n\n\n    let startDay = moment().startOf('day').format('YYYY-MM-DD HH:mm:ss')\n    let endDay = moment().endOf('day').format('YYYY-MM-DD HH:mm:ss')\n    let chazhi = new Date().getTimezoneOffset()\n    let newstartTime = moment(startDay).add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\n    let newendTime = moment(endDay).add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\n\n    let params = {\n      doctorId: storage.userId,\n      offset: 0,\n      size: 100,\n      subStartTime: newstartTime,\n      subEndTime: newendTime\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n\n\n\n\n\n\n\n\n\n    console.log('查询宠物的入参', params,);\n    const isUnKnow = (val) => {\n      if (val) {\n        return val\n      } else {\n        return 'unknown'\n      }\n    }\n\n    // fetchRequest('/user/listAllPetInfo', 'GET', params)\n    fetchRequest('/new/pet/subscribe/page', 'POST', params)\n\n      .then(res => {\n        console.log('查询到的宠物列表,/new/pet/subscribe/page', res);\n\n        if (res.flag === true && res.data) {\n          let data = []\n          // let oldList = res.data\n          let oldList = res.data.list\n          for (let i = 0; i < oldList.length; i++) {\n            let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\n              h2tLength, torsoLength } = oldList[i]\n            let owner = ''\n            patientId = isUnKnow(patientId)\n            petName = isUnKnow(petName)\n            breedName = isUnKnow(breedName)\n            age = isUnKnow(age)\n            weight = isUnKnow(weight)\n            if (!firstName) {\n              firstName = ''\n            }\n            if (!lastName) {\n              lastName = ''\n            }\n            if (lastName === '' && firstName === '') {\n              owner = 'unknown'\n            } else {\n              owner = `${lastName} ${firstName}`\n            }\n            createTime = moment(createTime).format('X')\n            let petGender = ''\n            switch (`${gender}`) {\n              case '1': petGender = 'F'\n\n                break;\n              case '0': petGender = \"M\"\n                break;\n              default: petGender = 'unknown'\n                break;\n            }\n            let petAge = 'unknown'\n            if (birthday) {\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\n            }\n\n            let json = {\n              insertedAt: createTime,\n              patientId,\n              petName,\n              owner,\n              breed: breedName,\n              gender: petGender,\n              age: petAge,\n              petId,\n              id: i,\n              weight,\n              rfid,\n              url,\n              speciesId,\n              l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\n              h2tLength, torsoLength,\n              pethubId, macId,\n\n            }\n            data.push(json)\n\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          console.log('列表的数据：', data);\n          storage.doctorList = JSON.stringify(data)\n          this.setState({\n            data,\n            loading: false,\n            spin: false\n          })\n\n          electronStore.set('doctorExam', data)\n\n\n        } else {\n          this.setState({\n            loading: false,\n            spin: false\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false,\n          spin: false\n        })\n      })\n\n\n\n  }\n\n\n  getColumnSearchProps = dataIndex => ({\n    //dataIndex 是标题名称\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    //自定义Icon\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\n    onFilter: (value, record) => {\n      console.log(value, record, dataIndex);\n      return record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : ''\n    },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n  _refresh = () => {\n    console.log('点击了');\n    this.setState({\n      spin: true\n    })\n    // this._getData()\n    this._getExam()\n  }\n\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n\n  handleClick = e => {\n    console.log('click ', e);\n\n    switch (e.key) {\n      case '1': this.props.history.push('/page11'); break;\n      case '2': this.props.history.push('/'); break;\n      case '3':\n        try {\n\n          let selectNum = document.getElementsByClassName('ant-pagination-item-active')\n          // storage.defaultCurrent = selectNum[0].title\n          storage.doctorList = JSON.stringify(this.state.data)\n        } catch (error) {\n          console.log('错误信息', error);\n        }\n\n\n        this.props.history.push('/page8'); break;\n      case '4': this.props.history.push('/page12'); break;\n\n      default:\n        break;\n    }\n\n  };\n\n  _search1 = (search) => {       //这个是搜索调用后台的函数，现在废弃20210929\n    let params = {\n      doctorId: storage.userId,\n      petName: search,\n    }\n    this.setState({\n      loading: true\n    })\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    const isUnKnow = (val) => {\n      if (val) {\n        return val\n      } else {\n        return 'unknown'\n      }\n    }\n    console.log('搜索的数据', params);\n    fetchRequest('/pet/listPetsLike', \"POST\", params)\n      .then(res => {\n        console.log(res);\n\n        if (res.flag === true) {\n          let data = []\n          for (let i = 0; i < res.data.length; i++) {\n            let { age, createTime, patientId, petName, firstName, birthday, lastName, breedName, gender, petId, weight } = res.data[i]\n            let owner = ''\n            patientId = isUnKnow(patientId)\n            petName = isUnKnow(petName)\n            breedName = isUnKnow(breedName)\n            age = isUnKnow(age)\n            weight = isUnKnow(weight)\n            if (!firstName) {\n              firstName = ''\n            }\n            if (!lastName) {\n              lastName = ''\n            }\n            if (lastName === '' && firstName === '') {\n              owner = 'unknown'\n            } else {\n              owner = `${lastName} ${firstName}`\n            }\n            createTime = moment(createTime).format('X')\n            let petGender = ''\n            switch (`${gender}`) {\n              case '1': petGender = 'F'\n\n                break;\n              case '0': petGender = \"M\"\n                break;\n              default: petGender = 'unknown'\n                break;\n            }\n            let petAge = 'unknown'\n            if (birthday) {\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\n              // console.log('petAge', petAge);\n            }\n\n            let json = {\n              insertedAt: createTime,\n              patientId,\n              petName,\n              owner,\n              breed: breedName,\n              gender: petGender,\n              age: petAge,\n              petId,\n              id: i,\n              weight\n\n            }\n            data.push(json)\n\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          this.setState({\n            searchData: data,\n            loading: false\n          })\n        } else {\n          this.setState({\n            searchData: [],\n            loading: false\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        })\n      })\n  }\n\n  _search = (keyWord) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\n\n    /**\n     * 使用indexof方法实现模糊查询\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n     *  \n     * list         原数组\n     * keyWord      查询关键词\n     * searchData   查询的结果\n     * \n     * toLowerCase（）方法：将字符串统一转成小写\n     * toUpperCase（）方法：将字符串统一转成大写\n     * \n     */\n    this.setState({\n      loading: true\n    })\n    let list = this.state.data\n    let searchData = []\n    for (let i = 0; i < list.length; i++) {\n      let petName = list[i].petName.toLowerCase() || ''\n      let patientId = list[i].patientId.toLowerCase() || ''\n      let rfid = list[i].rfid || ''\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${rfid}`.indexOf(keyWord) !== -1\n      ) {\n        searchData.push(list[i])\n      }\n    }\n    console.log(searchData);\n    this.setState({\n      searchData,\n      loading: false\n    })\n\n\n\n\n\n  }\n\n  RFIDSearch = () => {\n    this.setState({\n      loading: true\n    })\n    fetchRequest4(`/pet/getPetInfoByRFID/${this.state.heardSearchText}/${storage.lastOrganization}`, 'GET')\n      .then(res => {\n        console.log('----RFID搜索结果', res);\n\n        if (res.flag === true && res.data) {\n          let { createTime, patientId, petName, firstName, lastName, breedName, gender, birthday, petId, rfid, weight } = res.data\n          patientId = patientId || 'unknown'\n          petName = petName || 'unknown'\n          breedName = breedName || 'unknown'\n          weight = weight || 'unknown'\n          let owner = ''\n          if (!firstName) {\n            firstName = ''\n          }\n          if (!lastName) {\n            lastName = ''\n          }\n          if (lastName === '' && firstName === '') {\n            owner = 'unknown'\n          } else {\n            owner = `${lastName} ${firstName}`\n          }\n          createTime = moment(createTime).format('X')\n          let petGender = ''\n          switch (`${gender}`) {\n            case '1': petGender = 'F'\n\n              break;\n            case '0': petGender = \"M\"\n              break;\n            default: petGender = 'unknown'\n              break;\n          }\n          let petAge = 'unknown'\n          if (birthday) {\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\n            // console.log('petAge', petAge);\n          }\n          let json = {\n            insertedAt: createTime,\n            patientId,\n            petName,\n            owner,\n            breed: breedName,\n            gender: petGender,\n            age: petAge,\n            petId,\n            id: 0,\n            weight,\n            rfid\n          }\n          let searchData = []\n          searchData.push(json)\n          this.setState({\n            searchData,\n            loading: false\n          })\n\n\n\n\n        } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\n          console.log('找到了但是不是在这个组织下');\n          this.setState({\n            loading: false,\n            modalVis: true,\n            isNotFound: false,\n            heardSearchText: ''\n          })\n        } else {\n          console.log('没有找到');\n          this.setState({\n            loading: false,\n            modalVis: true,\n            isNotFound: true,\n            heardSearchText: ''\n          })\n        }\n      })\n      .catch(err => {\n\n        console.log('抛出异常:', err);\n        this.setState({\n          loading: false,\n        })\n      })\n  }\n  draggleRef = React.createRef();\n  onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\n      }\n    });\n  };\n\n\n  render () {\n    const columns = [\n      {\n        title: 'Time',\n        dataIndex: 'insertedAt',\n        key: 'insertedAt',\n        width: '16%',\n        // ...this.getColumnSearchProps('insertedAt'),\n        render: (text, record, index) => {\n          let chazhi = new Date().getTimezoneOffset()\n          // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\n          let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\n          let time = moment(parseInt(text) * 1000).format('hh:mm a');\n          let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\n          // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\n          return (\n            <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\n              <p>{`${year}`}</p>\n              <p>{`${time}`}</p>\n            </div>\n          )\n        },\n\n      },\n      {\n        title: 'Pet ID',\n        dataIndex: 'patientId',\n        key: 'patientId',\n        width: '15%',\n        // ...this.getColumnSearchProps('patientId'),\n      },\n      {\n        title: 'Pet Name',\n        dataIndex: 'petName',\n        key: 'petName',\n        width: '15%',\n        // ...this.getColumnSearchProps('petName'),\n      },\n      {\n        title: 'Owner',\n        dataIndex: 'owner',\n        key: 'owner',\n        width: '15%',\n        // ...this.getColumnSearchProps('owner'),\n      },\n      {\n        title: 'Breed',\n        dataIndex: 'breed',\n        key: 'breed',\n        width: '15%',\n        // ...this.getColumnSearchProps('breed'),\n        render: (text, record, index) => {\n          if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\n            return (\n              <p style={{ textAlign: 'center' }}>{'unknown'}</p>\n            )\n          } else {\n            return (\n              <p style={{ textAlign: 'center' }}>{text}</p>\n            )\n          }\n\n        }\n      },\n\n      {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n        width: '12%',\n        // width: '30%',\n        // ...this.getColumnSearchProps('gender'),\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        width: '12%',\n        // width: '20%',\n        render: (text, record, index) => {\n          // console.log(text);\n\n          if (`${text}` === 'NaN') {\n            return (\n              <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\n            )\n          } else {\n            return (\n              <p style={{ textAlign: 'center' }}>{text}</p>\n            )\n          }\n\n        }\n      },\n\n\n    ];\n    const { loading, data, api, id, seleceID, spin, closeColor, closebgc, minbgc, disabled, bounds, modalVis, sortBy, showsortBy } = this.state\n\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\n    for (let i = 0; i < items.length; i++) {\n      let style = items[i].style\n      style.padding = `5px 5px`\n      style.textAlign = 'center'\n    }\n    const noData = () => {\n      return (\n        <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\n          <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\n          <a style={{ fontSize: px(22) }} href=\"#\"\n            onClick={(e) => {\n              console.log('我要去添加宠物');\n              // try {\n\n              //   storage.doctorList = JSON.stringify(this.state.data)\n              // } catch (error) {\n              //   console.log('错误信息', error);\n              // }\n              // // /pet/doctorAddPet\n              // this.props.history.push({ pathname: '/pet/doctorAddPet' })\n              this.props.history.push({ pathname: '/AddYuding', })\n              e.preventDefault();\n\n            }}\n\n          >{`go to add`}</a>\n        </div>\n      )\n    }\n\n\n\n\n\n    return (\n\n      <div id=\"doctorSelectExam\" onClick={(e) => {\n        console.log('隐藏');\n        this.setState({\n          showsortBy: false\n        })\n      }}>\n        {/* 关闭缩小 */}\n        <Heard\n          onReturn={() => {\n            this.props.history.push('/page11')\n\n          }}\n          onSearch={(data) => {\n\n            storage.doctorExam = JSON.stringify(data)\n\n            storage.doctorList = JSON.stringify(this.state.data)\n            if (storage.isClinical === 'true') {\n              this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\n            } else {\n              this.props.history.push({ pathname: '/page10', })\n            }\n          }}\n          menu10Click={() => {\n            this.props.history.push({ pathname: '/uesr/DoctorSelectAllExam', })\n          }}\n          blueSearch={true}\n        />\n\n\n        <div className=\"hread flex\">\n          <div className=\"hread1 flex\" style={{ marginTop: px(30) }}>\n            <div className=\"heard1L flex\">\n              <div className=\"title\" style={{ fontSize: px(25) }}>Scheduled Patients</div>\n              <div className=\"refresh flex\"\n                style={{ fontSize: px(25), marginLeft: px(10) }}\n              >\n                <SyncOutlined onClick={this._refresh} spin={spin} />\n              </div>\n            </div>\n\n            <div className=\"walkin flex\"\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20) }}\n              onClick={() => {\n                storage.doctorExam = JSON.stringify('')\n                storage.doctorList = JSON.stringify(this.state.data)\n                if (storage.isClinical === 'true') {\n                  this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: null })\n                } else {\n                  this.props.history.push({ pathname: '/page10', })\n                }\n\n              }}\n            >Walk-In</div>\n\n          </div>\n          <div className=\"heard2 flex\" style={{ marginTop: px(8), marginBottom: px(8) }}>\n\n            <div className=\"sort flex\" >\n              <p style={{ fontSize: px(16), marginRight: px(10) }}>sort By:</p>\n\n              <SelectionBox\n                listArr={[\n                  { key: 'time', value: 'Time' },\n                  { key: 'petid', value: 'Pet ID' },\n                  { key: 'owner', value: 'Owner' },\n                  { key: 'breed', value: 'Breed' },\n                  { key: 'petname', value: 'Pet Name' },\n                  { key: 'gender', value: 'Gender' },\n                ]}\n                clickItem={(item) => {\n                  let petList = [].concat(data)\n                  switch (item.key) {\n                    case 'time':\n                      petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n                      break;\n                    case 'petid':\n                      petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n                      break;\n                    case 'owner':\n                      petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n                      break;\n                    case 'breed':\n                      petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n                      break;\n                    case 'petname':\n                      petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n                      break;\n                    case 'gender':\n                      petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n                      break;\n                  }\n\n                  this.setState({\n                    sortBy: item.value,\n                    showsortBy: false,\n                    data: petList\n                  })\n                }}\n              />\n            </div>\n\n          </div>\n        </div>\n\n\n        <div className=\"table\" >\n          <ConfigProvider renderEmpty={noData}>\n            <Table\n              style={{\n                // border: ' #979797 1px solid',\n                padding: 0,\n                margin: 0,\n                width: '95%',\n                // height: px(500)\n              }}\n              rowKey={data => data.id}\n              bordered={false}\n              columns={columns}\n              dataSource={(this.state.heardSearchText.length === 0) ? this.state.data : this.state.searchData}\n              loading={loading}\n              locale={{ filterConfirm: <div>111</div> }}\n              // pagination={{ showSizeChanger: false, showQuickJumper: true, defaultCurrent: this.state.current }}\n              pagination={false}\n              scroll={{\n                y: px(600)\n              }}\n              onRow={(record) => {\n                return {\n                  onClick: (event) => {\n\n                    console.log('record', record);\n                    storage.doctorExam = JSON.stringify(record)\n                    storage.doctorList = JSON.stringify(this.state.data)\n\n                    if (storage.isClinical === 'true') {\n                      this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.patientId })\n                    } else {\n                      this.props.history.push({ pathname: '/page10', })\n                    }\n\n\n                  }, // 点击行\n\n                };\n              }}\n            />\n          </ConfigProvider>\n        </div>\n        <div className=\"hread flex\" style={{ alignItem: 'center' }}>\n          <div className=\"hread1\" style={{ marginTop: px(10), justifyContent: 'flex-end', display: 'flex', }}>\n            <div className=\"walkin flex\"\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20), marginRight: px(10) }}\n              onClick={() => {\n                this.props.history.push({ pathname: '/AddYuding', })\n\n              }}\n            >Create New Scheduled</div>\n\n          </div>\n        </div>\n\n\n\n        <Modal\n\n          // visible={isOrg}\n          visible={modalVis}\n          onCancel={() => this.setState({ modalVis: false })}\n          width={350}\n          footer={[]}\n          modalRender={(modal) => (\n            <Draggable\n              disabled={disabled}\n              bounds={bounds}\n              onStart={(event, uiData) => this.onStart(event, uiData)}\n            >\n              <div ref={this.draggleRef}>{modal}</div>\n            </Draggable>\n          )}\n          destroyOnClose={true}\n          wrapClassName=\"doctorSelectExamModal\"\n        >\n          <div id='doctorSelectExamModal'>\n            <div className=\"text\"\n              onMouseOver={() => {\n                if (disabled) {\n                  this.setState({\n                    disabled: false,\n                  });\n                }\n              }}\n              onMouseOut={() => {\n                this.setState({\n                  disabled: true,\n                });\n              }}\n\n            >{this.state.isNotFound ? 'Pet not found!' : 'Pet found!'}</div>\n            <div className='Img'>\n              {this.state.isNotFound ?\n                <img src={redclose} width=\"50px\" /> :\n                <img src={jinggao} width=\"50px\" />\n              }\n\n            </div>\n\n\n\n\n            {this.state.isNotFound ? <p > This pet is not on your database</p> :\n              <p >Pet Identified but does not <br /> belong to your organization.</p>}\n\n\n            <div style={{ marginTop: px(20) }}>\n              <Button1\n                text={'OK'}\n\n                onClick={() => this.setState({\n                  modalVis: false\n                })}\n              />\n            </div>\n\n\n\n\n\n\n\n\n          </div>\n\n        </Modal>\n\n\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorAddPet/DoctorAddPet.jsx",["314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/joinOrganizationByOption/JoinOrganizationByOption.jsx",["339","340","341","342","343","344","345","346"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/NewOrganization.jsx",["347"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/myModal/MyModal.jsx",["348","349"],"\n/**\n * \n * @param {boolean} visible 控制modal框是否显示\n * @param {element} element 自定义modal框里面的内容，默认是组件是加载中。。。\n * @returns {element} 这是自己写的一个modal框\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport './myModal.less'\nimport { px, pX, MTop, mTop } from '../px'\n\nclass MyModal extends Component {\n\n  render () {\n    let { visible, element, text } = this.props\n    // console.log('---上层组件传来的值---', this.props);\n\n    if (visible) {\n      let body = element ? element :\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n          <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n            <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\n          </div>\n          <p>\n            {text ? text : 'loading...'}\n          </p>\n        </div>\n      return (\n        <div className=\"myModal\">\n          {body}\n        </div>\n      )\n    } else {\n      return (null)\n    }\n\n  }\n}\n\nMyModal.propTypes = {\n  visible: PropTypes.bool,\n  element: PropTypes.element,\n  text: PropTypes.string\n\n}\nMyModal.defaultProps = {\n  visible: false,\n  text: 'loading...'\n}\n\nexport default MyModal","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/userType.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/AddYuding.jsx",["350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectExam/SelectExam.jsx",["366","367","368","369"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/findMyWorkplace/FindMyWorkplace.jsx",["370","371"],"import React, { Component } from 'react'\nimport {\n  Input, message\n} from 'antd';\nimport { createFromIconfontCN } from '@ant-design/icons';\n//import 'antd/dist/antd.css';\n\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\nimport { fetchRequest } from '../../../utils/FetchUtil1'\nimport temporaryStorage from '../../../utils/temporaryStorage'\nimport Button from '../../../utils/button/Button'\nimport './findMyWorkplace.less'\n\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\nexport default class JoinworkplaceByName extends Component {\n\n  state = {\n    search: '',\n    listData: [],\n    searchData: [],\n    selectId: {}\n\n  }\n  componentDidMount () {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('small')\n    fetchRequest(`/workplace/listAllWorkplaceByOrganizationId/${temporaryStorage.logupSelectOrganization.organizationId}`, \"GET\", '')\n      .then((res) => {\n        console.log(res);\n        if (res.msg === 'success') {\n          this.setState({\n            listData: res.data\n          })\n        } else {\n          console.log('请求错误');\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n  _search = (val) => {\n    let search = val.target.value\n    let { listData } = this.state\n    let searchData = []\n    for (let i = 0; i < listData.length; i++) {\n      if (listData[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\n        searchData.push(listData[i])\n      }\n    }\n    this.setState({\n      search,\n      searchData\n    })\n\n  }\n  _list = () => {\n    const { search, listData, searchData } = this.state\n    let data = (search.length > 0) ? searchData : listData\n    let option = data.map((item, index) => {\n\n      return <li key={item.workplaceId}\n        onClick={() => {\n          this.setState({\n            selectId: item\n          })\n          console.log(item);\n          let params = {\n            userId: temporaryStorage.logupSuccessData.userId,\n            roleId: 2,\n            workplaceId: item.workplaceId,\n            organizationId: item.organizationId\n          }\n          fetchRequest('/user/updateUserInfo', 'POST', params)\n            .then(res => {\n              console.log(res);\n              if (res.flag === true) {\n\n                console.log('成功',);\n                this._logIn()\n              }\n            })\n            .catch(err => {\n              console.log(err);\n              message.error(err.message, 3)\n            })\n        }}\n\n      >\n        {(this.state.selectId === item ? <span className=\"search\">&#xe614;</span> : null)}\n        {item.workplaceName}</li>\n    })\n    return (\n      <ul>\n        {option}\n      </ul>\n    )\n  }\n\n  _logIn = () => {\n\n    let storage = window.localStorage;\n    let { email, hash } = temporaryStorage.logupVetInfo\n    let params = {\n      email: email.replace(/(^\\s*)/g, \"\"),\n      hash,\n      identityTypeId: '1'\n    }\n    fetchRequest('/user/mellaLogin', 'POST', params)\n      .then(res => {\n        console.log(res);\n        if (res.status && res.status === 404) {\n          message.error('system error');\n          return\n        }\n        if (res.code === 10001 && res.msg === '账号错误') {\n          message.error('Account error');\n          return\n        }\n        if (res.code === 10002 && res.msg === '密码错误') {\n          message.error('wrong password')\n          return;\n        }\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\n          return\n        }\n\n        if (res.code === 0 && res.msg === 'success') {\n          console.log('账号密码正确，登录进去了');\n          let { userWorkplace, lastOrganization, token } = res.success\n          storage.token = token\n          storage.userId = ''\n\n          storage.userId = res.success.userId\n          storage.roleId = res.success.roleId\n\n          //每次登陆后清空宠物列表缓存的数据\n          storage.doctorList = ''\n          storage.defaultCurrent = ''\n          if (userWorkplace) {\n            storage.userWorkplace = JSON.stringify(userWorkplace)\n            let connectionKey = ''\n            const element = userWorkplace[0];\n            storage.lastOrganization = element.organizationEntity.organizationId\n            storage.lastWorkplaceId = element.workplaceEntity.workplaceId\n            if (element.organizationEntity.connectionKey) {\n              connectionKey = element.organizationEntity.connectionKey\n            }\n            if (element.roleId) {\n              console.log(element.roleId);\n              storage.roleId = element.roleId\n            }\n            if (userWorkplace.length === 1) {\n              this.props.history.push('/uesr/selectExam')\n\n            } else {\n              this.props.history.push('/page12')\n            }\n          } else {\n            storage.userWorkplace = ''\n            storage.connectionKey = ''\n            this.props.history.push('/uesr/selectExam')\n          }\n\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n  render () {\n    return (\n      <div id=\"findMyWorkplace\">\n        {/* 关闭缩小 */}\n        <MaxMin\n          onClick={() => { this.props.history.push('/') }}\n          onClick1={() => this.props.history.goBack()}\n        />\n        <div className=\"body\">\n          <div className=\"text\">Find my workplace</div>\n\n          <div className=\"searchBox\">\n            <div><MyIcon type='icon-sousuo' className=\"icon\" /></div>\n\n            <Input\n              placeholder=\"Please input workplace name\"\n              bordered={false}\n              allowClear={true}\n              value={this.state.search}\n              onChange={this._search}\n            />\n\n          </div>\n\n\n          <div className=\"list\">\n            {this._list()}\n          </div>\n          <Button\n            text={'My Workplace Isn`t Listed'}\n            textBoxStyle={{ marginTop: '50px' }}\n            onClick={() => {\n              this.props.history.push('/uesr/logUp/NewWorkplace')\n            }}\n          />\n        </div>\n\n\n\n\n      </div>\n    )\n  }\n}","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/unassigned/Unassigned.jsx",["372","373","374","375","376","377","378","379","380"],"import React, { Component } from \"react\";\nimport { Table, Popconfirm, Modal, Input, message, Select } from \"antd\";\nimport moment from \"moment\";\nimport Draggable from \"react-draggable\";\n\nimport \"./unassigned.less\";\nimport Heard from \"./../../../utils/heard/Heard\";\nimport { fetchRequest } from \"../../../utils/FetchUtil1\";\n\nimport del from \"./../../../assets/images/del.png\";\nimport Close from \"./../../../assets/img/close.png\";\n\nimport UploadImg from \"./../../../utils/uploadImg/UploadImg\";\nimport { mTop, px, MTop } from \"../../../utils/px\";\nimport electronStore from \"./../../../utils/electronStore\";\nimport MyModal from \"../../../utils/myModal/MyModal\";\nimport Button from \"./../../../utils/button/Button\";\n\nlet storage = window.localStorage;\nconst { Option } = Select;\n\nexport default class Unassigned extends Component {\n  state = {\n    historyData: [], //列表的数据集合\n    units: \"℉\",\n    searchText: \"\", //搜索测试记录框输入的内容\n    serchExamData: [], //搜索到的测量记录\n    seleceEmergencies: {}, //分配的这条记录里的所有内容，比如温度、id、时间等\n    visible: false, //nodel框是否显示\n    disabled: true, //model是否可拖拽\n    imgId: -1, //上传后返回的图像id号\n\n    assignPatientId: \"\",\n    assignPetName: \"\",\n    assignOwnerName: \"\",\n    assignBreed: \"\",\n    assignBreedId: \"\",\n    assignPetAge: \"\",\n    assignPetWeight: \"\",\n    assignPetId: \"\",\n    assignPetImgUrl: \"\",\n    inputDisabled: false,\n\n    breedArr: [], //猫、狗品种集合\n\n    loading: false,\n\n    disabled: true, //model是否可拖拽\n    search: \"\", //分配宠物搜索框\n    petListData: [],\n    searchPetList: [],\n    assignVisible: false, //点击assign按钮后跳出的选择宠物的弹框\n    selectPetId: \"\",\n  };\n\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer;\n    let { height, width } = window.screen;\n    let windowsHeight = height > width ? width : height;\n    ipcRenderer.send(\"Lowbig\");\n    // if (windowsHeight < 1000) {\n    //   ipcRenderer.send('table')\n    // } else {\n    //   ipcRenderer.send('big')\n    // }\n    let getBreed = electronStore.get(\"getBreed\");\n    console.log(\"------\", getBreed);\n    if (getBreed) {\n      this.setState({\n        breedArr: getBreed,\n      });\n    }\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    this._getEmergencyHistory();\n    const timer = setTimeout(() => {\n      this._getBreed();\n      clearTimeout(timer);\n    }, 3000);\n\n    let list = electronStore.get(\"doctorExam\");\n    this.setState({\n      petListData: list,\n    });\n  }\n  componentWillUnmount() {\n    message.destroy();\n    let ipcRenderer = window.electron.ipcRenderer;\n\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer;\n    let { height, width } = window.screen;\n    let windowsHeight = height > width ? width : height;\n    ipcRenderer.send(\"Lowbig\");\n    // if (windowsHeight < 1000) {\n    //   ipcRenderer.send('table')\n    // } else {\n    //   ipcRenderer.send('big')\n    // }\n    this.setState({});\n  };\n\n  _getEmergencyHistory = () => {\n    //封装的日期排序方法\n    function ForwardRankingDate(data, p) {\n      for (let i = 0; i < data.length - 1; i++) {\n        for (let j = 0; j < data.length - 1 - i; j++) {\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\n            var temp = data[j];\n            data[j] = data[j + 1];\n            data[j + 1] = temp;\n          }\n        }\n      }\n      return data;\n    }\n    let historys = [];\n    this.setState({\n      loading: true,\n    });\n    fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, \"GET\", \"\") //userID要自动的\n      .then((res) => {\n        console.log(\"---res\", res);\n        if (res.flag === true) {\n          let datas = res.data;\n          for (let i = datas.length - 1; i >= 0; i--) {\n            if (datas[i].petId === null) {\n              let {\n                petId,\n                examId,\n                userId,\n                petVitalTypeId,\n                temperature,\n                roomTemperature,\n                bloodPressure,\n                memo,\n                clinicalDatagroupId,\n                bodyConditionScore,\n                heartRate,\n                respiratoryRate,\n                referenceRectalTemperature,\n                furLength,\n                createTime,\n                clinicalDataEntity,\n              } = datas[i];\n              let day = moment().diff(moment(createTime), \"day\");\n              // console.log(day);\n              if (day > 3) {\n                continue;\n              }\n\n              let Tem = temperature;\n              try {\n                if (clinicalDataEntity) {\n                  Tem = temperature || clinicalDataEntity.data0;\n                }\n              } catch (error) {\n                console.log(\"抛出的异常\", error);\n              }\n              let str = {\n                clinicalDatagroupId,\n                createTime,\n                date: moment(createTime).format(\"MMM DD\"),\n                time: moment(createTime).format(\"hh:mm A\"),\n                temp: parseInt(Tem * 10) / 10,\n                placement: petVitalTypeId,\n                note: memo,\n                historyId: examId,\n                bodyConditionScore,\n                heartRate,\n                respiratoryRate,\n                referenceRectalTemperature,\n                furLength,\n                roomTemperature,\n                bloodPressure,\n                petId,\n                userId,\n                day,\n              };\n\n              historys.push(str);\n            }\n          }\n\n          //把所有数据拿完后做个排序\n\n          let historyData = ForwardRankingDate(historys, \"createTime\");\n          console.log(\"historyData:\", historyData);\n          this.setState({\n            historyData,\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n  _getBreed = () => {\n    fetchRequest(`/pet/selectBreedBySpeciesId`, \"POST\", { speciesId: 1 })\n      .then((res) => {\n        if (res.code === 0) {\n          let arr = [];\n          res.petlist.map((item, index) => {\n            let data = {\n              petSpeciesBreedId: item.petSpeciesBreedId,\n              breedName: item.breedName,\n              speciesId: 1,\n            };\n\n            arr.push(data);\n          });\n\n          fetchRequest(`/pet/selectBreedBySpeciesId`, \"POST\", { speciesId: 2 })\n            .then((res) => {\n              if (res.code === 0) {\n                res.petlist.map((item, index) => {\n                  let data = {\n                    petSpeciesBreedId: item.petSpeciesBreedId,\n                    breedName: item.breedName,\n                    speciesId: 2,\n                  };\n                  arr.push(data);\n                });\n\n                console.log(\"----品种集合：\", arr);\n                electronStore.set(\"getBreed\", arr);\n                this.setState({\n                  breedArr: arr,\n                });\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  _search = (value = \"\") => {\n    console.log(\"我要去搜索了\");\n    let list = this.state.historyData;\n    let searchData = [];\n    let keyWord = value || this.state.searchText;\n    for (let i = 0; i < list.length; i++) {\n      let note = list[i].note ? list[i].note.toLowerCase() : \"\";\n      if (`${note}`.indexOf(keyWord.toLowerCase()) !== -1) {\n        searchData.push(list[i]);\n      }\n    }\n\n    this.setState({\n      serchExamData: searchData,\n    });\n  };\n  _searchPet = (value = \"\") => {\n    console.log(\"我要去搜索了\", this.state.petListData);\n    let list = this.state.petListData;\n    let searchData = [];\n    let keyWord = value || this.state.searchText;\n    for (let i = 0; i < list.length; i++) {\n      let name = list[i].petName ? list[i].petName.toLowerCase() : \"\";\n      let rfid = list[i].rfid ? list[i].rfid.toLowerCase() : \"\";\n      let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : \"\";\n\n      if (\n        `${name}`.indexOf(keyWord.toLowerCase()) !== -1 ||\n        `${rfid}`.indexOf(keyWord.toLowerCase()) !== -1 ||\n        `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n      ) {\n        searchData.push(list[i]);\n      }\n    }\n\n    this.setState({\n      searchPetList: searchData,\n    });\n  };\n\n  draggleRef = React.createRef();\n\n  handleOk = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n      assignPatientId: \"\",\n      assignPetName: \"\",\n      assignOwnerName: \"\",\n      assignBreed: \"\",\n      assignBreedId: \"\",\n      assignPetAge: \"\",\n      assignPetWeight: \"\",\n      assignPetId: \"\",\n      assignPetImgUrl: \"\",\n    });\n  };\n\n  handleCancel = (e) => {\n    console.log(\"取消\");\n    this.setState({\n      visible: false,\n      assignPatientId: \"\",\n      assignPetName: \"\",\n      assignOwnerName: \"\",\n      assignBreed: \"\",\n      assignBreedId: \"\",\n      assignPetAge: \"\",\n      assignPetWeight: \"\",\n      assignPetId: \"\",\n      assignPetImgUrl: \"\",\n    });\n  };\n\n  onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y),\n      },\n    });\n  };\n  _select = (value, data) => {\n    console.log(value, data); //value的值为id\n    this.setState({\n      assignBreedId: value,\n      assignBreed: data.children,\n    });\n  };\n\n  _modal = () => {\n    let that = this;\n\n    function getPetInfoByPatientId() {\n      switch (storage.identity) {\n        case \"1\":\n          console.log(\"我是vetspire查找\");\n\n          break;\n\n        case \"2\":\n          console.log(\"我是ezyVet查找\");\n          let params = {\n            animalId: that.state.assignPatientId,\n            organizationId: 4,\n          };\n          let paramsArray = [];\n          Object.keys(params).forEach((key) =>\n            paramsArray.push(key + \"=\" + params[key])\n          );\n          let url =\n            \"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId\";\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\n          if (url.search(/\\?/) === -1) {\n            url = url + \"?\" + paramsArray.join(\"&\");\n          } else {\n            url = url + \"&\" + paramsArray.join(\"&\");\n          }\n          console.log(\"ezyVet集成查找宠物入参-请求地址\", params, url);\n          fetch(url, {\n            method: \"GET\",\n            headers: {\n              authorization: `Bearer ${storage.ezyVetToken}`,\n            },\n          })\n            .then((response) => response.json())\n            .then((res) => {\n              console.log(\"res\", res);\n              this.setState({\n                spin: false,\n              });\n              if (res.flag === true) {\n                //有宠物，进入1\n                let petArr = res.data;\n                if (petArr.length > 1) {\n                  petArr.sort(function (a, b) {\n                    return a.createTime > b.createTime ? -1 : -1;\n                  });\n                }\n                console.log(petArr);\n\n                let { petId } = petArr;\n                // assign(petId)\n              } else {\n                //没有宠物\n                message.error(\"There are no pets under this patientID\");\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n              message.error(\"There are no pets under this patientID\");\n            });\n\n          break;\n\n        case \"3\":\n          console.log(\"我是一般医生查找\");\n          let datas = {\n            patientId: that.state.assignPatientId,\n            doctorId: storage.userId,\n          };\n          if (storage.lastWorkplaceId) {\n            datas.workplaceId = storage.lastWorkplaceId;\n          }\n          console.log(\"入参：\", datas);\n          fetchRequest(\"/pet/getPetInfoByPatientIdAndPetId\", \"POST\", datas)\n            .then((res) => {\n              if (res.flag === true) {\n                //有宠物，进入1\n                let petArr = res.data;\n                if (petArr.length > 1) {\n                  petArr.sort(function (a, b) {\n                    return a.createTime > b.createTime ? -1 : -1;\n                  });\n                }\n\n                console.log(\"获取到宠物信息\", petArr);\n\n                let {\n                  petId,\n                  petName,\n                  firstName,\n                  lastName,\n                  breedName,\n                  age,\n                  weight,\n                  url,\n                  birthday,\n                } = petArr[0];\n\n                let assignPetName = petName ? petName : \"\";\n                let assignOwnerName = lastName ? lastName : \"\";\n                assignOwnerName = firstName\n                  ? `${assignOwnerName} ${firstName}`\n                  : assignOwnerName;\n                let assignBreed = breedName ? breedName : \"\";\n                let assignPetAge = age ? age : \"\";\n                let assignPetWeight = weight ? weight : \"\";\n                let assignPetImgUrl = url ? url : \"\";\n\n                if (!assignPetAge) {\n                  let now = moment(new Date());\n                  let year = now.diff(moment(birthday), \"years\");\n                  assignPetAge = year;\n                }\n\n                that.setState({\n                  assignPetName,\n                  assignBreed,\n                  assignPetAge,\n                  assignPetWeight,\n                  assignPetId: petId,\n                  assignPetImgUrl,\n                  inputDisabled: true,\n                });\n\n                // assign(petId)\n              } else {\n                that.setState({\n                  inputDisabled: false,\n                  assignPetName: \"\",\n                  assignOwnerName: \"\",\n                  assignBreed: \"\",\n                  assignBreedId: \"\",\n                  assignPetAge: \"\",\n                  assignPetWeight: \"\",\n                  assignPetId: \"\",\n                  assignPetImgUrl: \"\",\n                });\n                message.error(\"There are no pets under this patientID\");\n              }\n            })\n            .catch((err) => {\n              that.setState({\n                inputDisabled: false,\n                assignPetName: \"\",\n                assignOwnerName: \"\",\n                assignBreed: \"\",\n                assignBreedId: \"\",\n                assignPetAge: \"\",\n                assignPetWeight: \"\",\n                assignPetId: \"\",\n                assignPetImgUrl: \"\",\n              });\n              message.error(\"There are no pets under this patientID\");\n              console.log(err);\n            });\n          break;\n\n        default:\n          break;\n      }\n    }\n    const assignPet = () => {\n      let parmes = {\n        petId: this.state.assignPetId,\n        clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId,\n      };\n      console.log(\"分配的数据信息\", parmes);\n      fetchRequest(\n        `/pet/addAndSavePetExam/${that.state.seleceEmergencies.historyId}`,\n        \"POST\",\n        parmes\n      )\n        .then((res) => {\n          console.log(\"----------\", res);\n          if (res.flag === true) {\n            console.log(\"分配成功\");\n            message.success(\"Assigned successfully\");\n            that._getEmergencyHistory();\n            that.setState({\n              visible: false,\n              assignPatientId: \"\",\n              assignPetName: \"\",\n              assignOwnerName: \"\",\n              assignBreed: \"\",\n              assignBreedId: \"\",\n              assignPetAge: \"\",\n              assignPetWeight: \"\",\n              assignPetId: \"\",\n              assignPetImgUrl: \"\",\n            });\n          } else {\n            message.error(\"Assignment failed\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          message.error(\"Assignment failed\");\n        });\n    };\n\n    let { disabled, bounds, visible } = this.state;\n    let options = this.state.breedArr.map((d) => (\n      <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>\n    ));\n    return (\n      <Modal\n        wrapClassName={\"web\"} //对话框外部的类名，主要是用来修改这个modal的样式的\n        destroyOnClose={true}\n        title={\n          <div\n            style={{\n              width: \"100%\",\n              cursor: \"move\",\n              height: \"30px\",\n              textAlign: \"center\",\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                this.setState({\n                  disabled: false,\n                });\n              }\n            }}\n            onMouseOut={() => {\n              this.setState({\n                disabled: true,\n              });\n            }}\n            onFocus={() => {}}\n            onBlur={() => {}}\n            // end\n          ></div>\n        }\n        visible={visible}\n        // visible={true}\n        onOk={this.handleOk}\n        onCancel={this.handleCancel}\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div ref={this.draggleRef}>{modal}</div>\n          </Draggable>\n        )}\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\n      >\n        <div id=\"unassignedModal\">\n          <div className=\"title\">\n            Assign <br />\n            Measurement to\n          </div>\n\n          <div className=\"addPhoto\">\n            <UploadImg\n              getImg={(val) => {\n                console.log(\"hahahahahahah我获得了\", val);\n                this.setState({\n                  imgId: val.imageId,\n                });\n              }}\n              imgUrl={this.state.assignPetImgUrl}\n              disable={this.state.inputDisabled}\n            />\n          </div>\n\n          <div className=\"item\">\n            <p>Patient ID:</p>\n            <Input\n              value={this.state.assignPatientId}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignPatientId: item.target.value,\n                });\n              }}\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  getPetInfoByPatientId();\n                }\n                if (e.keyCode === 27) {\n                  console.log(\"清空\");\n                  this.setState({\n                    assignPatientId: \"\",\n                  });\n                }\n              }}\n              onBlur={() => {\n                if (this.state.assignPatientId.length > 0) {\n                  getPetInfoByPatientId();\n                }\n              }}\n            />\n          </div>\n\n          <div className=\"item\">\n            <p>Pet Name:</p>\n            <Input\n              disabled={this.state.inputDisabled}\n              value={this.state.assignPetName}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignPetName: item.target.value,\n                });\n              }}\n            />\n          </div>\n\n          <div className=\"item\">\n            <p>Owner Name:</p>\n            <Input\n              disabled={this.state.inputDisabled}\n              value={this.state.assignOwnerName}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignOwnerName: item.target.value,\n                });\n              }}\n            />\n          </div>\n          <div className=\"item\">\n            <p>Breed:</p>\n            <div className=\"infoInput\">\n              {/* <Input bordered={false} /> */}\n              <Select\n                disabled={this.state.inputDisabled}\n                showSearch\n                style={{ width: \"100%\" }}\n                bordered={false}\n                value={this.state.assignBreed}\n                // size = {'small'}\n                placeholder=\"Search to Select\"\n                optionFilterProp=\"children\"\n                listHeight={256}\n                onSelect={(value, data) => this._select(value, data)}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                  0\n                }\n                filterSort={(optionA, optionB) =>\n                  optionA.children\n                    .toLowerCase()\n                    .localeCompare(optionB.children.toLowerCase())\n                }\n              >\n                {options}\n              </Select>\n            </div>\n          </div>\n          <div className=\"item\">\n            <p>Pet Age:</p>\n            <Input\n              disabled={this.state.inputDisabled}\n              value={this.state.assignPetAge}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignPetAge: item.target.value,\n                });\n              }}\n            />\n          </div>\n          <div className=\"item\">\n            <p>Pet Weight:</p>\n            <Input\n              disabled={this.state.inputDisabled}\n              value={this.state.assignPetWeight}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignPetWeight: item.target.value,\n                });\n              }}\n            />\n\n            <div className=\"unit\">{`kg`}</div>\n          </div>\n\n          <div className=\"btnF\">\n            <div className=\"btn\" onClick={this.handleCancel}>\n              Cancel\n            </div>\n            <div\n              className=\"btn\"\n              onClick={() => {\n                if (this.state.assignPetId) {\n                  assignPet();\n                } else {\n                  message.error(\"Did not find this pet\");\n                }\n              }}\n            >\n              Confirm\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  };\n  _list = () => {\n    const { search, petListData, searchPetList } = this.state;\n    let data = search.length > 0 ? searchPetList : petListData;\n    let option = data.map((item, index) => {\n      let male = item.gender === \"F\" ? \"Female\" : \"Male\";\n      return (\n        <li\n          key={item.organizationId}\n          onClick={() => {\n            this.setState({\n              selectPetId: item.petId,\n            });\n            console.log(item);\n          }}\n        >\n          <div className=\"item\">\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\n              {item.petName}\n            </span>{\" \"}\n            &nbsp;&nbsp;\n            <span\n              className=\"petName\"\n              style={{ margin: `${px(5)}px 0` }}\n            >{`${item.age} yrs,`}</span>{\" \"}\n            &nbsp;&nbsp;\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\n              {male}\n            </span>\n          </div>\n\n          {this.state.selectPetId === item.petId ? (\n            <span className=\"search\">&#xe614;</span>\n          ) : null}\n\n          {/* <div className=\"dui\">\n          <img src={} alt=\"\"/>\n        </div> */}\n        </li>\n      );\n    });\n    return <ul>{option}</ul>;\n  };\n\n  render() {\n    let { loading, disabled, historyData, searchText, serchExamData } =\n      this.state;\n    const _del = (key, record) => {\n      console.log(\"删除\", key, record);\n\n      fetchRequest(`/pet/deletePetExamByExamId/${key}`, \"DELETE\").then(\n        (res) => {\n          if (res.flag === true) {\n            console.log(\"删除成功\");\n            const historyData = [...this.state.historyData];\n            console.log(historyData);\n            this.setState({\n              historyData: historyData.filter((item) => item.historyId !== key),\n            });\n          } else {\n            console.log(\"删除失败\");\n          }\n        }\n      );\n    };\n\n    const columns = [\n      {\n        title: \"\",\n        dataIndex: \"operation\",\n        key: \"operation\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          // console.log('狩猎:', text, record, index);\n          //record:\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: `${px(8)}px 0`,\n              }}\n            >\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => _del(record.historyId, record)}\n              >\n                <img src={del} alt=\"\" style={{ marginRight: \"8px\" }} />\n              </Popconfirm>\n            </div>\n          );\n        },\n      },\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        key: \"date\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      {\n        title: \"Time\",\n        dataIndex: \"time\",\n        key: \"time\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      // {\n      //   // title: `Temp(${this.state.units})`,\n      //   title: `Temp(℉)`,\n      //   key: 'temp',\n      //   dataIndex: 'temp',\n      //   render: (text, record, index) => {\n      //     // console.log(text, record);\n      //     /**\n      //      * bag：温度数值前的圆圈的背景颜色\n      //      * tem：展示的温度\n      //      * endvalue:将从后台得到的数据全部转化成华氏度\n      //      * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n      //      * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n      //      *\n      //      */\n\n      //     let bag = '', tem = ''\n\n      //     let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\n      //     let min = 100.4, max = 102.56\n\n      //     if (endValue > max) {\n      //       bag = '#E1206D'\n      //     } else if (endValue < min) {\n      //       bag = '#98DA86'\n      //     } else {\n      //       bag = '#58BDE6'\n      //     }\n\n      //     if (this.state.units === '℃') {\n      //       if (text) {\n      //         tem = `${text}${this.state.units}`\n      //       }\n      //     } else {\n      //       if (text) {\n      //         if (text > 55) {\n      //           tem = `${text}${this.state.units}`\n      //         } else {\n      //           tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\n      //         }\n\n      //       }\n      //     }\n      //     return (\n      //       <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      //         {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\n      //         <p style={{ margin: 0, padding: 0 }}>{tem}</p>\n      //       </div>\n      //     )\n\n      //   }\n      // },\n\n      {\n        title: \" Pet Description\",\n        dataIndex: \"description\",\n        key: \"description\",\n        width: \"20%\",\n        render: (text, record, index) => {\n          return <p style={{ width: \"70px\" }}>{text}</p>;\n        },\n      },\n      // Species\n\n      {\n        title: \"Species\",\n        dataIndex: \"species\",\n        key: \"species\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          return <p style={{ width: \"70px\" }}>{text}</p>;\n        },\n      },\n\n      {\n        title: \"Note\",\n        dataIndex: \"note\",\n        key: \"note\",\n        width: \"20%\",\n        render: (text, record, index) => {\n          return <p style={{ width: \"70px\" }}>{text}</p>;\n        },\n      },\n\n      {\n        title: \"\",\n        dataIndex: \"assign\",\n        key: \"assign\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          return (\n            <div\n              className=\"assign\"\n              style={{\n                fontSize: px(16),\n                paddingTop: px(5),\n                paddingBottom: px(5),\n              }}\n              onClick={() => {\n                console.log(text, record, index);\n                this.setState({\n                  // visible: true,\n                  assignVisible: true,\n                  seleceEmergencies: record,\n                });\n              }}\n            >\n              Assign\n            </div>\n          );\n        },\n      },\n    ];\n\n    let tableData = searchText.length > 0 ? serchExamData : historyData;\n\n    return (\n      <div id=\"unassigned\">\n        <Heard\n          onReturn={() => {\n            this.props.history.goBack();\n          }}\n          onSearch={(data) => {\n            storage.doctorExam = JSON.stringify(data);\n\n            storage.doctorList = JSON.stringify(this.state.data);\n            if (storage.isClinical === \"true\") {\n              this.props.history.push({\n                pathname: \"/page8\",\n                identity: storage.identity,\n                patientId: data.patientId,\n              });\n            } else {\n              this.props.history.push({ pathname: \"/page10\" });\n            }\n          }}\n          menu8Click={() => {\n            console.log(\"--\", storage.identity);\n            switch (storage.identity) {\n              case \"2\":\n                this.props.history.push({\n                  pathname: \"/EzyVetSelectExam\",\n                  listDate: storage.ezyVetList,\n                  defaultCurrent: storage.defaultCurrent,\n                });\n\n                break;\n              case \"1\":\n                this.props.history.push(\"/VetSpireSelectExam\");\n\n                break;\n              case \"3\":\n                this.props.history.push({\n                  pathname: \"/uesr/selectExam\",\n                  listDate: storage.doctorList,\n                  defaultCurrent: storage.defaultCurrent,\n                });\n\n                break;\n\n              default:\n                break;\n            }\n          }}\n        />\n\n        <div className=\"body\">\n          <div\n            className=\"title\"\n            style={{\n              marginTop: px(30),\n              fontSize: px(30),\n              marginBottom: px(40),\n            }}\n          >\n            Unassigned Measurements{\" \"}\n          </div>\n          <div className=\"input\" style={{ marginBottom: px(10) }}>\n            <input\n              type=\"text\"\n              // className=\"iconfont search\"\n              placeholder=\"&#xe628; Search Pet Name or Description\"\n              value={this.state.searchText}\n              onChange={(e) => {\n                this.setState({\n                  searchText: e.target.value,\n                });\n                this._search(e.target.value);\n              }}\n              onKeyUp={(e) => {\n                // console.log(e);\n                if (e.keyCode === 13) {\n                  this._search();\n                }\n                if (e.keyCode === 27) {\n                  this.setState({\n                    searchText: \"\",\n                  });\n                }\n              }}\n            />\n            <div\n              className=\"searchBtn\"\n              style={{ height: px(35), fontSize: px(18) }}\n              onClick={this._search}\n            >\n              <p>Search</p>\n            </div>\n          </div>\n\n          <div className=\"table\">\n            <Table\n              style={{\n                // border: ' #979797 1px solid',\n                padding: 0,\n                margin: 0,\n                width: \"95%\",\n                height: MTop(280),\n                // backgroundColor: 'pink'\n              }}\n              loading={loading}\n              columns={columns}\n              dataSource={tableData}\n              rowKey={(columns) => columns.historyId}\n              // pagination={{ pageSize: 8, showSizeChanger: false, showQuickJumper: true }}\n              pagination={false}\n              scroll={{\n                y: MTop(260),\n              }}\n            />\n          </div>\n\n          {this._modal()}\n        </div>\n        <MyModal\n          visible={this.state.assignVisible}\n          // visible={true}\n          element={\n            <div className=\"myfindOrg\">\n              <div className=\"orgHeard\">\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\n                  <div\n                  // className=\" iconfont icon-left return\"\n                  // onClick={() => { this.setState({ isWorkplace: false, isOrg: true }) }}\n                  >\n                    {/* <img src={left1} alt=\"\" style={{ height: px(25) }} /> */}\n                  </div>\n                  <div\n                    onClick={() => {\n                      this.setState({ assignVisible: false });\n                    }}\n                  >\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\n                  </div>\n                </div>\n                <div\n                  className=\"text\"\n                  onMouseOver={() => {\n                    if (disabled) {\n                      this.setState({\n                        disabled: false,\n                      });\n                    }\n                  }}\n                  onMouseOut={() => {\n                    this.setState({\n                      disabled: true,\n                    });\n                  }}\n                >\n                  Assign Measurement\n                </div>\n\n                <div className=\"searchBox\">\n                  <Input\n                    placeholder=\" &#xe61b; Search Pet\"\n                    bordered={false}\n                    allowClear={true}\n                    value={this.state.search}\n                    onChange={(item) => {\n                      this.setState({\n                        search: item.target.value,\n                      });\n                      this._searchPet(item.target.value);\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"list\">{this._list()}</div>\n\n              <div className=\"foot\">\n                <div\n                  className=\"btnn flex\"\n                  style={{ height: px(45) }}\n                  onClick={() => {\n                    this.setState({\n                      assignVisible: false,\n                      visible: true,\n                    });\n                  }}\n                >\n                  <p>+Add New Pet</p>\n                </div>\n                <div\n                  className=\"btnn flex\"\n                  style={{ height: px(45) }}\n                  onClick={() => {\n                    if (!this.state.selectPetId) {\n                      message.error(\"Please select a pet to assign\");\n                    } else {\n                      let { selectPetId, seleceEmergencies, historyData } =\n                        this.state;\n                      let parmes = {\n                        petId: selectPetId,\n                        clinicalDatagroupId:\n                          seleceEmergencies.clinicalDatagroupId,\n                      };\n                      console.log(\"分配的数据信息\", parmes);\n                      fetchRequest(\n                        `/pet/addAndSavePetExam/${seleceEmergencies.historyId}`,\n                        \"POST\",\n                        parmes\n                      )\n                        .then((res) => {\n                          console.log(\"----------\", res);\n                          if (res.flag === true) {\n                            console.log(\"分配成功\");\n                            message.success(\"Assigned successfully\");\n                            let arr = [];\n                            for (let i = 0; i < historyData.length; i++) {\n                              const element = historyData[i];\n                              if (\n                                seleceEmergencies.clinicalDatagroupId !==\n                                element.clinicalDatagroupId\n                              ) {\n                                arr.push(element);\n                              }\n                            }\n\n                            this.setState({\n                              assignVisible: false,\n                              historyData: arr,\n                            });\n                          } else {\n                            message.error(\"Assignment failed\");\n                          }\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                          message.error(\"Assignment failed\");\n                        });\n                    }\n                  }}\n                >\n                  <p>Confirm</p>\n                </div>\n                {/* <Button\n                  text={'+Add New Pet'}\n                  onClick={() => {\n                    this.setState({\n                      assignVisible: false,\n                      visible: true\n                    })\n                  }}\n                />\n                <Button\n                  text={'Confirm'}\n                  \n                /> */}\n              </div>\n            </div>\n          }\n        />\n      </div>\n    );\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/minClose/MinClose.js",["381","382","383"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/axios/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/hardwareAction.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/petType.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/workPlace/WorkPlace.jsx",["384","385","386","387","388","389","390","391","392"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/admin_VetProfile/Veterinarians.jsx",["393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js",["409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport {\n  Menu,\n  Popover,\n  Button,\n  Modal\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport { SyncOutlined, createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\nimport { SearchOutlined } from '@ant-design/icons';\nimport moment from 'moment'\nimport MyModal from './../myModal/MyModal'\nimport { connect } from 'react-redux'\nimport { setMenuNum } from '../../store/actions';\n\n//import 'antd/dist/antd.css';\nimport './heard.less'\nimport help from './../../assets/images/help.png'\nimport message from './../../assets/images/message.png'\nimport triangle from './../../assets/img/triangle.png'\nimport { mTop, px, MTop } from '../px';\nimport electronStore from '../electronStore';\nimport dog from './../../assets/images/reddog.png'\nimport cat from './../../assets/images/redcat.png'\nimport other from './../../assets/images/redother.png'\nimport menu from './../../assets/img/menu.png'\nimport heardLeft from './../../assets/img/heardLeft.png'\nimport blueSearchPng from './../../assets/img/blueSearch.png'\nimport close from './../../assets/img/close.png'\nimport MinClose from '../../utils/minClose/MinClose';\nimport jinggao from './../../assets/img/jinggao.png'\nimport redclose from './../../assets/img/redclose.png'\n\nimport rMin_red from './../../assets/img/min-red.png'\nimport rClose_red from './../../assets/img/close-red.png'\n\nimport rMin_white from './../../assets/img/min-white.png'\nimport rClose_white from './../../assets/img/close-white.png'\nimport mellaLogo from './../../assets/images/mellaLogo.png'\nimport { version, updateTime } from './../appversion'\nimport { fetchRequest4 } from '../FetchUtil4';\nimport Button1 from '../button/Button';\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\n\nconst allPetList = electronStore.get('doctorExam')\nlet storage = window.localStorage\nlet ipcRenderer = window.electron.ipcRenderer\n\nlet mouseoutTimer = null\nlet matchingTimer = null\n\n/**\n * \n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns \n */\n\n\nconst Heard = ({\n  onReturn,\n  onSearch,\n  menu1Click,\n  menu2Click,\n  menu3Click,\n  menu4Click,\n  menu5Click,\n  menu6Click,\n  menu7Click,\n  menu8Click,\n  menu9Click,\n  blueSearch,\n  setMenuNum\n}) => {\n  const [minbgc, setMinbgc] = useState('')        //最小化的背景颜色\n  const [closebgc, setClosebgc] = useState('')    //关闭按钮的背景色\n  const [rMin, setRMin] = useState(rMin_red)      //最小化的图标\n  const [rClose, setRClose] = useState(rClose_red) //关闭按钮图标\n  const [value, setValue] = useState('')          //搜索框输入的内容\n  const [visible, setVisible] = useState(false)   //搜索框下面的搜索model\n  const [loading, setLoading] = useState(false)     //搜索宠物过程中的加载图标\n  const [petList, setPetList] = useState([])        //搜索到的宠物列表\n  const [menuVisible, setMenuVisible] = useState(false)//菜单图标下面的菜单内容图标\n  const [menuMouseOverIndex, setMenuMouseOverIndex] = useState('')//用来定位鼠标滑到哪个菜单选项\n\n\n  const [modalvisible, setModalVisible] = useState(false)       //关于的弹窗\n  const [modalVis, setModalVis] = useState(false)               //RFID搜索是否有宠物的弹窗\n  const [isNotFound, setIsNotFound] = useState(false)           //是否找到RFID对应的图标\n  const [deviceModel, setDeviceModel] = useState(false)         //我的设备弹窗\n\n  const [noUSB, setNoUSB] = useState(false)                 //没有底座设备\n  const [searchMac, setSearchMac] = useState(false)         //是否展示狗牌mac搜索图标下面的Modal框\n  const [bluDevice, setBluDevice] = useState([])            //搜索到的狗牌设备mac地址\n\n  const [isShowBlePetList, setIsShowBlePetList] = useState(false)  //是否展示狗牌对应宠物\n  const [isMatchPet, setIsMatchPet] = useState(false)      //正在匹配狗牌对应的宠物\n  const [macMatchPetList, setMacMatchPetList] = useState([])\n  const [updateStatus, setUpdateStatus] = useState('init')\n  const [lastVersion, setLastVersion] = useState(version)\n  const [downLoadNum, setDownLoadingNum] = useState(0)\n  const [selectDeviceMac, setSelectDeviceMac] = useState('')\n\n  //这里是为了模拟数据所做出来的,后期要改成接口\n  const testPetList = [\n\n    { macId: \"E0:7C:62:30:08:08\", petName: 'Mella', petId: \"b9de0868-9202-4fc9-9f1b-325220ceeccf\" },\n    { macId: \"E0:7C:62:03:75:32\", petName: 'Possum', petId: \"e4b11580-1277-4b10-bd64-46b097f6f882\" },\n    { macId: \"E0:7D:EA:A8:8D:7E\", petName: 'Charlie', petId: \"b4e7a185-1c7e-4885-ab95-4a7d2d2ada83\" },\n    { macId: \"E0:7C:62:32:76:8C\", petName: 'Noah', petId: \"01b34bf2-47e6-4036-884f-47299447cb6a\" },\n\n    { macId: \"84:C2:E4:03:C3:06\", petName: \"Whitey\", petId: \"f713a238-f5df-4c85-8c4f-5766b0770c07\" },\n  ]\n\n\n\n\n\n  useEffect(() => {\n    console.log('mac列表为空,初始化');\n    mouseoutTimer && clearTimeout(mouseoutTimer)\n    setBluDevice([])\n    return () => {\n      matchingTimer && clearTimeout(matchingTimer)\n    }\n  }, [])\n  useEffect(() => {\n    ipcRenderer.on('uploadMessage', uploadMessage)\n    return () => {\n      ipcRenderer.removeListener('uploadMessage', uploadMessage)\n    }\n  }, [])\n\n  const uploadMessage = (e, data) => {\n    switch (data.payload.status) {\n      case -1:\n        console.log('查询异常');\n        break;\n\n      case 0:\n        console.log('正在检查应用程序更新');\n        setUpdateStatus('check')\n        break;\n\n      case 2:\n        console.log('正在检查应用程序更新');\n        setUpdateStatus('lastVersion')\n        break;\n\n      case 1:\n        console.log('检测到新版本');\n        let version = data.output.version\n        setLastVersion(version)\n\n        setUpdateStatus('newVersion')\n        break;\n\n      case 3:\n        console.log('下载新版成功');\n      case 4:\n        console.log('取消背景下载');\n      case 5:\n        console.log('取消安装');\n        setUpdateStatus('init')\n        break;\n      case 6:\n        console.log('正在下载');\n        setUpdateStatus('downLoading')\n        let loadNum = data.output.percent ? (data.output.percent / 100).toFixed(1) : 0\n        setDownLoadingNum(loadNum)\n\n      default:\n        break;\n    }\n  }\n\n\n  useEffect(() => {\n    if (blueSearch) {\n      console.log('---渲染时执行----??????');\n      ipcRenderer.on('sned', _send)\n      ipcRenderer.on('noUSB', _noUSB)\n      return () => {\n        console.log('----卸载----?????????/');\n        ipcRenderer.removeListener('sned', _send)\n        ipcRenderer.removeListener('noUSB', _noUSB)\n      }\n    }\n\n  }, [])\n\n  const _noUSB = (e, data) => {\n    console.log('没有USB设备：', data);\n    if (data === false) {\n      setNoUSB(false)\n    } else {\n      if (!noUSB) {\n        setNoUSB(true)\n      }\n    }\n  }\n  const _send = (event, data) => {\n\n    command(data)()\n  }\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  const command = (newArr) => {\n    let dataArr1 = newArr.map(item => {\n      if (item.toString(16).length < 2) {\n        return '0' + item.toString(16)\n      } else {\n        return item.toString(16)\n      }\n    })\n    console.log(dataArr1);\n    const instruction = [255]\n    const commandArr = {\n\n      255: () => {\n        // console.log(dataArr1);\n        // console.log(bluDevice);\n        let length = newArr.length\n        let frameLength = newArr[1]   //帧长\n        let itemLength = newArr[3] + 1  //数据位的长度   13\n        let dataIndex = 0\n\n        let MAC = ''\n        let bluData = []\n        let UUID = ''\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\n          let itemData = []\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5])\n          }\n          // console.log('循环得到的数据', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              break;\n            case 255:\n              break;\n            case 3: break;\n            case 239:\n              // console.log('---mac地址');\n              let str = itemData[0]\n              for (let i = 1; i < itemData.length; i++) {\n                str += `:${itemData[i]}`\n              }\n              MAC = str.toUpperCase()\n\n              break;\n            case 7:\n              console.log('uuid');\n              let uuid = ''\n              for (let i = 0; i < itemData.length; i++) {\n                uuid += `${itemData[i]}`\n              }\n              UUID = uuid\n              break\n            default: return;\n          }\n          dataIndex = itemLength\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\n\n          // console.log(itemLength, itemLength < length && (itemLength + 3 <= frameLength));\n        }\n        console.log('----mac', MAC, '-----uuid', UUID);\n        if (UUID === 'd7895ab1acc74de3b9919e825c24c809') {\n          // console.log('uuid相等', bluDevice, bluDevice.indexOf(MAC) === -1,);\n          if (bluDevice.indexOf(MAC) === -1) {\n            let dataArr = [].concat(bluDevice)\n            dataArr.push(MAC)\n            setBluDevice(dataArr)\n          }\n\n        }\n      }\n\n\n\n\n    }\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]]\n    } else {\n      return () => {\n        console.log('没有控制命令', commandArr);\n      }\n    }\n  }\n\n\n\n\n\n\n  let history = useHistory();\n  //最小化，关闭的\n  const MINCOLOSE = {\n    minMouseEnter: () => {\n      setMinbgc('rgba(70, 70, 70, 0.5)')\n      setRMin(rMin_white)\n    },\n    minMouseLeave: () => {\n      setMinbgc('')\n      setRMin(rMin_red)\n    },\n    minClock: () => {\n      setMinbgc('')\n      setRMin(rMin_red)\n      let ipcRenderer = window.electron.ipcRenderer\n      ipcRenderer.send('window-min')\n\n    },\n    closeMouseEnter: () => {\n      setClosebgc('rgba(232,17,35)')\n      setRClose(rClose_white)\n    },\n    closeMouseLeave: () => {\n      setClosebgc('')\n      setRClose(rClose_red)\n    },\n    closeClock: () => {\n      let ipcRenderer = window.electron.ipcRenderer\n      ipcRenderer.send('window-close')\n    },\n  }\n\n\n\n\n\n  //搜索框内容\n  const searchPetBody = () => {\n\n\n    if (loading) {\n      //加载中\n      return (\n        <div className='searchPetLoading' style={{ padding: `${20}px 0` }}>\n          <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n            <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\n          </div>\n          <p style={{ color: '#e1206d', marginTop: px(5) }}>\n            loading...\n          </p>\n        </div>\n      )\n    } else {\n      // console.log('-----展示', petList.length);\n      if (petList.length > 0) {\n        //找到了宠物，展示出来\n\n        // let petList = electronStore.get('doctorExam')\n        // console.log(petList);\n\n        let option = petList.map((item, index) => {\n          let { speciesId, url } = item\n\n          let images = `url(${url}?download=0&width=150)`\n          if (!url) {\n            switch (speciesId) {\n              case 1: images = `url(${cat})`\n\n                break;\n              case 2: images = `url(${dog})`\n                break\n              default: images = `url(${other})`\n                break;\n            }\n          }\n          return (\n            <li\n              key={`${index}`}\n              style={{ margin: `${px(20)}px 0` }}\n              onClick={() => {\n                // console.log(item);\n                setValue('')\n                setVisible(false)\n                setPetList([])\n\n                onSearch(item)\n              }}\n            >\n              <div className='item' style={{ paddingLeft: px(40) }}>\n                <div\n                  className='img'\n                  style={{\n                    width: px(50),\n                    height: px(50),\n                    marginRight: px(40),\n                    borderRadius: px(60),\n                    backgroundImage: images,\n                    // backgroundColor: 'hotpink',\n\n                  }}>\n                  {/* <img src={images} style={{ width: px(40) }} /> */}\n                </div>\n\n                <div className='petInfo'>\n                  <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.petName}</p>\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\n                </div>\n              </div>\n            </li >\n          )\n\n        })\n        let liStyle = { backgroundColor: '#fff', }\n        if (petList.length > 4) {\n          liStyle = { height: px(500), overflowY: 'auto' }\n        }\n\n\n        return (\n          <div className='searchPetList'>\n            <ul style={liStyle}>\n              {option}\n            </ul>\n          </div>\n        )\n      } else {\n        //没有发现这个宠物\n        return (\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\n\n            <p style={{ width: '80%', fontSize: px(18) }}>\n              Pet not found. Would you like\n              to add a new patient?\n            </p>\n\n            <div\n              className='searchPetBtn'\n              style={{ fontSize: px(18) }}\n              onClick={() => {\n                history.push('/pet/doctorAddPet')\n              }}\n            >\n              <p style={{ padding: `${px(8)}px 0` }}>+ New Patient</p>\n            </div>\n          </div>\n        )\n      }\n\n    }\n\n  }\n\n  const inputChange = (text) => {\n\n    function isNumber(val) {\n      var regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\n      var regNeg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\n      if (regPos.test(val) || regNeg.test(val)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    //去除前后空格\n    let search = text.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\")\n    setValue(search)\n    if (search.length > 0) {\n      setVisible(true)\n      setLoading(true)\n\n      //搜索分成两种，一种是通过手输入数据搜索，一种是通过RFID扫描过后搜索\n\n      if (search.length === 15 && isNumber(search)) {\n        //这是RFID扫描后的搜索\n        fetchRequest4(`/pet/getPetInfoByRFID/${search}/${storage.lastOrganization}`, 'GET')\n          .then(res => {\n            console.log('----RFID搜索结果', res);\n\n            if (res.flag === true && res.data) {\n              let { createTime, patientId, petName, firstName, lastName, url, speciesId, breedName, gender, birthday, petId, rfid, weight } = res.data\n              patientId = patientId || 'unknown'\n              petName = petName || 'unknown'\n              breedName = breedName || 'unknown'\n              weight = weight || 'unknown'\n              let owner = ''\n              if (!firstName) {\n                firstName = ''\n              }\n              if (!lastName) {\n                lastName = ''\n              }\n              if (lastName === '' && firstName === '') {\n                owner = 'unknown'\n              } else {\n                owner = `${lastName} ${firstName}`\n              }\n              createTime = moment(createTime).format('X')\n              let petGender = ''\n              switch (`${gender}`) {\n                case '1': petGender = 'F'\n\n                  break;\n                case '0': petGender = \"M\"\n                  break;\n                default: petGender = 'unknown'\n                  break;\n              }\n              let petAge = 'unknown'\n              if (birthday) {\n                petAge = moment(new Date()).diff(moment(birthday), 'years')\n                // console.log('petAge', petAge);\n              }\n              let json = {\n                insertedAt: createTime,\n                patientId,\n                petName,\n                owner,\n                breed: breedName,\n                gender: petGender,\n                age: petAge,\n                petId,\n                id: 0,\n                weight,\n                rfid,\n                url,\n                speciesId\n              }\n              let searchData = []\n              searchData.push(json)\n              setLoading(false)\n              setPetList(searchData)\n\n\n\n            } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\n              console.log('找到了但是不是在这个组织下');\n              setLoading(false)\n              setModalVis(true)\n              setIsNotFound(false)\n              setValue('')\n              setVisible(false)\n\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: false,\n              //   heardSearchText: ''\n              // })\n            } else {\n              console.log('没有找到');\n              setLoading(false)\n              setModalVis(true)\n              setIsNotFound(true)\n              setValue('')\n              setVisible(false)\n\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: true,\n              //   heardSearchText: ''\n              // })\n            }\n          })\n          .catch(err => {\n\n            console.log('抛出异常:', err);\n            setLoading(false)\n          })\n        return\n      }\n\n      /**\n       * 使用indexof方法实现模糊查询\n       *     语法：stringObject.indexOf(searchvalue, fromindex)\n       *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n       *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n       *  \n       * list         原数组\n       * keyWord      查询关键词\n       * searchData   查询的结果\n       * \n       * toLowerCase（）方法：将字符串统一转成小写\n       * toUpperCase（）方法：将字符串统一转成大写\n       * \n       */\n      // let list = allPetList \n      let list = electronStore.get('doctorExam') || []\n\n      let searchData = []\n      let keyWord = search\n      for (let i = 0; i < list.length; i++) {\n        let petName = list[i].petName.toLowerCase() || ''\n        let patientId = list[i].patientId.toLowerCase() || ''\n        let rfid = list[i].rfid || ''\n        if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${rfid}`.indexOf(keyWord) !== -1\n        ) {\n          searchData.push(list[i])\n        }\n      }\n      // console.log('找到的宠物', searchData);\n      console.log('---搜索词：', search, '---搜索数组：', list, '----搜索结果：', searchData);\n      setLoading(false)\n      setPetList(searchData)\n\n    } else {\n      setVisible(false)\n    }\n\n\n\n  }\n\n  //左侧菜单栏\n  const menuList = () => {\n    let menulistArr = [\n      { name: 'Home', index: '1' },\n      { name: 'All Patients', index: '2' },\n      { name: 'Scheduled Patients', index: '3' },\n      { name: 'My Account', index: '4' },\n      { name: 'Settings', index: '5' },\n      { name: 'Enter Clinical Study Mode', index: '6' },\n      { name: `Billing & Subscriptions`, index: '7' },\n      { name: 'About Mella', index: '8' },\n      { name: 'Log Out', index: '9' },\n\n    ]\n    let menuOption = menulistArr.map((item, index) => {\n\n      let pColor = menuMouseOverIndex === item.index ? '#e1206d' : '#1a1a1a'\n      return (\n        <li\n          key={item.index}\n          style={{ padding: `${px(15)}px ${px(20)}px` }}\n          onClick={() => {\n            menulistClick(item)\n\n          }}\n          onMouseOver={(e) => {\n            setMenuMouseOverIndex(item.index)\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOver()\n          }}\n          onMouseOut={(e) => {\n            setMenuMouseOverIndex('')\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOut()\n          }}\n        >\n          <div className='item'>\n            <p style={{ color: pColor }}>{item.name}</p>\n          </div>\n        </li >\n      )\n\n    })\n\n    return (\n      <ul>\n        {menuOption}\n      </ul>\n    )\n\n\n  }\n  const menulistClick = e => {\n    mouseoutTimer && clearTimeout(mouseoutTimer)\n    setMenuVisible(false)\n    setMenuMouseOverIndex('')\n    console.log('click ', e);\n\n    switch (e.index) {\n      case \"1\":\n        history.push('/MainBody')\n        setMenuNum(e.index)\n        break;\n      case \"2\":\n        history.push('/MainBody')\n        console.log('全部的宠物');\n        setMenuNum(e.index)\n        break;\n      case \"3\":\n        history.push('/MainBody')\n        console.log('预约宠物');\n        setMenuNum(e.index)\n        break;\n      case \"4\":\n        console.log('我的账号');\n        break;\n      case \"5\":\n        //跳转到设置\n        // menu5Click()\n        history.push('/menuOptions/settings');\n        setMenuNum(e.index)\n        break;\n      case \"6\":\n        history.push('/MainBody')\n        console.log('临床测试');\n        setMenuNum(e.index)\n        break;\n      case \"7\":\n        console.log('billing');\n        break;\n\n      case \"8\":\n        setModalVisible(true)\n        console.log('关于');\n        break;\n      case \"9\":\n        console.log('退出登录');\n        storage.userId = ''\n        storage.roleId = ''\n        storage.userWorkplace = ''\n        storage.lastOrganization = ''\n        storage.lastWorkplaceId = ''\n        storage.connectionKey = ''\n        storage.isClinical = 'false'\n        setMenuNum('1')\n        history.push('/')\n        break;\n\n\n      default:\n        break;\n    }\n  }\n  const menuMouseOut = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer)\n    mouseoutTimer = setTimeout(() => {\n\n      setMenuVisible(false)\n      mouseoutTimer && clearTimeout(mouseoutTimer)\n    }, 1000);\n\n\n  }\n  const menuMouseOver = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer)\n    setMenuVisible(true)\n  }\n  const updatePage = () => {\n    switch (updateStatus) {\n      case 'init':\n        return (\n          <div className='updateBtn' style={{ height: px(40), }}\n            onClick={() => {\n              setDownLoadingNum(0)\n              setUpdateStatus('check')\n\n              ipcRenderer.send('clickUpdateBtn')\n            }}\n          >\n            Check for Updates\n          </div>\n        )\n      case 'check':\n        return (\n          <div className='updateLoading flex' >\n            <div className=\"loadIcon1\" >\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginRight: px(20) }} />\n            </div>\n            <p style={{ color: '#e1206d', }}>Checking for updates</p>\n          </div>\n        )\n      case 'lastVersion':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            already the latest version\n          </div>\n        )\n\n      case 'newVersion':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            {`Found new version V${lastVersion}`}\n\n          </div>\n        )\n      case 'downLoading':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            {`Download progress: ${downLoadNum}%`}\n\n          </div>\n        )\n\n      default:\n        break;\n    }\n\n\n\n\n  }\n  //关于界面\n  const modal = () => {\n    return (\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\n        <div className='writeBox' style={{ borderRadius: px(25) }} >\n          <div className='modalHeadr'>\n            <div className='close'>\n              <div className='imgBox'\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => {\n                  setModalVisible(false)\n                  setUpdateStatus('init')\n                }}\n              >\n                <img src={close} style={{ width: px(23), }} />\n              </div>\n\n            </div>\n            <div className='heaerCenter'>\n              <div className='heaerCenterL'>\n                <img src={mellaLogo} style={{ width: '80%' }} />\n\n              </div>\n              <div className='heaerCenterR'>\n                <h1 style={{ fontSize: px(45), marginBottom: px(10) }}>About the System</h1>\n                <div className='version'>\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Version</div>\n                  <div className='versionR' style={{ fontSize: px(24) }}>{version}</div>\n                </div>\n                <div className='version'>\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Last Checked</div>\n                  <div className='versionR' style={{ fontSize: px(24) }}>{updateTime}</div>\n                </div>\n\n                <div className='check' style={{ marginTop: px(20) }}>\n                  {updatePage()}\n\n\n\n\n\n\n                </div>\n\n              </div>\n            </div>\n\n          </div>\n          <div className='modalfoot'>\n            <div className='about' style={{ marginTop: px(40), fontSize: px(18) }}>\n              Nanjing Jiubian Technology Co., Ltd. was founded in 2019, located in Nanjing Yuhuatai Software Valley Branch City, the company brings together medical sensors, mobile Internet and other industry's top professionals, business areas covering artificial intelligence, smart medical, pet health, sleep monitoring, etc., is a design, research and development, production, sales, service in one of the high-tech companies. The nine-sided science and technology to \"the number of heavens and earths, starting from one, finally nine\" as the cultural concept, adhering to the essence of Chinese artisans, with an international vision, always standing in the forefront of bio-intelligent medical monitoring technology.\n            </div>\n\n            <div className='aLable'>\n              <a href=\"#\"\n                style={{ fontSize: px(18), marginRight: px(50) }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >Terms and Agreements</a>\n              <a\n                href=\"#\"\n                style={{ fontSize: px(18), }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >Privacy Policy</a>\n            </div>\n\n            <div className='foot' style={{ marginBottom: px(40) }}>© 2021 Mella Pet Care All RIghts Reserved</div>\n\n          </div>\n\n        </div>\n\n      </div>\n    )\n  }\n\n  //设备列表界面\n  const devices = () => {\n\n    let userId = storage.userId\n    // electronStore.delete(`${userId}-deviceList`)\n    let deviceList = electronStore.get(`${userId}-deviceList`)\n    console.log('---', deviceList);\n    if (!deviceList) {\n      let str = `${getRamNumber()}`\n      for (let i = 0; i < 5; i++) {\n        str += `:${getRamNumber()}`\n      }\n      console.log('随机生成的mac地址:', str);\n      deviceList = [{ name: 'MellaPro', deviceType: 'mellaPro', macId: str }]\n      electronStore.set(`${userId}-deviceList`, deviceList)\n    }\n\n\n    function getRamNumber() {\n      var result = '';\n      for (var i = 0; i < 2; i++) {\n        result += Math.floor(Math.random() * 16).toString(16);//获取0-15并通过toString转16进制\n      }\n      //默认字母小写，手动转大写\n      return result.toLowerCase();//另toLowerCase()转小写\n    }\n\n\n    // deviceList = [\n    //   // { name: 'Add Device', deviceType: 'add', macId: '0' },\n    //   { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\n    //   { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:51:66' },\n    //   { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:35:66' },\n    //   { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:24:33:44:55:66' },\n    //   { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:25:66' },\n    //   { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:56:66' },\n    // ]\n\n    let options = deviceList.map((item, index) => {\n      return <li\n        className='flex'\n        key={`${index}`}\n        style={{ marginBottom: px(15), marginTop: px(5), }}\n        onClick={() => {\n          console.log(item.macId);\n          setSelectDeviceMac(item.macId)\n        }}\n      >\n        <div className='liLeft' style={{ fontSize: px(16) }}>{item.name}</div>\n        <div className='liCenter' style={{ fontSize: px(16) }}>{item.macId}</div>\n        <div className='liRight'>\n          <div className='circle flex' style={{ width: px(18), height: px(18) }}>\n            {selectDeviceMac === item.macId && <div className='redCircle' />}\n          </div>\n        </div>\n      </li>\n    })\n\n    return (\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\n        <div className='writeBox devices' style={{ borderRadius: px(25), width: px(400) }} >\n          <div className='deviceHeadr'>\n            <div className='close'>\n              <div className='imgBox'\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => setDeviceModel(false)}\n              >\n                <img src={close} style={{ width: px(23), }} />\n              </div>\n\n            </div>\n            <div className='logo flex'>\n              <img src={mellaLogo} style={{ width: px(60) }} />\n              <div style={{ fontSize: px(22), marginTop: px(30) }}>Devices</div>\n              <div className='bodyText' style={{ fontSize: px(18), marginTop: px(40) }}>Select the device you would<br />\n                like to use or add a new device.</div>\n            </div>\n\n          </div>\n\n          <div className='deviceCenter'>\n            <ul>\n              {options}\n            </ul>\n          </div>\n          <div className='deviceFooter flex' style={{ borderBottomLeftRadius: px(25), borderBottomRightRadius: px(25) }}>\n            <div className='btn' style={{ height: px(40) }}\n              onMouseDown={() => {\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\n                button[0].style.opacity = \"0.5\"\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\n                button[0].style.opacity = \"1\"\n              }}\n              onClick={() => {\n                setDeviceModel(false)\n                history.push('/menuOptions/AddDevice');\n\n              }}\n\n            >\n              <p className='btnText' style={{ fontSize: px(18) }}>New Device</p>\n            </div>\n            <div className='btn' style={{ height: px(40) }}\n\n              onMouseDown={() => {\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\n                button[1].style.opacity = \"0.5\"\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\n                button[1].style.opacity = \"1\"\n              }}\n              onClick={() => {\n                electronStore.set(`${storage.userId}-selectDevice`, selectDeviceMac)\n                setDeviceModel(false)\n              }}\n            >\n              <p className='btnText' style={{ fontSize: px(18) }}>Connect</p>\n            </div>\n          </div>\n\n\n        </div>\n\n      </div>\n    )\n  }\n\n  //点击蓝牙搜索图标\n  const blueClick = () => {\n    console.log('点击了蓝牙图标');\n    setIsShowBlePetList(false)\n    setSearchMac(true)\n\n\n  }\n  //点击取消链接\n  const cencleClick = (e) => {\n    console.log('mac列表为空,点击取消');\n    setBluDevice([])\n    setSearchMac(false)\n    setIsShowBlePetList(false)\n    setIsMatchPet(false)\n    setMacMatchPetList([])\n    if (e) {\n      e.preventDefault()\n    }\n    matchingTimer && clearTimeout(matchingTimer)\n\n\n  }\n  //搜索狗牌的蓝牙\n  const blusearchBody = () => {\n    console.log('搜索狗牌的蓝牙', searchMac, bluDevice);\n    if (isShowBlePetList) {\n      if (isMatchPet) {\n        return (\n          <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\n            <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\n            </div>\n            <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>matching...</p>\n\n            <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\n              onClick={cencleClick}\n            >Cencle</a>\n          </div>\n        )\n      } else {\n        if (macMatchPetList.length > 0) {\n\n          let option = macMatchPetList.map((item, index) => {\n            let { speciesId, url } = item\n\n            let images = `url(${url}?download=0&width=150)`\n            if (!url) {\n              switch (speciesId) {\n                case 1: images = `url(${cat})`\n                  break;\n                case 2: images = `url(${dog})`\n                  break\n                default: images = `url(${other})`\n                  break;\n              }\n            }\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  cencleClick()\n                  onSearch(item)\n                }}\n              >\n                <div className='item' style={{ paddingLeft: px(40) }}>\n                  <div\n                    className='img'\n                    style={{\n                      width: px(50),\n                      height: px(50),\n                      marginRight: px(40),\n                      borderRadius: px(60),\n                      backgroundImage: images,\n                    }}>\n                    {/* <img src={images} style={{ width: px(40) }} /> */}\n                  </div>\n\n                  <div className='petInfo'>\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20), textAlign: 'start' }}>{item.petName}</p>\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\n                  </div>\n                </div>\n              </li >\n            )\n\n          })\n          let liStyle = { backgroundColor: '#fff', }\n          if (petList.length > 4) {\n            liStyle = { height: px(500), overflowY: 'auto' }\n          }\n\n\n          return (\n            <div className='searchPetList flex' >\n              <ul style={liStyle}>\n                {option}\n              </ul>\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\n                onClick={cencleClick}\n              >Cencle</a>\n            </div>\n          )\n        }\n      }\n    } else {\n      if (noUSB) {\n        return (\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\n\n            <p style={{ width: '80%', fontSize: px(18) }}>\n              Please insert address and scan\n            </p>\n\n            <a href=\"#\" style={{ color: '#e1206d' }}\n              onClick={cencleClick}\n            >Cencle</a>\n          </div>\n        )\n      } else {\n        if (bluDevice.length > 0) {\n          let option = bluDevice.map((item, index) => {\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  console.log('mac列表为空,点击列表内容');\n                  setBluDevice([])\n                  // setSearchMac(false)\n                  setIsShowBlePetList(true)\n                  setIsMatchPet(true)\n                  matchingTimer && clearTimeout(matchingTimer)\n                  matchingTimer = setTimeout(() => {\n                    let haveFlog = false, index = -1\n                    for (let i = 0; i < testPetList.length; i++) {\n                      if (testPetList[i].macId === item) {\n                        haveFlog = true\n                        index = i\n                        break;\n                      }\n                    }\n                    if (haveFlog) {\n                      if (storage.lastOrganization === '1') {\n                        matchPet(testPetList[index].petId)\n                      } else {\n                        setModalVis(true)\n                        setIsNotFound(false)\n                        cencleClick()\n\n                      }\n                    } else {\n                      setModalVis(true)\n                      setIsNotFound(true)\n                      cencleClick()\n                    }\n\n\n                    setIsMatchPet(false)\n                    matchingTimer && clearTimeout(matchingTimer)\n                  }, 2000);\n\n\n                }}\n              >\n                <div className='item' style={{ paddingLeft: px(40) }}>\n                  <div className='petInfo'>\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>mac:{item}</p>\n                  </div>\n                </div>\n              </li >\n            )\n          })\n          let liStyle = { backgroundColor: '#fff', }\n          if (bluDevice.length > 4) {\n            liStyle = { height: px(500), overflowY: 'auto' }\n          }\n          return (\n            <div className='searchPetList' style={{ flexDirection: 'column' }}>\n              <ul style={liStyle}>\n                {option}\n              </ul>\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\n                onClick={cencleClick}\n              >Cencle</a>\n            </div>\n          )\n        } else {\n          return (\n            <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\n              <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n                <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\n              </div>\n              <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>\n                scanning...\n              </p>\n\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\n                onClick={cencleClick}\n              >Cencle</a>\n            </div>\n          )\n        }\n      }\n    }\n\n  }\n  const matchPet = (searchValue) => {\n    console.log('搜索词:', searchValue);\n    let list = electronStore.get('doctorExam')\n\n    let searchData = []\n    let keyWord = searchValue\n    for (let i = 0; i < list.length; i++) {\n\n      let petName = `${list[i].petId}`\n      if (keyWord === petName) {\n        searchData.push(list[i])\n      }\n    }\n\n\n    setIsMatchPet(false)\n\n    setMacMatchPetList(searchData)\n  }\n\n\n\n  return (\n    <div id=\"heard\"\n      style={{ height: px(50) }}\n    >\n      <div className='l'>\n        <div className='menuF' style={{ marginLeft: px(40), marginRight: px(40) }}>\n          <div className=\"menu\"\n            onMouseOver={menuMouseOver}\n            onMouseOut={menuMouseOut}>\n            <img src={menu} style={{ width: px(20), }} />\n            {\n              menuVisible\n                // true\n                ? <div\n                  className='manuBody'\n                  style={{ top: px(20), left: px(-40) }}\n                >\n                  <div className='triangle'\n                    style={{\n                      borderLeft: `${px(10)}px solid transparent`,\n                      borderRight: `${px(10)}px solid transparent`,\n                      borderBottom: `${px(13)}px solid #fff`,\n                      left: px(40)\n                    }} />\n\n                  <div className='manuBodyList' style={{ marginTop: px(13) }}>\n                    {menuList()}\n                  </div>\n                </div>\n                : null\n            }\n\n\n\n\n\n\n          </div>\n        </div>\n\n\n\n        <div className=\"search\" style={{ width: px(300) }}>\n\n          <input\n            placeholder=\"Search Pet    &#xe63f;\"\n            style={{ fontSize: px(16), paddingLeft: px(20) }}\n            value={value}\n            onChange={(text) => {\n              inputChange(text)\n            }}\n\n            onKeyUp={(e) => {\n              // console.log(e);\n              if (e.keyCode === 13) {\n                console.log('回车,去搜索');\n              }\n              if (e.keyCode === 27) {\n                console.log('清空');\n                setValue('')\n                setVisible(false)\n              }\n            }}\n\n          />\n          {\n            blueSearch ?\n              <div className=\"searchIconFa bluSearch\"\n              // style={{ cursor: 'pointer', backgroundColor: 'pink' }}\n              // onClick={blueClick}\n              >\n                <div onClick={blueClick} >\n                  {/* <img src={blueSearchPng} style={{ width: '50%' }} /> */}\n                  <span className=\" iconfont icon-sousuo searchIcon\"\n                    style={{ fontSize: px(25) }}\n                  />\n                </div>\n\n                {\n                  searchMac ?\n                    // true ?\n                    <div className='searchPet flex' style={{ width: px(400), }}>\n                      <div className='triangle'\n                        style={{\n                          borderLeft: `${px(20)}px solid transparent`,\n                          borderRight: `${px(20)}px solid transparent`,\n                          borderBottom: `${px(25)}px solid #fff`,\n                          // marginLeft: px(30),\n                          zIndex: 999,\n\n                        }} />\n\n                      <div className='searchPetBody' style={{ width: '100%' }} >\n                        {blusearchBody()}\n                      </div>\n                    </div>\n                    : null\n                }\n\n              </div>\n              : <div className=\"searchIconFa\">\n                <span className=\" iconfont icon-sousuo searchIcon\"\n                  style={{ fontSize: px(25) }}\n                />\n              </div>\n          }\n\n\n\n\n\n\n          {\n            visible ?\n              // true ?\n              <div className='searchPet' style={{ top: px(35), width: px(400), }}>\n                <div className='triangle'\n                  style={{\n                    borderLeft: `${px(20)}px solid transparent`,\n                    borderRight: `${px(20)}px solid transparent`,\n                    borderBottom: `${px(25)}px solid #fff`,\n                    marginLeft: px(30),\n                    zIndex: 999,\n\n                  }} />\n\n                <div className='searchPetBody' >\n                  {searchPetBody()}\n                </div>\n              </div>\n              : null\n          }\n\n\n\n\n\n        </div>\n      </div >\n\n\n      <div className=\"r\"\n      >\n\n\n        <div className='heardCenter'>\n          <div className=\"message\"\n            onClick={() => history.push('/menuOptions/unassigned')}\n          >\n            <img src={message} alt=\"\" style={{ height: px(25), width: px(25) }} />\n          </div>\n          <div className=\"help\"\n            style={{ margin: `0 ${px(25)}px` }}\n            onClick={() => history.push('/menuOptions/help')}\n          >\n            <img src={help} alt=\"\" style={{ height: px(25) }} />\n          </div>\n\n        </div>\n        <div className=\"min_close\" style={{ paddingRight: px(15) }}>\n          <div\n            className='min_icon'\n            onClick={MINCOLOSE.minClock}\n            style={{ backgroundColor: minbgc, height: px(50), width: px(50) }}\n            onMouseEnter={MINCOLOSE.minMouseEnter}\n            onMouseLeave={MINCOLOSE.minMouseLeave}\n          >\n            <img src={rMin} alt=\"\" style={{ width: px(20) }} />\n          </div>\n          <div\n            className='min_icon'\n            onClick={MINCOLOSE.closeClock}\n            style={{ backgroundColor: closebgc, height: px(50), width: px(50) }}\n            onMouseEnter={MINCOLOSE.closeMouseEnter}\n            onMouseLeave={MINCOLOSE.closeMouseLeave}\n          >\n            <img src={rClose} alt=\"\" style={{ width: px(20) }} />\n          </div>\n        </div>\n      </div>\n\n      {modalvisible && modal()}\n      {deviceModel && devices()}\n\n      <MyModal\n        // visible={true}\n        visible={modalVis}\n        element={\n          <div className='tip' style={{ width: px(420), height: px(480), borderRadius: px(20) }}>\n            <div className='close'\n              style={{ height: px(60) }}\n              onClick={() => setModalVis(false)}\n            >\n              <div className='flex' style={{ height: px(60), width: px(60), }}>\n                <img src={close} alt=\"\" style={{ width: px(20) }} />\n              </div>\n\n\n\n            </div>\n            <div className=\"text\">\n              <h1 style={{ fontSize: px(36), marginTop: px(30) }}> {isNotFound ? 'Pet not found!' : 'Pet found!'}</h1>\n\n            </div>\n            <div className='flex' style={{ margin: `${px(20)}px 0` }}>\n              {isNotFound ?\n                <img src={redclose} width=\"50px\" /> :\n                <img src={jinggao} width=\"50px\" />\n              }\n            </div>\n            <div className='textbody' style={{ marginTop: px(30), color: '#000' }}>\n              {isNotFound ? <p style={{ fontSize: px(22) }}> This pet is not on your database</p> :\n                <p style={{ fontSize: px(22) }}>Pet Identified but does not <br /> belong to your organization.</p>}\n            </div>\n\n\n\n            <div className='flex' style={{ marginTop: px(30), width: '100%', }}>\n\n              <div\n                className='btn flex'\n                style={{ height: px(40) }}\n                onClick={() => {\n                  setModalVis(false)\n                  cencleClick()\n                }}\n              >\n                <p>OK</p>\n              </div>\n            </div>\n          </div>\n        }\n      />\n\n    </div >\n  )\n}\n\nHeard.propTypes = {\n  onReturn: PropTypes.func,\n  onSearch: PropTypes.func,\n  menu1Click: PropTypes.func,\n  menu2Click: PropTypes.func,\n  menu3Click: PropTypes.func,\n  menu4Click: PropTypes.func,\n  menu5Click: PropTypes.func,\n  menu6Click: PropTypes.func,\n  menu7Click: PropTypes.func,\n  menu8Click: PropTypes.func,\n  menu9Click: PropTypes.func,\n  blueSearch: PropTypes.bool\n\n}\nHeard.defaultProps = {\n  onSearch: () => { },\n  onReturn: () => { },\n  menu1Click: () => { },\n  menu2Click: () => { },\n  menu3Click: () => { },\n  menu4Click: () => { },\n  menu5Click: () => { },\n  menu6Click: () => { },\n  menu7Click: () => { },\n  menu8Click: () => { },\n  menu9Click: () => { },\n  blueSearch: false,\n}\n\n\nexport default connect(\n  state => ({\n\n  }),\n  { setMenuNum }\n)(Heard)","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/AddDevice.jsx",["441","442","443","444","445","446","447","448","449","450","451","452","453","454","455"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/clinicalStudyPage/index.jsx",["456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/maxminreturn/MaxMinReturn.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/editParent/EditParent.jsx",["496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/selectionBox/SelectionBox.jsx",["518"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/allPetsPage/index.jsx",["519","520","521","522","523","524","525","526","527","528","529","530"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/userAction.js",[],{"ruleId":"531","severity":1,"message":"532","line":3,"column":10,"nodeType":"533","messageId":"534","endLine":3,"endColumn":23},{"ruleId":"531","severity":1,"message":"535","line":16,"column":8,"nodeType":"533","messageId":"534","endLine":16,"endColumn":17},{"ruleId":"536","replacedBy":"537"},{"ruleId":"538","replacedBy":"539"},{"ruleId":"531","severity":1,"message":"540","line":11,"column":3,"nodeType":"533","messageId":"534","endLine":11,"endColumn":9},{"ruleId":"531","severity":1,"message":"541","line":21,"column":8,"nodeType":"533","messageId":"534","endLine":21,"endColumn":14},{"ruleId":"531","severity":1,"message":"542","line":26,"column":10,"nodeType":"533","messageId":"534","endLine":26,"endColumn":21},{"ruleId":"531","severity":1,"message":"543","line":28,"column":8,"nodeType":"533","messageId":"534","endLine":28,"endColumn":14},{"ruleId":"531","severity":1,"message":"544","line":30,"column":10,"nodeType":"533","messageId":"534","endLine":30,"endColumn":14},{"ruleId":"531","severity":1,"message":"545","line":30,"column":16,"nodeType":"533","messageId":"534","endLine":30,"endColumn":20},{"ruleId":"531","severity":1,"message":"546","line":31,"column":10,"nodeType":"533","messageId":"534","endLine":31,"endColumn":20},{"ruleId":"531","severity":1,"message":"547","line":36,"column":8,"nodeType":"533","messageId":"534","endLine":36,"endColumn":21},{"ruleId":"531","severity":1,"message":"548","line":37,"column":8,"nodeType":"533","messageId":"534","endLine":37,"endColumn":15},{"ruleId":"531","severity":1,"message":"549","line":42,"column":9,"nodeType":"533","messageId":"534","endLine":42,"endColumn":16},{"ruleId":"531","severity":1,"message":"550","line":43,"column":7,"nodeType":"533","messageId":"534","endLine":43,"endColumn":13},{"ruleId":"531","severity":1,"message":"551","line":166,"column":9,"nodeType":"533","messageId":"534","endLine":166,"endColumn":16},{"ruleId":"531","severity":1,"message":"552","line":176,"column":15,"nodeType":"533","messageId":"534","endLine":176,"endColumn":21},{"ruleId":"531","severity":1,"message":"553","line":626,"column":15,"nodeType":"533","messageId":"534","endLine":626,"endColumn":24},{"ruleId":"531","severity":1,"message":"554","line":901,"column":15,"nodeType":"533","messageId":"534","endLine":901,"endColumn":21},{"ruleId":"531","severity":1,"message":"555","line":905,"column":15,"nodeType":"533","messageId":"534","endLine":905,"endColumn":22},{"ruleId":"531","severity":1,"message":"556","line":989,"column":28,"nodeType":"533","messageId":"534","endLine":989,"endColumn":31},{"ruleId":"531","severity":1,"message":"557","line":989,"column":33,"nodeType":"533","messageId":"534","endLine":989,"endColumn":35},{"ruleId":"531","severity":1,"message":"558","line":989,"column":37,"nodeType":"533","messageId":"534","endLine":989,"endColumn":45},{"ruleId":"531","severity":1,"message":"559","line":989,"column":53,"nodeType":"533","messageId":"534","endLine":989,"endColumn":63},{"ruleId":"531","severity":1,"message":"560","line":989,"column":65,"nodeType":"533","messageId":"534","endLine":989,"endColumn":73},{"ruleId":"531","severity":1,"message":"561","line":989,"column":75,"nodeType":"533","messageId":"534","endLine":989,"endColumn":81},{"ruleId":"531","severity":1,"message":"562","line":989,"column":111,"nodeType":"533","messageId":"534","endLine":989,"endColumn":117},{"ruleId":"531","severity":1,"message":"563","line":989,"column":119,"nodeType":"533","messageId":"534","endLine":989,"endColumn":129},{"ruleId":"564","severity":1,"message":"565","line":1001,"column":11,"nodeType":"566","endLine":1017,"endColumn":12},{"ruleId":"567","severity":1,"message":"568","line":1099,"column":19,"nodeType":"569","messageId":"570","endLine":1118,"endColumn":20},{"ruleId":"571","severity":1,"message":"572","line":1214,"column":17,"nodeType":"566","endLine":1214,"endColumn":52},{"ruleId":"571","severity":1,"message":"572","line":1215,"column":17,"nodeType":"566","endLine":1215,"endColumn":51},{"ruleId":"531","severity":1,"message":"573","line":2,"column":17,"nodeType":"533","messageId":"534","endLine":2,"endColumn":23},{"ruleId":"531","severity":1,"message":"574","line":2,"column":40,"nodeType":"533","messageId":"534","endLine":2,"endColumn":47},{"ruleId":"531","severity":1,"message":"575","line":3,"column":32,"nodeType":"533","messageId":"534","endLine":3,"endColumn":44},{"ruleId":"531","severity":1,"message":"576","line":10,"column":10,"nodeType":"533","messageId":"534","endLine":10,"endColumn":22},{"ruleId":"531","severity":1,"message":"577","line":13,"column":10,"nodeType":"533","messageId":"534","endLine":13,"endColumn":23},{"ruleId":"531","severity":1,"message":"545","line":14,"column":10,"nodeType":"533","messageId":"534","endLine":14,"endColumn":14},{"ruleId":"531","severity":1,"message":"544","line":14,"column":20,"nodeType":"533","messageId":"534","endLine":14,"endColumn":24},{"ruleId":"531","severity":1,"message":"578","line":14,"column":26,"nodeType":"533","messageId":"534","endLine":14,"endColumn":28},{"ruleId":"531","severity":1,"message":"579","line":17,"column":20,"nodeType":"533","messageId":"534","endLine":17,"endColumn":29},{"ruleId":"531","severity":1,"message":"550","line":19,"column":7,"nodeType":"533","messageId":"534","endLine":19,"endColumn":13},{"ruleId":"531","severity":1,"message":"580","line":354,"column":11,"nodeType":"533","messageId":"534","endLine":354,"endColumn":17},{"ruleId":"581","severity":1,"message":"582","line":367,"column":69,"nodeType":"583","messageId":"584","endLine":367,"endColumn":76},{"ruleId":"531","severity":1,"message":"585","line":422,"column":19,"nodeType":"533","messageId":"534","endLine":422,"endColumn":26},{"ruleId":"531","severity":1,"message":"586","line":423,"column":9,"nodeType":"533","messageId":"534","endLine":423,"endColumn":13},{"ruleId":"564","severity":1,"message":"565","line":549,"column":69,"nodeType":"566","endLine":549,"endColumn":104},{"ruleId":"536","replacedBy":"587"},{"ruleId":"538","replacedBy":"588"},{"ruleId":"531","severity":1,"message":"589","line":1,"column":17,"nodeType":"533","messageId":"534","endLine":1,"endColumn":25},{"ruleId":"531","severity":1,"message":"590","line":8,"column":8,"nodeType":"533","messageId":"534","endLine":8,"endColumn":17},{"ruleId":"591","severity":1,"message":"592","line":16,"column":20,"nodeType":"593","messageId":"584","endLine":16,"endColumn":23},{"ruleId":"531","severity":1,"message":"594","line":9,"column":8,"nodeType":"533","messageId":"534","endLine":9,"endColumn":17},{"ruleId":"531","severity":1,"message":"595","line":10,"column":10,"nodeType":"533","messageId":"534","endLine":10,"endColumn":30},{"ruleId":"531","severity":1,"message":"596","line":10,"column":32,"nodeType":"533","messageId":"534","endLine":10,"endColumn":47},{"ruleId":"531","severity":1,"message":"597","line":14,"column":8,"nodeType":"533","messageId":"534","endLine":14,"endColumn":16},{"ruleId":"531","severity":1,"message":"598","line":17,"column":8,"nodeType":"533","messageId":"534","endLine":17,"endColumn":24},{"ruleId":"531","severity":1,"message":"545","line":19,"column":10,"nodeType":"533","messageId":"534","endLine":19,"endColumn":14},{"ruleId":"531","severity":1,"message":"599","line":159,"column":61,"nodeType":"533","messageId":"534","endLine":159,"endColumn":75},{"ruleId":"536","replacedBy":"600"},{"ruleId":"538","replacedBy":"601"},{"ruleId":"531","severity":1,"message":"594","line":9,"column":8,"nodeType":"533","messageId":"534","endLine":9,"endColumn":17},{"ruleId":"531","severity":1,"message":"595","line":10,"column":10,"nodeType":"533","messageId":"534","endLine":10,"endColumn":30},{"ruleId":"531","severity":1,"message":"596","line":10,"column":32,"nodeType":"533","messageId":"534","endLine":10,"endColumn":47},{"ruleId":"531","severity":1,"message":"597","line":14,"column":8,"nodeType":"533","messageId":"534","endLine":14,"endColumn":16},{"ruleId":"531","severity":1,"message":"545","line":19,"column":10,"nodeType":"533","messageId":"534","endLine":19,"endColumn":14},{"ruleId":"567","severity":1,"message":"568","line":85,"column":25,"nodeType":"569","messageId":"570","endLine":114,"endColumn":26},{"ruleId":"602","severity":1,"message":"603","line":103,"column":29,"nodeType":"604","messageId":"605","endLine":104,"endColumn":68},{"ruleId":"602","severity":1,"message":"603","line":105,"column":29,"nodeType":"604","messageId":"605","endLine":112,"endColumn":39},{"ruleId":"531","severity":1,"message":"606","line":290,"column":49,"nodeType":"533","messageId":"534","endLine":290,"endColumn":63},{"ruleId":"531","severity":1,"message":"599","line":290,"column":65,"nodeType":"533","messageId":"534","endLine":290,"endColumn":79},{"ruleId":"531","severity":1,"message":"607","line":4,"column":5,"nodeType":"533","messageId":"534","endLine":4,"endColumn":10},{"ruleId":"608","severity":1,"message":"609","line":16,"column":16,"nodeType":"610","messageId":"584","endLine":16,"endColumn":18},{"ruleId":"608","severity":1,"message":"609","line":67,"column":16,"nodeType":"610","messageId":"584","endLine":67,"endColumn":18},{"ruleId":"608","severity":1,"message":"609","line":101,"column":16,"nodeType":"610","messageId":"584","endLine":101,"endColumn":18},{"ruleId":"536","replacedBy":"611"},{"ruleId":"538","replacedBy":"612"},{"ruleId":"531","severity":1,"message":"613","line":11,"column":8,"nodeType":"533","messageId":"534","endLine":11,"endColumn":21},{"ruleId":"614","severity":1,"message":"615","line":38,"column":6,"nodeType":"616","endLine":38,"endColumn":8,"suggestions":"617"},{"ruleId":"567","severity":1,"message":"568","line":76,"column":5,"nodeType":"569","messageId":"570","endLine":95,"endColumn":6},{"ruleId":"614","severity":1,"message":"618","line":63,"column":6,"nodeType":"616","endLine":63,"endColumn":26,"suggestions":"619"},{"ruleId":"531","severity":1,"message":"620","line":4,"column":3,"nodeType":"533","messageId":"534","endLine":4,"endColumn":8},{"ruleId":"531","severity":1,"message":"621","line":10,"column":3,"nodeType":"533","messageId":"534","endLine":10,"endColumn":8},{"ruleId":"531","severity":1,"message":"622","line":11,"column":3,"nodeType":"533","messageId":"534","endLine":11,"endColumn":7},{"ruleId":"531","severity":1,"message":"623","line":16,"column":8,"nodeType":"533","messageId":"534","endLine":16,"endColumn":15},{"ruleId":"531","severity":1,"message":"624","line":62,"column":5,"nodeType":"533","messageId":"534","endLine":62,"endColumn":23},{"ruleId":"625","severity":1,"message":"626","line":120,"column":61,"nodeType":"610","messageId":"627","endLine":120,"endColumn":62},{"ruleId":"625","severity":1,"message":"626","line":128,"column":45,"nodeType":"610","messageId":"627","endLine":128,"endColumn":46},{"ruleId":"614","severity":1,"message":"628","line":260,"column":6,"nodeType":"616","endLine":260,"endColumn":13,"suggestions":"629"},{"ruleId":"614","severity":1,"message":"630","line":280,"column":6,"nodeType":"616","endLine":280,"endColumn":26,"suggestions":"631"},{"ruleId":"531","severity":1,"message":"632","line":2,"column":10,"nodeType":"533","messageId":"534","endLine":2,"endColumn":20},{"ruleId":"531","severity":1,"message":"633","line":4,"column":5,"nodeType":"533","messageId":"534","endLine":4,"endColumn":9},{"ruleId":"531","severity":1,"message":"634","line":5,"column":5,"nodeType":"533","messageId":"534","endLine":5,"endColumn":12},{"ruleId":"531","severity":1,"message":"573","line":6,"column":5,"nodeType":"533","messageId":"534","endLine":6,"endColumn":11},{"ruleId":"531","severity":1,"message":"635","line":7,"column":5,"nodeType":"533","messageId":"534","endLine":7,"endColumn":10},{"ruleId":"531","severity":1,"message":"545","line":15,"column":10,"nodeType":"533","messageId":"534","endLine":15,"endColumn":14},{"ruleId":"531","severity":1,"message":"544","line":15,"column":20,"nodeType":"533","messageId":"534","endLine":15,"endColumn":24},{"ruleId":"531","severity":1,"message":"613","line":16,"column":8,"nodeType":"533","messageId":"534","endLine":16,"endColumn":21},{"ruleId":"636","severity":1,"message":"637","line":49,"column":36,"nodeType":"638","messageId":"639","endLine":49,"endColumn":38},{"ruleId":"636","severity":1,"message":"637","line":65,"column":32,"nodeType":"638","messageId":"639","endLine":65,"endColumn":34},{"ruleId":"636","severity":1,"message":"637","line":74,"column":37,"nodeType":"638","messageId":"639","endLine":74,"endColumn":39},{"ruleId":"636","severity":1,"message":"637","line":80,"column":23,"nodeType":"638","messageId":"639","endLine":80,"endColumn":25},{"ruleId":"636","severity":1,"message":"637","line":82,"column":31,"nodeType":"638","messageId":"639","endLine":82,"endColumn":33},{"ruleId":"608","severity":1,"message":"609","line":86,"column":32,"nodeType":"610","messageId":"584","endLine":86,"endColumn":34},{"ruleId":"614","severity":1,"message":"640","line":104,"column":8,"nodeType":"616","endLine":104,"endColumn":10,"suggestions":"641"},{"ruleId":"636","severity":1,"message":"637","line":114,"column":39,"nodeType":"638","messageId":"639","endLine":114,"endColumn":41},{"ruleId":"636","severity":1,"message":"637","line":115,"column":49,"nodeType":"638","messageId":"639","endLine":115,"endColumn":51},{"ruleId":"608","severity":1,"message":"642","line":124,"column":39,"nodeType":"610","messageId":"584","endLine":124,"endColumn":41},{"ruleId":"636","severity":1,"message":"637","line":137,"column":39,"nodeType":"638","messageId":"639","endLine":137,"endColumn":41},{"ruleId":"614","severity":1,"message":"643","line":152,"column":8,"nodeType":"616","endLine":152,"endColumn":20,"suggestions":"644"},{"ruleId":"564","severity":1,"message":"645","line":202,"column":21,"nodeType":"566","endLine":207,"endColumn":22},{"ruleId":"531","severity":1,"message":"540","line":11,"column":3,"nodeType":"533","messageId":"534","endLine":11,"endColumn":9},{"ruleId":"531","severity":1,"message":"541","line":21,"column":8,"nodeType":"533","messageId":"534","endLine":21,"endColumn":14},{"ruleId":"531","severity":1,"message":"542","line":26,"column":10,"nodeType":"533","messageId":"534","endLine":26,"endColumn":21},{"ruleId":"531","severity":1,"message":"543","line":28,"column":8,"nodeType":"533","messageId":"534","endLine":28,"endColumn":14},{"ruleId":"531","severity":1,"message":"544","line":30,"column":10,"nodeType":"533","messageId":"534","endLine":30,"endColumn":14},{"ruleId":"531","severity":1,"message":"545","line":30,"column":16,"nodeType":"533","messageId":"534","endLine":30,"endColumn":20},{"ruleId":"531","severity":1,"message":"546","line":31,"column":10,"nodeType":"533","messageId":"534","endLine":31,"endColumn":20},{"ruleId":"531","severity":1,"message":"547","line":36,"column":8,"nodeType":"533","messageId":"534","endLine":36,"endColumn":21},{"ruleId":"531","severity":1,"message":"548","line":37,"column":8,"nodeType":"533","messageId":"534","endLine":37,"endColumn":15},{"ruleId":"531","severity":1,"message":"549","line":42,"column":9,"nodeType":"533","messageId":"534","endLine":42,"endColumn":16},{"ruleId":"531","severity":1,"message":"550","line":43,"column":7,"nodeType":"533","messageId":"534","endLine":43,"endColumn":13},{"ruleId":"531","severity":1,"message":"551","line":166,"column":9,"nodeType":"533","messageId":"534","endLine":166,"endColumn":16},{"ruleId":"531","severity":1,"message":"552","line":176,"column":15,"nodeType":"533","messageId":"534","endLine":176,"endColumn":21},{"ruleId":"531","severity":1,"message":"553","line":630,"column":15,"nodeType":"533","messageId":"534","endLine":630,"endColumn":24},{"ruleId":"531","severity":1,"message":"554","line":905,"column":15,"nodeType":"533","messageId":"534","endLine":905,"endColumn":21},{"ruleId":"531","severity":1,"message":"555","line":909,"column":15,"nodeType":"533","messageId":"534","endLine":909,"endColumn":22},{"ruleId":"531","severity":1,"message":"556","line":993,"column":28,"nodeType":"533","messageId":"534","endLine":993,"endColumn":31},{"ruleId":"531","severity":1,"message":"557","line":993,"column":33,"nodeType":"533","messageId":"534","endLine":993,"endColumn":35},{"ruleId":"531","severity":1,"message":"558","line":993,"column":37,"nodeType":"533","messageId":"534","endLine":993,"endColumn":45},{"ruleId":"531","severity":1,"message":"559","line":993,"column":53,"nodeType":"533","messageId":"534","endLine":993,"endColumn":63},{"ruleId":"531","severity":1,"message":"560","line":993,"column":65,"nodeType":"533","messageId":"534","endLine":993,"endColumn":73},{"ruleId":"531","severity":1,"message":"561","line":993,"column":75,"nodeType":"533","messageId":"534","endLine":993,"endColumn":81},{"ruleId":"531","severity":1,"message":"562","line":993,"column":111,"nodeType":"533","messageId":"534","endLine":993,"endColumn":117},{"ruleId":"531","severity":1,"message":"563","line":993,"column":119,"nodeType":"533","messageId":"534","endLine":993,"endColumn":129},{"ruleId":"564","severity":1,"message":"565","line":1005,"column":11,"nodeType":"566","endLine":1021,"endColumn":12},{"ruleId":"567","severity":1,"message":"568","line":1104,"column":19,"nodeType":"569","messageId":"570","endLine":1123,"endColumn":20},{"ruleId":"571","severity":1,"message":"572","line":1233,"column":17,"nodeType":"566","endLine":1233,"endColumn":52},{"ruleId":"571","severity":1,"message":"572","line":1234,"column":17,"nodeType":"566","endLine":1234,"endColumn":51},{"ruleId":"531","severity":1,"message":"646","line":2,"column":60,"nodeType":"533","messageId":"534","endLine":2,"endColumn":64},{"ruleId":"531","severity":1,"message":"594","line":3,"column":8,"nodeType":"533","messageId":"534","endLine":3,"endColumn":17},{"ruleId":"531","severity":1,"message":"647","line":6,"column":32,"nodeType":"533","messageId":"534","endLine":6,"endColumn":47},{"ruleId":"531","severity":1,"message":"549","line":31,"column":9,"nodeType":"533","messageId":"534","endLine":31,"endColumn":16},{"ruleId":"531","severity":1,"message":"550","line":33,"column":7,"nodeType":"533","messageId":"534","endLine":33,"endColumn":13},{"ruleId":"531","severity":1,"message":"648","line":38,"column":5,"nodeType":"533","messageId":"534","endLine":38,"endColumn":8},{"ruleId":"581","severity":1,"message":"649","line":75,"column":9,"nodeType":"583","messageId":"584","endLine":75,"endColumn":15},{"ruleId":"567","severity":1,"message":"568","line":116,"column":9,"nodeType":"569","messageId":"570","endLine":122,"endColumn":10},{"ruleId":"636","severity":1,"message":"637","line":129,"column":51,"nodeType":"638","messageId":"639","endLine":129,"endColumn":53},{"ruleId":"636","severity":1,"message":"637","line":168,"column":51,"nodeType":"638","messageId":"639","endLine":168,"endColumn":53},{"ruleId":"531","severity":1,"message":"650","line":277,"column":15,"nodeType":"533","messageId":"534","endLine":277,"endColumn":25},{"ruleId":"531","severity":1,"message":"651","line":277,"column":53,"nodeType":"533","messageId":"534","endLine":277,"endColumn":59},{"ruleId":"531","severity":1,"message":"652","line":350,"column":15,"nodeType":"533","messageId":"534","endLine":350,"endColumn":28},{"ruleId":"571","severity":1,"message":"572","line":554,"column":29,"nodeType":"566","endLine":554,"endColumn":77},{"ruleId":"531","severity":1,"message":"653","line":577,"column":9,"nodeType":"533","messageId":"534","endLine":577,"endColumn":16},{"ruleId":"531","severity":1,"message":"654","line":578,"column":15,"nodeType":"533","messageId":"534","endLine":578,"endColumn":24},{"ruleId":"571","severity":1,"message":"572","line":612,"column":29,"nodeType":"566","endLine":612,"endColumn":77},{"ruleId":"567","severity":1,"message":"568","line":643,"column":9,"nodeType":"569","messageId":"570","endLine":646,"endColumn":10},{"ruleId":"567","severity":1,"message":"568","line":648,"column":9,"nodeType":"569","messageId":"570","endLine":651,"endColumn":10},{"ruleId":"531","severity":1,"message":"559","line":732,"column":17,"nodeType":"533","messageId":"534","endLine":732,"endColumn":27},{"ruleId":"531","severity":1,"message":"560","line":732,"column":29,"nodeType":"533","messageId":"534","endLine":732,"endColumn":37},{"ruleId":"531","severity":1,"message":"561","line":732,"column":39,"nodeType":"533","messageId":"534","endLine":732,"endColumn":45},{"ruleId":"531","severity":1,"message":"655","line":732,"column":47,"nodeType":"533","messageId":"534","endLine":732,"endColumn":55},{"ruleId":"531","severity":1,"message":"656","line":798,"column":97,"nodeType":"533","messageId":"534","endLine":798,"endColumn":102},{"ruleId":"531","severity":1,"message":"657","line":798,"column":135,"nodeType":"533","messageId":"534","endLine":798,"endColumn":157},{"ruleId":"531","severity":1,"message":"635","line":5,"column":3,"nodeType":"533","messageId":"534","endLine":5,"endColumn":8},{"ruleId":"531","severity":1,"message":"594","line":8,"column":8,"nodeType":"533","messageId":"534","endLine":8,"endColumn":17},{"ruleId":"531","severity":1,"message":"575","line":11,"column":32,"nodeType":"533","messageId":"534","endLine":11,"endColumn":44},{"ruleId":"531","severity":1,"message":"658","line":132,"column":32,"nodeType":"533","messageId":"534","endLine":132,"endColumn":48},{"ruleId":"531","severity":1,"message":"659","line":154,"column":15,"nodeType":"533","messageId":"534","endLine":154,"endColumn":28},{"ruleId":"531","severity":1,"message":"660","line":353,"column":21,"nodeType":"533","messageId":"534","endLine":353,"endColumn":27},{"ruleId":"564","severity":1,"message":"565","line":519,"column":17,"nodeType":"566","endLine":519,"endColumn":54},{"ruleId":"564","severity":1,"message":"565","line":577,"column":17,"nodeType":"566","endLine":577,"endColumn":60},{"ruleId":"531","severity":1,"message":"598","line":17,"column":8,"nodeType":"533","messageId":"534","endLine":17,"endColumn":24},{"ruleId":"531","severity":1,"message":"661","line":13,"column":10,"nodeType":"533","messageId":"534","endLine":13,"endColumn":12},{"ruleId":"531","severity":1,"message":"578","line":13,"column":14,"nodeType":"533","messageId":"534","endLine":13,"endColumn":16},{"ruleId":"531","severity":1,"message":"662","line":4,"column":3,"nodeType":"533","messageId":"534","endLine":4,"endColumn":8},{"ruleId":"531","severity":1,"message":"663","line":5,"column":3,"nodeType":"533","messageId":"534","endLine":5,"endColumn":8},{"ruleId":"531","severity":1,"message":"573","line":6,"column":3,"nodeType":"533","messageId":"534","endLine":6,"endColumn":9},{"ruleId":"531","severity":1,"message":"621","line":7,"column":3,"nodeType":"533","messageId":"534","endLine":7,"endColumn":8},{"ruleId":"531","severity":1,"message":"635","line":10,"column":3,"nodeType":"533","messageId":"534","endLine":10,"endColumn":8},{"ruleId":"531","severity":1,"message":"540","line":11,"column":3,"nodeType":"533","messageId":"534","endLine":11,"endColumn":9},{"ruleId":"531","severity":1,"message":"664","line":12,"column":3,"nodeType":"533","messageId":"534","endLine":12,"endColumn":17},{"ruleId":"531","severity":1,"message":"594","line":15,"column":8,"nodeType":"533","messageId":"534","endLine":15,"endColumn":17},{"ruleId":"531","severity":1,"message":"665","line":16,"column":8,"nodeType":"533","messageId":"534","endLine":16,"endColumn":15},{"ruleId":"531","severity":1,"message":"666","line":17,"column":8,"nodeType":"533","messageId":"534","endLine":17,"endColumn":14},{"ruleId":"531","severity":1,"message":"575","line":20,"column":10,"nodeType":"533","messageId":"534","endLine":20,"endColumn":22},{"ruleId":"531","severity":1,"message":"541","line":21,"column":8,"nodeType":"533","messageId":"534","endLine":21,"endColumn":14},{"ruleId":"531","severity":1,"message":"544","line":27,"column":10,"nodeType":"533","messageId":"534","endLine":27,"endColumn":14},{"ruleId":"531","severity":1,"message":"545","line":27,"column":16,"nodeType":"533","messageId":"534","endLine":27,"endColumn":20},{"ruleId":"531","severity":1,"message":"578","line":27,"column":22,"nodeType":"533","messageId":"534","endLine":27,"endColumn":24},{"ruleId":"531","severity":1,"message":"549","line":39,"column":9,"nodeType":"533","messageId":"534","endLine":39,"endColumn":16},{"ruleId":"531","severity":1,"message":"577","line":18,"column":10,"nodeType":"533","messageId":"534","endLine":18,"endColumn":23},{"ruleId":"531","severity":1,"message":"556","line":358,"column":28,"nodeType":"533","messageId":"534","endLine":358,"endColumn":31},{"ruleId":"531","severity":1,"message":"557","line":358,"column":33,"nodeType":"533","messageId":"534","endLine":358,"endColumn":35},{"ruleId":"531","severity":1,"message":"558","line":358,"column":37,"nodeType":"533","messageId":"534","endLine":358,"endColumn":45},{"ruleId":"531","severity":1,"message":"658","line":133,"column":32,"nodeType":"533","messageId":"534","endLine":133,"endColumn":48},{"ruleId":"531","severity":1,"message":"659","line":150,"column":15,"nodeType":"533","messageId":"534","endLine":150,"endColumn":28},{"ruleId":"531","severity":1,"message":"545","line":14,"column":10,"nodeType":"533","messageId":"534","endLine":14,"endColumn":14},{"ruleId":"531","severity":1,"message":"573","line":17,"column":8,"nodeType":"533","messageId":"534","endLine":17,"endColumn":14},{"ruleId":"581","severity":1,"message":"667","line":48,"column":5,"nodeType":"583","messageId":"584","endLine":48,"endColumn":13},{"ruleId":"531","severity":1,"message":"668","line":59,"column":9,"nodeType":"533","messageId":"534","endLine":59,"endColumn":22},{"ruleId":"531","severity":1,"message":"668","line":95,"column":9,"nodeType":"533","messageId":"534","endLine":95,"endColumn":22},{"ruleId":"636","severity":1,"message":"637","line":213,"column":41,"nodeType":"638","messageId":"639","endLine":213,"endColumn":43},{"ruleId":"636","severity":1,"message":"637","line":226,"column":47,"nodeType":"638","messageId":"639","endLine":226,"endColumn":49},{"ruleId":"531","severity":1,"message":"669","line":397,"column":23,"nodeType":"533","messageId":"534","endLine":397,"endColumn":28},{"ruleId":"531","severity":1,"message":"670","line":450,"column":21,"nodeType":"533","messageId":"534","endLine":450,"endColumn":36},{"ruleId":"531","severity":1,"message":"671","line":2,"column":27,"nodeType":"533","messageId":"534","endLine":2,"endColumn":36},{"ruleId":"531","severity":1,"message":"632","line":3,"column":10,"nodeType":"533","messageId":"534","endLine":3,"endColumn":20},{"ruleId":"531","severity":1,"message":"545","line":8,"column":14,"nodeType":"533","messageId":"534","endLine":8,"endColumn":18},{"ruleId":"531","severity":1,"message":"635","line":6,"column":3,"nodeType":"533","messageId":"534","endLine":6,"endColumn":8},{"ruleId":"531","severity":1,"message":"672","line":7,"column":3,"nodeType":"533","messageId":"534","endLine":7,"endColumn":10},{"ruleId":"531","severity":1,"message":"646","line":8,"column":3,"nodeType":"533","messageId":"534","endLine":8,"endColumn":7},{"ruleId":"531","severity":1,"message":"545","line":15,"column":10,"nodeType":"533","messageId":"534","endLine":15,"endColumn":14},{"ruleId":"531","severity":1,"message":"578","line":15,"column":16,"nodeType":"533","messageId":"534","endLine":15,"endColumn":18},{"ruleId":"531","severity":1,"message":"595","line":17,"column":10,"nodeType":"533","messageId":"534","endLine":17,"endColumn":30},{"ruleId":"531","severity":1,"message":"575","line":17,"column":32,"nodeType":"533","messageId":"534","endLine":17,"endColumn":44},{"ruleId":"531","severity":1,"message":"647","line":17,"column":46,"nodeType":"533","messageId":"534","endLine":17,"endColumn":61},{"ruleId":"531","severity":1,"message":"576","line":18,"column":10,"nodeType":"533","messageId":"534","endLine":18,"endColumn":22},{"ruleId":"531","severity":1,"message":"673","line":4,"column":3,"nodeType":"533","messageId":"534","endLine":4,"endColumn":9},{"ruleId":"531","severity":1,"message":"674","line":13,"column":8,"nodeType":"533","messageId":"534","endLine":13,"endColumn":14},{"ruleId":"531","severity":1,"message":"573","line":14,"column":8,"nodeType":"533","messageId":"534","endLine":14,"endColumn":14},{"ruleId":"531","severity":1,"message":"613","line":15,"column":8,"nodeType":"533","messageId":"534","endLine":15,"endColumn":21},{"ruleId":"531","severity":1,"message":"598","line":16,"column":8,"nodeType":"533","messageId":"534","endLine":16,"endColumn":24},{"ruleId":"531","severity":1,"message":"675","line":20,"column":8,"nodeType":"533","messageId":"534","endLine":20,"endColumn":11},{"ruleId":"531","severity":1,"message":"676","line":21,"column":8,"nodeType":"533","messageId":"534","endLine":21,"endColumn":11},{"ruleId":"531","severity":1,"message":"677","line":22,"column":8,"nodeType":"533","messageId":"534","endLine":22,"endColumn":13},{"ruleId":"531","severity":1,"message":"678","line":32,"column":9,"nodeType":"533","messageId":"534","endLine":32,"endColumn":15},{"ruleId":"531","severity":1,"message":"679","line":55,"column":11,"nodeType":"533","messageId":"534","endLine":55,"endColumn":17},{"ruleId":"531","severity":1,"message":"680","line":55,"column":19,"nodeType":"533","messageId":"534","endLine":55,"endColumn":24},{"ruleId":"531","severity":1,"message":"668","line":71,"column":9,"nodeType":"533","messageId":"534","endLine":71,"endColumn":22},{"ruleId":"531","severity":1,"message":"681","line":154,"column":18,"nodeType":"533","messageId":"534","endLine":154,"endColumn":27},{"ruleId":"531","severity":1,"message":"682","line":154,"column":29,"nodeType":"533","messageId":"534","endLine":154,"endColumn":37},{"ruleId":"571","severity":1,"message":"572","line":558,"column":19,"nodeType":"566","endLine":565,"endColumn":61},{"ruleId":"564","severity":1,"message":"565","line":573,"column":19,"nodeType":"566","endLine":581,"endColumn":30},{"ruleId":"531","severity":1,"message":"634","line":5,"column":3,"nodeType":"533","messageId":"534","endLine":5,"endColumn":10},{"ruleId":"531","severity":1,"message":"573","line":6,"column":3,"nodeType":"533","messageId":"534","endLine":6,"endColumn":9},{"ruleId":"531","severity":1,"message":"635","line":7,"column":3,"nodeType":"533","messageId":"534","endLine":7,"endColumn":8},{"ruleId":"531","severity":1,"message":"575","line":10,"column":10,"nodeType":"533","messageId":"534","endLine":10,"endColumn":22},{"ruleId":"531","severity":1,"message":"683","line":11,"column":10,"nodeType":"533","messageId":"534","endLine":11,"endColumn":24},{"ruleId":"531","severity":1,"message":"684","line":21,"column":8,"nodeType":"533","messageId":"534","endLine":21,"endColumn":16},{"ruleId":"531","severity":1,"message":"685","line":28,"column":8,"nodeType":"533","messageId":"534","endLine":28,"endColumn":17},{"ruleId":"531","severity":1,"message":"686","line":29,"column":8,"nodeType":"533","messageId":"534","endLine":29,"endColumn":21},{"ruleId":"531","severity":1,"message":"687","line":31,"column":8,"nodeType":"533","messageId":"534","endLine":31,"endColumn":16},{"ruleId":"531","severity":1,"message":"665","line":43,"column":8,"nodeType":"533","messageId":"534","endLine":43,"endColumn":15},{"ruleId":"531","severity":1,"message":"549","line":45,"column":9,"nodeType":"533","messageId":"534","endLine":45,"endColumn":16},{"ruleId":"531","severity":1,"message":"550","line":46,"column":7,"nodeType":"533","messageId":"534","endLine":46,"endColumn":13},{"ruleId":"531","severity":1,"message":"688","line":50,"column":7,"nodeType":"533","messageId":"534","endLine":50,"endColumn":17},{"ruleId":"602","severity":1,"message":"603","line":165,"column":7,"nodeType":"604","messageId":"605","endLine":166,"endColumn":31},{"ruleId":"602","severity":1,"message":"603","line":167,"column":7,"nodeType":"604","messageId":"605","endLine":170,"endColumn":15},{"ruleId":"602","severity":1,"message":"689","line":177,"column":7,"nodeType":"604","messageId":"690","endLine":178,"endColumn":15},{"ruleId":"614","severity":1,"message":"691","line":195,"column":6,"nodeType":"616","endLine":195,"endColumn":8,"suggestions":"692"},{"ruleId":"531","severity":1,"message":"693","line":233,"column":13,"nodeType":"533","messageId":"534","endLine":233,"endColumn":20},{"ruleId":"571","severity":1,"message":"572","line":817,"column":17,"nodeType":"566","endLine":817,"endColumn":63},{"ruleId":"571","severity":1,"message":"572","line":823,"column":17,"nodeType":"566","endLine":823,"endColumn":65},{"ruleId":"564","severity":1,"message":"565","line":857,"column":15,"nodeType":"566","endLine":862,"endColumn":16},{"ruleId":"564","severity":1,"message":"565","line":863,"column":15,"nodeType":"566","endLine":869,"endColumn":16},{"ruleId":"571","severity":1,"message":"572","line":949,"column":17,"nodeType":"566","endLine":949,"endColumn":63},{"ruleId":"571","severity":1,"message":"572","line":954,"column":15,"nodeType":"566","endLine":954,"endColumn":64},{"ruleId":"564","severity":1,"message":"565","line":1047,"column":13,"nodeType":"566","endLine":1049,"endColumn":14},{"ruleId":"564","severity":1,"message":"565","line":1112,"column":15,"nodeType":"566","endLine":1114,"endColumn":16},{"ruleId":"564","severity":1,"message":"565","line":1128,"column":13,"nodeType":"566","endLine":1130,"endColumn":14},{"ruleId":"564","severity":1,"message":"565","line":1196,"column":15,"nodeType":"566","endLine":1198,"endColumn":16},{"ruleId":"564","severity":1,"message":"565","line":1211,"column":15,"nodeType":"566","endLine":1213,"endColumn":16},{"ruleId":"571","severity":1,"message":"572","line":1252,"column":13,"nodeType":"566","endLine":1252,"endColumn":58},{"ruleId":"571","severity":1,"message":"572","line":1449,"column":17,"nodeType":"566","endLine":1449,"endColumn":52},{"ruleId":"571","severity":1,"message":"572","line":1450,"column":17,"nodeType":"566","endLine":1450,"endColumn":51},{"ruleId":"531","severity":1,"message":"663","line":4,"column":10,"nodeType":"533","messageId":"534","endLine":4,"endColumn":15},{"ruleId":"531","severity":1,"message":"573","line":4,"column":17,"nodeType":"533","messageId":"534","endLine":4,"endColumn":23},{"ruleId":"531","severity":1,"message":"646","line":4,"column":34,"nodeType":"533","messageId":"534","endLine":4,"endColumn":38},{"ruleId":"531","severity":1,"message":"574","line":4,"column":40,"nodeType":"533","messageId":"534","endLine":4,"endColumn":47},{"ruleId":"531","severity":1,"message":"595","line":5,"column":10,"nodeType":"533","messageId":"534","endLine":5,"endColumn":30},{"ruleId":"531","severity":1,"message":"575","line":5,"column":32,"nodeType":"533","messageId":"534","endLine":5,"endColumn":44},{"ruleId":"531","severity":1,"message":"694","line":9,"column":8,"nodeType":"533","messageId":"534","endLine":9,"endColumn":18},{"ruleId":"531","severity":1,"message":"687","line":18,"column":8,"nodeType":"533","messageId":"534","endLine":18,"endColumn":16},{"ruleId":"531","severity":1,"message":"695","line":19,"column":8,"nodeType":"533","messageId":"534","endLine":19,"endColumn":16},{"ruleId":"531","severity":1,"message":"696","line":20,"column":8,"nodeType":"533","messageId":"534","endLine":20,"endColumn":18},{"ruleId":"531","severity":1,"message":"697","line":21,"column":8,"nodeType":"533","messageId":"534","endLine":21,"endColumn":16},{"ruleId":"531","severity":1,"message":"698","line":23,"column":8,"nodeType":"533","messageId":"534","endLine":23,"endColumn":15},{"ruleId":"531","severity":1,"message":"578","line":24,"column":26,"nodeType":"533","messageId":"534","endLine":24,"endColumn":28},{"ruleId":"614","severity":1,"message":"699","line":60,"column":8,"nodeType":"616","endLine":60,"endColumn":10,"suggestions":"700"},{"ruleId":"614","severity":1,"message":"701","line":102,"column":8,"nodeType":"616","endLine":102,"endColumn":38,"suggestions":"702"},{"ruleId":"531","severity":1,"message":"633","line":6,"column":5,"nodeType":"533","messageId":"534","endLine":6,"endColumn":9},{"ruleId":"531","severity":1,"message":"703","line":10,"column":5,"nodeType":"533","messageId":"534","endLine":10,"endColumn":12},{"ruleId":"531","severity":1,"message":"646","line":12,"column":5,"nodeType":"533","messageId":"534","endLine":12,"endColumn":9},{"ruleId":"531","severity":1,"message":"595","line":17,"column":10,"nodeType":"533","messageId":"534","endLine":17,"endColumn":30},{"ruleId":"531","severity":1,"message":"575","line":17,"column":32,"nodeType":"533","messageId":"534","endLine":17,"endColumn":44},{"ruleId":"531","severity":1,"message":"698","line":23,"column":8,"nodeType":"533","messageId":"534","endLine":23,"endColumn":15},{"ruleId":"531","severity":1,"message":"704","line":25,"column":8,"nodeType":"533","messageId":"534","endLine":25,"endColumn":10},{"ruleId":"531","severity":1,"message":"705","line":26,"column":8,"nodeType":"533","messageId":"534","endLine":26,"endColumn":10},{"ruleId":"531","severity":1,"message":"706","line":27,"column":8,"nodeType":"533","messageId":"534","endLine":27,"endColumn":12},{"ruleId":"531","severity":1,"message":"675","line":28,"column":8,"nodeType":"533","messageId":"534","endLine":28,"endColumn":11},{"ruleId":"531","severity":1,"message":"676","line":29,"column":8,"nodeType":"533","messageId":"534","endLine":29,"endColumn":11},{"ruleId":"531","severity":1,"message":"677","line":30,"column":8,"nodeType":"533","messageId":"534","endLine":30,"endColumn":13},{"ruleId":"531","severity":1,"message":"707","line":34,"column":8,"nodeType":"533","messageId":"534","endLine":34,"endColumn":18},{"ruleId":"531","severity":1,"message":"708","line":38,"column":8,"nodeType":"533","messageId":"534","endLine":38,"endColumn":13},{"ruleId":"531","severity":1,"message":"709","line":48,"column":7,"nodeType":"533","messageId":"534","endLine":48,"endColumn":24},{"ruleId":"531","severity":1,"message":"710","line":52,"column":19,"nodeType":"533","messageId":"534","endLine":52,"endColumn":27},{"ruleId":"531","severity":1,"message":"711","line":69,"column":19,"nodeType":"533","messageId":"534","endLine":69,"endColumn":27},{"ruleId":"531","severity":1,"message":"712","line":81,"column":12,"nodeType":"533","messageId":"534","endLine":81,"endColumn":20},{"ruleId":"531","severity":1,"message":"713","line":85,"column":12,"nodeType":"533","messageId":"534","endLine":85,"endColumn":15},{"ruleId":"531","severity":1,"message":"714","line":88,"column":20,"nodeType":"533","messageId":"534","endLine":88,"endColumn":29},{"ruleId":"614","severity":1,"message":"715","line":153,"column":8,"nodeType":"616","endLine":153,"endColumn":25,"suggestions":"716"},{"ruleId":"614","severity":1,"message":"717","line":179,"column":8,"nodeType":"616","endLine":179,"endColumn":28,"suggestions":"718"},{"ruleId":"531","severity":1,"message":"719","line":183,"column":15,"nodeType":"533","messageId":"534","endLine":183,"endColumn":18},{"ruleId":"531","severity":1,"message":"720","line":443,"column":26,"nodeType":"533","messageId":"534","endLine":443,"endColumn":30},{"ruleId":"721","severity":1,"message":"722","line":690,"column":75,"nodeType":"723","messageId":"724","endLine":690,"endColumn":76,"suggestions":"725"},{"ruleId":"721","severity":1,"message":"726","line":690,"column":181,"nodeType":"723","messageId":"724","endLine":690,"endColumn":182,"suggestions":"727"},{"ruleId":"721","severity":1,"message":"722","line":704,"column":75,"nodeType":"723","messageId":"724","endLine":704,"endColumn":76,"suggestions":"728"},{"ruleId":"721","severity":1,"message":"726","line":704,"column":181,"nodeType":"723","messageId":"724","endLine":704,"endColumn":182,"suggestions":"729"},{"ruleId":"721","severity":1,"message":"722","line":721,"column":75,"nodeType":"723","messageId":"724","endLine":721,"endColumn":76,"suggestions":"730"},{"ruleId":"721","severity":1,"message":"726","line":721,"column":181,"nodeType":"723","messageId":"724","endLine":721,"endColumn":182,"suggestions":"731"},{"ruleId":"721","severity":1,"message":"722","line":751,"column":75,"nodeType":"723","messageId":"724","endLine":751,"endColumn":76,"suggestions":"732"},{"ruleId":"721","severity":1,"message":"726","line":751,"column":181,"nodeType":"723","messageId":"724","endLine":751,"endColumn":182,"suggestions":"733"},{"ruleId":"721","severity":1,"message":"722","line":765,"column":75,"nodeType":"723","messageId":"724","endLine":765,"endColumn":76,"suggestions":"734"},{"ruleId":"721","severity":1,"message":"726","line":765,"column":181,"nodeType":"723","messageId":"724","endLine":765,"endColumn":182,"suggestions":"735"},{"ruleId":"721","severity":1,"message":"722","line":781,"column":75,"nodeType":"723","messageId":"724","endLine":781,"endColumn":76,"suggestions":"736"},{"ruleId":"721","severity":1,"message":"726","line":781,"column":181,"nodeType":"723","messageId":"724","endLine":781,"endColumn":182,"suggestions":"737"},{"ruleId":"721","severity":1,"message":"722","line":1265,"column":75,"nodeType":"723","messageId":"724","endLine":1265,"endColumn":76,"suggestions":"738"},{"ruleId":"721","severity":1,"message":"726","line":1265,"column":181,"nodeType":"723","messageId":"724","endLine":1265,"endColumn":182,"suggestions":"739"},{"ruleId":"721","severity":1,"message":"722","line":1281,"column":75,"nodeType":"723","messageId":"724","endLine":1281,"endColumn":76,"suggestions":"740"},{"ruleId":"721","severity":1,"message":"726","line":1281,"column":181,"nodeType":"723","messageId":"724","endLine":1281,"endColumn":182,"suggestions":"741"},{"ruleId":"531","severity":1,"message":"663","line":2,"column":10,"nodeType":"533","messageId":"534","endLine":2,"endColumn":15},{"ruleId":"531","severity":1,"message":"573","line":2,"column":17,"nodeType":"533","messageId":"534","endLine":2,"endColumn":23},{"ruleId":"531","severity":1,"message":"742","line":2,"column":48,"nodeType":"533","messageId":"534","endLine":2,"endColumn":56},{"ruleId":"531","severity":1,"message":"743","line":2,"column":58,"nodeType":"533","messageId":"534","endLine":2,"endColumn":61},{"ruleId":"531","severity":1,"message":"744","line":2,"column":63,"nodeType":"533","messageId":"534","endLine":2,"endColumn":66},{"ruleId":"531","severity":1,"message":"646","line":2,"column":68,"nodeType":"533","messageId":"534","endLine":2,"endColumn":72},{"ruleId":"531","severity":1,"message":"594","line":3,"column":8,"nodeType":"533","messageId":"534","endLine":3,"endColumn":17},{"ruleId":"531","severity":1,"message":"647","line":6,"column":32,"nodeType":"533","messageId":"534","endLine":6,"endColumn":47},{"ruleId":"531","severity":1,"message":"745","line":11,"column":8,"nodeType":"533","messageId":"534","endLine":11,"endColumn":13},{"ruleId":"531","severity":1,"message":"746","line":12,"column":8,"nodeType":"533","messageId":"534","endLine":12,"endColumn":14},{"ruleId":"531","severity":1,"message":"747","line":15,"column":8,"nodeType":"533","messageId":"534","endLine":15,"endColumn":11},{"ruleId":"531","severity":1,"message":"748","line":16,"column":8,"nodeType":"533","messageId":"534","endLine":16,"endColumn":14},{"ruleId":"531","severity":1,"message":"749","line":17,"column":8,"nodeType":"533","messageId":"534","endLine":17,"endColumn":12},{"ruleId":"531","severity":1,"message":"549","line":23,"column":9,"nodeType":"533","messageId":"534","endLine":23,"endColumn":16},{"ruleId":"531","severity":1,"message":"678","line":24,"column":9,"nodeType":"533","messageId":"534","endLine":24,"endColumn":15},{"ruleId":"531","severity":1,"message":"550","line":25,"column":7,"nodeType":"533","messageId":"534","endLine":25,"endColumn":13},{"ruleId":"531","severity":1,"message":"750","line":28,"column":5,"nodeType":"533","messageId":"534","endLine":28,"endColumn":12},{"ruleId":"531","severity":1,"message":"751","line":29,"column":5,"nodeType":"533","messageId":"534","endLine":29,"endColumn":17},{"ruleId":"531","severity":1,"message":"648","line":30,"column":5,"nodeType":"533","messageId":"534","endLine":30,"endColumn":8},{"ruleId":"531","severity":1,"message":"648","line":92,"column":61,"nodeType":"533","messageId":"534","endLine":92,"endColumn":64},{"ruleId":"531","severity":1,"message":"752","line":92,"column":66,"nodeType":"533","messageId":"534","endLine":92,"endColumn":75},{"ruleId":"564","severity":1,"message":"565","line":277,"column":15,"nodeType":"566","endLine":283,"endColumn":16},{"ruleId":"614","severity":1,"message":"753","line":27,"column":8,"nodeType":"616","endLine":27,"endColumn":10,"suggestions":"754"},{"ruleId":"531","severity":1,"message":"590","line":2,"column":8,"nodeType":"533","messageId":"534","endLine":2,"endColumn":17},{"ruleId":"531","severity":1,"message":"663","line":4,"column":10,"nodeType":"533","messageId":"534","endLine":4,"endColumn":15},{"ruleId":"531","severity":1,"message":"573","line":4,"column":17,"nodeType":"533","messageId":"534","endLine":4,"endColumn":23},{"ruleId":"531","severity":1,"message":"672","line":4,"column":25,"nodeType":"533","messageId":"534","endLine":4,"endColumn":32},{"ruleId":"531","severity":1,"message":"646","line":4,"column":34,"nodeType":"533","messageId":"534","endLine":4,"endColumn":38},{"ruleId":"531","severity":1,"message":"574","line":4,"column":40,"nodeType":"533","messageId":"534","endLine":4,"endColumn":47},{"ruleId":"531","severity":1,"message":"595","line":5,"column":10,"nodeType":"533","messageId":"534","endLine":5,"endColumn":30},{"ruleId":"531","severity":1,"message":"647","line":5,"column":46,"nodeType":"533","messageId":"534","endLine":5,"endColumn":61},{"ruleId":"531","severity":1,"message":"545","line":9,"column":10,"nodeType":"533","messageId":"534","endLine":9,"endColumn":14},{"ruleId":"531","severity":1,"message":"544","line":9,"column":20,"nodeType":"533","messageId":"534","endLine":9,"endColumn":24},{"ruleId":"531","severity":1,"message":"578","line":9,"column":26,"nodeType":"533","messageId":"534","endLine":9,"endColumn":28},{"ruleId":"614","severity":1,"message":"755","line":30,"column":8,"nodeType":"616","endLine":30,"endColumn":10,"suggestions":"756"},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Praviders' is defined but never used.","no-native-reassign",["757"],"no-negated-in-lhs",["758"],"'Select' is defined but never used.","'MaxMin' is defined but never used.","'FetchEszVet' is defined but never used.","'gender' is defined but never used.","'MTop' is defined but never used.","'mTop' is defined but never used.","'stopBubble' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'SubMenu' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Button' is defined but never used.","'BackTop' is defined but never used.","'SyncOutlined' is defined but never used.","'fetchRequest' is defined but never used.","'fetchRequest1' is defined but never used.","'pX' is defined but never used.","'addQRCode' is defined but never used.","'isCode' is assigned a value but never used.","no-dupe-keys","Duplicate key 'opacity'.","ObjectExpression","unexpected","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.",["757"],["758"],"'useState' is defined but never used.","'PropTypes' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","'Draggable' is defined but never used.","'createFromIconfontCN' is defined but never used.","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","'temporaryStorage' is defined but never used.","'editInputValue' is assigned a value but never used.",["757"],["758"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'editInputIndex' is assigned a value but never used.","'token' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression",["757"],["758"],"'electronStore' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_getExam' and 'petList'. Either include them or remove the dependency array. You can also do a functional update 'setPetList(p => ...)' if you only need 'petList' in the 'setPetList' call.","ArrayExpression",["759"],"React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["760"],"'Image' is defined but never used.","'Space' is defined but never used.","'Card' is defined but never used.","'Charlie' is defined but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["761"],"React Hook useEffect has missing dependencies: 'mellaMeasureValue' and 'value'. Either include them or remove the dependency array.",["762"],"'useHistory' is defined but never used.","'Menu' is defined but never used.","'Popover' is defined but never used.","'Modal' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["763"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["764"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Spin' is defined but never used.","'LoadingOutlined' is defined but never used.","'url' is assigned a value but never used.","Duplicate key 'imgurl'.","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.","'disabled' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","'lastOrganization' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'bounds' is assigned a value but never used.","'px' is defined but never used.","'Table' is defined but never used.","'Input' is defined but never used.","'ConfigProvider' is defined but never used.","'Button1' is defined but never used.","'moment' is defined but never used.","Duplicate key 'disabled'.","'windowsHeight' is assigned a value but never used.","'petId' is assigned a value but never used.","'assignOwnerName' is assigned a value but never used.","'useEffect' is defined but never used.","'message' is defined but never used.","'Switch' is defined but never used.","'Slider' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'Option' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'allPetList' is assigned a value but never used.","Expected a 'break' statement before 'default'.","default","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["765"],"'bluData' is assigned a value but never used.","'blueSearch' is defined but never used.","'MouseDiv' is defined but never used.","'back_white' is defined but never used.","'back_hui' is defined but never used.","'MyModal' is defined but never used.","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["766"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["767"],"'Tooltip' is defined but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setUnits' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'echarsData', 'getOption', and 'mellaMeasureValue'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["768"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["769"],"'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["770","771"],"Unnecessary escape character: \\-.",["772","773"],["774","775"],["776","777"],["778","779"],["780","781"],["782","783"],["784","785"],["786","787"],["788","789"],["790","791"],["792","793"],["794","795"],["796","797"],["798","799"],["800","801"],"'Calendar' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'horse' is defined but never used.","'rabbit' is defined but never used.","'dui' is defined but never used.","'female' is defined but never used.","'male' is defined but never used.","'storage' is assigned a value but never used.","'errPatientId' is assigned a value but never used.","'userImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["802"],"React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["803"],"no-global-assign","no-unsafe-negation",{"desc":"804","fix":"805"},{"desc":"806","fix":"807"},{"desc":"808","fix":"809"},{"desc":"810","fix":"811"},{"desc":"812","fix":"813"},{"desc":"814","fix":"815"},{"desc":"816","fix":"817"},{"desc":"818","fix":"819"},{"desc":"820","fix":"821"},{"desc":"822","fix":"823"},{"desc":"824","fix":"825"},{"messageId":"826","fix":"827","desc":"828"},{"messageId":"829","fix":"830","desc":"831"},{"messageId":"826","fix":"832","desc":"828"},{"messageId":"829","fix":"833","desc":"831"},{"messageId":"826","fix":"834","desc":"828"},{"messageId":"829","fix":"835","desc":"831"},{"messageId":"826","fix":"836","desc":"828"},{"messageId":"829","fix":"837","desc":"831"},{"messageId":"826","fix":"838","desc":"828"},{"messageId":"829","fix":"839","desc":"831"},{"messageId":"826","fix":"840","desc":"828"},{"messageId":"829","fix":"841","desc":"831"},{"messageId":"826","fix":"842","desc":"828"},{"messageId":"829","fix":"843","desc":"831"},{"messageId":"826","fix":"844","desc":"828"},{"messageId":"829","fix":"845","desc":"831"},{"messageId":"826","fix":"846","desc":"828"},{"messageId":"829","fix":"847","desc":"831"},{"messageId":"826","fix":"848","desc":"828"},{"messageId":"829","fix":"849","desc":"831"},{"messageId":"826","fix":"850","desc":"828"},{"messageId":"829","fix":"851","desc":"831"},{"messageId":"826","fix":"852","desc":"828"},{"messageId":"829","fix":"853","desc":"831"},{"messageId":"826","fix":"854","desc":"828"},{"messageId":"829","fix":"855","desc":"831"},{"messageId":"826","fix":"856","desc":"828"},{"messageId":"829","fix":"857","desc":"831"},{"messageId":"826","fix":"858","desc":"828"},{"messageId":"829","fix":"859","desc":"831"},{"messageId":"826","fix":"860","desc":"828"},{"messageId":"829","fix":"861","desc":"831"},{"desc":"862","fix":"863"},{"desc":"864","fix":"865"},"Update the dependencies array to be: [_getExam, petList]",{"range":"866","text":"867"},"Update the dependencies array to be: [hardwareList, selectHardwareType]",{"range":"868","text":"869"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"870","text":"871"},"Update the dependencies array to be: [mellaConnectStatus, mellaMeasureValue, value]",{"range":"872","text":"873"},"Update the dependencies array to be: [listDate]",{"range":"874","text":"875"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"876","text":"877"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"878","text":"879"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"880","text":"881"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"882","text":"883"},"Update the dependencies array to be: [echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",{"range":"884","text":"885"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"886","text":"887"},"removeEscape",{"range":"888","text":"889"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"890","text":"891"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"892","text":"889"},{"range":"893","text":"891"},{"range":"894","text":"889"},{"range":"895","text":"891"},{"range":"896","text":"889"},{"range":"897","text":"891"},{"range":"898","text":"889"},{"range":"899","text":"891"},{"range":"900","text":"889"},{"range":"901","text":"891"},{"range":"902","text":"889"},{"range":"903","text":"891"},{"range":"904","text":"889"},{"range":"905","text":"891"},{"range":"906","text":"889"},{"range":"907","text":"891"},{"range":"908","text":"889"},{"range":"909","text":"891"},{"range":"910","text":"889"},{"range":"911","text":"891"},{"range":"912","text":"889"},{"range":"913","text":"891"},{"range":"914","text":"889"},{"range":"915","text":"891"},{"range":"916","text":"889"},{"range":"917","text":"891"},{"range":"918","text":"889"},{"range":"919","text":"891"},{"range":"920","text":"889"},{"range":"921","text":"891"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"922","text":"923"},"Update the dependencies array to be: [_getExam]",{"range":"924","text":"925"},[1060,1062],"[_getExam, petList]",[2538,2558],"[hardwareList, selectHardwareType]",[7397,7404],"[callBack, prediction, timeNum, value]",[7944,7964],"[mellaConnectStatus, mellaMeasureValue, value]",[3263,3265],"[listDate]",[4962,4974],"[letterListCopy, phoneListCopy, searchText]",[6270,6272],"[_noUSB, _send, blueSearch]",[2621,2623],"[setReceiveBroadcastHardwareInfoFun]",[3890,3920],"[devicesList, receiveBroadcastHardwareInfo]",[5463,5480],"[echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",[6133,6153],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[24838,24839],"",[24838,24838],"\\",[24944,24945],[24944,24944],[25875,25876],[25875,25875],[25981,25982],[25981,25981],[26943,26944],[26943,26943],[27049,27050],[27049,27049],[28580,28581],[28580,28580],[28686,28687],[28686,28686],[29579,29580],[29579,29579],[29685,29686],[29685,29685],[30687,30688],[30687,30687],[30793,30794],[30793,30793],[48647,48648],[48647,48647],[48753,48754],[48753,48753],[49433,49434],[49433,49433],[49539,49540],[49539,49539],[859,861],"[initSelectVale, listArr]",[1002,1004],"[_getExam]"]