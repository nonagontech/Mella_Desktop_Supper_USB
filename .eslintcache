[{"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\App.js":"1","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx":"2","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"3","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectLocation\\VerifyOrganizationInformation.jsx":"4","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\praviders\\Praviders.jsx":"5","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\workPlace\\WorkPlace.jsx":"6","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx":"7","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx":"8","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx":"9","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx":"10","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx":"11","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx":"12","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx":"13","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx":"14","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx":"15","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx":"16","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx":"17","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchEszVet.js":"18","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js":"19","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx":"20","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js":"21","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js":"22","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js":"23","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx":"24","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\current.js":"25","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js":"26","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js":"27","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil.js":"28","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\imgArray.js":"29","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx":"30","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx":"31","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"32","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx":"33","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js":"34","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js":"35","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx":"36","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"37","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js":"38","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx":"39","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"40","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx":"41","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js":"42","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx":"43","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectScheduledExam.jsx":"44","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectExam\\SelectExam.jsx":"45","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx":"46","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\SignIn.jsx":"47","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\forgotPassword\\ForgotPassword.jsx":"48","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx":"49","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\help\\Help.jsx":"50","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\invite\\Invite.jsx":"51","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx":"52","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx":"53","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\px.js":"54","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js":"55","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js":"56","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx":"57","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx":"58","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil3.js":"59","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx":"60","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx":"61","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js":"62","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx":"63","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil5.js":"64","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"65","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js":"66","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectMella\\SelectMella.jsx":"67","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx":"68","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx":"69","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\advancedSettings\\AdvancedSettings.jsx":"70","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\addDevice\\AddDevice.jsx":"71","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js":"72","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil1.js":"73","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx":"74","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\index.js":"75","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js":"76","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx":"77","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx":"78","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js":"79","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js":"80","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"81","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\userAction.js":"82","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js":"83","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx":"84","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"85","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"86","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"87","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js":"88"},{"size":7424,"mtime":1655467295798,"results":"89","hashOfConfig":"90"},{"size":3737,"mtime":1655168677392,"results":"91","hashOfConfig":"90"},{"size":5178,"mtime":1655168677434,"results":"92","hashOfConfig":"90"},{"size":10192,"mtime":1655168677490,"results":"93","hashOfConfig":"90"},{"size":6450,"mtime":1655168677482,"results":"94","hashOfConfig":"90"},{"size":9743,"mtime":1655168677505,"results":"95","hashOfConfig":"90"},{"size":39743,"mtime":1655168677418,"results":"96","hashOfConfig":"90"},{"size":6007,"mtime":1655168677501,"results":"97","hashOfConfig":"90"},{"size":7651,"mtime":1655168677499,"results":"98","hashOfConfig":"90"},{"size":2615,"mtime":1655168677801,"results":"99","hashOfConfig":"90"},{"size":17372,"mtime":1655168677415,"results":"100","hashOfConfig":"90"},{"size":3459,"mtime":1655168677395,"results":"101","hashOfConfig":"90"},{"size":4706,"mtime":1655168677413,"results":"102","hashOfConfig":"90"},{"size":13197,"mtime":1655168677400,"results":"103","hashOfConfig":"90"},{"size":11451,"mtime":1655168677459,"results":"104","hashOfConfig":"90"},{"size":15939,"mtime":1655168677454,"results":"105","hashOfConfig":"90"},{"size":39382,"mtime":1656498255353,"results":"106","hashOfConfig":"90"},{"size":3579,"mtime":1655168677525,"results":"107","hashOfConfig":"90"},{"size":1275,"mtime":1655168677817,"results":"108","hashOfConfig":"90"},{"size":34793,"mtime":1656655106583,"results":"109","hashOfConfig":"90"},{"size":3126,"mtime":1655168677530,"results":"110","hashOfConfig":"90"},{"size":2445,"mtime":1655168677803,"results":"111","hashOfConfig":"90"},{"size":249,"mtime":1655467295885,"results":"112","hashOfConfig":"90"},{"size":1410,"mtime":1655168677807,"results":"113","hashOfConfig":"90"},{"size":1150,"mtime":1655427981745,"results":"114","hashOfConfig":"90"},{"size":697,"mtime":1655467295909,"results":"115","hashOfConfig":"90"},{"size":4641,"mtime":1656498255379,"results":"116","hashOfConfig":"90"},{"size":3403,"mtime":1655168677526,"results":"117","hashOfConfig":"90"},{"size":11452,"mtime":1655168677771,"results":"118","hashOfConfig":"90"},{"size":4713,"mtime":1655801855719,"results":"119","hashOfConfig":"90"},{"size":7727,"mtime":1656498255338,"results":"120","hashOfConfig":"90"},{"size":56656,"mtime":1656584043737,"results":"121","hashOfConfig":"90"},{"size":2998,"mtime":1655168677390,"results":"122","hashOfConfig":"90"},{"size":2103,"mtime":1656498255375,"results":"123","hashOfConfig":"90"},{"size":532,"mtime":1655467295881,"results":"124","hashOfConfig":"90"},{"size":1503,"mtime":1656498255359,"results":"125","hashOfConfig":"90"},{"size":15336,"mtime":1656643617950,"results":"126","hashOfConfig":"90"},{"size":58,"mtime":1655467295877,"results":"127","hashOfConfig":"90"},{"size":1365,"mtime":1655880805276,"results":"128","hashOfConfig":"90"},{"size":8196,"mtime":1655168677810,"results":"129","hashOfConfig":"90"},{"size":1232,"mtime":1656553852551,"results":"130","hashOfConfig":"90"},{"size":356,"mtime":1655467295857,"results":"131","hashOfConfig":"90"},{"size":7357,"mtime":1655168677429,"results":"132","hashOfConfig":"90"},{"size":39476,"mtime":1655467295805,"results":"133","hashOfConfig":"90"},{"size":12757,"mtime":1655168677486,"results":"134","hashOfConfig":"90"},{"size":41509,"mtime":1655723373489,"results":"135","hashOfConfig":"90"},{"size":17246,"mtime":1656498255357,"results":"136","hashOfConfig":"90"},{"size":12531,"mtime":1655168677496,"results":"137","hashOfConfig":"90"},{"size":6453,"mtime":1655168677397,"results":"138","hashOfConfig":"90"},{"size":4924,"mtime":1655168677462,"results":"139","hashOfConfig":"90"},{"size":6972,"mtime":1655168677464,"results":"140","hashOfConfig":"90"},{"size":10219,"mtime":1655168677467,"results":"141","hashOfConfig":"90"},{"size":13496,"mtime":1655168677468,"results":"142","hashOfConfig":"90"},{"size":3002,"mtime":1655168677812,"results":"143","hashOfConfig":"90"},{"size":1451,"mtime":1655168677805,"results":"144","hashOfConfig":"90"},{"size":18925,"mtime":1655168677533,"results":"145","hashOfConfig":"90"},{"size":14696,"mtime":1656047826772,"results":"146","hashOfConfig":"90"},{"size":8490,"mtime":1656067629344,"results":"147","hashOfConfig":"90"},{"size":2624,"mtime":1655168677529,"results":"148","hashOfConfig":"90"},{"size":3504,"mtime":1656655892202,"results":"149","hashOfConfig":"90"},{"size":12104,"mtime":1655467295852,"results":"150","hashOfConfig":"90"},{"size":4449,"mtime":1655168677816,"results":"151","hashOfConfig":"90"},{"size":3566,"mtime":1656065358361,"results":"152","hashOfConfig":"90"},{"size":3658,"mtime":1655168677531,"results":"153","hashOfConfig":"90"},{"size":846,"mtime":1655168677772,"results":"154","hashOfConfig":"90"},{"size":52228,"mtime":1655168677431,"results":"155","hashOfConfig":"90"},{"size":3973,"mtime":1655168677493,"results":"156","hashOfConfig":"90"},{"size":38409,"mtime":1655793172098,"results":"157","hashOfConfig":"90"},{"size":17966,"mtime":1655168677405,"results":"158","hashOfConfig":"90"},{"size":9784,"mtime":1656498255345,"results":"159","hashOfConfig":"90"},{"size":13651,"mtime":1655168677451,"results":"160","hashOfConfig":"90"},{"size":152,"mtime":1655168677794,"results":"161","hashOfConfig":"90"},{"size":3460,"mtime":1655168677527,"results":"162","hashOfConfig":"90"},{"size":3371,"mtime":1655168677813,"results":"163","hashOfConfig":"90"},{"size":431,"mtime":1655168677773,"results":"164","hashOfConfig":"90"},{"size":358,"mtime":1655467295910,"results":"165","hashOfConfig":"90"},{"size":5332,"mtime":1656064393236,"results":"166","hashOfConfig":"90"},{"size":7652,"mtime":1655467295863,"results":"167","hashOfConfig":"90"},{"size":71,"mtime":1655257026122,"results":"168","hashOfConfig":"90"},{"size":89,"mtime":1655467295873,"results":"169","hashOfConfig":"90"},{"size":14316,"mtime":1656498255371,"results":"170","hashOfConfig":"90"},{"size":293,"mtime":1655467295883,"results":"171","hashOfConfig":"90"},{"size":3044,"mtime":1655168677819,"results":"172","hashOfConfig":"90"},{"size":1232,"mtime":1656554148266,"results":"173","hashOfConfig":"90"},{"size":11233,"mtime":1656646462350,"results":"174","hashOfConfig":"90"},{"size":6014,"mtime":1656655575689,"results":"175","hashOfConfig":"90"},{"size":49231,"mtime":1656657094777,"results":"176","hashOfConfig":"90"},{"size":80,"mtime":1656657257967,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wlgw0n",{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"182"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"182"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"182"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"182"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"182"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"188"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"182"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"188"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"182"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"182"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"182"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"238","messages":"239","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"246","messages":"247","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"182"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"182"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"182"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"188"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"182"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"285","messages":"286","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"182"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"182"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"182"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"182"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"303","messages":"304","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"317","messages":"318","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"321","messages":"322","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"182"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"338","messages":"339","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"356","messages":"357","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\App.js",["379","380"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx",[],["381","382"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["383","384","385","386"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectLocation\\VerifyOrganizationInformation.jsx",["387","388","389","390","391","392","393"],"import React, { Component, } from 'react'\r\nimport {\r\n    Table,\r\n    Select,\r\n    Button,\r\n    message\r\n\r\n} from 'antd';\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\r\nimport './VerifyOrganizationInformation.less'\r\nimport { fetchRequest1 } from '../../utils/FetchUtil'\r\nimport { mTop, px } from '../../utils/px';\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\nexport default class Location extends Component {\r\n    state = {\r\n        loading: false,\r\n        api: '',\r\n        id: '',  //location ID\r\n        locations: [],\r\n        locationData: [],\r\n        selectLocationId: '',\r\n        selectLocationName: '',\r\n        vetData: [],\r\n        selectvetId: '',\r\n        selectvetName: ''\r\n\r\n    }\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big')\r\n        this.setState({\r\n            api: storage.API,\r\n            id: storage.id,\r\n        })\r\n        let params = {\r\n            APIkey: storage.API\r\n        }\r\n        console.log('发送的数据：', params);\r\n        this.setState({ loading: true });\r\n        fetchRequest1('/VetSpire/selectLocations', 'POST', params)\r\n            .then(res => {\r\n                console.log('接收到的数据', res, res.data.Locations);\r\n                let locations = res.data.Locations\r\n\r\n                let datas = []\r\n                for (let i = 0; i < locations.length; i++) {\r\n                    const { address, displayName, name, phoneNumber, id } = locations[i]\r\n                    let data = {\r\n                        locationId: id,\r\n                        locationName: name,\r\n                        // display: displayName,\r\n                        // address,\r\n                        // phoneNumber\r\n                    }\r\n                    datas.push(data)\r\n                }\r\n                console.log(datas);\r\n                this.setState({\r\n                    loading: false,\r\n                    locationData: datas\r\n                });\r\n\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log('错误', err);\r\n                this.setState({ loading: false });\r\n\r\n            })\r\n\r\n        if (storage.locationKey !== undefined) {\r\n            let params = {\r\n                APIkey: storage.API,\r\n                locationId: storage.locationKey\r\n            }\r\n            console.log('发送的数据：', params);\r\n            // this.setState({ loading: true });\r\n            fetchRequest1('/VetSpire/selectProvidersByLocationId', 'POST', params)\r\n                .then(res => {\r\n                    console.log('接收到的数据', res);\r\n                    if (res.code === 14002) {\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                        console.log(res.message);\r\n                        let datas = res.data.Location.providers\r\n                        console.log(datas);\r\n                        let arr = []\r\n                        for (let i = 0; i < datas.length; i++) {\r\n                            let data = {\r\n                                vetId: datas[i].id,\r\n                                VetName: datas[i].name\r\n                            }\r\n                            arr.push(data)\r\n                        }\r\n                        this.setState({\r\n                            vetData: arr\r\n                        })\r\n\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    console.log('错误', err);\r\n                })\r\n        }\r\n    }\r\n    _selectLocation = () => {\r\n        let locationDefaultValue = storage.locationDefaultValue\r\n        let options = this.state.locationData.map(d => <Option key={d.locationId}>{d.locationName}</Option>)\r\n        const _select = (value, data) => {\r\n            console.log(value, data, '------------', value, data.children);  //value的值为id\r\n            storage.locationDefaultValue = data.children\r\n            storage.locationKey = value\r\n            storage.vetDefaultValue = undefined\r\n            storage.vetKey = undefined\r\n            this.setState({})\r\n            this.setState({\r\n                selectLocationId: value,\r\n                selectLocationName: data.children\r\n            })\r\n\r\n            let params = {\r\n                APIkey: storage.API,\r\n                locationId: value\r\n            }\r\n            console.log('发送的数据：', params);\r\n            // this.setState({ loading: true });\r\n            fetchRequest1('/VetSpire/selectProvidersByLocationId', 'POST', params)\r\n                .then(res => {\r\n                    console.log('接收到的数据', res);\r\n                    if (res.code === 14002) {\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                        console.log(res.message);\r\n                        let datas = res.data.Location.providers\r\n                        console.log(datas);\r\n                        let arr = []\r\n                        for (let i = 0; i < datas.length; i++) {\r\n                            let data = {\r\n                                vetId: datas[i].id,\r\n                                VetName: datas[i].name\r\n                            }\r\n                            arr.push(data)\r\n                        }\r\n                        this.setState({\r\n                            vetData: arr\r\n                        })\r\n\r\n                    }\r\n\r\n                })\r\n                .catch(err => {\r\n                    console.log('错误', err);\r\n                })\r\n        }\r\n        return (\r\n            <div className=\"select\">\r\n                <p>Select Location:</p>\r\n                <Select\r\n                    showSearch\r\n                    style={{ width: '40%' }}\r\n                    defaultValue={locationDefaultValue}\r\n                    placeholder=\"Search to Select\"\r\n                    optionFilterProp=\"children\"\r\n                    listHeight={256}\r\n                    onSelect={(value, data) => _select(value, data)}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n                >\r\n                    {options}\r\n                </Select>\r\n            </div>\r\n        )\r\n    }\r\n    _selectVet = () => {\r\n        let vetDefaultValue = storage.vetDefaultValue\r\n        let options = this.state.vetData.map(d => <Option key={d.vetId}>{d.VetName}</Option>)\r\n        const _select = (value, data) => {\r\n            console.log(value, data, '------------', value, data.children);  //value的值为id\r\n            storage.vetDefaultValue = data.children\r\n            storage.vetKey = value\r\n            this.setState({\r\n                selectvetId: value,\r\n                selectvetName: data.children\r\n            })\r\n        }\r\n        return (\r\n            <div className=\"select\" style={{ marginTop: mTop(70) }}>\r\n                <p>Select Vet:</p>\r\n                <Select\r\n                    showSearch\r\n                    style={{ width: '40%' }}\r\n                    // size = {'small'}     \r\n                    defaultValue={vetDefaultValue}\r\n                    placeholder=\"Search to Select\"\r\n                    optionFilterProp=\"children\"\r\n                    listHeight={256}\r\n                    onSelect={(value, data) => _select(value, data)}\r\n                    filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n                >\r\n                    {options}\r\n                </Select>\r\n            </div>\r\n        )\r\n    }\r\n    _btn = () => {\r\n\r\n        return (\r\n            <div className=\"btn\"\r\n                style={{ marginTop: px(200) }}\r\n            >\r\n                <div className=\"button\">\r\n                    <Button\r\n                        style={{ width: px(300) }}\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        size='large'\r\n                        onClick={() => { this.props.history.push('/page2') }}>\r\n                        Try Again\r\n                    </Button>\r\n                </div>\r\n                <div className=\"button\">\r\n                    <Button\r\n                        style={{ width: px(300) }}\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        size='large'\r\n                        onClick={this._verify}>\r\n                        Verify\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    _verify = () => {\r\n        let { selectvetId, selectvetName, selectLocationName, selectLocationId } = this.state\r\n\r\n        if ((selectLocationName != '' && selectvetName === '') || (storage.vetDefaultValue != '' && storage.locationDefaultValue != '')) {\r\n            // let arr = [{selectLocationId:'765',selectvetId:''}]\r\n            storage.selectvetId = selectvetId\r\n            storage.selectLocationId = selectLocationId\r\n            this.props.history.push('/page4')\r\n\r\n        } else {\r\n            message.error('Please select Verify Organization Information')\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div id=\"location223\">\r\n                {/* 关闭缩小 */}\r\n                <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                    onClick1={() => this.props.history.push('/page2')}\r\n                />\r\n\r\n                <div className=\"title\">Verify Organization Information</div>\r\n                <div className=\"goodpets\" style={{\r\n                    marginBottom: mTop(80)\r\n                }}>Good Pets</div>\r\n\r\n                {this._selectLocation()}\r\n\r\n                {this._selectVet()}\r\n\r\n\r\n                {this._btn()}\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}",["394","395"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\praviders\\Praviders.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\workPlace\\WorkPlace.jsx",["396","397","398","399","400","401","402","403","404"],"\r\nimport React, { Component, } from 'react'\r\nimport {\r\n  Select,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Spin\r\n\r\n\r\n} from 'antd';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport './workplace.less'\r\nimport { mTop, pX, px, win } from '../../utils/px';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport logo from '../../assets/images/mellaLogo.png'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\nexport default class WorkPlace extends Component {\r\n  state = {\r\n    organization: '',\r\n    workplaceList: [],\r\n\r\n\r\n    spin: false,\r\n    orgArr: [],\r\n    workplaceJson: {},\r\n    workplaceId: '',\r\n    workplaceName: '',\r\n    organizationId: '',\r\n    organizationName: '',\r\n    connectionKey: '',\r\n    selectRoleId: ''\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n\r\n    let userWorkplace = []\r\n    try {\r\n      userWorkplace = JSON.parse(storage.userWorkplace) || []\r\n      console.log(userWorkplace);\r\n    } catch (error) {\r\n      console.log('字符串转对象失败', error);\r\n    }\r\n    /*orgArr的格式为[{\r\n      organizationId:1,\r\n      organizationName:'11111',\r\n      connectionKey:''\r\n    }]\r\n    \r\n     workplace:{\r\n       1:{\r\n          workplaceId:1,\r\n          workplaceName:'122334\r\n        },\r\n     }\r\n    */\r\n    let orgArr = [], workplaceJson = {}\r\n    console.log('存储的工作场所和组织id', storage.lastWorkplaceId, storage.lastOrganization);\r\n    for (let i = 0; i < userWorkplace.length; i++) {\r\n      let element = userWorkplace[i]\r\n      // console.log('每一项的值：', element);\r\n      if (element.organizationEntity && element.workplaceEntity) {\r\n        let { organizationEntity, workplaceEntity, roleId } = element\r\n        const { name, organizationId, connectionKey } = organizationEntity\r\n        const { workplaceName, workplaceId } = workplaceEntity\r\n\r\n        if (`${workplaceId}` === storage.lastWorkplaceId) {\r\n          this.setState({\r\n            workplaceName,\r\n            workplaceId: storage.lastWorkplaceId\r\n          })\r\n        }\r\n\r\n        if (`${organizationId}` === storage.lastOrganization) {\r\n          this.setState({\r\n            organizationName: name,\r\n            organizationId: storage.lastOrganization\r\n          })\r\n        }\r\n\r\n        let orgRepeatFlog = false, repeatFlogNum = -1\r\n        for (let j = 0; j < orgArr.length; j++) {\r\n          console.log(orgArr[j].organizationId, organizationId);\r\n          if (orgArr[j].organizationId === organizationId) {\r\n            orgRepeatFlog = true\r\n            repeatFlogNum = j\r\n            break;\r\n          }\r\n\r\n        }\r\n        if (orgRepeatFlog) {\r\n          let workplace = {\r\n            workplaceName, workplaceId\r\n          }\r\n          let id = orgArr[repeatFlogNum].organizationId\r\n          let sameflog = false\r\n          console.log(workplaceJson[`${id}`], workplace);\r\n          for (let k = 0; k < workplaceJson[`${id}`].length; k++) {\r\n            const element = workplaceJson[`${id}`][k];\r\n            if (element.workplaceId === workplace.workplaceId && element.workplaceName === workplace.workplaceName) {\r\n              sameflog = true\r\n              break\r\n            }\r\n\r\n          }\r\n          if (!sameflog) {\r\n            workplaceJson[`${id}`].push(workplace)\r\n          }\r\n\r\n        } else {\r\n          let connectKey = connectionKey || ''\r\n          let json = {\r\n            organizationId,\r\n            organizationName: name,\r\n            connectionKey: connectKey,\r\n            roleId\r\n          }\r\n          let workplace = [{\r\n            workplaceName, workplaceId\r\n          }]\r\n          workplaceJson[`${organizationId}`] = workplace\r\n\r\n          orgArr.push(json)\r\n        }\r\n      }\r\n    }\r\n    console.log('-----转换后的组织信息--', orgArr, workplaceJson);\r\n    this.setState({\r\n      orgArr,\r\n      workplaceJson,\r\n      connectionKey: storage.connectionKey,\r\n      selectRoleId: storage.roleId\r\n    })\r\n    //分辨率改变后窗口自动改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _select = (value, e) => {\r\n    console.log(value, e);  //value的值为id\r\n\r\n  }\r\n\r\n  _next = () => {\r\n    // this.props.history.push('/page8')\r\n\r\n    let { workplaceId, organizationId, connectionKey, selectRoleId } = this.state\r\n    console.log({ workplaceId, organizationId, connectionKey, selectRoleId });\r\n\r\n    // this.setState({\r\n    //   spin: true\r\n    // })\r\n    // fetchRequest(`/organization/updateLastWorkplace/${storage.userId}/${workplaceId}`)\r\n    //   .then(res => {\r\n    //     console.log(res);\r\n    //     this.setState({\r\n    //       spin: false\r\n    //     })\r\n    //     if (res.msg === 'success') {\r\n    //       storage.lastWorkplaceId = workplaceId\r\n    //       this.props.history.goBack()\r\n    //     }\r\n    //   })\r\n    //   .catch(err => {\r\n    //     this.setState({\r\n    //       spin: false\r\n    //     })\r\n    //     console.log(err);\r\n    //   })\r\n\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    console.log('入参', { userId: storage.userId, roleId: storage.roleId, workplaceId });\r\n    fetchRequest4(`/user/changeLatestWorkplace/${storage.userId}/${2}/${workplaceId}`, \"GET\")\r\n      .then(res => {\r\n        console.log('切换成功', res);\r\n        storage.lastWorkplaceId = `${workplaceId}`\r\n        storage.lastOrganization = organizationId\r\n        storage.connectionKey = connectionKey\r\n\r\n        if (selectRoleId) {\r\n          storage.roleId = selectRoleId\r\n        }\r\n\r\n        this.props.history.push('/uesr/selectExam')\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        storage.lastWorkplaceId = workplaceId\r\n        storage.lastOrganization = organizationId\r\n        storage.connectionKey = connectionKey\r\n\r\n        this.props.history.push('/uesr/selectExam')\r\n\r\n      })\r\n  }\r\n  render () {\r\n\r\n    let { orgArr, organizationName, workplaceName, workplaceJson, organizationId } = this.state\r\n    let orgOptions = orgArr.map(item => <Option key={item.organizationId} connectionkey={item.connectionKey} roleid={item.roleId} >{item.organizationName}</Option>)\r\n    let workplaceArr = []\r\n    if (workplaceJson[`${organizationId}`]) {\r\n      workplaceArr = workplaceJson[`${organizationId}`]\r\n      console.log('workArr = ', workplaceArr);\r\n    }\r\n    let workplaceOptions = workplaceArr.map(item => <Option key={item.workplaceId}>{item.workplaceName}</Option>)\r\n    return (\r\n      <div id=\"workplace\">\r\n        {/* 关闭缩小 */}\r\n        <div className=\"header\">\r\n          <MaxMin\r\n            onClick={() => { this.props.history.push('/') }}\r\n            onClick1={() => this.props.history.goBack()}\r\n          />\r\n        </div>\r\n        <div className=\"body flex\">\r\n          <div className=\"img flex\">\r\n            <img src={logo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n\r\n          <div className=\"title\">\r\n            <div className=\"text\" style={{ fontSize: px(28), marginBottom: px(40) }}>Verify Organization Information</div>\r\n            <div className=\"text2\" style={{ fontSize: px(24), textAlign: 'center' }}>Good Pets</div>\r\n          </div>\r\n\r\n\r\n          <div className=\"selectAll\" style={{ marginBottom: px(160) }}>\r\n\r\n            <div className=\"select\" >\r\n              <p style={{ fontSize: px(18) }}>Select Organization:</p>\r\n              <Select style={{ width: '40%' }}\r\n                value={organizationName}\r\n                onChange={(val, e) => {\r\n                  console.log(val, e)\r\n                  let workplace = workplaceJson[e.key]\r\n                  console.log(workplace);\r\n                  this.setState({\r\n                    organizationId: e.key,\r\n                    organizationName: e.children,\r\n                    connectionKey: e.connectionkey,\r\n                    workplaceId: workplace[0].workplaceId,\r\n                    workplaceName: workplace[0].workplaceName,\r\n                    selectRoleId: e.roleid\r\n                  })\r\n                }}>\r\n                {/* <Option value=\"1\">UGA Veterinary Teaching Hospital</Option> */}\r\n                {orgOptions}\r\n              </Select>\r\n            </div>\r\n\r\n            <div className=\"select\" >\r\n              <p style={{ fontSize: px(18) }}>Select Location:</p>\r\n              <Select style={{ width: '40%' }}\r\n                value={workplaceName}\r\n                onChange={(val, e) => {\r\n                  console.log(val, e)\r\n                  this.setState({\r\n                    workplaceId: e.key,\r\n                    workplaceName: e.children\r\n                  })\r\n                }}>\r\n                {workplaceOptions}\r\n              </Select>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"foot flex\">\r\n          <div className=\"btn\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size='large'\r\n              onClick={this._next}\r\n            >\r\n              Verify\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429"],"import React, { Component } from 'react'\r\nimport { Input, Menu, message, Select, Calendar, Col, Row, Spin } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport dog from './../../assets/images/pinkdog.png'\r\nimport cat from './../../assets/images/pinkcat.png'\r\nimport redDog from './../../assets/images/reddog.png'\r\nimport redCat from './../../assets/images/redcat.png'\r\nimport redother from './../../assets/images/redother.png'\r\nimport other from './../../assets/images/other.png'\r\nimport electronStore from '../../utils/electronStore';\r\nimport Close from './../../assets/img/close.png'\r\nimport nextImg from './../../assets/img/nextImg.png'\r\n\r\n\r\n// import selectphoto from './../../assets/images/img.png'\r\nimport selectphoto from './../../assets/images/sel.png'\r\nimport dui from './../../assets/images/dui.png'\r\nimport female from './../../assets/images/female.png'\r\nimport male from './../../assets/images/male.png'\r\nimport './doctorAddPet.less'\r\nimport { mTop, px, win } from '../../utils/px';\r\nimport Avatar from './../avatar/Avatar'\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport Heard from '../../utils/heard/Heard';\r\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\r\nimport Button from './../../utils/button/Button'\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class DoctorAddPet extends Component {\r\n    state = {\r\n        dogImg: dog,\r\n        catImg: cat,\r\n        otherImg: other,\r\n        selectWZ: '',\r\n        closebgc: '',\r\n        minbgc: '',\r\n        closeColor: '',\r\n        api: '',\r\n        id: '',\r\n        seleceID: '',//医生id\r\n        petSpecies: 0,\r\n        unit: 1,\r\n        gender: 0,\r\n        isMix: false,\r\n        imageId: -1,\r\n        imgurl: '',\r\n        catData: [],\r\n        petSpeciesBreedId: '',\r\n        dogData: [],\r\n        breedArr: [],\r\n        birthday: moment(new Date()).format('MMMM D, YYYY'),\r\n        patientId: '',\r\n        petName: '',\r\n\r\n        petId: '',\r\n        lastName: '',\r\n        firstName: '',\r\n        breedName: '',\r\n        owner: '',\r\n        intFlog: false,\r\n        spin: false,\r\n        visible: false,\r\n\r\n        imgurl: '',\r\n        dogBreed: [],\r\n        catBreed: [],\r\n        searchBreed: '',\r\n        selectBreedJson: {},\r\n        confirmSelectBreedJson: {},\r\n        selectBreed: false\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big', win())\r\n        ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n        let dogBreed = electronStore.get('dogBreed') || []\r\n        let catBreed = electronStore.get('catBreed') || []\r\n        this.setState({\r\n            dogBreed,\r\n            catBreed\r\n        })\r\n        this.getBreed('cat')\r\n        this.getBreed('dog')\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n\r\n        ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n    }\r\n    changeFenBianLv = (e) => {\r\n        console.log(e);\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big', win())\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n\r\n    getBreed = (val) => {\r\n        let data = {}\r\n        switch (val) {\r\n            case 'dog':\r\n                data.speciesId = 2; break;\r\n\r\n            case 'cat':\r\n                data.speciesId = 1; break;\r\n        }\r\n\r\n        fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n            .then(res => {\r\n                console.log('---', res);\r\n                if (res.code === 0) {\r\n                    let arr = []\r\n                    res.petlist.map((item, index) => {\r\n                        let data = {\r\n                            petSpeciesBreedId: item.petSpeciesBreedId,\r\n                            breedName: item.breedName\r\n                        }\r\n                        arr.push(data)\r\n                    })\r\n                    if (val === 'dog') {\r\n                        this.setState({\r\n                            dogBreed: arr\r\n                        })\r\n                        electronStore.set('dogBreed', arr)\r\n                    } else if (val === 'cat') {\r\n                        this.setState({\r\n                            catBreed: arr\r\n                        })\r\n                        electronStore.set('catBreed', arr)\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    _getData = (val) => {\r\n        this.setState({\r\n            petSpecies: val,\r\n            breedName: ''\r\n        })\r\n        let data = {\r\n            speciesId: val\r\n        }\r\n        fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n            .then(res => {\r\n                console.log('--获取品种返回的数据-', res);\r\n                if (res.code === 0) {\r\n                    let arr = []\r\n                    res.petlist.map((item, index) => {\r\n                        let data = {\r\n                            petSpeciesBreedId: item.petSpeciesBreedId,\r\n                            breedName: item.breedName\r\n                        }\r\n                        arr.push(data)\r\n                    })\r\n                    console.log(arr);\r\n                    this.setState({\r\n                        breedArr: arr\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n\r\n    /**------------------顶部start------------------------ */\r\n    _close = () => {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        console.log('关闭程序');\r\n        ipcRenderer.send('window-close')\r\n    }\r\n    _min = () => {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        console.log('最小化程序');\r\n        ipcRenderer.send('window-min')\r\n        this.setState({\r\n            minbgc: '',\r\n        })\r\n    }\r\n    _minMove = () => {\r\n\r\n        this.setState({\r\n            minbgc: 'rgb(211, 205, 205)'\r\n        })\r\n    }\r\n    _minLeave = () => {\r\n        this.setState({\r\n            minbgc: ''\r\n        })\r\n    }\r\n    _closeMove = () => {\r\n        this.setState({\r\n            closeColor: 'red',\r\n            closebgc: '#fff'\r\n        })\r\n    }\r\n    _closeLeave = () => {\r\n        this.setState({\r\n            closeColor: '#fff',\r\n            closebgc: ''\r\n        })\r\n    }\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        const { api, id, seleceID } = this.state\r\n        if (e.key === '1') {\r\n            this.props.history.push({ pathname: '/page6', query: { api, id, seleceID } })\r\n        }\r\n        if (e.key === '2') {\r\n            this.props.history.push('/')\r\n        }\r\n\r\n    };\r\n    /**------------------顶部end------------------------ */\r\n    selectWZ = (val) => {\r\n        let { catBreed, dogBreed } = this.state\r\n        switch (val) {\r\n            case 'dog':\r\n                this.setState({\r\n                    catImg: cat,\r\n                    dogImg: redDog,\r\n                    otherImg: other,\r\n                    selectWZ: val,\r\n                    breedArr: [].concat(dogBreed)\r\n                })\r\n\r\n                break;\r\n\r\n            case 'cat':\r\n                this.setState({\r\n                    catImg: redCat,\r\n                    dogImg: dog,\r\n                    otherImg: other,\r\n                    selectWZ: val,\r\n                    breedArr: [].concat(catBreed)\r\n                })\r\n\r\n                break;\r\n\r\n            case 'other':\r\n                this.setState({\r\n                    catImg: cat,\r\n                    dogImg: dog,\r\n                    otherImg: redother,\r\n                    selectWZ: val,\r\n                    breedArr: []\r\n                })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    _petSpecies = () => {\r\n        let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\r\n\r\n        this.avatar = selectphoto\r\n        return (\r\n            <div className=\"petSpecies\"\r\n                style={{ height: mTop(80), }}\r\n            >\r\n                <div className=\"l\">\r\n                    <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\r\n                    <div className=\"selectSpecies\">\r\n                        <ul>\r\n                            <li >\r\n                                <div className='speciesChild' >\r\n                                    <div className='dog'\r\n                                        onClick={() => { this.selectWZ('dog') }}>\r\n                                        <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\r\n                                    </div>\r\n                                    Dog\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className='speciesChild' >\r\n                                    <div className='dog' onClick={() => { this.selectWZ('cat') }} >\r\n                                        <img src={catImg} alt=\"\" style={{ width: px(40) }} />\r\n                                    </div>\r\n                                    Cat\r\n                                </div>\r\n                            </li>\r\n                            <li >\r\n                                <div className='speciesChild' >\r\n                                    <div className='dog' onClick={() => { this.selectWZ('other') }} >\r\n                                        <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\r\n                                    </div>\r\n                                    Other\r\n                                </div>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"r\">\r\n\r\n                    <div className=\"img\">\r\n                        <Avatar\r\n                            init={\r\n                                <div className=\"ciral \">\r\n                                    <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                                    <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                                </div>\r\n                            }\r\n                            getinfo={(val) => {\r\n                                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                                if (val) {\r\n                                    this.setState({\r\n                                        imageId: val\r\n                                    })\r\n                                }\r\n\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _petName = () => {\r\n\r\n        const onPanelChange = (value, mode) => {\r\n            console.log('-----', value, mode);\r\n        }\r\n        let birthday = this.state.birthday\r\n        let birthdayValue = birthday ? moment(birthday) : moment(new Date())\r\n        return (\r\n            <div className=\"petName\"\r\n                style={{ marginTop: mTop(18) }}\r\n            >\r\n                <div className=\"r\">\r\n\r\n                    <p >Pet Name</p>\r\n                    <div className=\"infoInput\">\r\n                        <Input\r\n                            bordered={false}\r\n                            value={this.state.petName}\r\n                            onChange={(item) => {\r\n\r\n                                this.setState({\r\n                                    petName: item.target.value\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"r\">\r\n                    <p >Pet Birthday</p>\r\n                    <div className=\"infoInput\" >\r\n                        <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\r\n                            document.getElementById('calendar').style.display = 'block'\r\n                        }}>{this.state.birthday}</p>\r\n                        <div className=\"calendar\" id=\"calendar\" style={{ left: px(-50), top: px(-50) }}>\r\n                            <Calendar\r\n                                fullscreen={false}\r\n                                headerRender={({ value, type, onChange, onTypeChange }) => {\r\n\r\n                                    const start = 0;\r\n                                    const end = 12;\r\n                                    const monthOptions = [];\r\n\r\n                                    const current = value.clone();\r\n                                    const localeData = value.localeData();\r\n                                    const months = [];\r\n                                    for (let i = 0; i < 12; i++) {\r\n                                        current.month(i);\r\n                                        months.push(localeData.monthsShort(current));\r\n                                    }\r\n\r\n                                    for (let index = start; index < end; index++) {\r\n                                        monthOptions.push(\r\n                                            <Select.Option className=\"month-item\" key={`${index}`}>\r\n                                                {months[index]}\r\n                                            </Select.Option>\r\n                                        );\r\n                                    }\r\n                                    const month = value.month();\r\n\r\n                                    const year = value.year();\r\n                                    const options = [];\r\n\r\n                                    for (let i = moment(new Date()).year(); i > moment(new Date()).year() - 40; i -= 1) {\r\n                                        options.push(\r\n                                            <Select.Option key={i} value={i} className=\"year-item\">\r\n                                                {i}\r\n                                            </Select.Option>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <div style={{ padding: 8 }}>\r\n                                            <Row gutter={8}>\r\n                                                <Col>\r\n                                                    <Select\r\n                                                        size=\"small\"\r\n                                                        dropdownMatchSelectWidth={false}\r\n                                                        className=\"my-year-select\"\r\n                                                        onChange={(newYear) => {\r\n                                                            const now = value.clone().year(newYear);\r\n                                                            onChange(now);\r\n                                                        }}\r\n                                                        value={String(year)}\r\n                                                    >\r\n                                                        {options}\r\n                                                    </Select>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Select\r\n                                                        size=\"small\"\r\n                                                        dropdownMatchSelectWidth={false}\r\n                                                        value={String(month)}\r\n                                                        onChange={(selectedMonth) => {\r\n                                                            const newValue = value.clone();\r\n                                                            newValue.month(parseInt(selectedMonth, 10));\r\n                                                            onChange(newValue);\r\n                                                        }}\r\n                                                    >\r\n                                                        {monthOptions}\r\n                                                    </Select>\r\n                                                </Col>\r\n                                                {/* <Col>\r\n                                                    <div className=\"btn\" onClick={() => {\r\n                                                        document.getElementById('calendar').style.display = 'none'\r\n                                                    }}>\r\n                                                        Choose this date\r\n                                                    </div>\r\n\r\n                                                </Col> */}\r\n                                            </Row>\r\n                                        </div>\r\n                                    );\r\n                                }}\r\n                                value={birthdayValue}\r\n                                onSelect={(value) => {\r\n                                    console.log(value);\r\n                                    this.setState({\r\n                                        birthday: moment(value).format('MMMM D, YYYY')\r\n\r\n                                    })\r\n                                    document.getElementById('calendar').style.display = 'none'\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _ownName = () => {\r\n\r\n        return (\r\n            <div className=\"petName\" style={{ marginTop: mTop(18) }}\r\n            >\r\n                <div className=\"l\">\r\n\r\n                    <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\r\n                    <div className=\"infoInput\">\r\n                        <Input bordered={false}\r\n                            value={this.state.patientId}\r\n                            onChange={(item) => {\r\n\r\n                                this.setState({\r\n                                    patientId: item.target.value.replace(/\\s/g, \"\"),\r\n                                    intFlog: true\r\n\r\n                                })\r\n                                if (item.target.value !== errPatientId) {\r\n                                    message.destroy()\r\n                                }\r\n                            }}\r\n                            onBlur={() => {\r\n                                console.log('我离开光标了');\r\n\r\n                                let params = {\r\n                                    patientId: this.state.patientId,\r\n                                    doctorId: storage.userId\r\n                                }\r\n                                if (storage.lastWorkplaceId) {\r\n                                    params.workplaceId = storage.lastWorkplaceId\r\n                                }\r\n                                message.destroy()\r\n                                fetchRequest(`/pet/checkPatientId`, \"GET\", params)\r\n                                    .then(res => {\r\n                                        console.log(res);\r\n                                        if (res.flag === false) {\r\n                                            errPatientId = params.patientId\r\n                                            message.destroy()\r\n                                            message.error('This patient ID is already occupied, please change to a new one', 0)\r\n                                        } else {\r\n                                            errPatientId = ''\r\n                                        }\r\n\r\n                                    })\r\n                                    .catch(err => {\r\n                                        console.log(err);\r\n\r\n                                    })\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"r\">\r\n                    <div className=\"infoInput flex\"\r\n                        style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            // this.setState({\r\n                            //     selectBreed: true\r\n                            // })\r\n                        }}\r\n                    >\r\n\r\n                        <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{'My Parents'}</div>\r\n                        <div className=\"nextimg\" >\r\n                            <img src={nextImg} style={{ height: px(15) }} />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _select = (value, data) => {\r\n        console.log(value, data);  //value的值为id\r\n        this.setState({\r\n            petSpeciesBreedId: value,\r\n            breedName: data.children\r\n        })\r\n    }\r\n    _primaryBreed = () => {\r\n        let options = null\r\n\r\n        options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\r\n        let { breedName, confirmSelectBreedJson } = this.state\r\n\r\n\r\n        return (\r\n            <div className=\"petName\" style={{ marginTop: mTop(18) }}>\r\n                <div className=\"l\" >\r\n                    {/* <p >Primary Breed</p> */}\r\n                    <div className=\"infoInput flex\"\r\n                        style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                selectBreed: true\r\n                            })\r\n                        }}\r\n                    >\r\n                        {/* <Input bordered={false} disabled={false} /> */}\r\n\r\n                        {/* <Select\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            bordered={false}\r\n                            value={breedName}\r\n                            // size = {'small'}        \r\n                            placeholder=\"Search to Select\"\r\n                            optionFilterProp=\"children\"\r\n                            listHeight={256}\r\n                            onSelect={(value, data) => this._select(value, data)}\r\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                            filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n                        >\r\n                            {options}\r\n                        </Select> */}\r\n                        <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'}</div>\r\n                        <div className=\"nextimg\" >\r\n                            <img src={nextImg} style={{ height: px(15) }} />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"r\" style={{ paddingTop: mTop(40) }}>\r\n                    <div className=\"max\">\r\n                        Mix?\r\n                        <div className=\"selected\"\r\n                            onClick={() => this.setState({\r\n                                isMix: !this.state.isMix\r\n                            })}\r\n                        >\r\n                            {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _weight = () => {\r\n        let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\r\n        switch (this.state.unit) {\r\n            case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\r\n            case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\r\n        }\r\n\r\n        switch (this.state.gender) {\r\n            case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\r\n            case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"petName\" style={{ marginTop: mTop(18) }}>\r\n                <div className=\"l\">\r\n                    <p >Pet Weight</p>\r\n                    <div className=\"infoInput\">\r\n                        <Input bordered={false}\r\n                            value={this.state.weight}\r\n                            onChange={(item) => {\r\n\r\n                                this.setState({\r\n                                    weight: item.target.value\r\n                                })\r\n                            }}\r\n\r\n                        />\r\n                        <div className=\"ibKg\">\r\n                            <div className=\"ibs\"\r\n                                style={{ backgroundColor: ibBgcColor, color: ibCor }}\r\n                                onClick={() => {\r\n                                    if (this.state.unit === 2) {\r\n\r\n                                        this.setState({\r\n                                            unit: 1,\r\n                                            weight: (this.state.weight * 2.2046).toFixed(1)\r\n                                        })\r\n                                    }\r\n                                }}\r\n                            >Ibs</div>\r\n                            <div className=\"kgs\"\r\n                                style={{ backgroundColor: kgBgcColor, color: kgCor }}\r\n                                onClick={() => {\r\n\r\n                                    if (this.state.unit === 1) {\r\n\r\n                                        this.setState({\r\n                                            unit: 1,\r\n                                            weight: (this.state.weight / 2.2046).toFixed(1)\r\n                                        })\r\n                                    }\r\n                                    this.setState({ unit: 2 })\r\n                                }}\r\n                            >kgs</div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"r\">\r\n                    <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\r\n                    <div className=\"gender\">\r\n                        <div className=\"selectGender\">\r\n                            <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\r\n                                <div className=\"femaleCiral\"\r\n                                    style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\r\n                                    onClick={() => this.setState({ gender: 1 })}\r\n                                >\r\n                                    <img src={female} alt=\"\" style={{ width: px(15) }} />\r\n                                </div>\r\n                                Female\r\n                            </div>\r\n                            <div className=\"male\" style={{ fontSize: px(18) }}>\r\n                                <div className=\"maleCiral\"\r\n                                    style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\r\n                                    onClick={() => this.setState({ gender: 0 })}\r\n                                >\r\n                                    <img src={male} alt=\"\" style={{ width: px(20) }} />\r\n                                </div>\r\n                                Male\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { closeColor, closebgc, minbgc, disabled, petSpeciesBreedId } = this.state\r\n\r\n        return (\r\n            <div id=\"doctorAddPet\">\r\n\r\n                <div className=\"heard\">\r\n                    <Heard\r\n                        onReturn={() => {\r\n                            // this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n                            this.props.history.goBack()\r\n\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"editPetInfo_top\" >\r\n                    <div className=\"title\" style={{ marginBottom: px(20), marginTop: px(20) }}>{`New Pet`}</div>\r\n                    {this._petSpecies()}\r\n                    {this._petName()}\r\n                    {this._ownName()}\r\n                    {this._primaryBreed()}\r\n                    {this._weight()}\r\n                </div>\r\n                <div className=\"editPetInfo_foot\"  >\r\n                    <div className=\"save\"\r\n                        onClick={() => {\r\n                            message.destroy()\r\n\r\n                            if (!this.state.patientId) {\r\n                                message.error('Please enter patient ID', 0)\r\n                                return\r\n                            }\r\n\r\n                            let params = {\r\n                                patientId: this.state.patientId,\r\n                                doctorId: storage.userId\r\n                            }\r\n                            if (storage.lastWorkplaceId) {\r\n                                params.workplaceId = storage.lastWorkplaceId\r\n                            }\r\n                            if (storage.lastOrganization) {\r\n                                params.organizationId = storage.lastOrganization\r\n                            }\r\n\r\n                            this.setState({\r\n                                spin: true\r\n                            })\r\n                            console.log('-----------检测patient是否存在', params);\r\n\r\n                            fetchRequest(`/pet/checkPatientId`, \"GET\", params)\r\n                                .then(res => {\r\n                                    console.log(res);\r\n                                    if (res.flag === false) {\r\n                                        this.setState({\r\n                                            spin: false\r\n                                        }, () => {\r\n                                            errPatientId = params.patientId\r\n                                            message.destroy()\r\n                                            message.error('This patient ID is already occupied, please change to a new one', 0)\r\n\r\n                                        })\r\n                                    } else {\r\n\r\n                                        let { petSpecies, petName, birthday, petSpeciesBreedId, isMix, weight, gender, unit, imageId, confirmSelectBreedJson, owner, patientId } = this.state\r\n\r\n\r\n                                        let species = null\r\n                                        if (petSpeciesBreedId) {\r\n                                            species = petSpeciesBreedId\r\n                                        } else {\r\n                                            // 11001 是cat 12001是dog 13001是other\r\n                                            switch (petSpecies) {\r\n                                                case 1: species = 11001; break;\r\n                                                case 2: species = 12001; break;\r\n                                                default: species = 13001;\r\n                                                    break;\r\n                                            }\r\n                                        }\r\n\r\n\r\n\r\n\r\n\r\n                                        // console.log(petName, birthday, petSpeciesBreedId, isMix, weight, gender, petSpecies);\r\n                                        // let petSpeciesBreedId = 13001\r\n                                        let data = {\r\n                                            petName,\r\n                                            // breedName,\r\n                                            birthday: moment(birthday).format('YYYY-MM-DD'),\r\n                                            gender,\r\n                                            owner,\r\n                                            petSpeciesBreedId: species,\r\n                                            doctorId: storage.userId\r\n                                        }\r\n                                        if (weight) {\r\n                                            if (unit === 1) {\r\n                                                weight = (0.45359 * weight).toFixed(2)\r\n                                            }\r\n                                            data.weight = parseFloat(weight)\r\n                                        }\r\n                                        if (imageId !== -1 && imageId) {\r\n                                            data.imageId = imageId\r\n                                        }\r\n                                        if (storage.lastWorkplaceId) {\r\n                                            data.workplaceId = storage.lastWorkplaceId\r\n                                        }\r\n                                        if (storage.lastOrganization) {\r\n                                            data.organizationId = storage.lastOrganization\r\n                                        }\r\n                                        console.log(data);\r\n                                        fetchRequest(`/pet/addDeskPet/${patientId}`, 'POST', data)\r\n                                            .then(res => {\r\n                                                this.setState({\r\n                                                    spin: false\r\n                                                })\r\n                                                console.log(res);\r\n                                                if (res.flag === true) {\r\n                                                    message.success('Added successfully')\r\n                                                    this.props.history.goBack()\r\n                                                }\r\n                                                else {\r\n                                                    message.error('add failed')\r\n                                                }\r\n                                            })\r\n                                            .catch(err => {\r\n                                                this.setState({\r\n                                                    spin: false\r\n                                                })\r\n                                                message.error('add failed')\r\n                                                console.log(err);\r\n                                            })\r\n\r\n                                    }\r\n\r\n                                })\r\n\r\n                                .catch(err => {\r\n                                    this.setState({\r\n                                        spin: false\r\n                                    })\r\n                                    console.log(err);\r\n\r\n                                })\r\n\r\n                        }}\r\n\r\n                    >Save</div>\r\n\r\n                </div>\r\n                <MyModal\r\n                    visible={this.state.spin}\r\n                />\r\n\r\n                <MyModal\r\n                    // visible={true}\r\n                    visible={this.state.selectBreed}\r\n                    element={\r\n                        <div className='myfindOrg' >\r\n                            <div className=\"orgHeard\">\r\n                                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                    <div\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                selectBreed: false,\r\n                                                selectBreedJson: {}\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text\" >Choose Breed</div>\r\n\r\n                                <div className=\"searchBox\">\r\n\r\n                                    <Input\r\n                                        placeholder=\" &#xe61b; Search name\"\r\n                                        bordered={false}\r\n                                        allowClear={true}\r\n                                        value={this.state.searchBreed}\r\n                                        onChange={(item) => {\r\n\r\n                                            this.setState({\r\n                                                searchBreed: item.target.value\r\n                                            })\r\n                                        }}\r\n\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"list\" >\r\n                                <PhoneBook\r\n                                    listDate={this.state.breedArr}\r\n                                    confirmSelectBreed={petSpeciesBreedId}\r\n                                    selectFun={(val) => {\r\n                                        // console.log('从子组件传来的数据', val);\r\n                                        this.setState({\r\n                                            selectBreedJson: val,\r\n                                            petSpeciesBreedId: val.petSpeciesBreedId\r\n                                        })\r\n\r\n\r\n                                    }}\r\n                                    searchText={this.state.searchBreed}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"foot\">\r\n                                <Button\r\n                                    text={'Select'}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            confirmSelectBreedJson: this.state.selectBreedJson,\r\n                                            selectBreed: false\r\n                                        })\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    }\r\n                />\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx",["430","431","432","433"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  message\r\n\r\n} from 'antd';\r\n\r\nimport './scanCodeLogin.less'\r\nimport mellaLogo from '../../../assets/images/mellaLogo.png'\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport { fetchRequest2 } from '../../../utils/FetchUtil2';\r\nimport { px } from './../../../utils/px'\r\n\r\nlet storage = window.localStorage;\r\nlet flog = false\r\nexport default class ScanCodeLogin extends Component {\r\n\r\n  state = {\r\n    name: '',\r\n    url: ''\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    this.timer = setInterval(() => {\r\n      this._getUser()\r\n    }, 1000);\r\n    console.log(this.props.history);\r\n    let { name, url } = this.props.history.location.params\r\n    this.setState({\r\n      name,\r\n      url\r\n    })\r\n  }\r\n  componentWillUnmount() {\r\n    this.timer && clearInterval(this.timer)\r\n  }\r\n  _getUser = () => {\r\n    fetchRequest2(`/user/loginWithQRcode/${temporaryStorage.QRToken}`)\r\n      .then(res => {\r\n        console.log('-----：', res);\r\n        if (res.flag === true) {\r\n          switch (res.code) {\r\n            case 10001:\r\n              console.log('未扫码');\r\n              flog = false\r\n              this.props.history.goBack()\r\n\r\n              break;\r\n\r\n            case 11033:\r\n              console.log('扫码未点击登录');\r\n              flog = false\r\n              // let { name, url } = res.data\r\n              // if (name === this.state.name && url === this.state.url) {\r\n              //   return\r\n              // }\r\n              // this.setState({\r\n              //   name,\r\n              //   url\r\n              // })\r\n              break;\r\n\r\n            case 11023:\r\n              console.log('过期');\r\n              this.timer && clearInterval(this.timer)\r\n              if (!flog) {\r\n                this.props.history.replace('/page11')\r\n              }\r\n\r\n\r\n              break;\r\n            case 20000:\r\n              this.timer && clearInterval(this.timer)\r\n              console.log('--------------成功');\r\n              flog = true\r\n              let success = res.data\r\n              let { userWorkplace, lastOrganization } = success\r\n\r\n              storage.userId = success.userId\r\n              storage.roleId = success.roleId\r\n\r\n              //每次登陆后清空宠物列表缓存的数据\r\n              storage.doctorList = ''\r\n              storage.defaultCurrent = ''\r\n\r\n              if (success.lastWorkplaceId) {\r\n                storage.lastWorkplaceId = success.lastWorkplaceId\r\n              } else {\r\n                storage.lastWorkplaceId = ''\r\n              }\r\n\r\n              if (success.lastOrganization) {\r\n                storage.lastOrganization = success.lastOrganization\r\n              } else {\r\n                storage.lastOrganization = ''\r\n              }\r\n\r\n\r\n\r\n              if (userWorkplace) {\r\n                storage.userWorkplace = JSON.stringify(userWorkplace)\r\n                let connectionKey = ''\r\n                for (let i = 0; i < userWorkplace.length; i++) {\r\n                  const element = userWorkplace[i];\r\n                  if (element.organizationEntity) {\r\n                    if (element.organizationEntity.organizationId === lastOrganization) {\r\n\r\n                      if (element.organizationEntity.connectionKey) {\r\n                        connectionKey = element.organizationEntity.connectionKey\r\n                      }\r\n                      if (element.roleId) {\r\n                        console.log(element.roleId);\r\n                        storage.roleId = element.roleId\r\n                      }\r\n\r\n                      break\r\n                    }\r\n                  }\r\n                }\r\n                storage.connectionKey = connectionKey\r\n\r\n              } else {\r\n                storage.userWorkplace = ''\r\n                storage.connectionKey = ''\r\n              }\r\n              this.props.history.push('/uesr/selectExam')\r\n\r\n\r\n\r\n\r\n\r\n\r\n              // storage.userId = res.data.userId\r\n              // storage.roleId = res.data.roleId\r\n              // if (res.data.lastWorkplaceId) {\r\n              //   storage.lastWorkplaceId = res.data.lastWorkplaceId\r\n              // } else {\r\n              //   storage.lastWorkplaceId = ''\r\n              // }\r\n              // if (res.data.lastOrganization) {\r\n              //   storage.lastOrganization = res.data.lastOrganization\r\n              // } else {\r\n              //   storage.lastOrganization = ''\r\n              // }\r\n              // this.props.history.push('/uesr/selectExam')\r\n\r\n\r\n              break;\r\n\r\n            default:\r\n\r\n              break;\r\n          }\r\n        }\r\n        console.log('code', res.code);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  _continue = () => {\r\n    this.props.history.replace('/page11')\r\n\r\n  }\r\n\r\n  render() {\r\n    let { url } = this.state\r\n    return (\r\n      <div id=\"scanCodeLogin\" className='pt-3'>\r\n\r\n\r\n        <div className=\"text  mb-3\"\r\n          style={{ fontSize: px(26), width: px(350), marginTop: px(20), marginBottom: px(40) }}\r\n        >\r\n          <h1>Need to confirm login on mobile phone</h1>\r\n        </div>\r\n\r\n        <div className=\"bodycenter\">\r\n          <div className=\"imgF \">\r\n            <img src={url} alt=\"\" style={{ width: px(150), hight: px(150) }} />\r\n          </div>\r\n          <p>{this.state.name}</p>\r\n          <div className=\"success\" style={{ marginTop: px(30) }}>Scan code completed</div>\r\n        </div>\r\n        <div className=\"button1\" style={{ height: px(150) }}>\r\n          <Button\r\n            style={{ width: px(300), fontSize: px(18), height: px(300 / 6.5) }}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            Cancel login\r\n          </Button>\r\n\r\n        </div>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx",["434","435","436"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  message\r\n\r\n} from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './resetPassword.less'\r\nimport mellaLogo from '../../../assets/images/mellaLogo.png'\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport { px, mTop, pX, MTop } from '../../../utils/px';\r\nimport MouseDiv from '../../../utils/mouseDiv/MouseDiv'\r\nimport MinClose from '../../../utils/minClose/MinClose'\r\nimport back_white from '../../../assets/img/back-white.png'\r\nimport back_hui from '../../../assets/img/back-hui.png'\r\n\r\nlet storage = window.localStorage;\r\nexport default class ResetPassword extends Component {\r\n\r\n  state = {\r\n    hash: '',\r\n    hash1: '',\r\n    spin: false\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _continue = () => {\r\n    console.log('点击了发送按钮')\r\n    message.destroy()\r\n    let { hash, hash1 } = this.state\r\n    console.log(hash, hash1, hash !== hash1);\r\n    if (!hash && !hash1) {\r\n\r\n      message.error('Please enter a new password', 10)\r\n      return\r\n    }\r\n    if (hash !== hash1) {\r\n      message.error('The two passwords are inconsistent, please re-enter', 10)\r\n      return\r\n    }\r\n    this.setState({\r\n      spin: true\r\n    })\r\n\r\n    fetchRequest(`/user/resetPWD/${temporaryStorage.forgotUserId}/${hash}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('修改密码返回结果', res);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        if (res.flag === true) {\r\n          let data = {\r\n            email: temporaryStorage.forgotPassword_email,\r\n            hash: this.state.hash\r\n          }\r\n          console.log(data);\r\n          data = JSON.stringify(data)\r\n          storage.signIn = data\r\n          temporaryStorage.forgotPassword_email = ''\r\n          temporaryStorage.forgotUserId = ''\r\n          this.props.history.replace('/page11')\r\n          // this.props.history.push('/page11')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"resetPassword\">\r\n        {/* <div className=\"iconfont icon-left heard return\" onClick={() => { this.props.history.goBack() }} />\r\n        <div className=\"logo\">\r\n          <img src={mellaLogo} alt=\"\" />\r\n        </div>\r\n        <div className=\"text\">Reset Your<br />Password</div> */}\r\n\r\n        <div className=\"heaed\"  >\r\n          <div className=\"l\">\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n            < MinClose />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body\" style={{ height: MTop(280), }}>\r\n          <div className=\"logo\"\r\n            style={{ paddingTop: mTop(10) }}\r\n          >\r\n            <img src={mellaLogo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n          <div className=\"text\"\r\n            style={{ fontSize: px(30), padding: `${px(20)}px 0`, marginBottom: mTop(10), marginTop: mTop(20) }}\r\n          >\r\n            Reset Your<br />Password\r\n          </div>\r\n\r\n          <div className=\"inpF\">\r\n\r\n            <Input.Password className='inp'\r\n              style={{ width: px(310), height: mTop(50), marginLeft: px(6), marginBottom: mTop(18), fontSize: px(18) }}\r\n              visibilityToggle={false}\r\n              value={this.state.hash}\r\n              placeholder='New Password'\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value\r\n                this.setState({\r\n                  hash: str\r\n                })\r\n              }}\r\n            />\r\n            <Input.Password className='inp'\r\n              style={{ width: px(310), height: mTop(50), marginLeft: px(6), marginBottom: mTop(18), fontSize: px(18) }}\r\n              visibilityToggle={false}\r\n              value={this.state.hash1}\r\n              placeholder='Re-Enter New Password'\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value\r\n                this.setState({\r\n                  hash1: str\r\n                })\r\n              }}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"button1\" >\r\n          <Button\r\n            style={{ width: px(300), fontSize: px(18), height: px(300 / 6.5) }}\r\n\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            Continue\r\n          </Button>\r\n        </div>\r\n        {\r\n          this.state.spin &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              loading...\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n\r\n\r\n\r\n        {/* \r\n        <div className=\"heaed\"  >\r\n          <div className=\"l\"\r\n          >\r\n\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"inpF\">\r\n          <Input.Password className='inp'\r\n            visibilityToggle={false}\r\n            style={{ border: 'none', outline: 'medium' }}\r\n            value={this.state.hash}\r\n            placeholder='New Password'\r\n            bordered={false}\r\n            onChange={(item) => {\r\n              let str = item.target.value\r\n              this.setState({\r\n                hash: str\r\n              })\r\n            }}\r\n          />\r\n          <Input.Password className='inp'\r\n            visibilityToggle={false}\r\n            style={{ border: 'none', outline: 'medium' }}\r\n            value={this.state.hash1}\r\n            placeholder='Re-Enter New Password'\r\n            bordered={false}\r\n            onChange={(item) => {\r\n              let str = item.target.value\r\n              this.setState({\r\n                hash1: str\r\n              })\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"button1\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            Continue\r\n          </Button>\r\n\r\n        </div> */}\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx",["437","438","439","440","441","442","443","444"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx",["445"],"import React, { Component } from 'react'\r\nimport {\r\n  Input\r\n} from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport Button from '../../../utils/button/Button'\r\n\r\n\r\n\r\nimport './findMyOrganization.less'\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nexport default class JoinworkplaceByName extends Component {\r\n\r\n  state = {\r\n    search: '',\r\n    listData: [],\r\n    searchData: [],\r\n    selectId: {}\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    fetchRequest(`/organization/listAll`, \"GET\", '')\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.msg === 'success') {\r\n          this.setState({\r\n            listData: res.data\r\n          })\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n    this.setState({\r\n      selectId: temporaryStorage.logupSelectOrganization\r\n    })\r\n  }\r\n  _search = (val) => {\r\n    let search = val.target.value\r\n    let { listData } = this.state\r\n    let searchData = []\r\n    for (let i = 0; i < listData.length; i++) {\r\n      if (listData[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        searchData.push(listData[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      search,\r\n      searchData\r\n    })\r\n\r\n  }\r\n  _list = () => {\r\n    const { search, listData, searchData } = this.state\r\n    let data = (search.length > 0) ? searchData : listData\r\n    let option = data.map((item, index) => {\r\n      return <li key={item.organizationId}\r\n        onClick={() => {\r\n          this.setState({\r\n            selectId: item\r\n          })\r\n          console.log(item);\r\n          temporaryStorage.logupSelectOrganization = item\r\n          this.props.history.push('/uesr/logUp/FindMyWorkplace')\r\n\r\n        }}\r\n\r\n      >\r\n        {(this.state.selectId.organizationId === item.organizationId ? <span className=\"search\">&#xe614;</span> : null)}\r\n        {item.name}</li>\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"findMyOrganization\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push('/uesr/logUp/JoinOrganizationByOption')}\r\n        />\r\n        <div className=\"body\">\r\n          <div className=\"text\">Find my organization</div>\r\n\r\n          <div className=\"searchBox\">\r\n            <div><MyIcon type='icon-sousuo' className=\"icon\" /></div>\r\n\r\n            <Input\r\n              placeholder=\"Please input organization name\"\r\n              bordered={false}\r\n              allowClear={true}\r\n              value={this.state.search}\r\n              onChange={this._search}\r\n            />\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"list\">\r\n            {this._list()}\r\n          </div>\r\n\r\n          <Button\r\n            text={'My Organization Isn`t Listed'}\r\n            textBoxStyle={{ marginTop: '50px' }}\r\n            onClick={() => {\r\n              this.props.history.push('/uesr/logUp/NewOrganization')\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx",["446","447"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { message, Button } from 'antd'\r\n\r\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\r\n// import Button from '../../../utils/button/Button'\r\nimport temporaryStorage from './../../../utils/temporaryStorage'\r\nimport './index.less'\r\nimport { fetchRequest2 } from '../../../utils/FetchUtil2'\r\nimport { mTop, px } from '../../../utils/px'\r\nimport MyModal from '../../../utils/myModal/MyModal'\r\nimport { fetchRequest3 } from '../../../utils/FetchUtil3'\r\n\r\nconst VerifyEmail = () => {\r\n  let history = useHistory()\r\n  const [code, setCode] = useState('')\r\n  const [resend, setResend] = useState(60)\r\n  const [visible, setVisible] = useState(false)\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      if (resend > 0) {\r\n        setResend(resend - 1)\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(timer)\r\n    }\r\n  })\r\n\r\n  const _resend = (e) => {\r\n\r\n    if (resend <= 0) {\r\n\r\n      //下面写逻辑代码\r\n      let { domain, email, hash, phone, birthday, firstName, lastName } = temporaryStorage.logupVetInfo\r\n      let params = {\r\n        firstName,\r\n        lastName,\r\n        domain, email, hash, phone,\r\n      }\r\n      if (birthday) {\r\n        params.birthday = birthday\r\n      }\r\n      console.log('重新获取验证码入参', params);\r\n      fetchRequest2(`/user/resendDeskRegistEmail/${temporaryStorage.logupEmailCode}`, 'POST', params)\r\n        .then(res => {\r\n          console.log('重新获取验证码', res);\r\n          if (res.msg === 'success') {\r\n            message.success('The email has been resent, please check', 3)\r\n            temporaryStorage.logupEmailCode = res.data\r\n            setResend(60)\r\n          } else {\r\n            message.error('Failed to send mail', 3)\r\n\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log('重新获取验证码失败');\r\n        })\r\n\r\n    }\r\n\r\n    //阻止a链接跳转\r\n    if (e && e.preventDefault)\r\n      e.preventDefault();\r\n    else\r\n      window.event.returnValue = false;\r\n  }\r\n  const _next = () => {\r\n    // console.log(code, '-----', temporaryStorage.logupEmailCode, '----', temporaryStorage.logupVetInfo);\r\n    message.destroy()\r\n    if (code !== temporaryStorage.logupEmailCode) {\r\n      message.error('Verification code input is incorrect', 3)\r\n      return\r\n    }\r\n    else {\r\n      setVisible(true)\r\n      fetchRequest3(`/user/activateUserByEmailCode/${code}`, \"GET\", '')\r\n        .then(res => {\r\n          setVisible(false)\r\n          console.log('验证码验证返回信息：', res);\r\n          if (res.flag === true) {\r\n            console.log('验证成功');\r\n            temporaryStorage.logupSuccessData = res.data\r\n            temporaryStorage.logupEmailCode = ''\r\n            history.push('/uesr/logUp/JoinOrganizationByOption')\r\n          } else {\r\n            message.error('Verification code verification failed', 3)\r\n          }\r\n\r\n        })\r\n        .catch(err => {\r\n          setVisible(false)\r\n          console.log('验证码验证错误：', err);\r\n        })\r\n    }\r\n    // history.push('/uesr/logUp/FindWorkplace')\r\n  }\r\n\r\n\r\n  return (\r\n    <div id=\"verifyEmail\">\r\n      <div className=\"heard\">\r\n        <MaxMin\r\n          onClick={() => { history.push('/') }}\r\n          onClick1={() => history.goBack()}\r\n        />\r\n      </div>\r\n      <div className=\"body\">\r\n        <h1 className=\"title\" style={{ fontSize: px(30), marginBottom: px(22) }}>Confirm your email</h1>\r\n        <div className=\"text\" >{`We have sent a code to ${temporaryStorage.logupVetInfo.email}.`}</div>\r\n        <div className=\"text\">Please enter it below to confirm your address.</div>\r\n        <div className=\"inpF\">\r\n          <input\r\n            className=\"inp\"\r\n            type=\"text\"\r\n            value={code}\r\n            placeholder=\"Code\"\r\n            onChange={(val) => { setCode(val.target.value) }}\r\n            maxLength={6}\r\n            onKeyUp={(e) => { if (e.keyCode === 13) { _next() } }}\r\n          />\r\n        </div>\r\n\r\n        {/* <div className=\"resend\">\r\n          <a href=\"#\" onClick={_resend}>Resend</a>\r\n          {resend > 0 && `(${resend})`}\r\n        </div> */}\r\n      </div>\r\n      <div className=\"footer\" style={{ padding: `${px(40)}px 0` }}>\r\n        <div className=\"btnF\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            htmlType=\"submit\"\r\n            onClick={_next}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <MyModal\r\n        visible={visible}\r\n      />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerifyEmail\r\n\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx",["448","449","450","451","452","453","454","455","456","457","458","459"],"import React, { Component, } from 'react'\r\nimport {\r\n    Tag,\r\n    Input,\r\n    Tooltip,\r\n    message,\r\n    // Button\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport { createFromIconfontCN, CaretDownFilled, PlusOutlined } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport './inviteTeam.less'\r\nimport imgArray from './../../../utils/areaCode/imgArray'\r\nimport MaxMin from './../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest } from './../../../utils/FetchUtil1'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport { fetchRequest2 } from '../../../utils/FetchUtil2';\r\nimport { mTop, px } from '../../../utils/px';\r\nimport Button from './../../../utils/button/Button'\r\nimport MyModal from '../../../utils/myModal/MyModal';\r\n\r\nexport default class InviteTeam extends Component {\r\n\r\n    state = {\r\n\r\n        tags: [],\r\n        inputVisible: false,\r\n        inputValue: '',\r\n        editInputIndex: -1,\r\n        editInputValue: '',\r\n        visible: false\r\n    }\r\n\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big')\r\n\r\n        //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n        ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n    }\r\n    componentWillUnmount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n    }\r\n    changeFenBianLv = (e) => {\r\n        console.log(e);\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big')\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n\r\n\r\n    handleClose = removedTag => {\r\n        const tags = this.state.tags.filter(tag => tag !== removedTag);\r\n        console.log(tags);\r\n        this.setState({ tags });\r\n    };\r\n\r\n    showInput = () => {\r\n        this.setState({ inputVisible: true }, () => this.input.focus());\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({ inputValue: e.target.value });\r\n    };\r\n\r\n    handleInputConfirm = () => {\r\n        const { inputValue } = this.state;\r\n        let { tags } = this.state;\r\n        if (inputValue && tags.indexOf(inputValue) === -1) {\r\n            console.log('输入的内容为：', inputValue);\r\n            message.destroy()\r\n            fetchRequest(`/user/checkUser/${inputValue}`, 'GET', '')\r\n                .then(res => {\r\n\r\n\r\n                    console.log('检测邮箱存不存在', res);\r\n\r\n                    if (res.code) {\r\n                        switch (res.code) {\r\n\r\n                            case 11011:\r\n                                console.log('邮箱存在，发送邮件');\r\n                                tags = [...tags, inputValue];\r\n                                console.log(tags);\r\n\r\n                                this.setState({\r\n                                    tags,\r\n                                    inputVisible: false,\r\n                                    inputValue: '',\r\n                                });\r\n                                break;\r\n                            case 11012:\r\n                                console.log('账号被限制、注册未激活状态');\r\n\r\n\r\n\r\n                            case 11013:\r\n                                console.log('邮箱未被注册，跳出弹框询问是否前往注册');\r\n                            case 11014:\r\n                                console.log('邮箱被注销或者封停，跳出弹框询问是否前往注册');\r\n                                message.error('This mailbox was not found!', 3)\r\n                                this.setState({\r\n                                    inputVisible: false,\r\n                                    inputValue: '',\r\n                                });\r\n                                break;\r\n\r\n                        }\r\n                    } else {\r\n                        console.log('系统错误', res);\r\n                        message.error('system error')\r\n                        this.setState({\r\n                            spin: false\r\n                        })\r\n                    }\r\n\r\n\r\n                })\r\n                .catch(err => {\r\n                    message.error(`Error:${err.message}`)\r\n                    console.log('检测邮箱号的接口出错了', err);\r\n                })\r\n\r\n\r\n        }\r\n\r\n    };\r\n\r\n\r\n    saveInputRef = input => {\r\n        this.input = input;\r\n    };\r\n\r\n    saveEditInputRef = input => {\r\n        this.editInput = input;\r\n    };\r\n\r\n    _next = () => {\r\n        message.destroy()\r\n        let { tags } = this.state\r\n        let { userId } = temporaryStorage.logupSuccessData\r\n        let { organizationId } = temporaryStorage.logupOrganization\r\n        console.log({ tags, userId, organizationId });\r\n        if (tags.length === 0) {\r\n            this._logIn()\r\n        }\r\n        this.setState({\r\n            visible: true\r\n        })\r\n        console.log('入参:', tags);\r\n        fetchRequest2(`/user/inviteUserByEmail/${userId}/${organizationId}`, \"POST\", tags)\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.flag === true) {\r\n                    console.log('成功，跳转');\r\n                    message.success('Invitation successful', 3)\r\n                    this._logIn()\r\n                } else {\r\n                    this.setState({\r\n                        visible: false\r\n                    })\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    visible: false\r\n                })\r\n                console.log(err);\r\n                message.error(err.message, 3)\r\n            })\r\n    }\r\n    _logIn = () => {\r\n\r\n        let storage = window.localStorage;\r\n        let { email, hash } = temporaryStorage.logupVetInfo\r\n        let params = {\r\n            email: email.replace(/(^\\s*)/g, \"\"),\r\n            hash,\r\n            identityTypeId: '1'\r\n        }\r\n        console.log('登录入参:', params);\r\n        fetchRequest('/user/mellaLogin', 'POST', params)\r\n            .then(res => {\r\n                console.log(res);\r\n                this.setState({\r\n                    visible: false\r\n                })\r\n                if (res.status && res.status === 404) {\r\n                    message.error('system error');\r\n                    return\r\n                }\r\n                if (res.code === 10001 && res.msg === '账号错误') {\r\n                    message.error('Account error');\r\n                    return\r\n                }\r\n                if (res.code === 10002 && res.msg === '密码错误') {\r\n                    message.error('wrong password')\r\n                    return;\r\n                }\r\n                if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\r\n                    message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\r\n                    return\r\n                }\r\n\r\n                if (res.code === 0 && res.msg === 'success') {\r\n                    console.log('账号密码正确，登录进去了');\r\n                    let { userWorkplace, lastOrganization, token } = res.success\r\n                    storage.token = token\r\n                    storage.userId = ''\r\n\r\n                    storage.userId = res.success.userId\r\n                    storage.roleId = res.success.roleId\r\n\r\n                    //每次登陆后清空宠物列表缓存的数据\r\n                    storage.doctorList = ''\r\n                    storage.defaultCurrent = ''\r\n\r\n\r\n\r\n\r\n                    if (userWorkplace) {\r\n                        storage.userWorkplace = JSON.stringify(userWorkplace)\r\n                        let connectionKey = ''\r\n                        const element = userWorkplace[0];\r\n                        storage.lastOrganization = element.organizationEntity.organizationId\r\n                        storage.lastWorkplaceId = element.workplaceEntity.workplaceId\r\n                        if (element.organizationEntity.connectionKey) {\r\n                            connectionKey = element.organizationEntity.connectionKey\r\n                        }\r\n                        if (element.roleId) {\r\n                            console.log(element.roleId);\r\n                            storage.roleId = element.roleId\r\n                        }\r\n                        if (userWorkplace.length === 1) {\r\n                            this.props.history.push('/uesr/selectExam')\r\n\r\n                        } else {\r\n                            this.props.history.push('/page12')\r\n                        }\r\n                    } else {\r\n                        storage.userWorkplace = ''\r\n                        storage.connectionKey = ''\r\n                        this.props.history.push('/uesr/selectExam')\r\n                    }\r\n\r\n\r\n                }\r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                    visible: false\r\n                })\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render () {\r\n        const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\r\n        // console.log('---', editInputIndex);\r\n        return (\r\n            <div id=\"inviteTeam\" >\r\n                {/* 关闭缩小 */}\r\n                <div className=\"heard\">\r\n                    <MaxMin\r\n                        onClick={() => { this.props.history.push('/') }}\r\n                        onClick1={() => this.props.history.goBack()}\r\n                    />\r\n                    <div className=\"text\">Invite your Team</div>\r\n\r\n                    <div className=\"addF\">\r\n                        <p>To:</p>\r\n                        <div className=\"add\">\r\n\r\n                            <>\r\n                                {tags.map((tag, index) => {\r\n                                    const isLongTag = tag.length > 25;  //标签里面的字符串的长度\r\n\r\n                                    const tagElem = (\r\n                                        <Tag\r\n                                            className=\"edit-tag\"\r\n                                            key={tag}\r\n                                            closable={true}\r\n                                            onClose={() => this.handleClose(tag)}\r\n                                        >\r\n                                            <span>\r\n                                                {isLongTag ? `${tag.slice(0, 25)}...` : tag}\r\n                                            </span>\r\n                                        </Tag>\r\n                                    );\r\n                                    return isLongTag ? (\r\n                                        <Tooltip title={tag} key={tag}>\r\n                                            {tagElem}\r\n                                        </Tooltip>\r\n                                    ) : (\r\n                                        tagElem\r\n                                    );\r\n                                })}\r\n                                {inputVisible && (\r\n                                    <Input\r\n                                        ref={this.saveInputRef}\r\n                                        type=\"text\"\r\n                                        size=\"small\"\r\n                                        className=\"tag-input\"\r\n                                        value={inputValue}\r\n                                        onChange={this.handleInputChange}\r\n                                        onBlur={this.handleInputConfirm}\r\n                                        onPressEnter={this.handleInputConfirm}\r\n                                    />\r\n                                )}\r\n                                {!inputVisible && (\r\n                                    <Tag className=\"site-tag-plus\" onClick={this.showInput}>\r\n                                        <PlusOutlined />Press Enter to add mailbox\r\n                                    </Tag>\r\n                                )}\r\n                            </>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"btn\"\r\n                    style={{ padding: `${px(40)}px 0` }}\r\n                >\r\n                    <Button\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        size='large'\r\n                        htmlType=\"submit\"\r\n                        onClick={this._logIn}\r\n                        text={'Skip'}\r\n                    >\r\n                        Skip\r\n                    </Button>\r\n                    <Button\r\n                        type=\"primary\"\r\n                        shape=\"round\"\r\n                        size='large'\r\n                        htmlType=\"submit\"\r\n                        onClick={this._next}\r\n                        text={'Send'}\r\n                    >\r\n\r\n                    </Button>\r\n                </div>\r\n                <MyModal visible={this.state.visible} />\r\n\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481"],"import React, { Component } from 'react'\r\nimport { Input, Button, Menu, message, Select, Calendar, Col, Row, Spin } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../../utils/FetchUtil1'\r\nimport dog from './../../../assets/images/reddog.png'\r\nimport cat from './../../../assets/images/redcat.png'\r\nimport other from '../../../assets/images/redother.png'\r\nimport horse from './../../../assets/images/horse.png'\r\nimport rabbit from './../../../assets/images/rabbit.png'\r\n// import selectphoto from './../../../assets/images/img.png'\r\nimport selectphoto from './../../../assets/images/sel.png'\r\nimport dui from './../../../assets/images/dui.png'\r\nimport female from './../../../assets/images/female.png'\r\nimport male from './../../../assets/images/male.png'\r\nimport './editParent.less'\r\nimport { mTop, px } from '../../../utils/px';\r\nimport Avatar from './../../avatar/Avatar'\r\nimport MyModal from '../../../utils/myModal/MyModal';\r\nimport Heard from '../../../utils/heard/Heard';\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class EditParent extends Component {\r\n  state = {\r\n\r\n    lastName: '',       //宠物主人性\r\n    firstName: '',      //宠物主人名\r\n    email: '',          //邮箱号\r\n    phone: '',          //电话号码\r\n    spin: false,        //加载中\r\n    imageId: null,      //图片的ID值\r\n    petList: [],         //当前这个宠物主人下的所有宠物\r\n    userId: '',          //当前这个宠物主人的userId\r\n\r\n    userImageUrl: '',\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    console.log(this.props.history.location.parent);\r\n\r\n    if (this.props.history.location.parent) { //接受入参\r\n      let { parent, pets } = this.props.history.location.parent\r\n      let { firstName, lastName, userId } = parent\r\n      this._getParent(userId)\r\n\r\n      this.setState({\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        petList: pets\r\n\r\n\r\n      })\r\n\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _getParent = (data) => {\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    fetchRequest(`/user/getUserInfoByUserId/${data}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('获取到了用户信息', res);\r\n        if (res.msg === 'success') {\r\n          let { firstName, phone, lastName, email, imageId, url, userImage } = res.data\r\n          let userImageUrl = res.data.userImage ? res.data.userImage.url : null\r\n          firstName = firstName ? firstName : ''\r\n          phone = phone ? phone : ''\r\n          email = email ? email : ''\r\n          lastName = lastName ? lastName : ''\r\n\r\n\r\n          this.setState({\r\n            userImageUrl,\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            email,\r\n            imageId,\r\n            spin: false\r\n\r\n          })\r\n        } else {\r\n          this.setState({\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n\r\n  _petSpecies = () => {\r\n    let { userImageUrl } = this.state\r\n    this.avatar = userImageUrl ? userImageUrl : selectphoto\r\n    let { firstName, lastName } = this.state\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>First Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  firstName: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Last Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  lastName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _petName = () => {\r\n    let { email, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  petList = () => {\r\n\r\n    let { petList } = this.state\r\n    console.log(petList);\r\n    let options = petList.map((item, index) => {\r\n      let { speciesId, url, breedName, petBirthday, gender, name, } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n\r\n      let petAge = moment(new Date()).diff(moment(petBirthday), 'years')\r\n\r\n      if (!url) {\r\n\r\n        switch (speciesId) {\r\n          case 1: images = `url(${cat})`\r\n\r\n            break;\r\n          case 2: images = `url(${dog})`\r\n            break\r\n          default: images = `url(${other})`\r\n            break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `  0 0 ${px(15)}px 0`, }}\r\n          onClick={() => {\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div className=\"itemL\">\r\n              <div\r\n                className='img'\r\n                style={{\r\n                  width: px(50),\r\n                  height: px(50),\r\n                  marginRight: px(20),\r\n                  borderRadius: px(60),\r\n                  backgroundImage: images,\r\n                }}>\r\n              </div>\r\n              <a\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  console.log(item);\r\n                }}\r\n              >{name}</a>\r\n            </div>\r\n            <div className=\"itemC\">\r\n              <p>{`${petAge} years old, ${gender === 0 ? 'Male' : 'Female'}`}</p>\r\n            </div>\r\n            <div className=\"itemR\">\r\n              <p>{`${breedName}`}</p>\r\n            </div>\r\n\r\n\r\n            {/* <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div> */}\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n\r\n\r\n    let liStyle = { backgroundColor: '#fff', marginTop: px(15) }\r\n    if (petList.length > 3) {\r\n      liStyle = { height: px(305), overflowY: 'auto', marginTop: px(15) }\r\n    }\r\n\r\n    return (\r\n      <ul style={liStyle}>\r\n        {options}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"editParent\">\r\n\r\n        <div className=\"heard\">\r\n          <Heard\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"editPetInfo_top\" >\r\n          <div className=\"parentInfo\">\r\n            <div className=\"title\" >{`Parent Information`}</div>\r\n            <div className=\"info\">\r\n              {this._petSpecies()}\r\n              {this._petName()}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"pets\">\r\n            <div className=\"petsTitle\">\r\n              <h2 style={{ fontSize: px(24), marginRight: px(40) }}>Pets</h2>\r\n              <div className=\"btn\" style={{ fontSize: px(22) }}>+ Add New Pet</div>\r\n            </div>\r\n            <div className=\"petList\">\r\n              {this.petList()}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"editPetInfo_foot\"  >\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              let { firstName, lastName, email, phone, imageId, userId } = this.state\r\n              console.log({ firstName, lastName, email, phone, imageId });\r\n              let parames = {\r\n                userId,\r\n                email,\r\n                phone,\r\n                firstName,\r\n                lastName,\r\n                imageId\r\n              }\r\n              this.setState({\r\n                spin: true\r\n              })\r\n              message.destroy()\r\n              console.log('修改的宠物信息:', parames);\r\n              fetchRequest('/user/updateUserInfo', 'POST', parames,)\r\n                .then(res => {\r\n                  console.log('保存所有信息', res);\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  if (res.flag === true) {\r\n                    this.props.history.goBack()\r\n                  } else {\r\n                    message.error('fail to edit')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  message.error('fail to edit')\r\n                  console.log(err);\r\n                })\r\n\r\n            }}\r\n\r\n          >Edit Profile</div>\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              this.props.history.goBack()\r\n            }}\r\n\r\n          >OK</div>\r\n\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n      </div >\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx",["482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Switch,\r\n  Select,\r\n  message\r\n} from 'antd'\r\n\r\n\r\n\r\n\r\nimport Heart from '../../../utils/heard/Heard'\r\nimport Slider from '../../../utils/slider/Slider'\r\nimport Button from '../../../utils/button/Button'\r\nimport electronStore from '../../../utils/electronStore'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport { mTop, px } from '../../../utils/px';\r\nimport MyModal from '../../../utils/myModal/MyModal'\r\nimport parent from './../../../assets/img/parent.png'\r\nimport dog from '../../../assets/images/reddog.png'\r\nimport cat from '../../../assets/images/redcat.png'\r\nimport other from '../../../assets/images/redother.png'\r\nimport selectphoto from './../../../assets/images/sel.png'\r\nimport close from './../../../assets/img/close.png'\r\nimport dui from './../../../assets/images/dui.png'\r\n\r\nimport Avatar from './../../avatar/Avatar'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport moment from 'moment'\r\nimport './veterinarians.less'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class Veterinarians extends Component {\r\n\r\n  state = {\r\n    parentList: [],\r\n    petList: [],\r\n    loading: false,\r\n    parentSearchArr: [],\r\n    petSearchArr: [],\r\n    searchText: '',\r\n    clickVet: false,\r\n    userList: [],\r\n    clickUserItem: {},\r\n    isAdmin: false,\r\n    imageId: null,\r\n    imgUrl: '',\r\n    doctorArr: [],\r\n    dockerSearchArr: []\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    this._getExam()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true,\r\n      spin: false\r\n    })\r\n    let params = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    fetchRequest(`/organization/listDoctorsByAdmin/${storage.lastOrganization}`, 'GET', params)\r\n      .then(res => {\r\n        console.log('人员列表', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true && res.code === 20000) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              name: `${lastName} ${firstName}`,\r\n              userId,\r\n              email,\r\n              birthday,\r\n              isLimit,\r\n              isDeleted,\r\n              phone,\r\n              url,\r\n              firstName, lastName, roleId\r\n            }\r\n            data.push(json)\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            doctorArr: data,\r\n            // parentList: data //这里只是测试，后期删除\r\n\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  list = () => {\r\n    let { doctorArr, dockerSearchArr, searchText } = this.state\r\n    let data = searchText.length > 0 ? dockerSearchArr : doctorArr\r\n\r\n\r\n\r\n\r\n    let options = data.map((item, index) => {\r\n      let { url, firstName, lastName } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n      if (!url) {\r\n        images = `url(${parent})`\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20), float: `${index % 2 === 0 ? 'left' : 'right'}` }}\r\n          onClick={() => {\r\n            console.log(item);\r\n            let { name, email, phone, roleId } = item\r\n            let isAdmin = roleId === '3' ? true : false\r\n\r\n            this.setState({\r\n              clickVet: true,\r\n              clickUserItem: item,\r\n              name,\r\n              email,\r\n              phone,\r\n              isAdmin,\r\n              imgUrl: ''\r\n            })\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div\r\n              className='img'\r\n              style={{\r\n                width: px(50),\r\n                height: px(50),\r\n                marginRight: px(20),\r\n                borderRadius: px(60),\r\n                backgroundImage: images,\r\n              }}>\r\n\r\n              <div\r\n                className=\"green\"\r\n                style={{\r\n                  width: px(8),\r\n                  height: px(8),\r\n                  borderRadius: px(8),\r\n                  backgroundColor: '#7ED266',\r\n                  right: px(-5),\r\n                  top: px(-3)\r\n\r\n                }}\r\n\r\n              />\r\n\r\n            </div>\r\n\r\n            <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    let liStyle = { backgroundColor: '#fff', }\r\n    if (this.state.petList.length > 16) {\r\n      liStyle = { height: px(750), overflowY: 'auto', }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='petList'>\r\n        <ul style={liStyle}>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  inputChange = (text) => {\r\n    let search = text.target.value\r\n    this.setState({\r\n      searchText: search\r\n    })\r\n\r\n    let { doctorArr } = this.state\r\n\r\n    let keyWord = search\r\n\r\n    let parentSearchData = []\r\n\r\n    for (let i = 0; i < doctorArr.length; i++) {\r\n      let { email, phone, name, } = doctorArr[i]\r\n      email = email ? email.toLowerCase() : ''\r\n      phone = phone ? phone.toLowerCase() : ''\r\n      name = name ? name.toLowerCase() : ''\r\n      let keyLower = keyWord.toLowerCase()\r\n      if (`${email}`.indexOf(keyLower) !== -1 || `${phone}`.indexOf(keyLower) !== -1 || `${name}`.indexOf(keyLower) !== -1) {\r\n        parentSearchData.push(doctorArr[i])\r\n      }\r\n    }\r\n\r\n\r\n    this.setState({\r\n\r\n      dockerSearchArr: parentSearchData\r\n    })\r\n\r\n\r\n  }\r\n  _petSpecies = () => {\r\n\r\n\r\n    let { clickUserItem, isAdmin } = this.state\r\n    let { url } = clickUserItem\r\n    this.avatar = url ? url : selectphoto\r\n    return (\r\n      <div className=\"petSpecies\">\r\n\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" style={{ height: px(100) }} />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n              getAllInfo={(val) => {\r\n                console.log('图片信息', val);\r\n                this.setState({\r\n                  imgUrl: val.url\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Set Role:</p>\r\n\r\n            <div className=\"ones\" style={{ marginTop: px(8) }}>\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>User</p>\r\n              </div> */}\r\n              <div className=\"one\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isAdmin: !this.state.isAdmin\r\n                  })\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"chect\"\r\n                  style={{ width: px(18), height: px(18), marginRight: px(15) }}\r\n\r\n                >\r\n                  {isAdmin && <img src={dui} alt=\"\" />}\r\n\r\n                </div>\r\n                <p>Admin</p>\r\n              </div>\r\n\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>Owner</p>\r\n              </div> */}\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  _petName = () => {\r\n    let { name, email } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\" style={{ marginTop: px(60) }}>\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50), }}>\r\n            <p>Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  name: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _phone = () => {\r\n    let { areas, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Areas of Expertise</p>\r\n            <input\r\n              type=\"text\"\r\n              value={areas}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  areas: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  changeUserInfo = () => {\r\n    let { name, email, phone, clickUserItem, imageId, isAdmin, petList, imgUrl } = this.state\r\n    let { userId } = clickUserItem\r\n    let roleId = isAdmin ? '3' : '2'\r\n    let params = {\r\n      firstName: '',\r\n      lastName: name,\r\n      email,\r\n      phone,\r\n\r\n      roleId\r\n    }\r\n    if (imageId) {\r\n      params.imageId = imageId\r\n    }\r\n    message.destroy()\r\n    this.setState({\r\n      clickVet: false,\r\n      loading: true\r\n    })\r\n    console.log('入参', params);\r\n    fetchRequest(`/new/admin/users/${userId}`, 'PATCH', params, storage.token)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.flag && res.code === 20000) {\r\n          for (let i = 0; i < petList.length; i++) {\r\n            const element = petList[i];\r\n            if (clickUserItem.userId === element.userId) {\r\n              element.name = name\r\n              element.email = email\r\n              element.phone = phone\r\n              if (imageId) {\r\n                element.url = imgUrl\r\n              }\r\n\r\n              break\r\n            }\r\n\r\n          }\r\n          this.setState({\r\n            loading: false,\r\n            petList\r\n          })\r\n          message.success('User information changed successfully')\r\n        } else {\r\n          this.setState({\r\n            loading: false\r\n          })\r\n          message.error('User information change failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        message.error('User information change failed')\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let bodyHeight = '92%'\r\n    try {\r\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\r\n    } catch (error) {\r\n\r\n    }\r\n    return (\r\n      <div id=\"veterinarians\">\r\n        <div className=\"heard\">\r\n          <Heart\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\r\n          <div className=\"title\">\r\n            <h1 style={{ fontSize: px(38) }}>{`Veterinarians`}</h1>\r\n            <div className=\"btn\" style={{ fontSize: px(24), height: px(45) }}>+ New Vet</div>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <div className=\"searchL\">\r\n              <input\r\n                type=\"text\"\r\n                style={{ paddingLeft: px(25), height: px(34) }}\r\n                placeholder=\"&#xe62c; Search \"\r\n                value={this.state.searchText}\r\n                onChange={(text) => {\r\n                  this.inputChange(text)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\r\n              Search\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"lists\">\r\n            {/* <div className=\"listsL\"> */}\r\n            {this.list()}\r\n            {/* </div> */}\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <MyModal visible={this.state.loading} />\r\n\r\n        <MyModal\r\n          visible={this.state.clickVet}\r\n          element={\r\n            <div className='vetInfo'>\r\n\r\n              <div className=\"info\" >\r\n                <div className=\"close\" style={{ height: px(50) }}>\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    src={close} style={{ width: px(20) }} />\r\n                </div>\r\n                {this._petSpecies()}\r\n                {this._petName()}\r\n                {this._phone()}\r\n              </div>\r\n              <div className=\"fotBtn\">\r\n                <div className=\"text\">\r\n                  <a\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    href=\"#\">Delete </a>\r\n                  &nbsp;<p>{` ${this.state.name} from Workplace`}</p>\r\n                </div>\r\n                <div className=\"btn\"\r\n                  style={{ marginTop: px(10) }}\r\n                  onClick={this.changeUserInfo}\r\n\r\n                >Save </div>\r\n\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx",["498","499","500","501","502","503","504","505","506"],"import React, { Component } from \"react\";\r\nimport { Table, Popconfirm, Modal, Input, message, Select } from \"antd\";\r\nimport moment from \"moment\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport \"./unassigned.less\";\r\nimport Heard from \"./../../../utils/heard/Heard\";\r\nimport { fetchRequest } from \"../../../utils/FetchUtil1\";\r\n\r\nimport del from \"./../../../assets/images/del.png\";\r\nimport Close from \"./../../../assets/img/close.png\";\r\n\r\nimport UploadImg from \"./../../../utils/uploadImg/UploadImg\";\r\nimport { mTop, px, MTop } from \"../../../utils/px\";\r\nimport electronStore from \"./../../../utils/electronStore\";\r\nimport MyModal from \"../../../utils/myModal/MyModal\";\r\nimport Button from \"./../../../utils/button/Button\";\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\n\r\nexport default class Unassigned extends Component {\r\n  state = {\r\n    historyData: [], //列表的数据集合\r\n    units: \"℉\",\r\n    searchText: \"\", //搜索测试记录框输入的内容\r\n    serchExamData: [], //搜索到的测量记录\r\n    seleceEmergencies: {}, //分配的这条记录里的所有内容，比如温度、id、时间等\r\n    visible: false, //nodel框是否显示\r\n    disabled: true, //model是否可拖拽\r\n    imgId: -1, //上传后返回的图像id号\r\n\r\n    assignPatientId: \"\",\r\n    assignPetName: \"\",\r\n    assignOwnerName: \"\",\r\n    assignBreed: \"\",\r\n    assignBreedId: \"\",\r\n    assignPetAge: \"\",\r\n    assignPetWeight: \"\",\r\n    assignPetId: \"\",\r\n    assignPetImgUrl: \"\",\r\n    inputDisabled: false,\r\n\r\n    breedArr: [], //猫、狗品种集合\r\n\r\n    loading: false,\r\n\r\n    disabled: true, //model是否可拖拽\r\n    search: \"\", //分配宠物搜索框\r\n    petListData: [],\r\n    searchPetList: [],\r\n    assignVisible: false, //点击assign按钮后跳出的选择宠物的弹框\r\n    selectPetId: \"\",\r\n  };\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    // if (windowsHeight < 1000) {\r\n    //   ipcRenderer.send('table')\r\n    // } else {\r\n    //   ipcRenderer.send('big')\r\n    // }\r\n    let getBreed = electronStore.get(\"getBreed\");\r\n    console.log(\"------\", getBreed);\r\n    if (getBreed) {\r\n      this.setState({\r\n        breedArr: getBreed,\r\n      });\r\n    }\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n    this._getEmergencyHistory();\r\n    const timer = setTimeout(() => {\r\n      this._getBreed();\r\n      clearTimeout(timer);\r\n    }, 3000);\r\n\r\n    let list = electronStore.get(\"doctorExam\");\r\n    this.setState({\r\n      petListData: list || [],\r\n    });\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy();\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    // if (windowsHeight < 1000) {\r\n    //   ipcRenderer.send('table')\r\n    // } else {\r\n    //   ipcRenderer.send('big')\r\n    // }\r\n    this.setState({});\r\n  };\r\n\r\n  _getEmergencyHistory = () => {\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate (data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = [];\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, \"GET\", \"\") //userID要自动的\r\n      .then((res) => {\r\n        console.log(\"---res\", res);\r\n        if (res.flag === true) {\r\n          let datas = res.data;\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let {\r\n                petId,\r\n                examId,\r\n                userId,\r\n                petVitalTypeId,\r\n                temperature,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                memo,\r\n                clinicalDatagroupId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                createTime,\r\n                clinicalDataEntity,\r\n              } = datas[i];\r\n              let day = moment().diff(moment(createTime), \"day\");\r\n              // console.log(day);\r\n              if (day > 3) {\r\n                continue;\r\n              }\r\n\r\n              let Tem = temperature;\r\n              try {\r\n                if (clinicalDataEntity) {\r\n                  Tem = temperature || clinicalDataEntity.data0;\r\n                }\r\n              } catch (error) {\r\n                console.log(\"抛出的异常\", error);\r\n              }\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format(\"MMM DD\"),\r\n                time: moment(createTime).format(\"hh:mm A\"),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                petId,\r\n                userId,\r\n                day,\r\n              };\r\n\r\n              historys.push(str);\r\n            }\r\n          }\r\n\r\n          //把所有数据拿完后做个排序\r\n\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log(\"historyData:\", historyData);\r\n          this.setState({\r\n            historyData,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  _getBreed = () => {\r\n    fetchRequest(`/pet/selectBreedBySpeciesId`, \"POST\", { speciesId: 1 })\r\n      .then((res) => {\r\n        if (res.code === 0) {\r\n          let arr = [];\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n              speciesId: 1,\r\n            };\r\n\r\n            arr.push(data);\r\n          });\r\n\r\n          fetchRequest(`/pet/selectBreedBySpeciesId`, \"POST\", { speciesId: 2 })\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                res.petlist.map((item, index) => {\r\n                  let data = {\r\n                    petSpeciesBreedId: item.petSpeciesBreedId,\r\n                    breedName: item.breedName,\r\n                    speciesId: 2,\r\n                  };\r\n                  arr.push(data);\r\n                });\r\n\r\n                console.log(\"----品种集合：\", arr);\r\n                electronStore.set(\"getBreed\", arr);\r\n                this.setState({\r\n                  breedArr: arr,\r\n                });\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  _search = (value = \"\") => {\r\n    console.log(\"我要去搜索了\");\r\n    let list = this.state.historyData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let note = list[i].note ? list[i].note.toLowerCase() : \"\";\r\n      if (`${note}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      serchExamData: searchData,\r\n    });\r\n  };\r\n  _searchPet = (value = \"\") => {\r\n    console.log(\"我要去搜索了\", this.state.petListData);\r\n    let list = this.state.petListData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let name = list[i].petName ? list[i].petName.toLowerCase() : \"\";\r\n      let rfid = list[i].rfid ? list[i].rfid.toLowerCase() : \"\";\r\n      let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : \"\";\r\n\r\n      if (\r\n        `${name}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${rfid}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n      ) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchPetList: searchData,\r\n    });\r\n  };\r\n\r\n  draggleRef = React.createRef();\r\n\r\n  handleOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log(\"取消\");\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n    });\r\n  };\r\n\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n      },\r\n    });\r\n  };\r\n  _select = (value, data) => {\r\n    console.log(value, data); //value的值为id\r\n    this.setState({\r\n      assignBreedId: value,\r\n      assignBreed: data.children,\r\n    });\r\n  };\r\n\r\n  _modal = () => {\r\n    let that = this;\r\n\r\n    function getPetInfoByPatientId () {\r\n      switch (storage.identity) {\r\n        case \"1\":\r\n          console.log(\"我是vetspire查找\");\r\n\r\n          break;\r\n\r\n        case \"2\":\r\n          console.log(\"我是ezyVet查找\");\r\n          let params = {\r\n            animalId: that.state.assignPatientId,\r\n            organizationId: 4,\r\n          };\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach((key) =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url =\r\n            \"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId\";\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          console.log(\"ezyVet集成查找宠物入参-请求地址\", params, url);\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              authorization: `Bearer ${storage.ezyVetToken}`,\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n              console.log(\"res\", res);\r\n              this.setState({\r\n                spin: false,\r\n              });\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data;\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  });\r\n                }\r\n                console.log(petArr);\r\n\r\n                let { petId } = petArr;\r\n                // assign(petId)\r\n              } else {\r\n                //没有宠物\r\n                message.error(\"There are no pets under this patientID\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error(\"There are no pets under this patientID\");\r\n            });\r\n\r\n          break;\r\n\r\n        case \"3\":\r\n          console.log(\"我是一般医生查找\");\r\n          let datas = {\r\n            patientId: that.state.assignPatientId,\r\n            doctorId: storage.userId,\r\n          };\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId;\r\n          }\r\n          console.log(\"入参：\", datas);\r\n          fetchRequest(\"/pet/getPetInfoByPatientIdAndPetId\", \"POST\", datas)\r\n            .then((res) => {\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data;\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  });\r\n                }\r\n\r\n                console.log(\"获取到宠物信息\", petArr);\r\n\r\n                let {\r\n                  petId,\r\n                  petName,\r\n                  firstName,\r\n                  lastName,\r\n                  breedName,\r\n                  age,\r\n                  weight,\r\n                  url,\r\n                  birthday,\r\n                } = petArr[0];\r\n\r\n                let assignPetName = petName ? petName : \"\";\r\n                let assignOwnerName = lastName ? lastName : \"\";\r\n                assignOwnerName = firstName\r\n                  ? `${assignOwnerName} ${firstName}`\r\n                  : assignOwnerName;\r\n                let assignBreed = breedName ? breedName : \"\";\r\n                let assignPetAge = age ? age : \"\";\r\n                let assignPetWeight = weight ? weight : \"\";\r\n                let assignPetImgUrl = url ? url : \"\";\r\n\r\n                if (!assignPetAge) {\r\n                  let now = moment(new Date());\r\n                  let year = now.diff(moment(birthday), \"years\");\r\n                  assignPetAge = year;\r\n                }\r\n\r\n                that.setState({\r\n                  assignPetName,\r\n                  assignBreed,\r\n                  assignPetAge,\r\n                  assignPetWeight,\r\n                  assignPetId: petId,\r\n                  assignPetImgUrl,\r\n                  inputDisabled: true,\r\n                });\r\n\r\n                // assign(petId)\r\n              } else {\r\n                that.setState({\r\n                  inputDisabled: false,\r\n                  assignPetName: \"\",\r\n                  assignOwnerName: \"\",\r\n                  assignBreed: \"\",\r\n                  assignBreedId: \"\",\r\n                  assignPetAge: \"\",\r\n                  assignPetWeight: \"\",\r\n                  assignPetId: \"\",\r\n                  assignPetImgUrl: \"\",\r\n                });\r\n                message.error(\"There are no pets under this patientID\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              that.setState({\r\n                inputDisabled: false,\r\n                assignPetName: \"\",\r\n                assignOwnerName: \"\",\r\n                assignBreed: \"\",\r\n                assignBreedId: \"\",\r\n                assignPetAge: \"\",\r\n                assignPetWeight: \"\",\r\n                assignPetId: \"\",\r\n                assignPetImgUrl: \"\",\r\n              });\r\n              message.error(\"There are no pets under this patientID\");\r\n              console.log(err);\r\n            });\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    const assignPet = () => {\r\n      let parmes = {\r\n        petId: this.state.assignPetId,\r\n        clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId,\r\n      };\r\n      console.log(\"分配的数据信息\", parmes);\r\n      fetchRequest(\r\n        `/pet/addAndSavePetExam/${that.state.seleceEmergencies.historyId}`,\r\n        \"POST\",\r\n        parmes\r\n      )\r\n        .then((res) => {\r\n          console.log(\"----------\", res);\r\n          if (res.flag === true) {\r\n            console.log(\"分配成功\");\r\n            message.success(\"Assigned successfully\");\r\n            that._getEmergencyHistory();\r\n            that.setState({\r\n              visible: false,\r\n              assignPatientId: \"\",\r\n              assignPetName: \"\",\r\n              assignOwnerName: \"\",\r\n              assignBreed: \"\",\r\n              assignBreedId: \"\",\r\n              assignPetAge: \"\",\r\n              assignPetWeight: \"\",\r\n              assignPetId: \"\",\r\n              assignPetImgUrl: \"\",\r\n            });\r\n          } else {\r\n            message.error(\"Assignment failed\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          message.error(\"Assignment failed\");\r\n        });\r\n    };\r\n\r\n    let { disabled, bounds, visible } = this.state;\r\n    let options = this.state.breedArr.map((d) => (\r\n      <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>\r\n    ));\r\n    return (\r\n      <Modal\r\n        wrapClassName={\"web\"} //对话框外部的类名，主要是用来修改这个modal的样式的\r\n        destroyOnClose={true}\r\n        title={\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              cursor: \"move\",\r\n              height: \"30px\",\r\n              textAlign: \"center\",\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          ></div>\r\n        }\r\n        visible={visible}\r\n        // visible={true}\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\r\n      >\r\n        <div id=\"unassignedModal\">\r\n          <div className=\"title\">\r\n            Assign <br />\r\n            Measurement to\r\n          </div>\r\n\r\n          <div className=\"addPhoto\">\r\n            <UploadImg\r\n              getImg={(val) => {\r\n                console.log(\"hahahahahahah我获得了\", val);\r\n                this.setState({\r\n                  imgId: val.imageId,\r\n                });\r\n              }}\r\n              imgUrl={this.state.assignPetImgUrl}\r\n              disable={this.state.inputDisabled}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <p>Patient ID:</p>\r\n            <Input\r\n              value={this.state.assignPatientId}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPatientId: item.target.value,\r\n                });\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  getPetInfoByPatientId();\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  console.log(\"清空\");\r\n                  this.setState({\r\n                    assignPatientId: \"\",\r\n                  });\r\n                }\r\n              }}\r\n              onBlur={() => {\r\n                if (this.state.assignPatientId.length > 0) {\r\n                  getPetInfoByPatientId();\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <p>Pet Name:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignPetName}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPetName: item.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <p>Owner Name:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignOwnerName}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignOwnerName: item.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"item\">\r\n            <p>Breed:</p>\r\n            <div className=\"infoInput\">\r\n              {/* <Input bordered={false} /> */}\r\n              <Select\r\n                disabled={this.state.inputDisabled}\r\n                showSearch\r\n                style={{ width: \"100%\" }}\r\n                bordered={false}\r\n                value={this.state.assignBreed}\r\n                // size = {'small'}\r\n                placeholder=\"Search to Select\"\r\n                optionFilterProp=\"children\"\r\n                listHeight={256}\r\n                onSelect={(value, data) => this._select(value, data)}\r\n                filterOption={(input, option) =>\r\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                  0\r\n                }\r\n                filterSort={(optionA, optionB) =>\r\n                  optionA.children\r\n                    .toLowerCase()\r\n                    .localeCompare(optionB.children.toLowerCase())\r\n                }\r\n              >\r\n                {options}\r\n              </Select>\r\n            </div>\r\n          </div>\r\n          <div className=\"item\">\r\n            <p>Pet Age:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignPetAge}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPetAge: item.target.value,\r\n                });\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"item\">\r\n            <p>Pet Weight:</p>\r\n            <Input\r\n              disabled={this.state.inputDisabled}\r\n              value={this.state.assignPetWeight}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  assignPetWeight: item.target.value,\r\n                });\r\n              }}\r\n            />\r\n\r\n            <div className=\"unit\">{`kg`}</div>\r\n          </div>\r\n\r\n          <div className=\"btnF\">\r\n            <div className=\"btn\" onClick={this.handleCancel}>\r\n              Cancel\r\n            </div>\r\n            <div\r\n              className=\"btn\"\r\n              onClick={() => {\r\n                if (this.state.assignPetId) {\r\n                  assignPet();\r\n                } else {\r\n                  message.error(\"Did not find this pet\");\r\n                }\r\n              }}\r\n            >\r\n              Confirm\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    );\r\n  };\r\n  _list = () => {\r\n    const { search, petListData, searchPetList } = this.state;\r\n    let data = search.length > 0 ? searchPetList : petListData;\r\n    console.log('--------------------data', data);\r\n    let option = data.map((item, index) => {\r\n      let male = item.gender === \"F\" ? \"Female\" : \"Male\";\r\n      return (\r\n        <li\r\n          key={item.organizationId}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectPetId: item.petId,\r\n            });\r\n            console.log(item);\r\n          }}\r\n        >\r\n          <div className=\"item\">\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {item.petName}\r\n            </span>{\" \"}\r\n            &nbsp;&nbsp;\r\n            <span\r\n              className=\"petName\"\r\n              style={{ margin: `${px(5)}px 0` }}\r\n            >{`${item.age} yrs,`}</span>{\" \"}\r\n            &nbsp;&nbsp;\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {male}\r\n            </span>\r\n          </div>\r\n\r\n          {this.state.selectPetId === item.petId ? (\r\n            <span className=\"search\">&#xe614;</span>\r\n          ) : null}\r\n\r\n          {/* <div className=\"dui\">\r\n          <img src={} alt=\"\"/>\r\n        </div> */}\r\n        </li>\r\n      );\r\n    });\r\n    return <ul>{option}</ul>;\r\n  };\r\n\r\n  render () {\r\n    let { loading, disabled, historyData, searchText, serchExamData } =\r\n      this.state;\r\n    const _del = (key, record) => {\r\n      console.log(\"删除\", key, record);\r\n\r\n      fetchRequest(`/pet/deletePetExamByExamId/${key}`, \"DELETE\").then(\r\n        (res) => {\r\n          if (res.flag === true) {\r\n            console.log(\"删除成功\");\r\n            const historyData = [...this.state.historyData];\r\n            console.log(historyData);\r\n            this.setState({\r\n              historyData: historyData.filter((item) => item.historyId !== key),\r\n            });\r\n          } else {\r\n            console.log(\"删除失败\");\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        key: \"operation\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          // console.log('狩猎:', text, record, index);\r\n          //record:\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: `${px(8)}px 0`,\r\n              }}\r\n            >\r\n              <Popconfirm\r\n                title=\"Sure to delete?\"\r\n                onConfirm={() => _del(record.historyId, record)}\r\n              >\r\n                <img src={del} alt=\"\" style={{ marginRight: \"8px\" }} />\r\n              </Popconfirm>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Time\",\r\n        dataIndex: \"time\",\r\n        key: \"time\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      // {\r\n      //   // title: `Temp(${this.state.units})`,\r\n      //   title: `Temp(℉)`,\r\n      //   key: 'temp',\r\n      //   dataIndex: 'temp',\r\n      //   render: (text, record, index) => {\r\n      //     // console.log(text, record);\r\n      //     /**\r\n      //      * bag：温度数值前的圆圈的背景颜色\r\n      //      * tem：展示的温度\r\n      //      * endvalue:将从后台得到的数据全部转化成华氏度\r\n      //      * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n      //      * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n      //      *\r\n      //      */\r\n\r\n      //     let bag = '', tem = ''\r\n\r\n      //     let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\r\n      //     let min = 100.4, max = 102.56\r\n\r\n      //     if (endValue > max) {\r\n      //       bag = '#E1206D'\r\n      //     } else if (endValue < min) {\r\n      //       bag = '#98DA86'\r\n      //     } else {\r\n      //       bag = '#58BDE6'\r\n      //     }\r\n\r\n      //     if (this.state.units === '℃') {\r\n      //       if (text) {\r\n      //         tem = `${text}${this.state.units}`\r\n      //       }\r\n      //     } else {\r\n      //       if (text) {\r\n      //         if (text > 55) {\r\n      //           tem = `${text}${this.state.units}`\r\n      //         } else {\r\n      //           tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\r\n      //         }\r\n\r\n      //       }\r\n      //     }\r\n      //     return (\r\n      //       <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n      //         {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\r\n      //         <p style={{ margin: 0, padding: 0 }}>{tem}</p>\r\n      //       </div>\r\n      //     )\r\n\r\n      //   }\r\n      // },\r\n\r\n      {\r\n        title: \" Pet Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\",\r\n        width: \"20%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n      // Species\r\n\r\n      {\r\n        title: \"Species\",\r\n        dataIndex: \"species\",\r\n        key: \"species\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"Note\",\r\n        dataIndex: \"note\",\r\n        key: \"note\",\r\n        width: \"20%\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"assign\",\r\n        key: \"assign\",\r\n        width: \"10%\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div\r\n              className=\"assign\"\r\n              style={{\r\n                fontSize: px(16),\r\n                paddingTop: px(5),\r\n                paddingBottom: px(5),\r\n              }}\r\n              onClick={() => {\r\n                console.log(text, record, index);\r\n                this.setState({\r\n                  // visible: true,\r\n                  assignVisible: true,\r\n                  seleceEmergencies: record,\r\n                });\r\n              }}\r\n            >\r\n              Assign\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n\r\n    let tableData = searchText.length > 0 ? serchExamData : historyData;\r\n\r\n    return (\r\n      <div id=\"unassigned\">\r\n        <Heard\r\n          onReturn={() => {\r\n            this.props.history.goBack();\r\n          }}\r\n          onSearch={(data) => {\r\n            storage.doctorExam = JSON.stringify(data);\r\n\r\n            storage.doctorList = JSON.stringify(this.state.data);\r\n            if (storage.isClinical === \"true\") {\r\n              this.props.history.push({\r\n                pathname: \"/page8\",\r\n                identity: storage.identity,\r\n                patientId: data.patientId,\r\n              });\r\n            } else {\r\n              this.props.history.push({ pathname: \"/page10\" });\r\n            }\r\n          }}\r\n          menu8Click={() => {\r\n            console.log(\"--\", storage.identity);\r\n            switch (storage.identity) {\r\n              case \"2\":\r\n                this.props.history.push({\r\n                  pathname: \"/EzyVetSelectExam\",\r\n                  listDate: storage.ezyVetList,\r\n                  defaultCurrent: storage.defaultCurrent,\r\n                });\r\n\r\n                break;\r\n              case \"1\":\r\n                this.props.history.push(\"/VetSpireSelectExam\");\r\n\r\n                break;\r\n              case \"3\":\r\n                this.props.history.push({\r\n                  pathname: \"/uesr/selectExam\",\r\n                  listDate: storage.doctorList,\r\n                  defaultCurrent: storage.defaultCurrent,\r\n                });\r\n\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n          }}\r\n        />\r\n\r\n        <div className=\"body\">\r\n          <div\r\n            className=\"title\"\r\n            style={{\r\n              marginTop: px(30),\r\n              fontSize: px(30),\r\n              marginBottom: px(40),\r\n            }}\r\n          >\r\n            Unassigned Measurements{\" \"}\r\n          </div>\r\n          <div className=\"input\" style={{ marginBottom: px(10) }}>\r\n            <input\r\n              type=\"text\"\r\n              // className=\"iconfont search\"\r\n              placeholder=\"&#xe628; Search Pet Name or Description\"\r\n              value={this.state.searchText}\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  searchText: e.target.value,\r\n                });\r\n                this._search(e.target.value);\r\n              }}\r\n              onKeyUp={(e) => {\r\n                // console.log(e);\r\n                if (e.keyCode === 13) {\r\n                  this._search();\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  this.setState({\r\n                    searchText: \"\",\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <div\r\n              className=\"searchBtn\"\r\n              style={{ height: px(35), fontSize: px(18) }}\r\n              onClick={this._search}\r\n            >\r\n              <p>Search</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table\">\r\n            <Table\r\n              style={{\r\n                // border: ' #979797 1px solid',\r\n                padding: 0,\r\n                margin: 0,\r\n                width: \"95%\",\r\n                height: MTop(280),\r\n                // backgroundColor: 'pink'\r\n              }}\r\n              loading={loading}\r\n              columns={columns}\r\n              dataSource={tableData}\r\n              rowKey={(columns) => columns.historyId}\r\n              // pagination={{ pageSize: 8, showSizeChanger: false, showQuickJumper: true }}\r\n              pagination={false}\r\n              scroll={{\r\n                y: MTop(260),\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          {this._modal()}\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.assignVisible}\r\n          // visible={true}\r\n          element={\r\n            <div className=\"myfindOrg\">\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div\r\n                  // className=\" iconfont icon-left return\"\r\n                  // onClick={() => { this.setState({ isWorkplace: false, isOrg: true }) }}\r\n                  >\r\n                    {/* <img src={left1} alt=\"\" style={{ height: px(25) }} /> */}\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.setState({ assignVisible: false });\r\n                    }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className=\"text\"\r\n                  onMouseOver={() => {\r\n                    if (disabled) {\r\n                      this.setState({\r\n                        disabled: false,\r\n                      });\r\n                    }\r\n                  }}\r\n                  onMouseOut={() => {\r\n                    this.setState({\r\n                      disabled: true,\r\n                    });\r\n                  }}\r\n                >\r\n                  Assign Measurement\r\n                </div>\r\n\r\n                <div className=\"searchBox\">\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search Pet\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.search}\r\n                    onChange={(item) => {\r\n                      this.setState({\r\n                        search: item.target.value,\r\n                      });\r\n                      this._searchPet(item.target.value);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"list\">{this._list()}</div>\r\n\r\n              <div className=\"foot\">\r\n                <div\r\n                  className=\"btnn flex\"\r\n                  style={{ height: px(45) }}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      assignVisible: false,\r\n                      visible: true,\r\n                    });\r\n                  }}\r\n                >\r\n                  <p>+Add New Pet</p>\r\n                </div>\r\n                <div\r\n                  className=\"btnn flex\"\r\n                  style={{ height: px(45) }}\r\n                  onClick={() => {\r\n                    if (!this.state.selectPetId) {\r\n                      message.error(\"Please select a pet to assign\");\r\n                    } else {\r\n                      let { selectPetId, seleceEmergencies, historyData } =\r\n                        this.state;\r\n                      let parmes = {\r\n                        petId: selectPetId,\r\n                        clinicalDatagroupId:\r\n                          seleceEmergencies.clinicalDatagroupId,\r\n                      };\r\n                      console.log(\"分配的数据信息\", parmes);\r\n                      fetchRequest(\r\n                        `/pet/addAndSavePetExam/${seleceEmergencies.historyId}`,\r\n                        \"POST\",\r\n                        parmes\r\n                      )\r\n                        .then((res) => {\r\n                          console.log(\"----------\", res);\r\n                          if (res.flag === true) {\r\n                            console.log(\"分配成功\");\r\n                            message.success(\"Assigned successfully\");\r\n                            let arr = [];\r\n                            for (let i = 0; i < historyData.length; i++) {\r\n                              const element = historyData[i];\r\n                              if (\r\n                                seleceEmergencies.clinicalDatagroupId !==\r\n                                element.clinicalDatagroupId\r\n                              ) {\r\n                                arr.push(element);\r\n                              }\r\n                            }\r\n\r\n                            this.setState({\r\n                              assignVisible: false,\r\n                              historyData: arr,\r\n                            });\r\n                          } else {\r\n                            message.error(\"Assignment failed\");\r\n                          }\r\n                        })\r\n                        .catch((err) => {\r\n                          console.log(err);\r\n                          message.error(\"Assignment failed\");\r\n                        });\r\n                    }\r\n                  }}\r\n                >\r\n                  <p>Confirm</p>\r\n                </div>\r\n                {/* <Button\r\n                  text={'+Add New Pet'}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      assignVisible: false,\r\n                      visible: true\r\n                    })\r\n                  }}\r\n                />\r\n                <Button\r\n                  text={'Confirm'}\r\n                  \r\n                /> */}\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchEszVet.js",["507","508"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx",["509","510","511","512","513","514","515"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js",["516","517","518","519"],"\r\nlet COMMON_URL = 'https://www.mellaserver.com/big/mellabiggie';//内部负载均衡\r\n\r\n//let COMMON_URL = 'http://34.206.181.105:31668/mellabiggie';//内部负载均衡\r\n\r\n// let COMMON_URL = 'http://192.168.0.36:9090/mellabiggie';//本地测试\r\nlet token = '';\r\n\r\n\r\nexport async function fetchRequest4 (url, method, params = '', Authorization = '', isLogin) {\r\n\r\n  // if (isLogin) {\r\n\r\n  //     COMMON_URL = 'http://34.206.181.105:31667/mellaserver'\r\n  // } else {\r\n  //     COMMON_URL = 'https://www.mellaserver.com/big/mellabiggie'\r\n  // }\r\n  console.log(COMMON_URL, url);\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          headers: {\r\n            Authorization\r\n          },\r\n          method: method,\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      console.log(COMMON_URL + url);\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": 'text/plain',\r\n            Authorization\r\n          },\r\n\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js",["520","521","522"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx",["523","524"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\current.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil.js",["525","526","527","528"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\imgArray.js",["529"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx",["530","531","532","533"],"import React, { useEffect, useState } from \"react\";\r\nimport { Layout, message } from \"antd\";\r\nimport Biggie from \"./Biggie\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { setBiggieConnectStatusFun } from \"../../store/actions\";\r\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\r\nimport HistoryTable from \"../../components/historyTable\";\r\nimport LinkEquipment from \"./components/linkEquipment\";\r\nimport \"./biggiePage.less\";\r\nimport { px } from \"../../utils/px\";\r\nimport { fetchRequest } from \"../../utils/FetchUtil1\";\r\nimport MyModal from \"../../utils/myModal/MyModal\";\r\n\r\nconst { Header, Content, Footer, Sider } = Layout;\r\nlet storage = window.localStorage;\r\n\r\nconst BiggirPage = ({\r\n  hardwareReduce,\r\n  setBiggieConnectStatusFun,\r\n  petReduce,\r\n}) => {\r\n  let { petDetailInfo } = petReduce;\r\n  let { biggieBodyWeight } = hardwareReduce;\r\n  //定义体重值 体脂值 体重单位 连接状态\r\n  const [weight, setWeight] = useState(0);\r\n  const [saveNum, setSaveNum] = useState(0);\r\n  const [fat, setFat] = useState(0);\r\n  const [unit, setUnit] = useState(\"kg\");\r\n  const [connectStatus, setConnectStatus] = useState(\"disconnected\");\r\n  const [isSavePMS, setIsSavePMS] = useState(false);\r\n  const [saveLoad, setSaveLoad] = useState(false);\r\n  const [isHaveSaveBtn, setIsHaveSaveBtn] = useState(true);\r\n\r\n  const _saveWeight = () => {\r\n    let params = {\r\n      petId: petDetailInfo.petId,\r\n      doctorId: storage.userId,\r\n      weight: weight,\r\n      memo: \"\",\r\n      fat,\r\n      bodyConditionScore: null,\r\n    };\r\n    setSaveLoad(true);\r\n    console.log(\"---体重保存入参--：\", params);\r\n    fetchRequest(\"/exam/addClamantPetExam\", \"POST\", params)\r\n      .then((res) => {\r\n        setSaveLoad(false);\r\n        console.log(\"res\", res);\r\n        if (res.flag === true) {\r\n          switch (storage.lastOrganization) {\r\n            default:\r\n              message.success(\"Data successfully saved in Mella\");\r\n              break;\r\n          }\r\n          setSaveNum(saveNum + 1);\r\n          setIsHaveSaveBtn(false);\r\n          // this._getHistory()\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setSaveLoad(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isSave = storage.connectionKey ? false : true;\r\n    setIsSavePMS(isSave);\r\n    return() => {}\r\n  }, []);\r\n  useEffect(() => {\r\n    let {\r\n      biggieConnectStatus,\r\n      biggieBodyFat,\r\n      biggieBodyWeight,\r\n      biggieUnit,\r\n      biggieSameWeightCount,\r\n    } = hardwareReduce;\r\n    setConnectStatus(biggieConnectStatus);\r\n    setFat(biggieBodyFat);\r\n    setUnit(biggieUnit);\r\n    if (biggieUnit === \"lb\") {\r\n      biggieBodyWeight = biggieBodyWeight * 2;\r\n    }\r\n    setWeight(biggieBodyWeight);\r\n    if (biggieSameWeightCount === 6) {\r\n      let ipcRenderer = window.require(\"electron\").ipcRenderer;\r\n      ipcRenderer.send(\"keyboardWriting\", weight);\r\n    }\r\n\r\n    return () => {};\r\n  }, [hardwareReduce]);\r\n\r\n  useEffect(() => {\r\n    setIsHaveSaveBtn(true);\r\n    return () => {};\r\n  }, [biggieBodyWeight]);\r\n\r\n  return (\r\n    <>\r\n      <Layout className=\"biggiePage\">\r\n        <HeaderItem />\r\n        <Content className=\"biggieContentBox\">\r\n          {_.isEmpty(petDetailInfo) ? (\r\n            <div className=\"chackPatientBox\">\r\n              <p className=\"chackPatientTitle\">Select a patient</p>\r\n            </div>\r\n          ) : connectStatus === \"isMeasuring\" ? (\r\n            <div className=\"biggbody\">\r\n              <div className=\"biggieTopBox\" style={{ width: px(470) }}>\r\n                <Biggie\r\n                  weight={weight}\r\n                  bodyFat={fat}\r\n                  score={5}\r\n                  impedance={fat}\r\n                  isIbs={unit === \"lb\"}\r\n                  onPress={_saveWeight}\r\n                  discardOnPress={() =>\r\n                    setBiggieConnectStatusFun(\"disconnected\")\r\n                  }\r\n                  issave={isSavePMS}\r\n                  isHaveSaveBtn={isHaveSaveBtn}\r\n                />\r\n              </div>\r\n              <div className=\"biggeTitleBox\">\r\n                <p className=\"biggeTitle\">History</p>\r\n              </div>\r\n              <div className=\"biggeTableBox\">\r\n                <HistoryTable saveNum={saveNum} />\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"biggbody\">\r\n              <LinkEquipment />\r\n            </div>\r\n          )}\r\n        </Content>\r\n      </Layout>\r\n      <MyModal visible={saveLoad} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    hardwareReduce: state.hardwareReduce,\r\n    petReduce: state.petReduce,\r\n  }),\r\n  {\r\n    setBiggieConnectStatusFun,\r\n  }\r\n)(BiggirPage);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx",["534","535","536"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Dropdown,\r\n  Menu,\r\n} from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { px } from '../../utils/px'\r\nimport { petSortTypeFun, petDetailInfoFun, setPetListArrFun } from '../../store/actions'\r\nimport electronStore from '../../utils/electronStore'\r\nimport petIcon from './../../assets/img/petIcon.png'\r\nimport xia from './../../assets/img/xia.png'\r\nimport MyModal from './../../utils/myModal/MyModal'\r\nimport redjinggao from './../../assets/img/redjinggao.png'\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate'\r\n\r\n\r\nimport './mainbody.less'\r\nimport { fetchRequest } from '../../utils/FetchUtil1';\r\n\r\nlet storage = window.localStorage;\r\n\r\n\r\nconst PetsUI = ({ bodyHeight, petSortTypeFun, petSortType, petDetailInfoFun, petDetailInfo, setPetListArrFun, petListArr, selectHardwareType, rulerConnectStatus }) => {\r\n  //定义宠物列表数组\r\n  const [petList, setPetList] = useState([])\r\n  //是否展示弹窗\r\n  const [showModal, setShowModal] = useState(false)\r\n  //选中的宠物的详细信息\r\n  const [selectPetDetail, setSelectPetDetail] = useState({})\r\n\r\n  useEffect(() => {\r\n    //设置宠物列表数据\r\n    setPetList(petListArr)\r\n  }, [petListArr])\r\n\r\n  useEffect(() => {\r\n    //从本地获取宠物列表数据\r\n    // let petList = electronStore.get('petList') || [];\r\n    setPetList(petList)\r\n    _getExam()\r\n  }, [])\r\n\r\n  //获取宠物列表数据\r\n  const _getExam = () => {\r\n\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\r\n      .then(res => {\r\n        console.log('查询所有宠物', res);\r\n        if (res.flag === true && res.data) {\r\n          let oldList = res.data\r\n          let petArr = dataSort(oldList)\r\n          setPetList(petArr)\r\n          setPetListArrFun(petArr)\r\n        } else {\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n\r\n      })\r\n  }\r\n  const dataSort = (data) => {\r\n    let petList = [].concat(data)\r\n    switch (petSortType) {\r\n      case 'Time':\r\n        petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\r\n        break;\r\n      case 'Pet ID':\r\n        petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\r\n        break;\r\n      case 'Owner':\r\n        petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\r\n        break;\r\n      case 'Breed':\r\n        petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\r\n        break;\r\n      case 'Pet Name':\r\n        petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\r\n        break;\r\n      case 'Gender':\r\n        petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\r\n        break;\r\n    }\r\n    return petList\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  const menu = () => {\r\n    let menuList = [\r\n      // { value: 'Time' },\r\n      { value: 'Pet ID' },\r\n      // { value: 'Owner' },\r\n      // { value: 'Breed' },\r\n      { value: 'Pet Name' },\r\n      // { value: 'Gender' },\r\n    ];\r\n    let options = menuList.map((item, index) => {\r\n      let itemstyle = {}, textColor = '#1a1a1a'\r\n      if (petSortType === item.value) {\r\n        itemstyle = { backgroundColor: '#e1206D' }\r\n        textColor = '#fff'\r\n      }\r\n      return (\r\n        <Menu.Item style={itemstyle} key={`${item.value}`}>\r\n          <div style={{ color: textColor }}>{item.value}</div>\r\n        </Menu.Item>\r\n      )\r\n    })\r\n    return (\r\n      <Menu onClick={({ key, }) => {\r\n        petSortTypeFun(key)\r\n        let petArr = dataSort(petList)\r\n        setPetList(petArr)\r\n        setPetListArrFun(petArr)\r\n      }}>\r\n        {options}\r\n\r\n      </Menu>\r\n    );\r\n  }\r\n  const petListUI = () => {\r\n    let options = petList.map((item, index) => {\r\n      let itemBac = '#E7E7E7', itemColor = '#141414'\r\n      if (item.petId === petDetailInfo.petId) {\r\n        itemBac = '#e1206D'\r\n        itemColor = '#fff'\r\n      }\r\n      return (\r\n        <li key={index} >\r\n          <div className='petItem'\r\n            style={{ padding: `${px(7)}px 0 ${px(7)}px ${px(20)}px`, fontSize: 14, backgroundColor: itemBac, color: itemColor }}\r\n            onClick={() => {\r\n              //当硬件是尺子且尺子还在测量的时候,要做出提示\r\n              setSelectPetDetail(item)\r\n              if (selectHardwareType === 'tape' && rulerConnectStatus !== 'disconnected') {\r\n                setShowModal(true)\r\n              } else {\r\n                petDetailInfoFun(item)\r\n              }\r\n            }}\r\n          >\r\n            {`${item.patientId}, ${item.petName}`}\r\n          </div>\r\n        </li>\r\n      )\r\n\r\n    })\r\n\r\n    return (\r\n      <div className=\"petList\" style={{ marginTop: px(10), height: bodyHeight - devicesTitleHeight - px(220) }}>\r\n        <ul>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"PetUI\" style={{ height: bodyHeight - devicesTitleHeight, }}>\r\n      <MyModal\r\n        visible={showModal}\r\n        element={\r\n          <div className='petUiModal'>\r\n            <img src={redjinggao} alt=\"\" width={'45px'} style={{ margin: `${px(25)}px 0` }} />\r\n            <div className='bodyText' style={{ marginTop: px(30) }}>Patient Switched – select dimension to measure</div>\r\n            <div className=\"btns\" style={{ marginTop: px(35) }}>\r\n              <div className=\"btn\" onClick={() => { setShowModal(false) }}>Cancel</div>\r\n              <div className=\"btn\" onClick={() => { setShowModal(false); petDetailInfoFun(selectPetDetail) }}>Confirm</div>\r\n            </div>\r\n          </div>\r\n        }\r\n      />\r\n      <div className=\"title\" style={{ padding: `${px(20)}px 0px ${px(20)}px ${px(20)}px ` }}>\r\n        <img src={petIcon} alt=\"\" width={px(25)} style={{ marginRight: px(10) }} />\r\n        <div className=\"titleText\" >Pets</div>\r\n      </div>\r\n      <div className=\"sort\" style={{ paddingLeft: px(20) }}>\r\n        <Dropdown overlay={menu} trigger={['click']}>\r\n          <div className=\"sortBox\">\r\n            <img src={xia} alt=\"\" width={px(20)} style={{ marginRight: px(10) }} />\r\n            <div className=\"sortText\" >\r\n              {`Sort by: ${petSortType}`}\r\n            </div>\r\n          </div>\r\n        </Dropdown>\r\n      </div>\r\n      {petListUI()}\r\n\r\n      <div className=\"walkBtn\">\r\n        <div\r\n          className=\"walkbtnBox\"\r\n          style={{ height: px(40), marginTop: px(30) }}\r\n          onClick={() => {\r\n            let json = {\r\n              isWalkIn: true,\r\n              petId: null,\r\n              petName: null,\r\n              owner: null,\r\n              breed: null,\r\n\r\n            }\r\n            petDetailInfoFun(json)\r\n          }}\r\n        >\r\n          <div className=\"walkText\">Walk-In</div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nPetsUI.propTypes = {\r\n  bodyHeight: PropTypes.number\r\n}\r\n//默认值\r\nPetsUI.defaultProps = {\r\n  bodyHeight: 0\r\n}\r\nexport default connect(\r\n  state => ({\r\n    petSortType: state.petReduce.petSortType,\r\n    petDetailInfo: state.petReduce.petDetailInfo,\r\n    petListArr: state.petReduce.petListArr,\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    rulerConnectStatus: state.hardwareReduce.rulerConnectStatus,\r\n  }),\r\n  { petSortTypeFun, petDetailInfoFun, setPetListArrFun }\r\n)(PetsUI)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx",["577","578","579","580","581","582","583","584"],"import React, {\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport { Image, Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PressButton_Pro from './../../../assets/img/PressButton_Pro.png';\r\nimport biggieonscale from './../../../assets/img/biggieonscale.png';\r\nimport {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun\r\n} from '../../../store/actions';\r\nimport _ from 'lodash';\r\nimport './linkEquipment.less';\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n    let { mellaConnectStatus } = hardwareMessage;\r\n    return (\r\n        <>\r\n            {/* <HeaderItem /> */}\r\n            <Content className={\"contentBox\"}>\r\n                <div className='startBox'>\r\n                    <img src={biggieonscale}></img>\r\n                    <p className='startTitle'>Ready, place pet onto scale</p>\r\n                </div>\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\nexport default connect(\r\n    state => ({\r\n        petMessage: state.petReduce.petDetailInfo,\r\n        hardwareMessage: state.hardwareReduce,\r\n    }),\r\n    {\r\n        selectHardwareModalShowFun,\r\n        petSortTypeFun,\r\n        petDetailInfoFun,\r\n        setMellaConnectStatusFun,\r\n        setMellaMeasureValueFun,\r\n        setMellaPredictValueFun,\r\n        setMellaMeasurePartFun\r\n    }\r\n)(LinkEquipment);","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx",["611","612"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Menu,\r\n    Popover,\r\n    Button,\r\n    Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport pinyin from 'pinyin';\r\n\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './phoneBook.less'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\n\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\r\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\r\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\r\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\r\n\r\n    useEffect(() => {\r\n        if (confirmSelectBreed !== -1) {\r\n            setSelectBreed(confirmSelectBreed)\r\n        }\r\n    }, [confirmSelectBreed])\r\n\r\n\r\n    console.log('listsDate', phoneList)\r\n\r\n    useEffect(() => {\r\n        // console.log('listsDate', listDate)\r\n        console.log('进来了');\r\n        let test = []\r\n        listDate.map((item, index) => {\r\n            let data = {\r\n                name: item.breedName,\r\n                hidden: false,\r\n                petSpeciesBreedId: item.petSpeciesBreedId\r\n            }\r\n            test.push(data)\r\n        })\r\n        // 暂时静态数据替换\r\n        //获取联系人列表\r\n        console.log('11111111111', test)\r\n        let list = test;\r\n        let sections = [], letterArr = [];\r\n        // console.log('原始的数据:',list)\r\n\r\n        // 右侧字母栏数据处理\r\n        list.map((item, index) => {\r\n            letterArr.push(pinyin(item.name.substring(0, 1), {\r\n                style: pinyin.STYLE_FIRST_LETTER,\r\n            })[0][0].toUpperCase());\r\n\r\n            letterArr = [...new Set(letterArr)].sort();\r\n        });\r\n\r\n        // 分组数据处理\r\n        letterArr.map((item, index) => {\r\n            sections.push({\r\n                title: item,\r\n                data: []\r\n            })\r\n        });\r\n        list.map(item => {\r\n            let listItem = item;\r\n            sections.map(item => {\r\n                // console.log('}}}}}}}}}}}}}}',item)\r\n                let first = listItem.name.substring(0, 1);\r\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\r\n                if (item.title == test) {\r\n                    item.data.push({\r\n                        firstName: first,\r\n                        name: listItem.name,\r\n                        hidden: listItem.hidden,\r\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\r\n                    });\r\n                }\r\n            })\r\n        });\r\n\r\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\r\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\r\n        // console.log('-1----', sections, letterArr);\r\n        setPhoneList(sections)\r\n        setPhoneListCopy(sections)\r\n        setLetterList(letterArr)\r\n        setLetterListCopy(letterArr)\r\n    }, [])\r\n    useEffect(() => {\r\n        // if (searchText) {\r\n        console.log('搜索内容', searchText, letterListCopy);\r\n        if (letterListCopy.length > 0) {\r\n\r\n            let allData = phoneListCopy\r\n            let newArr = []\r\n            let arr = []\r\n            if (searchText.length > 0) {\r\n                allData.map((item, i) => {\r\n                    item.data.map((data, index) => {\r\n                        // console.log(index)\r\n                        let dataName = data.name ? data.name.toUpperCase() : ''\r\n                        let keyData = searchText ? searchText.toUpperCase() : ''\r\n                        if (dataName.search(keyData) !== -1) {\r\n                            newArr.push(data)\r\n                        }\r\n                    })\r\n                    // console.log('一组数据：', newArr)\r\n                    if (newArr.length != 0) {\r\n                        let oneGreep = {\r\n                            title: item.title,\r\n                            data: newArr\r\n                        }\r\n                        //   console.log('一11组数据：', oneGreep)\r\n                        arr.push(oneGreep)\r\n                    }\r\n\r\n                    newArr = []\r\n                })\r\n                //   console.log('--------------------------', arr)\r\n                let letterArr = []\r\n                arr.map((item, index) => {\r\n                    letterArr.push(item.title)\r\n                })\r\n                // newArr = []\r\n                // // console.log('---||-----',newArr)\r\n                setPhoneList(arr)\r\n                setLetterList(letterArr)\r\n            } else {\r\n\r\n                setPhoneList(phoneListCopy)\r\n                setLetterList(letterListCopy)\r\n            }\r\n        }\r\n\r\n\r\n    }, [searchText])\r\n\r\n\r\n\r\n    const _phoneList = () => {\r\n\r\n        let option = phoneList.map((item, index) => {\r\n            let data = item.data\r\n            let option1 = data.map((value, index1) => {\r\n                return (\r\n                    <li\r\n                        key={`option1${index1}`}\r\n                        onClick={() => {\r\n                            // console.log(value.petSpeciesBreedId);\r\n                            setSelectBreed(value.petSpeciesBreedId)\r\n                            selectFun(value)\r\n                        }}>\r\n                        {value.name}\r\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\r\n                    </li>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <div className=\"phoneBody\">\r\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\r\n                    <ul>\r\n                        {option1}\r\n                    </ul>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul>\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const _letterList = () => {\r\n\r\n        let option = letterList.map((item, index) => {\r\n\r\n\r\n            return (\r\n                <li\r\n                    key={`${index}`}\r\n\r\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\r\n                    <a\r\n\r\n                        onClick={() => {\r\n                            litterClick(item)\r\n                        }}\r\n                    >{item}</a>\r\n                </li>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul className=\"letterUL\">\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const litterClick = (anchorName) => {\r\n        // console.log(anchorName);\r\n        if (anchorName) {\r\n            // 找到锚点\r\n            let anchorElement = document.getElementById(anchorName);\r\n            // console.log(anchorElement);\r\n            // 如果对应id的锚点存在，就跳转到锚点\r\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\r\n        }\r\n        // e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"phoneBook\">\r\n            <div className=\"phone\">\r\n                {_phoneList()}\r\n            </div>\r\n            <div className=\"litter\">\r\n                {_letterList()}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n\r\n    listDate: PropTypes.array,\r\n    selectFun: PropTypes.func,\r\n    searchText: PropTypes.string,\r\n    confirmSelectBreed: PropTypes.number\r\n}\r\nPhoneBook.defaultProps = {\r\n    listDate: [],\r\n    selectFun: () => { },\r\n    searchText: '',\r\n    confirmSelectBreed: -1,\r\n}\r\n\r\nexport default PhoneBook","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx",["634","635","636","637","638","639"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx",["640","641"],"import React, { Component, } from 'react'\r\nimport {\r\n    Button,\r\n    Input,\r\n    Form,\r\n    Select\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './esyVetLogin.less'\r\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\nexport default class EzyNetLogin extends Component {\r\n\r\n    state = {\r\n        isRemember: false,\r\n        client_id: '',\r\n        client_secret: '',\r\n        partner_id: ''\r\n    }\r\n\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('middle')\r\n        storage.ezyVetToken = ''\r\n    }\r\n    componentWillMount () {\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin1 !== '', storage.ezyVetToken1 !== undefined, `${storage.ezyVetToken1}` !== 'undefined');\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin !== '', storage.ezyVetToken !== undefined, `${storage.ezyVetToken}` !== 'undefined');\r\n        if (storage.ezyVetLogin !== '' && storage.ezyVetToken !== undefined && `${storage.ezyVetToken}` !== 'undefined') {\r\n            try {\r\n                let data = JSON.parse(storage.ezyVetLogin)\r\n                console.log('--', data);\r\n                this.setState({\r\n                    isRemember: data.isRemember,\r\n                    client_id: data.client_id,\r\n                    client_secret: data.client_secret,\r\n                    partner_id: data.partner_id\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 10 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 14 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 10,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 8,\r\n                    offset: 7,\r\n                },\r\n            },\r\n        };\r\n\r\n        const _next = (values) => {\r\n            console.log('Received values of form: ', values);\r\n            let parames = {\r\n                clientId: values.client_id,\r\n                clientSecret: values.client_secret,\r\n                partnerId: values.partner_id,\r\n            }\r\n            console.log(parames);\r\n            fetchRequest2('/EzyVet/ezyvetauth', 'GET', parames, '')\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res && res.msg === 'success') {\r\n\r\n                        storage.ezyVetToken = res.data\r\n                        if (this.state.isRemember) {\r\n                            storage.ezyVetLogin = JSON.stringify({\r\n                                client_id: values.client_id,\r\n                                client_secret: values.client_secret,\r\n                                partner_id: values.partner_id,\r\n                                isRemember: this.state.isRemember\r\n                            })\r\n                        } else {\r\n                            storage.ezyVetLogin = ''\r\n                        }\r\n                        storage.selectTime = ''\r\n                        storage.ezyVetReLogin = JSON.stringify({  //如果令牌过期了，需要重新输入信息重新获取令牌\r\n                            client_id: values.client_id,\r\n                            client_secret: values.client_secret,\r\n                            partner_id: values.partner_id,\r\n                        })\r\n\r\n                        this.props.history.push('EzyVetSelectTime')\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n\r\n        }\r\n        let { client_id, client_secret, partner_id } = this.state\r\n\r\n        return (\r\n            <div id=\"eszVetLogin\">\r\n                {/* 关闭缩小 */}\r\n                <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                    onClick1={() => this.props.history.push('/page1')}\r\n                />\r\n                <div className=\"text\">\r\n                    Please enter your user information\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form\r\n                        {...formItemLayout}\r\n                        name=\"register\"\r\n                        onFinish={_next}\r\n                        initialValues={{\r\n                            client_id, client_secret, partner_id\r\n                        }}\r\n\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"client_id\"\r\n                            label=\"Client ID\"\r\n                            rules={[{ required: true, message: 'Please input your Client ID!', whitespace: true }]}\r\n\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"client_secret\"\r\n                            label=\"Client Secret\"\r\n                            rules={[{ required: true, message: 'Please input your Client Secret!', whitespace: true }]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"partner_id\"\r\n                            label=\"Partner ID\"\r\n                            rules={[{ required: true, message: 'Please input your Partner ID!', whitespace: true }]}\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            {...tailFormItemLayout}\r\n                        >\r\n                            <div className=\"btn\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    htmlType=\"submit\"\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"remember\">\r\n                    <p>Stay Signed In:</p>\r\n                    <div className=\"box\" onClick={() => {\r\n                        let { isRemember } = this.state\r\n                        this.setState({\r\n                            isRemember: !isRemember\r\n                        })\r\n                        storage.isRemember = !isRemember\r\n                    }}>\r\n                        {this.state.isRemember && <img src={dui} alt=\"\" />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectScheduledExam.jsx",["642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectExam\\SelectExam.jsx",["670","671","672","673"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx",["674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698"],"import React, { Component } from 'react'\r\nimport { Input, Menu, message, Select, Calendar, Col, Row, Spin } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport dog from './../../assets/images/pinkdog.png'\r\nimport cat from './../../assets/images/pinkcat.png'\r\nimport redDog from './../../assets/images/reddog.png'\r\nimport redCat from './../../assets/images/redcat.png'\r\nimport redother from './../../assets/images/redother.png'\r\nimport other from './../../assets/images/other.png'\r\nimport selectphoto from './../../assets/images/sel.png'\r\n\r\nimport Close from './../../assets/img/close.png'\r\nimport nextImg from './../../assets/img/nextImg.png'\r\n\r\nimport dui from './../../assets/images/dui.png'\r\nimport female from './../../assets/images/female.png'\r\nimport male from './../../assets/images/male.png'\r\nimport { mTop, px, win } from '../../utils/px';\r\nimport Avatar from './../avatar/Avatar'\r\nimport './editPetInfo.less'\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport electronStore from '../../utils/electronStore';\r\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\r\nimport Button from './../../utils/button/Button'\r\nimport { connect } from 'react-redux';\r\nimport { petDetailInfoFun } from '../../store/actions';\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nclass EditPetInfo extends Component {\r\n  state = {\r\n    dogImg: dog,\r\n    catImg: cat,\r\n    otherImg: other,\r\n    selectWZ: '',\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    api: '',\r\n    id: '',\r\n    seleceID: '',//医生id\r\n    petSpecies: 0,\r\n    unit: 1,\r\n    gender: 0,\r\n    isMix: false,\r\n    imageId: -1,\r\n    imgurl: '',\r\n    breedArr: [],\r\n    petSpeciesBreedId: '',\r\n    dogData: [],\r\n    birthday: moment(new Date()).format('MMMM D, YYYY'),\r\n    patientId: '',\r\n    petName: '',\r\n\r\n    petId: '',\r\n    lastName: '',\r\n    firstName: '',\r\n    breedName: '',\r\n\r\n    initpetName: '',\r\n    initpetId: '',\r\n    initlastName: '',\r\n    initfirstName: '',\r\n    initbreedName: '',\r\n    spin: false,\r\n    dogBreed: [],\r\n    catBreed: [],\r\n\r\n    oldPatientId: '',\r\n    searchBreed: '',\r\n    selectBreedJson: {},\r\n    confirmSelectBreedJson: {},\r\n    selectBreed: false,\r\n\r\n    doctorArr: [],\r\n    selectUser: false,\r\n    selectUserJson: {},\r\n    selectUserId: '',\r\n    confirmSelectUserJson: {},\r\n    petUrl: ''\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big', win())\r\n\r\n\r\n\r\n\r\n    // if (this.props.location.participate) {\r\n    //   let props = this.props.location.participate\r\n    //   console.log(props);\r\n    //   this.setState({\r\n    //     patientId: props.patientId,\r\n    //     petId: props.petId,\r\n    //     oldPatientId: props.patientId,\r\n\r\n    //   }, () => {\r\n    //     this._getPetInfo()\r\n    //   })\r\n    //   console.log(props);\r\n    // } else {\r\n    //   this._getPetInfo()\r\n    // }\r\n    let { petDetailInfo } = this.props\r\n    let { petId, patientId, petName, lastName, firstName, breedName, isWalkIn } = petDetailInfo\r\n    if (!isWalkIn) {\r\n      if (!patientId || patientId === 'unknown') {\r\n        patientId = null\r\n      }\r\n      this.setState({\r\n        patientId,\r\n        petId,\r\n        oldPatientId: patientId,\r\n\r\n      }, () => {\r\n        this._getPetInfo()\r\n      })\r\n    }\r\n\r\n\r\n    let dogBreed = electronStore.get('dogBreed') || []\r\n    let catBreed = electronStore.get('catBreed') || []\r\n    this.setState({\r\n      dogBreed,\r\n      catBreed\r\n    })\r\n    this.getBreed('cat')\r\n    this.getBreed('dog')\r\n    this.getUser()\r\n\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  getBreed = (val) => {\r\n    let data = {}\r\n    switch (val) {\r\n      case 'dog':\r\n        data.speciesId = 2; break;\r\n\r\n      case 'cat':\r\n        data.speciesId = 1; break;\r\n    }\r\n\r\n    fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n      .then(res => {\r\n        // console.log('---', res);\r\n        if (res.code === 0) {\r\n          let arr = []\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName\r\n            }\r\n            arr.push(data)\r\n          })\r\n          if (val === 'dog') {\r\n            this.setState({\r\n              dogBreed: arr\r\n            })\r\n            electronStore.set('dogBreed', arr)\r\n          } else if (val === 'cat') {\r\n            this.setState({\r\n              catBreed: arr\r\n            })\r\n            electronStore.set('catBreed', arr)\r\n          }\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  getUser = () => {\r\n    let params = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    fetchRequest(`/organization/listDoctorsByAdmin/${storage.lastOrganization}`, 'GET', params)\r\n      .then(res => {\r\n        console.log('人员列表', res);\r\n\r\n        if (res.flag === true && res.code === 20000) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              breedName: `${lastName} ${firstName}`,\r\n              petSpeciesBreedId: userId,\r\n              email,\r\n              birthday,\r\n              isLimit,\r\n              isDeleted,\r\n              phone,\r\n              url,\r\n              firstName, lastName, roleId\r\n            }\r\n            data.push(json)\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            doctorArr: data,\r\n            // parentList: data //这里只是测试，后期删除\r\n\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n\r\n      })\r\n  }\r\n\r\n  _getPetInfo = () => {\r\n    let { patientId, petId } = this.state\r\n    let datas = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      datas.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      datas.org = storage.lastOrganization\r\n    }\r\n    if (patientId && patientId !== 'undefined') {\r\n      datas.patientId = patientId\r\n    }\r\n    if (petId) {\r\n      datas.petId = petId\r\n    }\r\n    this.setState({\r\n      spin: true\r\n    })\r\n\r\n\r\n\r\n    console.log('入参：', datas);\r\n    fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n      .then(res => {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        console.log('>>>>>>>>>>>>>>', res);\r\n        if (res.flag === true) {\r\n          //有宠物，进入1\r\n          let datas = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            if (res.data[i].petId === this.state.petId) {\r\n              datas = res.data[i]\r\n              break\r\n            }\r\n          }\r\n          console.log('获取到宠物', datas);\r\n          let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url, gender, speciesId, petSpeciesBreedId } = datas\r\n\r\n          if (isMix !== true) {\r\n            isMix = false\r\n          }\r\n          petName = isNull(petName)\r\n          lastName = isNull(lastName)\r\n          firstName = isNull(firstName)\r\n          breedName = isNull(breedName)\r\n\r\n          let confirmSelectBreedJson = {}\r\n          if (petSpeciesBreedId || petSpeciesBreedId === 0) {\r\n            confirmSelectBreedJson = {\r\n              name: breedName,\r\n              petSpeciesBreedId\r\n            }\r\n          }\r\n\r\n          url = isNull(url)\r\n          if (birthday != null) {\r\n            birthday = moment(birthday).format('MMMM D, YYYY')\r\n          }\r\n          else {\r\n            birthday = ''\r\n          }\r\n          if (gender === null || gender === NaN || `${gender}` === 'null' || `${gender}` === 'NaN') {\r\n            gender = 0\r\n          }\r\n          if (weight) {\r\n            weight = (weight * 2.2046).toFixed(1)\r\n          } else {\r\n            weight = ''\r\n          }\r\n\r\n\r\n          this.setState({\r\n            petId,\r\n            petName,\r\n            lastName,\r\n            firstName,\r\n            breedName,\r\n            isMix,\r\n            birthday,\r\n            weight,\r\n            imgurl: url,\r\n            gender,\r\n            petSpecies: speciesId,\r\n\r\n\r\n            initpetName: petName,\r\n            initlastName: lastName,\r\n            initfirstName: firstName,\r\n            confirmSelectBreedJson,\r\n            petSpeciesBreedId\r\n          })\r\n          switch (speciesId) {\r\n            case 1: this.selectWZ('cat'); break;\r\n            case 2: this.selectWZ('dog'); break;\r\n\r\n            default: this.selectWZ('other'); break;\r\n          }\r\n\r\n        } else {\r\n          message.destroy()\r\n          message.error('data load failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        console.log(err);\r\n        message.destroy()\r\n        message.error('data load failed')\r\n      })\r\n    const isNull = (value) => {\r\n      if (value === null || value === NaN || `${value}` === 'null' || `${value}` === 'NaN') {\r\n        return ''\r\n      } else {\r\n        return value\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n  /**------------------顶部end------------------------ */\r\n  selectWZ = (val) => {\r\n    let { catBreed, dogBreed } = this.state\r\n    switch (val) {\r\n      case 'dog':\r\n        this.setState({\r\n          catImg: cat,\r\n          dogImg: redDog,\r\n          otherImg: other,\r\n          selectWZ: val,\r\n          breedArr: [].concat(dogBreed)\r\n        })\r\n\r\n        break;\r\n\r\n      case 'cat':\r\n        this.setState({\r\n          catImg: redCat,\r\n          dogImg: dog,\r\n          otherImg: other,\r\n          selectWZ: val,\r\n          breedArr: [].concat(catBreed)\r\n        })\r\n\r\n        break;\r\n\r\n      case 'other':\r\n        this.setState({\r\n          catImg: cat,\r\n          dogImg: dog,\r\n          otherImg: redother,\r\n          selectWZ: val,\r\n          breedArr: []\r\n        })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  _petSpecies = () => {\r\n    let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\r\n\r\n    this.avatar = imgurl ? imgurl : selectphoto\r\n\r\n    return (\r\n      <div className=\"petSpecies\"\r\n        style={{ marginTop: mTop(30) }}\r\n      >\r\n        <div className=\"l\">\r\n          <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\r\n          <div className=\"selectSpecies\">\r\n            <ul>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog'\r\n\r\n                    onClick={() => { this.selectWZ('dog') }}>\r\n                    <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\r\n                  </div>\r\n                  Dog\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this.selectWZ('cat') }} >\r\n                    <img src={catImg} alt=\"\" style={{ width: px(40) }} />\r\n                  </div>\r\n                  Cat\r\n                </div>\r\n              </li>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this.selectWZ('other') }} >\r\n                    <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\r\n                  </div>\r\n                  Other\r\n                </div>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"r\">\r\n          {/* <div className=\"img\"\r\n                    style={{ width: px(110), height: px(110) }}\r\n                >\r\n                    <div className=\"ciral\" onClick={() => {\r\n                        let file = document.getElementById('f')\r\n                        file.click();\r\n                    }}>\r\n                        <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                        <input type=\"file\" accept=\"image/gif,image/jpeg,image/jpg,image/png,image/svg\" className=\"uploadImg\" id=\"f\" onChange={(e) => {\r\n                            console.log(e);\r\n                            let $target = e.target || e.srcElement\r\n                            if ($target.files.length === 0) {\r\n                                return;\r\n                            }\r\n                            let file = $target.files[0]\r\n                            var reader = new FileReader()                   //创建文件阅读器实例\r\n                            reader.readAsDataURL(file)\r\n                            reader.onload = (data) => {\r\n                                let res = data.target || data.srcElement\r\n                                console.dir(document.getElementById('touxiang'));\r\n                                document.getElementById('touxiang').src = res.result\r\n\r\n\r\n                                const formData = new FormData();\r\n                                formData.append('img', file);\r\n                                fetch(`${url}/image/uploadImage`, {\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                    },\r\n                                    body: formData\r\n                                })\r\n                                    .then((response) => response.json())\r\n                                    .then((res) => {\r\n                                        console.log(res);\r\n                                        if (res.flag === true) {\r\n                                            this.setState({\r\n                                                imageId: res.data.imageId,\r\n                                                imgurl: res.data.url\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        console.log(err);\r\n                                    });\r\n                            }\r\n\r\n                        }} />\r\n                        <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                    </div>\r\n                </div> */}\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n              getAllInfo={(val) => {\r\n                console.log('所有的信息', val);\r\n                if (val.url) {\r\n                  this.setState({\r\n                    petUrl: val.url\r\n                  })\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _petName = () => {\r\n\r\n    const onPanelChange = (value, mode) => {\r\n      console.log('-----', value, mode);\r\n    }\r\n    let birthday = this.state.birthday\r\n    let birthdayValue = birthday ? moment(birthday) : moment(new Date())\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\r\n        <div className=\"l\">\r\n          <p >Pet Name</p>\r\n          <div className=\"infoInput\">\r\n            <Input\r\n              bordered={false}\r\n              value={this.state.initpetName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  petName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n                  initpetName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <p >Pet Birthday</p>\r\n          <div className=\"infoInput\" >\r\n            <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\r\n              document.getElementById('calendar').style.display = 'block'\r\n            }}>{this.state.birthday}</p>\r\n            <div className=\"calendar\" id=\"calendar\">\r\n              <Calendar\r\n                fullscreen={false}\r\n                headerRender={({ value, type, onChange, onTypeChange }) => {\r\n                  const start = 0;\r\n                  const end = 12;\r\n                  const monthOptions = [];\r\n\r\n                  const current = value.clone();\r\n                  const localeData = value.localeData();\r\n                  const months = [];\r\n                  for (let i = 0; i < 12; i++) {\r\n                    current.month(i);\r\n                    months.push(localeData.monthsShort(current));\r\n                  }\r\n\r\n                  for (let index = start; index < end; index++) {\r\n                    monthOptions.push(\r\n                      <Select.Option className=\"month-item\" key={`${index}`}>\r\n                        {months[index]}\r\n                      </Select.Option>\r\n                    );\r\n                  }\r\n                  const month = value.month();\r\n\r\n                  const year = value.year();\r\n                  const options = [];\r\n                  for (let i = year - 10; i < year + 10; i += 1) {\r\n                    options.push(\r\n                      <Select.Option key={i} value={i} className=\"year-item\">\r\n                        {i}\r\n                      </Select.Option>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <div style={{ padding: 8 }}>\r\n                      <Row gutter={8}>\r\n                        <Col>\r\n                          <Select\r\n                            size=\"small\"\r\n                            dropdownMatchSelectWidth={false}\r\n                            className=\"my-year-select\"\r\n                            onChange={(newYear) => {\r\n                              const now = value.clone().year(newYear);\r\n                              onChange(now);\r\n                            }}\r\n                            value={String(year)}\r\n                          >\r\n                            {options}\r\n                          </Select>\r\n                        </Col>\r\n                        <Col>\r\n                          <Select\r\n                            size=\"small\"\r\n                            dropdownMatchSelectWidth={false}\r\n                            value={String(month)}\r\n                            onChange={(selectedMonth) => {\r\n                              const newValue = value.clone();\r\n                              newValue.month(parseInt(selectedMonth, 10));\r\n                              onChange(newValue);\r\n                            }}\r\n                          >\r\n                            {monthOptions}\r\n                          </Select>\r\n                        </Col>\r\n                        {/* <Col>\r\n                          <div className=\"btn\" onClick={() => {\r\n                            document.getElementById('calendar').style.display = 'none'\r\n                          }}>\r\n                            Choose this date\r\n                          </div>\r\n\r\n                        </Col> */}\r\n                      </Row>\r\n                    </div>\r\n                  );\r\n                }}\r\n                value={birthdayValue}\r\n                onSelect={(value) => {\r\n                  console.log(value);\r\n                  this.setState({\r\n                    birthday: moment(value).format('MMMM D, YYYY')\r\n                  })\r\n                  document.getElementById('calendar').style.display = 'none'\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _ownName = () => {\r\n    let { confirmSelectUserJson } = this.state\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(18), alignItems: 'flex-end' }}\r\n      >\r\n        <div className=\"l\">\r\n\r\n          <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\r\n          <div className=\"infoInput\">\r\n            <Input bordered={false}\r\n              value={this.state.patientId}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  patientId: item.target.value.replace(/\\s/g, \"\"),\r\n                  intFlog: true\r\n\r\n                })\r\n                if (item.target.value !== errPatientId) {\r\n                  message.destroy()\r\n                }\r\n              }}\r\n              onBlur={() => {\r\n                message.destroy()\r\n                console.log('我离开光标了');\r\n                if (this.state.patientId === this.state.oldPatientId) {\r\n                  return\r\n                }\r\n\r\n                let params = {\r\n                  patientId: this.state.patientId,\r\n                  doctorId: storage.userId\r\n                }\r\n                if (storage.lastWorkplaceId) {\r\n                  params.workplaceId = storage.lastWorkplaceId\r\n                }\r\n\r\n                fetchRequest(`/pet/checkPatientId`, \"GET\", params)\r\n                  .then(res => {\r\n                    console.log(res);\r\n                    if (res.flag === false) {\r\n                      errPatientId = params.patientId\r\n                      message.destroy()\r\n                      message.error('This patient ID is already occupied, please change to a new one', 0)\r\n                    } else {\r\n                      errPatientId = ''\r\n                    }\r\n\r\n                  })\r\n                  .catch(err => {\r\n                    console.log(err);\r\n\r\n                  })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"r\">\r\n          <div className=\"infoInput flex\"\r\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer', }}\r\n            onClick={() => {\r\n\r\n              this.setState({\r\n                // selectUser: true\r\n              })\r\n            }}\r\n          >\r\n\r\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectUserJson.name ? confirmSelectUserJson.name : 'My Parents'}</div>\r\n            <div className=\"nextimg\" >\r\n              <img src={nextImg} style={{ height: px(15) }} />\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n    // return (\r\n    //   <div className=\"petName\" style={{ marginTop: mTop(30) }}>\r\n    //     <div className=\"l\">\r\n    //       <p >Owner First Name</p>\r\n    //       <div className=\"infoInput\">\r\n    //         <Input bordered={false}\r\n    //           value={this.state.initfirstName}\r\n    //           onChange={(item) => {\r\n\r\n    //             this.setState({\r\n    //               firstName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n    //               initfirstName: item.target.value\r\n    //             })\r\n    //           }}\r\n\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n\r\n    //     <div className=\"r\">\r\n    //       <p >Owner Last Name</p>\r\n    //       <div className=\"infoInput\">\r\n    //         <Input bordered={false}\r\n    //           value={this.state.initlastName}\r\n    //           onChange={(item) => {\r\n\r\n    //             this.setState({\r\n    //               lastName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n    //               initlastName: item.target.value\r\n    //             })\r\n    //           }}\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n\r\n    // )\r\n  }\r\n  _select = (value, data) => {\r\n    console.log(value, data);  //value的值为id\r\n    this.setState({\r\n      petSpeciesBreedId: value,\r\n      breedName: data.children\r\n    })\r\n  }\r\n  _primaryBreed = () => {\r\n    let options = null\r\n    // switch (this.state.petSpecies) {\r\n    //     case 2: options = this.state.catData.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>); break;\r\n    //     case 1: options = this.state.dogData.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>); break;\r\n    // }\r\n    options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\r\n    let { breedName, confirmSelectBreedJson } = this.state\r\n    // console.log('-----breedName:', confirmSelectBreedJson);\r\n\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(30), alignItems: 'flex-end', }}>\r\n        <div className=\"l\">\r\n          {/* <p >Primary Breed</p>\r\n          <div className=\"infoInput\">\r\n            <Select\r\n              showSearch\r\n              style={{ width: '100%' }}\r\n              bordered={false}\r\n              value={breedName}\r\n              // size = {'small'}        \r\n              placeholder=\"Search to Select\"\r\n              optionFilterProp=\"children\"\r\n              listHeight={256}\r\n              onSelect={(value, data) => this._select(value, data)}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n            >\r\n              {options}\r\n            </Select>\r\n          </div> */}\r\n          <div className=\"infoInput flex\"\r\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\r\n            onClick={() => {\r\n              this.setState({\r\n                selectBreed: true\r\n              })\r\n            }}\r\n          >\r\n\r\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'}</div>\r\n            <div className=\"nextimg\" >\r\n              <img src={nextImg} style={{ height: px(15) }} />\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"r\" >\r\n          <div className=\"max\">\r\n            Mix?\r\n            <div className=\"selected\"\r\n              onClick={() => this.setState({\r\n                isMix: !this.state.isMix\r\n              })}\r\n            >\r\n              {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _weight = () => {\r\n    let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\r\n    switch (this.state.unit) {\r\n      case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\r\n      case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\r\n    }\r\n\r\n    switch (this.state.gender) {\r\n      case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\r\n      case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\r\n        <div className=\"l\">\r\n          <p >Pet Weight</p>\r\n          <div className=\"infoInput\">\r\n            <Input bordered={false}\r\n              value={this.state.weight}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  weight: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n            <div className=\"ibKg\">\r\n              <div className=\"ibs\"\r\n                style={{ backgroundColor: ibBgcColor, color: ibCor }}\r\n                onClick={() => {\r\n                  if (this.state.unit === 2) {\r\n\r\n                    this.setState({\r\n                      unit: 1,\r\n                      weight: (this.state.weight * 2.2046).toFixed(1)\r\n                    })\r\n                  }\r\n                }}\r\n              >Ibs</div>\r\n              <div className=\"kgs\"\r\n                style={{ backgroundColor: kgBgcColor, color: kgCor }}\r\n                onClick={() => {\r\n\r\n                  if (this.state.unit === 1) {\r\n\r\n                    this.setState({\r\n                      unit: 1,\r\n                      weight: (this.state.weight / 2.2046).toFixed(1)\r\n                    })\r\n                  }\r\n                  this.setState({ unit: 2 })\r\n                }}\r\n              >kgs</div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\r\n          <div className=\"gender\">\r\n            <div className=\"selectGender\">\r\n              <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\r\n                <div className=\"femaleCiral\"\r\n                  style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\r\n                  onClick={() => this.setState({ gender: 1 })}\r\n                >\r\n                  <img src={female} alt=\"\" style={{ width: px(15) }} />\r\n                </div>\r\n                Female\r\n              </div>\r\n              <div className=\"male\" style={{ fontSize: px(18) }}>\r\n                <div className=\"maleCiral\"\r\n                  style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\r\n                  onClick={() => this.setState({ gender: 0 })}\r\n                >\r\n                  <img src={male} alt=\"\" style={{ width: px(20) }} />\r\n                </div>\r\n                Male\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { closeColor, closebgc, minbgc } = this.state\r\n\r\n    return (\r\n      <div id=\"editPetInfo\">\r\n        {/* 头部 */}\r\n        <div className=\"close1\">\r\n          {/* 菜单 */}\r\n          <div className=\"menu\">\r\n\r\n            <MyIcon type='icon-fanhui4' className=\"icon\" onClick={() => {\r\n              // if (storage.goEditPet === \"mesasure\") {\r\n              //   this.props.history.push({ pathname: 'page8', participate: { patientId: this.state.patientId } })\r\n              // } else {\r\n              //   this.props.history.goBack()\r\n              // }\r\n              this.props.history.goBack()\r\n            }} />\r\n          </div>\r\n          <div className=\"text\">mella</div>\r\n          <div className='maxmin'>\r\n            <div\r\n              className=\"min iconfont icon-64\"\r\n              onClick={this._min}\r\n              onMouseEnter={this._minMove}\r\n              onMouseLeave={this._minLeave}\r\n              style={{ backgroundColor: minbgc }}\r\n            ></div>\r\n\r\n            <div\r\n              className=\"max iconfont icon-guanbi2\"\r\n              onClick={this._close}\r\n              onMouseEnter={this._closeMove}\r\n              onMouseLeave={this._closeLeave}\r\n              style={{ backgroundColor: closebgc, color: closeColor }}\r\n            ></div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"editPetInfo_top\">\r\n          <div className=\"title\">{`${this.state.patientId}, ${this.state.petName}`}</div>\r\n          {this._petSpecies()}\r\n          {this._petName()}\r\n          {this._ownName()}\r\n          {this._primaryBreed()}\r\n          {this._weight()}\r\n        </div>\r\n        <div className=\"editPetInfo_foot\">\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              let { petName, birthday, firstName, lastName, petSpeciesBreedId, isMix, weight, gender, unit, imageId, breedName, petId, confirmSelectBreedJson, confirmSelectUserJson } = this.state\r\n              console.log('生日：', birthday);\r\n              if (unit === 1) {\r\n                weight = (0.45359 * weight).toFixed(2)\r\n              }\r\n\r\n              let data = {\r\n                petName,\r\n                weight: parseFloat(weight),\r\n                gender,\r\n                firstName,\r\n                lastName,\r\n              }\r\n              if (birthday) {\r\n                data.birthday = moment(birthday).format('YYYY-MM-DD')\r\n              }\r\n              if (imageId !== -1) {\r\n                data.imageId = imageId\r\n              }\r\n              // if (breedName) {\r\n              //   data.breedName = breedName\r\n              // }\r\n              if (confirmSelectBreedJson.name) {\r\n                data.breedName = confirmSelectBreedJson.name\r\n              }\r\n              if (confirmSelectUserJson.petSpeciesBreedId) {\r\n                data.userId = confirmSelectUserJson.petSpeciesBreedId\r\n              }\r\n\r\n              console.log('------', data);\r\n              this.setState({\r\n                spin: true\r\n              })\r\n              fetchRequest(`/pet/updatePetInfo/${petId}`, 'POST', data)\r\n                .then(res => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  console.log(res);\r\n                  if (res.flag === true) {\r\n                    try {\r\n                      if (storage.identity === '3') {\r\n                        let data = JSON.parse(storage.doctorExam)\r\n                        data.petName = petName\r\n                        data.weight = weight\r\n                        data.gender = gender\r\n                        data.patientId = this.state.patientId\r\n                        if (birthday) {\r\n                          data.age = moment(new Date()).diff(moment(birthday), 'years')\r\n                        }\r\n                        if (confirmSelectBreedJson.name) {\r\n                          data.breed = confirmSelectBreedJson.name\r\n                        }\r\n                        if (this.state.petUrl) {\r\n                          data.url = this.state.petUrl\r\n                        }\r\n\r\n                        storage.doctorExam = JSON.stringify(data)\r\n                      }\r\n                    } catch (error) {\r\n\r\n                    }\r\n                    console.log('从哪来', storage.goEditPet);\r\n                    // if (storage.goEditPet === \"mesasure\") {\r\n                    //   this.props.history.replace({ pathname: 'page8', participate: { patientId: this.state.patientId } })\r\n                    // } else {\r\n                    //   this.props.history.goBack()\r\n                    // }\r\n\r\n                    this.props.petDetailInfoFun({ ...this.props.petDetailInfo, petName, birthday, patientId: this.state.patientId })\r\n                    this.props.history.goBack()\r\n\r\n\r\n\r\n                  } else {\r\n                    message.error('Update failed')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  console.log(err);\r\n                })\r\n            }}\r\n\r\n          >Save Changes</div>\r\n\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n        <MyModal\r\n          // visible={true}\r\n          visible={this.state.selectBreed}\r\n          element={\r\n            <div className='myfindOrg' >\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div>\r\n\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        selectBreed: false,\r\n                        selectBreedJson: {}\r\n                      })\r\n                    }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"text\" >Choose Breed</div>\r\n\r\n                <div className=\"searchBox\">\r\n\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search name\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.searchBreed}\r\n                    onChange={(item) => {\r\n\r\n                      this.setState({\r\n                        searchBreed: item.target.value\r\n                      })\r\n                    }}\r\n\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"list\" >\r\n                <PhoneBook\r\n                  listDate={this.state.breedArr}\r\n                  confirmSelectBreed={this.state.petSpeciesBreedId}\r\n                  selectFun={(val) => {\r\n                    // console.log('从子组件传来的数据', val);\r\n                    this.setState({\r\n                      selectBreedJson: val,\r\n                      petSpeciesBreedId: val.petSpeciesBreedId\r\n                    })\r\n\r\n\r\n                  }}\r\n                  searchText={this.state.searchBreed}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"foot\">\r\n                <Button\r\n                  text={'Select'}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      confirmSelectBreedJson: this.state.selectBreedJson,\r\n                      selectBreed: false\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <MyModal\r\n          visible={this.state.selectUser}\r\n          element={\r\n            <div className='myfindOrg' >\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div>\r\n\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        selectUser: false,\r\n                        selectUserJson: {}\r\n                      })\r\n                    }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"text\" >Choose Parents</div>\r\n\r\n                <div className=\"searchBox\">\r\n\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search name\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.searchBreed}\r\n                    onChange={(item) => {\r\n\r\n                      this.setState({\r\n                        searchBreed: item.target.value\r\n                      })\r\n                    }}\r\n\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"list\" >\r\n                <PhoneBook\r\n                  listDate={this.state.doctorArr}\r\n                  confirmSelectBreed={this.state.selectUserId}\r\n                  selectFun={(val) => {\r\n\r\n                    this.setState({\r\n                      selectUserJson: val,\r\n                      selectUserId: val.petSpeciesBreedId\r\n                    })\r\n\r\n\r\n                  }}\r\n                  searchText={this.state.searchBreed}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"foot\">\r\n                <Button\r\n                  text={'Select'}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      confirmSelectUserJson: this.state.selectUserJson,\r\n                      selectUser: false\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n\r\n            </div>\r\n          }\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default connect(\r\n  state => ({\r\n    petDetailInfo: state.petReduce.petDetailInfo\r\n  }),\r\n  { petDetailInfoFun }\r\n)(EditPetInfo)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\SignIn.jsx",["699","700","701","702","703","704","705","706","707","708","709","710","711","712","713"],"import React, { Component } from 'react'\r\nimport { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './signIn.less'\r\nimport mellaLogo from './../../assets/images/mellaLogo.png'\r\nimport dui from './../../assets/images/dui.png'\r\nimport back_white from './../../assets/img/back-white.png'\r\nimport back_hui from './../../assets/img/back-hui.png'\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\r\nimport temporaryStorage from '../../utils/temporaryStorage';\r\nimport { fetchRequest1 } from '../../utils/FetchUtil';\r\nimport { mTop, px, MTop, pX, win } from '../../utils/px';\r\nimport MinClose from './../../utils/minClose/MinClose'\r\nimport MouseDiv from './../../utils/mouseDiv/MouseDiv'\r\nimport { addLogin, addQRCode } from '../../utils/axios';\r\nlet storage = window.localStorage;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet num = 0\r\n//有可能出现,登录成功跳转后获取到了二维码,这样就会导致出现一直轮询,未解决这个问题设置变量isSign\r\nlet isSign = true\r\n\r\nexport default class SignIn extends Component {\r\n\r\n  state = {\r\n    isRemember: false,\r\n    email: '',\r\n    hash: '',\r\n    isCode: false,\r\n    baseUrl: '',\r\n    QRToken: '',\r\n    isExpired: false,  //二维码是否过期\r\n    spin: false,\r\n    isLoadQrCode: false //是否正在加载二维码\r\n\r\n  }\r\n  componentDidMount() {\r\n    isSign = true\r\n    storage.lastOrganization = ''\r\n    //通知main.js渲染一个small窗口\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small', win())\r\n    //如果有保存的账号密码则展示出来\r\n    if (storage.signIn !== undefined && storage.signIn !== '') {\r\n      let data = storage.signIn\r\n      data = JSON.parse(data)\r\n      this.setState({\r\n        email: data.email,\r\n        hash: data.hash,\r\n        QRToken: ''\r\n      })\r\n    }\r\n    //是否勾选了保持登录\r\n    if (storage.isRemember !== undefined) {\r\n      let isRemember = storage.isRemember === 'true' ? true : false\r\n      this.setState({\r\n        isRemember\r\n      })\r\n    }\r\n    // 监听分辨率是否改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    //清空本地的注册界面的信息\r\n    temporaryStorage.logupVetInfo = {}\r\n    this._getQRCode()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    isSign = false\r\n    this.timer && clearInterval(this.timer)\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    // ipcRenderer.send('small')\r\n    ipcRenderer.send('small', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _getQRCode = () => {\r\n    this.setState({\r\n      isLoadQrCode: true\r\n    })\r\n    num = 0\r\n    fetchRequest2('/user/getLoginQRcode', \"GET\", '')\r\n      // addQRCode()\r\n      .then(res => {\r\n        message.destroy()\r\n\r\n        console.log('---获取二维码', res);\r\n        if (res.flag === true) {\r\n          this.setState({\r\n            baseUrl: res.data.QRcode,\r\n            QRToken: res.data.QRToken,\r\n            isLoadQrCode: false\r\n          })\r\n          this.timer = setInterval(() => {\r\n            if (!isSign) {\r\n              this.timer && clearInterval(this.timer)\r\n\r\n            }\r\n            num++\r\n            console.log('lunxin');\r\n            this._polling()\r\n\r\n            if (num > 280) {   //超过280秒则去显示二维码过期，要重新获取\r\n              this.setState({\r\n                isExpired: true\r\n              })\r\n              num = 0\r\n              this.timer && clearInterval(this.timer)\r\n            }\r\n          }, 1000);\r\n        } else {\r\n          message.error('Failed to obtain QR code', 10)\r\n          this.setState({\r\n            isLoadQrCode: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        message.error('Failed to obtain QR code', 10)\r\n        this.setState({\r\n          isLoadQrCode: false\r\n        })\r\n        console.log(err);\r\n      })\r\n  }\r\n  //轮询\r\n  _polling = () => {\r\n    fetchRequest2(`/user/loginWithQRcode/${this.state.QRToken}`)\r\n      .then(res => {\r\n        console.log('轮询结果：', res);\r\n        if (res.flag === true) {\r\n          switch (res.code) {\r\n            case 10001:\r\n              console.log('未扫码');\r\n\r\n              break;\r\n\r\n            case 11033:\r\n              console.log('扫码未点击登录');\r\n              this.timer && clearInterval(this.timer)\r\n              temporaryStorage.QRToken = this.state.QRToken\r\n              let { name, url } = res.data\r\n              this.props.history.replace({ pathname: '/user/login/scanCodeLogin', params: { name, url } })\r\n\r\n              break;\r\n\r\n            case 11023:\r\n              console.log('过期');\r\n              this.setState({\r\n                isExpired: true\r\n              })\r\n              num = 0\r\n              this.timer && clearInterval(this.timer)\r\n\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n        }\r\n        console.log('code', res.code);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n\r\n  //登录接口\r\n  _continue = () => {\r\n    const { email, hash, isRemember } = this.state\r\n\r\n\r\n    message.destroy()\r\n    let params = {\r\n      email: email.replace(/(^\\s*)/g, \"\"),\r\n      hash,\r\n      identityTypeId: '1'\r\n    }\r\n    if (email === '') {\r\n      message.error('please input your email')\r\n      return\r\n    }\r\n    if (hash === '') {\r\n      message.error('please input your password')\r\n      return\r\n    }\r\n    console.log(params);\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    // fetchRequest('/user/mellaLogin', 'POST', params)\r\n    addLogin(params)\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        if (res.status && res.status === 404) {\r\n          message.error('system error');\r\n          return\r\n        }\r\n        if (res.status === 500) {\r\n          message.error('system error');\r\n\r\n          return\r\n        }\r\n        if (res.code === 10001 && res.msg === '账号错误') {\r\n          message.error('Account error');\r\n          return\r\n        }\r\n        if (res.code === 10002 && res.msg === '密码错误') {\r\n          message.error('wrong password')\r\n          return;\r\n        }\r\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\r\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\r\n          return\r\n        }\r\n        if (res.code === 10004 && res.msg === '账号被限制') {\r\n          message.error('The account is restricted, please contact the management', 10)\r\n          return\r\n        }\r\n        if (res.code === 10003) {\r\n          message.error('The password or email is incorrect, please re-enter')\r\n          return\r\n        }\r\n\r\n\r\n        if (res.code === 0 && res.msg === 'success') {\r\n          this.timer && clearInterval(this.timer)\r\n          console.log('账号密码正确，登录进去了');\r\n          let { userWorkplace, lastOrganization, token } = res.success\r\n          storage.token = token\r\n          storage.userId = ''\r\n          let data = {\r\n            email: email.replace(/(^\\s*)/g, \"\"),\r\n            hash\r\n          }\r\n          data = JSON.stringify(data)\r\n          if (isRemember === true) {\r\n\r\n\r\n            storage.signIn = data\r\n          } else {\r\n            storage.signIn = ''\r\n          }\r\n          storage.saveSign = data\r\n\r\n\r\n          storage.userId = res.success.userId\r\n          storage.roleId = res.success.roleId\r\n\r\n          //每次登陆后清空宠物列表缓存的数据\r\n          storage.doctorList = ''\r\n          storage.defaultCurrent = ''\r\n\r\n          //由于后台接口原因，导致这里的最后工作场所可能不是自己的，因此下面全注释掉。改成如果有多个工作场所则跳转到选择工作场所界面，不是多个则跳转到选择宠物界面\r\n          if (res.success.lastWorkplaceId) {\r\n            storage.lastWorkplaceId = res.success.lastWorkplaceId\r\n          } else {\r\n            storage.lastWorkplaceId = ''\r\n          }\r\n\r\n          if (res.success.lastOrganization) {\r\n            storage.lastOrganization = res.success.lastOrganization\r\n          } else {\r\n            storage.lastOrganization = ''\r\n          }\r\n\r\n\r\n          console.log('----------', userWorkplace, userWorkplace.length);\r\n\r\n          if (userWorkplace) {\r\n            storage.userWorkplace = JSON.stringify(userWorkplace)\r\n            let connectionKey = ''\r\n            for (let i = 0; i < userWorkplace.length; i++) {\r\n              const element = userWorkplace[i];\r\n              if (element.organizationEntity) {\r\n                if (element.organizationEntity.organizationId === lastOrganization) {\r\n\r\n                  if (element.organizationEntity.connectionKey) {\r\n                    connectionKey = element.organizationEntity.connectionKey\r\n                  }\r\n                  if (element.roleId) {\r\n                    console.log(element.roleId);\r\n                    storage.roleId = element.roleId\r\n                  }\r\n\r\n                  break\r\n                }\r\n              }\r\n\r\n            }\r\n            console.log('----------key值为：', connectionKey);\r\n            storage.connectionKey = connectionKey\r\n\r\n          } else {\r\n            storage.userWorkplace = ''\r\n            storage.connectionKey = ''\r\n\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          this.props.history.push('/MainBody')\r\n        }\r\n\r\n\r\n\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        console.log(err);\r\n      })\r\n\r\n\r\n  }\r\n\r\n  _signUp = (e) => {\r\n    e.preventDefault();\r\n    this.props.history.push('/uesr/logUp/VetPrifile')\r\n  }\r\n  _change = () => {\r\n    let { isCode } = this.state\r\n    message.destroy()\r\n    if (isCode === false) {\r\n      this._getQRCode()\r\n    } else {\r\n      this.timer && clearInterval(this.timer)\r\n      num = 0\r\n      this.setState({\r\n        isExpired: false\r\n      })\r\n    }\r\n    this.setState({ isCode: !this.state.isCode })\r\n  }\r\n  //二维码界面\r\n  _qrCode = () => {\r\n    let { isCode, baseUrl, isExpired, isLoadQrCode } = this.state\r\n    let imgOpacity = isLoadQrCode\r\n      ? baseUrl ? '0.1' : 0.5\r\n      : '1'\r\n\r\n\r\n    if (!isExpired) {\r\n      const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\r\n      return (\r\n        <div className=\"qrcode\" >\r\n          <img\r\n            src={`data:image/jpeg;base64,${baseUrl}`}\r\n            alt=\"\"\r\n            style={{ opacity: '1', width: px(120), height: px(120), opacity: imgOpacity }}\r\n\r\n          />\r\n          {\r\n            isLoadQrCode &&\r\n            // true &&\r\n\r\n            <div className=\"err\">\r\n              <Spin\r\n                indicator={antIcon}\r\n                tip=\"Loading...\"\r\n                style={{ fontSize: 16, color: '#e1206d', }} />\r\n            </div>\r\n\r\n          }\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"qrcode\">\r\n          <img src={`data:image/jpeg;base64,${baseUrl}`} alt=\"\" style={{ opacity: '0.1', width: px(120), height: px(120), }} />\r\n\r\n          <div className=\"err\">\r\n            <div className=\"errText\">QR code has expired</div>\r\n            <div className=\"btn\"\r\n              style={{ width: px(145), height: px(35), marginTop: px(10) }}\r\n              onClick={this.refresh}>Refresh</div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n\r\n  }\r\n  //点击refresh按钮\r\n  refresh = () => {\r\n    this.setState({\r\n      isExpired: false\r\n    })\r\n    num = 0\r\n    this._getQRCode()\r\n\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  render() {\r\n    let { isCode, baseUrl } = this.state\r\n    let code = isCode ? 'icon-diannao-copy' : 'icon-erweima-copy'\r\n    return (\r\n      <div id=\"signIn\">\r\n        <div className=\"heaed\" style={{ paddingTop: px(10), paddingRight: px(20) }}>\r\n          <div className=\"l\" >\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.push('/')\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" >\r\n          <div className=\"logo\">\r\n            <img src={mellaLogo} alt=\"\" style={{ width: px(120) }} />\r\n          </div>\r\n          <div className=\"body\" style={{ position: 'relative' }}>\r\n            <div className=\"text\"\r\n              style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(30), }}\r\n            >\r\n              Please enter email <br />and password\r\n            </div>\r\n\r\n            <div className=\"inpF\">\r\n              <Input className='inp'\r\n                style={{ width: px(310), height: px(45), marginLeft: px(6), marginBottom: px(18), fontSize: px(18) }}\r\n                value={this.state.email}\r\n                placeholder='rachel@friends.com'\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  let str = item.target.value\r\n                  this.setState({\r\n                    email: str\r\n                  })\r\n                }}\r\n              />\r\n              <Input.Password className='inp'\r\n                style={{ width: px(310), height: px(45), marginLeft: px(6), marginBottom: px(18), fontSize: px(18) }}\r\n\r\n                visibilityToggle={false}\r\n                value={this.state.hash}\r\n                placeholder='********'\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  let str = item.target.value\r\n                  this.setState({\r\n                    hash: str\r\n                  })\r\n                }}\r\n                onKeyDown={(e) => {\r\n\r\n                  if (e.keyCode === 13) {\r\n                    this._continue()\r\n                  }\r\n                }}\r\n              />\r\n\r\n              <div className=\"text\"\r\n                style={{ fontSize: px(28), lineHeight: px(1), marginTop: px(10), marginBottom: px(20) }}\r\n              >\r\n                {'Or scan QR Code'}\r\n              </div>\r\n            </div>\r\n\r\n            {\r\n              this._qrCode()\r\n            }\r\n            <div className=\"littleText flex\" style={{ fontSize: px(12), marginTop: px(10), marginBottom: px(10) }}>\r\n              Go to your Mella mobile app to access<br />\r\n              the QR scanner\r\n            </div>\r\n            <div className=\"stay\" >\r\n              <div className=\"remember\">\r\n                <p style={{ fontSize: px(16) }}>Stay Signed In</p>\r\n                <div className=\"box\"\r\n                  style={{ width: px(20), height: px(20), marginLeft: px(12) }}\r\n                  onClick={() => {\r\n                    let { isRemember } = this.state\r\n                    this.setState({\r\n                      isRemember: !isRemember\r\n                    })\r\n                    storage.isRemember = !isRemember\r\n\r\n                  }}>\r\n                  {this.state.isRemember && <img src={dui} alt=\"\" />}\r\n                </div>\r\n              </div>\r\n              <div className=\"forgot\"\r\n                style={{ fontSize: px(16) }}\r\n                onMouseDown={() => {\r\n                  let forget = document.querySelectorAll('#signIn .forgot')\r\n                  forget[0].style.opacity = 0.5\r\n                }}\r\n                onMouseUp={() => {\r\n                  document.querySelectorAll('#signIn .forgot')[0].style.opacity = 1\r\n                  if (this.state.email) {\r\n                    temporaryStorage.forgotPassword_email = this.state.email\r\n                  }\r\n\r\n                  this.props.history.push('/user/login/forgotPassword')\r\n                }}\r\n              >Forgot?</div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"button11\" style={{ backgroundColor: '#E7E7E7', padding: `${px(32)}px 0` }} >\r\n\r\n          <div className=\"btn1 flex\"\r\n            onClick={this._continue}\r\n            style={{ height: px(40) }}>\r\n            <p>{`CONTINUE`}</p>\r\n          </div>\r\n\r\n          <div className=\"text2\" style={{ marginTop: px(12) }}>\r\n            <p style={{ fontSize: px(17) }}>Do not have an account? <a href=\"#\" onClick={this._signUp}>Sign Up</a></p>\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n        {\r\n          this.state.spin &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: px(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              loading...\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\forgotPassword\\ForgotPassword.jsx",["714","715","716","717","718","719"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Button,\r\n  message,\r\n  Spin\r\n\r\n} from 'antd';\r\n// import { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './forgotPassword.less'\r\nimport temporaryStorage from '../../../utils/temporaryStorage';\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport { px, mTop, pX, MTop } from '../../../utils/px';\r\nimport MouseDiv from '../../../utils/mouseDiv/MouseDiv'\r\nimport MinClose from '../../../utils/minClose/MinClose'\r\nimport back_white from '../../../assets/img/back-white.png'\r\nimport back_hui from '../../../assets/img/back-hui.png'\r\nimport mellaLogo from '../../../assets/images/mellaLogo.png'\r\nimport errorIcon from '../../../assets/images/errorIcon.png'\r\n\r\n\r\n//num做超时处理\r\nlet num = 0\r\nexport default class ForgotPassword extends Component {\r\n\r\n  state = {\r\n    email: '',\r\n    success1: false,\r\n    spin: false,        //调用接口加载中\r\n    noRegistered: false, //邮箱没被注册跳出的弹窗\r\n    isLimit: false,      //账号被限制、注册未激活状态\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    if (temporaryStorage.forgotPassword_email) {\r\n      this.setState({\r\n        email: temporaryStorage.forgotPassword_email\r\n      })\r\n    }\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  componentWillUnmount () {\r\n    this.timer && clearInterval(this.timer)\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _continue = () => {\r\n    let { email } = this.state\r\n    message.destroy()\r\n    console.log('点击了发送按钮', email)\r\n    if (email.length < 2 || email.indexOf('@') === -1) {\r\n      message.error('Email number format is incorrect')\r\n      return\r\n    }\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    console.log('开始去检测邮箱');\r\n    fetchRequest(`/user/checkUser/${email}`, 'GET', '')\r\n      .then(res => {\r\n        console.log('检测邮箱存不存在', res);\r\n        if (res.code) {\r\n          switch (res.code) {\r\n\r\n            case 11011:\r\n              console.log('邮箱存在，发送邮件');\r\n              this._sendEmail()\r\n              break;\r\n            case 11012:\r\n              console.log('账号被限制、注册未激活状态');\r\n              this.setState({\r\n                isLimit: true\r\n              })\r\n              break;\r\n\r\n\r\n            case 11013:\r\n              console.log('邮箱未被注册，跳出弹框询问是否前往注册');\r\n            case 11014:\r\n              console.log('邮箱被注销或者封停，跳出弹框询问是否前往注册');\r\n              this.setState({\r\n                noRegistered: true,\r\n                spin: false\r\n              })\r\n              return\r\n              break\r\n\r\n          }\r\n        } else {\r\n          console.log('系统错误', res);\r\n          message.error('system error')\r\n          this.setState({\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        message.error('system error')\r\n\r\n      })\r\n\r\n\r\n\r\n  }\r\n  _sendEmail = () => {\r\n    fetchRequest(`/user/forgetPwd/${this.state.email}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('调用验证邮箱返回的数据', res);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        if (res.flag === true) {\r\n          console.log('邮件发送成功,请注意查收')\r\n          this.timer && clearInterval(this.timer)\r\n          this.timer = setInterval(() => {\r\n            num++\r\n            if (num > 300) {\r\n              message.error('The email is invalid, please click send again', 10)\r\n              num = 0\r\n              this.timer && clearInterval(this.timer)\r\n            }\r\n            this._validation()\r\n\r\n          }, 1000);\r\n          message.success('The email was sent successfully, please check it', 10)\r\n        } else {\r\n          console.log('邮件发送失败');\r\n          message.error('The account does not exist', 10)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n  _validation = () => {\r\n\r\n    fetchRequest(`/user/checkForgetPassword/${this.state.email}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('验证结果', res);\r\n        if (res.flag === true) {\r\n          temporaryStorage.forgotUserId = res.data.userId\r\n\r\n          this.timer && clearInterval(this.timer)\r\n          if (this.state.success1 === false) {\r\n            this.setState({\r\n              success1: true\r\n            }, () => {\r\n              console.log('跳转');\r\n              this.props.history.push('/user/login/resetPassword')\r\n            })\r\n          }\r\n          console.log('成功了');\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"forgotPassword\">\r\n\r\n        <div className=\"heaed\"  >\r\n          <div className=\"l\"\r\n          >\r\n\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div className=\"body\" style={{ height: MTop(280), }}>\r\n          <div className=\"logo\"\r\n            style={{ paddingTop: mTop(10) }}\r\n          >\r\n            <img src={mellaLogo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n          <div className=\"text\"\r\n            style={{ fontSize: px(30), padding: `${px(20)}px 0`, marginBottom: mTop(10), marginTop: mTop(20) }}\r\n          >\r\n            Forgot Your Password?\r\n          </div>\r\n          <p className=\"text1\" style={{ fontSize: px(20) }}>\r\n            Please enter email and we<br />\r\n            will send you a link if there is an<br />\r\n            account associated with that address.<br />\r\n          </p>\r\n          {/* <div className=\"text1\">Please enter email and we</div>\r\n          <div className=\"text1\">will send you a link if there is an</div>\r\n          <div className=\"text1\">account associated with that address.</div> */}\r\n          <div className=\"inpF\">\r\n\r\n            <Input className='inp'\r\n              style={{ width: px(310), height: mTop(50), marginLeft: px(6), marginBottom: mTop(18), fontSize: px(18) }}\r\n              value={this.state.email}\r\n              placeholder='rachel@friends.com'\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value\r\n                this.setState({\r\n                  email: str\r\n                })\r\n              }}\r\n            />\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"button1\" >\r\n          <Button\r\n            style={{ width: px(300), fontSize: px(18), height: px(300 / 6.5) }}\r\n\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._continue}\r\n          >\r\n            SEND LINK\r\n          </Button>\r\n        </div>\r\n\r\n        {\r\n          this.state.spin &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              loading...\r\n            </p>\r\n          </div>\r\n        }\r\n\r\n\r\n        {\r\n          this.state.noRegistered &&\r\n          <div className=\"modal\">\r\n            <div className=\"modalChaild\" style={{ borderRadius: pX(20) }}>\r\n              <img src={errorIcon} alt=\"\" style={{ width: pX(30), margin: `${pX(20)}px 0` }} />\r\n              <p style={{ fontSize: px(17) }}>\r\n                This account is not registered. Do you want to go to register?\r\n              </p>\r\n\r\n              <div className=\"modalbutton\" style={{ margin: `${pX(0)}px 0 ${pX(20)}px` }}>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      noRegistered: false\r\n                    })\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      noRegistered: false\r\n                    })\r\n                    this.props.history.push({ pathname: '/uesr/logUp/VetPrifile', email: this.state.email })\r\n\r\n                  }}\r\n                >\r\n                  Jump\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        }\r\n\r\n\r\n        {\r\n          this.state.isLimit &&\r\n          <div className=\"modal\">\r\n            <div className=\"modalChaild\" style={{ borderRadius: pX(20) }}>\r\n              <img src={errorIcon} alt=\"\" style={{ width: pX(30), margin: `${pX(20)}px 0` }} />\r\n              <p style={{ fontSize: px(17) }}>\r\n                Your email is not verified - please verify\r\n              </p>\r\n\r\n              <div className=\"modalbutton\" style={{ margin: `${pX(0)}px 0 ${pX(20)}px` }}>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      isLimit: false\r\n                    })\r\n                  }}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  style={{ width: pX(120), fontSize: px(16), height: pX(35) }}\r\n\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size='large'\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      isLimit: false,\r\n                      spin: true\r\n                    })\r\n\r\n                    fetchRequest(`/user/sendActivateEmail/${this.state.email}`, \"GET\", \"\")\r\n                      .then(res => {\r\n                        console.log(res);\r\n                        this.setState({\r\n                          spin: false,\r\n                        })\r\n                        if (res.flag === true) {\r\n                          console.log('发送成功');\r\n                          const time = setTimeout(() => {\r\n                            message.success('The email has been sent, please follow the prompts')\r\n                            clearTimeout(time)\r\n                          }, 5);\r\n\r\n                        } else {\r\n                          console.log('发送失败');\r\n                          const time = setTimeout(() => {\r\n                            message.error('Failed to send mail')\r\n                            clearTimeout(time)\r\n                          }, 5);\r\n\r\n                        }\r\n                      })\r\n                      .catch(err => {\r\n                        console.log(err);\r\n                        this.setState({\r\n                          spin: false,\r\n                        })\r\n                      })\r\n                  }}\r\n                >\r\n                  Jump\r\n                </Button>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx",["720","721"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\help\\Help.jsx",["722"],"import React, { Component } from 'react'\r\n\r\nimport Heard from './../../../utils/heard/Heard'\r\nimport using from './../../../assets/images/using.png'\r\nimport measuring from './../../../assets/images/measuring.png'\r\nimport unassigned from './../../../assets/images/unassigned.png'\r\nimport adding from './../../../assets/images/adding.png'\r\nimport email from './../../../assets/images/email.png'\r\nimport phone from './../../../assets/images/phone.png'\r\nimport './help.less'\r\nimport { px } from './../../../utils/px'\r\nlet storage = window.localStorage;\r\n\r\nexport default class Help extends Component {\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n\r\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let list = [\r\n      {\r\n        img: using,\r\n        title: 'Using the app'\r\n      }, {\r\n        img: measuring,\r\n        title: 'Measuring with Mella'\r\n      }, {\r\n        img: unassigned,\r\n        title: 'Unassigned Readings'\r\n      },\r\n      {\r\n        img: adding,\r\n        title: 'Adding New Users'\r\n      },\r\n    ]\r\n    let num = 150 / list.length\r\n    let mar = num + 'px'\r\n    return (\r\n      <div id=\"help\">\r\n        <div className=\"heard\">\r\n          <Heard\r\n            menu8Click={() => {\r\n              switch (storage.identity) {\r\n                case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n                case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n                  break;\r\n                case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }}\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"title\">How can we help you?</div>\r\n          <div className=\"input\" style={{ marginTop: px(25) }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Describe you issue     &#xe63f;\"\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"list\" style={{ marginTop: px(50) }}>\r\n            <ul>\r\n              {list.map((data, index) => (\r\n                <li key={index}\r\n                  style={{ width: px(150), height: px(150) }}\r\n                >\r\n\r\n                  <>\r\n                    <img src={data.img} alt=\"\" style={{ height: px(80) }} />\r\n                    <p style={{ fontSize: px(19) }}>{data.title}</p>\r\n                  </>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popularArticles\" style={{ marginTop: px(80) }}>\r\n            <div className=\"text\">Popular Articles</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n          <div className=\"popularArticles tutorials\">\r\n            <div className=\"text\">Tutorials</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n\r\n          <div className=\"time\" style={{ marginTop: px(40) }}>\r\n            <p style={{ fontSize: px(30) }}>Still need help?</p>\r\n            <div className=\"line\" style={{ height: px(6) }}></div>\r\n            <p style={{ fontSize: px(30) }}>Monday - Friday: 9am - 5pm (ET)</p>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"foot\">\r\n          <div className=\"l\">\r\n            <img src={email} alt=\"\" style={{ height: px(50) }} />\r\n            <div className=\"text\" style={{ fontSize: px(18) }}>Drop us a line</div>\r\n            <a href=\"mailto:support@mella.ai\"\r\n              style={{ fontSize: px(18) }}\r\n              onClick={(e) => {\r\n                // e.preventDefault();\r\n                // let electron = window.electron\r\n                // electron.shell.openExternal(' https://www.mella.ai/')\r\n                // return false;\r\n              }}\r\n            >support@mella.ai</a>\r\n          </div>\r\n\r\n          <div className=\"l r\">\r\n            <img src={phone} alt=\"\" style={{ height: px(50) }} />\r\n            <div className=\"text\" style={{ fontSize: px(18) }}>Bark at Us!</div>\r\n            <div className=\"text\" style={{ fontSize: px(18) }}>201.977.6411</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\invite\\Invite.jsx",["723","724","725","726","727","728","729"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx",["730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx",["748","749","750","751","752","753","754","755","756","757"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\px.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js",["758","759"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx",["760","761","762","763","764","765","766","767","768","769","770","771","772","773","774"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx",["775","776","777","778"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil3.js",["779","780","781","782"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx",["783","784","785","786","787","788","789","790","791","792","793"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx",["794","795","796","797","798","799","800","801"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { ConfigProvider, Table } from 'antd';\r\nimport { useHistory } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nimport { mTop, px, MTop, pX } from '../../utils/px';\r\nimport './petTable.less'\r\nimport { petDetailInfoFun, setMenuNum, } from '../../store/actions';\r\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\r\n\r\n\r\n\r\n\r\n\r\nconst PetTable = ({ petListArr, loading, bodyHeight, petDetailInfoFun, setMenuNum, resetPetList, type }) => {\r\n    let history = useHistory()\r\n    const [heardSearchText, setHeardSearchText] = useState('')\r\n    //搜索后展示的宠物列表\r\n    const [searchData, setSearchData] = useState([])\r\n    const _search = (value) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\r\n        let keyWord = value || heardSearchText\r\n        /**\r\n         * 使用indexof方法实现模糊查询\r\n         *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n         *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n         *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n         *  \r\n         * list         原数组\r\n         * keyWord      查询关键词\r\n         * searchData   查询的结果\r\n         * \r\n         * toLowerCase（）方法：将字符串统一转成小写\r\n         * toUpperCase（）方法：将字符串统一转成大写\r\n         * \r\n         */\r\n        let list = petListArr\r\n        let searchData = []\r\n        for (let i = 0; i < list.length; i++) {\r\n            let petName = list[i].petName.toLowerCase() || ''\r\n            let patientId = list[i].patientId.toLowerCase() || ''\r\n            let rfid = list[i].rfid || ''\r\n            if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n                || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n                || `${rfid}`.indexOf(keyWord) !== -1\r\n            ) {\r\n                searchData.push(list[i])\r\n            }\r\n        }\r\n        console.log(searchData);\r\n        setSearchData(searchData)\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Time',\r\n            dataIndex: 'insertedAt',\r\n            key: 'insertedAt',\r\n            width: '16%',\r\n            // ...this.getColumnSearchProps('insertedAt'),\r\n            render: (text, record, index) => {\r\n                let chazhi = new Date().getTimezoneOffset()\r\n                // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\r\n                let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\r\n                let time = moment(parseInt(text) * 1000).format('hh:mm a');\r\n                let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\r\n                // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\r\n                return (\r\n                    <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\r\n                        <p>{`${year}`}</p>\r\n                        <p>{`${time}`}</p>\r\n                    </div>\r\n                )\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'Pet ID',\r\n            dataIndex: 'patientId',\r\n            key: 'patientId',\r\n            width: '15%',\r\n            // ...this.getColumnSearchProps('patientId'),\r\n        },\r\n        {\r\n            title: 'Pet Name',\r\n            dataIndex: 'petName',\r\n            key: 'petName',\r\n            width: '15%',\r\n            // ...this.getColumnSearchProps('petName'),\r\n        },\r\n        {\r\n            title: 'Owner',\r\n            dataIndex: 'owner',\r\n            key: 'owner',\r\n            width: '15%',\r\n            // ...this.getColumnSearchProps('owner'),\r\n        },\r\n        {\r\n            title: 'Breed',\r\n            dataIndex: 'breed',\r\n            key: 'breed',\r\n            width: '15%',\r\n            // ...this.getColumnSearchProps('breed'),\r\n            render: (text, record, index) => {\r\n                if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{'unknown'}</p>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{text}</p>\r\n                    )\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n        {\r\n            title: 'Gender',\r\n            dataIndex: 'gender',\r\n            key: 'gender',\r\n            width: '12%',\r\n            // width: '30%',\r\n            // ...this.getColumnSearchProps('gender'),\r\n        },\r\n        {\r\n            title: 'Age',\r\n            dataIndex: 'age',\r\n            key: 'age',\r\n            width: '12%',\r\n            // width: '20%',\r\n            render: (text, record, index) => {\r\n                // console.log(text);\r\n\r\n                if (`${text}` === 'NaN') {\r\n                    return (\r\n                        <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\r\n                    )\r\n                } else {\r\n                    return (\r\n                        <p style={{ textAlign: 'center' }}>{text}</p>\r\n                    )\r\n                }\r\n\r\n            }\r\n        },\r\n\r\n\r\n    ];\r\n    const noData = () => {\r\n        return (\r\n            <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\r\n                <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\r\n                <a style={{ fontSize: px(22) }} href=\"#\"\r\n                    onClick={(e) => {\r\n                        console.log('我要去添加宠物');\r\n                        try {\r\n                            if (type === 'scheduled') {\r\n                                setMenuNum('AddScheduledPet')\r\n                            } else {\r\n                                setMenuNum('AddPet')\r\n                            }\r\n                        } catch (error) {\r\n                            console.log('错误信息', error);\r\n                        }\r\n                        e.preventDefault();\r\n\r\n                    }}\r\n\r\n                >{`go to add`}</a>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className='petTable' >\r\n            <div className=\"pet_table_heard\" style={{ marginTop: px(40) }}>\r\n                <div className=\"search\" style={{ height: px(28) }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"&#xe61b;    search\"\r\n                        value={heardSearchText}\r\n                        onChange={(e) => {\r\n                            setHeardSearchText(e.target.value)\r\n                            _search(e.target.value)\r\n                        }\r\n                        }\r\n\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"walkBtn1\" style={{ marginRight: px(28) }}>\r\n                    <div\r\n                        className=\"walkbtnBox\"\r\n                        style={{ height: px(28), width: px(80) }}\r\n                        onClick={_search}\r\n                    >\r\n                        <div className=\"walkText\">Search</div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"heard2 flex\" style={{ marginTop: px(40), marginBottom: px(8), marginLeft: px(20) }}>\r\n\r\n                <div className=\"sort flex\" >\r\n                    <p style={{ fontSize: px(16), marginRight: px(10) }}>Sort By:</p>\r\n\r\n                    <SelectionBox\r\n                        listArr={[\r\n                            { key: 'time', value: 'Time' },\r\n                            { key: 'petid', value: 'Pet ID' },\r\n                            { key: 'owner', value: 'Owner' },\r\n                            { key: 'breed', value: 'Breed' },\r\n                            { key: 'petname', value: 'Pet Name' },\r\n                            { key: 'gender', value: 'Gender' },\r\n                        ]}\r\n                        clickItem={(item) => {\r\n                            let petList = [].concat(petListArr)\r\n                            switch (item.key) {\r\n                                case 'time':\r\n                                    petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\r\n                                    break;\r\n                                case 'petid':\r\n                                    petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\r\n                                    break;\r\n                                case 'owner':\r\n                                    petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\r\n                                    break;\r\n                                case 'breed':\r\n                                    petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\r\n                                    break;\r\n                                case 'petname':\r\n                                    petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\r\n                                    break;\r\n                                case 'gender':\r\n                                    petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\r\n                                    break;\r\n                            }\r\n                            resetPetList(petList)\r\n\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"table\" >\r\n                <ConfigProvider renderEmpty={noData}>\r\n                    <Table\r\n                        style={{\r\n                            // border: ' #979797 1px solid',\r\n                            padding: 0,\r\n                            margin: 0,\r\n                            width: '95%',\r\n                            // height: px(500)\r\n                        }}\r\n                        rowKey={data => data.id}\r\n                        bordered={false}\r\n                        columns={columns}\r\n                        dataSource={(heardSearchText.length === 0) ? petListArr : searchData}\r\n                        loading={loading}\r\n                        locale={{ filterConfirm: <div>111</div> }}\r\n                        pagination={false}\r\n                        scroll={{\r\n                            y: px(480)\r\n                        }}\r\n                        onRow={(record) => {\r\n                            return {\r\n                                onClick: (event) => {\r\n                                    setMenuNum('1')\r\n                                    petDetailInfoFun(record)\r\n                                    console.log('record', record);\r\n                                }, // 点击行\r\n\r\n                            };\r\n                        }}\r\n                    />\r\n                </ConfigProvider>\r\n            </div>\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nPetTable.propTypes = {\r\n    petListArr: PropTypes.array,\r\n    resetPetList: PropTypes.func,\r\n}\r\n//默认值\r\nPetTable.defaultProps = {\r\n    bodyHeight: 0,\r\n    petListArr: [],\r\n    resetPetList: () => { },\r\n}\r\nexport default connect(\r\n    state => ({\r\n\r\n    }),\r\n    { petDetailInfoFun, setMenuNum, }\r\n)(PetTable)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx",["802","803","804"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil5.js",["805","806","807","808"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js",["809","810","811","812","813","814","815","816","817","818","819","820","821","822","823"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectMella\\SelectMella.jsx",["824"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx",["825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx",["853","854","855","856","857","858","859","860"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\advancedSettings\\AdvancedSettings.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\addDevice\\AddDevice.jsx",["861","862","863","864","865","866","867","868","869","870"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil1.js",["871","872","873","874"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx",["875"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx",["876","877","878"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx",["879","880","881","882","883","884","885","886","887","888","889","890"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["891","892","893","894","895","896","897","898","899","900","901","902"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\userAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js",["903"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx",["904","905","906","907","908","909"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["910","911","912","913","914","915","916","917","918","919"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["920","921","922","923","924","925"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Image, Layout, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PressButton_Pro from \"./../../../assets/img/PressButton_Pro.png\";\r\nimport AxillaryPlacement from \"./../../../assets/img/AxillaryPlacement.png\"; //腋温底部图片\r\nimport EarPlacement from \"./../../../assets/img/EarPlacement.png\"; //耳温底部图片\r\nimport RectalPlacement from \"./../../../assets/img/RectalPlacement.png\"; //肛温底部图片\r\nimport Standing_Dog from \"./../../../assets/img/Standing_Dog.png\";\r\nimport Standing_Cat from \"./../../../assets/img/Standing_Cat.png\";\r\nimport Sitting_Dog from \"./../../../assets/img/Sitting_Dog.png\";\r\nimport Sitting_Cat from \"./../../../assets/img/Sitting_Cat.png\";\r\nimport Laying_Dog from \"./../../../assets/img/Laying_Dog.png\";\r\nimport Laying_Cat from \"./../../../assets/img/Laying_Cat.png\";\r\n\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n} from \"../../../store/actions\";\r\nimport _ from \"lodash\";\r\n// import HeaderItem from './headerItem';\r\nimport \"./linkEquipment.less\";\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n  let { mellaConnectStatus, mellaMeasurePart } = hardwareMessage;\r\n  let imageMap = [\r\n    Standing_Dog,\r\n    Standing_Cat,\r\n    Sitting_Dog,\r\n    Sitting_Cat,\r\n    Laying_Dog,\r\n    Laying_Cat,\r\n  ];\r\n\r\n  const [type, setType] = useState(false); //是否显示轮播图\r\n  const [carouselIndex, setCarouselIndex] = useState(0);\r\n  const saveCallBack = useRef();\r\n  const callBack = () => {\r\n    setCarouselIndex(carouselIndex + 1);\r\n  };\r\n\r\n  //切换图片\r\n  const checkImage = () => {\r\n    if (mellaMeasurePart === \"腋温\") {\r\n      return AxillaryPlacement;\r\n    } else if (mellaMeasurePart === \"耳温\") {\r\n      return EarPlacement;\r\n    } else {\r\n      return RectalPlacement;\r\n    }\r\n  };\r\n  //点击进入轮播图\r\n  const clickIntoTip = () => {\r\n    setType(true);\r\n  };\r\n  //小圆点点击事件\r\n  const clickPoint = (index) => {\r\n    setCarouselIndex(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    saveCallBack.current = callBack;\r\n    if (carouselIndex === 6) {\r\n      setCarouselIndex(0);\r\n    }\r\n  }, [carouselIndex]);\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      saveCallBack.current();\r\n    };\r\n    let timer = null;\r\n    if (type && mellaConnectStatus === \"connected\") {\r\n      timer = setInterval(tick, 1500);\r\n    }\r\n    if (mellaConnectStatus !== \"connected\") {\r\n      setType(false);\r\n      setCarouselIndex(0);\r\n      clearInterval(timer);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [type, mellaConnectStatus]);\r\n\r\n  return (\r\n    <>\r\n      <Content className={\"contentBox\"}>\r\n        {_.isEqual(mellaConnectStatus, \"disconnected\") ? (\r\n          <div className=\"startBox\">\r\n            <p className=\"startTitle\">\r\n              Turn on your\r\n              <br />\r\n              Mella Thermometer\r\n              <br />\r\n              or Pair New Mella\r\n            </p>\r\n            <img src={PressButton_Pro} />\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div className=\"startBox\">\r\n              <p className=\"startTitle\">\r\n                {!type\r\n                  ? \"Ready, place under foreleg\"\r\n                  : \"Place Under Foreleg Standing\"}\r\n              </p>\r\n              {!type ? (\r\n                <>\r\n                  <img src={checkImage()}></img>\r\n                  {mellaMeasurePart === \"腋温\" ? (\r\n                    <div className=\"bottomTip\">\r\n                      <p className=\"tipTitle\" onClick={() => clickIntoTip()}>\r\n                        Need Help With Accurate Placement On Pet?\r\n                      </p>\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"carouselBox\">\r\n                    {_.map(imageMap, (item, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <img\r\n                            className=\"contentStyle\"\r\n                            src={item}\r\n                            style={{\r\n                              display: carouselIndex === index ? \"\" : \"none\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"dotBox\">\r\n                    <ul className=\"dotList\">\r\n                      {_.map(imageMap, (item, index) => {\r\n                        return (\r\n                          <li key={index}>\r\n                            <Button\r\n                              className=\"dotItem\"\r\n                              onClick={() => clickPoint(index)}\r\n                              style={{\r\n                                background:\r\n                                  carouselIndex === index\r\n                                    ? \"#0a0a0a\"\r\n                                    : \"#bdbaba\",\r\n                              }}\r\n                            >\r\n                              {index}\r\n                            </Button>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n  }\r\n)(LinkEquipment);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js",[],{"ruleId":"960","severity":1,"message":"961","line":3,"column":10,"nodeType":"962","messageId":"963","endLine":3,"endColumn":23},{"ruleId":"960","severity":1,"message":"964","line":16,"column":8,"nodeType":"962","messageId":"963","endLine":16,"endColumn":17},{"ruleId":"965","replacedBy":"966"},{"ruleId":"967","replacedBy":"968"},{"ruleId":"960","severity":1,"message":"969","line":4,"column":3,"nodeType":"962","messageId":"963","endLine":4,"endColumn":9},{"ruleId":"960","severity":1,"message":"970","line":10,"column":10,"nodeType":"962","messageId":"963","endLine":10,"endColumn":30},{"ruleId":"960","severity":1,"message":"971","line":15,"column":8,"nodeType":"962","messageId":"963","endLine":15,"endColumn":11},{"ruleId":"960","severity":1,"message":"972","line":17,"column":10,"nodeType":"962","messageId":"963","endLine":17,"endColumn":21},{"ruleId":"960","severity":1,"message":"973","line":3,"column":5,"nodeType":"962","messageId":"963","endLine":3,"endColumn":10},{"ruleId":"960","severity":1,"message":"974","line":49,"column":29,"nodeType":"962","messageId":"963","endLine":49,"endColumn":36},{"ruleId":"960","severity":1,"message":"975","line":49,"column":38,"nodeType":"962","messageId":"963","endLine":49,"endColumn":49},{"ruleId":"960","severity":1,"message":"976","line":49,"column":57,"nodeType":"962","messageId":"963","endLine":49,"endColumn":68},{"ruleId":"977","severity":1,"message":"978","line":243,"column":33,"nodeType":"979","messageId":"980","endLine":243,"endColumn":35},{"ruleId":"977","severity":1,"message":"978","line":243,"column":92,"nodeType":"979","messageId":"980","endLine":243,"endColumn":94},{"ruleId":"977","severity":1,"message":"978","line":243,"column":130,"nodeType":"979","messageId":"980","endLine":243,"endColumn":132},{"ruleId":"965","replacedBy":"981"},{"ruleId":"967","replacedBy":"982"},{"ruleId":"960","severity":1,"message":"983","line":6,"column":3,"nodeType":"962","messageId":"963","endLine":6,"endColumn":8},{"ruleId":"960","severity":1,"message":"984","line":7,"column":3,"nodeType":"962","messageId":"963","endLine":7,"endColumn":10},{"ruleId":"960","severity":1,"message":"985","line":8,"column":3,"nodeType":"962","messageId":"963","endLine":8,"endColumn":7},{"ruleId":"960","severity":1,"message":"986","line":15,"column":10,"nodeType":"962","messageId":"963","endLine":15,"endColumn":14},{"ruleId":"960","severity":1,"message":"987","line":15,"column":16,"nodeType":"962","messageId":"963","endLine":15,"endColumn":18},{"ruleId":"960","severity":1,"message":"970","line":17,"column":10,"nodeType":"962","messageId":"963","endLine":17,"endColumn":30},{"ruleId":"960","severity":1,"message":"988","line":17,"column":32,"nodeType":"962","messageId":"963","endLine":17,"endColumn":44},{"ruleId":"960","severity":1,"message":"989","line":17,"column":46,"nodeType":"962","messageId":"963","endLine":17,"endColumn":61},{"ruleId":"960","severity":1,"message":"990","line":18,"column":10,"nodeType":"962","messageId":"963","endLine":18,"endColumn":22},{"ruleId":"960","severity":1,"message":"985","line":2,"column":60,"nodeType":"962","messageId":"963","endLine":2,"endColumn":64},{"ruleId":"960","severity":1,"message":"991","line":3,"column":8,"nodeType":"962","messageId":"963","endLine":3,"endColumn":17},{"ruleId":"960","severity":1,"message":"989","line":6,"column":32,"nodeType":"962","messageId":"963","endLine":6,"endColumn":47},{"ruleId":"960","severity":1,"message":"992","line":31,"column":9,"nodeType":"962","messageId":"963","endLine":31,"endColumn":16},{"ruleId":"960","severity":1,"message":"993","line":33,"column":7,"nodeType":"962","messageId":"963","endLine":33,"endColumn":13},{"ruleId":"960","severity":1,"message":"994","line":38,"column":5,"nodeType":"962","messageId":"963","endLine":38,"endColumn":8},{"ruleId":"995","severity":1,"message":"996","line":75,"column":9,"nodeType":"997","messageId":"980","endLine":75,"endColumn":15},{"ruleId":"998","severity":1,"message":"999","line":116,"column":9,"nodeType":"1000","messageId":"1001","endLine":122,"endColumn":10},{"ruleId":"1002","severity":1,"message":"1003","line":129,"column":51,"nodeType":"1004","messageId":"1005","endLine":129,"endColumn":53},{"ruleId":"1002","severity":1,"message":"1003","line":168,"column":51,"nodeType":"1004","messageId":"1005","endLine":168,"endColumn":53},{"ruleId":"960","severity":1,"message":"1006","line":277,"column":15,"nodeType":"962","messageId":"963","endLine":277,"endColumn":25},{"ruleId":"960","severity":1,"message":"1007","line":277,"column":53,"nodeType":"962","messageId":"963","endLine":277,"endColumn":59},{"ruleId":"960","severity":1,"message":"1008","line":350,"column":15,"nodeType":"962","messageId":"963","endLine":350,"endColumn":28},{"ruleId":"1009","severity":1,"message":"1010","line":554,"column":29,"nodeType":"1011","endLine":554,"endColumn":77},{"ruleId":"960","severity":1,"message":"1012","line":577,"column":9,"nodeType":"962","messageId":"963","endLine":577,"endColumn":16},{"ruleId":"960","severity":1,"message":"1013","line":578,"column":15,"nodeType":"962","messageId":"963","endLine":578,"endColumn":24},{"ruleId":"1009","severity":1,"message":"1010","line":612,"column":29,"nodeType":"1011","endLine":612,"endColumn":77},{"ruleId":"998","severity":1,"message":"999","line":643,"column":9,"nodeType":"1000","messageId":"1001","endLine":646,"endColumn":10},{"ruleId":"998","severity":1,"message":"999","line":648,"column":9,"nodeType":"1000","messageId":"1001","endLine":651,"endColumn":10},{"ruleId":"960","severity":1,"message":"1014","line":732,"column":17,"nodeType":"962","messageId":"963","endLine":732,"endColumn":27},{"ruleId":"960","severity":1,"message":"1015","line":732,"column":29,"nodeType":"962","messageId":"963","endLine":732,"endColumn":37},{"ruleId":"960","severity":1,"message":"1016","line":732,"column":39,"nodeType":"962","messageId":"963","endLine":732,"endColumn":45},{"ruleId":"960","severity":1,"message":"1017","line":732,"column":47,"nodeType":"962","messageId":"963","endLine":732,"endColumn":55},{"ruleId":"960","severity":1,"message":"1018","line":798,"column":97,"nodeType":"962","messageId":"963","endLine":798,"endColumn":102},{"ruleId":"960","severity":1,"message":"1019","line":798,"column":135,"nodeType":"962","messageId":"963","endLine":798,"endColumn":157},{"ruleId":"960","severity":1,"message":"1020","line":3,"column":3,"nodeType":"962","messageId":"963","endLine":3,"endColumn":8},{"ruleId":"960","severity":1,"message":"984","line":5,"column":3,"nodeType":"962","messageId":"963","endLine":5,"endColumn":10},{"ruleId":"960","severity":1,"message":"1021","line":10,"column":8,"nodeType":"962","messageId":"963","endLine":10,"endColumn":17},{"ruleId":"960","severity":1,"message":"990","line":12,"column":10,"nodeType":"962","messageId":"963","endLine":12,"endColumn":22},{"ruleId":"960","severity":1,"message":"970","line":8,"column":10,"nodeType":"962","messageId":"963","endLine":8,"endColumn":30},{"ruleId":"960","severity":1,"message":"988","line":8,"column":32,"nodeType":"962","messageId":"963","endLine":8,"endColumn":44},{"ruleId":"960","severity":1,"message":"987","line":14,"column":20,"nodeType":"962","messageId":"963","endLine":14,"endColumn":22},{"ruleId":"960","severity":1,"message":"991","line":8,"column":8,"nodeType":"962","messageId":"963","endLine":8,"endColumn":17},{"ruleId":"960","severity":1,"message":"970","line":9,"column":10,"nodeType":"962","messageId":"963","endLine":9,"endColumn":30},{"ruleId":"960","severity":1,"message":"986","line":20,"column":10,"nodeType":"962","messageId":"963","endLine":20,"endColumn":14},{"ruleId":"960","severity":1,"message":"987","line":20,"column":16,"nodeType":"962","messageId":"963","endLine":20,"endColumn":18},{"ruleId":"960","severity":1,"message":"1012","line":24,"column":7,"nodeType":"962","messageId":"963","endLine":24,"endColumn":14},{"ruleId":"960","severity":1,"message":"1017","line":321,"column":21,"nodeType":"962","messageId":"963","endLine":321,"endColumn":29},{"ruleId":"960","severity":1,"message":"1022","line":321,"column":31,"nodeType":"962","messageId":"963","endLine":321,"endColumn":37},{"ruleId":"1023","severity":1,"message":"1024","line":481,"column":36,"nodeType":"1011","endLine":481,"endColumn":71},{"ruleId":"960","severity":1,"message":"988","line":5,"column":32,"nodeType":"962","messageId":"963","endLine":5,"endColumn":44},{"ruleId":"960","severity":1,"message":"986","line":10,"column":10,"nodeType":"962","messageId":"963","endLine":10,"endColumn":14},{"ruleId":"960","severity":1,"message":"1025","line":30,"column":9,"nodeType":"962","messageId":"963","endLine":30,"endColumn":16},{"ruleId":"960","severity":1,"message":"991","line":9,"column":8,"nodeType":"962","messageId":"963","endLine":9,"endColumn":17},{"ruleId":"960","severity":1,"message":"970","line":10,"column":10,"nodeType":"962","messageId":"963","endLine":10,"endColumn":30},{"ruleId":"960","severity":1,"message":"1026","line":10,"column":32,"nodeType":"962","messageId":"963","endLine":10,"endColumn":47},{"ruleId":"960","severity":1,"message":"1027","line":14,"column":8,"nodeType":"962","messageId":"963","endLine":14,"endColumn":16},{"ruleId":"960","severity":1,"message":"986","line":19,"column":10,"nodeType":"962","messageId":"963","endLine":19,"endColumn":14},{"ruleId":"998","severity":1,"message":"999","line":85,"column":25,"nodeType":"1000","messageId":"1001","endLine":114,"endColumn":26},{"ruleId":"1028","severity":1,"message":"1029","line":103,"column":29,"nodeType":"1030","messageId":"1031","endLine":104,"endColumn":68},{"ruleId":"1028","severity":1,"message":"1029","line":105,"column":29,"nodeType":"1030","messageId":"1031","endLine":112,"endColumn":39},{"ruleId":"960","severity":1,"message":"1032","line":214,"column":42,"nodeType":"962","messageId":"963","endLine":214,"endColumn":58},{"ruleId":"960","severity":1,"message":"1033","line":235,"column":29,"nodeType":"962","messageId":"963","endLine":235,"endColumn":42},{"ruleId":"960","severity":1,"message":"1034","line":270,"column":49,"nodeType":"962","messageId":"963","endLine":270,"endColumn":63},{"ruleId":"960","severity":1,"message":"1035","line":270,"column":65,"nodeType":"962","messageId":"963","endLine":270,"endColumn":79},{"ruleId":"960","severity":1,"message":"1020","line":2,"column":10,"nodeType":"962","messageId":"963","endLine":2,"endColumn":15},{"ruleId":"960","severity":1,"message":"1036","line":2,"column":17,"nodeType":"962","messageId":"963","endLine":2,"endColumn":23},{"ruleId":"960","severity":1,"message":"1037","line":2,"column":48,"nodeType":"962","messageId":"963","endLine":2,"endColumn":56},{"ruleId":"960","severity":1,"message":"1038","line":2,"column":58,"nodeType":"962","messageId":"963","endLine":2,"endColumn":61},{"ruleId":"960","severity":1,"message":"1039","line":2,"column":63,"nodeType":"962","messageId":"963","endLine":2,"endColumn":66},{"ruleId":"960","severity":1,"message":"985","line":2,"column":68,"nodeType":"962","messageId":"963","endLine":2,"endColumn":72},{"ruleId":"960","severity":1,"message":"991","line":3,"column":8,"nodeType":"962","messageId":"963","endLine":3,"endColumn":17},{"ruleId":"960","severity":1,"message":"989","line":6,"column":32,"nodeType":"962","messageId":"963","endLine":6,"endColumn":47},{"ruleId":"960","severity":1,"message":"1040","line":11,"column":8,"nodeType":"962","messageId":"963","endLine":11,"endColumn":13},{"ruleId":"960","severity":1,"message":"1041","line":12,"column":8,"nodeType":"962","messageId":"963","endLine":12,"endColumn":14},{"ruleId":"960","severity":1,"message":"971","line":15,"column":8,"nodeType":"962","messageId":"963","endLine":15,"endColumn":11},{"ruleId":"960","severity":1,"message":"1042","line":16,"column":8,"nodeType":"962","messageId":"963","endLine":16,"endColumn":14},{"ruleId":"960","severity":1,"message":"1043","line":17,"column":8,"nodeType":"962","messageId":"963","endLine":17,"endColumn":12},{"ruleId":"960","severity":1,"message":"992","line":23,"column":9,"nodeType":"962","messageId":"963","endLine":23,"endColumn":16},{"ruleId":"960","severity":1,"message":"1044","line":24,"column":9,"nodeType":"962","messageId":"963","endLine":24,"endColumn":15},{"ruleId":"960","severity":1,"message":"993","line":25,"column":7,"nodeType":"962","messageId":"963","endLine":25,"endColumn":13},{"ruleId":"960","severity":1,"message":"1045","line":28,"column":5,"nodeType":"962","messageId":"963","endLine":28,"endColumn":12},{"ruleId":"960","severity":1,"message":"1046","line":29,"column":5,"nodeType":"962","messageId":"963","endLine":29,"endColumn":17},{"ruleId":"960","severity":1,"message":"994","line":30,"column":5,"nodeType":"962","messageId":"963","endLine":30,"endColumn":8},{"ruleId":"960","severity":1,"message":"994","line":92,"column":61,"nodeType":"962","messageId":"963","endLine":92,"endColumn":64},{"ruleId":"960","severity":1,"message":"1047","line":92,"column":66,"nodeType":"962","messageId":"963","endLine":92,"endColumn":75},{"ruleId":"1023","severity":1,"message":"1024","line":277,"column":15,"nodeType":"1011","endLine":283,"endColumn":16},{"ruleId":"960","severity":1,"message":"1048","line":4,"column":3,"nodeType":"962","messageId":"963","endLine":4,"endColumn":9},{"ruleId":"960","severity":1,"message":"1049","line":13,"column":8,"nodeType":"962","messageId":"963","endLine":13,"endColumn":14},{"ruleId":"960","severity":1,"message":"1036","line":14,"column":8,"nodeType":"962","messageId":"963","endLine":14,"endColumn":14},{"ruleId":"960","severity":1,"message":"1050","line":15,"column":8,"nodeType":"962","messageId":"963","endLine":15,"endColumn":21},{"ruleId":"960","severity":1,"message":"1051","line":16,"column":8,"nodeType":"962","messageId":"963","endLine":16,"endColumn":24},{"ruleId":"960","severity":1,"message":"1052","line":20,"column":8,"nodeType":"962","messageId":"963","endLine":20,"endColumn":11},{"ruleId":"960","severity":1,"message":"1053","line":21,"column":8,"nodeType":"962","messageId":"963","endLine":21,"endColumn":11},{"ruleId":"960","severity":1,"message":"1054","line":22,"column":8,"nodeType":"962","messageId":"963","endLine":22,"endColumn":13},{"ruleId":"960","severity":1,"message":"1044","line":32,"column":9,"nodeType":"962","messageId":"963","endLine":32,"endColumn":15},{"ruleId":"960","severity":1,"message":"1055","line":55,"column":11,"nodeType":"962","messageId":"963","endLine":55,"endColumn":17},{"ruleId":"960","severity":1,"message":"1056","line":55,"column":19,"nodeType":"962","messageId":"963","endLine":55,"endColumn":24},{"ruleId":"960","severity":1,"message":"1057","line":71,"column":9,"nodeType":"962","messageId":"963","endLine":71,"endColumn":22},{"ruleId":"960","severity":1,"message":"1058","line":154,"column":18,"nodeType":"962","messageId":"963","endLine":154,"endColumn":27},{"ruleId":"960","severity":1,"message":"1059","line":154,"column":29,"nodeType":"962","messageId":"963","endLine":154,"endColumn":37},{"ruleId":"1009","severity":1,"message":"1010","line":558,"column":19,"nodeType":"1011","endLine":565,"endColumn":61},{"ruleId":"1023","severity":1,"message":"1024","line":573,"column":19,"nodeType":"1011","endLine":581,"endColumn":30},{"ruleId":"960","severity":1,"message":"986","line":14,"column":10,"nodeType":"962","messageId":"963","endLine":14,"endColumn":14},{"ruleId":"960","severity":1,"message":"1036","line":17,"column":8,"nodeType":"962","messageId":"963","endLine":17,"endColumn":14},{"ruleId":"995","severity":1,"message":"1060","line":48,"column":5,"nodeType":"997","messageId":"980","endLine":48,"endColumn":13},{"ruleId":"960","severity":1,"message":"1057","line":59,"column":9,"nodeType":"962","messageId":"963","endLine":59,"endColumn":22},{"ruleId":"960","severity":1,"message":"1057","line":95,"column":9,"nodeType":"962","messageId":"963","endLine":95,"endColumn":22},{"ruleId":"1002","severity":1,"message":"1003","line":213,"column":41,"nodeType":"1004","messageId":"1005","endLine":213,"endColumn":43},{"ruleId":"1002","severity":1,"message":"1003","line":226,"column":47,"nodeType":"1004","messageId":"1005","endLine":226,"endColumn":49},{"ruleId":"960","severity":1,"message":"1061","line":397,"column":23,"nodeType":"962","messageId":"963","endLine":397,"endColumn":28},{"ruleId":"960","severity":1,"message":"1062","line":450,"column":21,"nodeType":"962","messageId":"963","endLine":450,"endColumn":36},{"ruleId":"960","severity":1,"message":"1063","line":3,"column":5,"nodeType":"962","messageId":"963","endLine":3,"endColumn":10},{"ruleId":"977","severity":1,"message":"1064","line":94,"column":16,"nodeType":"979","messageId":"980","endLine":94,"endColumn":18},{"ruleId":"960","severity":1,"message":"986","line":4,"column":10,"nodeType":"962","messageId":"963","endLine":4,"endColumn":14},{"ruleId":"960","severity":1,"message":"987","line":4,"column":20,"nodeType":"962","messageId":"963","endLine":4,"endColumn":22},{"ruleId":"998","severity":1,"message":"999","line":381,"column":9,"nodeType":"1000","messageId":"1001","endLine":388,"endColumn":10},{"ruleId":"960","severity":1,"message":"1065","line":589,"column":15,"nodeType":"962","messageId":"963","endLine":589,"endColumn":25},{"ruleId":"960","severity":1,"message":"1066","line":633,"column":17,"nodeType":"962","messageId":"963","endLine":633,"endColumn":26},{"ruleId":"960","severity":1,"message":"1067","line":808,"column":11,"nodeType":"962","messageId":"963","endLine":808,"endColumn":22},{"ruleId":"1068","severity":1,"message":"1069","line":987,"column":9,"nodeType":"1070","messageId":"1071","endLine":987,"endColumn":15},{"ruleId":"960","severity":1,"message":"1063","line":7,"column":5,"nodeType":"962","messageId":"963","endLine":7,"endColumn":10},{"ruleId":"960","severity":1,"message":"1072","line":20,"column":9,"nodeType":"962","messageId":"963","endLine":20,"endColumn":15},{"ruleId":"977","severity":1,"message":"1064","line":23,"column":16,"nodeType":"979","messageId":"980","endLine":23,"endColumn":18},{"ruleId":"977","severity":1,"message":"1064","line":74,"column":16,"nodeType":"979","messageId":"980","endLine":74,"endColumn":18},{"ruleId":"960","severity":1,"message":"1073","line":2,"column":27,"nodeType":"962","messageId":"963","endLine":2,"endColumn":36},{"ruleId":"960","severity":1,"message":"1074","line":3,"column":10,"nodeType":"962","messageId":"963","endLine":3,"endColumn":20},{"ruleId":"960","severity":1,"message":"986","line":8,"column":14,"nodeType":"962","messageId":"963","endLine":8,"endColumn":18},{"ruleId":"960","severity":1,"message":"1075","line":13,"column":10,"nodeType":"962","messageId":"963","endLine":13,"endColumn":12},{"ruleId":"960","severity":1,"message":"987","line":13,"column":14,"nodeType":"962","messageId":"963","endLine":13,"endColumn":16},{"ruleId":"960","severity":1,"message":"1063","line":6,"column":5,"nodeType":"962","messageId":"963","endLine":6,"endColumn":10},{"ruleId":"960","severity":1,"message":"1072","line":12,"column":13,"nodeType":"962","messageId":"963","endLine":12,"endColumn":19},{"ruleId":"977","severity":1,"message":"1064","line":15,"column":20,"nodeType":"979","messageId":"980","endLine":15,"endColumn":22},{"ruleId":"977","severity":1,"message":"1064","line":59,"column":20,"nodeType":"979","messageId":"980","endLine":59,"endColumn":22},{"ruleId":"1076","severity":1,"message":"1077","line":1,"column":1,"nodeType":"1078","endLine":256,"endColumn":3},{"ruleId":"960","severity":1,"message":"1079","line":15,"column":9,"nodeType":"962","messageId":"963","endLine":15,"endColumn":15},{"ruleId":"960","severity":1,"message":"1080","line":15,"column":26,"nodeType":"962","messageId":"963","endLine":15,"endColumn":32},{"ruleId":"960","severity":1,"message":"1081","line":15,"column":34,"nodeType":"962","messageId":"963","endLine":15,"endColumn":39},{"ruleId":"1082","severity":1,"message":"1083","line":93,"column":6,"nodeType":"1084","endLine":93,"endColumn":22,"suggestions":"1085"},{"ruleId":"960","severity":1,"message":"1050","line":11,"column":8,"nodeType":"962","messageId":"963","endLine":11,"endColumn":21},{"ruleId":"1082","severity":1,"message":"1086","line":44,"column":6,"nodeType":"1084","endLine":44,"endColumn":8,"suggestions":"1087"},{"ruleId":"998","severity":1,"message":"999","line":82,"column":5,"nodeType":"1000","messageId":"1001","endLine":101,"endColumn":6},{"ruleId":"960","severity":1,"message":"1088","line":7,"column":3,"nodeType":"962","messageId":"963","endLine":7,"endColumn":7},{"ruleId":"960","severity":1,"message":"1089","line":11,"column":3,"nodeType":"962","messageId":"963","endLine":11,"endColumn":10},{"ruleId":"960","severity":1,"message":"985","line":13,"column":3,"nodeType":"962","messageId":"963","endLine":13,"endColumn":7},{"ruleId":"960","severity":1,"message":"970","line":19,"column":3,"nodeType":"962","messageId":"963","endLine":19,"endColumn":23},{"ruleId":"960","severity":1,"message":"988","line":20,"column":3,"nodeType":"962","messageId":"963","endLine":20,"endColumn":15},{"ruleId":"960","severity":1,"message":"1090","line":27,"column":8,"nodeType":"962","messageId":"963","endLine":27,"endColumn":15},{"ruleId":"960","severity":1,"message":"1091","line":31,"column":8,"nodeType":"962","messageId":"963","endLine":31,"endColumn":10},{"ruleId":"960","severity":1,"message":"1092","line":32,"column":8,"nodeType":"962","messageId":"963","endLine":32,"endColumn":10},{"ruleId":"960","severity":1,"message":"1093","line":33,"column":8,"nodeType":"962","messageId":"963","endLine":33,"endColumn":12},{"ruleId":"960","severity":1,"message":"1052","line":34,"column":8,"nodeType":"962","messageId":"963","endLine":34,"endColumn":11},{"ruleId":"960","severity":1,"message":"1053","line":35,"column":8,"nodeType":"962","messageId":"963","endLine":35,"endColumn":11},{"ruleId":"960","severity":1,"message":"1054","line":36,"column":8,"nodeType":"962","messageId":"963","endLine":36,"endColumn":13},{"ruleId":"960","severity":1,"message":"1094","line":40,"column":8,"nodeType":"962","messageId":"963","endLine":40,"endColumn":18},{"ruleId":"960","severity":1,"message":"1095","line":44,"column":8,"nodeType":"962","messageId":"963","endLine":44,"endColumn":13},{"ruleId":"960","severity":1,"message":"1096","line":54,"column":7,"nodeType":"962","messageId":"963","endLine":54,"endColumn":24},{"ruleId":"960","severity":1,"message":"1097","line":88,"column":17,"nodeType":"962","messageId":"963","endLine":88,"endColumn":25},{"ruleId":"960","severity":1,"message":"1098","line":100,"column":10,"nodeType":"962","messageId":"963","endLine":100,"endColumn":18},{"ruleId":"960","severity":1,"message":"1099","line":104,"column":10,"nodeType":"962","messageId":"963","endLine":104,"endColumn":13},{"ruleId":"960","severity":1,"message":"1100","line":107,"column":18,"nodeType":"962","messageId":"963","endLine":107,"endColumn":27},{"ruleId":"960","severity":1,"message":"1101","line":127,"column":11,"nodeType":"962","messageId":"963","endLine":127,"endColumn":14},{"ruleId":"960","severity":1,"message":"1102","line":440,"column":22,"nodeType":"962","messageId":"963","endLine":440,"endColumn":26},{"ruleId":"1103","severity":1,"message":"1104","line":694,"column":34,"nodeType":"1105","messageId":"1106","endLine":694,"endColumn":35,"suggestions":"1107"},{"ruleId":"1103","severity":1,"message":"1108","line":699,"column":31,"nodeType":"1105","messageId":"1106","endLine":699,"endColumn":32,"suggestions":"1109"},{"ruleId":"1103","severity":1,"message":"1104","line":734,"column":34,"nodeType":"1105","messageId":"1106","endLine":734,"endColumn":35,"suggestions":"1110"},{"ruleId":"1103","severity":1,"message":"1108","line":739,"column":31,"nodeType":"1105","messageId":"1106","endLine":739,"endColumn":32,"suggestions":"1111"},{"ruleId":"1103","severity":1,"message":"1104","line":774,"column":34,"nodeType":"1105","messageId":"1106","endLine":774,"endColumn":35,"suggestions":"1112"},{"ruleId":"1103","severity":1,"message":"1108","line":779,"column":31,"nodeType":"1105","messageId":"1106","endLine":779,"endColumn":32,"suggestions":"1113"},{"ruleId":"1103","severity":1,"message":"1104","line":822,"column":34,"nodeType":"1105","messageId":"1106","endLine":822,"endColumn":35,"suggestions":"1114"},{"ruleId":"1103","severity":1,"message":"1108","line":827,"column":31,"nodeType":"1105","messageId":"1106","endLine":827,"endColumn":32,"suggestions":"1115"},{"ruleId":"1103","severity":1,"message":"1104","line":861,"column":34,"nodeType":"1105","messageId":"1106","endLine":861,"endColumn":35,"suggestions":"1116"},{"ruleId":"1103","severity":1,"message":"1108","line":866,"column":31,"nodeType":"1105","messageId":"1106","endLine":866,"endColumn":32,"suggestions":"1117"},{"ruleId":"1103","severity":1,"message":"1104","line":902,"column":34,"nodeType":"1105","messageId":"1106","endLine":902,"endColumn":35,"suggestions":"1118"},{"ruleId":"1103","severity":1,"message":"1108","line":907,"column":31,"nodeType":"1105","messageId":"1106","endLine":907,"endColumn":32,"suggestions":"1119"},{"ruleId":"1103","severity":1,"message":"1104","line":1448,"column":34,"nodeType":"1105","messageId":"1106","endLine":1448,"endColumn":35,"suggestions":"1120"},{"ruleId":"1103","severity":1,"message":"1108","line":1453,"column":31,"nodeType":"1105","messageId":"1106","endLine":1453,"endColumn":32,"suggestions":"1121"},{"ruleId":"1103","severity":1,"message":"1104","line":1469,"column":34,"nodeType":"1105","messageId":"1106","endLine":1469,"endColumn":35,"suggestions":"1122"},{"ruleId":"1103","severity":1,"message":"1108","line":1474,"column":31,"nodeType":"1105","messageId":"1106","endLine":1474,"endColumn":32,"suggestions":"1123"},{"ruleId":"1082","severity":1,"message":"1124","line":1692,"column":6,"nodeType":"1084","endLine":1692,"endColumn":23,"suggestions":"1125"},{"ruleId":"1082","severity":1,"message":"1126","line":1721,"column":6,"nodeType":"1084","endLine":1721,"endColumn":26,"suggestions":"1127"},{"ruleId":"1082","severity":1,"message":"1128","line":1727,"column":6,"nodeType":"1084","endLine":1727,"endColumn":18,"suggestions":"1129"},{"ruleId":"960","severity":1,"message":"1073","line":2,"column":5,"nodeType":"962","messageId":"963","endLine":2,"endColumn":14},{"ruleId":"960","severity":1,"message":"1130","line":3,"column":5,"nodeType":"962","messageId":"963","endLine":3,"endColumn":13},{"ruleId":"960","severity":1,"message":"1131","line":5,"column":10,"nodeType":"962","messageId":"963","endLine":5,"endColumn":15},{"ruleId":"960","severity":1,"message":"1132","line":7,"column":8,"nodeType":"962","messageId":"963","endLine":7,"endColumn":23},{"ruleId":"960","severity":1,"message":"1133","line":18,"column":8,"nodeType":"962","messageId":"963","endLine":18,"endColumn":9},{"ruleId":"960","severity":1,"message":"1079","line":21,"column":18,"nodeType":"962","messageId":"963","endLine":21,"endColumn":24},{"ruleId":"960","severity":1,"message":"1134","line":24,"column":11,"nodeType":"962","messageId":"963","endLine":24,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":30,"column":21,"nodeType":"1011","endLine":30,"endColumn":46},{"ruleId":"960","severity":1,"message":"1135","line":1,"column":38,"nodeType":"962","messageId":"963","endLine":1,"endColumn":44},{"ruleId":"960","severity":1,"message":"1088","line":5,"column":3,"nodeType":"962","messageId":"963","endLine":5,"endColumn":7},{"ruleId":"960","severity":1,"message":"1136","line":6,"column":3,"nodeType":"962","messageId":"963","endLine":6,"endColumn":13},{"ruleId":"960","severity":1,"message":"1137","line":13,"column":3,"nodeType":"962","messageId":"963","endLine":13,"endColumn":11},{"ruleId":"960","severity":1,"message":"1079","line":42,"column":18,"nodeType":"962","messageId":"963","endLine":42,"endColumn":24},{"ruleId":"960","severity":1,"message":"1138","line":56,"column":10,"nodeType":"962","messageId":"963","endLine":56,"endColumn":17},{"ruleId":"960","severity":1,"message":"1139","line":56,"column":19,"nodeType":"962","messageId":"963","endLine":56,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":152,"column":11,"nodeType":"1011","endLine":152,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":154,"column":11,"nodeType":"1011","endLine":154,"endColumn":32},{"ruleId":"1009","severity":1,"message":"1010","line":158,"column":11,"nodeType":"1011","endLine":158,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":160,"column":11,"nodeType":"1011","endLine":160,"endColumn":32},{"ruleId":"1009","severity":1,"message":"1010","line":164,"column":11,"nodeType":"1011","endLine":164,"endColumn":30},{"ruleId":"1009","severity":1,"message":"1010","line":166,"column":11,"nodeType":"1011","endLine":166,"endColumn":33},{"ruleId":"1009","severity":1,"message":"1010","line":170,"column":11,"nodeType":"1011","endLine":170,"endColumn":30},{"ruleId":"1009","severity":1,"message":"1010","line":172,"column":11,"nodeType":"1011","endLine":172,"endColumn":33},{"ruleId":"1009","severity":1,"message":"1010","line":176,"column":11,"nodeType":"1011","endLine":176,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":178,"column":11,"nodeType":"1011","endLine":178,"endColumn":32},{"ruleId":"1009","severity":1,"message":"1010","line":182,"column":11,"nodeType":"1011","endLine":182,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":184,"column":11,"nodeType":"1011","endLine":184,"endColumn":32},{"ruleId":"1009","severity":1,"message":"1010","line":188,"column":11,"nodeType":"1011","endLine":188,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":190,"column":11,"nodeType":"1011","endLine":190,"endColumn":32},{"ruleId":"1082","severity":1,"message":"1140","line":248,"column":6,"nodeType":"1084","endLine":248,"endColumn":29,"suggestions":"1141"},{"ruleId":"1082","severity":1,"message":"1142","line":270,"column":6,"nodeType":"1084","endLine":270,"endColumn":25,"suggestions":"1143"},{"ruleId":"1082","severity":1,"message":"1144","line":292,"column":6,"nodeType":"1084","endLine":292,"endColumn":13,"suggestions":"1145"},{"ruleId":"1082","severity":1,"message":"1146","line":319,"column":6,"nodeType":"1084","endLine":319,"endColumn":44,"suggestions":"1147"},{"ruleId":"1082","severity":1,"message":"1148","line":330,"column":6,"nodeType":"1084","endLine":330,"endColumn":17,"suggestions":"1149"},{"ruleId":"960","severity":1,"message":"1133","line":4,"column":8,"nodeType":"962","messageId":"963","endLine":4,"endColumn":9},{"ruleId":"960","severity":1,"message":"1073","line":6,"column":10,"nodeType":"962","messageId":"963","endLine":6,"endColumn":19},{"ruleId":"960","severity":1,"message":"1074","line":2,"column":10,"nodeType":"962","messageId":"963","endLine":2,"endColumn":20},{"ruleId":"960","severity":1,"message":"1088","line":4,"column":5,"nodeType":"962","messageId":"963","endLine":4,"endColumn":9},{"ruleId":"960","severity":1,"message":"1150","line":5,"column":5,"nodeType":"962","messageId":"963","endLine":5,"endColumn":12},{"ruleId":"960","severity":1,"message":"1036","line":6,"column":5,"nodeType":"962","messageId":"963","endLine":6,"endColumn":11},{"ruleId":"960","severity":1,"message":"983","line":7,"column":5,"nodeType":"962","messageId":"963","endLine":7,"endColumn":10},{"ruleId":"960","severity":1,"message":"986","line":15,"column":10,"nodeType":"962","messageId":"963","endLine":15,"endColumn":14},{"ruleId":"960","severity":1,"message":"1151","line":15,"column":20,"nodeType":"962","messageId":"963","endLine":15,"endColumn":24},{"ruleId":"960","severity":1,"message":"1050","line":16,"column":8,"nodeType":"962","messageId":"963","endLine":16,"endColumn":21},{"ruleId":"1002","severity":1,"message":"1003","line":49,"column":36,"nodeType":"1004","messageId":"1005","endLine":49,"endColumn":38},{"ruleId":"1002","severity":1,"message":"1003","line":65,"column":32,"nodeType":"1004","messageId":"1005","endLine":65,"endColumn":34},{"ruleId":"1002","severity":1,"message":"1003","line":74,"column":37,"nodeType":"1004","messageId":"1005","endLine":74,"endColumn":39},{"ruleId":"1002","severity":1,"message":"1003","line":80,"column":23,"nodeType":"1004","messageId":"1005","endLine":80,"endColumn":25},{"ruleId":"1002","severity":1,"message":"1003","line":82,"column":31,"nodeType":"1004","messageId":"1005","endLine":82,"endColumn":33},{"ruleId":"977","severity":1,"message":"1064","line":86,"column":32,"nodeType":"979","messageId":"980","endLine":86,"endColumn":34},{"ruleId":"1082","severity":1,"message":"1152","line":104,"column":8,"nodeType":"1084","endLine":104,"endColumn":10,"suggestions":"1153"},{"ruleId":"1002","severity":1,"message":"1003","line":114,"column":39,"nodeType":"1004","messageId":"1005","endLine":114,"endColumn":41},{"ruleId":"1002","severity":1,"message":"1003","line":115,"column":49,"nodeType":"1004","messageId":"1005","endLine":115,"endColumn":51},{"ruleId":"977","severity":1,"message":"978","line":124,"column":39,"nodeType":"979","messageId":"980","endLine":124,"endColumn":41},{"ruleId":"1002","severity":1,"message":"1003","line":137,"column":39,"nodeType":"1004","messageId":"1005","endLine":137,"endColumn":41},{"ruleId":"1082","severity":1,"message":"1154","line":152,"column":8,"nodeType":"1084","endLine":152,"endColumn":20,"suggestions":"1155"},{"ruleId":"1023","severity":1,"message":"1156","line":202,"column":21,"nodeType":"1011","endLine":207,"endColumn":22},{"ruleId":"960","severity":1,"message":"1073","line":2,"column":5,"nodeType":"962","messageId":"963","endLine":2,"endColumn":14},{"ruleId":"960","severity":1,"message":"1130","line":3,"column":5,"nodeType":"962","messageId":"963","endLine":3,"endColumn":13},{"ruleId":"960","severity":1,"message":"1131","line":5,"column":10,"nodeType":"962","messageId":"963","endLine":5,"endColumn":15},{"ruleId":"960","severity":1,"message":"1133","line":16,"column":8,"nodeType":"962","messageId":"963","endLine":16,"endColumn":9},{"ruleId":"960","severity":1,"message":"1079","line":19,"column":18,"nodeType":"962","messageId":"963","endLine":19,"endColumn":24},{"ruleId":"960","severity":1,"message":"1134","line":22,"column":11,"nodeType":"962","messageId":"963","endLine":22,"endColumn":29},{"ruleId":"960","severity":1,"message":"970","line":8,"column":10,"nodeType":"962","messageId":"963","endLine":8,"endColumn":30},{"ruleId":"960","severity":1,"message":"1044","line":18,"column":9,"nodeType":"962","messageId":"963","endLine":18,"endColumn":15},{"ruleId":"960","severity":1,"message":"969","line":11,"column":3,"nodeType":"962","messageId":"963","endLine":11,"endColumn":9},{"ruleId":"960","severity":1,"message":"1157","line":21,"column":8,"nodeType":"962","messageId":"963","endLine":21,"endColumn":14},{"ruleId":"960","severity":1,"message":"972","line":26,"column":10,"nodeType":"962","messageId":"963","endLine":26,"endColumn":21},{"ruleId":"960","severity":1,"message":"1158","line":28,"column":8,"nodeType":"962","messageId":"963","endLine":28,"endColumn":14},{"ruleId":"960","severity":1,"message":"1151","line":30,"column":10,"nodeType":"962","messageId":"963","endLine":30,"endColumn":14},{"ruleId":"960","severity":1,"message":"986","line":30,"column":16,"nodeType":"962","messageId":"963","endLine":30,"endColumn":20},{"ruleId":"960","severity":1,"message":"1159","line":31,"column":10,"nodeType":"962","messageId":"963","endLine":31,"endColumn":20},{"ruleId":"960","severity":1,"message":"1160","line":36,"column":8,"nodeType":"962","messageId":"963","endLine":36,"endColumn":21},{"ruleId":"960","severity":1,"message":"1161","line":37,"column":8,"nodeType":"962","messageId":"963","endLine":37,"endColumn":15},{"ruleId":"960","severity":1,"message":"992","line":42,"column":9,"nodeType":"962","messageId":"963","endLine":42,"endColumn":16},{"ruleId":"960","severity":1,"message":"993","line":43,"column":7,"nodeType":"962","messageId":"963","endLine":43,"endColumn":13},{"ruleId":"960","severity":1,"message":"1162","line":166,"column":9,"nodeType":"962","messageId":"963","endLine":166,"endColumn":16},{"ruleId":"960","severity":1,"message":"1163","line":176,"column":15,"nodeType":"962","messageId":"963","endLine":176,"endColumn":21},{"ruleId":"960","severity":1,"message":"1164","line":630,"column":15,"nodeType":"962","messageId":"963","endLine":630,"endColumn":24},{"ruleId":"960","severity":1,"message":"1165","line":905,"column":15,"nodeType":"962","messageId":"963","endLine":905,"endColumn":21},{"ruleId":"960","severity":1,"message":"1166","line":909,"column":15,"nodeType":"962","messageId":"963","endLine":909,"endColumn":22},{"ruleId":"960","severity":1,"message":"1167","line":993,"column":28,"nodeType":"962","messageId":"963","endLine":993,"endColumn":31},{"ruleId":"960","severity":1,"message":"1168","line":993,"column":33,"nodeType":"962","messageId":"963","endLine":993,"endColumn":35},{"ruleId":"960","severity":1,"message":"1169","line":993,"column":37,"nodeType":"962","messageId":"963","endLine":993,"endColumn":45},{"ruleId":"960","severity":1,"message":"1014","line":993,"column":53,"nodeType":"962","messageId":"963","endLine":993,"endColumn":63},{"ruleId":"960","severity":1,"message":"1015","line":993,"column":65,"nodeType":"962","messageId":"963","endLine":993,"endColumn":73},{"ruleId":"960","severity":1,"message":"1016","line":993,"column":75,"nodeType":"962","messageId":"963","endLine":993,"endColumn":81},{"ruleId":"960","severity":1,"message":"1170","line":993,"column":111,"nodeType":"962","messageId":"963","endLine":993,"endColumn":117},{"ruleId":"960","severity":1,"message":"1171","line":993,"column":119,"nodeType":"962","messageId":"963","endLine":993,"endColumn":129},{"ruleId":"1023","severity":1,"message":"1024","line":1005,"column":11,"nodeType":"1011","endLine":1021,"endColumn":12},{"ruleId":"998","severity":1,"message":"999","line":1104,"column":19,"nodeType":"1000","messageId":"1001","endLine":1123,"endColumn":20},{"ruleId":"1009","severity":1,"message":"1010","line":1233,"column":17,"nodeType":"1011","endLine":1233,"endColumn":52},{"ruleId":"1009","severity":1,"message":"1010","line":1234,"column":17,"nodeType":"1011","endLine":1234,"endColumn":51},{"ruleId":"960","severity":1,"message":"1172","line":18,"column":10,"nodeType":"962","messageId":"963","endLine":18,"endColumn":23},{"ruleId":"960","severity":1,"message":"1167","line":358,"column":28,"nodeType":"962","messageId":"963","endLine":358,"endColumn":31},{"ruleId":"960","severity":1,"message":"1168","line":358,"column":33,"nodeType":"962","messageId":"963","endLine":358,"endColumn":35},{"ruleId":"960","severity":1,"message":"1169","line":358,"column":37,"nodeType":"962","messageId":"963","endLine":358,"endColumn":45},{"ruleId":"960","severity":1,"message":"985","line":2,"column":60,"nodeType":"962","messageId":"963","endLine":2,"endColumn":64},{"ruleId":"960","severity":1,"message":"991","line":3,"column":8,"nodeType":"962","messageId":"963","endLine":3,"endColumn":17},{"ruleId":"960","severity":1,"message":"988","line":6,"column":32,"nodeType":"962","messageId":"963","endLine":6,"endColumn":44},{"ruleId":"960","severity":1,"message":"989","line":6,"column":46,"nodeType":"962","messageId":"963","endLine":6,"endColumn":61},{"ruleId":"960","severity":1,"message":"992","line":31,"column":9,"nodeType":"962","messageId":"963","endLine":31,"endColumn":16},{"ruleId":"960","severity":1,"message":"994","line":38,"column":5,"nodeType":"962","messageId":"963","endLine":38,"endColumn":8},{"ruleId":"960","severity":1,"message":"1173","line":118,"column":29,"nodeType":"962","messageId":"963","endLine":118,"endColumn":36},{"ruleId":"960","severity":1,"message":"1059","line":118,"column":38,"nodeType":"962","messageId":"963","endLine":118,"endColumn":46},{"ruleId":"960","severity":1,"message":"1058","line":118,"column":48,"nodeType":"962","messageId":"963","endLine":118,"endColumn":57},{"ruleId":"960","severity":1,"message":"1013","line":118,"column":59,"nodeType":"962","messageId":"963","endLine":118,"endColumn":68},{"ruleId":"998","severity":1,"message":"999","line":161,"column":5,"nodeType":"1000","messageId":"1001","endLine":167,"endColumn":6},{"ruleId":"1002","severity":1,"message":"1003","line":174,"column":41,"nodeType":"1004","messageId":"1005","endLine":174,"endColumn":43},{"ruleId":"1174","severity":1,"message":"1175","line":318,"column":34,"nodeType":"979","messageId":"1176","endLine":318,"endColumn":48},{"ruleId":"1174","severity":1,"message":"1175","line":369,"column":29,"nodeType":"979","messageId":"1176","endLine":369,"endColumn":42},{"ruleId":"960","severity":1,"message":"1006","line":457,"column":11,"nodeType":"962","messageId":"963","endLine":457,"endColumn":21},{"ruleId":"960","severity":1,"message":"1008","line":590,"column":11,"nodeType":"962","messageId":"963","endLine":590,"endColumn":24},{"ruleId":"1009","severity":1,"message":"1010","line":786,"column":15,"nodeType":"1011","endLine":786,"endColumn":63},{"ruleId":"960","severity":1,"message":"1012","line":850,"column":5,"nodeType":"962","messageId":"963","endLine":850,"endColumn":12},{"ruleId":"960","severity":1,"message":"1013","line":851,"column":11,"nodeType":"962","messageId":"963","endLine":851,"endColumn":20},{"ruleId":"1009","severity":1,"message":"1010","line":886,"column":15,"nodeType":"1011","endLine":886,"endColumn":63},{"ruleId":"998","severity":1,"message":"999","line":917,"column":5,"nodeType":"1000","messageId":"1001","endLine":920,"endColumn":6},{"ruleId":"998","severity":1,"message":"999","line":922,"column":5,"nodeType":"1000","messageId":"1001","endLine":925,"endColumn":6},{"ruleId":"960","severity":1,"message":"1177","line":1059,"column":61,"nodeType":"962","messageId":"963","endLine":1059,"endColumn":78},{"ruleId":"960","severity":1,"message":"1018","line":1059,"column":80,"nodeType":"962","messageId":"963","endLine":1059,"endColumn":85},{"ruleId":"960","severity":1,"message":"1013","line":1059,"column":118,"nodeType":"962","messageId":"963","endLine":1059,"endColumn":127},{"ruleId":"960","severity":1,"message":"1036","line":2,"column":17,"nodeType":"962","messageId":"963","endLine":2,"endColumn":23},{"ruleId":"960","severity":1,"message":"1178","line":2,"column":40,"nodeType":"962","messageId":"963","endLine":2,"endColumn":47},{"ruleId":"960","severity":1,"message":"988","line":3,"column":32,"nodeType":"962","messageId":"963","endLine":3,"endColumn":44},{"ruleId":"960","severity":1,"message":"990","line":10,"column":10,"nodeType":"962","messageId":"963","endLine":10,"endColumn":22},{"ruleId":"960","severity":1,"message":"1172","line":13,"column":10,"nodeType":"962","messageId":"963","endLine":13,"endColumn":23},{"ruleId":"960","severity":1,"message":"986","line":14,"column":10,"nodeType":"962","messageId":"963","endLine":14,"endColumn":14},{"ruleId":"960","severity":1,"message":"1151","line":14,"column":20,"nodeType":"962","messageId":"963","endLine":14,"endColumn":24},{"ruleId":"960","severity":1,"message":"987","line":14,"column":26,"nodeType":"962","messageId":"963","endLine":14,"endColumn":28},{"ruleId":"960","severity":1,"message":"1179","line":17,"column":20,"nodeType":"962","messageId":"963","endLine":17,"endColumn":29},{"ruleId":"960","severity":1,"message":"993","line":19,"column":7,"nodeType":"962","messageId":"963","endLine":19,"endColumn":13},{"ruleId":"960","severity":1,"message":"1180","line":354,"column":11,"nodeType":"962","messageId":"963","endLine":354,"endColumn":17},{"ruleId":"995","severity":1,"message":"1181","line":367,"column":69,"nodeType":"997","messageId":"980","endLine":367,"endColumn":76},{"ruleId":"960","severity":1,"message":"1182","line":422,"column":19,"nodeType":"962","messageId":"963","endLine":422,"endColumn":26},{"ruleId":"960","severity":1,"message":"1183","line":423,"column":9,"nodeType":"962","messageId":"963","endLine":423,"endColumn":13},{"ruleId":"1023","severity":1,"message":"1024","line":554,"column":69,"nodeType":"1011","endLine":554,"endColumn":104},{"ruleId":"960","severity":1,"message":"985","line":6,"column":3,"nodeType":"962","messageId":"963","endLine":6,"endColumn":7},{"ruleId":"960","severity":1,"message":"970","line":10,"column":10,"nodeType":"962","messageId":"963","endLine":10,"endColumn":30},{"ruleId":"960","severity":1,"message":"988","line":10,"column":32,"nodeType":"962","messageId":"963","endLine":10,"endColumn":44},{"ruleId":"998","severity":1,"message":"999","line":78,"column":11,"nodeType":"1000","messageId":"1001","endLine":103,"endColumn":12},{"ruleId":"1028","severity":1,"message":"1029","line":94,"column":13,"nodeType":"1030","messageId":"1031","endLine":101,"endColumn":20},{"ruleId":"1068","severity":1,"message":"1069","line":101,"column":15,"nodeType":"1070","messageId":"1071","endLine":101,"endColumn":20},{"ruleId":"960","severity":1,"message":"1032","line":133,"column":32,"nodeType":"962","messageId":"963","endLine":133,"endColumn":48},{"ruleId":"960","severity":1,"message":"1033","line":150,"column":15,"nodeType":"962","messageId":"963","endLine":150,"endColumn":28},{"ruleId":"960","severity":1,"message":"1184","line":58,"column":9,"nodeType":"962","messageId":"963","endLine":58,"endColumn":12},{"ruleId":"960","severity":1,"message":"991","line":9,"column":8,"nodeType":"962","messageId":"963","endLine":9,"endColumn":17},{"ruleId":"960","severity":1,"message":"970","line":10,"column":10,"nodeType":"962","messageId":"963","endLine":10,"endColumn":30},{"ruleId":"960","severity":1,"message":"1026","line":10,"column":32,"nodeType":"962","messageId":"963","endLine":10,"endColumn":47},{"ruleId":"960","severity":1,"message":"1027","line":14,"column":8,"nodeType":"962","messageId":"963","endLine":14,"endColumn":16},{"ruleId":"960","severity":1,"message":"1051","line":17,"column":8,"nodeType":"962","messageId":"963","endLine":17,"endColumn":24},{"ruleId":"960","severity":1,"message":"986","line":19,"column":10,"nodeType":"962","messageId":"963","endLine":19,"endColumn":14},{"ruleId":"960","severity":1,"message":"1035","line":159,"column":61,"nodeType":"962","messageId":"963","endLine":159,"endColumn":75},{"ruleId":"960","severity":1,"message":"1048","line":4,"column":5,"nodeType":"962","messageId":"963","endLine":4,"endColumn":11},{"ruleId":"960","severity":1,"message":"1049","line":12,"column":8,"nodeType":"962","messageId":"963","endLine":12,"endColumn":14},{"ruleId":"960","severity":1,"message":"1036","line":13,"column":8,"nodeType":"962","messageId":"963","endLine":13,"endColumn":14},{"ruleId":"960","severity":1,"message":"1050","line":14,"column":8,"nodeType":"962","messageId":"963","endLine":14,"endColumn":21},{"ruleId":"960","severity":1,"message":"1051","line":15,"column":8,"nodeType":"962","messageId":"963","endLine":15,"endColumn":24},{"ruleId":"960","severity":1,"message":"986","line":16,"column":10,"nodeType":"962","messageId":"963","endLine":16,"endColumn":14},{"ruleId":"960","severity":1,"message":"1090","line":17,"column":8,"nodeType":"962","messageId":"963","endLine":17,"endColumn":15},{"ruleId":"960","severity":1,"message":"1185","line":18,"column":8,"nodeType":"962","messageId":"963","endLine":18,"endColumn":14},{"ruleId":"960","severity":1,"message":"1052","line":19,"column":8,"nodeType":"962","messageId":"963","endLine":19,"endColumn":11},{"ruleId":"960","severity":1,"message":"1053","line":20,"column":8,"nodeType":"962","messageId":"963","endLine":20,"endColumn":11},{"ruleId":"960","severity":1,"message":"1054","line":21,"column":8,"nodeType":"962","messageId":"963","endLine":21,"endColumn":13},{"ruleId":"960","severity":1,"message":"990","line":22,"column":10,"nodeType":"962","messageId":"963","endLine":22,"endColumn":22},{"ruleId":"960","severity":1,"message":"1186","line":23,"column":8,"nodeType":"962","messageId":"963","endLine":23,"endColumn":14},{"ruleId":"960","severity":1,"message":"1044","line":26,"column":9,"nodeType":"962","messageId":"963","endLine":26,"endColumn":15},{"ruleId":"960","severity":1,"message":"1055","line":40,"column":15,"nodeType":"962","messageId":"963","endLine":40,"endColumn":21},{"ruleId":"960","severity":1,"message":"1056","line":40,"column":23,"nodeType":"962","messageId":"963","endLine":40,"endColumn":28},{"ruleId":"995","severity":1,"message":"1187","line":129,"column":13,"nodeType":"997","messageId":"980","endLine":129,"endColumn":26},{"ruleId":"960","severity":1,"message":"1057","line":143,"column":13,"nodeType":"962","messageId":"963","endLine":143,"endColumn":26},{"ruleId":"960","severity":1,"message":"991","line":9,"column":8,"nodeType":"962","messageId":"963","endLine":9,"endColumn":17},{"ruleId":"960","severity":1,"message":"970","line":10,"column":10,"nodeType":"962","messageId":"963","endLine":10,"endColumn":30},{"ruleId":"960","severity":1,"message":"1026","line":10,"column":32,"nodeType":"962","messageId":"963","endLine":10,"endColumn":47},{"ruleId":"960","severity":1,"message":"1027","line":14,"column":8,"nodeType":"962","messageId":"963","endLine":14,"endColumn":16},{"ruleId":"960","severity":1,"message":"986","line":19,"column":10,"nodeType":"962","messageId":"963","endLine":19,"endColumn":14},{"ruleId":"998","severity":1,"message":"999","line":85,"column":25,"nodeType":"1000","messageId":"1001","endLine":114,"endColumn":26},{"ruleId":"1028","severity":1,"message":"1029","line":103,"column":29,"nodeType":"1030","messageId":"1031","endLine":104,"endColumn":68},{"ruleId":"1028","severity":1,"message":"1029","line":105,"column":29,"nodeType":"1030","messageId":"1031","endLine":112,"endColumn":39},{"ruleId":"960","severity":1,"message":"1034","line":290,"column":49,"nodeType":"962","messageId":"963","endLine":290,"endColumn":63},{"ruleId":"960","severity":1,"message":"1035","line":290,"column":65,"nodeType":"962","messageId":"963","endLine":290,"endColumn":79},{"ruleId":"960","severity":1,"message":"1073","line":2,"column":27,"nodeType":"962","messageId":"963","endLine":2,"endColumn":36},{"ruleId":"960","severity":1,"message":"986","line":7,"column":14,"nodeType":"962","messageId":"963","endLine":7,"endColumn":18},{"ruleId":"960","severity":1,"message":"1020","line":4,"column":10,"nodeType":"962","messageId":"963","endLine":4,"endColumn":15},{"ruleId":"960","severity":1,"message":"1036","line":4,"column":17,"nodeType":"962","messageId":"963","endLine":4,"endColumn":23},{"ruleId":"960","severity":1,"message":"985","line":4,"column":34,"nodeType":"962","messageId":"963","endLine":4,"endColumn":38},{"ruleId":"960","severity":1,"message":"1178","line":4,"column":40,"nodeType":"962","messageId":"963","endLine":4,"endColumn":47},{"ruleId":"960","severity":1,"message":"970","line":5,"column":10,"nodeType":"962","messageId":"963","endLine":5,"endColumn":30},{"ruleId":"960","severity":1,"message":"988","line":5,"column":32,"nodeType":"962","messageId":"963","endLine":5,"endColumn":44},{"ruleId":"960","severity":1,"message":"1188","line":9,"column":8,"nodeType":"962","messageId":"963","endLine":9,"endColumn":18},{"ruleId":"960","severity":1,"message":"1189","line":18,"column":8,"nodeType":"962","messageId":"963","endLine":18,"endColumn":16},{"ruleId":"960","severity":1,"message":"1190","line":19,"column":8,"nodeType":"962","messageId":"963","endLine":19,"endColumn":16},{"ruleId":"960","severity":1,"message":"1191","line":20,"column":8,"nodeType":"962","messageId":"963","endLine":20,"endColumn":18},{"ruleId":"960","severity":1,"message":"1192","line":21,"column":8,"nodeType":"962","messageId":"963","endLine":21,"endColumn":16},{"ruleId":"960","severity":1,"message":"1090","line":23,"column":8,"nodeType":"962","messageId":"963","endLine":23,"endColumn":15},{"ruleId":"960","severity":1,"message":"987","line":24,"column":26,"nodeType":"962","messageId":"963","endLine":24,"endColumn":28},{"ruleId":"1082","severity":1,"message":"1193","line":60,"column":8,"nodeType":"1084","endLine":60,"endColumn":10,"suggestions":"1194"},{"ruleId":"1082","severity":1,"message":"1195","line":102,"column":8,"nodeType":"1084","endLine":102,"endColumn":38,"suggestions":"1196"},{"ruleId":"960","severity":1,"message":"1080","line":28,"column":26,"nodeType":"962","messageId":"963","endLine":28,"endColumn":32},{"ruleId":"960","severity":1,"message":"1081","line":28,"column":34,"nodeType":"962","messageId":"963","endLine":28,"endColumn":39},{"ruleId":"1082","severity":1,"message":"1197","line":115,"column":6,"nodeType":"1084","endLine":115,"endColumn":8,"suggestions":"1198"},{"ruleId":"1009","severity":1,"message":"1010","line":167,"column":17,"nodeType":"1011","endLine":167,"endColumn":45},{"ruleId":"960","severity":1,"message":"1063","line":5,"column":5,"nodeType":"962","messageId":"963","endLine":5,"endColumn":10},{"ruleId":"960","severity":1,"message":"1072","line":11,"column":9,"nodeType":"962","messageId":"963","endLine":11,"endColumn":15},{"ruleId":"977","severity":1,"message":"1064","line":14,"column":16,"nodeType":"979","messageId":"980","endLine":14,"endColumn":18},{"ruleId":"977","severity":1,"message":"1064","line":58,"column":16,"nodeType":"979","messageId":"980","endLine":58,"endColumn":18},{"ruleId":"960","severity":1,"message":"1036","line":2,"column":10,"nodeType":"962","messageId":"963","endLine":2,"endColumn":16},{"ruleId":"960","severity":1,"message":"1137","line":2,"column":36,"nodeType":"962","messageId":"963","endLine":2,"endColumn":44},{"ruleId":"960","severity":1,"message":"1199","line":3,"column":10,"nodeType":"962","messageId":"963","endLine":3,"endColumn":22},{"ruleId":"960","severity":1,"message":"1079","line":23,"column":18,"nodeType":"962","messageId":"963","endLine":23,"endColumn":24},{"ruleId":"960","severity":1,"message":"1200","line":27,"column":10,"nodeType":"962","messageId":"963","endLine":27,"endColumn":17},{"ruleId":"960","severity":1,"message":"1201","line":27,"column":19,"nodeType":"962","messageId":"963","endLine":27,"endColumn":29},{"ruleId":"1009","severity":1,"message":"1010","line":62,"column":16,"nodeType":"1011","endLine":62,"endColumn":41},{"ruleId":"1009","severity":1,"message":"1010","line":64,"column":16,"nodeType":"1011","endLine":64,"endColumn":41},{"ruleId":"1009","severity":1,"message":"1010","line":66,"column":16,"nodeType":"1011","endLine":66,"endColumn":41},{"ruleId":"1009","severity":1,"message":"1010","line":68,"column":16,"nodeType":"1011","endLine":68,"endColumn":41},{"ruleId":"1082","severity":1,"message":"1202","line":74,"column":3,"nodeType":"962","endLine":74,"endColumn":12,"suggestions":"1203"},{"ruleId":"960","severity":1,"message":"1073","line":1,"column":27,"nodeType":"962","messageId":"963","endLine":1,"endColumn":36},{"ruleId":"960","severity":1,"message":"986","line":8,"column":10,"nodeType":"962","messageId":"963","endLine":8,"endColumn":14},{"ruleId":"960","severity":1,"message":"1151","line":8,"column":20,"nodeType":"962","messageId":"963","endLine":8,"endColumn":24},{"ruleId":"960","severity":1,"message":"1204","line":18,"column":9,"nodeType":"962","messageId":"963","endLine":18,"endColumn":16},{"ruleId":"960","severity":1,"message":"1165","line":68,"column":21,"nodeType":"962","messageId":"963","endLine":68,"endColumn":27},{"ruleId":"960","severity":1,"message":"1166","line":72,"column":21,"nodeType":"962","messageId":"963","endLine":72,"endColumn":28},{"ruleId":"1023","severity":1,"message":"1024","line":160,"column":17,"nodeType":"1011","endLine":176,"endColumn":18},{"ruleId":"998","severity":1,"message":"999","line":224,"column":29,"nodeType":"1000","messageId":"1001","endLine":243,"endColumn":30},{"ruleId":"960","severity":1,"message":"1050","line":9,"column":8,"nodeType":"962","messageId":"963","endLine":9,"endColumn":21},{"ruleId":"960","severity":1,"message":"1045","line":14,"column":5,"nodeType":"962","messageId":"963","endLine":14,"endColumn":12},{"ruleId":"1082","severity":1,"message":"1205","line":53,"column":6,"nodeType":"1084","endLine":53,"endColumn":41,"suggestions":"1206"},{"ruleId":"960","severity":1,"message":"1063","line":4,"column":5,"nodeType":"962","messageId":"963","endLine":4,"endColumn":10},{"ruleId":"977","severity":1,"message":"1064","line":16,"column":16,"nodeType":"979","messageId":"980","endLine":16,"endColumn":18},{"ruleId":"977","severity":1,"message":"1064","line":67,"column":16,"nodeType":"979","messageId":"980","endLine":67,"endColumn":18},{"ruleId":"977","severity":1,"message":"1064","line":101,"column":16,"nodeType":"979","messageId":"980","endLine":101,"endColumn":18},{"ruleId":"960","severity":1,"message":"1207","line":102,"column":9,"nodeType":"962","messageId":"963","endLine":102,"endColumn":15},{"ruleId":"960","severity":1,"message":"1208","line":191,"column":25,"nodeType":"962","messageId":"963","endLine":191,"endColumn":32},{"ruleId":"960","severity":1,"message":"1209","line":191,"column":34,"nodeType":"962","messageId":"963","endLine":191,"endColumn":49},{"ruleId":"960","severity":1,"message":"1210","line":191,"column":51,"nodeType":"962","messageId":"963","endLine":191,"endColumn":55},{"ruleId":"960","severity":1,"message":"1211","line":192,"column":25,"nodeType":"962","messageId":"963","endLine":192,"endColumn":44},{"ruleId":"960","severity":1,"message":"1212","line":192,"column":46,"nodeType":"962","messageId":"963","endLine":192,"endColumn":62},{"ruleId":"960","severity":1,"message":"1213","line":192,"column":64,"nodeType":"962","messageId":"963","endLine":192,"endColumn":84},{"ruleId":"960","severity":1,"message":"1214","line":192,"column":86,"nodeType":"962","messageId":"963","endLine":192,"endColumn":96},{"ruleId":"1215","severity":1,"message":"1216","line":281,"column":33,"nodeType":"962","messageId":"1217","endLine":281,"endColumn":37},{"ruleId":"1103","severity":1,"message":"1218","line":350,"column":55,"nodeType":"1219","messageId":"1106","endLine":350,"endColumn":56,"suggestions":"1220"},{"ruleId":"1103","severity":1,"message":"1218","line":350,"column":69,"nodeType":"1219","messageId":"1106","endLine":350,"endColumn":70,"suggestions":"1221"},{"ruleId":"960","severity":1,"message":"1165","line":548,"column":15,"nodeType":"962","messageId":"963","endLine":548,"endColumn":21},{"ruleId":"960","severity":1,"message":"1167","line":560,"column":28,"nodeType":"962","messageId":"963","endLine":560,"endColumn":31},{"ruleId":"960","severity":1,"message":"1168","line":560,"column":33,"nodeType":"962","messageId":"963","endLine":560,"endColumn":35},{"ruleId":"960","severity":1,"message":"1169","line":560,"column":37,"nodeType":"962","messageId":"963","endLine":560,"endColumn":45},{"ruleId":"960","severity":1,"message":"1222","line":60,"column":13,"nodeType":"962","messageId":"963","endLine":60,"endColumn":22},{"ruleId":"960","severity":1,"message":"969","line":11,"column":3,"nodeType":"962","messageId":"963","endLine":11,"endColumn":9},{"ruleId":"960","severity":1,"message":"1157","line":21,"column":8,"nodeType":"962","messageId":"963","endLine":21,"endColumn":14},{"ruleId":"960","severity":1,"message":"972","line":26,"column":10,"nodeType":"962","messageId":"963","endLine":26,"endColumn":21},{"ruleId":"960","severity":1,"message":"1158","line":28,"column":8,"nodeType":"962","messageId":"963","endLine":28,"endColumn":14},{"ruleId":"960","severity":1,"message":"1151","line":30,"column":10,"nodeType":"962","messageId":"963","endLine":30,"endColumn":14},{"ruleId":"960","severity":1,"message":"986","line":30,"column":16,"nodeType":"962","messageId":"963","endLine":30,"endColumn":20},{"ruleId":"960","severity":1,"message":"1159","line":31,"column":10,"nodeType":"962","messageId":"963","endLine":31,"endColumn":20},{"ruleId":"960","severity":1,"message":"1160","line":36,"column":8,"nodeType":"962","messageId":"963","endLine":36,"endColumn":21},{"ruleId":"960","severity":1,"message":"1161","line":37,"column":8,"nodeType":"962","messageId":"963","endLine":37,"endColumn":15},{"ruleId":"960","severity":1,"message":"992","line":42,"column":9,"nodeType":"962","messageId":"963","endLine":42,"endColumn":16},{"ruleId":"960","severity":1,"message":"993","line":43,"column":7,"nodeType":"962","messageId":"963","endLine":43,"endColumn":13},{"ruleId":"960","severity":1,"message":"1162","line":166,"column":9,"nodeType":"962","messageId":"963","endLine":166,"endColumn":16},{"ruleId":"960","severity":1,"message":"1163","line":176,"column":15,"nodeType":"962","messageId":"963","endLine":176,"endColumn":21},{"ruleId":"960","severity":1,"message":"1164","line":626,"column":15,"nodeType":"962","messageId":"963","endLine":626,"endColumn":24},{"ruleId":"960","severity":1,"message":"1165","line":901,"column":15,"nodeType":"962","messageId":"963","endLine":901,"endColumn":21},{"ruleId":"960","severity":1,"message":"1166","line":905,"column":15,"nodeType":"962","messageId":"963","endLine":905,"endColumn":22},{"ruleId":"960","severity":1,"message":"1167","line":989,"column":28,"nodeType":"962","messageId":"963","endLine":989,"endColumn":31},{"ruleId":"960","severity":1,"message":"1168","line":989,"column":33,"nodeType":"962","messageId":"963","endLine":989,"endColumn":35},{"ruleId":"960","severity":1,"message":"1169","line":989,"column":37,"nodeType":"962","messageId":"963","endLine":989,"endColumn":45},{"ruleId":"960","severity":1,"message":"1014","line":989,"column":53,"nodeType":"962","messageId":"963","endLine":989,"endColumn":63},{"ruleId":"960","severity":1,"message":"1015","line":989,"column":65,"nodeType":"962","messageId":"963","endLine":989,"endColumn":73},{"ruleId":"960","severity":1,"message":"1016","line":989,"column":75,"nodeType":"962","messageId":"963","endLine":989,"endColumn":81},{"ruleId":"960","severity":1,"message":"1170","line":989,"column":111,"nodeType":"962","messageId":"963","endLine":989,"endColumn":117},{"ruleId":"960","severity":1,"message":"1171","line":989,"column":119,"nodeType":"962","messageId":"963","endLine":989,"endColumn":129},{"ruleId":"1023","severity":1,"message":"1024","line":1001,"column":11,"nodeType":"1011","endLine":1017,"endColumn":12},{"ruleId":"998","severity":1,"message":"999","line":1099,"column":19,"nodeType":"1000","messageId":"1001","endLine":1118,"endColumn":20},{"ruleId":"1009","severity":1,"message":"1010","line":1214,"column":17,"nodeType":"1011","endLine":1214,"endColumn":52},{"ruleId":"1009","severity":1,"message":"1010","line":1215,"column":17,"nodeType":"1011","endLine":1215,"endColumn":51},{"ruleId":"960","severity":1,"message":"983","line":5,"column":3,"nodeType":"962","messageId":"963","endLine":5,"endColumn":8},{"ruleId":"960","severity":1,"message":"991","line":8,"column":8,"nodeType":"962","messageId":"963","endLine":8,"endColumn":17},{"ruleId":"960","severity":1,"message":"988","line":11,"column":32,"nodeType":"962","messageId":"963","endLine":11,"endColumn":44},{"ruleId":"960","severity":1,"message":"1032","line":132,"column":32,"nodeType":"962","messageId":"963","endLine":132,"endColumn":48},{"ruleId":"960","severity":1,"message":"1033","line":154,"column":15,"nodeType":"962","messageId":"963","endLine":154,"endColumn":28},{"ruleId":"960","severity":1,"message":"1022","line":353,"column":21,"nodeType":"962","messageId":"963","endLine":353,"endColumn":27},{"ruleId":"1023","severity":1,"message":"1024","line":519,"column":17,"nodeType":"1011","endLine":519,"endColumn":54},{"ruleId":"1023","severity":1,"message":"1024","line":577,"column":17,"nodeType":"1011","endLine":577,"endColumn":60},{"ruleId":"960","severity":1,"message":"1020","line":2,"column":10,"nodeType":"962","messageId":"963","endLine":2,"endColumn":15},{"ruleId":"960","severity":1,"message":"1036","line":2,"column":17,"nodeType":"962","messageId":"963","endLine":2,"endColumn":23},{"ruleId":"960","severity":1,"message":"985","line":2,"column":34,"nodeType":"962","messageId":"963","endLine":2,"endColumn":38},{"ruleId":"960","severity":1,"message":"1178","line":2,"column":40,"nodeType":"962","messageId":"963","endLine":2,"endColumn":47},{"ruleId":"960","severity":1,"message":"970","line":3,"column":10,"nodeType":"962","messageId":"963","endLine":3,"endColumn":30},{"ruleId":"960","severity":1,"message":"988","line":3,"column":32,"nodeType":"962","messageId":"963","endLine":3,"endColumn":44},{"ruleId":"960","severity":1,"message":"1090","line":11,"column":8,"nodeType":"962","messageId":"963","endLine":11,"endColumn":15},{"ruleId":"960","severity":1,"message":"987","line":12,"column":26,"nodeType":"962","messageId":"963","endLine":12,"endColumn":28},{"ruleId":"960","severity":1,"message":"1223","line":18,"column":5,"nodeType":"962","messageId":"963","endLine":18,"endColumn":10},{"ruleId":"998","severity":1,"message":"999","line":164,"column":9,"nodeType":"1000","messageId":"1001","endLine":182,"endColumn":10},{"ruleId":"960","severity":1,"message":"1063","line":4,"column":5,"nodeType":"962","messageId":"963","endLine":4,"endColumn":10},{"ruleId":"960","severity":1,"message":"1072","line":10,"column":13,"nodeType":"962","messageId":"963","endLine":10,"endColumn":19},{"ruleId":"977","severity":1,"message":"1064","line":13,"column":20,"nodeType":"979","messageId":"980","endLine":13,"endColumn":22},{"ruleId":"977","severity":1,"message":"1064","line":61,"column":20,"nodeType":"979","messageId":"980","endLine":61,"endColumn":22},{"ruleId":"1082","severity":1,"message":"1224","line":27,"column":8,"nodeType":"1084","endLine":27,"endColumn":10,"suggestions":"1225"},{"ruleId":"960","severity":1,"message":"1226","line":1,"column":17,"nodeType":"962","messageId":"963","endLine":1,"endColumn":26},{"ruleId":"960","severity":1,"message":"1130","line":1,"column":39,"nodeType":"962","messageId":"963","endLine":1,"endColumn":47},{"ruleId":"1082","severity":1,"message":"1227","line":162,"column":6,"nodeType":"1084","endLine":162,"endColumn":23,"suggestions":"1228"},{"ruleId":"960","severity":1,"message":"1229","line":2,"column":8,"nodeType":"962","messageId":"963","endLine":2,"endColumn":17},{"ruleId":"960","severity":1,"message":"1020","line":4,"column":10,"nodeType":"962","messageId":"963","endLine":4,"endColumn":15},{"ruleId":"960","severity":1,"message":"1036","line":4,"column":17,"nodeType":"962","messageId":"963","endLine":4,"endColumn":23},{"ruleId":"960","severity":1,"message":"984","line":4,"column":25,"nodeType":"962","messageId":"963","endLine":4,"endColumn":32},{"ruleId":"960","severity":1,"message":"985","line":4,"column":34,"nodeType":"962","messageId":"963","endLine":4,"endColumn":38},{"ruleId":"960","severity":1,"message":"1178","line":4,"column":40,"nodeType":"962","messageId":"963","endLine":4,"endColumn":47},{"ruleId":"960","severity":1,"message":"970","line":5,"column":10,"nodeType":"962","messageId":"963","endLine":5,"endColumn":30},{"ruleId":"960","severity":1,"message":"989","line":5,"column":46,"nodeType":"962","messageId":"963","endLine":5,"endColumn":61},{"ruleId":"960","severity":1,"message":"986","line":9,"column":10,"nodeType":"962","messageId":"963","endLine":9,"endColumn":14},{"ruleId":"960","severity":1,"message":"1151","line":9,"column":20,"nodeType":"962","messageId":"963","endLine":9,"endColumn":24},{"ruleId":"960","severity":1,"message":"987","line":9,"column":26,"nodeType":"962","messageId":"963","endLine":9,"endColumn":28},{"ruleId":"1082","severity":1,"message":"1230","line":30,"column":8,"nodeType":"1084","endLine":30,"endColumn":10,"suggestions":"1231"},{"ruleId":"960","severity":1,"message":"1232","line":5,"column":28,"nodeType":"962","messageId":"963","endLine":5,"endColumn":33},{"ruleId":"960","severity":1,"message":"1233","line":5,"column":42,"nodeType":"962","messageId":"963","endLine":5,"endColumn":45},{"ruleId":"960","severity":1,"message":"1234","line":31,"column":18,"nodeType":"962","messageId":"963","endLine":31,"endColumn":22},{"ruleId":"1009","severity":1,"message":"1010","line":78,"column":28,"nodeType":"1011","endLine":78,"endColumn":57},{"ruleId":"1009","severity":1,"message":"1010","line":80,"column":28,"nodeType":"1011","endLine":80,"endColumn":57},{"ruleId":"1009","severity":1,"message":"1010","line":82,"column":28,"nodeType":"1011","endLine":82,"endColumn":57},{"ruleId":"1009","severity":1,"message":"1010","line":84,"column":28,"nodeType":"1011","endLine":84,"endColumn":57},{"ruleId":"1009","severity":1,"message":"1010","line":99,"column":21,"nodeType":"1011","endLine":106,"endColumn":23},{"ruleId":"1009","severity":1,"message":"1010","line":108,"column":25,"nodeType":"1011","endLine":108,"endColumn":45},{"ruleId":"977","severity":1,"message":"978","line":170,"column":32,"nodeType":"979","messageId":"980","endLine":170,"endColumn":34},{"ruleId":"1082","severity":1,"message":"1235","line":251,"column":8,"nodeType":"1084","endLine":251,"endColumn":20,"suggestions":"1236"},{"ruleId":"1082","severity":1,"message":"1237","line":267,"column":8,"nodeType":"1084","endLine":267,"endColumn":10,"suggestions":"1238"},{"ruleId":"960","severity":1,"message":"1130","line":2,"column":17,"nodeType":"962","messageId":"963","endLine":2,"endColumn":25},{"ruleId":"960","severity":1,"message":"1073","line":2,"column":5,"nodeType":"962","messageId":"963","endLine":2,"endColumn":14},{"ruleId":"960","severity":1,"message":"1130","line":3,"column":5,"nodeType":"962","messageId":"963","endLine":3,"endColumn":13},{"ruleId":"960","severity":1,"message":"1131","line":5,"column":10,"nodeType":"962","messageId":"963","endLine":5,"endColumn":15},{"ruleId":"960","severity":1,"message":"1133","line":16,"column":8,"nodeType":"962","messageId":"963","endLine":16,"endColumn":9},{"ruleId":"960","severity":1,"message":"1079","line":19,"column":18,"nodeType":"962","messageId":"963","endLine":19,"endColumn":24},{"ruleId":"960","severity":1,"message":"1134","line":22,"column":11,"nodeType":"962","messageId":"963","endLine":22,"endColumn":29},{"ruleId":"960","severity":1,"message":"1131","line":4,"column":3,"nodeType":"962","messageId":"963","endLine":4,"endColumn":8},{"ruleId":"960","severity":1,"message":"1232","line":10,"column":3,"nodeType":"962","messageId":"963","endLine":10,"endColumn":8},{"ruleId":"960","severity":1,"message":"1239","line":11,"column":3,"nodeType":"962","messageId":"963","endLine":11,"endColumn":7},{"ruleId":"960","severity":1,"message":"1240","line":16,"column":8,"nodeType":"962","messageId":"963","endLine":16,"endColumn":15},{"ruleId":"960","severity":1,"message":"1241","line":69,"column":5,"nodeType":"962","messageId":"963","endLine":69,"endColumn":22},{"ruleId":"960","severity":1,"message":"1242","line":73,"column":5,"nodeType":"962","messageId":"963","endLine":73,"endColumn":23},{"ruleId":"1243","severity":1,"message":"1244","line":131,"column":61,"nodeType":"979","messageId":"1245","endLine":131,"endColumn":62},{"ruleId":"1243","severity":1,"message":"1244","line":139,"column":45,"nodeType":"979","messageId":"1245","endLine":139,"endColumn":46},{"ruleId":"1082","severity":1,"message":"1246","line":283,"column":6,"nodeType":"1084","endLine":283,"endColumn":13,"suggestions":"1247"},{"ruleId":"1082","severity":1,"message":"1248","line":305,"column":6,"nodeType":"1084","endLine":305,"endColumn":26,"suggestions":"1249"},{"ruleId":"960","severity":1,"message":"1131","line":2,"column":10,"nodeType":"962","messageId":"963","endLine":2,"endColumn":15},{"ruleId":"960","severity":1,"message":"1079","line":29,"column":18,"nodeType":"962","messageId":"963","endLine":29,"endColumn":24},{"ruleId":"1082","severity":1,"message":"1250","line":73,"column":6,"nodeType":"1084","endLine":73,"endColumn":21,"suggestions":"1251"},{"ruleId":"1009","severity":1,"message":"1010","line":105,"column":13,"nodeType":"1011","endLine":105,"endColumn":42},{"ruleId":"1009","severity":1,"message":"1010","line":117,"column":19,"nodeType":"1011","endLine":117,"endColumn":43},{"ruleId":"1009","severity":1,"message":"1010","line":134,"column":27,"nodeType":"1011","endLine":140,"endColumn":29},{"ruleId":"960","severity":1,"message":"1150","line":5,"column":3,"nodeType":"962","messageId":"963","endLine":5,"endColumn":10},{"ruleId":"960","severity":1,"message":"1036","line":6,"column":3,"nodeType":"962","messageId":"963","endLine":6,"endColumn":9},{"ruleId":"960","severity":1,"message":"983","line":7,"column":3,"nodeType":"962","messageId":"963","endLine":7,"endColumn":8},{"ruleId":"960","severity":1,"message":"988","line":10,"column":10,"nodeType":"962","messageId":"963","endLine":10,"endColumn":22},{"ruleId":"960","severity":1,"message":"1252","line":11,"column":10,"nodeType":"962","messageId":"963","endLine":11,"endColumn":24},{"ruleId":"960","severity":1,"message":"1253","line":21,"column":8,"nodeType":"962","messageId":"963","endLine":21,"endColumn":16},{"ruleId":"960","severity":1,"message":"1254","line":28,"column":8,"nodeType":"962","messageId":"963","endLine":28,"endColumn":17},{"ruleId":"960","severity":1,"message":"1255","line":29,"column":8,"nodeType":"962","messageId":"963","endLine":29,"endColumn":21},{"ruleId":"960","severity":1,"message":"1189","line":31,"column":8,"nodeType":"962","messageId":"963","endLine":31,"endColumn":16},{"ruleId":"960","severity":1,"message":"1256","line":43,"column":8,"nodeType":"962","messageId":"963","endLine":43,"endColumn":15},{"ruleId":"960","severity":1,"message":"992","line":45,"column":9,"nodeType":"962","messageId":"963","endLine":45,"endColumn":16},{"ruleId":"960","severity":1,"message":"993","line":46,"column":7,"nodeType":"962","messageId":"963","endLine":46,"endColumn":13},{"ruleId":"960","severity":1,"message":"1257","line":50,"column":7,"nodeType":"962","messageId":"963","endLine":50,"endColumn":17},{"ruleId":"960","severity":1,"message":"1258","line":109,"column":10,"nodeType":"962","messageId":"963","endLine":109,"endColumn":19},{"ruleId":"960","severity":1,"message":"1259","line":109,"column":20,"nodeType":"962","messageId":"963","endLine":109,"endColumn":32},{"ruleId":"1028","severity":1,"message":"1029","line":167,"column":7,"nodeType":"1030","messageId":"1031","endLine":168,"endColumn":31},{"ruleId":"1028","severity":1,"message":"1029","line":169,"column":7,"nodeType":"1030","messageId":"1031","endLine":172,"endColumn":15},{"ruleId":"1028","severity":1,"message":"1260","line":179,"column":7,"nodeType":"1030","messageId":"1261","endLine":180,"endColumn":15},{"ruleId":"1082","severity":1,"message":"1262","line":197,"column":6,"nodeType":"1084","endLine":197,"endColumn":8,"suggestions":"1263"},{"ruleId":"960","severity":1,"message":"1264","line":234,"column":13,"nodeType":"962","messageId":"963","endLine":234,"endColumn":20},{"ruleId":"1009","severity":1,"message":"1010","line":814,"column":17,"nodeType":"1011","endLine":814,"endColumn":63},{"ruleId":"1009","severity":1,"message":"1010","line":820,"column":17,"nodeType":"1011","endLine":820,"endColumn":65},{"ruleId":"1023","severity":1,"message":"1024","line":854,"column":15,"nodeType":"1011","endLine":859,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1024","line":860,"column":15,"nodeType":"1011","endLine":866,"endColumn":16},{"ruleId":"1009","severity":1,"message":"1010","line":946,"column":17,"nodeType":"1011","endLine":946,"endColumn":63},{"ruleId":"1009","severity":1,"message":"1010","line":951,"column":15,"nodeType":"1011","endLine":951,"endColumn":64},{"ruleId":"1023","severity":1,"message":"1024","line":1044,"column":13,"nodeType":"1011","endLine":1046,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1024","line":1109,"column":15,"nodeType":"1011","endLine":1111,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1024","line":1125,"column":13,"nodeType":"1011","endLine":1127,"endColumn":14},{"ruleId":"1023","severity":1,"message":"1024","line":1193,"column":15,"nodeType":"1011","endLine":1195,"endColumn":16},{"ruleId":"1023","severity":1,"message":"1024","line":1208,"column":15,"nodeType":"1011","endLine":1210,"endColumn":16},{"ruleId":"1009","severity":1,"message":"1010","line":1249,"column":13,"nodeType":"1011","endLine":1249,"endColumn":58},{"ruleId":"1009","severity":1,"message":"1010","line":1446,"column":17,"nodeType":"1011","endLine":1446,"endColumn":52},{"ruleId":"1009","severity":1,"message":"1010","line":1447,"column":17,"nodeType":"1011","endLine":1447,"endColumn":51},"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Praviders' is defined but never used.","no-native-reassign",["1265"],"no-negated-in-lhs",["1266"],"'Select' is defined but never used.","'createFromIconfontCN' is defined but never used.","'dui' is defined but never used.","'FetchEszVet' is defined but never used.","'Table' is defined but never used.","'address' is assigned a value but never used.","'displayName' is assigned a value but never used.","'phoneNumber' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["1265"],["1266"],"'Modal' is defined but never used.","'message' is defined but never used.","'Spin' is defined but never used.","'mTop' is defined but never used.","'pX' is defined but never used.","'SyncOutlined' is defined but never used.","'LoadingOutlined' is defined but never used.","'fetchRequest' is defined but never used.","'Draggable' is defined but never used.","'SubMenu' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'url' is assigned a value but never used.","no-dupe-keys","Duplicate key 'imgurl'.","ObjectExpression","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'disabled' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","'Input' is defined but never used.","'mellaLogo' is defined but never used.","'bounds' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'_resend' is assigned a value but never used.","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'lastOrganization' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'Button' is defined but never used.","'Calendar' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'horse' is defined but never used.","'rabbit' is defined but never used.","'female' is defined but never used.","'male' is defined but never used.","'Option' is assigned a value but never used.","'storage' is assigned a value but never used.","'errPatientId' is assigned a value but never used.","'userImage' is assigned a value but never used.","'Switch' is defined but never used.","'Slider' is defined but never used.","'electronStore' is defined but never used.","'temporaryStorage' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","Duplicate key 'disabled'.","'petId' is assigned a value but never used.","'assignOwnerName' is assigned a value but never used.","'token' is assigned a value but never used.","Expected '===' and instead saw '=='.","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'header' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'px' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.","ArrayExpression",["1267"],"React Hook useEffect has missing dependencies: '_getExam' and 'petList'. Either include them or remove the dependency array. You can also do a functional update 'setPetList(p => ...)' if you only need 'petList' in the 'setPetList' call.",["1268"],"'Menu' is defined but never used.","'Tooltip' is defined but never used.","'MyModal' is defined but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1269","1270"],"Unnecessary escape character: \\-.",["1271","1272"],["1273","1274"],["1275","1276"],["1277","1278"],["1279","1280"],["1281","1282"],["1283","1284"],["1285","1286"],["1287","1288"],["1289","1290"],["1291","1292"],["1293","1294"],["1295","1296"],["1297","1298"],["1299","1300"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["1301"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["1302"],"React Hook useEffect has a missing dependency: 'getOption'. Either include it or remove the dependency array.",["1303"],"'useState' is defined but never used.","'Image' is defined but never used.","'PressButton_Pro' is defined but never used.","'_' is defined but never used.","'mellaConnectStatus' is assigned a value but never used.","'useRef' is defined but never used.","'PageHeader' is defined but never used.","'Carousel' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["1304"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1305"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["1306"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["1307"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1308"],"'Popover' is defined but never used.","'MTop' is defined but never used.","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["1309"],"React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["1310"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'MaxMin' is defined but never used.","'gender' is defined but never used.","'stopBubble' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","'fetchRequest1' is defined but never used.","'petName' is assigned a value but never used.","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","'petSpeciesBreedId' is assigned a value but never used.","'BackTop' is defined but never used.","'addQRCode' is defined but never used.","'isCode' is assigned a value but never used.","Duplicate key 'opacity'.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","'mar' is assigned a value but never used.","'parent' is defined but never used.","'moment' is defined but never used.","Duplicate key 'connectionKey'.","'blueSearch' is defined but never used.","'MinClose' is defined but never used.","'MouseDiv' is defined but never used.","'back_white' is defined but never used.","'back_hui' is defined but never used.","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1311"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["1312"],"React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["1313"],"'PlusOutlined' is defined but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["1314"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareInfo'. Either include it or remove the dependency array.",["1315"],"'params' is assigned a value but never used.","'bree_id' is assigned a value but never used.","'animalcolour_id' is assigned a value but never used.","'guid' is assigned a value but never used.","'referring_clinic_id' is assigned a value but never used.","'referring_vet_id' is assigned a value but never used.","'residence_contact_id' is assigned a value but never used.","'species_id' is assigned a value but never used.","no-const-assign","'name' is constant.","const","Unnecessary escape character: \\\".","TemplateElement",["1316","1317"],["1318","1319"],"'chooseNum' is assigned a value but never used.","'num07' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["1320"],"'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1321"],"'PropTypes' is defined but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["1322"],"'Space' is defined but never used.","'Tag' is defined but never used.","'memo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["1323"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["1324"],"'Card' is defined but never used.","'Charlie' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["1325"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["1326"],"React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["1327"],"'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'Button1' is defined but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","Expected a 'break' statement before 'default'.","default","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["1328"],"'bluData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1329","fix":"1330"},{"desc":"1331","fix":"1332"},{"messageId":"1333","fix":"1334","desc":"1335"},{"messageId":"1336","fix":"1337","desc":"1338"},{"messageId":"1333","fix":"1339","desc":"1335"},{"messageId":"1336","fix":"1340","desc":"1338"},{"messageId":"1333","fix":"1341","desc":"1335"},{"messageId":"1336","fix":"1342","desc":"1338"},{"messageId":"1333","fix":"1343","desc":"1335"},{"messageId":"1336","fix":"1344","desc":"1338"},{"messageId":"1333","fix":"1345","desc":"1335"},{"messageId":"1336","fix":"1346","desc":"1338"},{"messageId":"1333","fix":"1347","desc":"1335"},{"messageId":"1336","fix":"1348","desc":"1338"},{"messageId":"1333","fix":"1349","desc":"1335"},{"messageId":"1336","fix":"1350","desc":"1338"},{"messageId":"1333","fix":"1351","desc":"1335"},{"messageId":"1336","fix":"1352","desc":"1338"},{"messageId":"1333","fix":"1353","desc":"1335"},{"messageId":"1336","fix":"1354","desc":"1338"},{"messageId":"1333","fix":"1355","desc":"1335"},{"messageId":"1336","fix":"1356","desc":"1338"},{"messageId":"1333","fix":"1357","desc":"1335"},{"messageId":"1336","fix":"1358","desc":"1338"},{"messageId":"1333","fix":"1359","desc":"1335"},{"messageId":"1336","fix":"1360","desc":"1338"},{"messageId":"1333","fix":"1361","desc":"1335"},{"messageId":"1336","fix":"1362","desc":"1338"},{"messageId":"1333","fix":"1363","desc":"1335"},{"messageId":"1336","fix":"1364","desc":"1338"},{"messageId":"1333","fix":"1365","desc":"1335"},{"messageId":"1336","fix":"1366","desc":"1338"},{"messageId":"1333","fix":"1367","desc":"1335"},{"messageId":"1336","fix":"1368","desc":"1338"},{"desc":"1369","fix":"1370"},{"desc":"1371","fix":"1372"},{"desc":"1373","fix":"1374"},{"desc":"1375","fix":"1376"},{"desc":"1377","fix":"1378"},{"desc":"1379","fix":"1380"},{"desc":"1381","fix":"1382"},{"desc":"1383","fix":"1384"},{"desc":"1385","fix":"1386"},{"desc":"1387","fix":"1388"},{"desc":"1389","fix":"1390"},{"desc":"1391","fix":"1392"},{"desc":"1393","fix":"1394"},{"desc":"1395","fix":"1396"},{"desc":"1397","fix":"1398"},{"messageId":"1333","fix":"1399","desc":"1335"},{"messageId":"1336","fix":"1400","desc":"1338"},{"messageId":"1333","fix":"1401","desc":"1335"},{"messageId":"1336","fix":"1402","desc":"1338"},{"desc":"1403","fix":"1404"},{"desc":"1405","fix":"1406"},{"desc":"1407","fix":"1408"},{"desc":"1409","fix":"1410"},{"desc":"1411","fix":"1412"},{"desc":"1413","fix":"1414"},{"desc":"1415","fix":"1416"},{"desc":"1417","fix":"1418"},{"desc":"1419","fix":"1420"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"1421","text":"1422"},"Update the dependencies array to be: [_getExam, petList]",{"range":"1423","text":"1424"},"removeEscape",{"range":"1425","text":"1426"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1427","text":"1428"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1429","text":"1426"},{"range":"1430","text":"1428"},{"range":"1431","text":"1426"},{"range":"1432","text":"1428"},{"range":"1433","text":"1426"},{"range":"1434","text":"1428"},{"range":"1435","text":"1426"},{"range":"1436","text":"1428"},{"range":"1437","text":"1426"},{"range":"1438","text":"1428"},{"range":"1439","text":"1426"},{"range":"1440","text":"1428"},{"range":"1441","text":"1426"},{"range":"1442","text":"1428"},{"range":"1443","text":"1426"},{"range":"1444","text":"1428"},{"range":"1445","text":"1426"},{"range":"1446","text":"1428"},{"range":"1447","text":"1426"},{"range":"1448","text":"1428"},{"range":"1449","text":"1426"},{"range":"1450","text":"1428"},{"range":"1451","text":"1426"},{"range":"1452","text":"1428"},{"range":"1453","text":"1426"},{"range":"1454","text":"1428"},{"range":"1455","text":"1426"},{"range":"1456","text":"1428"},{"range":"1457","text":"1426"},{"range":"1458","text":"1428"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"1459","text":"1460"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"1461","text":"1462"},"Update the dependencies array to be: [echarsData, getOption]",{"range":"1463","text":"1464"},"Update the dependencies array to be: [finishScan, inputIndex, newData, patientId]",{"range":"1465","text":"1466"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1467","text":"1468"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1469","text":"1470"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"1471","text":"1472"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"1473","text":"1474"},"Update the dependencies array to be: [listDate]",{"range":"1475","text":"1476"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1477","text":"1478"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1479","text":"1480"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1481","text":"1482"},"Update the dependencies array to be: [hardwareList]",{"range":"1483","text":"1484"},"Add dependencies array: [callBack, timers]",{"range":"1485","text":"1486"},"Update the dependencies array to be: [selectHardwareType, hardwareList, hardwareInfo]",{"range":"1487","text":"1488"},{"range":"1489","text":"1426"},{"range":"1490","text":"1428"},{"range":"1491","text":"1426"},{"range":"1492","text":"1428"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"1493","text":"1494"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"1495","text":"1496"},"Update the dependencies array to be: [_getExam]",{"range":"1497","text":"1498"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1499","text":"1500"},"Update the dependencies array to be: [storage.userId]",{"range":"1501","text":"1502"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"1503","text":"1504"},"Update the dependencies array to be: [mellaConnectStatus, value]",{"range":"1505","text":"1506"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1507","text":"1508"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1509","text":"1510"},[2911,2927],"[hardwareReduce, weight]",[1393,1395],"[_getExam, petList]",[20998,20999],"",[20998,20998],"\\",[21204,21205],[21204,21204],[22309,22310],[22309,22309],[22515,22516],[22515,22515],[23618,23619],[23618,23618],[23824,23825],[23824,23824],[25261,25262],[25261,25261],[25467,25468],[25467,25467],[26531,26532],[26531,26531],[26737,26738],[26737,26737],[27895,27896],[27895,27895],[28101,28102],[28101,28101],[43981,43982],[43981,43981],[44187,44188],[44187,44187],[44733,44734],[44733,44733],[44939,44940],[44939,44939],[51295,51312],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[52011,52031],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[52194,52206],"[echarsData, getOption]",[6560,6583],"[finishScan, inputIndex, newData, patientId]",[7054,7073],"[inputIndex, rulerConfirmCount]",[7708,7715],"[petId, petLengthDataConvert, petMessage]",[8357,8395],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[8829,8840],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]",[2680,2682],"[setReceiveBroadcastHardwareInfoFun]",[3991,4021],"[devicesList, receiveBroadcastHardwareInfo]",[3289,3291],"[hardwareList]",[2304,2304],", [callBack, timers]",[2013,2048],"[selectHardwareType, hardwareList, hardwareInfo]",[12789,12790],[12789,12789],[12803,12804],[12803,12803],[885,887],"[initSelectVale, listArr]",[4514,4531],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[1031,1033],"[_getExam]",[8747,8759],"[getPetTemperatureData, petMessage]",[9194,9196],"[storage.userId]",[8347,8354],"[callBack, prediction, timeNum, value]",[8995,9015],"[mellaConnectStatus, value]",[2256,2271],"[callBack, carouselIndex]",[6529,6531],"[_noUSB, _send, blueSearch]"]