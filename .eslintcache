[{"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/advancedSettings/index.jsx":"1","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/px.jsx":"2","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/hardWareTypeUI.jsx":"3","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/EzyVet.js":"4","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/vetSpire.js":"5","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/petall.js":"6","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorAddPet/index.jsx":"7","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/settings/index.jsx":"8","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/ezyvetApi.js":"9","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/PetsUI.jsx":"10","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/editPetInfo/index.jsx":"11","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signIn/index.jsx":"12","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/editParent/index.jsx":"13","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/index.js":"14","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/organization.js":"15","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measuredData.jsx":"16","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/team/index.jsx":"17","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/index.js":"18","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/VetSpire.js":"19","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/HardListModal.jsx":"20","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/index.jsx":"21","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/index.js":"22","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/AddDevice.jsx":"23","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/resetPassword/index.jsx":"24","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/config/config.js":"25","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/user.js":"26","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/pet.js":"27","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/api.js":"28","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scheduledPetsPage/index.jsx":"29","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/home/index.jsx":"30","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/user.js":"31","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/admin_VetProfile/index.jsx":"32","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/components/Biggie.jsx":"33","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/user.js":"34","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addDevice/index.jsx":"35","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/index.js":"36","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/connectWorkplace/index.jsx":"37","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/HardAndPetsUI.jsx":"38","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/userfeedback.js":"39","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/EzyVet.js":"40","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/clinical.js":"41","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/pet.js":"42","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectPetBreedModal/index.jsx":"43","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/forgotPassword/index.jsx":"44","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/workplace.js":"45","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/new.js":"46","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/VetSpire.js":"47","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/myModal/MyModal.jsx":"48","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/petTable/index.jsx":"49","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/selectionBox/SelectionBox.jsx":"50","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/combineScales/index.jsx":"51","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/swabPetEar/index.jsx":"52","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/mouseDiv/MouseDiv.js":"53","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/help/index.jsx":"54","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/petAndParents/index.jsx":"55","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/unassigned/index.jsx":"56","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/App.js":"57","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js":"58","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanCodeLogin/index.jsx":"59","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/InitDate.js":"60","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signUpVetProfile/index.jsx":"61","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/minClose/MinClose.js":"62","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/experimental/index.jsx":"63","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectPetModal/index.jsx":"64","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/linkEquipment.jsx":"65","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measurement.jsx":"66","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/timer/index.jsx":"67","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/index.js":"68","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/index.js":"69","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/historyTable/index.jsx":"70","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/addPetModal/index.jsx":"71","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx":"72","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/axios/http.js":"73","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/scanPet.jsx":"74","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil5.js":"75","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addScheduledPet/index.jsx":"76","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/numericInput.jsx":"77","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/electronStore.js":"78","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/hardwareAction.js":"79","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/joinOrganizationByOption/index.jsx":"80","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signUpVerifyEmail/index.jsx":"81","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/newOrganization/index.jsx":"82","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/maxminreturn/MaxMinReturn.jsx":"83","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/inviteTeam/index.jsx":"84"},{"size":8744,"mtime":1661493087370,"results":"85","hashOfConfig":"86"},{"size":2934,"mtime":1661422186108,"results":"87","hashOfConfig":"86"},{"size":5176,"mtime":1661422186079,"results":"88","hashOfConfig":"86"},{"size":830,"mtime":1661424659840,"results":"89","hashOfConfig":"86"},{"size":589,"mtime":1661422186037,"results":"90","hashOfConfig":"86"},{"size":644,"mtime":1661493169684,"results":"91","hashOfConfig":"86"},{"size":28933,"mtime":1661478638079,"results":"92","hashOfConfig":"86"},{"size":19097,"mtime":1661499551462,"results":"93","hashOfConfig":"86"},{"size":2130,"mtime":1661422186030,"results":"94","hashOfConfig":"86"},{"size":13804,"mtime":1661502550806,"results":"95","hashOfConfig":"86"},{"size":36243,"mtime":1661422186062,"results":"96","hashOfConfig":"86"},{"size":17548,"mtime":1661424537056,"results":"97","hashOfConfig":"86"},{"size":10423,"mtime":1661478718651,"results":"98","hashOfConfig":"86"},{"size":87,"mtime":1661422186030,"results":"99","hashOfConfig":"86"},{"size":1039,"mtime":1661494591011,"results":"100","hashOfConfig":"86"},{"size":16795,"mtime":1661424762613,"results":"101","hashOfConfig":"86"},{"size":9864,"mtime":1661424600212,"results":"102","hashOfConfig":"86"},{"size":96,"mtime":1661422186031,"results":"103","hashOfConfig":"86"},{"size":638,"mtime":1661422186031,"results":"104","hashOfConfig":"86"},{"size":7893,"mtime":1661422186078,"results":"105","hashOfConfig":"86"},{"size":40159,"mtime":1661422186080,"results":"106","hashOfConfig":"86"},{"size":231,"mtime":1661422186034,"results":"107","hashOfConfig":"86"},{"size":13859,"mtime":1661422186078,"results":"108","hashOfConfig":"86"},{"size":7255,"mtime":1661422186090,"results":"109","hashOfConfig":"86"},{"size":672,"mtime":1661490484250,"results":"110","hashOfConfig":"86"},{"size":2790,"mtime":1661480624095,"results":"111","hashOfConfig":"86"},{"size":3581,"mtime":1661422186036,"results":"112","hashOfConfig":"86"},{"size":2096,"mtime":1661491857413,"results":"113","hashOfConfig":"86"},{"size":6676,"mtime":1661478861058,"results":"114","hashOfConfig":"86"},{"size":4017,"mtime":1661492331149,"results":"115","hashOfConfig":"86"},{"size":1283,"mtime":1661424870869,"results":"116","hashOfConfig":"86"},{"size":14807,"mtime":1661493081430,"results":"117","hashOfConfig":"86"},{"size":4001,"mtime":1661422186049,"results":"118","hashOfConfig":"86"},{"size":557,"mtime":1661422186032,"results":"119","hashOfConfig":"86"},{"size":13078,"mtime":1661422186041,"results":"120","hashOfConfig":"86"},{"size":74,"mtime":1661424306039,"results":"121","hashOfConfig":"86"},{"size":6365,"mtime":1661502888343,"results":"122","hashOfConfig":"86"},{"size":3315,"mtime":1661422186078,"results":"123","hashOfConfig":"86"},{"size":562,"mtime":1661422186037,"results":"124","hashOfConfig":"86"},{"size":637,"mtime":1661422186031,"results":"125","hashOfConfig":"86"},{"size":731,"mtime":1661422186033,"results":"126","hashOfConfig":"86"},{"size":550,"mtime":1661422186032,"results":"127","hashOfConfig":"86"},{"size":3695,"mtime":1661425039668,"results":"128","hashOfConfig":"86"},{"size":11842,"mtime":1661422186071,"results":"129","hashOfConfig":"86"},{"size":865,"mtime":1661483894368,"results":"130","hashOfConfig":"86"},{"size":968,"mtime":1661422186035,"results":"131","hashOfConfig":"86"},{"size":908,"mtime":1661425317872,"results":"132","hashOfConfig":"86"},{"size":1357,"mtime":1655269876167,"results":"133","hashOfConfig":"86"},{"size":9487,"mtime":1660530346046,"results":"134","hashOfConfig":"86"},{"size":3261,"mtime":1655269876169,"results":"135","hashOfConfig":"86"},{"size":8628,"mtime":1660730474721,"results":"136","hashOfConfig":"86"},{"size":2695,"mtime":1659954544669,"results":"137","hashOfConfig":"86"},{"size":1383,"mtime":1655269876164,"results":"138","hashOfConfig":"86"},{"size":9200,"mtime":1661478728211,"results":"139","hashOfConfig":"86"},{"size":10604,"mtime":1661493101445,"results":"140","hashOfConfig":"86"},{"size":34681,"mtime":1661477711465,"results":"141","hashOfConfig":"86"},{"size":3752,"mtime":1661500891009,"results":"142","hashOfConfig":"86"},{"size":52637,"mtime":1661478173321,"results":"143","hashOfConfig":"86"},{"size":5030,"mtime":1661499238795,"results":"144","hashOfConfig":"86"},{"size":69,"mtime":1655269876086,"results":"145","hashOfConfig":"86"},{"size":12769,"mtime":1661490766175,"results":"146","hashOfConfig":"86"},{"size":2352,"mtime":1660013964308,"results":"147","hashOfConfig":"86"},{"size":2508,"mtime":1659954544667,"results":"148","hashOfConfig":"86"},{"size":7132,"mtime":1661425079480,"results":"149","hashOfConfig":"86"},{"size":6751,"mtime":1660530346064,"results":"150","hashOfConfig":"86"},{"size":3569,"mtime":1660530346067,"results":"151","hashOfConfig":"86"},{"size":1201,"mtime":1659954544669,"results":"152","hashOfConfig":"86"},{"size":349,"mtime":1661422186041,"results":"153","hashOfConfig":"86"},{"size":89,"mtime":1655452097264,"results":"154","hashOfConfig":"86"},{"size":11866,"mtime":1661422186039,"results":"155","hashOfConfig":"86"},{"size":6753,"mtime":1661423008886,"results":"156","hashOfConfig":"86"},{"size":5553,"mtime":1661422980174,"results":"157","hashOfConfig":"86"},{"size":803,"mtime":1655269876151,"results":"158","hashOfConfig":"86"},{"size":16047,"mtime":1661422186091,"results":"159","hashOfConfig":"86"},{"size":3528,"mtime":1655269876085,"results":"160","hashOfConfig":"86"},{"size":12370,"mtime":1661422186042,"results":"161","hashOfConfig":"86"},{"size":1314,"mtime":1655726378406,"results":"162","hashOfConfig":"86"},{"size":326,"mtime":1655269876160,"results":"163","hashOfConfig":"86"},{"size":3753,"mtime":1656491264783,"results":"164","hashOfConfig":"86"},{"size":17771,"mtime":1661502085041,"results":"165","hashOfConfig":"86"},{"size":4324,"mtime":1661483368990,"results":"166","hashOfConfig":"86"},{"size":15166,"mtime":1661494493924,"results":"167","hashOfConfig":"86"},{"size":2417,"mtime":1661492724630,"results":"168","hashOfConfig":"86"},{"size":14048,"mtime":1661500838314,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1brez7n",{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"184","messages":"185","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":1,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"200"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"204"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"189"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"189"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"194"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"175"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"231"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"245","messages":"246","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"189"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"179"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"194"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"179"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"200"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"269","messages":"270","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"231"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"175"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"189"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"189"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"175"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"307","messages":"308","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"309","messages":"310","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"311","messages":"312","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"175"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"318","messages":"319","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"320","messages":"321","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"327","messages":"328","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"329","messages":"330","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"179"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"339","messages":"340","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"189"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"179"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"369","messages":"370","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/advancedSettings/index.jsx",["371"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/px.jsx",["372","373","374","375","376","377"],"/**\n *\n * 获取屏幕分辨率宽高\n * let width = parseInt(window.screen.width)\n * let height = parseInt(window.screen.height)\n *\n * 获取应用窗口大小\n * document.documentElement.clientHeight\n * document.documentElement.clientWidth\n */\n//\n\n//\n\nconst devWidth = 1920;\nconst devHeight = 1040;\n\nlet size = window.screen\n// console.log('-------------------------分辨率的大小-----------------', size);\nlet width = parseInt(window.screen.availWidth);\nlet height = parseInt(window.screen.availHeight);\nif (width < height) {\n  let a = width;\n  width = height;\n  height = a;\n}\n\nexport const px = (val) => {\n  return val\n  // let width = parseInt(window.screen.availWidth);\n  // let height = parseInt(window.screen.availHeight);\n\n\n\n  // if (width < height) {\n  //   let a = width;\n  //   width = height;\n  //   height = a;\n  // }\n\n  // return parseInt((val / devWidth) * width);\n};\n\nexport const mTop = (val) => {\n  return val\n  let width = parseInt(window.screen.availWidth);\n  let height = parseInt(window.screen.availHeight);\n  if (width < height) {\n    let a = width;\n    width = height;\n    height = a;\n  }\n\n  // console.log('mTop',val, parseInt(val / devHeight * height))\n  return parseInt((val / devHeight) * height);\n};\n\nexport const fs = (val) => {\n  let width = parseInt(window.screen.availWidth);\n  let height = parseInt(window.screen.availHeight);\n  if (width < height) {\n    let a = width;\n    width = height;\n    height = a;\n  }\n};\nexport const pX = (val) => {\n  let windowWidth = document.documentElement.clientWidth;\n  // console.log('px', window.screen,)\n  return parseInt((windowWidth / 650) * val);\n};\nexport const MTop = (val) => {\n  return val\n  let windowWidth = document.documentElement.clientHeight;\n  console.log(\"px\", windowWidth);\n  return parseInt((windowWidth / 375) * val);\n};\n\nlet windowssize = {\n  width: 0,\n  height: 0,\n};\n\nexport const win = () => {\n  let width = parseInt(window.screen.availWidth);\n  let height = parseInt(window.screen.availHeight);\n  if (width < height) {\n    let a = width;\n    width = height;\n    height = a;\n  }\n  // let win1 = JSON.stringify({\n  //   width, height\n  // })\n\n  return {\n    width: 1920,\n    height: 1080,\n  };\n};\n\nlet timer = null;\nexport const timerFun = () => {\n  // console.log(\"jianting1------------\");\n  // timer && clearInterval(timer);\n  // timer = setInterval(() => {\n  //   let width = parseInt(window.screen.availWidth);\n  //   let height = parseInt(window.screen.availHeight);\n  //   if (width < height) {\n  //     let a = width;\n  //     width = height;\n  //     height = a;\n  //   }\n  //   // console.log('jianting1', windowssize, { width, height });\n  //   if (width !== windowssize.width || height !== windowssize.height) {\n  //     windowssize.width = width;\n  //     windowssize.height = height;\n  //     let ipcRenderer = window.electron.ipcRenderer;\n  //     ipcRenderer.send(\"changeFenBianLv\", windowssize);\n  //   }\n  // }, 2000);\n};\n",["378","379"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/hardWareTypeUI.jsx",["380"],"import React, {  useEffect } from \"react\";\n\nimport mellaPro from \"./../../assets/img/hardList-mella.png\";\nimport biggie from \"./../../assets/img/hardList-biggie.png\";\nimport rfid from \"./../../assets/img/hardList-rfid.png\";\nimport tape from \"./../../assets/img/hardList-tape.png\";\nimport add from \"./../../assets/img/hardList-add.png\";\nimport maeBowl from \"./../../assets/img/hardList-maeBowl.png\";\nimport otterEQ from \"./../../assets/img/hardList-otterEQ.png\";\n\nimport electronStore from \"../../utils/electronStore\";\nimport { px } from \"../../utils/px\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareInfoFun,\n  setSelectHardwareType,\n  setMenuNum,\n} from \"./../../store/actions\";\n\nlet storage = window.localStorage;\n//devicesTypeList是index传过来的硬件种类以及种类下的所有硬件\nconst HardWareTypeUI = ({\n  bodyHeight,\n  devicesTypeList,\n  selectHardwareInfoFun,\n  setSelectHardwareType,\n  selectHardwareType,\n  setMenuNum,\n  menuNum,\n}) => {\n  //根据左侧列表的设备类型，获取当前选中的设备类型下选中的硬件,先看本地有没有存,没存就拿第一个展示\n\n  let options = devicesTypeList.map((item, index) => {\n    let img = null;\n    switch (item.type) {\n      case \"mellaPro\":\n        img = mellaPro;\n        break;\n\n      case \"biggie\":\n        img = biggie;\n        break;\n\n      case \"rfid\":\n        img = rfid;\n        break;\n\n      case \"tape\":\n        img = tape;\n        break;\n      case \"maeBowl\":\n        img = maeBowl;\n        break;\n      case \"add\":\n        img = add;\n        break;\n\n      case \"otterEQ\":\n        img = otterEQ;\n        break;\n      default:\n        break;\n    }\n    let borderStyle = ``;\n    if (item.type === selectHardwareType) {\n      borderStyle = ` 2px solid #3B3A3A`;\n    }\n\n    return (\n      <li\n        key={`${index}`}\n        style={{ padding: `${px(10)}px 0` }}\n        onClick={() => {\n          console.log(item.type);\n          if (menuNum !== \"6\"&&!electronStore.get(`${storage.userId}-isClical`)) {\n            setMenuNum(\"1\");\n            setSelectHardwareType(item.type);\n            if (item.type === \"add\") {\n            } else {\n              let devicesInfo = electronStore.get(\n                `${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`\n              );\n\n              //要做个处理,看保存的数据是否和当前的一致，如果不一致，就把当前的保存下来\n\n              if (!devicesInfo && item.devices[0]) {\n                devicesInfo = item.devices[0];\n                electronStore.set(\n                  `${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`,\n                  devicesInfo\n                );\n              }\n\n              selectHardwareInfoFun(devicesInfo);\n            }\n          } else {\n            setSelectHardwareType(\"mellaPro\");\n          }\n        }}\n      >\n        <div\n          style={{ border: borderStyle, padding: px(2), borderRadius: px(10) }}\n        >\n          <img src={img} alt=\"\" width={px(55)} />\n        </div>\n      </li>\n    );\n  });\n\n  useEffect(() => {\n    let Index = null;\n    for (let i = 0; i < devicesTypeList.length; i++) {\n      const element = devicesTypeList[i];\n      if (element.type === selectHardwareType) {\n        Index = i;\n        break;\n      }\n    }\n    if (Index === null) {\n      return;\n    }\n\n    let hard = devicesTypeList[Index];\n    if (hard && hard.type !== \"add\") {\n      let devicesInfo = electronStore.get(\n        `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`\n      );\n\n      if (!devicesInfo) {\n        devicesInfo = hard.devices[0];\n        electronStore.set(\n          `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`,\n          devicesInfo\n        );\n      } else {\n        let sameFlag = false;\n        console.log(\"============\", hard.devices, devicesInfo);\n        for (let i = 0; i < hard.devices.length; i++) {\n          const element = hard.devices[i];\n          if (\n            element.mac === devicesInfo.mac &&\n            element.name === devicesInfo.name\n          ) {\n            sameFlag = true;\n            break;\n          }\n        }\n        if (!sameFlag) {\n          devicesInfo = hard.devices[0];\n          electronStore.set(\n            `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`,\n            devicesInfo\n          );\n        }\n      }\n\n      console.log(\"保存的折本信息\", devicesInfo);\n\n      selectHardwareInfoFun(devicesInfo);\n    }\n  }, [devicesTypeList]);\n\n  return (\n    <div className=\"hardwareType\" style={{ width: px(80), height: bodyHeight }}>\n      <ul>{options}</ul>\n    </div>\n  );\n};\n\nHardWareTypeUI.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array,\n};\n//默认值\nHardWareTypeUI.defaultProps = {\n  bodyHeight: 0,\n  devicesTypeList: [],\n};\n\nexport default connect(\n  (state) => ({\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    menuNum: state.userReduce.menuNum,\n  }),\n  { selectHardwareInfoFun, setSelectHardwareType, setMenuNum }\n)(HardWareTypeUI);\n",["381","382"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/EzyVet.js",["383"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/vetSpire.js",["384","385"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/petall.js",["386","387"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorAddPet/index.jsx",["388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411"],"import React, { Component } from 'react'\nimport { Input, message, Select, Calendar, Col, Row, Spin, Modal } from 'antd';\n\nimport dog from '../../assets/images/pinkdog.png'\nimport cat from '../../assets/images/pinkcat.png'\nimport redDog from '../../assets/images/reddog.png'\nimport redCat from '../../assets/images/redcat.png'\nimport redother from '../../assets/images/redother.png'\nimport other from '../../assets/images/other.png'\nimport Close from './../../assets/img/close.png'\nimport nextImg from '../../assets/img/nextImg.png'\nimport selectphoto from '../../assets/images/sel.png'\nimport dui from '../../assets/images/dui.png'\nimport female from '../../assets/images/female.png'\nimport male from '../../assets/images/male.png'\n\nimport electronStore from '../../utils/electronStore';\nimport { mTop, px, win } from '../../utils/px';\nimport MyModal from '../../utils/myModal/MyModal';\nimport Heard from '../../utils/heard/Heard';\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\nimport Button from '../../utils/button/Button';\nimport Avatar from '../../components/avatar/Avatar';\nimport SelectPetBreed from \"../../components/selectPetBreedModal\";\n\nimport { connect } from 'react-redux';\nimport { petDetailInfoFun, setMenuNum, } from '../../store/actions';\nimport moment from 'moment';\n\nimport './index.less';\nimport { addDeskPet, checkPatientId, getPetInfoByPatientIdAndPetId, selectBreedBySpeciesId } from '../../api';\n\nconst { Option } = Select;\nlet storage = window.localStorage;\nlet errPatientId = ''\nclass DoctorAddPet extends Component {\n  state = {\n    dogImg: dog,\n    catImg: cat,\n    otherImg: other,\n    selectWZ: '',\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    api: '',\n    id: '',\n    seleceID: '',//医生id\n    petSpecies: 0,\n    unit: 1,\n    gender: 0,\n    isMix: false,\n    imageId: -1,\n    imgurl: '',\n    catData: [],\n    petSpeciesBreedId: '',\n    dogData: [],\n    breedArr: [],\n    birthday: moment(new Date()).format('MMMM D, YYYY'),\n    patientId: '',\n    petName: '',\n    petId: '',\n    lastName: '',\n    firstName: '',\n    breedName: '',\n    owner: '',\n    intFlog: false,\n    spin: false,\n    visible: false,\n    dogBreed: [],\n    catBreed: [],\n    searchBreed: '',\n    selectBreedJson: {},\n    confirmSelectBreedJson: {},\n    selectBreed: false,\n    isModalVisible: false,\n    confirmLoading: false,\n    selectBreedVisible: false,\n  }\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big', win())\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n    let dogBreed = electronStore.get('dogBreed') || []\n    let catBreed = electronStore.get('catBreed') || []\n    this.setState({\n      dogBreed,\n      catBreed\n    })\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big', win())\n    this.setState({\n\n    })\n  }\n  getBreed = (val) => {\n    let data = {}\n    switch (val) {\n      case 'dog':\n        data.speciesId = 2; break;\n\n      case 'cat':\n        data.speciesId = 1; break;\n    }\n\n    selectBreedBySpeciesId(data)\n      .then(res => {\n        console.log('---', res);\n        if (res.code === 0) {\n          let arr = []\n          res.petlist.map((item, index) => {\n            let data = {\n              petSpeciesBreedId: item.petSpeciesBreedId,\n              breedName: item.breedName\n            }\n            arr.push(data)\n          })\n          if (val === 'dog') {\n            this.setState({\n              dogBreed: arr\n            })\n            electronStore.set('dogBreed', arr)\n          } else if (val === 'cat') {\n            this.setState({\n              catBreed: arr\n            })\n            electronStore.set('catBreed', arr)\n          }\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n  _getData = (val) => {\n    this.setState({\n      petSpecies: val,\n      breedName: ''\n    })\n    let data = {\n      speciesId: val\n    }\n    selectBreedBySpeciesId(data)\n      .then(res => {\n        console.log('--获取品种返回的数据-', res);\n        if (res.code === 0) {\n          let arr = []\n          res.petlist.map((item, index) => {\n            let data = {\n              petSpeciesBreedId: item.petSpeciesBreedId,\n              breedName: item.breedName\n            }\n            arr.push(data)\n          })\n          console.log(arr);\n          this.setState({\n            breedArr: arr\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n\n  }\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n  handleClick = e => {\n    console.log('click ', e);\n    const { api, id, seleceID } = this.state\n    if (e.key === '1') {\n      this.props.history.push({ pathname: '/page6', query: { api, id, seleceID } })\n    }\n    if (e.key === '2') {\n      this.props.history.push('/')\n    }\n\n  };\n  /**------------------顶部end------------------------ */\n  selectWZ = (val) => {\n    let { catBreed, dogBreed } = this.state\n    switch (val) {\n      case 'dog':\n        this.setState({\n          catImg: cat,\n          dogImg: redDog,\n          otherImg: other,\n          selectWZ: val,\n          breedArr: [].concat(dogBreed)\n        })\n\n        break;\n\n      case 'cat':\n        this.setState({\n          catImg: redCat,\n          dogImg: dog,\n          otherImg: other,\n          selectWZ: val,\n          breedArr: [].concat(catBreed)\n        })\n\n        break;\n\n      case 'other':\n        this.setState({\n          catImg: cat,\n          dogImg: dog,\n          otherImg: redother,\n          selectWZ: val,\n          breedArr: []\n        })\n        break;\n\n      default:\n        break;\n    }\n  }\n  _petSpecies = () => {\n    let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\n    this.avatar = selectphoto\n    return (\n      <div className=\"petSpecies\"\n        style={{ height: mTop(80), }}\n      >\n        <div className=\"l\">\n          <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\n          <div className=\"selectSpecies\">\n            <ul>\n              <li >\n                <div className='speciesChild' >\n                  <div className='dog'\n                    onClick={() => { this.selectWZ('dog') }}>\n                    <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Dog\n                </div>\n              </li>\n              <li>\n                <div className='speciesChild' >\n                  <div className='dog' onClick={() => { this.selectWZ('cat') }} >\n                    <img src={catImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Cat\n                </div>\n              </li>\n              <li >\n                <div className='speciesChild' >\n                  <div className='dog' onClick={() => { this.selectWZ('other') }} >\n                    <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Other\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"r\">\n          <div className=\"img\">\n            <Avatar\n              init={\n                <div className=\"ciral \">\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\n                </div>\n              }\n              getinfo={(val) => {\n                console.log('我是父组件，从子组件获取到的数据位：', val);\n                if (val) {\n                  this.setState({\n                    imageId: val\n                  })\n                }\n              }}\n            />\n          </div>\n\n        </div>\n\n      </div>\n\n    )\n  }\n  _petName = () => {\n    let birthday = this.state.birthday\n    let birthdayValue = birthday ? moment(birthday) : moment(new Date())\n    return (\n      <div className=\"petName\"\n        style={{ marginTop: mTop(18) }}\n      >\n        <div className=\"r\">\n          <p >Pet Name</p>\n          <div className=\"infoInput\">\n            <Input\n              bordered={false}\n              value={this.state.petName}\n              onChange={(item) => {\n\n                this.setState({\n                  petName: item.target.value\n                })\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"r\">\n          <p >Pet Birthday</p>\n          <div className=\"infoInput\" >\n            <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\n              document.getElementById('calendar').style.display = 'block'\n            }}>{this.state.birthday}</p>\n            <div className=\"calendar\" id=\"calendar\" style={{ left: px(-50), top: px(-50) }}>\n              <Calendar\n                fullscreen={false}\n                headerRender={({ value, type, onChange, onTypeChange }) => {\n                  const start = 0;\n                  const end = 12;\n                  const monthOptions = [];\n                  const current = value.clone();\n                  const localeData = value.localeData();\n                  const months = [];\n                  for (let i = 0; i < 12; i++) {\n                    current.month(i);\n                    months.push(localeData.monthsShort(current));\n                  }\n                  for (let index = start; index < end; index++) {\n                    monthOptions.push(\n                      <Select.Option className=\"month-item\" key={`${index}`}>\n                        {months[index]}\n                      </Select.Option>\n                    );\n                  }\n                  const month = value.month();\n                  const year = value.year();\n                  const options = [];\n                  for (let i = moment(new Date()).year(); i > moment(new Date()).year() - 40; i -= 1) {\n                    options.push(\n                      <Select.Option key={i} value={i} className=\"year-item\">\n                        {i}\n                      </Select.Option>\n                    );\n                  }\n                  return (\n                    <div style={{ padding: 8 }}>\n                      <Row gutter={8}>\n                        <Col>\n                          <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            className=\"my-year-select\"\n                            onChange={(newYear) => {\n                              const now = value.clone().year(newYear);\n                              onChange(now);\n                            }}\n                            value={String(year)}\n                          >\n                            {options}\n                          </Select>\n                        </Col>\n                        <Col>\n                          <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            value={String(month)}\n                            onChange={(selectedMonth) => {\n                              const newValue = value.clone();\n                              newValue.month(parseInt(selectedMonth, 10));\n                              onChange(newValue);\n                            }}\n                          >\n                            {monthOptions}\n                          </Select>\n                        </Col>\n                      </Row>\n                    </div>\n                  );\n                }}\n                value={birthdayValue}\n                onSelect={(value) => {\n                  console.log(value);\n                  this.setState({\n                    birthday: moment(value).format('MMMM D, YYYY')\n\n                  })\n                  document.getElementById('calendar').style.display = 'none'\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n\n      </div>\n\n    )\n  }\n  _ownName = () => {\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(18) }}\n      >\n        <div className=\"l\">\n          <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\n          <div className=\"infoInput\">\n            <Input bordered={false}\n              value={this.state.patientId}\n              onChange={(item) => {\n                this.setState({\n                  patientId: item.target.value.replace(/\\s/g, \"\"),\n                  intFlog: true\n                })\n                if (item.target.value !== errPatientId) {\n                  message.destroy()\n                }\n              }}\n              onBlur={() => {\n                if (this.state.patientId === '') {\n                  message.error('The pet ID cannot be empty');\n                  return\n                }\n                this.setState({\n                  spin: true\n                });\n                let params = {\n                  patientId: this.state.patientId,\n                  doctorId: storage.userId\n                }\n                if (storage.lastWorkplaceId) {\n                  params.workplaceId = storage.lastWorkplaceId\n                }\n                if (storage.lastOrganization) {\n                  params.organizationId = storage.lastOrganization\n                }\n                checkPatientId(params)\n                  .then(res => {\n                    if (res.flag === false) {\n                      errPatientId = params.patientId;\n                      this.setState({\n                        isModalVisible: true,\n                        spin: false,\n                      })\n                    } else {\n                      errPatientId = '';\n                      message.success('This pet ID will work');\n                      this.setState({\n                        spin: false,\n                      })\n                    }\n                  })\n                  .catch(err => {\n                    this.setState({\n                      spin: false\n                    });\n                  })\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"r\">\n          <div className=\"infoInput flex\"\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\n            onClick={() => {\n              // this.setState({\n              //     selectBreed: true\n              // })\n            }}\n          >\n\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{'My Parents'}</div>\n            <div className=\"nextimg\" >\n              <img src={nextImg} style={{ height: px(15) }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _select = (value, data) => {\n    console.log(value, data);  //value的值为id\n    this.setState({\n      petSpeciesBreedId: value,\n      breedName: data.children\n    })\n  }\n  //选择宠物品种\n  _primaryBreed = () => {\n    let { confirmSelectBreedJson } = this.state\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(18) }}>\n        <div className=\"l\" >\n          <div className=\"infoInput flex\"\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\n            onClick={() => {\n              this.setState({\n                selectBreedVisible: true\n              })\n            }}\n          >\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'}</div>\n            <div className=\"nextimg\" >\n              <img src={nextImg} style={{ height: px(15) }} />\n            </div>\n          </div>\n        </div>\n        <div className=\"r\" style={{ paddingTop: mTop(40) }}>\n          <div className=\"max\">\n            Mix?\n            <div className=\"selected\"\n              onClick={() => this.setState({\n                isMix: !this.state.isMix\n              })}\n            >\n              {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _weight = () => {\n    let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\n    switch (this.state.unit) {\n      case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\n      case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\n    }\n    switch (this.state.gender) {\n      case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\n      case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\n    }\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(18) }}>\n        <div className=\"l\">\n          <p >Pet Weight</p>\n          <div className=\"infoInput\">\n            <Input bordered={false}\n              value={this.state.weight}\n              onChange={(item) => {\n\n                this.setState({\n                  weight: item.target.value\n                })\n              }}\n\n            />\n            <div className=\"ibKg\">\n              <div className=\"ibs\"\n                style={{ backgroundColor: ibBgcColor, color: ibCor }}\n                onClick={() => {\n                  if (this.state.unit === 2) {\n\n                    this.setState({\n                      unit: 1,\n                      weight: (this.state.weight * 2.2046).toFixed(1)\n                    })\n                  }\n                }}\n              >Ibs</div>\n              <div className=\"kgs\"\n                style={{ backgroundColor: kgBgcColor, color: kgCor }}\n                onClick={() => {\n\n                  if (this.state.unit === 1) {\n\n                    this.setState({\n                      unit: 1,\n                      weight: (this.state.weight / 2.2046).toFixed(1)\n                    })\n                  }\n                  this.setState({ unit: 2 })\n                }}\n              >kgs</div>\n\n            </div>\n\n          </div>\n        </div>\n\n        <div className=\"r\">\n          <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\n          <div className=\"gender\">\n            <div className=\"selectGender\">\n              <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\n                <div className=\"femaleCiral\"\n                  style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\n                  onClick={() => this.setState({ gender: 1 })}\n                >\n                  <img src={female} alt=\"\" style={{ width: px(15) }} />\n                </div>\n                Female\n              </div>\n              <div className=\"male\" style={{ fontSize: px(18) }}>\n                <div className=\"maleCiral\"\n                  style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\n                  onClick={() => this.setState({ gender: 0 })}\n                >\n                  <img src={male} alt=\"\" style={{ width: px(20) }} />\n                </div>\n                Male\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n  handleOk = () => {\n    let params = {\n      patientId: this.state.patientId,\n      doctorId: storage.userId\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.org = storage.lastOrganization\n    }\n    this.setState({\n      confirmLoading: true\n    });\n    getPetInfoByPatientIdAndPetId(params)\n      .then((res) => {\n        this.setState({\n          confirmLoading: false,\n          isModalVisible: false\n        });\n        if (res.flag === true) {\n          let oldList = res.data[0];\n          let {\n            age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender,\n            petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\n            h2tLength, torsoLength\n          } = oldList;\n          const isUnKnow = (val) => {\n            if (val) {\n              return val\n            } else {\n              return 'unknown'\n            }\n          }\n          let owner = ''\n          patientId = isUnKnow(patientId)\n          petName = isUnKnow(petName)\n          breedName = isUnKnow(breedName)\n          age = isUnKnow(age)\n          weight = isUnKnow(weight)\n          if (!firstName) {\n            firstName = ''\n          }\n          if (!lastName) {\n            lastName = ''\n          }\n          if (lastName === '' && firstName === '') {\n            owner = 'unknown'\n          } else {\n            owner = `${lastName} ${firstName}`\n          }\n          createTime = moment(createTime).format('X')\n          let petGender = ''\n          switch (`${gender}`) {\n            case '1': petGender = 'F'\n              break;\n            case '0': petGender = \"M\"\n              break;\n            default: petGender = 'unknown'\n              break;\n          }\n          let petAge = 'unknown'\n          if (birthday) {\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\n          }\n\n          let json = {\n            insertedAt: createTime,\n            patientId: this.state.patientId,\n            petName,\n            owner,\n            breed: breedName,\n            gender: petGender,\n            age: petAge,\n            petId,\n            weight,\n            rfid,\n            url,\n            speciesId,\n            l2rarmDistance,\n            neckCircumference,\n            upperTorsoCircumference,\n            lowerTorsoCircumference,\n            h2tLength,\n            torsoLength,\n            pethubId,\n            macId,\n          }\n          this.props.setMenuNum('1');\n          this.props.petDetailInfoFun(json);\n          this.props.history.push(\"/MainBody\");\n        } else {\n          message.error(res.msg);\n        }\n      })\n      .catch(err => {\n        message.error('Jump Failure');\n      })\n  };\n  handleCancel = () => {\n    this.setState({\n      isModalVisible: false\n    })\n  };\n\n  render() {\n    const { closeColor, closebgc, minbgc, disabled, petSpeciesBreedId, isModalVisible, confirmLoading } = this.state\n    return (\n      <Spin spinning={this.state.spin} size=\"large\">\n        <div id=\"doctorAddPet\">\n          <div className=\"heard\">\n            <Heard />\n          </div>\n          <div className=\"editPetInfo_top\" >\n            <div className=\"title\" style={{ marginBottom: px(20), marginTop: px(20) }}>{`New Pet`}</div>\n            {this._petSpecies()}\n            {this._petName()}\n            {this._ownName()}\n            {this._primaryBreed()}\n            {this._weight()}\n          </div>\n          <div className=\"editPetInfo_foot\"  >\n            <div className=\"save\"\n              onClick={() => {\n                if (!this.state.patientId) {\n                  message.error('Please enter patient ID')\n                  return\n                }\n                let params = {\n                  patientId: this.state.patientId,\n                  doctorId: storage.userId\n                }\n                if (storage.lastWorkplaceId) {\n                  params.workplaceId = storage.lastWorkplaceId\n                }\n                if (storage.lastOrganization) {\n                  params.organizationId = storage.lastOrganization\n                }\n\n                this.setState({\n                  spin: true\n                })\n                checkPatientId(params)\n                  .then(res => {\n                    console.log(res);\n                    if (res.flag === false) {\n                      this.setState({\n                        spin: false\n                      }, () => {\n                        errPatientId = params.patientId\n                        message.error('This patient ID is already occupied, please change to a new one')\n                      })\n                    } else {\n                      let { petSpecies, petName, birthday, petSpeciesBreedId, isMix, weight, gender, unit, imageId, confirmSelectBreedJson, owner, patientId, selectWZ } = this.state\n                      let species = null\n                      if (petSpeciesBreedId) {\n                        species = petSpeciesBreedId\n                      } else {\n                        // 11001 是cat 12001是dog 13001是other\n                        switch (selectWZ) {\n                          case 'cat': species = 11001; break;\n                          case 'dog': species = 12001; break;\n                          default: species = 13001;\n                            break;\n                        }\n                      }\n                      let data = {\n                        petName,\n                        birthday: moment(birthday).format('YYYY-MM-DD'),\n                        gender,\n                        owner,\n                        petSpeciesBreedId: species,\n                        doctorId: storage.userId\n                      }\n                      if (weight) {\n                        if (unit === 1) {\n                          weight = (0.45359 * weight).toFixed(2)\n                        }\n                        data.weight = parseFloat(weight)\n                      }\n                      if (imageId !== -1 && imageId) {\n                        data.imageId = imageId\n                      }\n                      if (storage.lastWorkplaceId) {\n                        data.workplaceId = storage.lastWorkplaceId\n                      }\n                      if (storage.lastOrganization) {\n                        data.organizationId = storage.lastOrganization\n                      }\n                      addDeskPet(patientId, data)\n                        .then(res => {\n                          this.setState({\n                            spin: false\n                          })\n                          console.log(res);\n                          if (res.flag === true) {\n                            message.success('Added successfully')\n                            this.handleOk();\n                            // this.props.history.goBack()\n                          }\n                          else {\n                            message.error('add failed')\n                          }\n                        })\n                        .catch(err => {\n                          this.setState({\n                            spin: false\n                          })\n                          message.error('add failed')\n                          console.log(err);\n                        })\n                    }\n                  })\n                  .catch(err => {\n                    this.setState({\n                      spin: false\n                    })\n                    console.log(err);\n                  })\n              }}\n            >Save</div>\n          </div>\n          <Modal\n            title=\"\"\n            visible={isModalVisible}\n            onOk={this.handleOk}\n            onCancel={this.handleCancel}\n            centered\n            destroyOnClose\n            maskClosable={false}\n            confirmLoading={confirmLoading}\n          >\n            <div style={{ padding: px(24), fontSize: px(16) }}>\n              This patient ID is already occupied ! <br />Whether to switch to the pet measurement screen ?\n            </div>\n          </Modal>\n          <SelectPetBreed\n            visible={this.state.selectBreedVisible}\n            destroyOnClose\n            width={400}\n            value={this.state.petSpeciesBreedId}\n            onSelect={(value) => {\n              this.setState({\n                selectBreedVisible: false,\n                selectBreedJson: value,\n                petSpeciesBreedId: value.petSpeciesBreedId,\n                confirmSelectBreedJson: value,\n              })\n            }}\n            onCancel={() => {\n              this.setState({\n                selectBreedVisible: false,\n              })\n            }}\n          />\n        </div>\n      </Spin>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n\n  }),\n  { petDetailInfoFun, setMenuNum, }\n)(DoctorAddPet)\n",["412","413"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/settings/index.jsx",["414","415","416","417"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/ezyvetApi.js",[],["418","419"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/PetsUI.jsx",["420","421","422","423","424","425","426","427","428"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/editPetInfo/index.jsx",["429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445"],"import React, { Component } from 'react'\nimport { Input, Menu, message, Select, Calendar, Col, Row } from 'antd';\nimport { createFromIconfontCN } from '@ant-design/icons';\n\nimport dog from '../../assets/images/pinkdog.png'\nimport cat from '../../assets/images/pinkcat.png'\nimport redDog from '../../assets/images/reddog.png'\nimport redCat from '../../assets/images/redcat.png'\nimport redother from '../../assets/images/redother.png'\nimport other from '../../assets/images/other.png'\nimport selectphoto from '../../assets/images/sel.png'\nimport Close from '../../assets/img/close.png'\nimport nextImg from '../../assets/img/nextImg.png'\nimport dui from '../../assets/images/dui.png'\nimport female from '../../assets/images/female.png'\nimport male from '../../assets/images/male.png'\n\nimport { mTop, px, win } from '../../utils/px';\nimport MyModal from '../../utils/myModal/MyModal';\nimport electronStore from '../../utils/electronStore';\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\nimport Button from '../../utils/button/Button';\nimport Avatar from '../../components/avatar/Avatar';\n\nimport { connect } from 'react-redux';\nimport { petDetailInfoFun } from '../../store/actions';\nimport moment from 'moment';\n\nimport './index.less';\nimport { checkPatientId, getPetInfoByPatientIdAndPetId, selectBreedBySpeciesId, updatePetInfo } from '../../api/mellaserver/pet';\nimport { listDoctorsByAdmin } from '../../api/mellaserver/organization';\n\nconst { SubMenu } = Menu;\nconst { Option } = Select;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\nlet storage = window.localStorage;\nlet errPatientId = ''\nlet url = 'https://www.mellaserver.com/api/mellaserver'\n// let url = 'http://192.168.0.36:8080/mellaserver'\nclass EditPetInfo extends Component {\n  state = {\n    dogImg: dog,\n    catImg: cat,\n    otherImg: other,\n    selectWZ: '',\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    api: '',\n    id: '',\n    seleceID: '',//医生id\n    petSpecies: 0,\n    unit: 1,\n    gender: 0,\n    isMix: false,\n    imageId: -1,\n    imgurl: '',\n    breedArr: [],\n    petSpeciesBreedId: '',\n    dogData: [],\n    birthday: moment(new Date()).format('MMMM D, YYYY'),\n    patientId: '',\n    petName: '',\n\n    petId: '',\n    lastName: '',\n    firstName: '',\n    breedName: '',\n\n    initpetName: '',\n    initpetId: '',\n    initlastName: '',\n    initfirstName: '',\n    initbreedName: '',\n    spin: false,\n    dogBreed: [],\n    catBreed: [],\n\n    oldPatientId: '',\n    searchBreed: '',\n    selectBreedJson: {},\n    confirmSelectBreedJson: {},\n    selectBreed: false,\n\n    doctorArr: [],\n    selectUser: false,\n    selectUserJson: {},\n    selectUserId: '',\n    confirmSelectUserJson: {},\n    petUrl: ''\n\n\n  }\n\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big', win())\n    // if (this.props.location.participate) {\n    //   let props = this.props.location.participate\n    //   console.log(props);\n    //   this.setState({\n    //     patientId: props.patientId,\n    //     petId: props.petId,\n    //     oldPatientId: props.patientId,\n\n    //   }, () => {\n    //     this._getPetInfo()\n    //   })\n    //   console.log(props);\n    // } else {\n    //   this._getPetInfo()\n    // }\n    let { petDetailInfo } = this.props\n    let { petId, patientId, petName, lastName, firstName, breedName, isWalkIn } = petDetailInfo\n    if (!isWalkIn) {\n      if (!patientId || patientId === 'unknown') {\n        patientId = null\n      }\n      this.setState({\n        patientId,\n        petId,\n        oldPatientId: patientId,\n        breedName: breedName\n\n      }, () => {\n        this._getPetInfo()\n      })\n    }\n\n\n    let dogBreed = electronStore.get('dogBreed') || []\n    let catBreed = electronStore.get('catBreed') || []\n    this.setState({\n      dogBreed,\n      catBreed\n    })\n    this.getBreed('cat')\n    this.getBreed('dog')\n    this.getUser()\n\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big', win())\n    this.setState({\n\n    })\n  }\n  getBreed = (val) => {\n    let data = {}\n    switch (val) {\n      case 'dog':\n        data.speciesId = 2; break;\n\n      case 'cat':\n        data.speciesId = 1; break;\n    }\n\n    selectBreedBySpeciesId(data)\n      .then(res => {\n        // console.log('---', res);\n        if (res.code === 0) {\n          let arr = []\n          res.petlist.map((item, index) => {\n            let data = {\n              petSpeciesBreedId: item.petSpeciesBreedId,\n              breedName: item.breedName\n            }\n            arr.push(data)\n          })\n          if (val === 'dog') {\n            this.setState({\n              dogBreed: arr\n            })\n            electronStore.set('dogBreed', arr)\n          } else if (val === 'cat') {\n            this.setState({\n              catBreed: arr\n            })\n            electronStore.set('catBreed', arr)\n          }\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n  getUser = () => {\n    let params = {\n      doctorId: storage.userId,\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n\n    console.log('查询宠物的入参', params);\n\n\n    listDoctorsByAdmin(storage.lastOrganization, params)\n      .then(res => {\n        console.log('人员列表', res);\n\n        if (res.flag === true && res.code === 20000) {\n          let data = []\n          for (let i = 0; i < res.data.length; i++) {\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\n\n            let json = {\n              insertedAt: createTime,\n              breedName: `${lastName} ${firstName}`,\n              petSpeciesBreedId: userId,\n              email,\n              birthday,\n              isLimit,\n              isDeleted,\n              phone,\n              url,\n              firstName, lastName, roleId\n            }\n            data.push(json)\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          this.setState({\n            doctorArr: data,\n            // parentList: data //这里只是测试，后期删除\n\n          })\n\n        }\n      })\n      .catch(err => {\n        console.log(err);\n\n      })\n  }\n\n  _getPetInfo = () => {\n    let { patientId, petId } = this.state\n    let datas = {\n      doctorId: storage.userId,\n    }\n    if (storage.lastWorkplaceId) {\n      datas.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      datas.org = storage.lastOrganization\n    }\n    if (patientId && patientId !== 'undefined') {\n      datas.patientId = patientId\n    }\n    if (petId) {\n      datas.petId = petId\n    }\n    this.setState({\n      spin: true\n    })\n    console.log('入参：', datas);\n    getPetInfoByPatientIdAndPetId(datas)\n    getPetInfoByPatientIdAndPetId(datas)\n      .then(res => {\n        this.setState({\n          spin: false\n        })\n        console.log('>>>>>>>>>>>>>>', res);\n        if (res.flag === true) {\n          //有宠物，进入1\n          let datas = []\n          for (let i = 0; i < res.data.length; i++) {\n            if (res.data[i].petId === this.state.petId) {\n              datas = res.data[i]\n              break\n            }\n          }\n          console.log('获取到宠物', datas);\n          let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url, gender, speciesId, petSpeciesBreedId } = datas\n\n          if (isMix !== true) {\n            isMix = false\n          }\n          // petName = isNull(petName)\n          lastName = isNull(lastName)\n          firstName = isNull(firstName)\n          // breedName = isNull(breedName)\n\n          let confirmSelectBreedJson = {}\n          if (petSpeciesBreedId || petSpeciesBreedId === 0) {\n            confirmSelectBreedJson = {\n              name: breedName,\n              petSpeciesBreedId\n            }\n          }\n\n          url = isNull(url)\n          if (birthday != null) {\n            birthday = moment(birthday).format('MMMM D, YYYY')\n          }\n          else {\n            birthday = ''\n          }\n          if (gender === null || isNaN(gender) || `${gender}` === 'null' || `${gender}` === 'NaN') {\n            gender = 0\n          }\n          if (weight) {\n            weight = (weight * 2.2046).toFixed(1)\n          } else {\n            weight = ''\n          }\n          this.setState({\n            petId,\n            petName,\n            lastName,\n            firstName,\n            breedName,\n            isMix,\n            birthday,\n            weight,\n            imgurl: url,\n            gender,\n            petSpecies: speciesId,\n            initpetName: petName,\n            initlastName: lastName,\n            initfirstName: firstName,\n            confirmSelectBreedJson,\n            petSpeciesBreedId\n          })\n          switch (speciesId) {\n            case 1: this.selectWZ('cat'); break;\n            case 2: this.selectWZ('dog'); break;\n\n            default: this.selectWZ('other'); break;\n          }\n\n        } else {\n          message.destroy()\n          message.error('data load failed')\n        }\n      })\n      .catch(err => {\n        this.setState({\n          spin: false\n        })\n        console.log(err);\n        message.destroy()\n        message.error('data load failed')\n      })\n    const isNull = (value) => {\n      if (value === null || isNaN(value) || `${value}` === 'null' || `${value}` === 'NaN') {\n        return ''\n      } else {\n        return value\n      }\n    }\n\n  }\n\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n\n  /**------------------顶部end------------------------ */\n  selectWZ = (val) => {\n    let { catBreed, dogBreed } = this.state\n    if (this.state.selectWZ !== val) {\n      switch (val) {\n        case 'dog':\n          this.setState({\n            catImg: cat,\n            dogImg: redDog,\n            otherImg: other,\n            selectWZ: val,\n            breedArr: [].concat(dogBreed),\n            confirmSelectBreedJson: {\n              name: \"defaultdog\",\n              petSpeciesBreedId: 12001\n            }\n          })\n\n          break;\n\n        case 'cat':\n          this.setState({\n            catImg: redCat,\n            dogImg: dog,\n            otherImg: other,\n            selectWZ: val,\n            breedArr: [].concat(catBreed),\n            confirmSelectBreedJson: {\n              name: \"defaultcat\",\n              petSpeciesBreedId: 11001\n            }\n          })\n\n          break;\n\n        case 'other':\n          this.setState({\n            catImg: cat,\n            dogImg: dog,\n            otherImg: redother,\n            selectWZ: val,\n            breedArr: [],\n            confirmSelectBreedJson: {\n              name: \"defaultother\",\n              petSpeciesBreedId: 13001\n            }\n          })\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n  _petSpecies = () => {\n    let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\n\n    this.avatar = imgurl ? imgurl : selectphoto\n\n    return (\n      <div className=\"petSpecies\"\n        style={{ marginTop: mTop(30) }}\n      >\n        <div className=\"l\">\n          <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\n          <div className=\"selectSpecies\">\n            <ul>\n              <li >\n                <div className='speciesChild' >\n                  <div className='dog'\n\n                    onClick={() => { this.selectWZ('dog') }}>\n                    <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Dog\n                </div>\n              </li>\n              <li>\n                <div className='speciesChild' >\n                  <div className='dog' onClick={() => { this.selectWZ('cat') }} >\n                    <img src={catImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Cat\n                </div>\n              </li>\n              <li >\n                <div className='speciesChild' >\n                  <div className='dog' onClick={() => { this.selectWZ('other') }} >\n                    <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\n                  </div>\n                  Other\n                </div>\n              </li>\n\n            </ul>\n          </div>\n        </div>\n        <div className=\"r\">\n          <div className=\"img\">\n            <Avatar\n              init={\n                <div className=\"ciral \">\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\n                </div>\n              }\n              getinfo={(val) => {\n                if (val) {\n                  this.setState({\n                    imageId: val\n                  })\n                }\n\n              }}\n              getAllInfo={(val) => {\n                if (val.url) {\n                  this.setState({\n                    petUrl: val.url\n                  })\n                }\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _petName = () => {\n    let birthday = this.state.birthday\n    let birthdayValue = birthday ? moment(birthday) : moment(new Date())\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\n        <div className=\"l\">\n          <p >Pet Name</p>\n          <div className=\"infoInput\">\n            <Input\n              bordered={false}\n              value={this.state.initpetName}\n              onChange={(item) => {\n                this.setState({\n                  petName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\n                  initpetName: item.target.value\n                })\n              }}\n            />\n          </div>\n        </div>\n\n        <div className=\"r\">\n          <p >Pet Birthday</p>\n          <div className=\"infoInput\" >\n            <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\n              document.getElementById('calendar').style.display = 'block'\n            }}>{this.state.birthday}</p>\n            <div className=\"calendar\" id=\"calendar\">\n              <Calendar\n                fullscreen={false}\n                headerRender={({ value, type, onChange, onTypeChange }) => {\n                  const start = 0;\n                  const end = 12;\n                  const monthOptions = [];\n\n                  const current = value.clone();\n                  const localeData = value.localeData();\n                  const months = [];\n                  for (let i = 0; i < 12; i++) {\n                    current.month(i);\n                    months.push(localeData.monthsShort(current));\n                  }\n\n                  for (let index = start; index < end; index++) {\n                    monthOptions.push(\n                      <Select.Option className=\"month-item\" key={`${index}`}>\n                        {months[index]}\n                      </Select.Option>\n                    );\n                  }\n                  const month = value.month();\n\n                  const year = value.year();\n                  const options = [];\n                  for (let i = year - 10; i < year + 10; i += 1) {\n                    options.push(\n                      <Select.Option key={i} value={i} className=\"year-item\">\n                        {i}\n                      </Select.Option>\n                    );\n                  }\n                  return (\n                    <div style={{ padding: 8 }}>\n                      <Row gutter={8}>\n                        <Col>\n                          <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            className=\"my-year-select\"\n                            onChange={(newYear) => {\n                              const now = value.clone().year(newYear);\n                              onChange(now);\n                            }}\n                            value={String(year)}\n                          >\n                            {options}\n                          </Select>\n                        </Col>\n                        <Col>\n                          <Select\n                            size=\"small\"\n                            dropdownMatchSelectWidth={false}\n                            value={String(month)}\n                            onChange={(selectedMonth) => {\n                              const newValue = value.clone();\n                              newValue.month(parseInt(selectedMonth, 10));\n                              onChange(newValue);\n                            }}\n                          >\n                            {monthOptions}\n                          </Select>\n                        </Col>\n                        {/* <Col>\n                          <div className=\"btn\" onClick={() => {\n                            document.getElementById('calendar').style.display = 'none'\n                          }}>\n                            Choose this date\n                          </div>\n\n                        </Col> */}\n                      </Row>\n                    </div>\n                  );\n                }}\n                value={birthdayValue}\n                onSelect={(value) => {\n                  console.log(value);\n                  this.setState({\n                    birthday: moment(value).format('MMMM D, YYYY')\n                  })\n                  document.getElementById('calendar').style.display = 'none'\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n  _ownName = () => {\n    let { confirmSelectUserJson } = this.state\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(18), alignItems: 'flex-end' }}\n      >\n        <div className=\"l\">\n          <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\n          <div className=\"infoInput\">\n            <Input bordered={false}\n              value={this.state.patientId}\n              onChange={(item) => {\n                this.setState({\n                  patientId: item.target.value.replace(/\\s/g, \"\"),\n                  intFlog: true\n                })\n                if (item.target.value !== errPatientId) {\n                  message.destroy()\n                }\n              }}\n              onBlur={() => {\n                if (this.state.patientId === this.state.oldPatientId) {\n                  return\n                }\n                if (this.state.patientId === '') {\n                  message.error('The pet ID cannot be empty');\n                  return\n                }\n                let params = {\n                  patientId: this.state.patientId,\n                  doctorId: storage.userId\n                }\n                if (storage.lastWorkplaceId) {\n                  params.workplaceId = storage.lastWorkplaceId\n                }\n                if (storage.lastOrganization) {\n                  params.organizationId = storage.lastOrganization\n                }\n\n                checkPatientId(params)\n                  .then(res => {\n                    if (res.flag === false) {\n                      errPatientId = params.patientId\n                      message.error('This patient ID is already occupied, please change to a new one');\n                    } else {\n                      errPatientId = '';\n                      message.success('This pet ID will work');\n                    }\n                  })\n                  .catch(err => {\n                    console.log(err);\n\n                  })\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"r\">\n          <div className=\"infoInput flex\"\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer', }}\n            onClick={() => {\n\n              this.setState({\n                // selectUser: true\n              })\n            }}\n          >\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectUserJson.name ? confirmSelectUserJson.name : 'My Parents'}</div>\n            <div className=\"nextimg\" >\n              <img src={nextImg} style={{ height: px(15) }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  _select = (value, data) => {\n    console.log(value, data);  //value的值为id\n    this.setState({\n      petSpeciesBreedId: value,\n      breedName: data.children\n    })\n  }\n  _primaryBreed = () => {\n\n    let options = null\n    options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\n    let { breedName, confirmSelectBreedJson } = this.state\n    console.log('=============', confirmSelectBreedJson);\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(30), alignItems: 'flex-end', }}>\n        <div className=\"l\">\n          <div className=\"infoInput flex\"\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\n            onClick={() => {\n              this.setState({\n                selectBreed: true\n              })\n            }}\n          >\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>\n              {\n                confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'\n              }\n            </div>\n            <div className=\"nextimg\" >\n              <img src={nextImg} style={{ height: px(15) }} />\n            </div>\n          </div>\n        </div>\n        <div className=\"r\" >\n          <div className=\"max\">\n            Mix?\n            <div className=\"selected\"\n              onClick={() => this.setState({\n                isMix: !this.state.isMix\n              })}\n            >\n              {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n  _weight = () => {\n    let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\n    switch (this.state.unit) {\n      case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\n      case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\n    }\n    switch (this.state.gender) {\n      case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\n      case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\n    }\n    return (\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\n        <div className=\"l\">\n          <p >Pet Weight</p>\n          <div className=\"infoInput\">\n            <Input bordered={false}\n              value={this.state.weight}\n              onChange={(item) => {\n\n                this.setState({\n                  weight: item.target.value\n                })\n              }}\n            />\n            <div className=\"ibKg\">\n              <div className=\"ibs\"\n                style={{ backgroundColor: ibBgcColor, color: ibCor }}\n                onClick={() => {\n                  if (this.state.unit === 2) {\n\n                    this.setState({\n                      unit: 1,\n                      weight: (this.state.weight * 2.2046).toFixed(1)\n                    })\n                  }\n                }}\n              >Ibs</div>\n              <div className=\"kgs\"\n                style={{ backgroundColor: kgBgcColor, color: kgCor }}\n                onClick={() => {\n\n                  if (this.state.unit === 1) {\n\n                    this.setState({\n                      unit: 1,\n                      weight: (this.state.weight / 2.2046).toFixed(1)\n                    })\n                  }\n                  this.setState({ unit: 2 })\n                }}\n              >kgs</div>\n            </div>\n          </div>\n        </div>\n        <div className=\"r\">\n          <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\n          <div className=\"gender\">\n            <div className=\"selectGender\">\n              <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\n                <div className=\"femaleCiral\"\n                  style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\n                  onClick={() => this.setState({ gender: 1 })}\n                >\n                  <img src={female} alt=\"\" style={{ width: px(15) }} />\n                </div>\n                Female\n              </div>\n              <div className=\"male\" style={{ fontSize: px(18) }}>\n                <div className=\"maleCiral\"\n                  style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\n                  onClick={() => this.setState({ gender: 0 })}\n                >\n                  <img src={male} alt=\"\" style={{ width: px(20) }} />\n                </div>\n                Male\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n\n  render() {\n    const { closeColor, closebgc, minbgc } = this.state\n\n\n    return (\n      <div id=\"editPetInfo\">\n        {/* 头部 */}\n        <div className=\"close1\">\n          {/* 菜单 */}\n          <div className=\"menu\">\n            <MyIcon type='icon-fanhui4' className=\"icon\" onClick={() => {\n              // if (storage.goEditPet === \"mesasure\") {\n              //   this.props.history.push({ pathname: 'page8', participate: { patientId: this.state.patientId } })\n              // } else {\n              //   this.props.history.goBack()\n              // }\n              this.props.history.goBack()\n            }} />\n          </div>\n          <div className=\"text\">mella</div>\n          <div className='maxmin'>\n            <div\n              className=\"min iconfont icon-64\"\n              onClick={this._min}\n              onMouseEnter={this._minMove}\n              onMouseLeave={this._minLeave}\n              style={{ backgroundColor: minbgc }}\n            ></div>\n\n            <div\n              className=\"max iconfont icon-guanbi2\"\n              onClick={this._close}\n              onMouseEnter={this._closeMove}\n              onMouseLeave={this._closeLeave}\n              style={{ backgroundColor: closebgc, color: closeColor }}\n            ></div>\n          </div>\n        </div>\n        <div className=\"editPetInfo_top\">\n          <div className=\"title\">{`${this.state.patientId}, ${this.state.petName}`}</div>\n          {this._petSpecies()}\n          {this._petName()}\n          {this._ownName()}\n          {this._primaryBreed()}\n          {this._weight()}\n        </div>\n        <div className=\"editPetInfo_foot\">\n          <div className=\"save\"\n            onClick={() => {\n              let { petName, birthday, firstName, lastName, petSpeciesBreedId, isMix, weight, gender, unit, imageId, breedName, petId, confirmSelectBreedJson, confirmSelectUserJson } = this.state\n              console.log('生日：', birthday);\n              if (unit === 1) {\n                weight = (0.45359 * weight).toFixed(2)\n              }\n              let data = {}\n              if (this.state.patientId === this.state.oldPatientId) {\n                data = {\n                  petName,\n                  weight: parseFloat(weight),\n                  gender,\n                  firstName,\n                  lastName,\n                  // patientId: this.state.patientId,\n                }\n              } else {\n                data = {\n                  petName,\n                  weight: parseFloat(weight),\n                  gender,\n                  firstName,\n                  lastName,\n                  patientId: this.state.patientId,\n                }\n              }\n\n\n              if (birthday) {\n                data.birthday = moment(birthday).format('YYYY-MM-DD')\n              }\n              if (imageId !== -1) {\n                data.imageId = imageId\n              }\n              // if (breedName) {\n              //   data.breedName = breedName\n              // }\n              if (confirmSelectBreedJson.name) {\n                data.breedName = confirmSelectBreedJson.name\n              }\n              if (confirmSelectUserJson.petSpeciesBreedId) {\n                data.userId = confirmSelectUserJson.petSpeciesBreedId\n              }\n              if (storage.lastOrganization) {\n                data.organizationId = storage.lastOrganization\n              }\n              if (this.state.patientId === '') {\n                message.error('The pet ID cannot be empty');\n              } else {\n                this.setState({\n                  spin: true\n                })\n                // console.log('--------入参', data);\n                updatePetInfo(petId, data)\n                  .then(res => {\n                    this.setState({\n                      spin: false\n                    })\n                    console.log(res);\n                    if (res.flag === true) {\n                      try {\n                        if (storage.identity === '3') {\n                          let data = JSON.parse(storage.doctorExam)\n                          data.petName = petName\n                          data.weight = weight\n                          data.gender = gender\n                          data.patientId = this.state.patientId\n                          if (birthday) {\n                            data.age = moment(new Date()).diff(moment(birthday), 'years')\n                          }\n                          if (confirmSelectBreedJson.name) {\n                            data.breed = confirmSelectBreedJson.name\n                          }\n                          if (this.state.petUrl) {\n                            data.url = this.state.petUrl\n                          }\n\n                          storage.doctorExam = JSON.stringify(data)\n                        }\n                      } catch (error) {\n\n                      }\n                      this.props.petDetailInfoFun({ ...this.props.petDetailInfo, petName, birthday, patientId: this.state.patientId })\n                      this.props.history.goBack()\n                    } else {\n                      message.error('This patient ID is already occupied, please change to a new one')\n                    }\n                  })\n                  .catch(err => {\n                    this.setState({\n                      spin: false\n                    })\n                    console.log(err);\n                  })\n              }\n            }}\n\n          >Save Changes</div>\n\n        </div>\n        <MyModal\n          visible={this.state.spin}\n        />\n        <MyModal\n          // visible={true}\n          visible={this.state.selectBreed}\n          element={\n            <div className='myfindOrg' >\n              <div className=\"orgHeard\">\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\n                  <div>\n\n                  </div>\n                  <div\n                    onClick={() => {\n                      this.setState({\n                        selectBreed: false,\n                        selectBreedJson: {}\n                      })\n                    }}\n                  >\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\n                  </div>\n                </div>\n                <div className=\"text\" >Choose Breed</div>\n\n                <div className=\"searchBox\">\n\n                  <Input\n                    placeholder=\" &#xe61b; Search name\"\n                    bordered={false}\n                    allowClear={true}\n                    value={this.state.searchBreed}\n                    onChange={(item) => {\n\n                      this.setState({\n                        searchBreed: item.target.value\n                      })\n                    }}\n\n                  />\n\n                </div>\n              </div>\n\n\n              <div className=\"list\" >\n                <PhoneBook\n                  listDate={this.state.breedArr}\n                  confirmSelectBreed={this.state.petSpeciesBreedId}\n                  selectFun={(val) => {\n                    // console.log('从子组件传来的数据', val);\n                    this.setState({\n                      selectBreedJson: val,\n                      petSpeciesBreedId: val.petSpeciesBreedId\n                    })\n\n\n                  }}\n                  searchText={this.state.searchBreed}\n                />\n              </div>\n\n              <div className=\"foot\">\n                <Button\n                  text={'Select'}\n                  onClick={() => {\n                    this.setState({\n                      confirmSelectBreedJson: this.state.selectBreedJson,\n                      selectBreed: false\n                    })\n                  }}\n                />\n\n              </div>\n\n            </div>\n          }\n        />\n\n        <MyModal\n          visible={this.state.selectUser}\n          element={\n            <div className='myfindOrg' >\n              <div className=\"orgHeard\">\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\n                  <div>\n\n                  </div>\n                  <div\n                    onClick={() => {\n                      this.setState({\n                        selectUser: false,\n                        selectUserJson: {}\n                      })\n                    }}\n                  >\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\n                  </div>\n                </div>\n                <div className=\"text\" >Choose Parents</div>\n\n                <div className=\"searchBox\">\n\n                  <Input\n                    placeholder=\" &#xe61b; Search name\"\n                    bordered={false}\n                    allowClear={true}\n                    value={this.state.searchBreed}\n                    onChange={(item) => {\n\n                      this.setState({\n                        searchBreed: item.target.value\n                      })\n                    }}\n\n                  />\n\n                </div>\n              </div>\n\n\n              <div className=\"list\" >\n                <PhoneBook\n                  listDate={this.state.doctorArr}\n                  confirmSelectBreed={this.state.selectUserId}\n                  selectFun={(val) => {\n\n                    this.setState({\n                      selectUserJson: val,\n                      selectUserId: val.petSpeciesBreedId\n                    })\n\n\n                  }}\n                  searchText={this.state.searchBreed}\n                />\n              </div>\n\n              <div className=\"foot\">\n                <Button\n                  text={'Select'}\n                  onClick={() => {\n                    this.setState({\n                      confirmSelectUserJson: this.state.selectUserJson,\n                      selectUser: false\n                    })\n                  }}\n                />\n\n              </div>\n\n            </div>\n          }\n        />\n\n      </div>\n    )\n  }\n}\nexport default connect(\n  state => ({\n    petDetailInfo: state.petReduce.petDetailInfo\n  }),\n  { petDetailInfoFun }\n)(EditPetInfo)\n",["446","447"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signIn/index.jsx",["448","449","450","451","452","453"],"import React, { Component } from \"react\";\nimport { Input, message, Spin } from \"antd\";\nimport {\n  createFromIconfontCN,\n  LoadingOutlined,\n} from \"@ant-design/icons\";\n\nimport mellaLogo from \"./../../assets/images/mellaLogo.png\";\nimport dui from \"./../../assets/images/dui.png\";\nimport back_white from \"./../../assets/img/back-white.png\";\nimport back_hui from \"./../../assets/img/back-hui.png\";\n\nimport { getLoginQRcode, loginWithQRcode, mellaLogin } from \"./../../api\"\n\nimport temporaryStorage from \"../../utils/temporaryStorage\";\nimport { px, win } from \"../../utils/px\";\nimport MinClose from \"./../../utils/minClose/MinClose\";\nimport MouseDiv from \"./../../utils/mouseDiv/MouseDiv\";\nimport { addLogin } from \"../../utils/axios\";\n\nimport \"./index.less\";\n\nlet storage = window.localStorage;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js\",\n});\nlet num = 0;\n//有可能出现,登录成功跳转后获取到了二维码,这样就会导致出现一直轮询,未解决这个问题设置变量isSign\nlet isSign = true;\n\nexport default class SignIn extends Component {\n  state = {\n    isRemember: false,\n    email: \"\",\n    hash: \"\",\n    isCode: false,\n    baseUrl: \"\",\n    QRToken: \"\",\n    isExpired: false, //二维码是否过期\n    spin: false,\n    isLoadQrCode: false, //是否正在加载二维码\n  };\n  componentDidMount() {\n    isSign = true;\n    storage.lastOrganization = \"\";\n    //通知main.js渲染一个small窗口\n    let ipcRenderer = window.electron.ipcRenderer;\n    ipcRenderer.send(\"small\", win());\n    //如果有保存的账号密码则展示出来\n    if (storage.signIn !== undefined && storage.signIn !== \"\") {\n      let data = storage.signIn;\n      data = JSON.parse(data);\n      this.setState({\n        email: data.email,\n        hash: data.hash,\n        QRToken: \"\",\n      });\n    }\n    //是否勾选了保持登录\n    if (storage.isRemember !== undefined) {\n      let isRemember = storage.isRemember === \"true\" ? true : false;\n      this.setState({\n        isRemember,\n      });\n    }\n    // 监听分辨率是否改变\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    //清空本地的注册界面的信息\n    temporaryStorage.logupVetInfo = {};\n    this._getQRCode();\n  }\n  componentWillUnmount() {\n    isSign = false;\n    this.timer && clearInterval(this.timer);\n    let ipcRenderer = window.electron.ipcRenderer;\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer;\n    // ipcRenderer.send('small')\n    ipcRenderer.send(\"small\", win());\n    this.setState({});\n  };\n  _getQRCode = () => {\n    this.setState({\n      isLoadQrCode: true,\n    });\n    num = 0;\n\n    getLoginQRcode()\n      // addQRCode()\n      .then((res) => {\n        message.destroy();\n\n        console.log(\"---获取二维码\", res);\n        if (res.flag === true) {\n          this.setState({\n            baseUrl: res.data.QRcode,\n            QRToken: res.data.QRToken,\n            isLoadQrCode: false,\n          });\n          this.timer = setInterval(() => {\n            if (!isSign) {\n              this.timer && clearInterval(this.timer);\n            }\n            num++;\n            console.log(\"lunxin\");\n            this._polling();\n\n            if (num > 280) {\n              //超过280秒则去显示二维码过期，要重新获取\n              this.setState({\n                isExpired: true,\n              });\n              num = 0;\n              this.timer && clearInterval(this.timer);\n            }\n          }, 1000);\n        } else {\n          message.error(\"Failed to obtain QR code\", 10);\n          this.setState({\n            isLoadQrCode: false,\n          });\n        }\n      })\n      .catch((err) => {\n        message.error(\"Failed to obtain QR code\", 10);\n        this.setState({\n          isLoadQrCode: false,\n        });\n        console.log(err);\n      });\n  };\n  //轮询\n  _polling = () => {\n\n    loginWithQRcode(this.state.QRToken)\n      .then((res) => {\n        console.log(\"轮询结果：\", res);\n        if (res.flag === true) {\n          switch (res.code) {\n            case 10001:\n              console.log(\"未扫码\");\n\n              break;\n\n            case 11033:\n              console.log(\"扫码未点击登录\");\n              this.timer && clearInterval(this.timer);\n              temporaryStorage.QRToken = this.state.QRToken;\n              let { name, url } = res.data;\n              this.props.history.replace({\n                pathname: \"/user/login/scanCodeLogin\",\n                params: { name, url },\n              });\n\n              break;\n\n            case 11023:\n              console.log(\"过期\");\n              this.setState({\n                isExpired: true,\n              });\n              num = 0;\n              this.timer && clearInterval(this.timer);\n\n              break;\n\n            default:\n              break;\n          }\n        }\n        console.log(\"code\", res.code);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  //登录接口\n  _continue = () => {\n    const { email, hash, isRemember } = this.state;\n\n    message.destroy();\n    let params = {\n      email: email.replace(/(^\\s*)/g, \"\"),\n      hash,\n      identityTypeId: \"1\",\n    };\n    if (email === \"\") {\n      message.error(\"please input your email\");\n      return;\n    }\n    if (hash === \"\") {\n      message.error(\"please input your password\");\n      return;\n    }\n    console.log(params);\n    this.setState({\n      spin: true,\n    });\n    mellaLogin(params)\n      .then((res) => {\n        console.log(res);\n        this.setState({\n          spin: false,\n        });\n        if (res.status && res.status === 404) {\n          message.error(\"system error\");\n          return;\n        }\n        if (res.status === 500) {\n          message.error(\"system error\");\n\n          return;\n        }\n        if (res.code === 10001 && res.msg === \"账号错误\") {\n          message.error(\"Account error\");\n          return;\n        }\n        if (res.code === 10002 && res.msg === \"密码错误\") {\n          message.error(\"wrong password\");\n          return;\n        }\n        if (\n          res.code === 0 &&\n          res.msg === \"success\" &&\n          res.success.roleId === 1\n        ) {\n          message.error(\n            \"You do not have the authority of a doctor, please contact the administrator or customer service\",\n            10\n          );\n          return;\n        }\n        if (res.code === 10004 && res.msg === \"账号被限制\") {\n          message.error(\n            \"The account is restricted, please contact the management\",\n            10\n          );\n          return;\n        }\n        if (res.code === 10003) {\n          message.error(\"The password or email is incorrect, please re-enter\");\n          return;\n        }\n\n        if (res.code === 0 && res.msg === \"success\") {\n          this.timer && clearInterval(this.timer);\n          console.log(\"账号密码正确，登录进去了\");\n          let { userWorkplace, lastOrganization, token } = res.success;\n          storage.token = token;\n          storage.userId = \"\";\n          let data = {\n            email: email.replace(/(^\\s*)/g, \"\"),\n            hash,\n          };\n          data = JSON.stringify(data);\n          if (isRemember === true) {\n            storage.signIn = data;\n          } else {\n            storage.signIn = \"\";\n          }\n          storage.saveSign = data;\n\n          storage.userId = res.success.userId;\n          storage.roleId = res.success.roleId;\n\n          //每次登陆后清空宠物列表缓存的数据\n          storage.doctorList = \"\";\n          storage.defaultCurrent = \"\";\n\n          //由于后台接口原因，导致这里的最后工作场所可能不是自己的，因此下面全注释掉。改成如果有多个工作场所则跳转到选择工作场所界面，不是多个则跳转到选择宠物界面\n          if (res.success.lastWorkplaceId) {\n            storage.lastWorkplaceId = res.success.lastWorkplaceId;\n          } else {\n            storage.lastWorkplaceId = \"\";\n          }\n\n          if (res.success.lastOrganization) {\n            storage.lastOrganization = res.success.lastOrganization;\n          } else {\n            storage.lastOrganization = \"\";\n          }\n\n          // console.log(\"----------\", userWorkplace, userWorkplace.length);\n\n          if (userWorkplace) {\n            storage.userWorkplace = JSON.stringify(userWorkplace);\n            let connectionKey = \"\";\n            for (let i = 0; i < userWorkplace.length; i++) {\n              const element = userWorkplace[i];\n              if (element.organizationEntity) {\n                if (\n                  element.organizationEntity.organizationId === lastOrganization\n                ) {\n                  if (element.organizationEntity.connectionKey) {\n                    connectionKey = element.organizationEntity.connectionKey;\n                  }\n                  if (element.roleId) {\n                    console.log(element.roleId);\n                    storage.roleId = element.roleId;\n                  }\n\n                  break;\n                }\n              }\n            }\n            console.log(\"----------key值为：\", connectionKey);\n            storage.connectionKey = connectionKey;\n          } else {\n            storage.userWorkplace = \"\";\n            storage.connectionKey = \"\";\n          }\n\n          this.props.history.push(\"/MainBody\");\n        }\n      })\n      .catch((err) => {\n        this.setState({\n          spin: false,\n        });\n        console.log(err);\n      });\n  };\n\n  _signUp = (e) => {\n    e.preventDefault();\n    this.props.history.push(\"/uesr/logUp/VetPrifile\");\n  };\n  _change = () => {\n    let { isCode } = this.state;\n    message.destroy();\n    if (isCode === false) {\n      this._getQRCode();\n    } else {\n      this.timer && clearInterval(this.timer);\n      num = 0;\n      this.setState({\n        isExpired: false,\n      });\n    }\n    this.setState({ isCode: !this.state.isCode });\n  };\n  //二维码界面\n  _qrCode = () => {\n    let { isCode, baseUrl, isExpired, isLoadQrCode } = this.state;\n    let imgOpacity = isLoadQrCode ? (baseUrl ? 0.1 : 0.5) : 1;\n\n    if (!isExpired) {\n      const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n      return (\n        <div className=\"qrcode\">\n          <img\n            src={`data:image/jpeg;base64,${baseUrl}`}\n            alt=\"\"\n            style={{\n              width: px(120),\n              height: px(120),\n              opacity: imgOpacity,\n            }}\n          />\n          {isLoadQrCode && (\n            // true &&\n\n            <div className=\"err\">\n              <Spin\n                indicator={antIcon}\n                tip=\"Loading...\"\n                style={{ fontSize: 16, color: \"#e1206d\" }}\n              />\n            </div>\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"qrcode\">\n          <img\n            src={`data:image/jpeg;base64,${baseUrl}`}\n            alt=\"\"\n            style={{ opacity: \"0.1\", width: px(120), height: px(120) }}\n          />\n\n          <div className=\"err\">\n            <div className=\"errText\">QR code has expired</div>\n            <div\n              className=\"btn\"\n              style={{ width: px(145), height: px(35), marginTop: px(10) }}\n              onClick={this.refresh}\n            >\n              Refresh\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n  //点击refresh按钮\n  refresh = () => {\n    this.setState({\n      isExpired: false,\n    });\n    num = 0;\n    this._getQRCode();\n  };\n  beforeDiv = () => {\n    return <img src={back_hui} alt=\"\" style={{ width: px(15) }} />;\n  };\n  afterDiv = () => {\n    return <img src={back_white} alt=\"\" style={{ width: px(15) }} />;\n  };\n\n  render() {\n    let { isCode, baseUrl } = this.state;\n    let code = isCode ? \"icon-diannao-copy\" : \"icon-erweima-copy\";\n    return (\n      <div id=\"signIn\">\n        <div\n          className=\"heaed\"\n          style={{ paddingTop: px(10), paddingRight: px(20) }}\n        >\n          <div className=\"l\">\n            <MouseDiv\n              className=\"mouseDiv\"\n              beforeDiv={this.beforeDiv}\n              afterDiv={this.afterDiv}\n              divClick={() => {\n                this.props.history.push(\"/\");\n              }}\n            />\n          </div>\n          <div className=\"r\">\n            <MinClose />\n          </div>\n        </div>\n\n        <div className=\"body\">\n          <div className=\"logo\">\n            <img src={mellaLogo} alt=\"\" />\n          </div>\n          <div className=\"body\" style={{ position: \"relative\" }}>\n            <div\n              className=\"text\"\n            // style={{\n            //   fontSize: px(28),\n            //   marginBottom: px(20),\n            //   marginTop: px(30),\n            // }}\n            >\n              Please enter email <br />\n              and password\n            </div>\n\n            <div className=\"inpF\">\n              <Input\n                className=\"inp\"\n                // style={{\n                //   width: px(310),\n                //   height: px(45),\n                //   fontSize: px(18),\n                // }}\n                value={this.state.email}\n                placeholder=\"rachel@friends.com\"\n                bordered={false}\n                onChange={(item) => {\n                  let str = item.target.value;\n                  this.setState({\n                    email: str,\n                  });\n                }}\n              />\n              <Input.Password\n                className=\"inp\"\n                // style={{\n                //   width: px(310),\n                //   height: px(45),\n                //   marginLeft: px(6),\n                //   marginBottom: px(18),\n                //   fontSize: px(18),\n                // }}\n                visibilityToggle={false}\n                value={this.state.hash}\n                placeholder=\"********\"\n                bordered={false}\n                onChange={(item) => {\n                  let str = item.target.value;\n                  this.setState({\n                    hash: str,\n                  });\n                }}\n                onKeyDown={(e) => {\n                  if (e.keyCode === 13) {\n                    this._continue();\n                  }\n                }}\n              />\n\n              <div\n                className=\"text\"\n              // style={{\n              //   fontSize: px(28),\n              //   lineHeight: px(1),\n              //   marginTop: px(10),\n              //   marginBottom: px(20),\n              // }}\n              >\n                {\"Or scan QR Code\"}\n              </div>\n            </div>\n\n            {this._qrCode()}\n            <div\n              className=\"littleText flex\"\n              style={{\n                fontSize: px(12),\n                marginTop: px(10),\n                marginBottom: px(10),\n              }}\n            >\n              Go to your Mella mobile app to access\n              <br />\n              the QR scanner\n            </div>\n            <div className=\"stay\">\n              <div className=\"remember\">\n                <p style={{ fontSize: px(16) }}>Stay Signed In</p>\n                <div\n                  className=\"box\"\n                  style={{ width: px(20), height: px(20), marginLeft: px(12) }}\n                  onClick={() => {\n                    let { isRemember } = this.state;\n                    this.setState({\n                      isRemember: !isRemember,\n                    });\n                    storage.isRemember = !isRemember;\n                  }}\n                >\n                  {this.state.isRemember && <img src={dui} alt=\"\" />}\n                </div>\n              </div>\n              <div\n                className=\"forgot\"\n                style={{ fontSize: px(16) }}\n                onMouseDown={() => {\n                  let forget = document.querySelectorAll(\"#signIn .forgot\");\n                  forget[0].style.opacity = 0.5;\n                }}\n                onMouseUp={() => {\n                  document.querySelectorAll(\n                    \"#signIn .forgot\"\n                  )[0].style.opacity = 1;\n                  if (this.state.email) {\n                    temporaryStorage.forgotPassword_email = this.state.email;\n                  }\n\n                  this.props.history.push(\"/user/login/forgotPassword\");\n                }}\n              >\n                Forgot?\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div\n          className=\"button11\"\n          style={{ backgroundColor: \"#E7E7E7\" }}\n        >\n          <div\n            className=\"btn1 flex\"\n            onClick={this._continue}\n          // style={{ height: px(40) }}\n          >\n            <p>{`CONTINUE`}</p>\n          </div>\n\n          <div className=\"text2\" style={{ marginTop: px(12) }}>\n            <p style={{ fontSize: px(17) }}>\n              Do not have an account?{\" \"}\n              <a href=\"#\" onClick={this._signUp}>\n                Sign Up\n              </a>\n            </p>\n          </div>\n        </div>\n\n        {this.state.spin && (\n          <div className=\"modal\">\n            <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\n              <LoadingOutlined\n                style={{ fontSize: 30, color: \"#fff\", marginTop: px(-30) }}\n              />\n            </div>\n            <p>loading...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n",["454","455"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/editParent/index.jsx",["456","457","458","459","460","461","462","463","464"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/organization.js",["465"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measuredData.jsx",["466","467","468","469","470","471","472","473","474","475","476","477","478"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/team/index.jsx",["479","480","481"],"import React, { Component, } from 'react'\nimport {\n  Tag,\n  Input,\n  Tooltip,\n  message,\n} from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\n\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport temporaryStorage from '../../utils/temporaryStorage'\nimport { px } from '../../utils/px';\nimport Button from '../../utils/button/Button';\nimport MyModal from '../../utils/myModal/MyModal';\n\nimport './index.less';\nimport { checkUser, inviteUserByEmail, mellaLogin } from '../../api';\n\nexport default class Team extends Component {\n\n  state = {\n\n    tags: [],\n    inputVisible: false,\n    inputValue: '',\n    editInputIndex: -1,\n    editInputValue: '',\n    visible: false\n  }\n\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n    this.setState({\n\n    })\n  }\n\n\n  handleClose = removedTag => {\n    const tags = this.state.tags.filter(tag => tag !== removedTag);\n    console.log(tags);\n    this.setState({ tags });\n  };\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  };\n\n  handleInputChange = e => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  handleInputConfirm = () => {\n    const { inputValue } = this.state;\n    let { tags } = this.state;\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      console.log('输入的内容为：', inputValue);\n      message.destroy()\n      checkUser(inputValue)\n        .then(res => {\n\n\n          console.log('检测邮箱存不存在', res);\n\n          if (res.code) {\n            switch (res.code) {\n\n              case 11011:\n                console.log('邮箱存在，发送邮件');\n                tags = [...tags, inputValue];\n                console.log(tags);\n\n                this.setState({\n                  tags,\n                  inputVisible: false,\n                  inputValue: '',\n                });\n                break;\n              // case 11012:\n              //     console.log('账号被限制、注册未激活状态');\n\n\n\n              // case 11013:\n              //     console.log('邮箱未被注册，跳出弹框询问是否前往注册');\n              case 11014:\n                console.log('邮箱被注销或者封停，跳出弹框询问是否前往注册');\n                message.error('This mailbox was not found!', 3)\n                this.setState({\n                  inputVisible: false,\n                  inputValue: '',\n                });\n                break;\n\n            }\n          } else {\n            console.log('系统错误', res);\n            message.error('system error')\n            this.setState({\n              spin: false\n            })\n          }\n\n\n        })\n        .catch(err => {\n          message.error(`Error:${err.message}`)\n          console.log('检测邮箱号的接口出错了', err);\n        })\n\n\n    }\n\n  };\n\n\n  saveInputRef = input => {\n    this.input = input;\n  };\n\n  saveEditInputRef = input => {\n    this.editInput = input;\n  };\n\n  _next = () => {\n    message.destroy()\n    let { tags } = this.state\n    let { userId } = temporaryStorage.logupSuccessData\n    let { organizationId } = temporaryStorage.logupOrganization\n    console.log({ tags, userId, organizationId });\n    if (tags.length === 0) {\n      this._logIn()\n    }\n    this.setState({\n      visible: true\n    })\n    console.log('入参:', tags);\n    inviteUserByEmail(userId, organizationId, tags)\n      .then(res => {\n        console.log(res);\n        if (res.flag === true) {\n          console.log('成功，跳转');\n          message.success('Invitation successful', 3)\n          this._logIn()\n        } else {\n          this.setState({\n            visible: false\n          })\n        }\n\n      })\n      .catch(err => {\n        this.setState({\n          visible: false\n        })\n        console.log(err);\n        message.error(err.message, 3)\n      })\n  }\n  _logIn = () => {\n\n    let storage = window.localStorage;\n    let sign = storage.saveSign\n    try {\n      sign = JSON.parse(sign)\n    } catch (error) {\n\n    }\n\n    let { email, hash } = sign\n    let params = {\n      email: email.replace(/(^\\s*)/g, \"\"),\n      hash,\n      identityTypeId: '1'\n    }\n    console.log('登录入参:', params);\n    mellaLogin(params)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          visible: false\n        })\n        if (res.status && res.status === 404) {\n          message.error('system error');\n          return\n        }\n        if (res.code === 10001 && res.msg === '账号错误') {\n          message.error('Account error');\n          return\n        }\n        if (res.code === 10002 && res.msg === '密码错误') {\n          message.error('wrong password')\n          return;\n        }\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\n          return\n        }\n\n        if (res.code === 0 && res.msg === 'success') {\n          console.log('账号密码正确，登录进去了');\n          let { userWorkplace, lastOrganization, token } = res.success\n          storage.token = token\n          storage.userId = ''\n\n          storage.userId = res.success.userId\n          storage.roleId = res.success.roleId\n\n          //每次登陆后清空宠物列表缓存的数据\n          storage.doctorList = ''\n          storage.defaultCurrent = ''\n\n\n\n\n          if (userWorkplace) {\n            storage.userWorkplace = JSON.stringify(userWorkplace)\n            let connectionKey = ''\n            for (let i = 0; i < userWorkplace.length; i++) {\n              const element = userWorkplace[i];\n              if (element.organizationEntity) {\n                if (element.organizationEntity.organizationId === lastOrganization) {\n\n                  if (element.organizationEntity.connectionKey) {\n                    connectionKey = element.organizationEntity.connectionKey\n                  }\n                  if (element.roleId) {\n                    console.log(element.roleId);\n                    storage.roleId = element.roleId\n                  }\n\n                  break\n                }\n              }\n\n            }\n            console.log('----------key值为：', connectionKey);\n            storage.connectionKey = connectionKey\n\n          } else {\n            storage.userWorkplace = ''\n            storage.connectionKey = ''\n\n          }\n\n\n\n\n\n\n\n          this.props.history.push('/menuOptions/ConnectWorkplace')\n\n\n        }\n      })\n      .catch(err => {\n        this.setState({\n          visible: false\n        })\n        console.log(err);\n      })\n  }\n\n\n\n\n\n\n  render() {\n    const { tags, inputVisible, inputValue, editInputIndex, editInputValue } = this.state;\n    // console.log('---', editInputIndex);\n    return (\n      <div id=\"inviteTeam\" >\n        {/* 关闭缩小 */}\n        <div className=\"heard\">\n          <MaxMin\n            onClick={() => { this.props.history.push('/') }}\n            onClick1={() => this.props.history.goBack()}\n          />\n          <div className=\"text\">Invite your Team</div>\n\n          <div className=\"addF\">\n            <p>To:</p>\n            <div className=\"add\">\n\n              <>\n                {tags.map((tag, index) => {\n                  const isLongTag = tag.length > 25;  //标签里面的字符串的长度\n\n                  const tagElem = (\n                    <Tag\n                      className=\"edit-tag\"\n                      key={tag}\n                      closable={true}\n                      onClose={() => this.handleClose(tag)}\n                    >\n                      <span>\n                        {isLongTag ? `${tag.slice(0, 25)}...` : tag}\n                      </span>\n                    </Tag>\n                  );\n                  return isLongTag ? (\n                    <Tooltip title={tag} key={tag}>\n                      {tagElem}\n                    </Tooltip>\n                  ) : (\n                    tagElem\n                  );\n                })}\n                {inputVisible && (\n                  <Input\n                    ref={this.saveInputRef}\n                    type=\"text\"\n                    size=\"small\"\n                    className=\"tag-input\"\n                    value={inputValue}\n                    onChange={this.handleInputChange}\n                    onBlur={this.handleInputConfirm}\n                    onPressEnter={this.handleInputConfirm}\n                  />\n                )}\n                {!inputVisible && (\n                  <Tag className=\"site-tag-plus\" onClick={this.showInput}>\n                    <PlusOutlined />Press Enter to add mailbox\n                  </Tag>\n                )}\n              </>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"btn\"\n          style={{ padding: `${px(40)}px 0` }}\n        >\n          <Button\n            type=\"primary\"\n            shape=\"round\"\n            size='large'\n            htmlType=\"submit\"\n            onClick={this._logIn}\n            text={'Skip'}\n          >\n            Skip\n          </Button>\n          <Button\n            type=\"primary\"\n            shape=\"round\"\n            size='large'\n            htmlType=\"submit\"\n            onClick={this._next}\n            text={'Send'}\n          >\n\n          </Button>\n        </div>\n        <MyModal visible={this.state.visible} />\n\n      </div>\n\n\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/VetSpire.js",["482","483","484"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/HardListModal.jsx",["485"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/index.jsx",["486","487","488","489","490","491","492","493"],"import React, { Component } from \"react\";\nimport { Modal, message } from \"antd\";\n\nimport Heard from \"../../utils/heard/Heard\";\nimport { px, win, timerFun } from \"../../utils/px\";\nimport electronStore from \"../../utils/electronStore\";\nimport { compareObject } from \"../../utils/current\";\nimport { compareArray } from \"../../utils/current\";\n\nimport HardAndPetsUI from \"./HardAndPetsUI\";\nimport HardWareTypeUI from \"./hardWareTypeUI\";\nimport AddDevice from \"./AddDevice\";\n\nimport BiggiePage from \"../../pages/biggiePage\";\nimport ScanPage from \"../../pages/scanPage\";\nimport AllPets from \"../../pages/allPetsPage\";\nimport ScheduledPetPage from \"../../pages/scheduledPetsPage\";\nimport AddScheduledPet from \"../../pages/addScheduledPet\";\nimport ClininalStudy from \"../../pages/clinicalStudyPage\";\nimport CombineScales from \"../../pages/combineScales\";\nimport OtterEQPage from '../../pages/otterEQ';\nimport MyAccount from \"../../pages/myAccount\";\nimport TemperaturePage from \"../../pages/temperaturePage\";\n\n\nimport { connect } from \"react-redux\";\nimport {\n  setHardwareList,\n  selectHardwareModalShowFun,\n  setIsHaveUsbDeviceFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n  setMellaDeviceIdFun,\n  setMellaMeasureNumFun,\n  setBiggieConnectStatusFun,\n  setBiggieBodyFatFun,\n  setBiggieBodyWeightFun,\n  setBiggieUnitFun,\n  setBiggieSameWeightCountFun,\n  setRulerConnectStatusFun,\n  setRulerMeasureValueFun,\n  setRulerUnitFun,\n  setRulerConfirmCountFun,\n  setReceiveBroadcastHardwareInfoFun,\n} from \"../../store/actions\";\n\nimport \"./mainbody.less\";\n\n\nlet ipcRenderer = window.require(\"electron\").ipcRenderer;\nlet isMeasure = false; //是否正在测量,用于判断是否需要发送指定指令给USB,查看硬件是否连接\nlet initTime = 0; //初始化时间,用来计算底座没有回应温度计的时间差,如果时间差大于6秒代表断开连接\nlet num07 = 0; //接收到07命令行的次数,次数大于3跳出弹框\nlet firstEar = true; //为true代表一组数据测量完成,下组测量数据\nlet is97Time = null; //为了防抖，因为有时候断开连接和连接成功总是连续的跳出来，展示就会一直闪烁，因此引入时间差大于800ms才展示\nlet exchangeNum = 0; //奇数发送查询探头id指令，偶数发送询问配置\nlet time194 = 0\n\n//用于预测的东西\nlet clinicalYuce = [],\n  clinicalIndex = 0;\n\nlet storage = window.localStorage;\n\nclass App extends Component {\n  state = {\n    //body部分窗口高度\n    bodyHeight: 0,\n    //本地保存的硬件类型数组,不包括Add这个类型\n    devicesTypeList: [],\n    //展示硬件类型的数组\n    showHardWareTypeList: [],\n    //是否有USB设备\n    isHaveUsbDevice: true,\n    //mella温度计测量状态\n    mellaMeasureStatus: \"disconnected\", //connected,disconnected,isMeasuring,complete\n\n    //点击菜单的序号\n    clickMenuIndex: \"1\",\n    err07Visible: false,\n    units: '℉'\n  };\n  componentDidMount() {\n    ipcRenderer.send(\"big\", win());\n    timerFun();\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    //获取窗口高度\n    this.resize();\n    //react监听屏幕窗口改变\n    window.addEventListener(\"resize\", this.resize);\n\n    //获取设备类型\n    this.getDevicesType();\n\n    //检测USB设备发来的信息\n    ipcRenderer.on(\"sned\", this._send);\n    //检测是否有USB设备\n    ipcRenderer.on(\"noUSB\", this._noUSB);\n    //定时查看mella温度计是否与底座连接或断开\n    this._whether_to_connect_to_mella();\n\n    //获取本地设置\n    this.getLocalSetting();\n    //获取单位\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`) || {}\n    console.log('----', hardSet);\n    let { isHua, } = hardSet\n    if (isHua === false) {\n      this.setState({\n        units: '℃'\n      })\n    } else {\n      this.setState({\n        units: '℉'\n      })\n    }\n\n\n  }\n  componentWillUnmount() {\n    //组件销毁，取消监听\n    window.removeEventListener(\"resize\", this.resize);\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n    ipcRenderer.removeListener(\"sned\", this._send);\n    ipcRenderer.removeListener(\"noUSB\", this._noUSB);\n    this.detectTimer && clearInterval(this.detectTimer);\n    this.rulerTimer && clearTimeout(this.rulerTimer);\n    message.destroy();\n  }\n  //检测到props里的hardwareList更新\n  UNSAFE_componentWillReceiveProps(prevProps) {\n    //对比props里的hardwareList和state里的hardwareList是否相同\n\n    if (!compareArray(prevProps.hardwareList, this.state.devicesTypeList)) {\n      let showHardWareTypeList = [].concat(prevProps.hardwareList);\n      showHardWareTypeList.push({\n        type: \"add\",\n        devices: [],\n      });\n      this.setState({\n        devicesTypeList: prevProps.hardwareList,\n        showHardWareTypeList,\n      });\n    }\n    if (!compareObject(prevProps.menuNum, this.state.clickMenuIndex)) {\n      this.setState({\n        clickMenuIndex: prevProps.menuNum,\n      });\n    }\n  }\n\n  changeFenBianLv = (e) => {\n    let ipcRenderer = window.electron.ipcRenderer;\n    // ipcRenderer.send('small')\n    ipcRenderer.send(\"big\", win());\n    // this.setState({}, () => {\n    //   if (this.props.test) {\n    //     if (this.props.test.current) {\n    //       this.props.test.current.getEchartsInstance().dispose();\n    //       this.props.test.current.getEchartsInstance().clear();\n    //       setTimeout(() => {\n    //         this.props.test.current.getEchartsInstance().resize();\n    //       }, 500);\n    //     }\n    //   }\n    // });\n\n  };\n  //获取本地设置\n  getLocalSetting = () => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (!hardSet) {\n      let settings = {\n        isHua: true,\n        is15: true,\n        self_tarting: false, //自启动\n        isBacklight: true,\n        isBeep: true,\n        backlightTimer: { length: 140, number: \"45\" },\n        autoOff: { length: 0, number: \"30\" },\n      };\n      electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\n    }\n  };\n  //检测USB设备发来的信息\n  _send = (e, data) => {\n    // console.log('检测USB设备发来的信息', data)\n    //data就是测量的数据，是十进制的数字\n    this.command(data)();\n  };\n  //监听是否有USB设备,true代表没有USB设备，false代表有USB设备\n  _noUSB = (e, data) => {\n    if (data === false) {\n      message.destroy();\n    } else {\n      if (this.state.isHaveUsbDevice) {\n        message.destroy();\n        message.error(\"The base is not detected. Please insert the base\", 0);\n      }\n    }\n    if (data === this.props.isHaveUsbDevice) {\n      this.props.setIsHaveUsbDeviceFun(!data);\n    }\n    if (data === this.state.isHaveUsbDevice) {\n      this.setState({\n        isHaveUsbDevice: !data,\n      });\n    }\n  };\n  //监听mella温度计是否与底座连接或断开\n  _whether_to_connect_to_mella = () => {\n    console.log(\"监听mella温度计是否与底座连接或断开\");\n    message.destroy();\n    this.detectTimer && clearInterval(this.detectTimer);\n    //2秒检测一次\n    this.detectTimer = setInterval(() => {\n      exchangeNum++;\n      //如果正在测量或者没有USB设备，不检测\n      if (isMeasure || !this.state.isHaveUsbDevice) {\n        return;\n      }\n      if (exchangeNum % 2 === 0) {\n        //让底座发送查询温度计信息指令\n        ipcRenderer.send(\"usbdata\", { command: \"07\", arr: [\"5A\"] });\n      } else {\n        ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n      }\n\n      //如果底座没有回应，则计算时间差,时间差大于5秒，则没与温度计连接\n      if (new Date() - initTime > 6000) {\n        this._disconnect_to_mella();\n      } else {\n      }\n    }, 2000);\n  };\n  //底座与温度计断开连接\n  _disconnect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus, setMellaDeviceIdFun } =\n      this.props;\n    if (mellaConnectStatus !== \"disconnected\") {\n      setMellaConnectStatusFun(\"disconnected\");\n    }\n    setMellaDeviceIdFun(\"\");\n  };\n  //底座与温度计连接\n  _connect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus } = this.props;\n    if (mellaConnectStatus !== \"connected\") {\n      setMellaConnectStatusFun(\"connected\");\n    }\n  };\n\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  command = (newArr) => {\n    let dataArr1 = newArr.map((item) => {\n      if (item.toString(16).length < 2) {\n        return \"0\" + item.toString(16);\n      } else {\n        return item.toString(16);\n      }\n    });\n    //除了255,其他都是温度计的数据\n    let {\n      setMellaConnectStatusFun,\n      setMellaMeasureValueFun,\n      setMellaPredictValueFun,\n      setMellaMeasurePartFun,\n      mellaMeasurePart,\n      mellaConnectStatus,\n      setBiggieBodyFatFun,\n      setBiggieBodyWeightFun,\n      setBiggieConnectStatusFun,\n      setBiggieUnitFun,\n      setBiggieSameWeightCountFun,\n    } = this.props;\n    let {\n      biggieConnectStatus,\n      biggieBodyFat,\n      biggieBodyWeight,\n      biggieUnit,\n      biggieSameWeightCount,\n    } = this.props.hardwareReduce;\n\n    const instruction = [\n      209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 194, 7, 99, 255, 182,\n    ];\n\n    if (newArr[2] !== 7 && newArr[2] !== 255 && newArr[2] !== 182) {\n      initTime = new Date();\n      num07 = 0;\n      if (mellaConnectStatus === \"disconnected\") {\n        this._connect_to_mella();\n      }\n    } else {\n      num07++;\n    }\n\n    const commandArr = {\n      209: () => {\n        //腋温\n        //第一次测量去获取探头ID\n        if (firstEar) {\n          firstEar = false;\n          console.log(\"去获取探头id\");\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        let temp1 = parseFloat(`${dataArr1[3]}.${dataArr1[4]}`);\n        let temp0 = parseFloat(`${dataArr1[5]}.${dataArr1[6]}`);\n        let Temp = temp0;\n        if (\n          Temp === 24.7 ||\n          Temp === 0 ||\n          Temp === null ||\n          Temp === undefined\n        ) {\n          return;\n        }\n\n        let dataS = {\n          sample: clinicalIndex++,\n          data0: temp0,\n          data1: temp1,\n        };\n        clinicalYuce.push(dataS);\n        if (clinicalYuce.length >= 30) {\n          setMellaPredictValueFun(clinicalYuce);\n        }\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n\n        if (mellaMeasurePart !== \"腋温\" || mellaMeasurePart !== \"肛温\") {\n          setMellaMeasurePartFun(\"腋温\");\n        }\n        this.props.setMellaMeasureNumFun(this.props.mellaMeasureNum + 1);\n      },\n      208: () => {\n        //耳温\n\n        if (firstEar) {\n          firstEar = false;\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        //现在探头0可能不存在，所以把探头0改为探头1\n        let temp0 = parseFloat(`${dataArr1[7]}.${dataArr1[8]}`);\n        let Temp = temp0;\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n\n        if (mellaMeasurePart !== \"耳温\") {\n          setMellaMeasurePartFun(\"耳温\");\n        }\n      },\n      193: () => {\n        //指令结束\\自动结束后\\温度计收到预测数据后温度计返回值,结束后可能还会粘一组测量中的数据\n        //为了清除黏贴的数据，使用定时器\n        this.time193 && clearTimeout(this.time193);\n        this.time193 = setTimeout(() => {\n          if (new Date() - time194 < 1000) {\n            this.time193 && clearTimeout(this.time193);\n            return;\n          }\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaMeasureValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            console.log('要去写了', units, temp);\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          this.time193 && clearTimeout(this.time193);\n        }, 500);\n      },\n      194: () => {\n        //硬件收到机器学习结果并停止测量，\n        this.time193 && clearTimeout(this.time193);\n        time194 = new Date()\n        console.log(\"---机器学习\", newArr);\n        if (mellaConnectStatus !== \"complete\") {\n          setMellaConnectStatusFun(\"complete\");\n        }\n        const timer = setTimeout(() => {\n          setMellaMeasureValueFun(this.props.mellaPredictReturnValue);\n\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaPredictReturnValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          clearTimeout(timer);\n        }, 80);\n        clinicalYuce = [];\n        clinicalIndex = 0;\n      },\n      192: () => {\n        //温度计收到40开始数据后返回的指令\n        switch (newArr[3]) {\n          case 90:\n            console.log(\"有探头，开始测量的返回指令·\");\n            break;\n          case 11:\n            console.log(\"没有探头，开始测量的返回值\");\n            break;\n        }\n      },\n      129: () => {\n        //返回硬件版本号\n        console.log(`返回的版本号为${newArr[3]}`);\n      },\n      135: () => {\n        //硬件的一些基本信息\n        /**\n         * ______________新版、旧版没法控制温度计__________________\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\n         * newArr[7] 无操作关机时间\n         * newArr[8] 背光时间\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\n         * newArr[10] 测量单位    01代表℃，00代表℉\n         */\n\n        let hardSet = electronStore.get(\n          `${storage.userId}-hardwareConfiguration`\n        );\n        if (!hardSet) {\n          hardSet = {\n            isHua: true,\n            is15: true,\n            self_tarting: false, //自启动\n            isBacklight: true,\n            isBeep: true,\n            backlightTimer: { length: 140, number: \"45\" },\n            autoOff: { length: 0, number: \"30\" },\n          };\n        }\n\n        let beep = hardSet.isBeep ? \"11\" : \"00\";\n        let unit = hardSet.isHua ? \"00\" : \"01\";\n\n        if (\n          dataArr1[7] === hardSet.autoOff.number &&\n          dataArr1[8] === hardSet.backlightTimer.number &&\n          dataArr1[9] === beep &&\n          dataArr1[10] === unit\n        ) {\n        } else {\n          console.log(\"不相同，去发送命令\");\n          let setArr = [\n            \"03\",\n            \"ed\",\n            \"07\",\n            \"dd\",\n            hardSet.autoOff.number,\n            hardSet.isBacklight ? hardSet.backlightTimer.number : \"00\",\n            hardSet.isBeep ? \"11\" : \"00\",\n            hardSet.isHua ? \"00\" : \"01\",\n          ];\n          ipcRenderer.send(\"usbdata\", { command: \"21\", arr: setArr });\n        }\n      },\n      238: () => {\n        //探头松动\n        console.log(\"探头松动\");\n        message.error(\n          \"The probe is loose, please re-install and measure again\",\n          5\n        );\n      },\n\n      98: () => {\n        //蓝牙连接断开\n        console.log(\n          \"断开连接---断开连接---断开连接---断开连接---断开连接---断开连接\"\n        );\n        firstEar = true;\n        // console.log(new Date() - is97Time);\n        if (new Date() - is97Time < 1300) {\n          return;\n        }\n        this._disconnect_to_mella();\n      },\n      97: () => {\n        //蓝牙连接\n        console.log(\n          \"连接成功---连接成功---连接成功---连接成功---连接成功---连接成功\"\n        );\n        this.getIdTimer && clearTimeout(this.getIdTimer);\n        this.getIdTimer = setTimeout(() => {\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n          this.getIdTimer && clearTimeout(this.getIdTimer);\n        }, 50);\n\n\n        is97Time = new Date();\n        this._connect_to_mella();\n      },\n      177: () => {\n        //探头id\n        let dataArr1 = newArr.map((item) => {\n          if (item.toString(16).length < 2) {\n            return \"0\" + item.toString(16);\n          } else {\n            return item.toString(16);\n          }\n        });\n\n        let id = \"\";\n        for (let i = 3; i < dataArr1.length - 2; i++) {\n          id += dataArr1[i];\n        }\n        // console.log(id, dataArr1[7]);\n        setMellaDeviceIdFun(id);\n        // this.setState({\n        //   probeID: id,\n        //   petVitalTypeId: dataArr1[7]\n        // })\n        if (dataArr1[7] === \"01\") {\n          if (mellaMeasurePart !== \"腋温\") {\n            setMellaMeasurePartFun(\"腋温\");\n          }\n        } else if (dataArr1[7] === \"02\") {\n          if (mellaMeasurePart !== \"肛温\") {\n            setMellaMeasurePartFun(\"肛温\");\n          }\n        } else if (dataArr1[7] === \"03\") {\n          if (mellaMeasurePart !== \"耳温\") {\n            setMellaMeasurePartFun(\"耳温\");\n          }\n        }\n      },\n      7: () => {\n        //发什么收什么，需要去重新插拔底座\n        console.log(\"重新插拔底座\");\n        if (num07 === 3 && this.state.err07Visible === false) {\n          this.setState({\n            err07Visible: true,\n          });\n        }\n      },\n      255: () => {\n        let length = newArr.length;\n        let frameLength = newArr[1]; //帧长\n        let itemLength = newArr[3] + 1; //数据位的长度   13\n        let dataIndex = 0;\n        let bluName = \"\";\n        let bluData = [];\n\n        while (itemLength < length && itemLength + 3 <= frameLength) {\n          let itemData = [];\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5]);\n          }\n          // console.log('--剪切的数据---', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              let str = \"\";\n              for (let i = 0; i < itemData.length; i++) {\n                let item = parseInt(itemData[i], 16);\n                str += String.fromCharCode(item);\n              }\n              bluName = str;\n              // console.log('--蓝牙名称:', bluName);\n\n              break;\n\n            case 255:\n              bluData = itemData;\n              break;\n            case 7:\n              console.log(\"---UUID\");\n              break;\n            case 239:\n              // console.log('---mac地址');\n              break;\n\n            case 3:\n              // console.log('----尺子的,不知道什么用');\n              break;\n\n            default:\n              console.log(\"直接跳出循环\");\n              return;\n          }\n          dataIndex = itemLength;\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\n        }\n        // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n        let { setReceiveBroadcastHardwareInfoFun, hardwareReduce } = this.props;\n\n        let { receiveBroadcastHardwareInfo } = hardwareReduce;\n\n        if (bluName.indexOf(\"C19\") !== -1 && bluData.length > 10) {\n          let json = {\n            deviceType: \"biggie\",\n            macId: \"00:00:00:00:00:00\",\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          let weight = `0x${bluData[10]}${bluData[11]}`;\n          let impedance = `0x${bluData[12]}${bluData[13]}`;\n          let sendWeight = null;\n          //C19发送的体重值单位只是KG\n          try {\n            weight = parseInt(weight) / 100;\n            if (impedance) {\n              impedance = parseInt(impedance);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n          if (weight === biggieBodyWeight) {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          } else {\n            setBiggieSameWeightCountFun(0);\n            setBiggieBodyWeightFun(weight);\n          }\n          if (impedance) {\n            setBiggieBodyFatFun(impedance);\n          }\n          if (biggieConnectStatus !== \"isMeasuring\") {\n            setBiggieConnectStatusFun(\"isMeasuring\");\n          }\n          if (biggieUnit !== \"kg\") {\n            setBiggieUnitFun(\"kg\");\n          }\n        } else if (bluName.indexOf(\"Mella Measure\") !== -1) {\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          // console.log('结束循环蓝牙名称', bluData)\n          let confirmBtn = bluData[8]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[11], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[9];\n          let num2 = bluData[10];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n        } else if (bluName.indexOf(\"Biggie\") !== -1 && bluData.length > 13) {\n          // console.log(\"biggie\", bluData);\n          if (bluData[0] !== \"aa\") {\n            return;\n          }\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n\n          let newArr = bluData;\n\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n\n          let json = {\n            deviceType: \"biggie\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n          //定义体重的控制字符\n          let weightControl = newArr[8];\n          //定义体重的值\n          let weight = `${getVal(newArr[9].toString(16))}${getVal(\n            newArr[10].toString(16)\n          )}`;\n          weight = parseInt(weight, 16);\n          //定义体脂值\n          let impedance = `${getVal(newArr[12].toString(16))}${getVal(\n            newArr[13].toString(16)\n          )}`;\n          impedance = parseInt(impedance, 16);\n          let arr11 = getVal(newArr[11].toString(16));\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n\n          let weightUnits = arr11[1] === \"1\" ? \"lb\" : \"kg\";\n          let biggieStatus = \"isMeasuring\";\n          switch (weightControl) {\n            case 1:\n              biggieStatus = \"connected\";\n              break;\n            case 2:\n              biggieStatus = \"isMeasuring\";\n              break;\n            case 3:\n              biggieStatus = \"complete\";\n              break;\n            default:\n              break;\n          }\n          if (biggieStatus !== biggieConnectStatus) {\n            setBiggieConnectStatusFun(biggieStatus);\n          }\n          if (weightUnits !== biggieUnit) {\n            setBiggieUnitFun(weightUnits);\n          }\n          if (weight !== biggieBodyWeight) {\n            setBiggieBodyWeightFun(weight);\n            setBiggieSameWeightCountFun(0);\n          } else {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          }\n          if (impedance !== biggieBodyFat) {\n            setBiggieBodyFatFun(impedance);\n          }\n        } else if (bluName.indexOf(\"MaeBowl\") !== -1 && bluData.length > 10) {\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          //定义硬件版本号\n          let hardwareVersion = bluData[7] + bluData[8];\n          //定义软件版本号\n          let softwareVersion = bluData[9];\n          //定义wifi标志位\n          let wifiFlag = bluData[10];\n          //定义控制字\n          let control = bluData[11];\n          //定义重量\n          let weight = `${getVal(bluData[12].toString(16))}${getVal(\n            bluData[13].toString(16)\n          )}`\n          weight = parseInt(weight, 16);\n          let arr11 = bluData[14]\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n          let weightUnits = null\n          switch (arr11[1]) {\n            case '0':\n              weightUnits = 'kg'\n\n              break;\n            case '1':\n              weightUnits = 'lb'\n\n              break;\n            case '2':\n              weightUnits = 'g'\n\n              break;\n            case '3':\n              weightUnits = 'ml'\n\n              break;\n            case '4':\n              weightUnits = 'oz'\n\n              break;\n\n            default:\n              break;\n          }\n          console.log({\n            // mac,\n            // hardwareVersion,\n            // softwareVersion,\n            wifiFlag,\n            control,\n            weight,\n            weightUnits,\n          });\n\n\n        } else if (bluName.indexOf(\"Tabby\") !== -1 && bluData.length > 10) {\n          // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          let confirmBtn = bluData[10]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[13], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[11];\n          let num2 = bluData[12];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n\n\n\n\n        }\n      },\n      182: () => {\n        console.log(\"打开了底座通信\");\n      },\n    };\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]];\n    } else {\n      return () => {\n        console.log(\"没有控制命令\", commandArr);\n      };\n    }\n  };\n\n  testCheck = (arr) => {\n    if (arr.length < 7) {\n      return false;\n    }\n    let i = 7;\n    let checkFloag = arr[i];\n\n    for (i = 8; i < arr.length - 2; i++) {\n      checkFloag = checkFloag ^ arr[i];\n    }\n    return checkFloag;\n  };\n  getMac = (arr) => {\n    // console.log(arr);\n    let str = arr[1].toString(16);\n    if (str.length === 1) {\n      str = \"0\" + str;\n    }\n    for (let i = 2; i < 7; i++) {\n      let item = arr[i].toString(16);\n      if (item.length === 1) {\n        item = \"0\" + item;\n      }\n      str += `:${item}`;\n      // }\n    }\n\n    return str;\n  };\n\n  //监听屏幕窗口改变\n  resize = () => {\n    let { offsetWidth, offsetHeight } = this.mainbody;\n    // console.log('resize', this.mainbody, { offsetWidth, offsetHeight });\n    if (offsetHeight !== this.state.bodyHeight) {\n      this.setState({\n        bodyHeight: offsetHeight - px(50),\n      });\n    }\n  };\n  //获取设备类型(渲染左侧硬件种类侧边栏)\n  getDevicesType = () => {\n    // let devicesTypeList = [\n    //   {\n    //     type: 'mellaPro',\n    //     devices: [\n    //       {\n    //         name: 'mellaPro',\n    //         mac: '',\n    //         deviceType: 'mellaPro',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'biggie',\n    //     devices: [\n    //       {\n    //         name: 'biggie',\n    //         mac: '',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       },\n    //       {\n    //         name: 'biggie002',\n    //         mac: '1253',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'otterEQ',\n    //     devices: [\n    //       {\n    //         name: 'otterEQ',\n    //         mac: '',\n    //         deviceType: 'otterEQ',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n\n    //   {\n    //     type: 'rfid',\n    //     devices: [\n    //       {\n    //         name: 'rfid',\n    //         mac: '',\n    //         deviceType: 'rfid',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'tape',\n    //     devices: [\n    //       {\n    //         name: 'tape',\n    //         mac: '',\n    //         deviceType: 'tape',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'maeBowl',\n    //     devices: [\n    //       {\n    //         name: 'maeBowl',\n    //         mac: '',\n    //         deviceType: 'maeBowl',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   }\n    // ]\n\n    let devicesTypeList =\n      electronStore.get(\n        `${storage.lastOrganization}-${storage.userId}-devicesTypeList`\n      ) || [];\n    // console.log(\"获取的设22222备列表\", devicesTypeList);\n    if (devicesTypeList.length === 0) {\n      devicesTypeList.push({\n        type: \"mellaPro\",\n        devices: [\n          {\n            name: \"mellaPro\",\n            mac: \"\",\n            deviceType: \"mellaPro\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"biggie\",\n        devices: [\n          {\n            name: \"biggie\",\n            mac: \"\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n          {\n            name: \"biggie002\",\n            mac: \"1253\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"tape\",\n        devices: [\n          {\n            name: \"tape\",\n            mac: \"45264\",\n            deviceType: \"tape\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"otterEQ\",\n        devices: [\n          {\n            name: \"otterEQ\",\n            mac: \"375082\",\n            deviceType: \"otterEQ\",\n            examRoom: \"\",\n          },\n        ],\n      });\n    }\n\n    let hardList = [].concat(devicesTypeList);\n    this.props.setHardwareList(hardList);\n    let showHardWareTypeList = [].concat(devicesTypeList);\n    showHardWareTypeList.push({\n      type: \"add\",\n      devices: [],\n    });\n\n    this.setState({\n      devicesTypeList,\n      showHardWareTypeList,\n    });\n  };\n  body = () => {\n    let { selectHardwareType } = this.props;\n\n    let { bodyHeight, clickMenuIndex } = this.state;\n    let measurePage = null;\n    switch (clickMenuIndex) {\n      case \"1\":\n        if (electronStore.get(`${storage.userId}-isClical`)) {\n          return (\n            <>\n              <HardAndPetsUI bodyHeight={bodyHeight} />\n              <ClininalStudy bodyHeight={bodyHeight} />\n            </>\n          );\n        } else {\n          switch (selectHardwareType) {\n            case \"mellaPro\":\n              measurePage = <TemperaturePage bodyHeight={bodyHeight} />;\n\n              break;\n            case \"biggie\":\n              measurePage = <BiggiePage bodyHeight={bodyHeight} />;\n              break;\n\n            case \"tape\":\n              measurePage = <ScanPage bodyHeight={bodyHeight} />;\n              break;\n            case \"otterEQ\":\n              measurePage = <OtterEQPage bodyHeight={bodyHeight} />;\n              break;\n\n            default:\n              break;\n          }\n          if (selectHardwareType === \"add\") {\n            return <AddDevice bodyHeight={bodyHeight} />;\n          } else {\n            return (\n              <>\n                <HardAndPetsUI bodyHeight={bodyHeight} />\n                {measurePage}\n              </>\n            );\n          }\n        }\n      case \"2\":\n        return <AllPets bodyHeight={bodyHeight} />;\n      case \"CombineScales\":\n        return <CombineScales bodyHeight={bodyHeight} />;\n      case \"AddDevice\":\n        return <AddDevice bodyHeight={bodyHeight} />;\n      case \"3\":\n        return <ScheduledPetPage bodyHeight={bodyHeight} />;\n\n      case \"AddScheduledPet\":\n        return <AddScheduledPet bodyHeight={bodyHeight} />;\n      case \"6\":\n        return (\n          <>\n            <HardAndPetsUI bodyHeight={bodyHeight} />\n            <ClininalStudy bodyHeight={bodyHeight} />\n          </>\n        );\n\n      case \"4\":\n        return (\n          <MyAccount bodyHeight={bodyHeight} />\n        );\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    let { bodyHeight } = this.state;\n\n    return (\n      <div\n        className=\"flex\"\n        id=\"mainbody\"\n        ref={(val) => (this.mainbody = val)}\n        onClick={() => {\n          if (this.props.selectHardwareModalShowFun) {\n            this.props.selectHardwareModalShowFun(false);\n          }\n        }}\n      >\n        <Heard />\n        <div className=\"mainbody-body\">\n          <HardWareTypeUI\n            bodyHeight={bodyHeight}\n            devicesTypeList={this.state.showHardWareTypeList}\n          />\n          {this.body()}\n        </div>\n        <Modal\n          visible={this.state.err07Visible}\n          // visible={true}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          width={330}\n          closable={false}\n          footer={[]}\n          destroyOnClose={true}\n          wrapClassName=\"vetPrifileModal\"\n        >\n          <div id=\"vetPrifileModal\">\n            <div className=\"title\">prompt</div>\n\n            <div className=\"text\">Please re-plug the base device</div>\n\n            <div\n              className=\"btn\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginBottom: \"5px\",\n              }}\n            >\n              <button\n                onClick={() => {\n                  this.setState({\n                    err07Visible: false,\n                  });\n                  num07 = 0;\n                }}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\n    mellaMeasurePart: state.hardwareReduce.mellaMeasurePart,\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    hardwareReduce: state.hardwareReduce,\n    hardwareList: state.hardwareReduce.hardwareList,\n    hardwareInfo: state.hardwareReduce.selectHardwareInfo,\n    menuNum: state.userReduce.menuNum,\n    mellaPredictReturnValue: state.hardwareReduce.mellaPredictReturnValue,\n    test: state.userReduce.test\n  }),\n  {\n    setHardwareList,\n    selectHardwareModalShowFun,\n    setIsHaveUsbDeviceFun,\n\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n    setMellaDeviceIdFun,\n    setBiggieConnectStatusFun,\n    setBiggieBodyFatFun,\n    setBiggieBodyWeightFun,\n    setBiggieUnitFun,\n    setBiggieSameWeightCountFun,\n    setRulerConnectStatusFun,\n    setRulerMeasureValueFun,\n    setRulerUnitFun,\n    setRulerConfirmCountFun,\n    setReceiveBroadcastHardwareInfoFun,\n    setMellaMeasureNumFun,\n  }\n)(App);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/AddDevice.jsx",["494","495"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/resetPassword/index.jsx",[],["496","497"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/config/config.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/user.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/pet.js",[],["498","499"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/api.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scheduledPetsPage/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/home/index.jsx",["500"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/user.js",["501","502"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/admin_VetProfile/index.jsx",["503","504","505","506","507","508","509","510"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/components/Biggie.jsx",["511","512","513","514"],"import React, { } from 'react'\nimport PropTypes from 'prop-types';\nimport { px, mTop } from '../../../utils/px'\nimport cir from '../../../assets/images/cir.png'\nimport xia from '../../../assets/img/xia.png'\nimport './biggie.less'\n/**\n *\n * @param {string} weight   体重值\n * @param {string} bodyFat   体脂\n * @param {string} score   健康指数\n * @param {string} impedance   阻抗值\n * @param {boolean} issave   按钮文本，为true展示save，为false展示send to pms\n * @param {function} onPress   点击按钮调用的函数\n * @returns\n */\nconst Biggie = ({ weight, bodyFat, score, impedance, issave, onPress, discardOnPress, isIbs, isHaveSaveBtn = true }) => {\n  let lTColor = bodyFat !== null && bodyFat >= 0 ? '#87C563' : '#D8D9D9'\n  let rTColor = score !== null && score >= 0 ? '#87C563' : '#D8D9D9'\n  let lTtext = bodyFat !== null && bodyFat >= 0 ? `${bodyFat}%` : `Not Available`\n  let lTtextSize = bodyFat !== null && bodyFat >= 0 ? px(16) : px(15)\n  let rTtext = score !== null && score >= 0 ? `${score}` : `Not\\nAvailable`\n  let rTtextSize = score !== null && score >= 0 ? px(16) : px(15)\n\n  return (\n    <div className=\"biggie\" >\n      <div className=\"top\">\n\n        <div style={{ borderRadius: px(150) }} className='biggiel'>\n          <div style={{ backgroundColor: lTColor, borderRadius: px(75), }} className='lT'>\n            <div className='lTText' style={{ fontSize: lTtextSize }}>{lTtext}</div>\n          </div>\n          <div style={{ fontSize: px(14) }}>{`Body Fat\\nPercent`}</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(5) }}\n          />\n        </div>\n\n\n        <div style={{  borderRadius: px(150) }} className='cen'>\n          <div style={{ borderRadius: px(75) }} className='lT'>\n            <img\n              src={cir}\n              width={'100%'}\n            />\n          </div>\n          <div className='cTText' style={{ fontWeight: '800' }}>{weight}</div>\n          <div className='cTTextUnit'>{`${isIbs ? 'lbs' : 'kgs'}`}</div>\n          <div className='cenCText'>Weight</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(6) }}\n          />\n        </div>\n\n\n\n        <div style={{ borderRadius: px(150) }} className='biggiel'>\n          <div style={{ backgroundColor: rTColor, borderRadius: px(75) }} className='lT'>\n            <div className='lTText' style={{ fontSize: rTtextSize }}>{rTtext}</div>\n          </div>\n          <div style={{ fontSize: px(14) }}>{`Body\\nCondition\\nScore`}</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(5) }}\n          />\n        </div>\n      </div>\n\n\n\n\n      <div className='biggiefoot'>\n        {isHaveSaveBtn &&\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', width: '100%' }}>\n            <div\n              className='biggiefootbtn'\n              // style={{ height: px(36), }}\n              onClick={() => {\n                discardOnPress()\n              }}\n            >\n              <div style={{ color: '#fff', fontSize: px(16) }}>{`Discard`}</div>\n            </div>\n\n\n            <div\n              className='biggiefootbtn'\n              // style={{ height: px(36), }}\n              onClick={() => {\n                onPress()\n              }}\n            >\n              <div style={{ color: '#fff', fontSize: px(16) }}>{issave ? `Save` : `Send to PMS`}</div>\n            </div>\n\n\n          </div>\n        }\n\n\n        {(impedance && impedance > 0) ? <div style={{ color: '#000', fontSize: px(18), marginTop: mTop(10) }}>{`Impedance ${impedance} Ohms`}</div> : null}\n      </div>\n    </div>\n  )\n\n}\n\nBiggie.propTypes = {\n  weight: PropTypes.string || PropTypes.number,\n  bodyFat: PropTypes.number || PropTypes.string,\n  score: PropTypes.number || PropTypes.string,\n  impedance: PropTypes.number || PropTypes.string,\n  issave: PropTypes.bool,\n  onPress: PropTypes.func,\n  isIbs: PropTypes.bool\n}\nexport default Biggie\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/user.js",["515","516","517"],"/**\n * @file user.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/user 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del, patch } from '../ezyvetApi'\nimport { biggieBaseUrl } from '../../config/config'\nconst baseURL = `${biggieBaseUrl}/user`\n\n\nexport const changeLatestWorkplace = (userId, workplaceId, roleId = 2) => {\n    return get(`${baseURL}/changeLatestWorkplace/${userId}/${roleId}/${workplaceId}`,\n        '')\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addDevice/index.jsx",["518","519"],"import React, { Component } from 'react'\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport MinClose from '../../utils/minClose/MinClose'\nimport MouseDiv from '../../utils/mouseDiv/MouseDiv'\nimport { mTop, px, MTop, } from '../../utils/px';\nimport electronStore from '../../utils/electronStore';\n\nimport back_white from '../../assets/img/back-white.png';\nimport back_hui from '../../assets/img/back-hui.png';\nimport redclose from '../../assets/img/redclose.png';\n\nimport './index.less';\n\nlet storage = window.localStorage;\nlet ipcRenderer = window.electron.ipcRenderer\n\nlet num07 = 0       //接收到07命令行的次数\n\n\nexport default class AddDevice extends Component {\n\n  state = {\n    noUSB: false,\n    devicesList: [],\n    selectDevice: null,\n    // selectDevice: true,\n    reName: '',\n    saveDeviceMac: []  //这是已经保存过的设备的macid\n\n  }\n\n  componentDidMount() {\n    message.destroy()\n\n    ipcRenderer.send('small')\n    // 监听分辨率是否改变\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n    //这里做了个监听，当有数据发过来的时候直接在这里接收\n    ipcRenderer.on('sned', this._send)\n    ipcRenderer.on('noUSB', this._noUSB)\n    let devicesList = electronStore.get(`${storage.userId}-deviceList`)\n    if (devicesList) {\n      let saveDeviceMac = []\n      for (let i = 0; i < devicesList.length; i++) {\n        const element = devicesList[i];\n        saveDeviceMac.push(element.macId)\n      }\n      this.setState({\n        saveDeviceMac\n      })\n    }\n\n\n\n    // const timer = setTimeout(() => {\n    //   let deviceList = [\n    //     // { name: 'Add Device', deviceType: 'add', macId: '0' },\n    //     { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\n    //     { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:55:66' },\n    //     { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\n    //     { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\n    //     { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\n    //     { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:55:66' },\n    //   ]\n    //   this.setState({\n    //     devicesList: deviceList\n    //   })\n    //   clearTimeout(timer)\n    // }, 500);\n\n  }\n  componentWillUnmount() {\n    ipcRenderer.removeListener('sned', this._send)\n    ipcRenderer.removeListener('noUSB', this._noUSB)\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  _noUSB = (e, data) => {\n    console.log('没有USB设备：', data);\n    if (data === false) {\n      message.destroy()\n      this.setState({\n        noUSB: false\n      })\n    } else {\n      if (!this.state.noUSB) {\n        // message.error('The base is not detected. Please insert the base', 0)\n        this.setState({\n          noUSB: true\n        })\n      }\n    }\n  }\n\n  _send = (event, data) => {\n    //data就是测量的数据，是十进制的数字\n    // console.log(data);\n    this.command(data)()\n  }\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  command = (newArr) => {\n    const instruction = [255]\n    let dataArr1 = newArr.map(item => {\n      if (item.toString(16).length < 2) {\n        return '0' + item.toString(16)\n      } else {\n        return item.toString(16)\n      }\n    })\n    // console.log(dataArr1);\n    const commandArr = {\n      255: () => {//蓝牙软尺广播的数据\n        let length = newArr.length\n        let frameLength = newArr[1]   //帧长\n        let itemLength = newArr[3] + 1  //数据位的长度   13\n        let dataIndex = 0\n\n        let bluName = ''\n        let bluData = []\n        //[\"aa\", \"25\", \"ff\", |\"03\", \"03\", \"b0\", \"ff\",| \"0f\", \"ff\", \"ac\", \"d2\", \"0b\", \"72\", \"c1\", \"7d\", \"3e\", \"d0\", \"a0\", \"00\", \"05\", \"09\", \"00\", \"2e\",| \"05\", \"09\", \"54\", \"61\", \"70\", \"65\", |\"06\", \"ef\", \"d0\", \"3e\", \"7d\", \"c1\", \"72\", |\"0b\", \"5c\", \"55\"]\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\n          let itemData = []\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5])\n          }\n          // console.log('--剪切的数据---', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              let str = ''\n              for (let i = 0; i < itemData.length; i++) {\n                let item = parseInt(itemData[i], 16)\n                str += String.fromCharCode(item)\n              }\n              bluName = str\n              break;\n            case 255:\n              bluData = itemData\n              break;\n            case 7: console.log('---UUID'); break;\n            case 239:\n              // console.log('---mac地址');\n              break;\n            case 3: console.log('----尺子的,不知道什么用'); break;\n            default: console.log('直接跳出循环'); return;\n          }\n          dataIndex = itemLength\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\n        }\n        console.log('硬件名称', bluName, '-----硬件数据', bluData);\n        let macId = ''\n        if (bluData.length > 7) {\n          macId = this.getMac(bluName, bluData)\n        }\n\n\n        let sameFlog = this.state.devicesList.some((device, index) => {\n          return device.macId === macId\n        })\n        if (sameFlog || !macId) {   //重复直接退出\n          return\n        }\n        let deviceType = ''\n        switch (bluName) {\n          case 'Biggie':        //这是体脂称\n            deviceType = 'biggie'\n\n            break;\n          case 'C19':        //这是体脂称\n            deviceType = 'biggie'\n\n            break;\n\n          case 'MaeBowl':   //这是称量碗\n            deviceType = 'maeBowl'\n            break;\n\n          case 'Mella Measure': //这是蓝牙尺\n            deviceType = 'tape'\n            break;\n\n        }\n        if (macId && deviceType && bluName) {\n          let json = {\n            name: bluName,\n            deviceType,\n            macId\n          }\n          let deviceArr = [].concat(this.state.devicesList)\n          deviceArr.push(json)\n          this.setState({\n            devicesList: deviceArr\n          })\n        }\n\n\n      }\n\n\n\n\n    }\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]]\n    } else {\n      return () => {\n        console.log('没有控制命令', commandArr);\n      }\n    }\n  }\n  getMac = (bluName, bluData) => {\n    switch (bluName) {\n      case 'Biggie':\n      case 'MaeBowl':\n      case 'Mella Measure':\n      case 'C19':\n        let str = bluData[1]\n        for (let i = 2; i < 7; i++) {\n          str += `:${bluData[i]}`\n        }\n        return str\n\n\n      default:\n        break;\n    }\n\n  }\n\n\n\n  changeFenBianLv = (e) => {\n    ipcRenderer.send('small')\n    this.setState({\n    })\n  }\n  beforeDiv = () => {\n    return (\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\n    )\n  }\n  afterDiv = () => {\n    return (\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\n    )\n\n  }\n\n  body = () => {\n    let { noUSB, devicesList, selectDevice, reName } = this.state\n    if (selectDevice) {\n      return <div className=\"addDevice flex\">\n        <div className=\"addDeviceTop flex\">\n          <div className=\"title\" style={{ fontSize: px(30), marginBottom: px(40) }}>Would you like to name<br />\n            this Mella device?</div>\n\n          <div className=\"input flex\" style={{ marginBottom: px(60) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={reName}\n              onChange={(value) => {\n                this.setState({\n                  reName: value.target.value\n                })\n              }}\n            />\n          </div>\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\n            on the Exam Room. Write the name\n            on the sticker provided so it is easy\n            to select your device in the future.</div>\n        </div>\n        <div className=\"addDeviceFoot flex\">\n          <div className=\"btn\"\n            onClick={() => {\n              let { reName, selectDevice } = this.state\n              console.log(reName, selectDevice);\n              if (reName) {\n                selectDevice.name = reName\n              }\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\n              console.log('---', deviceList);\n              deviceList.push(selectDevice)\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\n              let { saveDeviceMac } = this.state\n              saveDeviceMac.push(selectDevice.macId)\n              this.setState({\n                saveDeviceMac,\n                selectDevice: null,\n                reName: ''\n              })\n\n            }}\n          >\n            <p className='btnText'>Add Another</p>\n          </div>\n          <div className=\"btn\"\n            onClick={() => {\n              let { reName, selectDevice } = this.state\n              console.log(reName, selectDevice);\n              if (reName) {\n                selectDevice.name = reName\n              }\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\n              deviceList.push(selectDevice)\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\n              this.props.history.goBack()\n\n            }}\n          >\n            <p className='btnText'>Finish</p>\n          </div>\n        </div>\n\n\n      </div>\n    } else {\n      if (noUSB) {\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\n\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\n        </div>\n      } else {\n        if (devicesList.length === 0) {\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n            {/* < MyModal\n              visible={true}\n              element={\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n                  <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\n                  </div>\n                  <p>\n                    {'searching...'}\n                  </p>\n                </div>\n              }\n            /> */}\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\n              <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\n              </div>\n              <p>\n                {'searching...'}\n              </p>\n            </div>\n          </div>\n        } else {\n          let options = devicesList.map((item, index) => {\n            let { saveDeviceMac } = this.state\n            let flog = saveDeviceMac.some((device, index) => {\n              return device === item.macId\n            })\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\n            return <li\n              className='flex'\n              style={{ marginBottom: px(20) }}\n              key={`${index}`}\n              onClick={() => {\n                if (!flog) {\n                  this.setState({\n                    selectDevice: item\n                  })\n                } else {\n                  message.destroy();\n                  message.error('This device has already been added')\n                }\n\n              }}\n            >\n\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\n\n            </li>\n          })\n          return <div className='deviceList'>\n            <ul>\n              {options}\n            </ul>\n          </div>\n        }\n      }\n    }\n\n  }\n\n\n\n\n\n  render() {\n    return (\n      <div id=\"addDevice\">\n        <div className=\"heaed\">\n          <div className=\"l\"\n          >\n            <MouseDiv\n              className='mouseDiv'\n              beforeDiv={this.beforeDiv}\n              afterDiv={this.afterDiv}\n              divClick={() => {\n                let { selectDevice } = this.state\n                if (selectDevice) {\n                  this.setState({\n                    selectDevice: null\n                  })\n                } else {\n                  this.props.history.goBack()\n                }\n\n              }}\n            />\n          </div>\n          <div className=\"r\">\n\n            < MinClose\n\n            />\n          </div>\n        </div>\n\n        <div className=\"body flex\">\n          {this.body()}\n        </div>\n\n\n\n\n\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/connectWorkplace/index.jsx",["520","521","522","523"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/mainbody/HardAndPetsUI.jsx",["524","525"],"import React, { useState, useEffect } from 'react'\n\nimport xia from './../../assets/img/xia.png'\n\nimport { px } from '../../utils/px'\n\nimport PetsUI from './PetsUI.jsx'\nimport HardListModal from './HardListModal'\n\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport { selectHardwareModalShowFun } from './../../store/actions';\n\nimport './mainbody.less';\n\nlet storage = window.localStorage\nconst HardAndPetsUI = ({ bodyHeight, selectHardwareType, selectHardwareModalShow, hardwareList, selectHardwareModalShowFun,hardwareInfo }) => {\n  //定义选择的硬件详细信息\n  const [selectHardwareDetail, setSelectHardwareDetail] = useState({})\n  useEffect(() => {\n    console.log('初始化硬件和宠物界面', hardwareList);\n    //根据设备类型获取到此类型下的所有硬件,并用来展示\n    for (let i = 0; i < hardwareList.length; i++) {\n      const element = hardwareList[i];\n      if (element.type === selectHardwareType) {\n        let list = element.devices || []\n        //获取被选中的硬件的详细信息\n        let selectHardwareInfo = hardwareInfo || {}\n        console.log('------=========--------', selectHardwareInfo);\n        if (selectHardwareInfo === {}) {\n          let selectHardwareInfo = list[0] || {}\n          setSelectHardwareDetail(selectHardwareInfo)\n        } else {\n          let sameFlag = false\n          for (let i = 0; i < list.length; i++) {\n            const element = list[i];\n            if (element.name === selectHardwareInfo.name && element.mac === selectHardwareInfo.mac) {\n              setSelectHardwareDetail(selectHardwareInfo)\n              sameFlag = true\n              break\n            }\n          }\n          console.log('sameFlag', sameFlag);\n          if (!sameFlag) {\n            console.log('设置了默认值');\n            let selectHardwareInfo = list[0] || {}\n            setSelectHardwareDetail(selectHardwareInfo)\n          }\n        }\n        break\n      }\n    }\n  }, [selectHardwareType, hardwareList,])\n\n\n\n  return (\n    <div className='deviceAndPets' style={{ width: px(200), height: bodyHeight }}>\n      <div className='deviceAndPets-title'\n        onClick={(e) => {\n          //react阻止冒泡\n          e.stopPropagation()\n          selectHardwareModalShowFun(!selectHardwareModalShow)\n        }}\n      >\n        <div className=\"devicesName\" style={{ fontSize: px(26) }}>\n          {selectHardwareDetail.name}\n        </div>\n        <div className=\"imgBox\" style={{ marginLeft: px(7) }}>\n          <img src={xia} alt=\"\" width={px(32)} />\n        </div>\n        {selectHardwareModalShow && <HardListModal setInfo={(item) => {\n          setSelectHardwareDetail(item)\n        }} />}\n      </div>\n      <PetsUI\n        bodyHeight={bodyHeight}\n      />\n    </div >\n  )\n}\n\n\nHardAndPetsUI.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n//默认值\nHardAndPetsUI.defaultProps = {\n  bodyHeight: 0,\n  devicesTypeList: []\n}\nexport default connect(\n  state => ({\n    selectHardwareModalShow: state.hardwareReduce.selectHardwareModalShow,\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    hardwareList: state.hardwareReduce.hardwareList,\n    hardwareInfo: state.hardwareReduce.selectHardwareInfo,\n  }),\n  { selectHardwareModalShowFun }\n)(HardAndPetsUI)\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/userfeedback.js",["526","527"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/EzyVet.js",["528","529"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/clinical.js",["530","531"],"/**\n * @file clinical.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/clinical 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del } from '../api'\nimport { mellaserverBaseUrl } from '../../config/config'\nconst baseURL = `${mellaserverBaseUrl}/clinical`\n\n\n/**\n * @dec 体重保存\n * @param {*} params \n * @returns \n */\nexport const addAllClinical = (params) => {\n    return postJson(`${baseURL}/addAllClinical`, params)\n}\n\n/**\n * @dec 1.2版本的猫预测\n * @param {*} params \n * @returns \n */\nexport const catv12Predict = (params) => {\n    return postJson(`${baseURL}/catv12Predict`, params)\n}","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/pet.js",["532","533","534"],"/**\n * @file pet.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/pet 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del, patch } from '../ezyvetApi'\nimport { biggieBaseUrl } from '../../config/config'\nconst baseURL = `${biggieBaseUrl}/pet`\n\n\n\n\n\nexport const getPetInfoByRFID = (heardSearchText, lastOrganization) => {\n    return get(`${baseURL}/getPetInfoByRFID/${heardSearchText}/${lastOrganization}`, '')\n}\n\n\n\n\n\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectPetBreedModal/index.jsx",["535"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/forgotPassword/index.jsx",["536"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/workplace.js",["537"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/new.js",["538","539"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/melladesk/VetSpire.js",["540","541","542"],"/**\n * @file VetSpire.js\n * @authoe 胡邵杰 \n * @dec https://www.mellaserver.com/api/mellaserver/VetSpire 下的所有接口都在这个<br />\n *      封装,封装函数名称和接口地址保持一致\n * @createDate 20220824\n * \n */\nimport { get, postJson, del, patch } from '../ezyvetApi'\nimport { melladeskBaseUrl } from '../../config/config'\nconst baseURL = `${melladeskBaseUrl}/VetSpire`\n\n\n\nexport const selectExamByPatientId = (parames) => {\n    return postJson(`${baseURL}/selectExamByPatientId`, parames)\n}\n\n\nexport const updateVitalsTemperatureByVitalId = (parames) => {\n    return postJson(`${baseURL}/updateVitalsTemperatureByVitalId`, parames)\n}\n\n\nexport const selectLocations = (parames) => {\n    return postJson(`${baseURL}/selectLocations`, parames)\n}\n\n\nexport const selectProvidersByLocationId = (parames) => {\n    return postJson(`${baseURL}/selectProvidersByLocationId`, parames)\n}\n\n\n\n\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/myModal/MyModal.jsx",["543","544"],"\n/**\n * \n * @param {boolean} visible 控制modal框是否显示\n * @param {element} element 自定义modal框里面的内容，默认是组件是加载中。。。\n * @returns {element} 这是自己写的一个modal框\n */\n\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport './myModal.less'\nimport { px, pX, MTop, mTop } from '../px'\n\nclass MyModal extends Component {\n\n  render () {\n    let { visible, element, text } = this.props\n    // console.log('---上层组件传来的值---', this.props);\n\n    if (visible) {\n      let body = element ? element :\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\n          <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n            <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\n          </div>\n          <p>\n            {text ? text : 'loading...'}\n          </p>\n        </div>\n      return (\n        <div className=\"myModal\">\n          {body}\n        </div>\n      )\n    } else {\n      return (null)\n    }\n\n  }\n}\n\nMyModal.propTypes = {\n  visible: PropTypes.bool,\n  element: PropTypes.element,\n  text: PropTypes.string\n\n}\nMyModal.defaultProps = {\n  visible: false,\n  text: 'loading...'\n}\n\nexport default MyModal","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/petTable/index.jsx",["545","546","547","548","549","550","551","552"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/selectionBox/SelectionBox.jsx",["553"],"\n\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport './selectionBox.less'\nimport { px } from './../px'\nimport { stopBubble } from './../current'\n\nimport blackTriangle from './../../assets/img/blackTriangle.png'\n\n\nconst SelectionBox = ({ listArr, clickItem, clickitemBgc, clickItemColor, initSelectVale }) => {\n    const [selectValue, setSelectValue] = useState('')\n    const [mouseValue, setMouseValue] = useState('')\n    const [showSelect, setShowSelect] = useState(false)\n    // const [bacColor, setBacColor] = useState('#fff')\n    // const [textColor, setTextColor] = useState('#000')\n\n    useEffect(() => {\n        console.log(listArr[0]);\n        setSelectValue(listArr[0].value)\n        setMouseValue(listArr[0].value)\n        if (initSelectVale) {\n            setSelectValue(initSelectVale)\n        }\n    }, [])\n\n    const selection = () => {\n        let option = listArr.map((item, index) => {\n            let bacColor = item.value === selectValue ? clickitemBgc : item.value === mouseValue ? '#e7e7e7' : '#fff'\n            let textColor = item.value === selectValue ? clickItemColor : '#000'\n\n\n            // setBacColor(bacColor1)\n            // setTextColor(textColor1)\n            return <li\n                key={item.key}\n                style={{ paddingTop: px(5), paddingBottom: px(5), backgroundColor: bacColor, color: textColor }}\n                onClick={() => {\n                    setSelectValue(item.value)\n                    setShowSelect(false)\n                    clickItem(item)\n                }}\n                onMouseMove={() => {\n                    console.log();\n                    if (item.value !== selectValue) {\n                        setMouseValue(item.value)\n                    }\n                }}\n                onMouseLeave={() => {\n                    if (item.value !== selectValue) {\n                        // setBacColor('#fff')\n                        setMouseValue('')\n                    }\n                }}\n            >{item.value}</li>\n        })\n        return (\n            <ul>\n                {option}\n            </ul>\n        )\n\n\n    }\n    return (\n        <div className='selectionbox'>\n\n            <div className=\"select flex\" style={{ height: px(26) }}>\n                <div className=\"flex box\" onClick={(e) => {\n                    setShowSelect(true)\n                    stopBubble(e)\n                }}>\n                    <p style={{ fontSize: px(16), }}>{selectValue}</p>\n                    <img src={blackTriangle} alt=\"\" style={{ height: '50%' }} />\n                </div>\n\n                {\n                    showSelect &&\n                    true &&\n                    <div className=\"sortList\" style={{ top: px(26), }}>\n                        {selection()}\n                    </div>\n                }\n\n\n            </div>\n\n        </div>\n    )\n\n}\nSelectionBox.propTypes = {\n    listArr: PropTypes.array.isRequired,\n    clickItem: PropTypes.func,\n    clickitemBgc: PropTypes.string,\n    clickItemColor: PropTypes.string,\n    initSelectVale: PropTypes.string\n\n\n}\nSelectionBox.defaultProps = {\n    clickitemBgc: '#e1206d',\n    clickItemColor: '#fff',\n    initSelectVale: '',\n    clickItem: () => {\n\n    }\n}\nexport default SelectionBox","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/combineScales/index.jsx",["554","555","556","557","558","559"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Layout,\n  Avatar,\n  Button,\n  Card,\n  Space,\n  message,\n  Input,\n  Modal,\n} from \"antd\";\nimport {\n  CheckCircleFilled,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport {\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n} from \"../../store/actions\";\nimport _ from \"lodash\";\nimport { devicesTitleHeight } from \"../../utils/InitDate\";\nimport scaleImage from \"./../../assets/img/scaleImage.png\";\nimport combinedscales from \"./../../assets/img/combinedscales.png\";\nimport { px } from \"../../utils/px\";\nimport \"./index.less\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Meta } = Card;\nconst { confirm } = Modal;\nconst CombineScales = ({\n  petMessage,\n  hardwareMessage,\n  userMessage,\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n}) => {\n  let { hardwareList } = hardwareMessage;\n  const [biggieList, setBiggieList] = useState([]); //体重秤仪器列表\n  const [confirmType, setConfirmType] = useState(false); //确认选择\n  const [checkHardwareList, setcheckHardwareList] = useState([]); //存储用户点击选择的体重秤信息\n  const [saveName, setSaveName] = useState(\"\"); //保存用户的更改的名字\n\n  //点击卡片选择效果\n  const onClick = (index, data) => {\n    console.log(data);\n    let changeClassName = document.getElementById(index).classList;\n    let iconClassName = document.getElementById(`${\"icon\" + index}`);\n    let cardClassNametype = document\n      .getElementById(index)\n      .classList.contains(\"cardBoxClick\");\n    cardClassNametype\n      ? changeClassName.remove(\"cardBoxClick\")\n      : changeClassName.add(\"cardBoxClick\");\n    cardClassNametype\n      ? (iconClassName.style.display = \"none\")\n      : (iconClassName.style.display = \"\");\n    let oldData = checkHardwareList;\n    setcheckHardwareList(_.xorWith([data], oldData, _.isEqual));\n  };\n  //确认选择两个体重秤\n  const onChangeScales = () => {\n    if (_.size(checkHardwareList) > 1) {\n      setConfirmType(true);\n    } else {\n      message.error({\n        content: \"Please choose more than two scales\",\n        style: {\n          marginTop: \"20vh\",\n        },\n      });\n    }\n  };\n  //保存用户更改的名字\n  const saveChangeName = (e) => {\n    setSaveName(e.target.value);\n  };\n\n  //跳转准备测量\n  const startMeasuring = () => {\n    confirm({\n      title: \"Are you sure to incorporate the body fat scale?\",\n      icon: <ExclamationCircleOutlined />,\n      style: {\n        marginTop: \"20vh\",\n      },\n      width: 480,\n      onOk() {\n        let mac = _.join(_.map(checkHardwareList, \"mac\"), \"/\");\n        let newData = {\n          name: _.isEmpty(saveName) ? \"CompositeScale\" : saveName,\n          mac: mac,\n          deviceType: \"biggie\",\n          examRoom: \"\",\n        };\n        let newHardwareList = hardwareList;\n        newHardwareList[1].devices.push({ ...newData });\n        selectHardwareList(newHardwareList);\n        selectHardwareInfoFun(newData);\n        setMenuNum(\"1\");\n      },\n    });\n  };\n\n  useEffect(() => {\n    let newData = [];\n    _.forIn(_.find(hardwareList, [\"type\", \"biggie\"]).devices, (item) => {\n      if (item.mac.indexOf(\"/\") === -1) {\n        newData.push(item);\n      }\n    });\n    setBiggieList(newData);\n    return () => { };\n  }, []);\n\n  return (\n    <>\n      <Layout className=\"mergePage\">\n        <Header className=\"mergeHeaderBox\">\n          <span className=\"headerTitle\">\n            {confirmType ? \"Scales Combined As One\" : \"Combine Scales\"}\n          </span>\n        </Header>\n        <Content className=\"combineContentBox\">\n          <div>\n            <div className=\"tipTitleBox\">\n              {!confirmType ? (\n                <span>\n                  Select the scales you'd\n                  <br />\n                  like to combine\n                </span>\n              ) : (\n                <span>\n                  These two scales are now combined.\n                  <br />\n                  Please give this combination a name\n                </span>\n              )}\n            </div>\n            {confirmType ? (\n              <div className=\"asOneCardBox\">\n                <Space>\n                  {_.map(checkHardwareList, (item, index) => {\n                    return (\n                      <Card className=\"asOneCard\">\n                        <Meta\n                          avatar={<Avatar src={scaleImage} size={53} />}\n                          description={\n                            <div style={{ display: \"grid\" }}>\n                              <span>Device Name:{item.name}</span>\n                              <span>\n                                {item.deviceType === \"biggie\"\n                                  ? \"Biggie Pro Scale\"\n                                  : \"Biggie Home Scale\"}\n                              </span>\n                              <span>SN:{item.mac}</span>\n                            </div>\n                          }\n                        />\n                      </Card>\n                    );\n                  })}\n                </Space>\n                <div className=\"acOneImageBox\">\n                  <img src={combinedscales} />\n                </div>\n              </div>\n            ) : (\n              <div className=\"selectScalesBox\">\n                <div>\n                  {_.map(biggieList, (item, index) => {\n                    return (\n                      <Card\n                        className=\"cardBox\"\n                        hoverable\n                        onClick={() => onClick(`${index}`, item)}\n                        id={`${index}`}\n                        key={index}\n                      >\n                        <div className=\"cardBodyBox\">\n                          <Meta\n                            avatar={<Avatar src={scaleImage} size={53} />}\n                            description={\n                              <div style={{ display: \"grid\" }}>\n                                <span>Device Name:{item.name}</span>\n                                <span>\n                                  {item.deviceType === \"biggie\"\n                                    ? \"Biggie Pro Scale\"\n                                    : \"Biggie Home Scale\"}\n                                </span>\n                                <span>SN:{item.mac}</span>\n                              </div>\n                            }\n                          />\n                          <CheckCircleFilled\n                            id={`${\"icon\" + index}`}\n                            style={{\n                              color: \"#5cbbe0\",\n                              fontSize: \"20px\",\n                              display: \"none\",\n                            }}\n                          />\n                        </div>\n                      </Card>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {confirmType ? (\n              <>\n                <div className=\"inputBox\">\n                  <Input\n                    placeholder=\"Combined Scale Name\"\n                    className=\"inputName\"\n                    maxLength={25}\n                    onChange={saveChangeName}\n                  />\n                </div>\n                <div className=\"scalesBtnBox\">\n                  <Button\n                    type=\"primary\"\n                    className=\"scalesBtn\"\n                    shape=\"round\"\n                    onClick={() => startMeasuring()}\n                  >\n                    Save & Start Measuring\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <Space className=\"scalesBtnBox\">\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => setMenuNum(\"AddDevice\")}\n                >\n                  Add New Scale\n                </Button>\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => onChangeScales()}\n                >\n                  Combine Scales\n                </Button>\n              </Space>\n            )}\n          </div>\n        </Content>\n      </Layout>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n    userMessage: state.userReduce,\n  }),\n  {\n    setMenuNum,\n    selectHardwareInfoFun,\n    selectHardwareList,\n  }\n)(CombineScales);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/swabPetEar/index.jsx",["560","561","562","563","564"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport DogLeftEar from \"../../../../assets/img/DogLeftEar.png\";\nimport DogRightEar from \"../../../../assets/img/DogRightEar.png\";\nimport CatLeftEar from \"../../../../assets/img/CatLeftEar.png\";\nimport CatRightEar from \"../../../../assets/img/CatRightEar.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\n\nconst SwabPetEar = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  let {\n    petSpeciesBreedId,\n  } = petMessage;\n  const [value, setValue] = useState(1);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const imagetypeEvent = () => {\n    if (value === 1) {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatRightEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogRightEar} alt=\"\" />;\n      } else {\n        return <img src={DogRightEar} alt=\"\" />;\n      }\n    } else {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatLeftEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogLeftEar} alt=\"\" />;\n      } else {\n        return <img src={DogLeftEar} alt=\"\" />;\n      }\n    }\n  }\n\n  const onClick = () => {\n    if (value === 1) {\n      setValue(2);\n    } else {\n      cutPageType('experimentalPage');\n    }\n  }\n\n  // useEffect(() => {\n  //   imagetypeEvent();\n  // },[value])\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          Swab Pet's Ear\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {imagetypeEvent()}\n      </div>\n      <div className=\"radioBox\">\n        <Radio.Group onChange={onChange} value={value}>\n          <Radio value={1}>Right Ear</Radio>\n          <Radio value={2}>Left Ear</Radio>\n        </Radio.Group>\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>Next</Button>\n      </div>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(SwabPetEar);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/mouseDiv/MouseDiv.js",["565","566"],"\nimport React, { useState, useEffect } from 'react'\n\n\nimport PropTypes from 'prop-types';\n\nimport { px, mTop } from './../px'\nimport './mouseDiv.less'\n\n/**\n * \n * @param {string} minHeight 最小化、最大化方块的宽高 \n * @param {number} imgWidth 最小化、最大化图片的高度 \n * @returns  封装了最小化和关闭按钮，有鼠标移入、移出的动画\n */\nconst MinClose = ({ minHeight, beforeDiv, afterDiv, divClick }) => {\n  const [minbgc, setMinbgc] = useState('')\n  const [rMin, setRMin] = useState(beforeDiv)\n\n  const minMouseEnter = () => {\n    setMinbgc('rgba(70, 70, 70, 0.5)')\n    setRMin(afterDiv)\n  }\n  const minMouseLeave = () => {\n    setMinbgc('')\n    setRMin(beforeDiv)\n  }\n  const minClock = () => {\n    setMinbgc('')\n    setRMin(beforeDiv)\n    divClick()\n\n  }\n\n\n\n\n  return (\n    <div id='mouseDiv'>\n      <div\n        className='min_icon'\n        onClick={minClock}\n        style={{ backgroundColor: minbgc, height: minHeight, width: minHeight }}\n        onMouseEnter={minMouseEnter}\n        onMouseLeave={minMouseLeave}\n      >\n        {rMin}\n      </div>\n\n    </div>\n  )\n}\n\nMinClose.propTypes = {\n  minHeight: PropTypes.string,\n  imgWidth: PropTypes.number,\n  divClick: PropTypes.func,\n  afterDiv: PropTypes.func,\n  beforeDiv: PropTypes.func,\n\n\n}\nMinClose.defaultProps = {\n  minHeight: '40px',\n  imgWidth: px(20)\n\n}\n\nexport default MinClose","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/help/index.jsx",["567","568","569","570","571","572"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/petAndParents/index.jsx",["573","574","575","576","577"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/unassigned/index.jsx",["578","579","580","581","582"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/App.js",["583"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js",["584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Menu, Popover, Button, Modal } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { SyncOutlined, createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\nimport { SearchOutlined } from '@ant-design/icons';\nimport moment from 'moment'\nimport MyModal from './../myModal/MyModal'\nimport { connect } from 'react-redux'\nimport { setMenuNum, setSelectHardwareType, petDetailInfoFun } from '../../store/actions';\n\n//import 'antd/dist/antd.css';\nimport \"./heard.less\";\nimport help from \"./../../assets/images/help.png\";\nimport message from \"./../../assets/images/message.png\";\nimport triangle from \"./../../assets/img/triangle.png\";\nimport { mTop, px, MTop } from \"../px\";\nimport electronStore from \"../electronStore\";\nimport dog from \"./../../assets/images/reddog.png\";\nimport cat from \"./../../assets/images/redcat.png\";\nimport other from \"./../../assets/images/redother.png\";\nimport menu from \"./../../assets/img/menu.png\";\nimport heardLeft from \"./../../assets/img/heardLeft.png\";\nimport blueSearchPng from \"./../../assets/img/blueSearch.png\";\nimport close from \"./../../assets/img/close.png\";\nimport MinClose from \"../../utils/minClose/MinClose\";\nimport jinggao from \"./../../assets/img/jinggao.png\";\nimport redclose from \"./../../assets/img/redclose.png\";\n\nimport rMin_red from \"./../../assets/img/min-red.png\";\nimport rClose_red from \"./../../assets/img/close-red.png\";\n\nimport rMin_white from \"./../../assets/img/min-white.png\";\nimport rClose_white from \"./../../assets/img/close-white.png\";\nimport mellaLogo from \"./../../assets/images/mellaLogo.png\";\nimport { version, updateTime } from \"./../appversion\";\nimport Button1 from \"../button/Button\";\nimport { getPetInfoByRFID } from \"../../api\";\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js\",\n});\n\nconst allPetList = electronStore.get(\"doctorExam\");\nlet storage = window.localStorage;\nlet ipcRenderer = window.electron.ipcRenderer;\n\nlet mouseoutTimer = null;\nlet matchingTimer = null;\n\n/**\n *\n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns\n */\n\nconst Heard = ({\n  onReturn,\n  onSearch,\n\n  blueSearch,\n  setMenuNum,\n  menuNum,\n  setSelectHardwareType,\n  petListArr,\n  petDetailInfoFun\n}) => {\n  const [minbgc, setMinbgc] = useState('')        //最小化的背景颜色\n  const [closebgc, setClosebgc] = useState('')    //关闭按钮的背景色\n  const [rMin, setRMin] = useState(rMin_red)      //最小化的图标\n  const [rClose, setRClose] = useState(rClose_red) //关闭按钮图标\n  const [value, setValue] = useState('')          //搜索框输入的内容\n  const [visible, setVisible] = useState(false)   //搜索框下面的搜索model\n  const [loading, setLoading] = useState(false)     //搜索宠物过程中的加载图标\n  const [petList, setPetList] = useState([])        //搜索到的宠物列表\n  const [menuVisible, setMenuVisible] = useState(false)//菜单图标下面的菜单内容图标\n  const [menuMouseOverIndex, setMenuMouseOverIndex] = useState('')//用来定位鼠标滑到哪个菜单选项\n\n\n  const [modalvisible, setModalVisible] = useState(false)       //关于的弹窗\n  const [modalVis, setModalVis] = useState(false)               //RFID搜索是否有宠物的弹窗\n  const [isNotFound, setIsNotFound] = useState(false)           //是否找到RFID对应的图标\n  const [deviceModel, setDeviceModel] = useState(false)         //我的设备弹窗\n\n  const [noUSB, setNoUSB] = useState(false)                 //没有底座设备\n  const [searchMac, setSearchMac] = useState(false)         //是否展示狗牌mac搜索图标下面的Modal框\n  const [bluDevice, setBluDevice] = useState([])            //搜索到的狗牌设备mac地址\n\n  const [isShowBlePetList, setIsShowBlePetList] = useState(false)  //是否展示狗牌对应宠物\n  const [isMatchPet, setIsMatchPet] = useState(false)      //正在匹配狗牌对应的宠物\n  const [macMatchPetList, setMacMatchPetList] = useState([])\n  const [updateStatus, setUpdateStatus] = useState('init')\n  const [lastVersion, setLastVersion] = useState(version)\n  const [downLoadNum, setDownLoadingNum] = useState(0)\n  const [selectDeviceMac, setSelectDeviceMac] = useState('')\n  const [clickType, setClickType] = useState(false);\n\n  //这里是为了模拟数据所做出来的,后期要改成接口\n  const testPetList = [\n    {\n      macId: \"E0:7C:62:30:08:08\",\n      petName: \"Mella\",\n      petId: \"b9de0868-9202-4fc9-9f1b-325220ceeccf\",\n    },\n    {\n      macId: \"E0:7C:62:03:75:32\",\n      petName: \"Possum\",\n      petId: \"e4b11580-1277-4b10-bd64-46b097f6f882\",\n    },\n    {\n      macId: \"E0:7D:EA:A8:8D:7E\",\n      petName: \"Charlie\",\n      petId: \"b4e7a185-1c7e-4885-ab95-4a7d2d2ada83\",\n    },\n    {\n      macId: \"E0:7C:62:32:76:8C\",\n      petName: \"Noah\",\n      petId: \"01b34bf2-47e6-4036-884f-47299447cb6a\",\n    },\n\n    {\n      macId: \"84:C2:E4:03:C3:06\",\n      petName: \"Whitey\",\n      petId: \"f713a238-f5df-4c85-8c4f-5766b0770c07\",\n    },\n  ];\n  const [size, setSize] = useState({ height: px(47) });\n  const [headerRef, setHeaderRef] = useState();\n\n  const uploadMessage = (e, data) => {\n    switch (data.payload.status) {\n      case -1:\n        console.log('查询异常');\n        setUpdateStatus('error')\n        break;\n\n      case 0:\n        console.log(\"正在检查应用程序更新\");\n        setUpdateStatus(\"check\");\n        break;\n\n      case 2:\n        console.log(\"正在检查应用程序更新\");\n        setUpdateStatus(\"lastVersion\");\n        break;\n\n      case 1:\n        console.log(\"检测到新版本\");\n        let version = data.output.version;\n        setLastVersion(version);\n\n        setUpdateStatus(\"newVersion\");\n        break;\n\n      // case 3:\n      //   console.log(\"下载新版成功\");\n      // case 4:\n      //   console.log(\"取消背景下载\");\n      case 5:\n        console.log(\"取消安装\");\n        setUpdateStatus(\"init\");\n        break;\n      case 6:\n        console.log(\"正在下载\");\n        setUpdateStatus(\"downLoading\");\n        let loadNum = data.output.percent\n          ? (data.output.percent / 100).toFixed(1)\n          : 0;\n        setDownLoadingNum(loadNum);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const _noUSB = (e, data) => {\n    console.log(\"没有USB设备：\", data);\n    if (data === false) {\n      setNoUSB(false);\n    } else {\n      if (!noUSB) {\n        setNoUSB(true);\n      }\n    }\n  };\n  const _send = (event, data) => {\n    command(data)();\n  };\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  const command = (newArr) => {\n    let dataArr1 = newArr.map((item) => {\n      if (item.toString(16).length < 2) {\n        return \"0\" + item.toString(16);\n      } else {\n        return item.toString(16);\n      }\n    });\n    console.log(dataArr1);\n    const instruction = [255];\n    const commandArr = {\n      255: () => {\n        // console.log(dataArr1);\n        // console.log(bluDevice);\n        let length = newArr.length;\n        let frameLength = newArr[1]; //帧长\n        let itemLength = newArr[3] + 1; //数据位的长度   13\n        let dataIndex = 0;\n\n        let MAC = \"\";\n        let bluData = [];\n        let UUID = \"\";\n        while (itemLength < length && itemLength + 3 <= frameLength) {\n          let itemData = [];\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5]);\n          }\n          // console.log('循环得到的数据', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              break;\n            case 255:\n              break;\n            case 3:\n              break;\n            case 239:\n              // console.log('---mac地址');\n              let str = itemData[0];\n              for (let i = 1; i < itemData.length; i++) {\n                str += `:${itemData[i]}`;\n              }\n              MAC = str.toUpperCase();\n\n              break;\n            case 7:\n              console.log(\"uuid\");\n              let uuid = \"\";\n              for (let i = 0; i < itemData.length; i++) {\n                uuid += `${itemData[i]}`;\n              }\n              UUID = uuid;\n              break;\n            default:\n              return;\n          }\n          dataIndex = itemLength;\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\n\n          // console.log(itemLength, itemLength < length && (itemLength + 3 <= frameLength));\n        }\n        console.log(\"----mac\", MAC, \"-----uuid\", UUID);\n        if (UUID === \"d7895ab1acc74de3b9919e825c24c809\") {\n          // console.log('uuid相等', bluDevice, bluDevice.indexOf(MAC) === -1,);\n          if (bluDevice.indexOf(MAC) === -1) {\n            let dataArr = [].concat(bluDevice);\n            dataArr.push(MAC);\n            setBluDevice(dataArr);\n          }\n        }\n      },\n    };\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]];\n    } else {\n      return () => {\n        console.log(\"没有控制命令\", commandArr);\n      };\n    }\n  };\n\n  let history = useHistory();\n  //最小化，关闭的\n  const MINCOLOSE = {\n    minMouseEnter: () => {\n      setMinbgc(\"rgba(70, 70, 70, 0.5)\");\n      setRMin(rMin_white);\n    },\n    minMouseLeave: () => {\n      setMinbgc(\"\");\n      setRMin(rMin_red);\n    },\n    minClock: () => {\n      setMinbgc(\"\");\n      setRMin(rMin_red);\n      let ipcRenderer = window.electron.ipcRenderer;\n      ipcRenderer.send(\"window-min\");\n    },\n    closeMouseEnter: () => {\n      setClosebgc(\"rgba(232,17,35)\");\n      setRClose(rClose_white);\n    },\n    closeMouseLeave: () => {\n      setClosebgc(\"\");\n      setRClose(rClose_red);\n    },\n    closeClock: () => {\n      let ipcRenderer = window.electron.ipcRenderer;\n      ipcRenderer.send(\"window-close\");\n    },\n  };\n\n  //搜索框内容\n  const searchPetBody = () => {\n    if (loading) {\n      //加载中\n      return (\n        <div className=\"searchPetLoading\" style={{ padding: `${20}px 0` }}>\n          <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n            <LoadingOutlined\n              style={{ fontSize: 30, color: \"#e1206d\", marginTop: mTop(-30) }}\n            />\n          </div>\n          <p style={{ color: \"#e1206d\", marginTop: px(5) }}>loading...</p>\n        </div>\n      );\n    } else {\n      // console.log('-----展示', petList.length);\n      if (petList.length > 0) {\n        //找到了宠物，展示出来\n\n        // let petList = electronStore.get('doctorExam')\n        // console.log(petList);\n\n        let option = petList.map((item, index) => {\n          let { speciesId, url } = item;\n\n          let images = `url(${url}?download=0&width=150)`;\n          if (!url) {\n            switch (speciesId) {\n              case 1:\n                images = `url(${cat})`;\n\n                break;\n              case 2:\n                images = `url(${dog})`;\n                break;\n              default:\n                images = `url(${other})`;\n                break;\n            }\n          }\n          return (\n            <li\n              key={`${index}`}\n              style={{ margin: `${px(20)}px 0` }}\n              onClick={() => {\n                setValue('')\n                setVisible(false)\n                setPetList([])\n                petDetailInfoFun(item)\n                // onSearch(item)\n                history.push('/MainBody')\n              }}\n            >\n              <div className=\"item\" style={{ paddingLeft: px(40) }}>\n                <div\n                  className=\"img\"\n                  style={{\n                    width: px(50),\n                    height: px(50),\n                    marginRight: px(40),\n                    borderRadius: px(60),\n                    backgroundImage: images,\n                  }}\n                >\n\n                </div>\n\n                <div className=\"petInfo\">\n                  <p\n                    style={{\n                      color: \"#141414\",\n                      fontWeight: 600,\n                      fontSize: px(20),\n                    }}\n                  >\n                    {item.petName}\n                  </p>\n                  <p\n                    style={{ color: \"#797979\", fontSize: px(18) }}\n                  >{`Patient ID: ${item.patientId}`}</p>\n                  <p\n                    style={{ color: \"#797979\", fontSize: px(18) }}\n                  >{`Owner: ${item.owner}`}</p>\n                </div>\n              </div>\n            </li>\n          );\n        });\n        let liStyle = { backgroundColor: \"#fff\" };\n        if (petList.length > 4) {\n          liStyle = { height: px(500), overflowY: \"auto\" };\n        }\n\n        return (\n          <div className=\"searchPetList\">\n            <ul style={liStyle}>{option}</ul>\n          </div>\n        );\n      } else {\n        //没有发现这个宠物\n        return (\n          <div className=\"searchPetLoading\" style={{ padding: `${10}px 0` }}>\n            <p style={{ width: \"80%\", fontSize: px(18) }}>\n              Pet not found. Would you like to add a new patient?\n            </p>\n\n            <div\n              className=\"searchPetBtn\"\n              style={{ fontSize: px(18) }}\n              onClick={() => {\n                history.push(\"/pet/doctorAddPet\");\n              }}\n            >\n              <p style={{ padding: `${px(8)}px 0` }}>+ New Patient</p>\n            </div>\n          </div>\n        );\n      }\n    }\n  };\n\n  const inputChange = (text) => {\n    function isNumber(val) {\n      var regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\n      var regNeg =\n        /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\n      if (regPos.test(val) || regNeg.test(val)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    //去除前后空格\n    let search = text.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\");\n    setValue(search);\n    if (search.length > 0) {\n      setVisible(true);\n      setLoading(true);\n\n      //搜索分成两种，一种是通过手输入数据搜索，一种是通过RFID扫描过后搜索\n\n      if (search.length === 15 && isNumber(search)) {\n        //这是RFID扫描后的搜索\n\n        getPetInfoByRFID(search, storage.lastOrganization)\n          .then((res) => {\n            console.log(\"----RFID搜索结果\", res);\n\n            if (res.flag === true && res.data) {\n              let {\n                createTime,\n                patientId,\n                petName,\n                firstName,\n                lastName,\n                url,\n                speciesId,\n                breedName,\n                gender,\n                birthday,\n                petId,\n                rfid,\n                weight,\n              } = res.data;\n              patientId = patientId || \"unknown\";\n              petName = petName || \"unknown\";\n              breedName = breedName || \"unknown\";\n              weight = weight || \"unknown\";\n              let owner = \"\";\n              if (!firstName) {\n                firstName = \"\";\n              }\n              if (!lastName) {\n                lastName = \"\";\n              }\n              if (lastName === \"\" && firstName === \"\") {\n                owner = \"unknown\";\n              } else {\n                owner = `${lastName} ${firstName}`;\n              }\n              createTime = moment(createTime).format(\"X\");\n              let petGender = \"\";\n              switch (`${gender}`) {\n                case \"1\":\n                  petGender = \"F\";\n\n                  break;\n                case \"0\":\n                  petGender = \"M\";\n                  break;\n                default:\n                  petGender = \"unknown\";\n                  break;\n              }\n              let petAge = \"unknown\";\n              if (birthday) {\n                petAge = moment(new Date()).diff(moment(birthday), \"years\");\n                // console.log('petAge', petAge);\n              }\n              let json = {\n                insertedAt: createTime,\n                patientId,\n                petName,\n                owner,\n                breed: breedName,\n                gender: petGender,\n                age: petAge,\n                petId,\n                id: 0,\n                weight,\n                rfid,\n                url,\n                speciesId,\n              };\n              let searchData = [];\n              searchData.push(json);\n              setLoading(false);\n              setPetList(searchData);\n            } else if (\n              res.flag === true &&\n              res.msg === \"该组织下无此宠物信息\"\n            ) {\n              console.log(\"找到了但是不是在这个组织下\");\n              setLoading(false);\n              setModalVis(true);\n              setIsNotFound(false);\n              setValue(\"\");\n              setVisible(false);\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: false,\n              //   heardSearchText: ''\n              // })\n            } else {\n              console.log(\"没有找到\");\n              setLoading(false);\n              setModalVis(true);\n              setIsNotFound(true);\n              setValue(\"\");\n              setVisible(false);\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: true,\n              //   heardSearchText: ''\n              // })\n            }\n          })\n          .catch((err) => {\n            console.log(\"抛出异常:\", err);\n            setLoading(false);\n          });\n        return;\n      }\n\n      /**\n       * 使用indexof方法实现模糊查询\n       *     语法：stringObject.indexOf(searchvalue, fromindex)\n       *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n       *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n       *\n       * list         原数组\n       * keyWord      查询关键词\n       * searchData   查询的结果\n       *\n       * toLowerCase（）方法：将字符串统一转成小写\n       * toUpperCase（）方法：将字符串统一转成大写\n       *\n       */\n      // let list = allPetList\n      let list = petListArr || []\n\n      let searchData = [];\n      let keyWord = search;\n      for (let i = 0; i < list.length; i++) {\n        let petName = list[i].petName ? list[i].petName.toLowerCase() : ''\n        let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : ''\n        let rfid = list[i].rfid || ''\n        if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${rfid}`.indexOf(keyWord) !== -1\n        ) {\n          searchData.push(list[i]);\n        }\n      }\n      // console.log('找到的宠物', searchData);\n      console.log(\n        \"---搜索词：\",\n        search,\n        \"---搜索数组：\",\n        list,\n        \"----搜索结果：\",\n        searchData\n      );\n      setLoading(false);\n      setPetList(searchData);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  //左侧菜单栏\n  const menuList = () => {\n    let name = electronStore.get(`${storage.userId}-isClical`) ? 'Exit Clinical Study Mode' : 'Enter Clinical Study Mode'\n    let menulistArr = [\n      { name: \"Home\", index: \"1\" },\n      { name: \"All Patients\", index: \"2\" },\n      { name: \"Scheduled Patients\", index: \"3\" },\n      { name: \"My Account\", index: \"4\" },\n      { name: \"Org & Practice Profiles\", index: \"10\" },\n      { name: \"Settings\", index: \"5\" },\n      { name: name, index: \"6\" },\n      { name: `Billing & Subscriptions`, index: \"7\" },\n      { name: \"About Mella\", index: \"8\" },\n      { name: \"Log Out\", index: \"9\" },\n    ];\n    let menuOption = menulistArr.map((item, index) => {\n      let pColor = menuMouseOverIndex === item.index ? \"#e1206d\" : \"#1a1a1a\";\n      return (\n        <li\n          key={item.index}\n          style={{ padding: `${px(15)}px ${px(20)}px` }}\n          onClick={() => {\n            menulistClick(item);\n          }}\n          onMouseOver={(e) => {\n            setMenuMouseOverIndex(item.index);\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOver();\n          }}\n          onMouseOut={(e) => {\n            setMenuMouseOverIndex(\"\");\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOut();\n          }}\n        >\n          <div className=\"item\">\n            <p style={{ color: pColor }}>{item.name}</p>\n          </div>\n        </li>\n      );\n    });\n\n    return <ul>{menuOption}</ul>;\n  };\n  const menulistClick = (e) => {\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    setMenuVisible(false);\n    setMenuMouseOverIndex(\"\");\n    console.log(\"click \", e);\n\n    switch (e.index) {\n      case \"1\":\n        history.push(\"/MainBody\");\n        setMenuNum(e.index);\n        break;\n      case \"2\":\n        history.push(\"/MainBody\");\n        console.log(\"全部的宠物\");\n        setMenuNum(e.index);\n        break;\n      case \"3\":\n        history.push(\"/MainBody\");\n        console.log(\"预约宠物\");\n        setMenuNum(e.index);\n        break;\n      case \"4\":\n        history.push(\"/MainBody\");\n        setMenuNum(e.index);\n        break;\n      case \"5\":\n        //跳转到设置\n        // menu5Click()\n        history.push(\"/menuOptions/settings\");\n        // setMenuNum(e.index)\n        break;\n      case \"6\":\n        if (e.name === \"Exit Clinical Study Mode\") {\n          setMenuNum('1');\n          electronStore.set(`${storage.userId}-isClical`, false)\n        } else {\n          setMenuNum(e.index);\n          electronStore.set(`${storage.userId}-isClical`, true)\n          setSelectHardwareType(\"mellaPro\");\n        }\n        history.push(\"/MainBody\");\n        console.log(\"临床测试\");\n        break;\n      case \"7\":\n        console.log(\"billing\");\n        break;\n\n      case \"8\":\n        setModalVisible(true);\n        console.log(\"关于\");\n        break;\n      case \"9\":\n        console.log(\"退出登录\");\n        storage.userId = \"\";\n        storage.roleId = \"\";\n        storage.userWorkplace = \"\";\n        storage.lastOrganization = \"\";\n        storage.lastWorkplaceId = \"\";\n        storage.connectionKey = \"\";\n        storage.isClinical = \"false\";\n        setMenuNum(\"1\");\n        history.push(\"/\");\n        break;\n\n      case \"10\":\n        history.push('/menuOptions/ConnectWorkplace');\n        break;\n\n      default:\n        break;\n    }\n  };\n  const menuMouseOut = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    mouseoutTimer = setTimeout(() => {\n      setMenuVisible(false);\n      mouseoutTimer && clearTimeout(mouseoutTimer);\n    }, 1000);\n  };\n  const menuMouseOver = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    setMenuVisible(true);\n  };\n  const updatePage = () => {\n    switch (updateStatus) {\n      case \"init\":\n        return (\n          <div\n            className=\"updateBtn\"\n            style={{ height: px(40) }}\n            onClick={() => {\n              setDownLoadingNum(0);\n              setUpdateStatus(\"check\");\n\n              ipcRenderer.send(\"clickUpdateBtn\");\n            }}\n          >\n            Check for Updates\n          </div>\n        );\n      case \"check\":\n        return (\n          <div className=\"updateLoading flex\">\n            <div className=\"loadIcon1\">\n              <LoadingOutlined\n                style={{ fontSize: 30, color: \"#e1206d\", marginRight: px(20) }}\n              />\n            </div>\n            <p style={{ color: \"#e1206d\" }}>Checking for updates</p>\n          </div>\n        );\n      case \"lastVersion\":\n        return (\n          <div style={{ fontSize: px(22), }}>\n            already the latest version\n          </div>\n        )\n      case 'error':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            Failed to get the latest version, please try again later\n          </div>\n        )\n\n\n      case \"newVersion\":\n        return (\n          <div style={{ fontSize: px(22) }}>\n            {`Found new version V${lastVersion}`}\n          </div>\n        );\n      case \"downLoading\":\n        return (\n          <div style={{ fontSize: px(22) }}>\n            {`Download progress: ${downLoadNum}%`}\n          </div>\n        );\n\n      default:\n        break;\n    }\n  };\n  //关于界面\n  const modal = () => {\n    return (\n      <div\n        className=\"settingModal\"\n        style={{ height: `${document.documentElement.clientHeight}px` }}\n      >\n        <div className=\"writeBox\" style={{ borderRadius: px(25) }}>\n          <div className=\"modalHeadr\">\n            <div className=\"close\">\n              <div\n                className=\"imgBox\"\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => {\n                  setModalVisible(false);\n                  setUpdateStatus(\"init\");\n                }}\n              >\n                <img src={close} style={{ width: px(23) }} />\n              </div>\n            </div>\n            <div className=\"heaerCenter\">\n              <div className=\"heaerCenterL\">\n                <img src={mellaLogo} style={{ width: \"80%\" }} />\n              </div>\n              <div className=\"heaerCenterR\">\n                <h1 style={{ fontSize: px(45), marginBottom: px(10) }}>\n                  About the System\n                </h1>\n                <div className=\"version\">\n                  <div\n                    className=\"versionL\"\n                    style={{ fontSize: px(22), width: px(180) }}\n                  >\n                    Version\n                  </div>\n                  <div className=\"versionR\" style={{ fontSize: px(24) }}>\n                    {version}\n                  </div>\n                </div>\n                <div className=\"version\">\n                  <div\n                    className=\"versionL\"\n                    style={{ fontSize: px(22), width: px(180) }}\n                  >\n                    Last Checked\n                  </div>\n                  <div className=\"versionR\" style={{ fontSize: px(24) }}>\n                    {updateTime}\n                  </div>\n                </div>\n\n                <div className=\"check\" style={{ marginTop: px(20) }}>\n                  {updatePage()}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"modalfoot\">\n            <div\n              className=\"about\"\n              style={{ marginTop: px(40), fontSize: px(18) }}\n            >\n              Nanjing Jiubian Technology Co., Ltd. was founded in 2019, located\n              in Nanjing Yuhuatai Software Valley Branch City, the company\n              brings together medical sensors, mobile Internet and other\n              industry's top professionals, business areas covering artificial\n              intelligence, smart medical, pet health, sleep monitoring, etc.,\n              is a design, research and development, production, sales, service\n              in one of the high-tech companies. The nine-sided science and\n              technology to \"the number of heavens and earths, starting from\n              one, finally nine\" as the cultural concept, adhering to the\n              essence of Chinese artisans, with an international vision, always\n              standing in the forefront of bio-intelligent medical monitoring\n              technology.\n            </div>\n\n            <div className=\"aLable\">\n              <a\n                href=\"#\"\n                style={{ fontSize: px(18), marginRight: px(50) }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >\n                Terms and Agreements\n              </a>\n              <a\n                href=\"#\"\n                style={{ fontSize: px(18) }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >\n                Privacy Policy\n              </a>\n            </div>\n\n            <div className=\"foot\" style={{ marginBottom: px(40) }}>\n              © 2021 Mella Pet Care All RIghts Reserved\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //设备列表界面\n  const devices = () => {\n    let userId = storage.userId;\n    // electronStore.delete(`${userId}-deviceList`)\n    let deviceList = electronStore.get(`${userId}-deviceList`);\n    console.log(\"---\", deviceList);\n    if (!deviceList) {\n      let str = `${getRamNumber()}`;\n      for (let i = 0; i < 5; i++) {\n        str += `:${getRamNumber()}`;\n      }\n      console.log(\"随机生成的mac地址:\", str);\n      deviceList = [{ name: \"MellaPro\", deviceType: \"mellaPro\", macId: str }];\n      electronStore.set(`${userId}-deviceList`, deviceList);\n    }\n\n    function getRamNumber() {\n      var result = \"\";\n      for (var i = 0; i < 2; i++) {\n        result += Math.floor(Math.random() * 16).toString(16); //获取0-15并通过toString转16进制\n      }\n      //默认字母小写，手动转大写\n      return result.toLowerCase(); //另toLowerCase()转小写\n    }\n\n    // deviceList = [\n    //   // { name: 'Add Device', deviceType: 'add', macId: '0' },\n    //   { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\n    //   { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:51:66' },\n    //   { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:35:66' },\n    //   { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:24:33:44:55:66' },\n    //   { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:25:66' },\n    //   { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:56:66' },\n    // ]\n\n    let options = deviceList.map((item, index) => {\n      return (\n        <li\n          className=\"flex\"\n          key={`${index}`}\n          style={{ marginBottom: px(15), marginTop: px(5) }}\n          onClick={() => {\n            console.log(item.macId);\n            setSelectDeviceMac(item.macId);\n          }}\n        >\n          <div className=\"liLeft\" style={{ fontSize: px(16) }}>\n            {item.name}\n          </div>\n          <div className=\"liCenter\" style={{ fontSize: px(16) }}>\n            {item.macId}\n          </div>\n          <div className=\"liRight\">\n            <div\n              className=\"circle flex\"\n              style={{ width: px(18), height: px(18) }}\n            >\n              {selectDeviceMac === item.macId && <div className=\"redCircle\" />}\n            </div>\n          </div>\n        </li>\n      );\n    });\n\n    return (\n      <div\n        className=\"settingModal\"\n        style={{ height: `${document.documentElement.clientHeight}px` }}\n      >\n        <div\n          className=\"writeBox devices\"\n          style={{ borderRadius: px(25), width: px(400) }}\n        >\n          <div className=\"deviceHeadr\">\n            <div className=\"close\">\n              <div\n                className=\"imgBox\"\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => setDeviceModel(false)}\n              >\n                <img src={close} style={{ width: px(23) }} />\n              </div>\n            </div>\n            <div className=\"logo flex\">\n              <img src={mellaLogo} style={{ width: px(60) }} />\n              <div style={{ fontSize: px(22), marginTop: px(30) }}>Devices</div>\n              <div\n                className=\"bodyText\"\n                style={{ fontSize: px(18), marginTop: px(40) }}\n              >\n                Select the device you would\n                <br />\n                like to use or add a new device.\n              </div>\n            </div>\n          </div>\n\n          <div className=\"deviceCenter\">\n            <ul>{options}</ul>\n          </div>\n          <div\n            className=\"deviceFooter flex\"\n            style={{\n              borderBottomLeftRadius: px(25),\n              borderBottomRightRadius: px(25),\n            }}\n          >\n            <div\n              className=\"btn\"\n              style={{ height: px(40) }}\n              onMouseDown={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[0].style.opacity = \"0.5\";\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[0].style.opacity = \"1\";\n              }}\n              onClick={() => {\n                setDeviceModel(false);\n                history.push(\"/menuOptions/AddDevice\");\n              }}\n            >\n              <p className=\"btnText\" style={{ fontSize: px(18) }}>\n                New Device\n              </p>\n            </div>\n            <div\n              className=\"btn\"\n              style={{ height: px(40) }}\n              onMouseDown={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[1].style.opacity = \"0.5\";\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[1].style.opacity = \"1\";\n              }}\n              onClick={() => {\n                electronStore.set(\n                  `${storage.userId}-selectDevice`,\n                  selectDeviceMac\n                );\n                setDeviceModel(false);\n              }}\n            >\n              <p className=\"btnText\" style={{ fontSize: px(18) }}>\n                Connect\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //点击蓝牙搜索图标\n  const blueClick = () => {\n    console.log(\"点击了蓝牙图标\");\n    setIsShowBlePetList(false);\n    setSearchMac(true);\n  };\n  //点击取消链接\n  const cencleClick = (e) => {\n    console.log(\"mac列表为空,点击取消\");\n    setBluDevice([]);\n    setSearchMac(false);\n    setIsShowBlePetList(false);\n    setIsMatchPet(false);\n    setMacMatchPetList([]);\n    if (e) {\n      e.preventDefault();\n    }\n    matchingTimer && clearTimeout(matchingTimer);\n  };\n  //搜索狗牌的蓝牙\n  const blusearchBody = () => {\n    console.log(\"搜索狗牌的蓝牙\", searchMac, bluDevice);\n    if (isShowBlePetList) {\n      if (isMatchPet) {\n        return (\n          <div\n            className=\"searchPetLoading\"\n            style={{ padding: `${20}px 0`, width: \"100%\" }}\n          >\n            <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n              <LoadingOutlined\n                style={{ fontSize: 30, color: \"#e1206d\", marginTop: mTop(-30) }}\n              />\n            </div>\n            <p style={{ color: \"#e1206d\", marginTop: px(5), width: \"80%\" }}>\n              matching...\n            </p>\n\n            <a\n              href=\"#\"\n              style={{ color: \"#e1206d\", marginTop: px(30) }}\n              onClick={cencleClick}\n            >\n              Cencle\n            </a>\n          </div>\n        );\n      } else {\n        if (macMatchPetList.length > 0) {\n          let option = macMatchPetList.map((item, index) => {\n            let { speciesId, url } = item;\n\n            let images = `url(${url}?download=0&width=150)`;\n            if (!url) {\n              switch (speciesId) {\n                case 1:\n                  images = `url(${cat})`;\n                  break;\n                case 2:\n                  images = `url(${dog})`;\n                  break;\n                default:\n                  images = `url(${other})`;\n                  break;\n              }\n            }\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  cencleClick();\n                  onSearch(item);\n                }}\n              >\n                <div className=\"item\" style={{ paddingLeft: px(40) }}>\n                  <div\n                    className=\"img\"\n                    style={{\n                      width: px(50),\n                      height: px(50),\n                      marginRight: px(40),\n                      borderRadius: px(60),\n                      backgroundImage: images,\n                    }}\n                  >\n                    {/* <img src={images} style={{ width: px(40) }} /> */}\n                  </div>\n\n                  <div className=\"petInfo\">\n                    <p\n                      style={{\n                        color: \"#141414\",\n                        fontWeight: 600,\n                        fontSize: px(20),\n                        textAlign: \"start\",\n                      }}\n                    >\n                      {item.petName}\n                    </p>\n                    <p\n                      style={{ color: \"#797979\", fontSize: px(18) }}\n                    >{`Patient ID: ${item.patientId}`}</p>\n                    <p\n                      style={{ color: \"#797979\", fontSize: px(18) }}\n                    >{`Owner: ${item.owner}`}</p>\n                  </div>\n                </div>\n              </li>\n            );\n          });\n          let liStyle = { backgroundColor: \"#fff\" };\n          if (petList.length > 4) {\n            liStyle = { height: px(500), overflowY: \"auto\" };\n          }\n\n          return (\n            <div className=\"searchPetList flex\">\n              <ul style={liStyle}>{option}</ul>\n              <a\n                href=\"#\"\n                style={{\n                  color: \"#e1206d\",\n                  marginTop: px(10),\n                  marginBottom: px(21),\n                }}\n                onClick={cencleClick}\n              >\n                Cencle\n              </a>\n            </div>\n          );\n        }\n      }\n    } else {\n      if (noUSB) {\n        return (\n          <div className=\"searchPetLoading\" style={{ padding: `${10}px 0` }}>\n            <p style={{ width: \"80%\", fontSize: px(18) }}>\n              Please insert address and scan\n            </p>\n\n            <a href=\"#\" style={{ color: \"#e1206d\" }} onClick={cencleClick}>\n              Cencle\n            </a>\n          </div>\n        );\n      } else {\n        if (bluDevice.length > 0) {\n          let option = bluDevice.map((item, index) => {\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  console.log(\"mac列表为空,点击列表内容\");\n                  setBluDevice([]);\n                  // setSearchMac(false)\n                  setIsShowBlePetList(true);\n                  setIsMatchPet(true);\n                  matchingTimer && clearTimeout(matchingTimer);\n                  matchingTimer = setTimeout(() => {\n                    let haveFlog = false,\n                      index = -1;\n                    for (let i = 0; i < testPetList.length; i++) {\n                      if (testPetList[i].macId === item) {\n                        haveFlog = true;\n                        index = i;\n                        break;\n                      }\n                    }\n                    if (haveFlog) {\n                      if (storage.lastOrganization === \"1\") {\n                        matchPet(testPetList[index].petId);\n                      } else {\n                        setModalVis(true);\n                        setIsNotFound(false);\n                        cencleClick();\n                      }\n                    } else {\n                      setModalVis(true);\n                      setIsNotFound(true);\n                      cencleClick();\n                    }\n\n                    setIsMatchPet(false);\n                    matchingTimer && clearTimeout(matchingTimer);\n                  }, 2000);\n                }}\n              >\n                <div className=\"item\" style={{ paddingLeft: px(40) }}>\n                  <div className=\"petInfo\">\n                    <p\n                      style={{\n                        color: \"#141414\",\n                        fontWeight: 600,\n                        fontSize: px(20),\n                      }}\n                    >\n                      mac:{item}\n                    </p>\n                  </div>\n                </div>\n              </li>\n            );\n          });\n          let liStyle = { backgroundColor: \"#fff\" };\n          if (bluDevice.length > 4) {\n            liStyle = { height: px(500), overflowY: \"auto\" };\n          }\n          return (\n            <div className=\"searchPetList\" style={{ flexDirection: \"column\" }}>\n              <ul style={liStyle}>{option}</ul>\n              <a\n                href=\"#\"\n                style={{\n                  color: \"#e1206d\",\n                  marginTop: px(10),\n                  marginBottom: px(21),\n                }}\n                onClick={cencleClick}\n              >\n                Cencle\n              </a>\n            </div>\n          );\n        } else {\n          return (\n            <div\n              className=\"searchPetLoading\"\n              style={{ padding: `${20}px 0`, width: \"100%\" }}\n            >\n              <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n                <LoadingOutlined\n                  style={{\n                    fontSize: 30,\n                    color: \"#e1206d\",\n                    marginTop: mTop(-30),\n                  }}\n                />\n              </div>\n              <p style={{ color: \"#e1206d\", marginTop: px(5), width: \"80%\" }}>\n                scanning...\n              </p>\n\n              <a\n                href=\"#\"\n                style={{ color: \"#e1206d\", marginTop: px(30) }}\n                onClick={cencleClick}\n              >\n                Cencle\n              </a>\n            </div>\n          );\n        }\n      }\n    }\n  };\n  const matchPet = (searchValue) => {\n    console.log(\"搜索词:\", searchValue);\n    let list = electronStore.get(\"doctorExam\");\n\n    let searchData = [];\n    let keyWord = searchValue;\n    for (let i = 0; i < list.length; i++) {\n      let petName = `${list[i].petId}`;\n      if (keyWord === petName) {\n        searchData.push(list[i]);\n      }\n    }\n\n    setIsMatchPet(false);\n\n    setMacMatchPetList(searchData);\n  };\n  const resize = () => {\n    setSize()\n    // let { offsetWidth, offsetHeight } = heardRef;\n    // console.log(\"resize\", heardRef);\n    // if (offsetHeight !== this.state.bodyHeight) {\n    //   this.setState({\n    //     bodyHeight: offsetHeight - px(50),\n    //   });\n    // }\n  };\n\n  useEffect(() => {\n    console.log(\"mac列表为空,初始化\");\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    setBluDevice([]);\n    return () => {\n      matchingTimer && clearTimeout(matchingTimer);\n    };\n  }, []);\n  useEffect(() => {\n    ipcRenderer.on(\"uploadMessage\", uploadMessage);\n    return () => {\n      ipcRenderer.removeListener(\"uploadMessage\", uploadMessage);\n    };\n  }, []);\n  useEffect(() => {\n    if (blueSearch) {\n      console.log(\"---渲染时执行----??????\");\n      ipcRenderer.on(\"sned\", _send);\n      ipcRenderer.on(\"noUSB\", _noUSB);\n      return () => {\n        console.log(\"----卸载----?????????/\");\n        ipcRenderer.removeListener(\"sned\", _send);\n        ipcRenderer.removeListener(\"noUSB\", _noUSB);\n      };\n    }\n  }, []);\n  useEffect(() => {\n    //监听屏幕窗口改变\n    setSize({ height: 47 });\n  }, [window.screen.availWidth])\n\n  return (\n    <div id=\"heardUI\">\n      <div id=\"heardUITop\" />\n      <div\n        id=\"heard\"\n        style={size}\n        ref={(val) => {\n          setHeaderRef(val);\n        }}\n      >\n        <div className=\"l\">\n          <div\n            className=\"menuF\"\n            style={{ marginLeft: px(40), marginRight: px(40) }}\n          >\n            <div\n              className=\"menu\"\n              onMouseOver={menuMouseOver}\n              onMouseOut={menuMouseOut}\n            >\n              <img src={menu} style={{ width: px(20) }} />\n              {menuVisible ? (\n                // true\n                <div className=\"manuBody\" style={{ top: px(20), left: px(-40) }}>\n                  <div\n                    className=\"triangle\"\n                    style={{\n                      borderLeft: `${px(10)}px solid transparent`,\n                      borderRight: `${px(10)}px solid transparent`,\n                      borderBottom: `${px(13)}px solid #fff`,\n                      left: px(40),\n                    }}\n                  />\n\n                  <div className=\"manuBodyList\" style={{ marginTop: px(13) }}>\n                    {menuList()}\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <div className=\"search\" style={{ width: px(300) }}>\n            <input\n              placeholder=\"Search Pet    &#xe63f;\"\n              style={{ fontSize: px(16), paddingLeft: px(20) }}\n              value={value}\n              onChange={(text) => {\n                inputChange(text);\n              }}\n              onKeyUp={(e) => {\n                // console.log(e);\n                if (e.keyCode === 13) {\n                  console.log(\"回车,去搜索\");\n                }\n                if (e.keyCode === 27) {\n                  console.log(\"清空\");\n                  setValue(\"\");\n                  setVisible(false);\n                }\n              }}\n            />\n            {blueSearch ? (\n              <div\n                className=\"searchIconFa bluSearch\"\n              // style={{ cursor: 'pointer', backgroundColor: 'pink' }}\n              // onClick={blueClick}\n              >\n                <div onClick={blueClick}>\n                  {/* <img src={blueSearchPng} style={{ width: '50%' }} /> */}\n                  <span\n                    className=\" iconfont icon-sousuo searchIcon\"\n                    style={{ fontSize: px(25) }}\n                  />\n                </div>\n\n                {searchMac ? (\n                  // true ?\n                  <div className=\"searchPet flex\" style={{ width: px(400) }}>\n                    <div\n                      className=\"triangle\"\n                      style={{\n                        borderLeft: `${px(20)}px solid transparent`,\n                        borderRight: `${px(20)}px solid transparent`,\n                        borderBottom: `${px(25)}px solid #fff`,\n                        // marginLeft: px(30),\n                        zIndex: 999,\n                      }}\n                    />\n\n                    <div className=\"searchPetBody\" style={{ width: \"100%\" }}>\n                      {blusearchBody()}\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            ) : (\n              <div className=\"searchIconFa\">\n                <span\n                  className=\" iconfont icon-sousuo searchIcon\"\n                  style={{ fontSize: px(25) }}\n                />\n              </div>\n            )}\n\n            {visible ? (\n              // true ?\n              <div className=\"searchPet\" style={{ top: px(35), width: px(400) }}>\n                <div\n                  className=\"triangle\"\n                  style={{\n                    borderLeft: `${px(20)}px solid transparent`,\n                    borderRight: `${px(20)}px solid transparent`,\n                    borderBottom: `${px(25)}px solid #fff`,\n                    marginLeft: px(30),\n                    zIndex: 999,\n                  }}\n                />\n\n                <div className=\"searchPetBody\">{searchPetBody()}</div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n\n        <div className=\"r\">\n          <div className=\"heardCenter\">\n            <div\n              className=\"message\"\n              onClick={() => history.push(\"/menuOptions/unassigned\")}\n            >\n              <img\n                src={message}\n                alt=\"\"\n                style={{ height: px(25), width: px(25) }}\n              />\n            </div>\n            <div\n              className=\"help\"\n              style={{ margin: `0 ${px(25)}px` }}\n              onClick={() => history.push(\"/menuOptions/help\")}\n            >\n              <img src={help} alt=\"\" style={{ height: px(25) }} />\n            </div>\n          </div>\n          <div className=\"min_close\" style={{ paddingRight: px(15) }}>\n            <div\n              className=\"min_icon\"\n              onClick={MINCOLOSE.minClock}\n              style={{ backgroundColor: minbgc, height: px(50), width: px(50) }}\n              onMouseEnter={MINCOLOSE.minMouseEnter}\n              onMouseLeave={MINCOLOSE.minMouseLeave}\n            >\n              <img src={rMin} alt=\"\" style={{ width: px(20) }} />\n            </div>\n            <div\n              className=\"min_icon\"\n              onClick={MINCOLOSE.closeClock}\n              style={{ backgroundColor: closebgc, height: px(50), width: px(50) }}\n              onMouseEnter={MINCOLOSE.closeMouseEnter}\n              onMouseLeave={MINCOLOSE.closeMouseLeave}\n            >\n              <img src={rClose} alt=\"\" style={{ width: px(20) }} />\n            </div>\n          </div>\n        </div>\n\n        {modalvisible && modal()}\n        {deviceModel && devices()}\n\n        <MyModal\n          // visible={true}\n          visible={modalVis}\n          element={\n            <div\n              className=\"tip\"\n              style={{ width: px(420), height: px(480), borderRadius: px(20) }}\n            >\n              <div\n                className=\"close\"\n                style={{ height: px(60) }}\n                onClick={() => setModalVis(false)}\n              >\n                <div className=\"flex\" style={{ height: px(60), width: px(60) }}>\n                  <img src={close} alt=\"\" style={{ width: px(20) }} />\n                </div>\n              </div>\n              <div className=\"text\">\n                <h1 style={{ fontSize: px(36), marginTop: px(30) }}>\n                  {\" \"}\n                  {isNotFound ? \"Pet not found!\" : \"Pet found!\"}\n                </h1>\n              </div>\n              <div className=\"flex\" style={{ margin: `${px(20)}px 0` }}>\n                {isNotFound ? (\n                  <img src={redclose} width=\"50px\" />\n                ) : (\n                  <img src={jinggao} width=\"50px\" />\n                )}\n              </div>\n              <div\n                className=\"textbody\"\n                style={{ marginTop: px(30), color: \"#000\" }}\n              >\n                {isNotFound ? (\n                  <p style={{ fontSize: px(22) }}>\n                    {\" \"}\n                    This pet is not on your database\n                  </p>\n                ) : (\n                  <p style={{ fontSize: px(22) }}>\n                    Pet Identified but does not <br /> belong to your\n                    organization.\n                  </p>\n                )}\n              </div>\n\n              <div className=\"flex\" style={{ marginTop: px(30), width: \"100%\" }}>\n                <div\n                  className=\"btn flex\"\n                  style={{ height: px(40) }}\n                  onClick={() => {\n                    setModalVis(false);\n                    cencleClick();\n                  }}\n                >\n                  <p>OK</p>\n                </div>\n              </div>\n            </div>\n          }\n        />\n      </div>\n    </div>\n\n  );\n};\n\nHeard.propTypes = {\n  onReturn: PropTypes.func,\n  onSearch: PropTypes.func,\n\n  blueSearch: PropTypes.bool,\n};\n// let userHistory = useHistory()\nHeard.defaultProps = {\n  onSearch: () => { },\n  onReturn: () => { },\n\n  blueSearch: false,\n};\n\nexport default connect(\n  state => ({\n    menuNum: state.userReduce.menuNum,\n    petListArr: state.petReduce.petListArr,\n  }),\n  { setMenuNum, setSelectHardwareType, petDetailInfoFun }\n)(Heard)\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanCodeLogin/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/InitDate.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signUpVetProfile/index.jsx",["618","619","620","621","622","623"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/minClose/MinClose.js",["624","625","626"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/experimental/index.jsx",["627","628","629","630","631","632","633"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport swirl from \"../../../../assets/img/swirl.png\";\nimport BreakSeal from \"../../../../assets/img/Break-Seal.png\";\nimport label from \"../../../../assets/img/label.png\";\nimport Incubator from \"../../../../assets/img/Incubator.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\nconst ExperimentalPage = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  const [value, setValue] = useState(1);\n\n  const cutTitle = () => {\n    switch (value) {\n      case 1:\n        return (<>{`${'Swirl sample in'}`}<br />{`${'solution'}`}</>);\n      case 2:\n        return (<>{`${'Break off stem and'}`}<br />{`${'seal collection tube'}`} </>);\n      case 3:\n        return (<>{`${'Affix label to'}`}<br />{`${'collection tube'}`} </>);\n      case 4:\n        return (<>{`${'Place tube in'}`}<br />{`${'incubator'}`} </>);\n      default:\n        break;\n    }\n  }\n\n  const cutImage = () => {\n    switch (value) {\n      case 1:\n        return <img src={swirl} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 2:\n        return <img src={BreakSeal} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 3:\n        return <img src={label} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 4:\n        return <img src={Incubator} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      default:\n        break;\n    }\n  }\n\n  const onClick = () => {\n    if (value !== 4) {\n      setValue(value + 1)\n    } else {\n      cutPageType('timerPage');\n    }\n  }\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          {cutTitle()}\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {cutImage()}\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>{value !== 4 ? 'Next' : 'Start Timer'}</Button>\n      </div>\n    </>\n  );\n\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(ExperimentalPage);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/selectPetModal/index.jsx",["634","635","636"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/linkEquipment.jsx",["637","638","639","640","641","642","643","644"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measurement.jsx",["645","646","647","648","649","650","651","652","653","654","655"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/otterEQ/components/timer/index.jsx",["656","657","658","659","660"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Progress } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\nconst TimerPage = ({ petMessage, hardwareMessage, cutPageType }) => {\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          Results Processing\n        </p>\n      </div>\n      <div className=\"middleBox\" style={{margin:px(-100)}}>\n        <p className=\"middleTitle\" style={{ fontSize: px(30) }}>\n          Please wait for\n          <br />\n          accurate results\n        </p>\n      </div>\n      <div>\n        <Progress type=\"circle\" percent={60} format={() => '06:01:59'} width={270} strokeWidth={12} />\n      </div>\n    </>\n  );\n\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(TimerPage);\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/index.js",["661"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ConfigProvider } from 'antd';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './App';\n// import App from './components/mainbody/index'\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n\n  ,\n  document.getElementById('root'))\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/historyTable/index.jsx",["662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/addPetModal/index.jsx",["685","686","687","688","689","690","691"],"import React, { useEffect, useState } from 'react'\nimport {\n  Modal,\n  Input,\n  message,\n  Spin,\n  Button,\n  Select,\n} from \"antd\";\nimport { SearchOutlined } from '@ant-design/icons';\n\nimport UploadImg from \"../../utils/uploadImg/UploadImg\";\n\nimport {\n  checkPatientId,\n} from '../../api';\n\nimport _ from 'lodash';\n\nimport './index.less';\n\nconst AddPetModal = ({ visible, width, title, destroyOnClose, value, onSelect, onCancel }) => {\n  const { Option } = Select;\n  let storage = window.localStorage;\n  const [isModalVisible, setIsModalVisible] = useState(false);//控制弹窗的显隐\n  const [isdestroyOnClose, setIsdestroyOnClose] = useState(false);//是否清除弹窗里面的内容\n  const [isWidth, setIsWidth] = useState(520);//弹窗的宽度\n  const [loading, setLoading] = useState(false);//加载\n  const [breedList, setBreedList] = useState([]);//\n  const [imageId, setImageId] = useState('');//上传后图片id\n  const [patientId, setPatientId] = useState('');//用户输入的病人id\n  const [petName, setPetName] = useState('');//用户输入的宠物名字\n  const [ownerName, setOwnerName] = useState('');//用户输入的主人名字\n  const [breedId, setBreedId] = useState();//用户选择的宠物品种id\n  const [petAge, setPetAge] = useState();//用户输入的宠物年龄\n  const [petWeight, setPetWeight] = useState();//用户输入的宠物体重\n\n\n  //确认选择\n  const handleOk = () => {\n    setIsModalVisible(visible);\n  };\n  //关闭弹窗\n  const handleCancel = () => {\n    onCancel(false);\n    setIsModalVisible(visible);\n  };\n  //判断用户输入的patientId是否存在\n  const getPetInfoByPatientId = () => {\n    let datas = {\n      patientId: patientId,\n      doctorId: storage.userId\n    }\n    if (storage.lastWorkplaceId) {\n      datas.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      datas.organizationId = storage.lastOrganization\n    }\n    checkPatientId(datas).then((res) => {\n      console.log('res: ', res);\n    })\n\n  }\n\n  useEffect(() => {\n    if (visible === true || visible === false) {\n      setIsModalVisible(visible);\n    } else {\n      setIsModalVisible(false);\n    }\n    return (() => { })\n  }, [visible]);\n\n  useEffect(() => {\n    if (destroyOnClose === true) {\n      setIsdestroyOnClose(destroyOnClose);\n    }\n    if (_.isNumber(width)) {\n      setIsWidth(width)\n    }\n    return (() => { })\n  }, []);\n\n\n  return (\n    <>\n      <Modal\n        title=\"Add a Pet\"\n        visible={isModalVisible}\n        onCancel={handleCancel}\n        centered\n        maskClosable={false}\n        footer={null}\n        width={isWidth}\n        destroyOnClose={isdestroyOnClose}\n        className=\"addPetModal\"\n      >\n        <Spin spinning={loading}>\n          <div className='modalContentBox'>\n            <div className='petMsgBox'>\n              <div className='addPhoto'>\n                <UploadImg\n                  getImg={(val) => {\n                    setImageId(val.imageId);\n                  }}\n                />\n              </div>\n              <div className=\"item\">\n                <p>Patient ID:</p>\n                <Input\n                  value={patientId}\n                  bordered={false}\n                  onChange={(e) => {\n                    setPatientId(e.target.value)\n                  }}\n                  onBlur={() => {\n                    if (patientId.length > 0) {\n                      getPetInfoByPatientId();\n                    }\n                  }}\n                />\n              </div>\n              <div className=\"item\">\n                <p>Pet Name:</p>\n                <Input\n                  value={petName}\n                  bordered={false}\n                  onChange={(e) => {\n                    setPetName(e.target.value)\n                  }}\n                />\n              </div>\n              <div className=\"item\">\n                <p>Owner Name:</p>\n                <Input\n                  value={ownerName}\n                  bordered={false}\n                  onChange={(e) => {\n                    setOwnerName(e.target.value)\n                  }}\n                />\n              </div>\n\n              <div className=\"item\">\n                <p>Breed:</p>\n                <div className='selectBox'>\n                  <Select\n                    showSearch\n                    style={{ width: \"100%\" }}\n                    bordered={false}\n                    value={breedId}\n                    placeholder=\"Search to Select\"\n                    optionFilterProp=\"children\"\n                    listHeight={256}\n                    // onSelect={(value, data) => this._select(value, data)}\n                    filterOption={(input, option) =>\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                      0\n                    }\n                    filterSort={(optionA, optionB) =>\n                      optionA.children\n                        .toLowerCase()\n                        .localeCompare(optionB.children.toLowerCase())\n                    }\n                  >\n                    {\n                      _.map(breedList, (item, index) => {\n                        <Option key={item.petSpeciesBreedId}>{item.breedName}</Option>\n                      })\n                    }\n                  </Select>\n                </div>\n              </div>\n\n              <div className=\"item\">\n                <p>Pet Age:</p>\n                <Input\n                  value={petAge}\n                  bordered={false}\n                  onChange={(e) => {\n                    setPetAge(e.target.value)\n                  }}\n                />\n              </div>\n              <div className=\"item\">\n                <p>Pet Weight:</p>\n                <Input\n                  value={petWeight}\n                  bordered={false}\n                  onChange={(e) => {\n                    setPetWeight(e.target.value)\n                  }}\n                />\n                <div className=\"unit\">{`kg`}</div>\n              </div>\n            </div>\n            <div className='foot'>\n              <div className=\"btnBox\">\n                <Button\n                  type=\"primary\"\n                  shape=\"round\"\n                  size=\"large\"\n                  block\n                  onClick={handleCancel}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  type=\"primary\"\n                  shape=\"round\"\n                  size=\"large\"\n                  block\n                  onClick={handleOk}\n                >\n                  Confirm\n                </Button>\n              </div>\n            </div>\n          </div>\n        </Spin>\n      </Modal>\n    </>\n  );\n\n};\n\nexport default AddPetModal;\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx",["692","693","694","695","696","697","698","699","700"],"import React, { useState, useEffect } from 'react'\nimport {\n  Menu,\n  Popover,\n  Button,\n  Modal\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport pinyin from 'pinyin';\nimport './phoneBook.less'\nimport { px } from '../px';\n/**\n *\n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns\n */\n\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\n  const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\n  const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\n  const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\n  const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\n  const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\n\n  const _phoneList = () => {\n    let option = phoneList.map((item, index) => {\n      let data = item.data\n      let option1 = data.map((value, index1) => {\n        return (\n          <li\n            key={`option1${index1}`}\n            onClick={() => {\n              setSelectBreed(value.petSpeciesBreedId)\n              selectFun(value)\n            }}>\n            {value.name}\n            {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\n          </li>\n        )\n      })\n      return (\n        <div className=\"phoneBody\">\n          <div className=\"title\" id={`${item.title}`} >{item.title} </div>\n          <ul>\n            {option1}\n          </ul>\n        </div>\n      )\n    })\n    return (\n      <ul>\n        {option}\n      </ul>\n    )\n  }\n  const _letterList = () => {\n\n    let option = letterList.map((item, index) => {\n\n\n      return (\n        <li\n          key={`${index}`}\n\n          style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\n          <a\n\n            onClick={() => {\n              litterClick(item)\n            }}\n          >{item}</a>\n        </li>\n      )\n\n    })\n\n    return (\n      <ul className=\"letterUL\">\n        {option}\n      </ul>\n    )\n  }\n  const litterClick = (anchorName) => {\n    // console.log(anchorName);\n    if (anchorName) {\n      // 找到锚点\n      let anchorElement = document.getElementById(anchorName);\n      // console.log(anchorElement);\n      // 如果对应id的锚点存在，就跳转到锚点\n      if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\n    }\n    // e.preventDefault();\n  }\n\n  useEffect(() => {\n    if (confirmSelectBreed !== -1) {\n      setSelectBreed(confirmSelectBreed)\n    }\n  }, [confirmSelectBreed]);\n\n  useEffect(() => {\n    let test = []\n    listDate.forEach((item, index) => {\n      let data = {\n        name: item.breedName,\n        hidden: false,\n        petSpeciesBreedId: item.petSpeciesBreedId\n      }\n      test.push(data)\n    })\n    //获取联系人列表\n    let list = test;\n    let sections = [], letterArr = [];\n    // 右侧字母栏数据处理\n    list.forEach((item, index) => {\n      letterArr.push(pinyin(item.name.substring(0, 1), {\n        style: pinyin.STYLE_FIRST_LETTER,\n      })[0][0].toUpperCase());\n\n      letterArr = [...new Set(letterArr)].sort();\n    });\n    // 分组数据处理\n    letterArr.forEach((item, index) => {\n      sections.push({\n        title: item,\n        data: []\n      })\n    });\n    list.forEach(item => {\n      let listItem = item;\n      sections.forEach(item => {\n        let first = listItem.name.substring(0, 1);\n        let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\n        if (item.title == test) {\n          item.data.push({\n            firstName: first,\n            name: listItem.name,\n            hidden: listItem.hidden,\n            petSpeciesBreedId: listItem.petSpeciesBreedId\n          });\n        }\n      })\n    });\n    setPhoneList(sections)\n    setPhoneListCopy(sections)\n    setLetterList(letterArr)\n    setLetterListCopy(letterArr)\n  }, [listDate]);\n\n  useEffect(() => {\n    if (letterListCopy.length > 0) {\n      let allData = phoneListCopy\n      let newArr = []\n      let arr = []\n      if (searchText.length > 0) {\n        allData.map((item, i) => {\n          item.data.forEach((data, index) => {\n            let dataName = data.name ? data.name.toUpperCase() : ''\n            let keyData = searchText ? searchText.toUpperCase() : ''\n            if (dataName.search(keyData) !== -1) {\n              newArr.push(data)\n            }\n          })\n          if (newArr.length != 0) {\n            let oneGreep = {\n              title: item.title,\n              data: newArr\n            }\n            arr.push(oneGreep)\n          }\n          newArr = []\n        })\n        let letterArr = []\n        arr.forEach((item, index) => {\n          letterArr.push(item.title)\n        })\n        setPhoneList(arr)\n        setLetterList(letterArr)\n      } else {\n        setPhoneList(phoneListCopy)\n        setLetterList(letterListCopy)\n      }\n    }\n  }, [searchText]);\n\n  return (\n    <div id=\"phoneBook\">\n      <div className=\"phone\">\n        {_phoneList()}\n      </div>\n      <div className=\"litter\">\n        {_letterList()}\n      </div>\n    </div >\n  )\n}\n\nPhoneBook.propTypes = {\n  listDate: PropTypes.array,\n  selectFun: PropTypes.func,\n  searchText: PropTypes.string,\n  confirmSelectBreed: PropTypes.number\n}\nPhoneBook.defaultProps = {\n  listDate: [],\n  selectFun: () => { },\n  searchText: '',\n  confirmSelectBreed: -1,\n}\n\nexport default PhoneBook\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/axios/http.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/scanPet.jsx",["701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil5.js",["735","736","737","738"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/addScheduledPet/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/numericInput.jsx",["739","740"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/electronStore.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/hardwareAction.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/joinOrganizationByOption/index.jsx",["741","742","743","744"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/signUpVerifyEmail/index.jsx",["745"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/newOrganization/index.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/maxminreturn/MaxMinReturn.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/inviteTeam/index.jsx",["746","747","748"],{"ruleId":"749","severity":1,"message":"750","line":10,"column":5,"nodeType":"751","messageId":"752","endLine":10,"endColumn":12},{"ruleId":"749","severity":1,"message":"753","line":15,"column":7,"nodeType":"751","messageId":"752","endLine":15,"endColumn":15},{"ruleId":"749","severity":1,"message":"754","line":18,"column":5,"nodeType":"751","messageId":"752","endLine":18,"endColumn":9},{"ruleId":"755","severity":1,"message":"756","line":46,"column":3,"nodeType":"757","messageId":"758","endLine":55,"endColumn":47},{"ruleId":"755","severity":1,"message":"756","line":74,"column":3,"nodeType":"757","messageId":"758","endLine":76,"endColumn":46},{"ruleId":"749","severity":1,"message":"759","line":79,"column":5,"nodeType":"751","messageId":"752","endLine":79,"endColumn":16},{"ruleId":"749","severity":1,"message":"760","line":102,"column":5,"nodeType":"751","messageId":"752","endLine":102,"endColumn":10},{"ruleId":"761","replacedBy":"762"},{"ruleId":"763","replacedBy":"764"},{"ruleId":"765","severity":1,"message":"766","line":163,"column":6,"nodeType":"767","endLine":163,"endColumn":23,"suggestions":"768"},{"ruleId":"761","replacedBy":"769"},{"ruleId":"763","replacedBy":"770"},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"772","line":9,"column":10,"nodeType":"751","messageId":"752","endLine":9,"endColumn":13},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"772","line":9,"column":10,"nodeType":"751","messageId":"752","endLine":9,"endColumn":13},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"773","line":10,"column":8,"nodeType":"751","messageId":"752","endLine":10,"endColumn":13},{"ruleId":"749","severity":1,"message":"774","line":19,"column":8,"nodeType":"751","messageId":"752","endLine":19,"endColumn":15},{"ruleId":"749","severity":1,"message":"775","line":21,"column":8,"nodeType":"751","messageId":"752","endLine":21,"endColumn":17},{"ruleId":"749","severity":1,"message":"776","line":22,"column":8,"nodeType":"751","messageId":"752","endLine":22,"endColumn":14},{"ruleId":"749","severity":1,"message":"777","line":33,"column":9,"nodeType":"751","messageId":"752","endLine":33,"endColumn":15},{"ruleId":"778","severity":1,"message":"779","line":103,"column":5,"nodeType":"780","messageId":"781","endLine":109,"endColumn":6},{"ruleId":"782","severity":1,"message":"783","line":116,"column":41,"nodeType":"784","messageId":"785","endLine":116,"endColumn":43},{"ruleId":"782","severity":1,"message":"783","line":154,"column":41,"nodeType":"784","messageId":"785","endLine":154,"endColumn":43},{"ruleId":"749","severity":1,"message":"786","line":261,"column":11,"nodeType":"751","messageId":"752","endLine":261,"endColumn":21},{"ruleId":"749","severity":1,"message":"787","line":261,"column":49,"nodeType":"751","messageId":"752","endLine":261,"endColumn":55},{"ruleId":"788","severity":1,"message":"789","line":511,"column":15,"nodeType":"790","endLine":511,"endColumn":63},{"ruleId":"788","severity":1,"message":"789","line":541,"column":15,"nodeType":"790","endLine":541,"endColumn":63},{"ruleId":"778","severity":1,"message":"779","line":562,"column":5,"nodeType":"780","messageId":"781","endLine":565,"endColumn":6},{"ruleId":"778","severity":1,"message":"779","line":566,"column":5,"nodeType":"780","messageId":"781","endLine":569,"endColumn":6},{"ruleId":"749","severity":1,"message":"791","line":682,"column":32,"nodeType":"751","messageId":"752","endLine":682,"endColumn":41},{"ruleId":"749","severity":1,"message":"792","line":685,"column":26,"nodeType":"751","messageId":"752","endLine":685,"endColumn":29},{"ruleId":"749","severity":1,"message":"793","line":753,"column":13,"nodeType":"751","messageId":"752","endLine":753,"endColumn":23},{"ruleId":"749","severity":1,"message":"794","line":753,"column":25,"nodeType":"751","messageId":"752","endLine":753,"endColumn":33},{"ruleId":"749","severity":1,"message":"795","line":753,"column":35,"nodeType":"751","messageId":"752","endLine":753,"endColumn":41},{"ruleId":"749","severity":1,"message":"796","line":753,"column":43,"nodeType":"751","messageId":"752","endLine":753,"endColumn":51},{"ruleId":"749","severity":1,"message":"797","line":753,"column":53,"nodeType":"751","messageId":"752","endLine":753,"endColumn":70},{"ruleId":"749","severity":1,"message":"786","line":800,"column":29,"nodeType":"751","messageId":"752","endLine":800,"endColumn":39},{"ruleId":"749","severity":1,"message":"798","line":800,"column":79,"nodeType":"751","messageId":"752","endLine":800,"endColumn":84},{"ruleId":"749","severity":1,"message":"799","line":800,"column":117,"nodeType":"751","messageId":"752","endLine":800,"endColumn":139},{"ruleId":"761","replacedBy":"800"},{"ruleId":"763","replacedBy":"801"},{"ruleId":"749","severity":1,"message":"777","line":20,"column":9,"nodeType":"751","messageId":"752","endLine":20,"endColumn":15},{"ruleId":"749","severity":1,"message":"802","line":64,"column":9,"nodeType":"751","messageId":"752","endLine":64,"endColumn":22},{"ruleId":"749","severity":1,"message":"803","line":336,"column":9,"nodeType":"751","messageId":"752","endLine":336,"endColumn":25},{"ruleId":"749","severity":1,"message":"804","line":357,"column":7,"nodeType":"751","messageId":"752","endLine":357,"endColumn":17},{"ruleId":"761","replacedBy":"805"},{"ruleId":"763","replacedBy":"806"},{"ruleId":"749","severity":1,"message":"807","line":46,"column":10,"nodeType":"751","messageId":"752","endLine":46,"endColumn":23},{"ruleId":"749","severity":1,"message":"808","line":48,"column":10,"nodeType":"751","messageId":"752","endLine":48,"endColumn":22},{"ruleId":"749","severity":1,"message":"809","line":49,"column":10,"nodeType":"751","messageId":"752","endLine":49,"endColumn":23},{"ruleId":"749","severity":1,"message":"810","line":50,"column":10,"nodeType":"751","messageId":"752","endLine":50,"endColumn":21},{"ruleId":"749","severity":1,"message":"811","line":52,"column":10,"nodeType":"751","messageId":"752","endLine":52,"endColumn":24},{"ruleId":"749","severity":1,"message":"812","line":52,"column":26,"nodeType":"751","messageId":"752","endLine":52,"endColumn":43},{"ruleId":"813","severity":2,"message":"814","line":166,"column":28,"nodeType":"751","messageId":"815","endLine":166,"endColumn":34},{"ruleId":"778","severity":1,"message":"779","line":176,"column":5,"nodeType":"780","messageId":"781","endLine":195,"endColumn":6},{"ruleId":"765","severity":1,"message":"816","line":345,"column":6,"nodeType":"767","endLine":345,"endColumn":8,"suggestions":"817"},{"ruleId":"749","severity":1,"message":"818","line":33,"column":9,"nodeType":"751","messageId":"752","endLine":33,"endColumn":16},{"ruleId":"749","severity":1,"message":"819","line":40,"column":5,"nodeType":"751","messageId":"752","endLine":40,"endColumn":8},{"ruleId":"749","severity":1,"message":"820","line":116,"column":29,"nodeType":"751","messageId":"752","endLine":116,"endColumn":36},{"ruleId":"749","severity":1,"message":"821","line":116,"column":38,"nodeType":"751","messageId":"752","endLine":116,"endColumn":46},{"ruleId":"749","severity":1,"message":"822","line":116,"column":48,"nodeType":"751","messageId":"752","endLine":116,"endColumn":57},{"ruleId":"778","severity":1,"message":"779","line":160,"column":5,"nodeType":"780","messageId":"781","endLine":166,"endColumn":6},{"ruleId":"782","severity":1,"message":"783","line":173,"column":41,"nodeType":"784","messageId":"785","endLine":173,"endColumn":43},{"ruleId":"749","severity":1,"message":"786","line":464,"column":11,"nodeType":"751","messageId":"752","endLine":464,"endColumn":21},{"ruleId":"788","severity":1,"message":"789","line":724,"column":15,"nodeType":"790","endLine":724,"endColumn":63},{"ruleId":"749","severity":1,"message":"823","line":741,"column":5,"nodeType":"751","messageId":"752","endLine":741,"endColumn":12},{"ruleId":"749","severity":1,"message":"824","line":742,"column":11,"nodeType":"751","messageId":"752","endLine":742,"endColumn":20},{"ruleId":"788","severity":1,"message":"789","line":761,"column":15,"nodeType":"790","endLine":761,"endColumn":63},{"ruleId":"778","severity":1,"message":"779","line":783,"column":5,"nodeType":"780","messageId":"781","endLine":786,"endColumn":6},{"ruleId":"778","severity":1,"message":"779","line":787,"column":5,"nodeType":"780","messageId":"781","endLine":790,"endColumn":6},{"ruleId":"749","severity":1,"message":"797","line":914,"column":61,"nodeType":"751","messageId":"752","endLine":914,"endColumn":78},{"ruleId":"749","severity":1,"message":"798","line":914,"column":80,"nodeType":"751","messageId":"752","endLine":914,"endColumn":85},{"ruleId":"749","severity":1,"message":"824","line":914,"column":118,"nodeType":"751","messageId":"752","endLine":914,"endColumn":127},{"ruleId":"761","replacedBy":"825"},{"ruleId":"763","replacedBy":"826"},{"ruleId":"749","severity":1,"message":"827","line":19,"column":10,"nodeType":"751","messageId":"752","endLine":19,"endColumn":18},{"ruleId":"749","severity":1,"message":"828","line":24,"column":7,"nodeType":"751","messageId":"752","endLine":24,"endColumn":13},{"ruleId":"749","severity":1,"message":"829","line":348,"column":11,"nodeType":"751","messageId":"752","endLine":348,"endColumn":17},{"ruleId":"749","severity":1,"message":"830","line":416,"column":19,"nodeType":"751","messageId":"752","endLine":416,"endColumn":26},{"ruleId":"749","severity":1,"message":"831","line":417,"column":9,"nodeType":"751","messageId":"752","endLine":417,"endColumn":13},{"ruleId":"832","severity":1,"message":"833","line":582,"column":15,"nodeType":"790","endLine":582,"endColumn":50},{"ruleId":"761","replacedBy":"834"},{"ruleId":"763","replacedBy":"835"},{"ruleId":"749","severity":1,"message":"818","line":21,"column":9,"nodeType":"751","messageId":"752","endLine":21,"endColumn":16},{"ruleId":"749","severity":1,"message":"777","line":22,"column":9,"nodeType":"751","messageId":"752","endLine":22,"endColumn":15},{"ruleId":"749","severity":1,"message":"828","line":23,"column":7,"nodeType":"751","messageId":"752","endLine":23,"endColumn":13},{"ruleId":"749","severity":1,"message":"750","line":26,"column":5,"nodeType":"751","messageId":"752","endLine":26,"endColumn":12},{"ruleId":"749","severity":1,"message":"836","line":27,"column":5,"nodeType":"751","messageId":"752","endLine":27,"endColumn":17},{"ruleId":"749","severity":1,"message":"819","line":28,"column":5,"nodeType":"751","messageId":"752","endLine":28,"endColumn":8},{"ruleId":"749","severity":1,"message":"819","line":86,"column":61,"nodeType":"751","messageId":"752","endLine":86,"endColumn":64},{"ruleId":"749","severity":1,"message":"837","line":86,"column":66,"nodeType":"751","messageId":"752","endLine":86,"endColumn":75},{"ruleId":"832","severity":1,"message":"833","line":271,"column":15,"nodeType":"790","endLine":277,"endColumn":16},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"838","line":5,"column":3,"nodeType":"751","messageId":"752","endLine":5,"endColumn":8},{"ruleId":"749","severity":1,"message":"839","line":7,"column":3,"nodeType":"751","messageId":"752","endLine":7,"endColumn":6},{"ruleId":"749","severity":1,"message":"840","line":54,"column":16,"nodeType":"751","messageId":"752","endLine":54,"endColumn":20},{"ruleId":"749","severity":1,"message":"841","line":59,"column":5,"nodeType":"751","messageId":"752","endLine":59,"endColumn":10},{"ruleId":"788","severity":1,"message":"789","line":113,"column":18,"nodeType":"790","endLine":113,"endColumn":47},{"ruleId":"788","severity":1,"message":"789","line":115,"column":18,"nodeType":"790","endLine":115,"endColumn":47},{"ruleId":"788","severity":1,"message":"789","line":117,"column":18,"nodeType":"790","endLine":117,"endColumn":47},{"ruleId":"788","severity":1,"message":"789","line":119,"column":18,"nodeType":"790","endLine":119,"endColumn":47},{"ruleId":"788","severity":1,"message":"789","line":142,"column":11,"nodeType":"790","endLine":150,"endColumn":13},{"ruleId":"788","severity":1,"message":"789","line":155,"column":13,"nodeType":"790","endLine":155,"endColumn":63},{"ruleId":"842","severity":1,"message":"843","line":220,"column":28,"nodeType":"844","messageId":"845","endLine":220,"endColumn":30},{"ruleId":"765","severity":1,"message":"846","line":461,"column":6,"nodeType":"767","endLine":461,"endColumn":18,"suggestions":"847"},{"ruleId":"765","severity":1,"message":"848","line":469,"column":6,"nodeType":"767","endLine":469,"endColumn":8,"suggestions":"849"},{"ruleId":"778","severity":1,"message":"779","line":81,"column":13,"nodeType":"780","messageId":"781","endLine":110,"endColumn":14},{"ruleId":"749","severity":1,"message":"850","line":286,"column":45,"nodeType":"751","messageId":"752","endLine":286,"endColumn":59},{"ruleId":"749","severity":1,"message":"851","line":286,"column":61,"nodeType":"751","messageId":"752","endLine":286,"endColumn":75},{"ruleId":"749","severity":1,"message":"772","line":9,"column":10,"nodeType":"751","messageId":"752","endLine":9,"endColumn":13},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"852","line":9,"column":30,"nodeType":"751","messageId":"752","endLine":9,"endColumn":35},{"ruleId":"765","severity":1,"message":"853","line":235,"column":6,"nodeType":"767","endLine":235,"endColumn":26,"suggestions":"854"},{"ruleId":"778","severity":1,"message":"779","line":424,"column":9,"nodeType":"780","messageId":"781","endLine":431,"endColumn":10},{"ruleId":"749","severity":1,"message":"855","line":631,"column":15,"nodeType":"751","messageId":"752","endLine":631,"endColumn":25},{"ruleId":"749","severity":1,"message":"856","line":675,"column":17,"nodeType":"751","messageId":"752","endLine":675,"endColumn":26},{"ruleId":"749","severity":1,"message":"857","line":816,"column":13,"nodeType":"751","messageId":"752","endLine":816,"endColumn":16},{"ruleId":"749","severity":1,"message":"858","line":819,"column":15,"nodeType":"751","messageId":"752","endLine":819,"endColumn":30},{"ruleId":"749","severity":1,"message":"859","line":821,"column":15,"nodeType":"751","messageId":"752","endLine":821,"endColumn":30},{"ruleId":"749","severity":1,"message":"856","line":889,"column":17,"nodeType":"751","messageId":"752","endLine":889,"endColumn":26},{"ruleId":"749","severity":1,"message":"860","line":998,"column":11,"nodeType":"751","messageId":"752","endLine":998,"endColumn":22},{"ruleId":"765","severity":1,"message":"861","line":55,"column":8,"nodeType":"767","endLine":55,"endColumn":10,"suggestions":"862"},{"ruleId":"765","severity":1,"message":"863","line":97,"column":8,"nodeType":"767","endLine":97,"endColumn":38,"suggestions":"864"},{"ruleId":"761","replacedBy":"865"},{"ruleId":"763","replacedBy":"866"},{"ruleId":"761","replacedBy":"867"},{"ruleId":"763","replacedBy":"868"},{"ruleId":"749","severity":1,"message":"869","line":4,"column":3,"nodeType":"751","messageId":"752","endLine":4,"endColumn":10},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"852","line":9,"column":30,"nodeType":"751","messageId":"752","endLine":9,"endColumn":35},{"ruleId":"749","severity":1,"message":"777","line":22,"column":9,"nodeType":"751","messageId":"752","endLine":22,"endColumn":15},{"ruleId":"749","severity":1,"message":"870","line":45,"column":11,"nodeType":"751","messageId":"752","endLine":45,"endColumn":17},{"ruleId":"749","severity":1,"message":"871","line":45,"column":19,"nodeType":"751","messageId":"752","endLine":45,"endColumn":24},{"ruleId":"749","severity":1,"message":"802","line":61,"column":9,"nodeType":"751","messageId":"752","endLine":61,"endColumn":22},{"ruleId":"749","severity":1,"message":"822","line":144,"column":18,"nodeType":"751","messageId":"752","endLine":144,"endColumn":27},{"ruleId":"749","severity":1,"message":"821","line":144,"column":29,"nodeType":"751","messageId":"752","endLine":144,"endColumn":37},{"ruleId":"788","severity":1,"message":"789","line":544,"column":19,"nodeType":"790","endLine":551,"endColumn":61},{"ruleId":"832","severity":1,"message":"833","line":559,"column":19,"nodeType":"790","endLine":567,"endColumn":30},{"ruleId":"788","severity":1,"message":"789","line":34,"column":11,"nodeType":"790","endLine":37,"endColumn":13},{"ruleId":"788","severity":1,"message":"789","line":43,"column":13,"nodeType":"790","endLine":46,"endColumn":15},{"ruleId":"788","severity":1,"message":"789","line":51,"column":11,"nodeType":"790","endLine":54,"endColumn":13},{"ruleId":"788","severity":1,"message":"789","line":64,"column":11,"nodeType":"790","endLine":67,"endColumn":13},{"ruleId":"749","severity":1,"message":"872","line":9,"column":15,"nodeType":"751","messageId":"752","endLine":9,"endColumn":23},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"852","line":9,"column":30,"nodeType":"751","messageId":"752","endLine":9,"endColumn":35},{"ruleId":"749","severity":1,"message":"873","line":19,"column":5,"nodeType":"751","messageId":"752","endLine":19,"endColumn":10},{"ruleId":"778","severity":1,"message":"779","line":165,"column":9,"nodeType":"780","messageId":"781","endLine":183,"endColumn":10},{"ruleId":"749","severity":1,"message":"777","line":7,"column":9,"nodeType":"751","messageId":"752","endLine":7,"endColumn":15},{"ruleId":"749","severity":1,"message":"870","line":20,"column":11,"nodeType":"751","messageId":"752","endLine":20,"endColumn":17},{"ruleId":"749","severity":1,"message":"871","line":20,"column":19,"nodeType":"751","messageId":"752","endLine":20,"endColumn":24},{"ruleId":"749","severity":1,"message":"802","line":109,"column":9,"nodeType":"751","messageId":"752","endLine":109,"endColumn":22},{"ruleId":"749","severity":1,"message":"750","line":16,"column":5,"nodeType":"751","messageId":"752","endLine":16,"endColumn":12},{"ruleId":"765","severity":1,"message":"874","line":53,"column":6,"nodeType":"767","endLine":53,"endColumn":41,"suggestions":"875"},{"ruleId":"749","severity":1,"message":"772","line":9,"column":10,"nodeType":"751","messageId":"752","endLine":9,"endColumn":13},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"872","line":9,"column":15,"nodeType":"751","messageId":"752","endLine":9,"endColumn":23},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"772","line":9,"column":10,"nodeType":"751","messageId":"752","endLine":9,"endColumn":13},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"872","line":9,"column":15,"nodeType":"751","messageId":"752","endLine":9,"endColumn":23},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"852","line":9,"column":30,"nodeType":"751","messageId":"752","endLine":9,"endColumn":35},{"ruleId":"765","severity":1,"message":"876","line":85,"column":6,"nodeType":"767","endLine":85,"endColumn":8,"suggestions":"877"},{"ruleId":"778","severity":1,"message":"779","line":77,"column":11,"nodeType":"780","messageId":"781","endLine":98,"endColumn":12},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"772","line":9,"column":10,"nodeType":"751","messageId":"752","endLine":9,"endColumn":13},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"772","line":9,"column":10,"nodeType":"751","messageId":"752","endLine":9,"endColumn":13},{"ruleId":"749","severity":1,"message":"771","line":9,"column":25,"nodeType":"751","messageId":"752","endLine":9,"endColumn":28},{"ruleId":"749","severity":1,"message":"852","line":9,"column":30,"nodeType":"751","messageId":"752","endLine":9,"endColumn":35},{"ruleId":"749","severity":1,"message":"878","line":13,"column":10,"nodeType":"751","messageId":"752","endLine":13,"endColumn":12},{"ruleId":"749","severity":1,"message":"879","line":13,"column":14,"nodeType":"751","messageId":"752","endLine":13,"endColumn":16},{"ruleId":"749","severity":1,"message":"880","line":1,"column":27,"nodeType":"751","messageId":"752","endLine":1,"endColumn":36},{"ruleId":"749","severity":1,"message":"881","line":8,"column":10,"nodeType":"751","messageId":"752","endLine":8,"endColumn":14},{"ruleId":"749","severity":1,"message":"882","line":8,"column":20,"nodeType":"751","messageId":"752","endLine":8,"endColumn":24},{"ruleId":"749","severity":1,"message":"883","line":18,"column":7,"nodeType":"751","messageId":"752","endLine":18,"endColumn":14},{"ruleId":"749","severity":1,"message":"884","line":63,"column":13,"nodeType":"751","messageId":"752","endLine":63,"endColumn":19},{"ruleId":"749","severity":1,"message":"885","line":67,"column":13,"nodeType":"751","messageId":"752","endLine":67,"endColumn":20},{"ruleId":"832","severity":1,"message":"833","line":155,"column":9,"nodeType":"790","endLine":171,"endColumn":10},{"ruleId":"778","severity":1,"message":"779","line":219,"column":15,"nodeType":"780","messageId":"781","endLine":238,"endColumn":16},{"ruleId":"765","severity":1,"message":"886","line":27,"column":8,"nodeType":"767","endLine":27,"endColumn":10,"suggestions":"887"},{"ruleId":"749","severity":1,"message":"888","line":23,"column":10,"nodeType":"751","messageId":"752","endLine":23,"endColumn":28},{"ruleId":"749","severity":1,"message":"878","line":26,"column":10,"nodeType":"751","messageId":"752","endLine":26,"endColumn":12},{"ruleId":"749","severity":1,"message":"889","line":29,"column":26,"nodeType":"751","messageId":"752","endLine":29,"endColumn":32},{"ruleId":"749","severity":1,"message":"890","line":29,"column":34,"nodeType":"751","messageId":"752","endLine":29,"endColumn":39},{"ruleId":"765","severity":1,"message":"891","line":116,"column":6,"nodeType":"767","endLine":116,"endColumn":8,"suggestions":"892"},{"ruleId":"788","severity":1,"message":"789","line":168,"column":19,"nodeType":"790","endLine":168,"endColumn":47},{"ruleId":"749","severity":1,"message":"880","line":1,"column":17,"nodeType":"751","messageId":"752","endLine":1,"endColumn":26},{"ruleId":"749","severity":1,"message":"893","line":1,"column":38,"nodeType":"751","messageId":"752","endLine":1,"endColumn":44},{"ruleId":"749","severity":1,"message":"894","line":2,"column":10,"nodeType":"751","messageId":"752","endLine":2,"endColumn":16},{"ruleId":"749","severity":1,"message":"895","line":2,"column":26,"nodeType":"751","messageId":"752","endLine":2,"endColumn":31},{"ruleId":"749","severity":1,"message":"896","line":17,"column":8,"nodeType":"751","messageId":"752","endLine":17,"endColumn":14},{"ruleId":"749","severity":1,"message":"880","line":2,"column":27,"nodeType":"751","messageId":"752","endLine":2,"endColumn":36},{"ruleId":"749","severity":1,"message":"881","line":7,"column":14,"nodeType":"751","messageId":"752","endLine":7,"endColumn":18},{"ruleId":"749","severity":1,"message":"897","line":50,"column":7,"nodeType":"751","messageId":"752","endLine":50,"endColumn":10},{"ruleId":"749","severity":1,"message":"883","line":51,"column":7,"nodeType":"751","messageId":"752","endLine":51,"endColumn":14},{"ruleId":"749","severity":1,"message":"898","line":54,"column":10,"nodeType":"751","messageId":"752","endLine":54,"endColumn":18},{"ruleId":"749","severity":1,"message":"899","line":54,"column":20,"nodeType":"751","messageId":"752","endLine":54,"endColumn":31},{"ruleId":"749","severity":1,"message":"900","line":121,"column":9,"nodeType":"751","messageId":"752","endLine":121,"endColumn":18},{"ruleId":"901","severity":1,"message":"902","line":291,"column":59,"nodeType":"844","messageId":"903","endLine":291,"endColumn":60},{"ruleId":"749","severity":1,"message":"777","line":21,"column":9,"nodeType":"751","messageId":"752","endLine":21,"endColumn":15},{"ruleId":"749","severity":1,"message":"870","line":37,"column":11,"nodeType":"751","messageId":"752","endLine":37,"endColumn":17},{"ruleId":"749","severity":1,"message":"871","line":37,"column":19,"nodeType":"751","messageId":"752","endLine":37,"endColumn":24},{"ruleId":"749","severity":1,"message":"802","line":53,"column":9,"nodeType":"751","messageId":"752","endLine":53,"endColumn":22},{"ruleId":"749","severity":1,"message":"904","line":72,"column":11,"nodeType":"751","messageId":"752","endLine":72,"endColumn":19},{"ruleId":"749","severity":1,"message":"802","line":57,"column":9,"nodeType":"751","messageId":"752","endLine":57,"endColumn":22},{"ruleId":"749","severity":1,"message":"802","line":87,"column":9,"nodeType":"751","messageId":"752","endLine":87,"endColumn":22},{"ruleId":"782","severity":1,"message":"783","line":199,"column":41,"nodeType":"784","messageId":"785","endLine":199,"endColumn":43},{"ruleId":"782","severity":1,"message":"783","line":212,"column":47,"nodeType":"784","messageId":"785","endLine":212,"endColumn":49},{"ruleId":"749","severity":1,"message":"905","line":417,"column":23,"nodeType":"751","messageId":"752","endLine":417,"endColumn":28},{"ruleId":"749","severity":1,"message":"906","line":2,"column":10,"nodeType":"751","messageId":"752","endLine":2,"endColumn":23},{"ruleId":"749","severity":1,"message":"907","line":3,"column":16,"nodeType":"751","messageId":"752","endLine":3,"endColumn":23},{"ruleId":"749","severity":1,"message":"776","line":3,"column":25,"nodeType":"751","messageId":"752","endLine":3,"endColumn":31},{"ruleId":"749","severity":1,"message":"908","line":3,"column":33,"nodeType":"751","messageId":"752","endLine":3,"endColumn":38},{"ruleId":"749","severity":1,"message":"909","line":5,"column":10,"nodeType":"751","messageId":"752","endLine":5,"endColumn":22},{"ruleId":"749","severity":1,"message":"910","line":6,"column":10,"nodeType":"751","messageId":"752","endLine":6,"endColumn":24},{"ruleId":"749","severity":1,"message":"911","line":16,"column":8,"nodeType":"751","messageId":"752","endLine":16,"endColumn":16},{"ruleId":"749","severity":1,"message":"912","line":23,"column":8,"nodeType":"751","messageId":"752","endLine":23,"endColumn":17},{"ruleId":"749","severity":1,"message":"913","line":24,"column":8,"nodeType":"751","messageId":"752","endLine":24,"endColumn":21},{"ruleId":"749","severity":1,"message":"914","line":26,"column":8,"nodeType":"751","messageId":"752","endLine":26,"endColumn":16},{"ruleId":"749","severity":1,"message":"915","line":37,"column":8,"nodeType":"751","messageId":"752","endLine":37,"endColumn":15},{"ruleId":"749","severity":1,"message":"818","line":40,"column":9,"nodeType":"751","messageId":"752","endLine":40,"endColumn":16},{"ruleId":"749","severity":1,"message":"828","line":41,"column":7,"nodeType":"751","messageId":"752","endLine":41,"endColumn":13},{"ruleId":"749","severity":1,"message":"916","line":45,"column":7,"nodeType":"751","messageId":"752","endLine":45,"endColumn":17},{"ruleId":"749","severity":1,"message":"917","line":98,"column":10,"nodeType":"751","messageId":"752","endLine":98,"endColumn":19},{"ruleId":"749","severity":1,"message":"918","line":98,"column":21,"nodeType":"751","messageId":"752","endLine":98,"endColumn":33},{"ruleId":"749","severity":1,"message":"919","line":130,"column":10,"nodeType":"751","messageId":"752","endLine":130,"endColumn":19},{"ruleId":"749","severity":1,"message":"920","line":213,"column":13,"nodeType":"751","messageId":"752","endLine":213,"endColumn":20},{"ruleId":"788","severity":1,"message":"789","line":815,"column":17,"nodeType":"790","endLine":815,"endColumn":62},{"ruleId":"788","severity":1,"message":"789","line":820,"column":17,"nodeType":"790","endLine":820,"endColumn":65},{"ruleId":"832","severity":1,"message":"833","line":875,"column":15,"nodeType":"790","endLine":881,"endColumn":16},{"ruleId":"832","severity":1,"message":"833","line":884,"column":15,"nodeType":"790","endLine":890,"endColumn":16},{"ruleId":"788","severity":1,"message":"789","line":984,"column":17,"nodeType":"790","endLine":984,"endColumn":62},{"ruleId":"788","severity":1,"message":"789","line":988,"column":15,"nodeType":"790","endLine":988,"endColumn":64},{"ruleId":"832","severity":1,"message":"833","line":1106,"column":13,"nodeType":"790","endLine":1110,"endColumn":14},{"ruleId":"832","severity":1,"message":"833","line":1187,"column":15,"nodeType":"790","endLine":1195,"endColumn":16},{"ruleId":"832","severity":1,"message":"833","line":1210,"column":13,"nodeType":"790","endLine":1210,"endColumn":76},{"ruleId":"832","severity":1,"message":"833","line":1281,"column":15,"nodeType":"790","endLine":1289,"endColumn":16},{"ruleId":"832","severity":1,"message":"833","line":1313,"column":15,"nodeType":"790","endLine":1317,"endColumn":16},{"ruleId":"749","severity":1,"message":"921","line":1343,"column":9,"nodeType":"751","messageId":"752","endLine":1343,"endColumn":15},{"ruleId":"765","severity":1,"message":"922","line":1379,"column":6,"nodeType":"767","endLine":1379,"endColumn":8,"suggestions":"923"},{"ruleId":"765","severity":1,"message":"924","line":1383,"column":6,"nodeType":"767","endLine":1383,"endColumn":32,"suggestions":"925"},{"ruleId":"788","severity":1,"message":"789","line":1405,"column":15,"nodeType":"790","endLine":1405,"endColumn":59},{"ruleId":"788","severity":1,"message":"789","line":1580,"column":19,"nodeType":"790","endLine":1580,"endColumn":54},{"ruleId":"788","severity":1,"message":"789","line":1582,"column":19,"nodeType":"790","endLine":1582,"endColumn":53},{"ruleId":"749","severity":1,"message":"926","line":16,"column":10,"nodeType":"751","messageId":"752","endLine":16,"endColumn":19},{"ruleId":"749","severity":1,"message":"927","line":16,"column":21,"nodeType":"751","messageId":"752","endLine":16,"endColumn":37},{"ruleId":"749","severity":1,"message":"823","line":22,"column":7,"nodeType":"751","messageId":"752","endLine":22,"endColumn":14},{"ruleId":"749","severity":1,"message":"796","line":202,"column":21,"nodeType":"751","messageId":"752","endLine":202,"endColumn":29},{"ruleId":"749","severity":1,"message":"928","line":202,"column":31,"nodeType":"751","messageId":"752","endLine":202,"endColumn":37},{"ruleId":"832","severity":1,"message":"833","line":362,"column":36,"nodeType":"790","endLine":362,"endColumn":71},{"ruleId":"749","severity":1,"message":"880","line":2,"column":27,"nodeType":"751","messageId":"752","endLine":2,"endColumn":36},{"ruleId":"749","severity":1,"message":"929","line":3,"column":10,"nodeType":"751","messageId":"752","endLine":3,"endColumn":20},{"ruleId":"749","severity":1,"message":"881","line":8,"column":14,"nodeType":"751","messageId":"752","endLine":8,"endColumn":18},{"ruleId":"749","severity":1,"message":"880","line":1,"column":17,"nodeType":"751","messageId":"752","endLine":1,"endColumn":26},{"ruleId":"749","severity":1,"message":"893","line":1,"column":38,"nodeType":"751","messageId":"752","endLine":1,"endColumn":44},{"ruleId":"749","severity":1,"message":"894","line":2,"column":10,"nodeType":"751","messageId":"752","endLine":2,"endColumn":16},{"ruleId":"749","severity":1,"message":"895","line":2,"column":26,"nodeType":"751","messageId":"752","endLine":2,"endColumn":31},{"ruleId":"749","severity":1,"message":"930","line":2,"column":33,"nodeType":"751","messageId":"752","endLine":2,"endColumn":38},{"ruleId":"749","severity":1,"message":"896","line":17,"column":8,"nodeType":"751","messageId":"752","endLine":17,"endColumn":14},{"ruleId":"749","severity":1,"message":"931","line":18,"column":8,"nodeType":"751","messageId":"752","endLine":18,"endColumn":9},{"ruleId":"765","severity":1,"message":"932","line":145,"column":6,"nodeType":"767","endLine":145,"endColumn":8,"suggestions":"933"},{"ruleId":"765","severity":1,"message":"934","line":152,"column":6,"nodeType":"767","endLine":152,"endColumn":19,"suggestions":"935"},{"ruleId":"765","severity":1,"message":"876","line":162,"column":6,"nodeType":"767","endLine":162,"endColumn":8,"suggestions":"936"},{"ruleId":"749","severity":1,"message":"937","line":2,"column":10,"nodeType":"751","messageId":"752","endLine":2,"endColumn":15},{"ruleId":"749","severity":1,"message":"878","line":15,"column":10,"nodeType":"751","messageId":"752","endLine":15,"endColumn":12},{"ruleId":"749","severity":1,"message":"896","line":28,"column":8,"nodeType":"751","messageId":"752","endLine":28,"endColumn":14},{"ruleId":"749","severity":1,"message":"938","line":31,"column":18,"nodeType":"751","messageId":"752","endLine":31,"endColumn":24},{"ruleId":"765","severity":1,"message":"939","line":76,"column":6,"nodeType":"767","endLine":76,"endColumn":21,"suggestions":"940"},{"ruleId":"788","severity":1,"message":"789","line":120,"column":17,"nodeType":"790","endLine":120,"endColumn":74},{"ruleId":"788","severity":1,"message":"789","line":138,"column":21,"nodeType":"790","endLine":138,"endColumn":69},{"ruleId":"788","severity":1,"message":"789","line":158,"column":25,"nodeType":"790","endLine":165,"endColumn":27},{"ruleId":"749","severity":1,"message":"776","line":2,"column":10,"nodeType":"751","messageId":"752","endLine":2,"endColumn":16},{"ruleId":"749","severity":1,"message":"941","line":2,"column":36,"nodeType":"751","messageId":"752","endLine":2,"endColumn":44},{"ruleId":"749","severity":1,"message":"942","line":3,"column":10,"nodeType":"751","messageId":"752","endLine":3,"endColumn":22},{"ruleId":"749","severity":1,"message":"938","line":24,"column":18,"nodeType":"751","messageId":"752","endLine":24,"endColumn":24},{"ruleId":"749","severity":1,"message":"943","line":28,"column":10,"nodeType":"751","messageId":"752","endLine":28,"endColumn":17},{"ruleId":"749","severity":1,"message":"944","line":28,"column":19,"nodeType":"751","messageId":"752","endLine":28,"endColumn":29},{"ruleId":"788","severity":1,"message":"789","line":63,"column":16,"nodeType":"790","endLine":63,"endColumn":41},{"ruleId":"788","severity":1,"message":"789","line":65,"column":16,"nodeType":"790","endLine":65,"endColumn":41},{"ruleId":"788","severity":1,"message":"789","line":67,"column":16,"nodeType":"790","endLine":67,"endColumn":41},{"ruleId":"788","severity":1,"message":"789","line":69,"column":16,"nodeType":"790","endLine":69,"endColumn":41},{"ruleId":"765","severity":1,"message":"945","line":75,"column":3,"nodeType":"751","endLine":75,"endColumn":12,"suggestions":"946"},{"ruleId":"749","severity":1,"message":"880","line":1,"column":17,"nodeType":"751","messageId":"752","endLine":1,"endColumn":26},{"ruleId":"749","severity":1,"message":"947","line":1,"column":28,"nodeType":"751","messageId":"752","endLine":1,"endColumn":36},{"ruleId":"749","severity":1,"message":"893","line":1,"column":38,"nodeType":"751","messageId":"752","endLine":1,"endColumn":44},{"ruleId":"749","severity":1,"message":"896","line":11,"column":8,"nodeType":"751","messageId":"752","endLine":11,"endColumn":14},{"ruleId":"749","severity":1,"message":"931","line":12,"column":8,"nodeType":"751","messageId":"752","endLine":12,"endColumn":9},{"ruleId":"749","severity":1,"message":"948","line":3,"column":10,"nodeType":"751","messageId":"752","endLine":3,"endColumn":24},{"ruleId":"749","severity":1,"message":"776","line":3,"column":3,"nodeType":"751","messageId":"752","endLine":3,"endColumn":9},{"ruleId":"749","severity":1,"message":"949","line":4,"column":3,"nodeType":"751","messageId":"752","endLine":4,"endColumn":11},{"ruleId":"749","severity":1,"message":"838","line":5,"column":3,"nodeType":"751","messageId":"752","endLine":5,"endColumn":8},{"ruleId":"749","severity":1,"message":"839","line":7,"column":3,"nodeType":"751","messageId":"752","endLine":7,"endColumn":6},{"ruleId":"749","severity":1,"message":"878","line":30,"column":10,"nodeType":"751","messageId":"752","endLine":30,"endColumn":12},{"ruleId":"749","severity":1,"message":"950","line":43,"column":9,"nodeType":"751","messageId":"752","endLine":43,"endColumn":26},{"ruleId":"749","severity":1,"message":"951","line":43,"column":28,"nodeType":"751","messageId":"752","endLine":43,"endColumn":46},{"ruleId":"749","severity":1,"message":"952","line":43,"column":48,"nodeType":"751","messageId":"752","endLine":43,"endColumn":64},{"ruleId":"749","severity":1,"message":"840","line":45,"column":16,"nodeType":"751","messageId":"752","endLine":45,"endColumn":20},{"ruleId":"749","severity":1,"message":"841","line":51,"column":5,"nodeType":"751","messageId":"752","endLine":51,"endColumn":10},{"ruleId":"749","severity":1,"message":"953","line":58,"column":10,"nodeType":"751","messageId":"752","endLine":58,"endColumn":18},{"ruleId":"749","severity":1,"message":"954","line":58,"column":20,"nodeType":"751","messageId":"752","endLine":58,"endColumn":31},{"ruleId":"788","severity":1,"message":"789","line":136,"column":11,"nodeType":"790","endLine":143,"endColumn":13},{"ruleId":"788","severity":1,"message":"789","line":148,"column":13,"nodeType":"790","endLine":148,"endColumn":33},{"ruleId":"788","severity":1,"message":"789","line":196,"column":18,"nodeType":"790","endLine":196,"endColumn":47},{"ruleId":"788","severity":1,"message":"789","line":198,"column":18,"nodeType":"790","endLine":198,"endColumn":47},{"ruleId":"788","severity":1,"message":"789","line":200,"column":18,"nodeType":"790","endLine":200,"endColumn":47},{"ruleId":"788","severity":1,"message":"789","line":202,"column":18,"nodeType":"790","endLine":202,"endColumn":47},{"ruleId":"788","severity":1,"message":"789","line":226,"column":11,"nodeType":"790","endLine":233,"endColumn":13},{"ruleId":"788","severity":1,"message":"789","line":238,"column":13,"nodeType":"790","endLine":238,"endColumn":63},{"ruleId":"765","severity":1,"message":"846","line":346,"column":6,"nodeType":"767","endLine":346,"endColumn":18,"suggestions":"955"},{"ruleId":"765","severity":1,"message":"956","line":354,"column":6,"nodeType":"767","endLine":354,"endColumn":15,"suggestions":"957"},{"ruleId":"765","severity":1,"message":"848","line":362,"column":6,"nodeType":"767","endLine":362,"endColumn":8,"suggestions":"958"},{"ruleId":"749","severity":1,"message":"869","line":5,"column":3,"nodeType":"751","messageId":"752","endLine":5,"endColumn":10},{"ruleId":"749","severity":1,"message":"910","line":10,"column":10,"nodeType":"751","messageId":"752","endLine":10,"endColumn":24},{"ruleId":"749","severity":1,"message":"959","line":28,"column":19,"nodeType":"751","messageId":"752","endLine":28,"endColumn":29},{"ruleId":"749","severity":1,"message":"960","line":29,"column":21,"nodeType":"751","messageId":"752","endLine":29,"endColumn":33},{"ruleId":"749","severity":1,"message":"961","line":30,"column":10,"nodeType":"751","messageId":"752","endLine":30,"endColumn":17},{"ruleId":"749","severity":1,"message":"962","line":34,"column":19,"nodeType":"751","messageId":"752","endLine":34,"endColumn":29},{"ruleId":"765","severity":1,"message":"876","line":83,"column":6,"nodeType":"767","endLine":83,"endColumn":8,"suggestions":"963"},{"ruleId":"749","severity":1,"message":"964","line":3,"column":3,"nodeType":"751","messageId":"752","endLine":3,"endColumn":7},{"ruleId":"749","severity":1,"message":"907","line":4,"column":3,"nodeType":"751","messageId":"752","endLine":4,"endColumn":10},{"ruleId":"749","severity":1,"message":"776","line":5,"column":3,"nodeType":"751","messageId":"752","endLine":5,"endColumn":9},{"ruleId":"749","severity":1,"message":"908","line":6,"column":3,"nodeType":"751","messageId":"752","endLine":6,"endColumn":8},{"ruleId":"832","severity":1,"message":"965","line":67,"column":11,"nodeType":"790","endLine":72,"endColumn":12},{"ruleId":"842","severity":1,"message":"966","line":135,"column":24,"nodeType":"844","messageId":"845","endLine":135,"endColumn":26},{"ruleId":"782","severity":1,"message":"783","line":157,"column":31,"nodeType":"784","messageId":"785","endLine":157,"endColumn":33},{"ruleId":"842","severity":1,"message":"843","line":165,"column":29,"nodeType":"844","messageId":"845","endLine":165,"endColumn":31},{"ruleId":"765","severity":1,"message":"967","line":185,"column":6,"nodeType":"767","endLine":185,"endColumn":18,"suggestions":"968"},{"ruleId":"749","severity":1,"message":"893","line":1,"column":38,"nodeType":"751","messageId":"752","endLine":1,"endColumn":44},{"ruleId":"749","severity":1,"message":"964","line":5,"column":3,"nodeType":"751","messageId":"752","endLine":5,"endColumn":7},{"ruleId":"749","severity":1,"message":"969","line":6,"column":3,"nodeType":"751","messageId":"752","endLine":6,"endColumn":13},{"ruleId":"749","severity":1,"message":"941","line":13,"column":3,"nodeType":"751","messageId":"752","endLine":13,"endColumn":11},{"ruleId":"749","severity":1,"message":"970","line":39,"column":8,"nodeType":"751","messageId":"752","endLine":39,"endColumn":18},{"ruleId":"749","severity":1,"message":"774","line":42,"column":8,"nodeType":"751","messageId":"752","endLine":42,"endColumn":15},{"ruleId":"749","severity":1,"message":"938","line":45,"column":18,"nodeType":"751","messageId":"752","endLine":45,"endColumn":24},{"ruleId":"749","severity":1,"message":"791","line":55,"column":28,"nodeType":"751","messageId":"752","endLine":55,"endColumn":37},{"ruleId":"749","severity":1,"message":"971","line":56,"column":58,"nodeType":"751","messageId":"752","endLine":56,"endColumn":76},{"ruleId":"749","severity":1,"message":"972","line":60,"column":10,"nodeType":"751","messageId":"752","endLine":60,"endColumn":17},{"ruleId":"749","severity":1,"message":"973","line":60,"column":19,"nodeType":"751","messageId":"752","endLine":60,"endColumn":29},{"ruleId":"749","severity":1,"message":"974","line":68,"column":10,"nodeType":"751","messageId":"752","endLine":68,"endColumn":19},{"ruleId":"749","severity":1,"message":"975","line":69,"column":10,"nodeType":"751","messageId":"752","endLine":69,"endColumn":25},{"ruleId":"749","severity":1,"message":"976","line":69,"column":27,"nodeType":"751","messageId":"752","endLine":69,"endColumn":45},{"ruleId":"788","severity":1,"message":"789","line":160,"column":11,"nodeType":"790","endLine":160,"endColumn":29},{"ruleId":"788","severity":1,"message":"789","line":162,"column":11,"nodeType":"790","endLine":162,"endColumn":32},{"ruleId":"788","severity":1,"message":"789","line":166,"column":11,"nodeType":"790","endLine":166,"endColumn":29},{"ruleId":"788","severity":1,"message":"789","line":168,"column":11,"nodeType":"790","endLine":168,"endColumn":32},{"ruleId":"788","severity":1,"message":"789","line":172,"column":11,"nodeType":"790","endLine":172,"endColumn":30},{"ruleId":"788","severity":1,"message":"789","line":174,"column":11,"nodeType":"790","endLine":174,"endColumn":33},{"ruleId":"788","severity":1,"message":"789","line":178,"column":11,"nodeType":"790","endLine":178,"endColumn":30},{"ruleId":"788","severity":1,"message":"789","line":180,"column":11,"nodeType":"790","endLine":180,"endColumn":33},{"ruleId":"788","severity":1,"message":"789","line":184,"column":11,"nodeType":"790","endLine":184,"endColumn":29},{"ruleId":"788","severity":1,"message":"789","line":186,"column":11,"nodeType":"790","endLine":186,"endColumn":32},{"ruleId":"788","severity":1,"message":"789","line":190,"column":11,"nodeType":"790","endLine":190,"endColumn":29},{"ruleId":"788","severity":1,"message":"789","line":192,"column":11,"nodeType":"790","endLine":192,"endColumn":32},{"ruleId":"788","severity":1,"message":"789","line":196,"column":11,"nodeType":"790","endLine":196,"endColumn":29},{"ruleId":"788","severity":1,"message":"789","line":198,"column":11,"nodeType":"790","endLine":198,"endColumn":32},{"ruleId":"749","severity":1,"message":"977","line":245,"column":9,"nodeType":"751","messageId":"752","endLine":245,"endColumn":21},{"ruleId":"765","severity":1,"message":"978","line":279,"column":6,"nodeType":"767","endLine":279,"endColumn":18,"suggestions":"979"},{"ruleId":"765","severity":1,"message":"980","line":301,"column":6,"nodeType":"767","endLine":301,"endColumn":25,"suggestions":"981"},{"ruleId":"765","severity":1,"message":"982","line":332,"column":6,"nodeType":"767","endLine":332,"endColumn":13,"suggestions":"983"},{"ruleId":"765","severity":1,"message":"984","line":359,"column":6,"nodeType":"767","endLine":359,"endColumn":44,"suggestions":"985"},{"ruleId":"765","severity":1,"message":"986","line":370,"column":6,"nodeType":"767","endLine":370,"endColumn":17,"suggestions":"987"},{"ruleId":"749","severity":1,"message":"988","line":4,"column":5,"nodeType":"751","messageId":"752","endLine":4,"endColumn":10},{"ruleId":"842","severity":1,"message":"966","line":16,"column":16,"nodeType":"844","messageId":"845","endLine":16,"endColumn":18},{"ruleId":"842","severity":1,"message":"966","line":67,"column":16,"nodeType":"844","messageId":"845","endLine":67,"endColumn":18},{"ruleId":"842","severity":1,"message":"966","line":101,"column":16,"nodeType":"844","messageId":"845","endLine":101,"endColumn":18},{"ruleId":"749","severity":1,"message":"931","line":4,"column":8,"nodeType":"751","messageId":"752","endLine":4,"endColumn":9},{"ruleId":"749","severity":1,"message":"880","line":6,"column":10,"nodeType":"751","messageId":"752","endLine":6,"endColumn":19},{"ruleId":"749","severity":1,"message":"908","line":4,"column":3,"nodeType":"751","messageId":"752","endLine":4,"endColumn":8},{"ruleId":"749","severity":1,"message":"928","line":389,"column":21,"nodeType":"751","messageId":"752","endLine":389,"endColumn":27},{"ruleId":"832","severity":1,"message":"833","line":547,"column":17,"nodeType":"790","endLine":547,"endColumn":54},{"ruleId":"832","severity":1,"message":"833","line":605,"column":17,"nodeType":"790","endLine":605,"endColumn":60},{"ruleId":"749","severity":1,"message":"989","line":30,"column":9,"nodeType":"751","messageId":"752","endLine":30,"endColumn":16},{"ruleId":"778","severity":1,"message":"779","line":70,"column":25,"nodeType":"780","messageId":"781","endLine":99,"endColumn":26},{"ruleId":"749","severity":1,"message":"850","line":297,"column":49,"nodeType":"751","messageId":"752","endLine":297,"endColumn":63},{"ruleId":"749","severity":1,"message":"851","line":297,"column":65,"nodeType":"751","messageId":"752","endLine":297,"endColumn":79},"no-unused-vars","'storage' is assigned a value but never used.","Identifier","unusedVar","'devWidth' is assigned a value but never used.","'size' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'windowssize' is assigned a value but never used.","'timer' is assigned a value but never used.","no-native-reassign",["990"],"no-negated-in-lhs",["991"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["992"],["990"],["991"],"'del' is defined but never used.","'get' is defined but never used.","'Close' is defined but never used.","'MyModal' is defined but never used.","'PhoneBook' is defined but never used.","'Button' is defined but never used.","'Option' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'patientId' is assigned a value but never used.","'age' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'disabled' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.",["990"],["991"],"'windowsHeight' is assigned a value but never used.","'selectDeviceName' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.",["990"],["991"],"'connectionKey' is assigned a value but never used.","'selectRoleId' is assigned a value but never used.","'workplaceName' is assigned a value but never used.","'workplaceId' is assigned a value but never used.","'organizationId' is assigned a value but never used.","'setOrganizationId' is assigned a value but never used.","no-undef","'petArr' is not defined.","undef","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["993"],"'SubMenu' is assigned a value but never used.","'url' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.",["990"],["991"],"'addLogin' is defined but never used.","'MyIcon' is assigned a value but never used.","'isCode' is assigned a value but never used.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["990"],["991"],"'errPatientId' is assigned a value but never used.","'userImage' is assigned a value but never used.","'Space' is defined but never used.","'Tag' is defined but never used.","'memo' is assigned a value but never used.","'hisHe' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["994"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["995"],"'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'patch' is defined but never used.","React Hook useEffect has missing dependencies: 'hardwareList' and 'selectHardwareInfo'. Either include them or remove the dependency array.",["996"],"'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'mac' is assigned a value but never used.","'hardwareVersion' is assigned a value but never used.","'softwareVersion' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["997"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["998"],["990"],["991"],["990"],["991"],"'message' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'postJson' is defined but never used.","'num07' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareInfo'. Either include it or remove the dependency array.",["999"],"React Hook useEffect has missing dependencies: 'destroyOnClose' and 'width'. Either include them or remove the dependency array. If 'setIsdestroyOnClose' needs the current value of 'destroyOnClose', you can also switch to useReducer instead of useState and read 'destroyOnClose' in the reducer.",["1000"],"'px' is defined but never used.","'pX' is defined but never used.","'useEffect' is defined but never used.","'mTop' is defined but never used.","'MTop' is defined but never used.","'history' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["1001"],"'devicesTitleHeight' is defined but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["1002"],"'useRef' is defined but never used.","'Layout' is defined but never used.","'Input' is defined but never used.","'moment' is defined but never used.","'mar' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'getBase64' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'isUnKnow' is assigned a value but never used.","'petId' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Popover' is defined but never used.","'Modal' is defined but never used.","'SyncOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","'bluData' is assigned a value but never used.","'resize' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["1003"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1004"],"'checkUser' is defined but never used.","'deskRegistAWSSNS' is defined but never used.","'bounds' is assigned a value but never used.","'useHistory' is defined but never used.","'Radio' is defined but never used.","'_' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllPet'. Either include it or remove the dependency array.",["1005"],"React Hook useEffect has a missing dependency: 'searchPetByPetNameOrPatientId'. Either include it or remove the dependency array.",["1006"],["1007"],"'Image' is defined but never used.","'Header' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["1008"],"'Carousel' is defined but never used.","'PlusOutlined' is defined but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["1009"],"'useState' is defined but never used.","'ConfigProvider' is defined but never used.","'Progress' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'mellaConnectStatus' is assigned a value but never used.","'mellaMeasurePart' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.",["1010"],"React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["1011"],["1012"],"'setLoading' is assigned a value but never used.","'setBreedList' is assigned a value but never used.","'imageId' is assigned a value but never used.","'setBreedId' is assigned a value but never used.",["1013"],"'Menu' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["1014"],"'PageHeader' is defined but never used.","'redjinggao' is defined but never used.","'rulerConnectStatus' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'selectPetDetail' is assigned a value but never used.","'setSelectPetDetail' is assigned a value but never used.","'onClickModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["1015"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1016"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["1017"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["1018"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1019"],"'token' is assigned a value but never used.","'_resend' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1020","fix":"1021"},{"desc":"1022","fix":"1023"},{"desc":"1024","fix":"1025"},{"desc":"1026","fix":"1027"},{"desc":"1028","fix":"1029"},{"desc":"1030","fix":"1031"},{"desc":"1032","fix":"1033"},{"desc":"1034","fix":"1035"},{"desc":"1036","fix":"1037"},{"desc":"1038","fix":"1039"},{"desc":"1040","fix":"1041"},{"desc":"1042","fix":"1043"},{"desc":"1044","fix":"1045"},{"desc":"1046","fix":"1047"},{"desc":"1048","fix":"1049"},{"desc":"1036","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1053","fix":"1054"},{"desc":"1024","fix":"1055"},{"desc":"1056","fix":"1057"},{"desc":"1026","fix":"1058"},{"desc":"1036","fix":"1059"},{"desc":"1060","fix":"1061"},{"desc":"1062","fix":"1063"},{"desc":"1064","fix":"1065"},{"desc":"1066","fix":"1067"},{"desc":"1068","fix":"1069"},{"desc":"1070","fix":"1071"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"1072","text":"1073"},"Update the dependencies array to be: [_getExam]",{"range":"1074","text":"1075"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1076","text":"1077"},"Update the dependencies array to be: [storage.userId]",{"range":"1078","text":"1079"},"Update the dependencies array to be: [hardwareList, selectHardwareInfo, selectHardwareType]",{"range":"1080","text":"1081"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1082","text":"1083"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1084","text":"1085"},"Update the dependencies array to be: [selectHardwareType, hardwareList, hardwareInfo]",{"range":"1086","text":"1087"},"Update the dependencies array to be: [destroyOnClose, width]",{"range":"1088","text":"1089"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"1090","text":"1091"},"Update the dependencies array to be: [hardwareList]",{"range":"1092","text":"1093"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1094","text":"1095"},"Update the dependencies array to be: []",{"range":"1096","text":"1097"},"Update the dependencies array to be: [getAllPet]",{"range":"1098","text":"1099"},"Update the dependencies array to be: [searchPetByPetNameOrPatientId, searchValue]",{"range":"1100","text":"1101"},{"range":"1102","text":"1089"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1103","text":"1104"},"Add dependencies array: [callBack, timers]",{"range":"1105","text":"1106"},{"range":"1107","text":"1077"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1108","text":"1109"},{"range":"1110","text":"1079"},{"range":"1111","text":"1089"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1112","text":"1113"},"Update the dependencies array to be: [finishScan, inputIndex, newData]",{"range":"1114","text":"1115"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1116","text":"1117"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1118","text":"1119"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"1120","text":"1121"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"1122","text":"1123"},[4384,4401],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[10005,10007],"[_getExam]",[12700,12712],"[getPetTemperatureData, petMessage]",[12900,12902],"[storage.userId]",[6999,7019],"[hardwareList, selectHardwareInfo, selectHardwareType]",[2172,2174],"[setReceiveBroadcastHardwareInfoFun]",[3441,3471],"[devicesList, receiveBroadcastHardwareInfo]",[1854,1889],"[selectHardwareType, hardwareList, hardwareInfo]",[2079,2081],"[destroyOnClose, width]",[859,861],"[initSelectVale, listArr]",[3213,3215],"[hardwareList]",[42486,42488],"[_noUSB, _send, blueSearch]",[42560,42586],"[]",[3888,3890],"[getAllPet]",[4021,4034],"[searchPetByPetNameOrPatientId, searchValue]",[4229,4231],[2356,2371],"[callBack, carouselIndex]",[2257,2257],", [callBack, timers]",[9059,9071],[9219,9228],"[getPetTemperatureData, reRender, saveNum]",[9416,9418],[2198,2200],[4834,4846],"[letterListCopy, phoneListCopy, searchText]",[7269,7281],"[finishScan, inputIndex, newData]",[7732,7751],"[inputIndex, rulerConfirmCount]",[8578,8585],"[petId, petLengthDataConvert, petMessage]",[9200,9238],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[9662,9673],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]"]