[{"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\SignIn.jsx":"1","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"2","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx":"3","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx":"4","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js":"5","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx":"6","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"7","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectScheduledExam.jsx":"8","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx":"9","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\Mesasure.jsx":"10","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx":"11","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx":"12","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx":"13","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\advancedSettings\\AdvancedSettings.jsx":"14","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx":"15","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx":"16","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx":"17","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx":"18","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js":"19","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx":"20","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx":"21","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js":"22","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js":"23","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js":"24","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil5.js":"25","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js":"26","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx":"27","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js":"28","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"29","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js":"30","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js":"31","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\hardwareAction.js":"32","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"33","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"34","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js":"35","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"36","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js":"37","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js":"38","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"39","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js":"40","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\home\\Home.jsx":"41","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\apiKey\\APIKey.jsx":"42","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx":"43","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\help\\Help.jsx":"44","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx":"45","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\addDevice\\AddDevice.jsx":"46","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\px.js":"47","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js":"48","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx":"49","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.js":"50","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx":"51","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js":"52","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js":"53","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"54","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx":"55","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx":"56","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil.js":"57","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"58","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx":"59","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx":"60","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx":"61","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx":"62"},{"size":17112,"mtime":1655791999539,"results":"63","hashOfConfig":"64"},{"size":49093,"mtime":1655791999618,"results":"65","hashOfConfig":"64"},{"size":1232,"mtime":1655792265352,"results":"66","hashOfConfig":"64"},{"size":38409,"mtime":1655793172098,"results":"67","hashOfConfig":"64"},{"size":356,"mtime":1655467295857,"results":"68","hashOfConfig":"64"},{"size":3737,"mtime":1655168677392,"results":"69","hashOfConfig":"64"},{"size":5178,"mtime":1655168677434,"results":"70","hashOfConfig":"64"},{"size":39476,"mtime":1655467295805,"results":"71","hashOfConfig":"64"},{"size":39743,"mtime":1655168677418,"results":"72","hashOfConfig":"64"},{"size":113335,"mtime":1655168677440,"results":"73","hashOfConfig":"64"},{"size":3459,"mtime":1655168677395,"results":"74","hashOfConfig":"64"},{"size":4706,"mtime":1655168677413,"results":"75","hashOfConfig":"64"},{"size":13023,"mtime":1655168677410,"results":"76","hashOfConfig":"64"},{"size":9788,"mtime":1655168677457,"results":"77","hashOfConfig":"64"},{"size":12616,"mtime":1655168677474,"results":"78","hashOfConfig":"64"},{"size":11451,"mtime":1655168677459,"results":"79","hashOfConfig":"64"},{"size":13496,"mtime":1655168677468,"results":"80","hashOfConfig":"64"},{"size":10219,"mtime":1655168677467,"results":"81","hashOfConfig":"64"},{"size":152,"mtime":1655168677794,"results":"82","hashOfConfig":"64"},{"size":30537,"mtime":1655791999535,"results":"83","hashOfConfig":"64"},{"size":1410,"mtime":1655168677807,"results":"84","hashOfConfig":"64"},{"size":358,"mtime":1655467295910,"results":"85","hashOfConfig":"64"},{"size":4448,"mtime":1655723373543,"results":"86","hashOfConfig":"64"},{"size":1451,"mtime":1655168677805,"results":"87","hashOfConfig":"64"},{"size":3658,"mtime":1655168677531,"results":"88","hashOfConfig":"64"},{"size":1041,"mtime":1655168677775,"results":"89","hashOfConfig":"64"},{"size":3371,"mtime":1655168677813,"results":"90","hashOfConfig":"64"},{"size":91,"mtime":1655467295880,"results":"91","hashOfConfig":"64"},{"size":59752,"mtime":1655805690239,"results":"92","hashOfConfig":"64"},{"size":80,"mtime":1655791999589,"results":"93","hashOfConfig":"64"},{"size":89,"mtime":1655467295873,"results":"94","hashOfConfig":"64"},{"size":3689,"mtime":1655723373542,"results":"95","hashOfConfig":"64"},{"size":10327,"mtime":1655806505257,"results":"96","hashOfConfig":"64"},{"size":2311,"mtime":1655359312401,"results":"97","hashOfConfig":"64"},{"size":58,"mtime":1655467295877,"results":"98","hashOfConfig":"64"},{"size":7080,"mtime":1655788711297,"results":"99","hashOfConfig":"64"},{"size":4449,"mtime":1655168677816,"results":"100","hashOfConfig":"64"},{"size":3044,"mtime":1655168677819,"results":"101","hashOfConfig":"64"},{"size":8196,"mtime":1655168677810,"results":"102","hashOfConfig":"64"},{"size":52228,"mtime":1655168677431,"results":"103","hashOfConfig":"64"},{"size":5372,"mtime":1655791999530,"results":"104","hashOfConfig":"64"},{"size":8762,"mtime":1655168677387,"results":"105","hashOfConfig":"64"},{"size":141874,"mtime":1655377730766,"results":"106","hashOfConfig":"64"},{"size":4924,"mtime":1655168677462,"results":"107","hashOfConfig":"64"},{"size":15939,"mtime":1655168677454,"results":"108","hashOfConfig":"64"},{"size":13651,"mtime":1655168677451,"results":"109","hashOfConfig":"64"},{"size":3002,"mtime":1655168677812,"results":"110","hashOfConfig":"64"},{"size":18925,"mtime":1655168677533,"results":"111","hashOfConfig":"64"},{"size":3754,"mtime":1655467295811,"results":"112","hashOfConfig":"64"},{"size":8796,"mtime":1655467295870,"results":"113","hashOfConfig":"64"},{"size":13008,"mtime":1655467295861,"results":"114","hashOfConfig":"64"},{"size":71,"mtime":1655257026122,"results":"115","hashOfConfig":"64"},{"size":532,"mtime":1655467295881,"results":"116","hashOfConfig":"64"},{"size":13439,"mtime":1655727114198,"results":"117","hashOfConfig":"64"},{"size":4595,"mtime":1655727114179,"results":"118","hashOfConfig":"64"},{"size":1365,"mtime":1655703928475,"results":"119","hashOfConfig":"64"},{"size":3403,"mtime":1655168677526,"results":"120","hashOfConfig":"64"},{"size":846,"mtime":1655168677772,"results":"121","hashOfConfig":"64"},{"size":39319,"mtime":1655799753461,"results":"122","hashOfConfig":"64"},{"size":1243,"mtime":1655800529348,"results":"123","hashOfConfig":"64"},{"size":7264,"mtime":1655801388721,"results":"124","hashOfConfig":"64"},{"size":4713,"mtime":1655801855719,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wlgw0n",{"filePath":"128","messages":"129","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"131"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"131"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"131"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"131"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"131"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"131"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"131"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"131"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"131"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"239","messages":"240","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"245","messages":"246","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"255","messages":"256","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"261","messages":"262","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\SignIn.jsx",["263","264","265","266","267","268","269","270","271","272","273","274","275","276","277"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Menu,\r\n  Popover,\r\n  Button,\r\n  Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { SyncOutlined, createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport moment from 'moment'\r\nimport MyModal from './../myModal/MyModal'\r\nimport { connect } from 'react-redux'\r\nimport { setMenuNum } from '../../store/actions';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './heard.less'\r\nimport help from './../../assets/images/help.png'\r\nimport message from './../../assets/images/message.png'\r\nimport triangle from './../../assets/img/triangle.png'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\nimport dog from './../../assets/images/reddog.png'\r\nimport cat from './../../assets/images/redcat.png'\r\nimport other from './../../assets/images/redother.png'\r\nimport menu from './../../assets/img/menu.png'\r\nimport heardLeft from './../../assets/img/heardLeft.png'\r\nimport blueSearchPng from './../../assets/img/blueSearch.png'\r\nimport close from './../../assets/img/close.png'\r\nimport MinClose from '../../utils/minClose/MinClose';\r\nimport jinggao from './../../assets/img/jinggao.png'\r\nimport redclose from './../../assets/img/redclose.png'\r\n\r\nimport rMin_red from './../../assets/img/min-red.png'\r\nimport rClose_red from './../../assets/img/close-red.png'\r\n\r\nimport rMin_white from './../../assets/img/min-white.png'\r\nimport rClose_white from './../../assets/img/close-white.png'\r\nimport mellaLogo from './../../assets/images/mellaLogo.png'\r\nimport { version, updateTime } from './../appversion'\r\nimport { fetchRequest4 } from '../FetchUtil4';\r\nimport Button1 from '../button/Button';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\n\r\nconst allPetList = electronStore.get('doctorExam')\r\nlet storage = window.localStorage\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\nlet mouseoutTimer = null\r\nlet matchingTimer = null\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst Heard = ({\r\n  onReturn,\r\n  onSearch,\r\n  menu1Click,\r\n  menu2Click,\r\n  menu3Click,\r\n  menu4Click,\r\n  menu5Click,\r\n  menu6Click,\r\n  menu7Click,\r\n  menu8Click,\r\n  menu9Click,\r\n  blueSearch,\r\n  setMenuNum\r\n}) => {\r\n  const [minbgc, setMinbgc] = useState('')        //最小化的背景颜色\r\n  const [closebgc, setClosebgc] = useState('')    //关闭按钮的背景色\r\n  const [rMin, setRMin] = useState(rMin_red)      //最小化的图标\r\n  const [rClose, setRClose] = useState(rClose_red) //关闭按钮图标\r\n  const [value, setValue] = useState('')          //搜索框输入的内容\r\n  const [visible, setVisible] = useState(false)   //搜索框下面的搜索model\r\n  const [loading, setLoading] = useState(false)     //搜索宠物过程中的加载图标\r\n  const [petList, setPetList] = useState([])        //搜索到的宠物列表\r\n  const [menuVisible, setMenuVisible] = useState(false)//菜单图标下面的菜单内容图标\r\n  const [menuMouseOverIndex, setMenuMouseOverIndex] = useState('')//用来定位鼠标滑到哪个菜单选项\r\n\r\n\r\n  const [modalvisible, setModalVisible] = useState(false)       //关于的弹窗\r\n  const [modalVis, setModalVis] = useState(false)               //RFID搜索是否有宠物的弹窗\r\n  const [isNotFound, setIsNotFound] = useState(false)           //是否找到RFID对应的图标\r\n  const [deviceModel, setDeviceModel] = useState(false)         //我的设备弹窗\r\n\r\n  const [noUSB, setNoUSB] = useState(false)                 //没有底座设备\r\n  const [searchMac, setSearchMac] = useState(false)         //是否展示狗牌mac搜索图标下面的Modal框\r\n  const [bluDevice, setBluDevice] = useState([])            //搜索到的狗牌设备mac地址\r\n\r\n  const [isShowBlePetList, setIsShowBlePetList] = useState(false)  //是否展示狗牌对应宠物\r\n  const [isMatchPet, setIsMatchPet] = useState(false)      //正在匹配狗牌对应的宠物\r\n  const [macMatchPetList, setMacMatchPetList] = useState([])\r\n  const [updateStatus, setUpdateStatus] = useState('init')\r\n  const [lastVersion, setLastVersion] = useState(version)\r\n  const [downLoadNum, setDownLoadingNum] = useState(0)\r\n  const [selectDeviceMac, setSelectDeviceMac] = useState('')\r\n\r\n  //这里是为了模拟数据所做出来的,后期要改成接口\r\n  const testPetList = [\r\n\r\n    { macId: \"E0:7C:62:30:08:08\", petName: 'Mella', petId: \"b9de0868-9202-4fc9-9f1b-325220ceeccf\" },\r\n    { macId: \"E0:7C:62:03:75:32\", petName: 'Possum', petId: \"e4b11580-1277-4b10-bd64-46b097f6f882\" },\r\n    { macId: \"E0:7D:EA:A8:8D:7E\", petName: 'Charlie', petId: \"b4e7a185-1c7e-4885-ab95-4a7d2d2ada83\" },\r\n    { macId: \"E0:7C:62:32:76:8C\", petName: 'Noah', petId: \"01b34bf2-47e6-4036-884f-47299447cb6a\" },\r\n\r\n    { macId: \"84:C2:E4:03:C3:06\", petName: \"Whitey\", petId: \"f713a238-f5df-4c85-8c4f-5766b0770c07\" },\r\n  ]\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('mac列表为空,初始化');\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    setBluDevice([])\r\n    return () => {\r\n      matchingTimer && clearTimeout(matchingTimer)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    ipcRenderer.on('uploadMessage', uploadMessage)\r\n    return () => {\r\n      ipcRenderer.removeListener('uploadMessage', uploadMessage)\r\n    }\r\n  }, [])\r\n\r\n  const uploadMessage = (e, data) => {\r\n    switch (data.payload.status) {\r\n      case -1:\r\n        console.log('查询异常');\r\n        break;\r\n\r\n      case 0:\r\n        console.log('正在检查应用程序更新');\r\n        setUpdateStatus('check')\r\n        break;\r\n\r\n      case 2:\r\n        console.log('正在检查应用程序更新');\r\n        setUpdateStatus('lastVersion')\r\n        break;\r\n\r\n      case 1:\r\n        console.log('检测到新版本');\r\n        let version = data.output.version\r\n        setLastVersion(version)\r\n\r\n        setUpdateStatus('newVersion')\r\n        break;\r\n\r\n      case 3:\r\n        console.log('下载新版成功');\r\n      case 4:\r\n        console.log('取消背景下载');\r\n      case 5:\r\n        console.log('取消安装');\r\n        setUpdateStatus('init')\r\n        break;\r\n      case 6:\r\n        console.log('正在下载');\r\n        setUpdateStatus('downLoading')\r\n        setDownLoadingNum((data.output.percent / 100).toFixed(1))\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    if (blueSearch) {\r\n      console.log('---渲染时执行----??????');\r\n      ipcRenderer.on('sned', _send)\r\n      ipcRenderer.on('noUSB', _noUSB)\r\n      return () => {\r\n        console.log('----卸载----?????????/');\r\n        ipcRenderer.removeListener('sned', _send)\r\n        ipcRenderer.removeListener('noUSB', _noUSB)\r\n      }\r\n    }\r\n\r\n  }, [])\r\n\r\n  const _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      setNoUSB(false)\r\n    } else {\r\n      if (!noUSB) {\r\n        setNoUSB(true)\r\n      }\r\n    }\r\n  }\r\n  const _send = (event, data) => {\r\n\r\n    command(data)()\r\n  }\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  const command = (newArr) => {\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    console.log(dataArr1);\r\n    const instruction = [255]\r\n    const commandArr = {\r\n\r\n      255: () => {\r\n        // console.log(dataArr1);\r\n        // console.log(bluDevice);\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n\r\n        let MAC = ''\r\n        let bluData = []\r\n        let UUID = ''\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5])\r\n          }\r\n          // console.log('循环得到的数据', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              break;\r\n            case 255:\r\n              break;\r\n            case 3: break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              let str = itemData[0]\r\n              for (let i = 1; i < itemData.length; i++) {\r\n                str += `:${itemData[i]}`\r\n              }\r\n              MAC = str.toUpperCase()\r\n\r\n              break;\r\n            case 7:\r\n              console.log('uuid');\r\n              let uuid = ''\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                uuid += `${itemData[i]}`\r\n              }\r\n              UUID = uuid\r\n              break\r\n            default: return;\r\n          }\r\n          dataIndex = itemLength\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\r\n\r\n          // console.log(itemLength, itemLength < length && (itemLength + 3 <= frameLength));\r\n        }\r\n        console.log('----mac', MAC, '-----uuid', UUID);\r\n        if (UUID === 'd7895ab1acc74de3b9919e825c24c809') {\r\n          // console.log('uuid相等', bluDevice, bluDevice.indexOf(MAC) === -1,);\r\n          if (bluDevice.indexOf(MAC) === -1) {\r\n            let dataArr = [].concat(bluDevice)\r\n            dataArr.push(MAC)\r\n            setBluDevice(dataArr)\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  let history = useHistory();\r\n  //最小化，关闭的\r\n  const MINCOLOSE = {\r\n    minMouseEnter: () => {\r\n      setMinbgc('rgba(70, 70, 70, 0.5)')\r\n      setRMin(rMin_white)\r\n    },\r\n    minMouseLeave: () => {\r\n      setMinbgc('')\r\n      setRMin(rMin_red)\r\n    },\r\n    minClock: () => {\r\n      setMinbgc('')\r\n      setRMin(rMin_red)\r\n      let ipcRenderer = window.electron.ipcRenderer\r\n      ipcRenderer.send('window-min')\r\n\r\n    },\r\n    closeMouseEnter: () => {\r\n      setClosebgc('rgba(232,17,35)')\r\n      setRClose(rClose_white)\r\n    },\r\n    closeMouseLeave: () => {\r\n      setClosebgc('')\r\n      setRClose(rClose_red)\r\n    },\r\n    closeClock: () => {\r\n      let ipcRenderer = window.electron.ipcRenderer\r\n      ipcRenderer.send('window-close')\r\n    },\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //搜索框内容\r\n  const searchPetBody = () => {\r\n\r\n\r\n    if (loading) {\r\n      //加载中\r\n      return (\r\n        <div className='searchPetLoading' style={{ padding: `${20}px 0` }}>\r\n          <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n            <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n          </div>\r\n          <p style={{ color: '#e1206d', marginTop: px(5) }}>\r\n            loading...\r\n          </p>\r\n        </div>\r\n      )\r\n    } else {\r\n      // console.log('-----展示', petList.length);\r\n      if (petList.length > 0) {\r\n        //找到了宠物，展示出来\r\n\r\n        // let petList = electronStore.get('doctorExam')\r\n        // console.log(petList);\r\n\r\n        let option = petList.map((item, index) => {\r\n          let { speciesId, url } = item\r\n\r\n          let images = `url(${url}?download=0&width=150)`\r\n          if (!url) {\r\n            switch (speciesId) {\r\n              case 1: images = `url(${cat})`\r\n\r\n                break;\r\n              case 2: images = `url(${dog})`\r\n                break\r\n              default: images = `url(${other})`\r\n                break;\r\n            }\r\n          }\r\n          return (\r\n            <li\r\n              key={`${index}`}\r\n              style={{ margin: `${px(20)}px 0` }}\r\n              onClick={() => {\r\n                // console.log(item);\r\n                setValue('')\r\n                setVisible(false)\r\n                setPetList([])\r\n\r\n                onSearch(item)\r\n              }}\r\n            >\r\n              <div className='item' style={{ paddingLeft: px(40) }}>\r\n                <div\r\n                  className='img'\r\n                  style={{\r\n                    width: px(50),\r\n                    height: px(50),\r\n                    marginRight: px(40),\r\n                    borderRadius: px(60),\r\n                    backgroundImage: images,\r\n                    // backgroundColor: 'hotpink',\r\n\r\n                  }}>\r\n                  {/* <img src={images} style={{ width: px(40) }} /> */}\r\n                </div>\r\n\r\n                <div className='petInfo'>\r\n                  <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.petName}</p>\r\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\r\n                  <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\r\n                </div>\r\n              </div>\r\n            </li >\r\n          )\r\n\r\n        })\r\n        let liStyle = { backgroundColor: '#fff', }\r\n        if (petList.length > 4) {\r\n          liStyle = { height: px(500), overflowY: 'auto' }\r\n        }\r\n\r\n\r\n        return (\r\n          <div className='searchPetList'>\r\n            <ul style={liStyle}>\r\n              {option}\r\n            </ul>\r\n          </div>\r\n        )\r\n      } else {\r\n        //没有发现这个宠物\r\n        return (\r\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\r\n\r\n            <p style={{ width: '80%', fontSize: px(18) }}>\r\n              Pet not found. Would you like\r\n              to add a new patient?\r\n            </p>\r\n\r\n            <div\r\n              className='searchPetBtn'\r\n              style={{ fontSize: px(18) }}\r\n              onClick={() => {\r\n                history.push('/pet/doctorAddPet')\r\n              }}\r\n            >\r\n              <p style={{ padding: `${px(8)}px 0` }}>+ New Patient</p>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  const inputChange = (text) => {\r\n\r\n    function isNumber (val) {\r\n      var regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\r\n      var regNeg = /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\r\n      if (regPos.test(val) || regNeg.test(val)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    //去除前后空格\r\n    let search = text.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\")\r\n    setValue(search)\r\n    if (search.length > 0) {\r\n      setVisible(true)\r\n      setLoading(true)\r\n\r\n      //搜索分成两种，一种是通过手输入数据搜索，一种是通过RFID扫描过后搜索\r\n\r\n      if (search.length === 15 && isNumber(search)) {\r\n        //这是RFID扫描后的搜索\r\n        fetchRequest4(`/pet/getPetInfoByRFID/${search}/${storage.lastOrganization}`, 'GET')\r\n          .then(res => {\r\n            console.log('----RFID搜索结果', res);\r\n\r\n            if (res.flag === true && res.data) {\r\n              let { createTime, patientId, petName, firstName, lastName, url, speciesId, breedName, gender, birthday, petId, rfid, weight } = res.data\r\n              patientId = patientId || 'unknown'\r\n              petName = petName || 'unknown'\r\n              breedName = breedName || 'unknown'\r\n              weight = weight || 'unknown'\r\n              let owner = ''\r\n              if (!firstName) {\r\n                firstName = ''\r\n              }\r\n              if (!lastName) {\r\n                lastName = ''\r\n              }\r\n              if (lastName === '' && firstName === '') {\r\n                owner = 'unknown'\r\n              } else {\r\n                owner = `${lastName} ${firstName}`\r\n              }\r\n              createTime = moment(createTime).format('X')\r\n              let petGender = ''\r\n              switch (`${gender}`) {\r\n                case '1': petGender = 'F'\r\n\r\n                  break;\r\n                case '0': petGender = \"M\"\r\n                  break;\r\n                default: petGender = 'unknown'\r\n                  break;\r\n              }\r\n              let petAge = 'unknown'\r\n              if (birthday) {\r\n                petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n                // console.log('petAge', petAge);\r\n              }\r\n              let json = {\r\n                insertedAt: createTime,\r\n                patientId,\r\n                petName,\r\n                owner,\r\n                breed: breedName,\r\n                gender: petGender,\r\n                age: petAge,\r\n                petId,\r\n                id: 0,\r\n                weight,\r\n                rfid,\r\n                url,\r\n                speciesId\r\n              }\r\n              let searchData = []\r\n              searchData.push(json)\r\n              setLoading(false)\r\n              setPetList(searchData)\r\n\r\n\r\n\r\n            } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\r\n              console.log('找到了但是不是在这个组织下');\r\n              setLoading(false)\r\n              setModalVis(true)\r\n              setIsNotFound(false)\r\n              setValue('')\r\n              setVisible(false)\r\n\r\n\r\n              // this.setState({\r\n              //   loading: false,\r\n              //   modalVis: true,\r\n              //   isNotFound: false,\r\n              //   heardSearchText: ''\r\n              // })\r\n            } else {\r\n              console.log('没有找到');\r\n              setLoading(false)\r\n              setModalVis(true)\r\n              setIsNotFound(true)\r\n              setValue('')\r\n              setVisible(false)\r\n\r\n\r\n              // this.setState({\r\n              //   loading: false,\r\n              //   modalVis: true,\r\n              //   isNotFound: true,\r\n              //   heardSearchText: ''\r\n              // })\r\n            }\r\n          })\r\n          .catch(err => {\r\n\r\n            console.log('抛出异常:', err);\r\n            setLoading(false)\r\n          })\r\n        return\r\n      }\r\n\r\n      /**\r\n       * 使用indexof方法实现模糊查询\r\n       *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n       *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n       *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n       *  \r\n       * list         原数组\r\n       * keyWord      查询关键词\r\n       * searchData   查询的结果\r\n       * \r\n       * toLowerCase（）方法：将字符串统一转成小写\r\n       * toUpperCase（）方法：将字符串统一转成大写\r\n       * \r\n       */\r\n      // let list = allPetList \r\n      let list = electronStore.get('doctorExam') || []\r\n\r\n      let searchData = []\r\n      let keyWord = search\r\n      for (let i = 0; i < list.length; i++) {\r\n        let petName = list[i].petName.toLowerCase() || ''\r\n        let patientId = list[i].patientId.toLowerCase() || ''\r\n        let rfid = list[i].rfid || ''\r\n        if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n          || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n          || `${rfid}`.indexOf(keyWord) !== -1\r\n        ) {\r\n          searchData.push(list[i])\r\n        }\r\n      }\r\n      // console.log('找到的宠物', searchData);\r\n      console.log('---搜索词：', search, '---搜索数组：', list, '----搜索结果：', searchData);\r\n      setLoading(false)\r\n      setPetList(searchData)\r\n\r\n    } else {\r\n      setVisible(false)\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  //左侧菜单栏\r\n  const menuList = () => {\r\n    let menulistArr = [\r\n      { name: 'Home', index: '1' },\r\n      { name: 'All Patients', index: '2' },\r\n      { name: 'Scheduled Patients', index: '3' },\r\n      { name: 'My Account', index: '4' },\r\n      { name: 'Settings', index: '5' },\r\n      { name: 'Enter Clinical Study Mode', index: '6' },\r\n      { name: `Billing & Subscriptions`, index: '7' },\r\n      { name: 'About Mella', index: '8' },\r\n      { name: 'Log Out', index: '9' },\r\n\r\n    ]\r\n    let menuOption = menulistArr.map((item, index) => {\r\n\r\n      let pColor = menuMouseOverIndex === item.index ? '#e1206d' : '#1a1a1a'\r\n      return (\r\n        <li\r\n          key={item.index}\r\n          style={{ padding: `${px(15)}px ${px(20)}px` }}\r\n          onClick={() => {\r\n            menulistClick(item)\r\n\r\n          }}\r\n          onMouseOver={(e) => {\r\n            setMenuMouseOverIndex(item.index)\r\n            e.stopPropagation();\r\n            e.nativeEvent.stopImmediatePropagation();\r\n            menuMouseOver()\r\n          }}\r\n          onMouseOut={(e) => {\r\n            setMenuMouseOverIndex('')\r\n            e.stopPropagation();\r\n            e.nativeEvent.stopImmediatePropagation();\r\n            menuMouseOut()\r\n          }}\r\n        >\r\n          <div className='item'>\r\n            <p style={{ color: pColor }}>{item.name}</p>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    return (\r\n      <ul>\r\n        {menuOption}\r\n      </ul>\r\n    )\r\n\r\n\r\n  }\r\n  const menulistClick = e => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    setMenuVisible(false)\r\n    setMenuMouseOverIndex('')\r\n    console.log('click ', e);\r\n\r\n    switch (e.index) {\r\n      case \"1\":\r\n        history.push('/MainBody')\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"2\":\r\n        history.push('/MainBody')\r\n        console.log('全部的宠物');\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"3\":\r\n        history.push('/MainBody')\r\n        console.log('预约宠物');\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"4\":\r\n        console.log('我的账号');\r\n        break;\r\n      case \"5\":\r\n        //跳转到设置\r\n        // menu5Click()\r\n        history.push('/menuOptions/settings');\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"6\":\r\n        history.push('/MainBody')\r\n        console.log('临床测试');\r\n        setMenuNum(e.index)\r\n        break;\r\n      case \"7\":\r\n        console.log('billing');\r\n        break;\r\n\r\n      case \"8\":\r\n        setModalVisible(true)\r\n        console.log('关于');\r\n        break;\r\n      case \"9\":\r\n        console.log('退出登录');\r\n        storage.userId = ''\r\n        storage.roleId = ''\r\n        storage.userWorkplace = ''\r\n        storage.lastOrganization = ''\r\n        storage.lastWorkplaceId = ''\r\n        storage.connectionKey = ''\r\n        storage.isClinical = 'false'\r\n        setMenuNum('1')\r\n        history.push('/')\r\n        break;\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  const menuMouseOut = () => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    mouseoutTimer = setTimeout(() => {\r\n\r\n      setMenuVisible(false)\r\n      mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    }, 1000);\r\n\r\n\r\n  }\r\n  const menuMouseOver = () => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer)\r\n    setMenuVisible(true)\r\n  }\r\n  const updatePage = () => {\r\n    switch (updateStatus) {\r\n      case 'init':\r\n        return (\r\n          <div className='updateBtn' style={{ height: px(40), }}\r\n            onClick={() => {\r\n              setDownLoadingNum(0)\r\n              setUpdateStatus('check')\r\n\r\n              ipcRenderer.send('clickUpdateBtn')\r\n            }}\r\n          >\r\n            Check for Updates\r\n          </div>\r\n        )\r\n      case 'check':\r\n        return (\r\n          <div className='updateLoading flex' >\r\n            <div className=\"loadIcon1\" >\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginRight: px(20) }} />\r\n            </div>\r\n            <p style={{ color: '#e1206d', }}>Checking for updates</p>\r\n          </div>\r\n        )\r\n      case 'lastVersion':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            already the latest version\r\n          </div>\r\n        )\r\n\r\n      case 'newVersion':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            {`Found new version V${lastVersion}`}\r\n\r\n          </div>\r\n        )\r\n      case 'downLoading':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            {`Download progress: ${downLoadNum}%`}\r\n\r\n          </div>\r\n        )\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n\r\n\r\n  }\r\n  //关于界面\r\n  const modal = () => {\r\n    return (\r\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\r\n        <div className='writeBox' style={{ borderRadius: px(25) }} >\r\n          <div className='modalHeadr'>\r\n            <div className='close'>\r\n              <div className='imgBox'\r\n                style={{ padding: `0 ${px(30)}px` }}\r\n                onClick={() => {\r\n                  setModalVisible(false)\r\n                  setUpdateStatus('init')\r\n                }}\r\n              >\r\n                <img src={close} style={{ width: px(23), }} />\r\n              </div>\r\n\r\n            </div>\r\n            <div className='heaerCenter'>\r\n              <div className='heaerCenterL'>\r\n                <img src={mellaLogo} style={{ width: '80%' }} />\r\n\r\n              </div>\r\n              <div className='heaerCenterR'>\r\n                <h1 style={{ fontSize: px(45), marginBottom: px(10) }}>About the System</h1>\r\n                <div className='version'>\r\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Version</div>\r\n                  <div className='versionR' style={{ fontSize: px(24) }}>{version}</div>\r\n                </div>\r\n                <div className='version'>\r\n                  <div className='versionL' style={{ fontSize: px(22), width: px(180) }}>Last Checked</div>\r\n                  <div className='versionR' style={{ fontSize: px(24) }}>{updateTime}</div>\r\n                </div>\r\n\r\n                <div className='check' style={{ marginTop: px(20) }}>\r\n                  {updatePage()}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className='modalfoot'>\r\n            <div className='about' style={{ marginTop: px(40), fontSize: px(18) }}>\r\n              Nanjing Jiubian Technology Co., Ltd. was founded in 2019, located in Nanjing Yuhuatai Software Valley Branch City, the company brings together medical sensors, mobile Internet and other industry's top professionals, business areas covering artificial intelligence, smart medical, pet health, sleep monitoring, etc., is a design, research and development, production, sales, service in one of the high-tech companies. The nine-sided science and technology to \"the number of heavens and earths, starting from one, finally nine\" as the cultural concept, adhering to the essence of Chinese artisans, with an international vision, always standing in the forefront of bio-intelligent medical monitoring technology.\r\n            </div>\r\n\r\n            <div className='aLable'>\r\n              <a href=\"#\"\r\n                style={{ fontSize: px(18), marginRight: px(50) }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >Terms and Agreements</a>\r\n              <a\r\n                href=\"#\"\r\n                style={{ fontSize: px(18), }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >Privacy Policy</a>\r\n            </div>\r\n\r\n            <div className='foot' style={{ marginBottom: px(40) }}>© 2021 Mella Pet Care All RIghts Reserved</div>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //设备列表界面\r\n  const devices = () => {\r\n\r\n    let userId = storage.userId\r\n    // electronStore.delete(`${userId}-deviceList`)\r\n    let deviceList = electronStore.get(`${userId}-deviceList`)\r\n    console.log('---', deviceList);\r\n    if (!deviceList) {\r\n      let str = `${getRamNumber()}`\r\n      for (let i = 0; i < 5; i++) {\r\n        str += `:${getRamNumber()}`\r\n      }\r\n      console.log('随机生成的mac地址:', str);\r\n      deviceList = [{ name: 'MellaPro', deviceType: 'mellaPro', macId: str }]\r\n      electronStore.set(`${userId}-deviceList`, deviceList)\r\n    }\r\n\r\n\r\n    function getRamNumber () {\r\n      var result = '';\r\n      for (var i = 0; i < 2; i++) {\r\n        result += Math.floor(Math.random() * 16).toString(16);//获取0-15并通过toString转16进制\r\n      }\r\n      //默认字母小写，手动转大写\r\n      return result.toLowerCase();//另toLowerCase()转小写\r\n    }\r\n\r\n\r\n    // deviceList = [\r\n    //   // { name: 'Add Device', deviceType: 'add', macId: '0' },\r\n    //   { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //   { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:51:66' },\r\n    //   { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:35:66' },\r\n    //   { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:24:33:44:55:66' },\r\n    //   { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:25:66' },\r\n    //   { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:56:66' },\r\n    // ]\r\n\r\n    let options = deviceList.map((item, index) => {\r\n      return <li\r\n        className='flex'\r\n        key={`${index}`}\r\n        style={{ marginBottom: px(15), marginTop: px(5), }}\r\n        onClick={() => {\r\n          console.log(item.macId);\r\n          setSelectDeviceMac(item.macId)\r\n        }}\r\n      >\r\n        <div className='liLeft' style={{ fontSize: px(16) }}>{item.name}</div>\r\n        <div className='liCenter' style={{ fontSize: px(16) }}>{item.macId}</div>\r\n        <div className='liRight'>\r\n          <div className='circle flex' style={{ width: px(18), height: px(18) }}>\r\n            {selectDeviceMac === item.macId && <div className='redCircle' />}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    })\r\n\r\n    return (\r\n      <div className='settingModal' style={{ height: `${document.documentElement.clientHeight}px` }} >\r\n        <div className='writeBox devices' style={{ borderRadius: px(25), width: px(400) }} >\r\n          <div className='deviceHeadr'>\r\n            <div className='close'>\r\n              <div className='imgBox'\r\n                style={{ padding: `0 ${px(30)}px` }}\r\n                onClick={() => setDeviceModel(false)}\r\n              >\r\n                <img src={close} style={{ width: px(23), }} />\r\n              </div>\r\n\r\n            </div>\r\n            <div className='logo flex'>\r\n              <img src={mellaLogo} style={{ width: px(60) }} />\r\n              <div style={{ fontSize: px(22), marginTop: px(30) }}>Devices</div>\r\n              <div className='bodyText' style={{ fontSize: px(18), marginTop: px(40) }}>Select the device you would<br />\r\n                like to use or add a new device.</div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className='deviceCenter'>\r\n            <ul>\r\n              {options}\r\n            </ul>\r\n          </div>\r\n          <div className='deviceFooter flex' style={{ borderBottomLeftRadius: px(25), borderBottomRightRadius: px(25) }}>\r\n            <div className='btn' style={{ height: px(40) }}\r\n              onMouseDown={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[0].style.opacity = \"0.5\"\r\n              }}\r\n              onMouseUp={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[0].style.opacity = \"1\"\r\n              }}\r\n              onClick={() => {\r\n                setDeviceModel(false)\r\n                history.push('/menuOptions/AddDevice');\r\n\r\n              }}\r\n\r\n            >\r\n              <p className='btnText' style={{ fontSize: px(18) }}>New Device</p>\r\n            </div>\r\n            <div className='btn' style={{ height: px(40) }}\r\n\r\n              onMouseDown={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[1].style.opacity = \"0.5\"\r\n              }}\r\n              onMouseUp={() => {\r\n                let button = document.querySelectorAll('#heard .deviceFooter .btn')\r\n                button[1].style.opacity = \"1\"\r\n              }}\r\n              onClick={() => {\r\n                electronStore.set(`${storage.userId}-selectDevice`, selectDeviceMac)\r\n                setDeviceModel(false)\r\n              }}\r\n            >\r\n              <p className='btnText' style={{ fontSize: px(18) }}>Connect</p>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n  //点击蓝牙搜索图标\r\n  const blueClick = () => {\r\n    console.log('点击了蓝牙图标');\r\n    setIsShowBlePetList(false)\r\n    setSearchMac(true)\r\n\r\n\r\n  }\r\n  //点击取消链接\r\n  const cencleClick = (e) => {\r\n    console.log('mac列表为空,点击取消');\r\n    setBluDevice([])\r\n    setSearchMac(false)\r\n    setIsShowBlePetList(false)\r\n    setIsMatchPet(false)\r\n    setMacMatchPetList([])\r\n    if (e) {\r\n      e.preventDefault()\r\n    }\r\n    matchingTimer && clearTimeout(matchingTimer)\r\n\r\n\r\n  }\r\n  //搜索狗牌的蓝牙\r\n  const blusearchBody = () => {\r\n    console.log('搜索狗牌的蓝牙', searchMac, bluDevice);\r\n    if (isShowBlePetList) {\r\n      if (isMatchPet) {\r\n        return (\r\n          <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\r\n            <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n            </div>\r\n            <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>matching...</p>\r\n\r\n            <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\r\n              onClick={cencleClick}\r\n            >Cencle</a>\r\n          </div>\r\n        )\r\n      } else {\r\n        if (macMatchPetList.length > 0) {\r\n\r\n          let option = macMatchPetList.map((item, index) => {\r\n            let { speciesId, url } = item\r\n\r\n            let images = `url(${url}?download=0&width=150)`\r\n            if (!url) {\r\n              switch (speciesId) {\r\n                case 1: images = `url(${cat})`\r\n                  break;\r\n                case 2: images = `url(${dog})`\r\n                  break\r\n                default: images = `url(${other})`\r\n                  break;\r\n              }\r\n            }\r\n            return (\r\n              <li\r\n                key={`${index}`}\r\n                style={{ margin: `${px(20)}px 0` }}\r\n                onClick={() => {\r\n                  cencleClick()\r\n                  onSearch(item)\r\n                }}\r\n              >\r\n                <div className='item' style={{ paddingLeft: px(40) }}>\r\n                  <div\r\n                    className='img'\r\n                    style={{\r\n                      width: px(50),\r\n                      height: px(50),\r\n                      marginRight: px(40),\r\n                      borderRadius: px(60),\r\n                      backgroundImage: images,\r\n                    }}>\r\n                    {/* <img src={images} style={{ width: px(40) }} /> */}\r\n                  </div>\r\n\r\n                  <div className='petInfo'>\r\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20), textAlign: 'start' }}>{item.petName}</p>\r\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Patient ID: ${item.patientId}`}</p>\r\n                    <p style={{ color: '#797979', fontSize: px(18) }}>{`Owner: ${item.owner}`}</p>\r\n                  </div>\r\n                </div>\r\n              </li >\r\n            )\r\n\r\n          })\r\n          let liStyle = { backgroundColor: '#fff', }\r\n          if (petList.length > 4) {\r\n            liStyle = { height: px(500), overflowY: 'auto' }\r\n          }\r\n\r\n\r\n          return (\r\n            <div className='searchPetList flex' >\r\n              <ul style={liStyle}>\r\n                {option}\r\n              </ul>\r\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\r\n                onClick={cencleClick}\r\n              >Cencle</a>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    } else {\r\n      if (noUSB) {\r\n        return (\r\n          <div className='searchPetLoading' style={{ padding: `${10}px 0` }}>\r\n\r\n            <p style={{ width: '80%', fontSize: px(18) }}>\r\n              Please insert address and scan\r\n            </p>\r\n\r\n            <a href=\"#\" style={{ color: '#e1206d' }}\r\n              onClick={cencleClick}\r\n            >Cencle</a>\r\n          </div>\r\n        )\r\n      } else {\r\n        if (bluDevice.length > 0) {\r\n          let option = bluDevice.map((item, index) => {\r\n            return (\r\n              <li\r\n                key={`${index}`}\r\n                style={{ margin: `${px(20)}px 0` }}\r\n                onClick={() => {\r\n                  console.log('mac列表为空,点击列表内容');\r\n                  setBluDevice([])\r\n                  // setSearchMac(false)\r\n                  setIsShowBlePetList(true)\r\n                  setIsMatchPet(true)\r\n                  matchingTimer && clearTimeout(matchingTimer)\r\n                  matchingTimer = setTimeout(() => {\r\n                    let haveFlog = false, index = -1\r\n                    for (let i = 0; i < testPetList.length; i++) {\r\n                      if (testPetList[i].macId === item) {\r\n                        haveFlog = true\r\n                        index = i\r\n                        break;\r\n                      }\r\n                    }\r\n                    if (haveFlog) {\r\n                      if (storage.lastOrganization === '1') {\r\n                        matchPet(testPetList[index].petId)\r\n                      } else {\r\n                        setModalVis(true)\r\n                        setIsNotFound(false)\r\n                        cencleClick()\r\n\r\n                      }\r\n                    } else {\r\n                      setModalVis(true)\r\n                      setIsNotFound(true)\r\n                      cencleClick()\r\n                    }\r\n\r\n\r\n                    setIsMatchPet(false)\r\n                    matchingTimer && clearTimeout(matchingTimer)\r\n                  }, 2000);\r\n\r\n\r\n                }}\r\n              >\r\n                <div className='item' style={{ paddingLeft: px(40) }}>\r\n                  <div className='petInfo'>\r\n                    <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>mac:{item}</p>\r\n                  </div>\r\n                </div>\r\n              </li >\r\n            )\r\n          })\r\n          let liStyle = { backgroundColor: '#fff', }\r\n          if (bluDevice.length > 4) {\r\n            liStyle = { height: px(500), overflowY: 'auto' }\r\n          }\r\n          return (\r\n            <div className='searchPetList' style={{ flexDirection: 'column' }}>\r\n              <ul style={liStyle}>\r\n                {option}\r\n              </ul>\r\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(10), marginBottom: px(21) }}\r\n                onClick={cencleClick}\r\n              >Cencle</a>\r\n            </div>\r\n          )\r\n        } else {\r\n          return (\r\n            <div className='searchPetLoading' style={{ padding: `${20}px 0`, width: '100%' }}>\r\n              <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n                <LoadingOutlined style={{ fontSize: 30, color: '#e1206d', marginTop: mTop(-30), }} />\r\n              </div>\r\n              <p style={{ color: '#e1206d', marginTop: px(5), width: '80%' }}>\r\n                scanning...\r\n              </p>\r\n\r\n              <a href=\"#\" style={{ color: '#e1206d', marginTop: px(30) }}\r\n                onClick={cencleClick}\r\n              >Cencle</a>\r\n            </div>\r\n          )\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n  const matchPet = (searchValue) => {\r\n    console.log('搜索词:', searchValue);\r\n    let list = electronStore.get('doctorExam')\r\n\r\n    let searchData = []\r\n    let keyWord = searchValue\r\n    for (let i = 0; i < list.length; i++) {\r\n\r\n      let petName = `${list[i].petId}`\r\n      if (keyWord === petName) {\r\n        searchData.push(list[i])\r\n      }\r\n    }\r\n\r\n\r\n    setIsMatchPet(false)\r\n\r\n    setMacMatchPetList(searchData)\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div id=\"heard\"\r\n      style={{ height: px(50) }}\r\n    >\r\n      <div className='l'>\r\n        <div className='menuF' style={{ marginLeft: px(40), marginRight: px(40) }}>\r\n          <div className=\"menu\"\r\n            onMouseOver={menuMouseOver}\r\n            onMouseOut={menuMouseOut}>\r\n            <img src={menu} style={{ width: px(20), }} />\r\n            {\r\n              menuVisible\r\n                // true\r\n                ? <div\r\n                  className='manuBody'\r\n                  style={{ top: px(20), left: px(-40) }}\r\n                >\r\n                  <div className='triangle'\r\n                    style={{\r\n                      borderLeft: `${px(10)}px solid transparent`,\r\n                      borderRight: `${px(10)}px solid transparent`,\r\n                      borderBottom: `${px(13)}px solid #fff`,\r\n                      left: px(40)\r\n                    }} />\r\n\r\n                  <div className='manuBodyList' style={{ marginTop: px(13) }}>\r\n                    {menuList()}\r\n                  </div>\r\n                </div>\r\n                : null\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        {/* <div className=\"return\" style={{ marginLeft: px(10) }}\r\n          onClick={() => { onReturn() }}\r\n        >\r\n          <img src={heardLeft} style={{ height: px(25), }} />\r\n        </div> */}\r\n        <div className=\"search\" style={{ width: px(300) }}>\r\n\r\n          <input\r\n            placeholder=\"Search Pet    &#xe63f;\"\r\n            style={{ fontSize: px(16), paddingLeft: px(20) }}\r\n            value={value}\r\n            onChange={(text) => {\r\n              inputChange(text)\r\n            }}\r\n\r\n            onKeyUp={(e) => {\r\n              // console.log(e);\r\n              if (e.keyCode === 13) {\r\n                console.log('回车,去搜索');\r\n              }\r\n              if (e.keyCode === 27) {\r\n                console.log('清空');\r\n                setValue('')\r\n                setVisible(false)\r\n              }\r\n            }}\r\n\r\n          />\r\n          {\r\n            blueSearch ?\r\n              <div className=\"searchIconFa bluSearch\"\r\n              // style={{ cursor: 'pointer', backgroundColor: 'pink' }}\r\n              // onClick={blueClick}\r\n              >\r\n                <div onClick={blueClick} >\r\n                  {/* <img src={blueSearchPng} style={{ width: '50%' }} /> */}\r\n                  <span className=\" iconfont icon-sousuo searchIcon\"\r\n                    style={{ fontSize: px(25) }}\r\n                  />\r\n                </div>\r\n\r\n                {\r\n                  searchMac ?\r\n                    // true ?\r\n                    <div className='searchPet flex' style={{ width: px(400), }}>\r\n                      <div className='triangle'\r\n                        style={{\r\n                          borderLeft: `${px(20)}px solid transparent`,\r\n                          borderRight: `${px(20)}px solid transparent`,\r\n                          borderBottom: `${px(25)}px solid #fff`,\r\n                          // marginLeft: px(30),\r\n                          zIndex: 999,\r\n\r\n                        }} />\r\n\r\n                      <div className='searchPetBody' style={{ width: '100%' }} >\r\n                        {blusearchBody()}\r\n                      </div>\r\n                    </div>\r\n                    : null\r\n                }\r\n\r\n              </div>\r\n              : <div className=\"searchIconFa\">\r\n                <span className=\" iconfont icon-sousuo searchIcon\"\r\n                  style={{ fontSize: px(25) }}\r\n                />\r\n              </div>\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {\r\n            visible ?\r\n              // true ?\r\n              <div className='searchPet' style={{ top: px(35), width: px(400), }}>\r\n                <div className='triangle'\r\n                  style={{\r\n                    borderLeft: `${px(20)}px solid transparent`,\r\n                    borderRight: `${px(20)}px solid transparent`,\r\n                    borderBottom: `${px(25)}px solid #fff`,\r\n                    marginLeft: px(30),\r\n                    zIndex: 999,\r\n\r\n                  }} />\r\n\r\n                <div className='searchPetBody' >\r\n                  {searchPetBody()}\r\n                </div>\r\n              </div>\r\n              : null\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n        </div>\r\n      </div >\r\n\r\n\r\n      <div className=\"r\"\r\n      >\r\n\r\n\r\n        <div className='heardCenter'>\r\n          <div className=\"message\"\r\n            onClick={() => history.push('/menuOptions/unassigned')}\r\n          >\r\n            <img src={message} alt=\"\" style={{ height: px(25), width: px(25) }} />\r\n          </div>\r\n          <div className=\"help\"\r\n            style={{ margin: `0 ${px(25)}px` }}\r\n            onClick={() => history.push('/menuOptions/help')}\r\n          >\r\n            <img src={help} alt=\"\" style={{ height: px(25) }} />\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"min_close\" >\r\n          <div\r\n            className='min_icon'\r\n            onClick={MINCOLOSE.minClock}\r\n            style={{ backgroundColor: minbgc, height: px(50), width: px(50) }}\r\n            onMouseEnter={MINCOLOSE.minMouseEnter}\r\n            onMouseLeave={MINCOLOSE.minMouseLeave}\r\n          >\r\n            <img src={rMin} alt=\"\" style={{ width: px(20) }} />\r\n          </div>\r\n          <div\r\n            className='min_icon'\r\n            onClick={MINCOLOSE.closeClock}\r\n            style={{ backgroundColor: closebgc, height: px(50), width: px(50) }}\r\n            onMouseEnter={MINCOLOSE.closeMouseEnter}\r\n            onMouseLeave={MINCOLOSE.closeMouseLeave}\r\n          >\r\n            <img src={rClose} alt=\"\" style={{ width: px(20) }} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {modalvisible && modal()}\r\n      {deviceModel && devices()}\r\n\r\n      <MyModal\r\n        // visible={true}\r\n        visible={modalVis}\r\n        element={\r\n          <div className='tip' style={{ width: px(420), height: px(480), borderRadius: px(20) }}>\r\n            <div className='close'\r\n              style={{ height: px(60) }}\r\n              onClick={() => setModalVis(false)}\r\n            >\r\n              <div className='flex' style={{ height: px(60), width: px(60), }}>\r\n                <img src={close} alt=\"\" style={{ width: px(20) }} />\r\n              </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div className=\"text\">\r\n              <h1 style={{ fontSize: px(36), marginTop: px(30) }}> {isNotFound ? 'Pet not found!' : 'Pet found!'}</h1>\r\n\r\n            </div>\r\n            <div className='flex' style={{ margin: `${px(20)}px 0` }}>\r\n              {isNotFound ?\r\n                <img src={redclose} width=\"50px\" /> :\r\n                <img src={jinggao} width=\"50px\" />\r\n              }\r\n            </div>\r\n            <div className='textbody' style={{ marginTop: px(30), color: '#000' }}>\r\n              {isNotFound ? <p style={{ fontSize: px(22) }}> This pet is not on your database</p> :\r\n                <p style={{ fontSize: px(22) }}>Pet Identified but does not <br /> belong to your organization.</p>}\r\n            </div>\r\n\r\n\r\n\r\n            <div className='flex' style={{ marginTop: px(30), width: '100%', }}>\r\n\r\n              <div\r\n                className='btn flex'\r\n                style={{ height: px(40) }}\r\n                onClick={() => {\r\n                  setModalVis(false)\r\n                  cencleClick()\r\n                }}\r\n              >\r\n                <p>OK</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n      />\r\n\r\n    </div >\r\n  )\r\n}\r\n\r\nHeard.propTypes = {\r\n  onReturn: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  menu1Click: PropTypes.func,\r\n  menu2Click: PropTypes.func,\r\n  menu3Click: PropTypes.func,\r\n  menu4Click: PropTypes.func,\r\n  menu5Click: PropTypes.func,\r\n  menu6Click: PropTypes.func,\r\n  menu7Click: PropTypes.func,\r\n  menu8Click: PropTypes.func,\r\n  menu9Click: PropTypes.func,\r\n  blueSearch: PropTypes.bool\r\n\r\n}\r\nHeard.defaultProps = {\r\n  onSearch: () => { },\r\n  onReturn: () => { },\r\n  menu1Click: () => { },\r\n  menu2Click: () => { },\r\n  menu3Click: () => { },\r\n  menu4Click: () => { },\r\n  menu5Click: () => { },\r\n  menu6Click: () => { },\r\n  menu7Click: () => { },\r\n  menu8Click: () => { },\r\n  menu9Click: () => { },\r\n  blueSearch: false,\r\n}\r\n\r\n\r\nexport default connect(\r\n  state => ({\r\n\r\n  }),\r\n  { setMenuNum }\r\n)(Heard)",["310","311"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx",["312","313","314","315","316","317"],"import React, {\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport { Image, Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun\r\n} from '../../../store/actions';\r\nimport _ from 'lodash';\r\nimport './linkEquipment.less';\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n    let { mellaConnectStatus } = hardwareMessage;\r\n    return (\r\n\r\n        <Content className={\"contentBox\"}>\r\n            <div className='chackPatientBox'>\r\n                <p className='chackPatientTitle'>Select a patient</p>\r\n            </div>\r\n        </Content>\r\n\r\n    );\r\n}\r\nexport default connect(\r\n    state => ({\r\n        petMessage: state.petReduce.petDetailInfo,\r\n        hardwareMessage: state.hardwareReduce,\r\n    }),\r\n    {\r\n        selectHardwareModalShowFun,\r\n        petSortTypeFun,\r\n        petDetailInfoFun,\r\n        setMellaConnectStatusFun,\r\n        setMellaMeasureValueFun,\r\n        setMellaPredictValueFun,\r\n        setMellaMeasurePartFun\r\n    }\r\n)(LinkEquipment);",["318","319"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx",["320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347"],"////这是普通用户的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  message,\r\n  Menu,\r\n  Modal,\r\n  Select,\r\n  ConfigProvider\r\n\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport Button1 from '../../utils/button/Button'\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport Heard from '../../utils/heard/Heard'\r\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\r\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\r\nimport './doctorSelectExam.less'\r\n\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { FetchEszVet } from '../../utils/FetchEszVet'\r\nimport { fetchRequest } from '../../utils/FetchUtil1'\r\nimport gender from '../../utils/gender'\r\nimport temporaryStorage from '../../utils/temporaryStorage';\r\nimport { MTop, mTop, pX, px, win } from '../../utils/px';\r\nimport { stopBubble } from '../../utils/current'\r\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\r\nimport { fetchRhapsody } from '../../utils/FetchUtil5';\r\nimport jinggao from './../../assets/img/jinggao.png'\r\nimport redclose from './../../assets/img/redclose.png'\r\nimport blackTriangle from './../../assets/img/blackTriangle.png'\r\nimport refresh from './../../assets/img/Refresh.png'\r\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\r\n\r\nimport electronStore from '../../utils/electronStore';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\n\r\n\r\n\r\nexport default class DoctorSelectAllExam extends Component {\r\n  state = {\r\n    loading: false,\r\n    api: '',\r\n    id: '',  //选择location的id\r\n    locations: [],\r\n    data: [],\r\n    searchData: [],\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    seleceID: '',  //宠物医生id\r\n    spin: false,   //刷新按钮是否旋转\r\n    unixToURI: '',\r\n    ezyVetToken: '',\r\n    current: 1,\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    heardSearchText: '',\r\n\r\n    isNotFound: true,\r\n    modalVis: false,\r\n\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n\r\n    sortBy: 'Time',\r\n    showsortBy: false\r\n  }\r\n  componentWillMount () {\r\n    // console.log('------------', this.props.location.listDate);\r\n    try {\r\n      if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\r\n        // console.log('------------', this.props.location);\r\n        let data = JSON.parse(this.props.location.listDate)\r\n        this.setState({\r\n          data,\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    console.log(windowsHeight, height, width);\r\n    if (windowsHeight < 900) {\r\n      ipcRenderer.send('table', win())\r\n    } else {\r\n      ipcRenderer.send('big', win())\r\n    }\r\n    // ipcRenderer.send('big')\r\n    message.destroy()\r\n\r\n\r\n\r\n    storage.identity = '3'\r\n\r\n    if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\r\n      let data = JSON.parse(this.props.location.listDate)\r\n      this.setState({\r\n        data,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        loading: true,\r\n      })\r\n    }\r\n    this._getExam()\r\n    temporaryStorage.logupVetInfo = {}\r\n    temporaryStorage.logupSelectOrganization = {}\r\n    temporaryStorage.logupSuccessData = {}\r\n    temporaryStorage.logupOrganization = {}\r\n    temporaryStorage.logupEmailCode = ''\r\n\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\r\n    for (let i = 0; i < items.length; i++) {\r\n      let style = items[i].style\r\n      style.padding = \"5px 5px\"\r\n      style.textAlign = 'center'\r\n\r\n\r\n    }\r\n\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    console.log(windowsHeight, height, width);\r\n    if (windowsHeight < 900) {\r\n      ipcRenderer.send('table', win())\r\n    } else {\r\n      ipcRenderer.send('big', win())\r\n    }\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  rhapsody = async (patientsArr) => {\r\n\r\n    // console.log(patientsArr);\r\n    let dataArr = []\r\n    try {\r\n      for (let i = 0; i < patientsArr.length; i++) {\r\n        let params = { query: `query { patient (id:\"${patientsArr[i].patientId}\") {  vitals { data{ id, weight{value}, createdAt, updatedAt}}}}` }\r\n        let item = await fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n        if (item.data) {\r\n\r\n          let { vitals } = item.data.patient\r\n          let vitalData = vitals.data\r\n          console.log('-----------', vitalData);\r\n          let weight = ''\r\n          if (vitalData.length > 0) {\r\n            vitalData.sort((a, b) => {\r\n              return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n            })\r\n            if (vitalData[0].weight && vitalData[0].weight.value) {\r\n              patientsArr[i].weight = (vitalData[0].weight.value * 0.45).toFixed(1)\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n      console.log(patientsArr);\r\n      patientsArr.sort((a, b) => {\r\n        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n      })\r\n      this.setState({\r\n        data: patientsArr,\r\n        loading: false\r\n      })\r\n\r\n      electronStore.set('doctorExam', patientsArr)\r\n    } catch (error) {\r\n      this.setState({\r\n        loading: false,\r\n      })\r\n      message.destroy()\r\n      message.error('Medical record acquisition failed')\r\n    }\r\n\r\n\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n\r\n\r\n\r\n\r\n\r\n    //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\r\n    if (storage.lastOrganization === '34') {\r\n\r\n      console.log(storage.connectionKey);\r\n      //1.获取用户id\r\n\r\n      let params = { query: `query { business { id, name, state } }` }\r\n      fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n\r\n        .then(res => {\r\n          console.log('---', res);\r\n          if (res.errors) {\r\n            this.setState({\r\n              loading: false,\r\n              spin: false\r\n            })\r\n            message.destroy()\r\n            message.error('Data acquisition failed')\r\n\r\n          } else {\r\n            console.log('获取到了businessId');\r\n            let businessId = res.data.business.id\r\n            // let param = {\r\n            //   query: `query  { patients (businessId:\"${businessId}\") { data{ id, clientId, name,gender, dateOfBirth\r\n            //   species{id,name},\r\n            //   breeds{id,name},\r\n            //   createdAt,owners{owner{firstName,lastName} }}}` }\r\n            let param = {\r\n              query: `query { \r\n                patients (businessId:\"${businessId}\") {\r\n                    data{ \r\n                         id, \r\n                         clientId, \r\n                         businessId, \r\n                         name  \r\n                         gender,\r\n                         dateOfBirth,\r\n                         species{id,name},\r\n                         breeds{id,name},\r\n                         createdAt ,\r\n                         owners{owner{firstName,lastName}}\r\n                    }\r\n                }\r\n            }`\r\n            }\r\n\r\n            console.log('获取病历单的入参', param, JSON.stringify(param));\r\n            fetchRhapsody('', 'POST', param, storage.connectionKey)\r\n              .then(res => {\r\n                console.log(res);\r\n                if (res.errors) {\r\n                  this.setState({\r\n                    loading: false,\r\n                    spin: false\r\n                  })\r\n                  message.destroy()\r\n                  message.error('Failed to get pet list')\r\n\r\n                } else {\r\n                  let patientsArr = res.data.patients.data\r\n                  let dataArr = []\r\n                  for (let i = 0; i < patientsArr.length; i++) {\r\n                    const patient = patientsArr[i];\r\n                    let { id, name, gender, dateOfBirth, breeds, owners, createdAt } = patient\r\n\r\n                    createdAt = moment(createdAt).format('X')\r\n                    let owner = 'unknown'\r\n                    if (owners.length > 0) {\r\n                      let ownerItem = owners[0]\r\n                      if (ownerItem && ownerItem.owner) {\r\n                        let { firstName, lastName } = ownerItem.owner\r\n                        if (firstName || lastName) {\r\n                          owner = `${lastName} ${firstName}`\r\n                        }\r\n                      }\r\n\r\n                    }\r\n\r\n                    let breed = 'unknown'\r\n                    if (breeds.length > 0 && breeds[0].name) {\r\n                      breed = breeds[0].name\r\n                    }\r\n\r\n                    let petAge = 'unknown'\r\n                    if (dateOfBirth) {\r\n                      petAge = moment(new Date()).diff(moment(dateOfBirth), 'years')\r\n                      // console.log('petAge', petAge);\r\n                    }\r\n\r\n                    let json = {\r\n                      insertedAt: createdAt,\r\n                      patientId: id,\r\n                      petName: name,\r\n                      owner,\r\n                      breed,\r\n                      gender: gender || 'unknown',\r\n                      age: petAge,\r\n                      petId: '',\r\n                      id: `${i}`,\r\n                      weight: null,\r\n                      rfid: null,\r\n                      url: null,\r\n                      speciesId: null,\r\n                    }\r\n                    dataArr.push(json)\r\n\r\n\r\n                  }\r\n\r\n                  console.log(dataArr);\r\n\r\n\r\n\r\n                  this.rhapsody(dataArr)\r\n                }\r\n\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n                this.setState({\r\n                  loading: false,\r\n                  spin: false\r\n                })\r\n                message.destroy()\r\n                message.error('Failed to get pet list')\r\n              })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading: false,\r\n            spin: false\r\n          })\r\n          message.destroy()\r\n          message.error('Data acquisition failed')\r\n        })\r\n\r\n\r\n\r\n\r\n      return\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('查询宠物的入参', params);\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n\r\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\r\n      // fetchRequest('/new/pet/subscribe/page', 'POST', params)\r\n\r\n      .then(res => {\r\n        console.log('查询到的宠物列表,/user/listAllPetInfo', res);\r\n\r\n        if (res.flag === true && res.data) {\r\n          let data = []\r\n          let oldList = res.data\r\n          // let oldList = res.data.list\r\n          for (let i = 0; i < oldList.length; i++) {\r\n            let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\r\n              h2tLength, torsoLength } = oldList[i]\r\n            let owner = ''\r\n            patientId = isUnKnow(patientId)\r\n            petName = isUnKnow(petName)\r\n            breedName = isUnKnow(breedName)\r\n            age = isUnKnow(age)\r\n            weight = isUnKnow(weight)\r\n            if (!firstName) {\r\n              firstName = ''\r\n            }\r\n            if (!lastName) {\r\n              lastName = ''\r\n            }\r\n            if (lastName === '' && firstName === '') {\r\n              owner = 'unknown'\r\n            } else {\r\n              owner = `${lastName} ${firstName}`\r\n            }\r\n            createTime = moment(createTime).format('X')\r\n            let petGender = ''\r\n            switch (`${gender}`) {\r\n              case '1': petGender = 'F'\r\n\r\n                break;\r\n              case '0': petGender = \"M\"\r\n                break;\r\n              default: petGender = 'unknown'\r\n                break;\r\n            }\r\n            let petAge = 'unknown'\r\n            if (birthday) {\r\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n            }\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              patientId,\r\n              petName,\r\n              owner,\r\n              breed: breedName,\r\n              gender: petGender,\r\n              age: petAge,\r\n              petId,\r\n              id: i,\r\n              weight,\r\n              rfid,\r\n              url,\r\n              speciesId,\r\n              l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n              h2tLength, torsoLength,\r\n              pethubId, macId,\r\n\r\n            }\r\n            data.push(json)\r\n\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          console.log('列表的数据：', data);\r\n          storage.doctorList = JSON.stringify(data)\r\n          this.setState({\r\n            data,\r\n            loading: false,\r\n            spin: false\r\n          })\r\n\r\n          electronStore.set('doctorExam', data)\r\n\r\n\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n          spin: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    //dataIndex 是标题名称\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    //自定义Icon\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\r\n    onFilter: (value, record) => {\r\n      console.log(value, record, dataIndex);\r\n      return record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : ''\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n  _refresh = () => {\r\n    console.log('点击了');\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    // this._getData()\r\n    this._getExam()\r\n  }\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n\r\n    switch (e.key) {\r\n      case '1': this.props.history.push('/page11'); break;\r\n      case '2': this.props.history.push('/'); break;\r\n      case '3':\r\n        try {\r\n\r\n          let selectNum = document.getElementsByClassName('ant-pagination-item-active')\r\n          // storage.defaultCurrent = selectNum[0].title\r\n          storage.doctorList = JSON.stringify(this.state.data)\r\n        } catch (error) {\r\n          console.log('错误信息', error);\r\n        }\r\n\r\n\r\n        this.props.history.push('/page8'); break;\r\n      case '4': this.props.history.push('/page12'); break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  _search1 = (search) => {       //这个是搜索调用后台的函数，现在废弃20210929\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      petName: search,\r\n    }\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n    console.log('搜索的数据', params);\r\n    fetchRequest('/pet/listPetsLike', \"POST\", params)\r\n      .then(res => {\r\n        console.log(res);\r\n\r\n        if (res.flag === true) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { age, createTime, patientId, petName, firstName, birthday, lastName, breedName, gender, petId, weight } = res.data[i]\r\n            let owner = ''\r\n            patientId = isUnKnow(patientId)\r\n            petName = isUnKnow(petName)\r\n            breedName = isUnKnow(breedName)\r\n            age = isUnKnow(age)\r\n            weight = isUnKnow(weight)\r\n            if (!firstName) {\r\n              firstName = ''\r\n            }\r\n            if (!lastName) {\r\n              lastName = ''\r\n            }\r\n            if (lastName === '' && firstName === '') {\r\n              owner = 'unknown'\r\n            } else {\r\n              owner = `${lastName} ${firstName}`\r\n            }\r\n            createTime = moment(createTime).format('X')\r\n            let petGender = ''\r\n            switch (`${gender}`) {\r\n              case '1': petGender = 'F'\r\n\r\n                break;\r\n              case '0': petGender = \"M\"\r\n                break;\r\n              default: petGender = 'unknown'\r\n                break;\r\n            }\r\n            let petAge = 'unknown'\r\n            if (birthday) {\r\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n              // console.log('petAge', petAge);\r\n            }\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              patientId,\r\n              petName,\r\n              owner,\r\n              breed: breedName,\r\n              gender: petGender,\r\n              age: petAge,\r\n              petId,\r\n              id: i,\r\n              weight\r\n\r\n            }\r\n            data.push(json)\r\n\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            searchData: data,\r\n            loading: false\r\n          })\r\n        } else {\r\n          this.setState({\r\n            searchData: [],\r\n            loading: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n  }\r\n\r\n  _search = (keyWord) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\r\n\r\n    /**\r\n     * 使用indexof方法实现模糊查询\r\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n     *  \r\n     * list         原数组\r\n     * keyWord      查询关键词\r\n     * searchData   查询的结果\r\n     * \r\n     * toLowerCase（）方法：将字符串统一转成小写\r\n     * toUpperCase（）方法：将字符串统一转成大写\r\n     * \r\n     */\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    let list = this.state.data\r\n    let searchData = []\r\n    for (let i = 0; i < list.length; i++) {\r\n      let petName = list[i].petName.toLowerCase() || ''\r\n      let patientId = list[i].patientId.toLowerCase() || ''\r\n      let rfid = list[i].rfid || ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${rfid}`.indexOf(keyWord) !== -1\r\n      ) {\r\n        searchData.push(list[i])\r\n      }\r\n    }\r\n    console.log(searchData);\r\n    this.setState({\r\n      searchData,\r\n      loading: false\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  RFIDSearch = () => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    fetchRequest4(`/pet/getPetInfoByRFID/${this.state.heardSearchText}/${storage.lastOrganization}`, 'GET')\r\n      .then(res => {\r\n        console.log('----RFID搜索结果', res);\r\n\r\n        if (res.flag === true && res.data) {\r\n          let { createTime, patientId, petName, firstName, lastName, breedName, gender, birthday, petId, rfid, weight } = res.data\r\n          patientId = patientId || 'unknown'\r\n          petName = petName || 'unknown'\r\n          breedName = breedName || 'unknown'\r\n          weight = weight || 'unknown'\r\n          let owner = ''\r\n          if (!firstName) {\r\n            firstName = ''\r\n          }\r\n          if (!lastName) {\r\n            lastName = ''\r\n          }\r\n          if (lastName === '' && firstName === '') {\r\n            owner = 'unknown'\r\n          } else {\r\n            owner = `${lastName} ${firstName}`\r\n          }\r\n          createTime = moment(createTime).format('X')\r\n          let petGender = ''\r\n          switch (`${gender}`) {\r\n            case '1': petGender = 'F'\r\n\r\n              break;\r\n            case '0': petGender = \"M\"\r\n              break;\r\n            default: petGender = 'unknown'\r\n              break;\r\n          }\r\n          let petAge = 'unknown'\r\n          if (birthday) {\r\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n            // console.log('petAge', petAge);\r\n          }\r\n          let json = {\r\n            insertedAt: createTime,\r\n            patientId,\r\n            petName,\r\n            owner,\r\n            breed: breedName,\r\n            gender: petGender,\r\n            age: petAge,\r\n            petId,\r\n            id: 0,\r\n            weight,\r\n            rfid\r\n          }\r\n          let searchData = []\r\n          searchData.push(json)\r\n          this.setState({\r\n            searchData,\r\n            loading: false\r\n          })\r\n\r\n\r\n\r\n\r\n        } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\r\n          console.log('找到了但是不是在这个组织下');\r\n          this.setState({\r\n            loading: false,\r\n            modalVis: true,\r\n            isNotFound: false,\r\n            heardSearchText: ''\r\n          })\r\n        } else {\r\n          console.log('没有找到');\r\n          this.setState({\r\n            loading: false,\r\n            modalVis: true,\r\n            isNotFound: true,\r\n            heardSearchText: ''\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n\r\n        console.log('抛出异常:', err);\r\n        this.setState({\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n  draggleRef = React.createRef();\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render () {\r\n    const columns = [\r\n      {\r\n        title: 'Time',\r\n        dataIndex: 'insertedAt',\r\n        key: 'insertedAt',\r\n        width: '16%',\r\n        // ...this.getColumnSearchProps('insertedAt'),\r\n        render: (text, record, index) => {\r\n          let chazhi = new Date().getTimezoneOffset()\r\n          // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\r\n          let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\r\n          let time = moment(parseInt(text) * 1000).format('hh:mm a');\r\n          let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\r\n          // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\r\n          return (\r\n            <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\r\n              <p>{`${year}`}</p>\r\n              <p>{`${time}`}</p>\r\n            </div>\r\n          )\r\n        },\r\n\r\n      },\r\n      {\r\n        title: 'Pet ID',\r\n        dataIndex: 'patientId',\r\n        key: 'patientId',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('patientId'),\r\n      },\r\n      {\r\n        title: 'Pet Name',\r\n        dataIndex: 'petName',\r\n        key: 'petName',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('petName'),\r\n      },\r\n      {\r\n        title: 'Owner',\r\n        dataIndex: 'owner',\r\n        key: 'owner',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('owner'),\r\n      },\r\n      {\r\n        title: 'Breed',\r\n        dataIndex: 'breed',\r\n        key: 'breed',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('breed'),\r\n        render: (text, record, index) => {\r\n          if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{'unknown'}</p>\r\n            )\r\n          } else {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{text}</p>\r\n            )\r\n          }\r\n\r\n        }\r\n      },\r\n\r\n      {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        key: 'gender',\r\n        width: '12%',\r\n        // width: '30%',\r\n        // ...this.getColumnSearchProps('gender'),\r\n      },\r\n      {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n        width: '12%',\r\n        // width: '20%',\r\n        render: (text, record, index) => {\r\n          // console.log(text);\r\n\r\n          if (`${text}` === 'NaN') {\r\n            return (\r\n              <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\r\n            )\r\n          } else {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{text}</p>\r\n            )\r\n          }\r\n\r\n        }\r\n      },\r\n\r\n\r\n    ];\r\n    const { loading, data, api, id, seleceID, spin, closeColor, closebgc, minbgc, disabled, bounds, modalVis, sortBy, showsortBy } = this.state\r\n\r\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\r\n    for (let i = 0; i < items.length; i++) {\r\n      let style = items[i].style\r\n      style.padding = `5px 5px`\r\n      style.textAlign = 'center'\r\n    }\r\n    const noData = () => {\r\n      return (\r\n        <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\r\n          <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\r\n          <a style={{ fontSize: px(22) }} href=\"#\"\r\n            onClick={(e) => {\r\n              console.log('我要去添加宠物');\r\n              try {\r\n\r\n                storage.doctorList = JSON.stringify(this.state.data)\r\n              } catch (error) {\r\n                console.log('错误信息', error);\r\n              }\r\n              // /pet/doctorAddPet\r\n              this.props.history.push({ pathname: '/pet/doctorAddPet' })\r\n\r\n              e.preventDefault();\r\n\r\n            }}\r\n\r\n          >{`go to add`}</a>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n      <div id=\"doctorSelectExam\" onClick={(e) => {\r\n        console.log('隐藏');\r\n        this.setState({\r\n          showsortBy: false\r\n        })\r\n      }}>\r\n        {/* 关闭缩小 */}\r\n        <Heard\r\n          onReturn={() => {\r\n            this.props.history.push('/page11')\r\n          }}\r\n          onSearch={(data) => {\r\n\r\n            storage.doctorExam = JSON.stringify(data)\r\n\r\n            storage.doctorList = JSON.stringify(this.state.data)\r\n            if (storage.isClinical === 'true') {\r\n              this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\r\n            } else {\r\n              this.props.history.push({ pathname: '/page10', })\r\n            }\r\n          }}\r\n          menu8Click={() => {\r\n            this.props.history.push({ pathname: '/uesr/selectExam', })\r\n          }}\r\n          blueSearch={true}\r\n        />\r\n\r\n\r\n        <div className=\"hread flex\">\r\n          <div className=\"hread1 flex\" style={{ marginTop: px(30) }}>\r\n            <div className=\"heard1L flex\">\r\n              <div className=\"title\" style={{ fontSize: px(25) }}>Client Results</div>\r\n              <div className=\"refresh flex\"\r\n                style={{ fontSize: px(25), marginLeft: px(10) }}\r\n              >\r\n                <SyncOutlined onClick={this._refresh} spin={spin} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"walkin flex\"\r\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20) }}\r\n              onClick={() => {\r\n                storage.doctorExam = JSON.stringify('')\r\n                storage.doctorList = JSON.stringify(this.state.data)\r\n                if (storage.isClinical === 'true') {\r\n                  this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: null })\r\n                } else {\r\n                  this.props.history.push({ pathname: '/page10', })\r\n                }\r\n\r\n              }}\r\n            >Walk-In</div>\r\n\r\n          </div>\r\n          <div className=\"heard2 flex\" style={{ marginTop: px(8), marginBottom: px(8) }}>\r\n\r\n            <div className=\"sort flex\" >\r\n              <p style={{ fontSize: px(16), marginRight: px(10) }}>sort By:</p>\r\n\r\n              <SelectionBox\r\n                listArr={[\r\n                  { key: 'time', value: 'Time' },\r\n                  { key: 'petid', value: 'Pet ID' },\r\n                  { key: 'owner', value: 'Owner' },\r\n                  { key: 'breed', value: 'Breed' },\r\n                  { key: 'petname', value: 'Pet Name' },\r\n                  { key: 'gender', value: 'Gender' },\r\n                ]}\r\n                clickItem={(item) => {\r\n                  let petList = [].concat(data)\r\n                  switch (item.key) {\r\n                    case 'time':\r\n                      petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\r\n                      break;\r\n                    case 'petid':\r\n                      petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\r\n                      break;\r\n                    case 'owner':\r\n                      petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\r\n                      break;\r\n                    case 'breed':\r\n                      petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\r\n                      break;\r\n                    case 'petname':\r\n                      petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\r\n                      break;\r\n                    case 'gender':\r\n                      petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\r\n                      break;\r\n                  }\r\n\r\n                  this.setState({\r\n                    sortBy: item.value,\r\n                    showsortBy: false,\r\n                    data: petList\r\n                  })\r\n                }}\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"table\" >\r\n          <ConfigProvider renderEmpty={noData}>\r\n            <Table\r\n              style={{\r\n                // border: ' #979797 1px solid',\r\n                padding: 0,\r\n                margin: 0,\r\n                width: '95%',\r\n                // height: px(500)\r\n              }}\r\n              rowKey={data => data.id}\r\n              bordered={false}\r\n              columns={columns}\r\n              dataSource={(this.state.heardSearchText.length === 0) ? this.state.data : this.state.searchData}\r\n              loading={loading}\r\n              locale={{ filterConfirm: <div>111</div> }}\r\n              // pagination={{ showSizeChanger: false, showQuickJumper: true, defaultCurrent: this.state.current }}\r\n              pagination={false}\r\n              scroll={{\r\n                y: px(600)\r\n              }}\r\n              onRow={(record) => {\r\n                return {\r\n                  onClick: (event) => {\r\n\r\n                    console.log('record', record);\r\n                    storage.doctorExam = JSON.stringify(record)\r\n                    storage.doctorList = JSON.stringify(this.state.data)\r\n\r\n                    if (storage.isClinical === 'true') {\r\n                      this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.patientId })\r\n                    } else {\r\n                      this.props.history.push({ pathname: '/page10', })\r\n                    }\r\n\r\n\r\n                  }, // 点击行\r\n\r\n                };\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </div>\r\n\r\n        <Modal\r\n\r\n          // visible={isOrg}\r\n          visible={modalVis}\r\n          onCancel={() => this.setState({ modalVis: false })}\r\n          width={350}\r\n          footer={[]}\r\n          modalRender={(modal) => (\r\n            <Draggable\r\n              disabled={disabled}\r\n              bounds={bounds}\r\n              onStart={(event, uiData) => this.onStart(event, uiData)}\r\n            >\r\n              <div ref={this.draggleRef}>{modal}</div>\r\n            </Draggable>\r\n          )}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"doctorSelectExamModal\"\r\n        >\r\n          <div id='doctorSelectExamModal'>\r\n            <div className=\"text\"\r\n              onMouseOver={() => {\r\n                if (disabled) {\r\n                  this.setState({\r\n                    disabled: false,\r\n                  });\r\n                }\r\n              }}\r\n              onMouseOut={() => {\r\n                this.setState({\r\n                  disabled: true,\r\n                });\r\n              }}\r\n\r\n            >{this.state.isNotFound ? 'Pet not found!' : 'Pet found!'}</div>\r\n            <div className='Img'>\r\n              {this.state.isNotFound ?\r\n                <img src={redclose} width=\"50px\" /> :\r\n                <img src={jinggao} width=\"50px\" />\r\n              }\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {this.state.isNotFound ? <p > This pet is not on your database</p> :\r\n              <p >Pet Identified but does not <br /> belong to your organization.</p>}\r\n\r\n\r\n            <div style={{ marginTop: px(20) }}>\r\n              <Button1\r\n                text={'OK'}\r\n\r\n                onClick={() => this.setState({\r\n                  modalVis: false\r\n                })}\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </Modal>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["348","349","350","351"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectScheduledExam.jsx",["352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379"],"////这是普通用户的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  message,\r\n  Menu,\r\n  Modal,\r\n  Select,\r\n  ConfigProvider\r\n\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport Button1 from '../../utils/button/Button'\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport Heard from '../../utils/heard/Heard'\r\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\r\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\r\nimport './doctorSelectExam.less'\r\n\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { FetchEszVet } from '../../utils/FetchEszVet'\r\nimport { fetchRequest } from '../../utils/FetchUtil1'\r\nimport gender from '../../utils/gender'\r\nimport temporaryStorage from '../../utils/temporaryStorage';\r\nimport { MTop, mTop, pX, px, win } from '../../utils/px';\r\nimport { stopBubble } from '../../utils/current'\r\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\r\nimport { fetchRhapsody } from '../../utils/FetchUtil5';\r\nimport jinggao from './../../assets/img/jinggao.png'\r\nimport redclose from './../../assets/img/redclose.png'\r\nimport blackTriangle from './../../assets/img/blackTriangle.png'\r\nimport refresh from './../../assets/img/Refresh.png'\r\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\r\n\r\nimport electronStore from '../../utils/electronStore';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\n\r\n\r\n\r\nexport default class DoctorSelecScheduledtExam extends Component {\r\n  state = {\r\n    loading: false,\r\n    api: '',\r\n    id: '',  //选择location的id\r\n    locations: [],\r\n    data: [],\r\n    searchData: [],\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    seleceID: '',  //宠物医生id\r\n    spin: false,   //刷新按钮是否旋转\r\n    unixToURI: '',\r\n    ezyVetToken: '',\r\n    current: 1,\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    heardSearchText: '',\r\n\r\n    isNotFound: true,\r\n    modalVis: false,\r\n\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n\r\n    sortBy: 'Time',\r\n    showsortBy: false\r\n  }\r\n  componentWillMount () {\r\n    // console.log('------------', this.props.location.listDate);\r\n    try {\r\n      if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\r\n        // console.log('------------', this.props.location);\r\n        let data = JSON.parse(this.props.location.listDate)\r\n        this.setState({\r\n          data,\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    console.log(windowsHeight, height, width);\r\n    if (windowsHeight < 900) {\r\n      ipcRenderer.send('table', win())\r\n    } else {\r\n      ipcRenderer.send('big', win())\r\n    }\r\n    // ipcRenderer.send('big')\r\n    message.destroy()\r\n\r\n\r\n\r\n    storage.identity = '3'\r\n\r\n    if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\r\n      let data = JSON.parse(this.props.location.listDate)\r\n      this.setState({\r\n        data,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        loading: true,\r\n      })\r\n    }\r\n    this._getExam()\r\n    temporaryStorage.logupVetInfo = {}\r\n    temporaryStorage.logupSelectOrganization = {}\r\n    temporaryStorage.logupSuccessData = {}\r\n    temporaryStorage.logupOrganization = {}\r\n    temporaryStorage.logupEmailCode = ''\r\n\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\r\n    for (let i = 0; i < items.length; i++) {\r\n      let style = items[i].style\r\n      style.padding = \"5px 5px\"\r\n      style.textAlign = 'center'\r\n\r\n\r\n    }\r\n\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    console.log(windowsHeight, height, width);\r\n    if (windowsHeight < 900) {\r\n      ipcRenderer.send('table', win())\r\n    } else {\r\n      ipcRenderer.send('big', win())\r\n    }\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  rhapsody = async (patientsArr) => {\r\n\r\n    // console.log(patientsArr);\r\n    let dataArr = []\r\n    try {\r\n      for (let i = 0; i < patientsArr.length; i++) {\r\n        let params = { query: `query { patient (id:\"${patientsArr[i].patientId}\") {  vitals { data{ id, weight{value}, createdAt, updatedAt}}}}` }\r\n        let item = await fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n        if (item.data) {\r\n\r\n          let { vitals } = item.data.patient\r\n          let vitalData = vitals.data\r\n          console.log('-----------', vitalData);\r\n          let weight = ''\r\n          if (vitalData.length > 0) {\r\n            vitalData.sort((a, b) => {\r\n              return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n            })\r\n            if (vitalData[0].weight && vitalData[0].weight.value) {\r\n              patientsArr[i].weight = (vitalData[0].weight.value * 0.45).toFixed(1)\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n      console.log(patientsArr);\r\n      patientsArr.sort((a, b) => {\r\n        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n      })\r\n      this.setState({\r\n        data: patientsArr,\r\n        loading: false\r\n      })\r\n\r\n      electronStore.set('doctorExam', patientsArr)\r\n    } catch (error) {\r\n      this.setState({\r\n        loading: false,\r\n      })\r\n      message.destroy()\r\n      message.error('Medical record acquisition failed')\r\n    }\r\n\r\n\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n\r\n\r\n\r\n\r\n\r\n    //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\r\n    if (storage.lastOrganization === '34') {\r\n\r\n      console.log(storage.connectionKey);\r\n      //1.获取用户id\r\n\r\n      let params = { query: `query { business { id, name, state } }` }\r\n      fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n\r\n        .then(res => {\r\n          console.log('---', res);\r\n          if (res.errors) {\r\n            this.setState({\r\n              loading: false,\r\n              spin: false\r\n            })\r\n            message.destroy()\r\n            message.error('Data acquisition failed')\r\n\r\n          } else {\r\n            console.log('获取到了businessId');\r\n            let businessId = res.data.business.id\r\n            // let param = {\r\n            //   query: `query  { patients (businessId:\"${businessId}\") { data{ id, clientId, name,gender, dateOfBirth\r\n            //   species{id,name},\r\n            //   breeds{id,name},\r\n            //   createdAt,owners{owner{firstName,lastName} }}}` }\r\n            let param = {\r\n              query: `query { \r\n                patients (businessId:\"${businessId}\") {\r\n                    data{ \r\n                         id, \r\n                         clientId, \r\n                         businessId, \r\n                         name  \r\n                         gender,\r\n                         dateOfBirth,\r\n                         species{id,name},\r\n                         breeds{id,name},\r\n                         createdAt ,\r\n                         owners{owner{firstName,lastName}}\r\n                    }\r\n                }\r\n            }`\r\n            }\r\n\r\n            console.log('获取病历单的入参', param, JSON.stringify(param));\r\n            fetchRhapsody('', 'POST', param, storage.connectionKey)\r\n              .then(res => {\r\n                console.log(res);\r\n                if (res.errors) {\r\n                  this.setState({\r\n                    loading: false,\r\n                    spin: false\r\n                  })\r\n                  message.destroy()\r\n                  message.error('Failed to get pet list')\r\n\r\n                } else {\r\n                  let patientsArr = res.data.patients.data\r\n                  let dataArr = []\r\n                  for (let i = 0; i < patientsArr.length; i++) {\r\n                    const patient = patientsArr[i];\r\n                    let { id, name, gender, dateOfBirth, breeds, owners, createdAt } = patient\r\n\r\n                    createdAt = moment(createdAt).format('X')\r\n                    let owner = 'unknown'\r\n                    if (owners.length > 0) {\r\n                      let ownerItem = owners[0]\r\n                      if (ownerItem && ownerItem.owner) {\r\n                        let { firstName, lastName } = ownerItem.owner\r\n                        if (firstName || lastName) {\r\n                          owner = `${lastName} ${firstName}`\r\n                        }\r\n                      }\r\n\r\n                    }\r\n\r\n                    let breed = 'unknown'\r\n                    if (breeds.length > 0 && breeds[0].name) {\r\n                      breed = breeds[0].name\r\n                    }\r\n\r\n                    let petAge = 'unknown'\r\n                    if (dateOfBirth) {\r\n                      petAge = moment(new Date()).diff(moment(dateOfBirth), 'years')\r\n                      // console.log('petAge', petAge);\r\n                    }\r\n\r\n                    let json = {\r\n                      insertedAt: createdAt,\r\n                      patientId: id,\r\n                      petName: name,\r\n                      owner,\r\n                      breed,\r\n                      gender: gender || 'unknown',\r\n                      age: petAge,\r\n                      petId: '',\r\n                      id: `${i}`,\r\n                      weight: null,\r\n                      rfid: null,\r\n                      url: null,\r\n                      speciesId: null,\r\n                    }\r\n                    dataArr.push(json)\r\n\r\n\r\n                  }\r\n\r\n                  console.log(dataArr);\r\n\r\n\r\n\r\n                  this.rhapsody(dataArr)\r\n                }\r\n\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n                this.setState({\r\n                  loading: false,\r\n                  spin: false\r\n                })\r\n                message.destroy()\r\n                message.error('Failed to get pet list')\r\n              })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading: false,\r\n            spin: false\r\n          })\r\n          message.destroy()\r\n          message.error('Data acquisition failed')\r\n        })\r\n\r\n\r\n\r\n\r\n      return\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let startDay = moment().startOf('day').format('YYYY-MM-DD HH:mm:ss')\r\n    let endDay = moment().endOf('day').format('YYYY-MM-DD HH:mm:ss')\r\n    let chazhi = new Date().getTimezoneOffset()\r\n    let newstartTime = moment(startDay).add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n    let newendTime = moment(endDay).add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n      subStartTime: newstartTime,\r\n      subEndTime: newendTime\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('查询宠物的入参', params,);\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n\r\n    // fetchRequest('/user/listAllPetInfo', 'GET', params)\r\n    fetchRequest('/new/pet/subscribe/page', 'POST', params)\r\n\r\n      .then(res => {\r\n        console.log('查询到的宠物列表,/new/pet/subscribe/page', res);\r\n\r\n        if (res.flag === true && res.data) {\r\n          let data = []\r\n          // let oldList = res.data\r\n          let oldList = res.data.list\r\n          for (let i = 0; i < oldList.length; i++) {\r\n            let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\r\n              h2tLength, torsoLength } = oldList[i]\r\n            let owner = ''\r\n            patientId = isUnKnow(patientId)\r\n            petName = isUnKnow(petName)\r\n            breedName = isUnKnow(breedName)\r\n            age = isUnKnow(age)\r\n            weight = isUnKnow(weight)\r\n            if (!firstName) {\r\n              firstName = ''\r\n            }\r\n            if (!lastName) {\r\n              lastName = ''\r\n            }\r\n            if (lastName === '' && firstName === '') {\r\n              owner = 'unknown'\r\n            } else {\r\n              owner = `${lastName} ${firstName}`\r\n            }\r\n            createTime = moment(createTime).format('X')\r\n            let petGender = ''\r\n            switch (`${gender}`) {\r\n              case '1': petGender = 'F'\r\n\r\n                break;\r\n              case '0': petGender = \"M\"\r\n                break;\r\n              default: petGender = 'unknown'\r\n                break;\r\n            }\r\n            let petAge = 'unknown'\r\n            if (birthday) {\r\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n            }\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              patientId,\r\n              petName,\r\n              owner,\r\n              breed: breedName,\r\n              gender: petGender,\r\n              age: petAge,\r\n              petId,\r\n              id: i,\r\n              weight,\r\n              rfid,\r\n              url,\r\n              speciesId,\r\n              l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n              h2tLength, torsoLength,\r\n              pethubId, macId,\r\n\r\n            }\r\n            data.push(json)\r\n\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          console.log('列表的数据：', data);\r\n          storage.doctorList = JSON.stringify(data)\r\n          this.setState({\r\n            data,\r\n            loading: false,\r\n            spin: false\r\n          })\r\n\r\n          electronStore.set('doctorExam', data)\r\n\r\n\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n          spin: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    //dataIndex 是标题名称\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    //自定义Icon\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\r\n    onFilter: (value, record) => {\r\n      console.log(value, record, dataIndex);\r\n      return record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : ''\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n  _refresh = () => {\r\n    console.log('点击了');\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    // this._getData()\r\n    this._getExam()\r\n  }\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n\r\n    switch (e.key) {\r\n      case '1': this.props.history.push('/page11'); break;\r\n      case '2': this.props.history.push('/'); break;\r\n      case '3':\r\n        try {\r\n\r\n          let selectNum = document.getElementsByClassName('ant-pagination-item-active')\r\n          // storage.defaultCurrent = selectNum[0].title\r\n          storage.doctorList = JSON.stringify(this.state.data)\r\n        } catch (error) {\r\n          console.log('错误信息', error);\r\n        }\r\n\r\n\r\n        this.props.history.push('/page8'); break;\r\n      case '4': this.props.history.push('/page12'); break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  _search1 = (search) => {       //这个是搜索调用后台的函数，现在废弃20210929\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      petName: search,\r\n    }\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n    console.log('搜索的数据', params);\r\n    fetchRequest('/pet/listPetsLike', \"POST\", params)\r\n      .then(res => {\r\n        console.log(res);\r\n\r\n        if (res.flag === true) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { age, createTime, patientId, petName, firstName, birthday, lastName, breedName, gender, petId, weight } = res.data[i]\r\n            let owner = ''\r\n            patientId = isUnKnow(patientId)\r\n            petName = isUnKnow(petName)\r\n            breedName = isUnKnow(breedName)\r\n            age = isUnKnow(age)\r\n            weight = isUnKnow(weight)\r\n            if (!firstName) {\r\n              firstName = ''\r\n            }\r\n            if (!lastName) {\r\n              lastName = ''\r\n            }\r\n            if (lastName === '' && firstName === '') {\r\n              owner = 'unknown'\r\n            } else {\r\n              owner = `${lastName} ${firstName}`\r\n            }\r\n            createTime = moment(createTime).format('X')\r\n            let petGender = ''\r\n            switch (`${gender}`) {\r\n              case '1': petGender = 'F'\r\n\r\n                break;\r\n              case '0': petGender = \"M\"\r\n                break;\r\n              default: petGender = 'unknown'\r\n                break;\r\n            }\r\n            let petAge = 'unknown'\r\n            if (birthday) {\r\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n              // console.log('petAge', petAge);\r\n            }\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              patientId,\r\n              petName,\r\n              owner,\r\n              breed: breedName,\r\n              gender: petGender,\r\n              age: petAge,\r\n              petId,\r\n              id: i,\r\n              weight\r\n\r\n            }\r\n            data.push(json)\r\n\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            searchData: data,\r\n            loading: false\r\n          })\r\n        } else {\r\n          this.setState({\r\n            searchData: [],\r\n            loading: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n  }\r\n\r\n  _search = (keyWord) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\r\n\r\n    /**\r\n     * 使用indexof方法实现模糊查询\r\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n     *  \r\n     * list         原数组\r\n     * keyWord      查询关键词\r\n     * searchData   查询的结果\r\n     * \r\n     * toLowerCase（）方法：将字符串统一转成小写\r\n     * toUpperCase（）方法：将字符串统一转成大写\r\n     * \r\n     */\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    let list = this.state.data\r\n    let searchData = []\r\n    for (let i = 0; i < list.length; i++) {\r\n      let petName = list[i].petName.toLowerCase() || ''\r\n      let patientId = list[i].patientId.toLowerCase() || ''\r\n      let rfid = list[i].rfid || ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${rfid}`.indexOf(keyWord) !== -1\r\n      ) {\r\n        searchData.push(list[i])\r\n      }\r\n    }\r\n    console.log(searchData);\r\n    this.setState({\r\n      searchData,\r\n      loading: false\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  RFIDSearch = () => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    fetchRequest4(`/pet/getPetInfoByRFID/${this.state.heardSearchText}/${storage.lastOrganization}`, 'GET')\r\n      .then(res => {\r\n        console.log('----RFID搜索结果', res);\r\n\r\n        if (res.flag === true && res.data) {\r\n          let { createTime, patientId, petName, firstName, lastName, breedName, gender, birthday, petId, rfid, weight } = res.data\r\n          patientId = patientId || 'unknown'\r\n          petName = petName || 'unknown'\r\n          breedName = breedName || 'unknown'\r\n          weight = weight || 'unknown'\r\n          let owner = ''\r\n          if (!firstName) {\r\n            firstName = ''\r\n          }\r\n          if (!lastName) {\r\n            lastName = ''\r\n          }\r\n          if (lastName === '' && firstName === '') {\r\n            owner = 'unknown'\r\n          } else {\r\n            owner = `${lastName} ${firstName}`\r\n          }\r\n          createTime = moment(createTime).format('X')\r\n          let petGender = ''\r\n          switch (`${gender}`) {\r\n            case '1': petGender = 'F'\r\n\r\n              break;\r\n            case '0': petGender = \"M\"\r\n              break;\r\n            default: petGender = 'unknown'\r\n              break;\r\n          }\r\n          let petAge = 'unknown'\r\n          if (birthday) {\r\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n            // console.log('petAge', petAge);\r\n          }\r\n          let json = {\r\n            insertedAt: createTime,\r\n            patientId,\r\n            petName,\r\n            owner,\r\n            breed: breedName,\r\n            gender: petGender,\r\n            age: petAge,\r\n            petId,\r\n            id: 0,\r\n            weight,\r\n            rfid\r\n          }\r\n          let searchData = []\r\n          searchData.push(json)\r\n          this.setState({\r\n            searchData,\r\n            loading: false\r\n          })\r\n\r\n\r\n\r\n\r\n        } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\r\n          console.log('找到了但是不是在这个组织下');\r\n          this.setState({\r\n            loading: false,\r\n            modalVis: true,\r\n            isNotFound: false,\r\n            heardSearchText: ''\r\n          })\r\n        } else {\r\n          console.log('没有找到');\r\n          this.setState({\r\n            loading: false,\r\n            modalVis: true,\r\n            isNotFound: true,\r\n            heardSearchText: ''\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n\r\n        console.log('抛出异常:', err);\r\n        this.setState({\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n  draggleRef = React.createRef();\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render () {\r\n    const columns = [\r\n      {\r\n        title: 'Time',\r\n        dataIndex: 'insertedAt',\r\n        key: 'insertedAt',\r\n        width: '16%',\r\n        // ...this.getColumnSearchProps('insertedAt'),\r\n        render: (text, record, index) => {\r\n          let chazhi = new Date().getTimezoneOffset()\r\n          // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\r\n          let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\r\n          let time = moment(parseInt(text) * 1000).format('hh:mm a');\r\n          let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\r\n          // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\r\n          return (\r\n            <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\r\n              <p>{`${year}`}</p>\r\n              <p>{`${time}`}</p>\r\n            </div>\r\n          )\r\n        },\r\n\r\n      },\r\n      {\r\n        title: 'Pet ID',\r\n        dataIndex: 'patientId',\r\n        key: 'patientId',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('patientId'),\r\n      },\r\n      {\r\n        title: 'Pet Name',\r\n        dataIndex: 'petName',\r\n        key: 'petName',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('petName'),\r\n      },\r\n      {\r\n        title: 'Owner',\r\n        dataIndex: 'owner',\r\n        key: 'owner',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('owner'),\r\n      },\r\n      {\r\n        title: 'Breed',\r\n        dataIndex: 'breed',\r\n        key: 'breed',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('breed'),\r\n        render: (text, record, index) => {\r\n          if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{'unknown'}</p>\r\n            )\r\n          } else {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{text}</p>\r\n            )\r\n          }\r\n\r\n        }\r\n      },\r\n\r\n      {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        key: 'gender',\r\n        width: '12%',\r\n        // width: '30%',\r\n        // ...this.getColumnSearchProps('gender'),\r\n      },\r\n      {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n        width: '12%',\r\n        // width: '20%',\r\n        render: (text, record, index) => {\r\n          // console.log(text);\r\n\r\n          if (`${text}` === 'NaN') {\r\n            return (\r\n              <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\r\n            )\r\n          } else {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{text}</p>\r\n            )\r\n          }\r\n\r\n        }\r\n      },\r\n\r\n\r\n    ];\r\n    const { loading, data, api, id, seleceID, spin, closeColor, closebgc, minbgc, disabled, bounds, modalVis, sortBy, showsortBy } = this.state\r\n\r\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\r\n    for (let i = 0; i < items.length; i++) {\r\n      let style = items[i].style\r\n      style.padding = `5px 5px`\r\n      style.textAlign = 'center'\r\n    }\r\n    const noData = () => {\r\n      return (\r\n        <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\r\n          <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\r\n          <a style={{ fontSize: px(22) }} href=\"#\"\r\n            onClick={(e) => {\r\n              console.log('我要去添加宠物');\r\n              // try {\r\n\r\n              //   storage.doctorList = JSON.stringify(this.state.data)\r\n              // } catch (error) {\r\n              //   console.log('错误信息', error);\r\n              // }\r\n              // // /pet/doctorAddPet\r\n              // this.props.history.push({ pathname: '/pet/doctorAddPet' })\r\n              this.props.history.push({ pathname: '/AddYuding', })\r\n              e.preventDefault();\r\n\r\n            }}\r\n\r\n          >{`go to add`}</a>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n      <div id=\"doctorSelectExam\" onClick={(e) => {\r\n        console.log('隐藏');\r\n        this.setState({\r\n          showsortBy: false\r\n        })\r\n      }}>\r\n        {/* 关闭缩小 */}\r\n        <Heard\r\n          onReturn={() => {\r\n            this.props.history.push('/page11')\r\n\r\n          }}\r\n          onSearch={(data) => {\r\n\r\n            storage.doctorExam = JSON.stringify(data)\r\n\r\n            storage.doctorList = JSON.stringify(this.state.data)\r\n            if (storage.isClinical === 'true') {\r\n              this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\r\n            } else {\r\n              this.props.history.push({ pathname: '/page10', })\r\n            }\r\n          }}\r\n          menu10Click={() => {\r\n            this.props.history.push({ pathname: '/uesr/DoctorSelectAllExam', })\r\n          }}\r\n          blueSearch={true}\r\n        />\r\n\r\n\r\n        <div className=\"hread flex\">\r\n          <div className=\"hread1 flex\" style={{ marginTop: px(30) }}>\r\n            <div className=\"heard1L flex\">\r\n              <div className=\"title\" style={{ fontSize: px(25) }}>Scheduled Patients</div>\r\n              <div className=\"refresh flex\"\r\n                style={{ fontSize: px(25), marginLeft: px(10) }}\r\n              >\r\n                <SyncOutlined onClick={this._refresh} spin={spin} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"walkin flex\"\r\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20) }}\r\n              onClick={() => {\r\n                storage.doctorExam = JSON.stringify('')\r\n                storage.doctorList = JSON.stringify(this.state.data)\r\n                if (storage.isClinical === 'true') {\r\n                  this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: null })\r\n                } else {\r\n                  this.props.history.push({ pathname: '/page10', })\r\n                }\r\n\r\n              }}\r\n            >Walk-In</div>\r\n\r\n          </div>\r\n          <div className=\"heard2 flex\" style={{ marginTop: px(8), marginBottom: px(8) }}>\r\n\r\n            <div className=\"sort flex\" >\r\n              <p style={{ fontSize: px(16), marginRight: px(10) }}>sort By:</p>\r\n\r\n              <SelectionBox\r\n                listArr={[\r\n                  { key: 'time', value: 'Time' },\r\n                  { key: 'petid', value: 'Pet ID' },\r\n                  { key: 'owner', value: 'Owner' },\r\n                  { key: 'breed', value: 'Breed' },\r\n                  { key: 'petname', value: 'Pet Name' },\r\n                  { key: 'gender', value: 'Gender' },\r\n                ]}\r\n                clickItem={(item) => {\r\n                  let petList = [].concat(data)\r\n                  switch (item.key) {\r\n                    case 'time':\r\n                      petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\r\n                      break;\r\n                    case 'petid':\r\n                      petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\r\n                      break;\r\n                    case 'owner':\r\n                      petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\r\n                      break;\r\n                    case 'breed':\r\n                      petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\r\n                      break;\r\n                    case 'petname':\r\n                      petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\r\n                      break;\r\n                    case 'gender':\r\n                      petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\r\n                      break;\r\n                  }\r\n\r\n                  this.setState({\r\n                    sortBy: item.value,\r\n                    showsortBy: false,\r\n                    data: petList\r\n                  })\r\n                }}\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"table\" >\r\n          <ConfigProvider renderEmpty={noData}>\r\n            <Table\r\n              style={{\r\n                // border: ' #979797 1px solid',\r\n                padding: 0,\r\n                margin: 0,\r\n                width: '95%',\r\n                // height: px(500)\r\n              }}\r\n              rowKey={data => data.id}\r\n              bordered={false}\r\n              columns={columns}\r\n              dataSource={(this.state.heardSearchText.length === 0) ? this.state.data : this.state.searchData}\r\n              loading={loading}\r\n              locale={{ filterConfirm: <div>111</div> }}\r\n              // pagination={{ showSizeChanger: false, showQuickJumper: true, defaultCurrent: this.state.current }}\r\n              pagination={false}\r\n              scroll={{\r\n                y: px(600)\r\n              }}\r\n              onRow={(record) => {\r\n                return {\r\n                  onClick: (event) => {\r\n\r\n                    console.log('record', record);\r\n                    storage.doctorExam = JSON.stringify(record)\r\n                    storage.doctorList = JSON.stringify(this.state.data)\r\n\r\n                    if (storage.isClinical === 'true') {\r\n                      this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.patientId })\r\n                    } else {\r\n                      this.props.history.push({ pathname: '/page10', })\r\n                    }\r\n\r\n\r\n                  }, // 点击行\r\n\r\n                };\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </div>\r\n        <div className=\"hread flex\" style={{ alignItem: 'center' }}>\r\n          <div className=\"hread1\" style={{ marginTop: px(10), justifyContent: 'flex-end', display: 'flex', }}>\r\n            <div className=\"walkin flex\"\r\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20), marginRight: px(10) }}\r\n              onClick={() => {\r\n                this.props.history.push({ pathname: '/AddYuding', })\r\n\r\n              }}\r\n            >Create New Scheduled</div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        <Modal\r\n\r\n          // visible={isOrg}\r\n          visible={modalVis}\r\n          onCancel={() => this.setState({ modalVis: false })}\r\n          width={350}\r\n          footer={[]}\r\n          modalRender={(modal) => (\r\n            <Draggable\r\n              disabled={disabled}\r\n              bounds={bounds}\r\n              onStart={(event, uiData) => this.onStart(event, uiData)}\r\n            >\r\n              <div ref={this.draggleRef}>{modal}</div>\r\n            </Draggable>\r\n          )}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"doctorSelectExamModal\"\r\n        >\r\n          <div id='doctorSelectExamModal'>\r\n            <div className=\"text\"\r\n              onMouseOver={() => {\r\n                if (disabled) {\r\n                  this.setState({\r\n                    disabled: false,\r\n                  });\r\n                }\r\n              }}\r\n              onMouseOut={() => {\r\n                this.setState({\r\n                  disabled: true,\r\n                });\r\n              }}\r\n\r\n            >{this.state.isNotFound ? 'Pet not found!' : 'Pet found!'}</div>\r\n            <div className='Img'>\r\n              {this.state.isNotFound ?\r\n                <img src={redclose} width=\"50px\" /> :\r\n                <img src={jinggao} width=\"50px\" />\r\n              }\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {this.state.isNotFound ? <p > This pet is not on your database</p> :\r\n              <p >Pet Identified but does not <br /> belong to your organization.</p>}\r\n\r\n\r\n            <div style={{ marginTop: px(20) }}>\r\n              <Button1\r\n                text={'OK'}\r\n\r\n                onClick={() => this.setState({\r\n                  modalVis: false\r\n                })}\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </Modal>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx",["380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400","401","402","403","404"],"import React, { Component } from 'react'\r\nimport { Input, Menu, message, Select, Calendar, Col, Row, Spin } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport dog from './../../assets/images/pinkdog.png'\r\nimport cat from './../../assets/images/pinkcat.png'\r\nimport redDog from './../../assets/images/reddog.png'\r\nimport redCat from './../../assets/images/redcat.png'\r\nimport redother from './../../assets/images/redother.png'\r\nimport other from './../../assets/images/other.png'\r\nimport electronStore from '../../utils/electronStore';\r\nimport Close from './../../assets/img/close.png'\r\nimport nextImg from './../../assets/img/nextImg.png'\r\n\r\n\r\n// import selectphoto from './../../assets/images/img.png'\r\nimport selectphoto from './../../assets/images/sel.png'\r\nimport dui from './../../assets/images/dui.png'\r\nimport female from './../../assets/images/female.png'\r\nimport male from './../../assets/images/male.png'\r\nimport './doctorAddPet.less'\r\nimport { mTop, px, win } from '../../utils/px';\r\nimport Avatar from './../avatar/Avatar'\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport Heard from '../../utils/heard/Heard';\r\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\r\nimport Button from './../../utils/button/Button'\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class DoctorAddPet extends Component {\r\n    state = {\r\n        dogImg: dog,\r\n        catImg: cat,\r\n        otherImg: other,\r\n        selectWZ: '',\r\n        closebgc: '',\r\n        minbgc: '',\r\n        closeColor: '',\r\n        api: '',\r\n        id: '',\r\n        seleceID: '',//医生id\r\n        petSpecies: 0,\r\n        unit: 1,\r\n        gender: 0,\r\n        isMix: false,\r\n        imageId: -1,\r\n        imgurl: '',\r\n        catData: [],\r\n        petSpeciesBreedId: '',\r\n        dogData: [],\r\n        breedArr: [],\r\n        birthday: moment(new Date()).format('MMMM D, YYYY'),\r\n        patientId: '',\r\n        petName: '',\r\n\r\n        petId: '',\r\n        lastName: '',\r\n        firstName: '',\r\n        breedName: '',\r\n        owner: '',\r\n        intFlog: false,\r\n        spin: false,\r\n        visible: false,\r\n\r\n        imgurl: '',\r\n        dogBreed: [],\r\n        catBreed: [],\r\n        searchBreed: '',\r\n        selectBreedJson: {},\r\n        confirmSelectBreedJson: {},\r\n        selectBreed: false\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big', win())\r\n        ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n        let dogBreed = electronStore.get('dogBreed') || []\r\n        let catBreed = electronStore.get('catBreed') || []\r\n        this.setState({\r\n            dogBreed,\r\n            catBreed\r\n        })\r\n        this.getBreed('cat')\r\n        this.getBreed('dog')\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n\r\n        ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n    }\r\n    changeFenBianLv = (e) => {\r\n        console.log(e);\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big', win())\r\n        this.setState({\r\n\r\n        })\r\n    }\r\n\r\n    getBreed = (val) => {\r\n        let data = {}\r\n        switch (val) {\r\n            case 'dog':\r\n                data.speciesId = 2; break;\r\n\r\n            case 'cat':\r\n                data.speciesId = 1; break;\r\n        }\r\n\r\n        fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n            .then(res => {\r\n                console.log('---', res);\r\n                if (res.code === 0) {\r\n                    let arr = []\r\n                    res.petlist.map((item, index) => {\r\n                        let data = {\r\n                            petSpeciesBreedId: item.petSpeciesBreedId,\r\n                            breedName: item.breedName\r\n                        }\r\n                        arr.push(data)\r\n                    })\r\n                    if (val === 'dog') {\r\n                        this.setState({\r\n                            dogBreed: arr\r\n                        })\r\n                        electronStore.set('dogBreed', arr)\r\n                    } else if (val === 'cat') {\r\n                        this.setState({\r\n                            catBreed: arr\r\n                        })\r\n                        electronStore.set('catBreed', arr)\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n\r\n    _getData = (val) => {\r\n        this.setState({\r\n            petSpecies: val,\r\n            breedName: ''\r\n        })\r\n        let data = {\r\n            speciesId: val\r\n        }\r\n        fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n            .then(res => {\r\n                console.log('--获取品种返回的数据-', res);\r\n                if (res.code === 0) {\r\n                    let arr = []\r\n                    res.petlist.map((item, index) => {\r\n                        let data = {\r\n                            petSpeciesBreedId: item.petSpeciesBreedId,\r\n                            breedName: item.breedName\r\n                        }\r\n                        arr.push(data)\r\n                    })\r\n                    console.log(arr);\r\n                    this.setState({\r\n                        breedArr: arr\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n\r\n\r\n    /**------------------顶部start------------------------ */\r\n    _close = () => {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        console.log('关闭程序');\r\n        ipcRenderer.send('window-close')\r\n    }\r\n    _min = () => {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        console.log('最小化程序');\r\n        ipcRenderer.send('window-min')\r\n        this.setState({\r\n            minbgc: '',\r\n        })\r\n    }\r\n    _minMove = () => {\r\n\r\n        this.setState({\r\n            minbgc: 'rgb(211, 205, 205)'\r\n        })\r\n    }\r\n    _minLeave = () => {\r\n        this.setState({\r\n            minbgc: ''\r\n        })\r\n    }\r\n    _closeMove = () => {\r\n        this.setState({\r\n            closeColor: 'red',\r\n            closebgc: '#fff'\r\n        })\r\n    }\r\n    _closeLeave = () => {\r\n        this.setState({\r\n            closeColor: '#fff',\r\n            closebgc: ''\r\n        })\r\n    }\r\n    handleClick = e => {\r\n        console.log('click ', e);\r\n        const { api, id, seleceID } = this.state\r\n        if (e.key === '1') {\r\n            this.props.history.push({ pathname: '/page6', query: { api, id, seleceID } })\r\n        }\r\n        if (e.key === '2') {\r\n            this.props.history.push('/')\r\n        }\r\n\r\n    };\r\n    /**------------------顶部end------------------------ */\r\n    selectWZ = (val) => {\r\n        let { catBreed, dogBreed } = this.state\r\n        switch (val) {\r\n            case 'dog':\r\n                this.setState({\r\n                    catImg: cat,\r\n                    dogImg: redDog,\r\n                    otherImg: other,\r\n                    selectWZ: val,\r\n                    breedArr: [].concat(dogBreed)\r\n                })\r\n\r\n                break;\r\n\r\n            case 'cat':\r\n                this.setState({\r\n                    catImg: redCat,\r\n                    dogImg: dog,\r\n                    otherImg: other,\r\n                    selectWZ: val,\r\n                    breedArr: [].concat(catBreed)\r\n                })\r\n\r\n                break;\r\n\r\n            case 'other':\r\n                this.setState({\r\n                    catImg: cat,\r\n                    dogImg: dog,\r\n                    otherImg: redother,\r\n                    selectWZ: val,\r\n                    breedArr: []\r\n                })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    _petSpecies = () => {\r\n        let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\r\n\r\n        this.avatar = selectphoto\r\n        return (\r\n            <div className=\"petSpecies\"\r\n                style={{ height: mTop(80), }}\r\n            >\r\n                <div className=\"l\">\r\n                    <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\r\n                    <div className=\"selectSpecies\">\r\n                        <ul>\r\n                            <li >\r\n                                <div className='speciesChild' >\r\n                                    <div className='dog'\r\n                                        onClick={() => { this.selectWZ('dog') }}>\r\n                                        <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\r\n                                    </div>\r\n                                    Dog\r\n                                </div>\r\n                            </li>\r\n                            <li>\r\n                                <div className='speciesChild' >\r\n                                    <div className='dog' onClick={() => { this.selectWZ('cat') }} >\r\n                                        <img src={catImg} alt=\"\" style={{ width: px(40) }} />\r\n                                    </div>\r\n                                    Cat\r\n                                </div>\r\n                            </li>\r\n                            <li >\r\n                                <div className='speciesChild' >\r\n                                    <div className='dog' onClick={() => { this.selectWZ('other') }} >\r\n                                        <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\r\n                                    </div>\r\n                                    Other\r\n                                </div>\r\n                            </li>\r\n\r\n                        </ul>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n                <div className=\"r\">\r\n\r\n                    <div className=\"img\">\r\n                        <Avatar\r\n                            init={\r\n                                <div className=\"ciral \">\r\n                                    <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                                    <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                                </div>\r\n                            }\r\n                            getinfo={(val) => {\r\n                                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                                if (val) {\r\n                                    this.setState({\r\n                                        imageId: val\r\n                                    })\r\n                                }\r\n\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _petName = () => {\r\n\r\n        const onPanelChange = (value, mode) => {\r\n            console.log('-----', value, mode);\r\n        }\r\n        let birthday = this.state.birthday\r\n        let birthdayValue = birthday ? moment(birthday) : moment(new Date())\r\n        return (\r\n            <div className=\"petName\"\r\n                style={{ marginTop: mTop(18) }}\r\n            >\r\n                <div className=\"r\">\r\n\r\n                    <p >Pet Name</p>\r\n                    <div className=\"infoInput\">\r\n                        <Input\r\n                            bordered={false}\r\n                            value={this.state.petName}\r\n                            onChange={(item) => {\r\n\r\n                                this.setState({\r\n                                    petName: item.target.value\r\n                                })\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"r\">\r\n                    <p >Pet Birthday</p>\r\n                    <div className=\"infoInput\" >\r\n                        <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\r\n                            document.getElementById('calendar').style.display = 'block'\r\n                        }}>{this.state.birthday}</p>\r\n                        <div className=\"calendar\" id=\"calendar\" style={{ left: px(-50), top: px(-50) }}>\r\n                            <Calendar\r\n                                fullscreen={false}\r\n                                headerRender={({ value, type, onChange, onTypeChange }) => {\r\n\r\n                                    const start = 0;\r\n                                    const end = 12;\r\n                                    const monthOptions = [];\r\n\r\n                                    const current = value.clone();\r\n                                    const localeData = value.localeData();\r\n                                    const months = [];\r\n                                    for (let i = 0; i < 12; i++) {\r\n                                        current.month(i);\r\n                                        months.push(localeData.monthsShort(current));\r\n                                    }\r\n\r\n                                    for (let index = start; index < end; index++) {\r\n                                        monthOptions.push(\r\n                                            <Select.Option className=\"month-item\" key={`${index}`}>\r\n                                                {months[index]}\r\n                                            </Select.Option>\r\n                                        );\r\n                                    }\r\n                                    const month = value.month();\r\n\r\n                                    const year = value.year();\r\n                                    const options = [];\r\n\r\n                                    for (let i = moment(new Date()).year(); i > moment(new Date()).year() - 40; i -= 1) {\r\n                                        options.push(\r\n                                            <Select.Option key={i} value={i} className=\"year-item\">\r\n                                                {i}\r\n                                            </Select.Option>\r\n                                        );\r\n                                    }\r\n                                    return (\r\n                                        <div style={{ padding: 8 }}>\r\n                                            <Row gutter={8}>\r\n                                                <Col>\r\n                                                    <Select\r\n                                                        size=\"small\"\r\n                                                        dropdownMatchSelectWidth={false}\r\n                                                        className=\"my-year-select\"\r\n                                                        onChange={(newYear) => {\r\n                                                            const now = value.clone().year(newYear);\r\n                                                            onChange(now);\r\n                                                        }}\r\n                                                        value={String(year)}\r\n                                                    >\r\n                                                        {options}\r\n                                                    </Select>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Select\r\n                                                        size=\"small\"\r\n                                                        dropdownMatchSelectWidth={false}\r\n                                                        value={String(month)}\r\n                                                        onChange={(selectedMonth) => {\r\n                                                            const newValue = value.clone();\r\n                                                            newValue.month(parseInt(selectedMonth, 10));\r\n                                                            onChange(newValue);\r\n                                                        }}\r\n                                                    >\r\n                                                        {monthOptions}\r\n                                                    </Select>\r\n                                                </Col>\r\n                                                {/* <Col>\r\n                                                    <div className=\"btn\" onClick={() => {\r\n                                                        document.getElementById('calendar').style.display = 'none'\r\n                                                    }}>\r\n                                                        Choose this date\r\n                                                    </div>\r\n\r\n                                                </Col> */}\r\n                                            </Row>\r\n                                        </div>\r\n                                    );\r\n                                }}\r\n                                value={birthdayValue}\r\n                                onSelect={(value) => {\r\n                                    console.log(value);\r\n                                    this.setState({\r\n                                        birthday: moment(value).format('MMMM D, YYYY')\r\n\r\n                                    })\r\n                                    document.getElementById('calendar').style.display = 'none'\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _ownName = () => {\r\n\r\n        return (\r\n            <div className=\"petName\" style={{ marginTop: mTop(18) }}\r\n            >\r\n                <div className=\"l\">\r\n\r\n                    <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\r\n                    <div className=\"infoInput\">\r\n                        <Input bordered={false}\r\n                            value={this.state.patientId}\r\n                            onChange={(item) => {\r\n\r\n                                this.setState({\r\n                                    patientId: item.target.value.replace(/\\s/g, \"\"),\r\n                                    intFlog: true\r\n\r\n                                })\r\n                                if (item.target.value !== errPatientId) {\r\n                                    message.destroy()\r\n                                }\r\n                            }}\r\n                            onBlur={() => {\r\n                                console.log('我离开光标了');\r\n\r\n                                let params = {\r\n                                    patientId: this.state.patientId,\r\n                                    doctorId: storage.userId\r\n                                }\r\n                                if (storage.lastWorkplaceId) {\r\n                                    params.workplaceId = storage.lastWorkplaceId\r\n                                }\r\n                                message.destroy()\r\n                                fetchRequest(`/pet/checkPatientId`, \"GET\", params)\r\n                                    .then(res => {\r\n                                        console.log(res);\r\n                                        if (res.flag === false) {\r\n                                            errPatientId = params.patientId\r\n                                            message.destroy()\r\n                                            message.error('This patient ID is already occupied, please change to a new one', 0)\r\n                                        } else {\r\n                                            errPatientId = ''\r\n                                        }\r\n\r\n                                    })\r\n                                    .catch(err => {\r\n                                        console.log(err);\r\n\r\n                                    })\r\n                            }}\r\n                        />\r\n                    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n                <div className=\"r\">\r\n                    <div className=\"infoInput flex\"\r\n                        style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            // this.setState({\r\n                            //     selectBreed: true\r\n                            // })\r\n                        }}\r\n                    >\r\n\r\n                        <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{'My Parents'}</div>\r\n                        <div className=\"nextimg\" >\r\n                            <img src={nextImg} style={{ height: px(15) }} />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _select = (value, data) => {\r\n        console.log(value, data);  //value的值为id\r\n        this.setState({\r\n            petSpeciesBreedId: value,\r\n            breedName: data.children\r\n        })\r\n    }\r\n    _primaryBreed = () => {\r\n        let options = null\r\n\r\n        options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\r\n        let { breedName, confirmSelectBreedJson } = this.state\r\n\r\n\r\n        return (\r\n            <div className=\"petName\" style={{ marginTop: mTop(18) }}>\r\n                <div className=\"l\" >\r\n                    {/* <p >Primary Breed</p> */}\r\n                    <div className=\"infoInput flex\"\r\n                        style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\r\n                        onClick={() => {\r\n                            this.setState({\r\n                                selectBreed: true\r\n                            })\r\n                        }}\r\n                    >\r\n                        {/* <Input bordered={false} disabled={false} /> */}\r\n\r\n                        {/* <Select\r\n                            showSearch\r\n                            style={{ width: '100%' }}\r\n                            bordered={false}\r\n                            value={breedName}\r\n                            // size = {'small'}        \r\n                            placeholder=\"Search to Select\"\r\n                            optionFilterProp=\"children\"\r\n                            listHeight={256}\r\n                            onSelect={(value, data) => this._select(value, data)}\r\n                            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                            filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n                        >\r\n                            {options}\r\n                        </Select> */}\r\n                        <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'}</div>\r\n                        <div className=\"nextimg\" >\r\n                            <img src={nextImg} style={{ height: px(15) }} />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"r\" style={{ paddingTop: mTop(40) }}>\r\n                    <div className=\"max\">\r\n                        Mix?\r\n                        <div className=\"selected\"\r\n                            onClick={() => this.setState({\r\n                                isMix: !this.state.isMix\r\n                            })}\r\n                        >\r\n                            {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n    _weight = () => {\r\n        let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\r\n        switch (this.state.unit) {\r\n            case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\r\n            case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\r\n        }\r\n\r\n        switch (this.state.gender) {\r\n            case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\r\n            case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\r\n        }\r\n\r\n        return (\r\n            <div className=\"petName\" style={{ marginTop: mTop(18) }}>\r\n                <div className=\"l\">\r\n                    <p >Pet Weight</p>\r\n                    <div className=\"infoInput\">\r\n                        <Input bordered={false}\r\n                            value={this.state.weight}\r\n                            onChange={(item) => {\r\n\r\n                                this.setState({\r\n                                    weight: item.target.value\r\n                                })\r\n                            }}\r\n\r\n                        />\r\n                        <div className=\"ibKg\">\r\n                            <div className=\"ibs\"\r\n                                style={{ backgroundColor: ibBgcColor, color: ibCor }}\r\n                                onClick={() => {\r\n                                    if (this.state.unit === 2) {\r\n\r\n                                        this.setState({\r\n                                            unit: 1,\r\n                                            weight: (this.state.weight * 2.2046).toFixed(1)\r\n                                        })\r\n                                    }\r\n                                }}\r\n                            >Ibs</div>\r\n                            <div className=\"kgs\"\r\n                                style={{ backgroundColor: kgBgcColor, color: kgCor }}\r\n                                onClick={() => {\r\n\r\n                                    if (this.state.unit === 1) {\r\n\r\n                                        this.setState({\r\n                                            unit: 1,\r\n                                            weight: (this.state.weight / 2.2046).toFixed(1)\r\n                                        })\r\n                                    }\r\n                                    this.setState({ unit: 2 })\r\n                                }}\r\n                            >kgs</div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"r\">\r\n                    <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\r\n                    <div className=\"gender\">\r\n                        <div className=\"selectGender\">\r\n                            <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\r\n                                <div className=\"femaleCiral\"\r\n                                    style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\r\n                                    onClick={() => this.setState({ gender: 1 })}\r\n                                >\r\n                                    <img src={female} alt=\"\" style={{ width: px(15) }} />\r\n                                </div>\r\n                                Female\r\n                            </div>\r\n                            <div className=\"male\" style={{ fontSize: px(18) }}>\r\n                                <div className=\"maleCiral\"\r\n                                    style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\r\n                                    onClick={() => this.setState({ gender: 0 })}\r\n                                >\r\n                                    <img src={male} alt=\"\" style={{ width: px(20) }} />\r\n                                </div>\r\n                                Male\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const { closeColor, closebgc, minbgc, disabled, petSpeciesBreedId } = this.state\r\n\r\n        return (\r\n            <div id=\"doctorAddPet\">\r\n\r\n                <div className=\"heard\">\r\n                    <Heard\r\n                        onReturn={() => {\r\n                            // this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n                            this.props.history.goBack()\r\n\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n\r\n\r\n\r\n                <div className=\"editPetInfo_top\" >\r\n                    <div className=\"title\" style={{ marginBottom: px(20), marginTop: px(20) }}>{`New Pet`}</div>\r\n                    {this._petSpecies()}\r\n                    {this._petName()}\r\n                    {this._ownName()}\r\n                    {this._primaryBreed()}\r\n                    {this._weight()}\r\n                </div>\r\n                <div className=\"editPetInfo_foot\"  >\r\n                    <div className=\"save\"\r\n                        onClick={() => {\r\n                            message.destroy()\r\n\r\n                            if (!this.state.patientId) {\r\n                                message.error('Please enter patient ID', 0)\r\n                                return\r\n                            }\r\n\r\n                            let params = {\r\n                                patientId: this.state.patientId,\r\n                                doctorId: storage.userId\r\n                            }\r\n                            if (storage.lastWorkplaceId) {\r\n                                params.workplaceId = storage.lastWorkplaceId\r\n                            }\r\n                            if (storage.lastOrganization) {\r\n                                params.organizationId = storage.lastOrganization\r\n                            }\r\n\r\n                            this.setState({\r\n                                spin: true\r\n                            })\r\n                            console.log('-----------检测patient是否存在', params);\r\n\r\n                            fetchRequest(`/pet/checkPatientId`, \"GET\", params)\r\n                                .then(res => {\r\n                                    console.log(res);\r\n                                    if (res.flag === false) {\r\n                                        this.setState({\r\n                                            spin: false\r\n                                        }, () => {\r\n                                            errPatientId = params.patientId\r\n                                            message.destroy()\r\n                                            message.error('This patient ID is already occupied, please change to a new one', 0)\r\n\r\n                                        })\r\n                                    } else {\r\n\r\n                                        let { petSpecies, petName, birthday, petSpeciesBreedId, isMix, weight, gender, unit, imageId, confirmSelectBreedJson, owner, patientId } = this.state\r\n\r\n\r\n                                        let species = null\r\n                                        if (petSpeciesBreedId) {\r\n                                            species = petSpeciesBreedId\r\n                                        } else {\r\n                                            // 11001 是cat 12001是dog 13001是other\r\n                                            switch (petSpecies) {\r\n                                                case 1: species = 11001; break;\r\n                                                case 2: species = 12001; break;\r\n                                                default: species = 13001;\r\n                                                    break;\r\n                                            }\r\n                                        }\r\n\r\n\r\n\r\n\r\n\r\n                                        // console.log(petName, birthday, petSpeciesBreedId, isMix, weight, gender, petSpecies);\r\n                                        // let petSpeciesBreedId = 13001\r\n                                        let data = {\r\n                                            petName,\r\n                                            // breedName,\r\n                                            birthday: moment(birthday).format('YYYY-MM-DD'),\r\n                                            gender,\r\n                                            owner,\r\n                                            petSpeciesBreedId: species,\r\n                                            doctorId: storage.userId\r\n                                        }\r\n                                        if (weight) {\r\n                                            if (unit === 1) {\r\n                                                weight = (0.45359 * weight).toFixed(2)\r\n                                            }\r\n                                            data.weight = parseFloat(weight)\r\n                                        }\r\n                                        if (imageId !== -1 && imageId) {\r\n                                            data.imageId = imageId\r\n                                        }\r\n                                        if (storage.lastWorkplaceId) {\r\n                                            data.workplaceId = storage.lastWorkplaceId\r\n                                        }\r\n                                        if (storage.lastOrganization) {\r\n                                            data.organizationId = storage.lastOrganization\r\n                                        }\r\n                                        console.log(data);\r\n                                        fetchRequest(`/pet/addDeskPet/${patientId}`, 'POST', data)\r\n                                            .then(res => {\r\n                                                this.setState({\r\n                                                    spin: false\r\n                                                })\r\n                                                console.log(res);\r\n                                                if (res.flag === true) {\r\n                                                    message.success('Added successfully')\r\n                                                    this.props.history.goBack()\r\n                                                }\r\n                                                else {\r\n                                                    message.error('add failed')\r\n                                                }\r\n                                            })\r\n                                            .catch(err => {\r\n                                                this.setState({\r\n                                                    spin: false\r\n                                                })\r\n                                                message.error('add failed')\r\n                                                console.log(err);\r\n                                            })\r\n\r\n                                    }\r\n\r\n                                })\r\n\r\n                                .catch(err => {\r\n                                    this.setState({\r\n                                        spin: false\r\n                                    })\r\n                                    console.log(err);\r\n\r\n                                })\r\n\r\n                        }}\r\n\r\n                    >Save</div>\r\n\r\n                </div>\r\n                <MyModal\r\n                    visible={this.state.spin}\r\n                />\r\n\r\n                <MyModal\r\n                    // visible={true}\r\n                    visible={this.state.selectBreed}\r\n                    element={\r\n                        <div className='myfindOrg' >\r\n                            <div className=\"orgHeard\">\r\n                                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                                    <div>\r\n\r\n                                    </div>\r\n                                    <div\r\n                                        onClick={() => {\r\n                                            this.setState({\r\n                                                selectBreed: false,\r\n                                                selectBreedJson: {}\r\n                                            })\r\n                                        }}\r\n                                    >\r\n                                        <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"text\" >Choose Breed</div>\r\n\r\n                                <div className=\"searchBox\">\r\n\r\n                                    <Input\r\n                                        placeholder=\" &#xe61b; Search name\"\r\n                                        bordered={false}\r\n                                        allowClear={true}\r\n                                        value={this.state.searchBreed}\r\n                                        onChange={(item) => {\r\n\r\n                                            this.setState({\r\n                                                searchBreed: item.target.value\r\n                                            })\r\n                                        }}\r\n\r\n                                    />\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"list\" >\r\n                                <PhoneBook\r\n                                    listDate={this.state.breedArr}\r\n                                    confirmSelectBreed={petSpeciesBreedId}\r\n                                    selectFun={(val) => {\r\n                                        // console.log('从子组件传来的数据', val);\r\n                                        this.setState({\r\n                                            selectBreedJson: val,\r\n                                            petSpeciesBreedId: val.petSpeciesBreedId\r\n                                        })\r\n\r\n\r\n                                    }}\r\n                                    searchText={this.state.searchBreed}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"foot\">\r\n                                <Button\r\n                                    text={'Select'}\r\n                                    onClick={() => {\r\n                                        this.setState({\r\n                                            confirmSelectBreedJson: this.state.selectBreedJson,\r\n                                            selectBreed: false\r\n                                        })\r\n                                    }}\r\n                                />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    }\r\n                />\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\Mesasure.jsx",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443"],"import React, { Component } from 'react'\r\nimport {\r\n  Input,\r\n  Menu,\r\n  Modal,\r\n  Table,\r\n  Popconfirm,\r\n  Tooltip,\r\n  message,\r\n  Select,\r\n  Spin\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n// 引入 ECharts 主模块\r\nimport echarts from 'echarts/lib/echarts';\r\nimport ReactECharts from 'echarts-for-react';\r\n// 引入柱状图\r\nimport 'echarts/lib/chart/bar';\r\n// 引入提示框和标题组件\r\nimport 'echarts/lib/component/tooltip';\r\nimport 'echarts/lib/component/title';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport { fetchRequest1 } from './../../utils/FetchUtil'\r\nimport MyModal from './../../utils/myModal/MyModal'\r\n\r\nimport ye from './../../assets/images/ye1.png'\r\nimport er from './../../assets/images/er3.png'\r\nimport gang from './../../assets/images/gang3.png'\r\nimport dog from './../../assets/images/dog.png'\r\nimport cat from './../../assets/images/cat.png'\r\nimport other from './../../assets/images/other.png'\r\nimport edit from './../../assets/images/edit.png'\r\nimport del from './../../assets/images/del.png'\r\nimport start from './../../assets/img/start.png'\r\nimport redjinggao from './../../assets/img/redjinggao.png'\r\nimport placement_gang from './../../assets/images/placement_gang.png'\r\nimport placement_er from './../../assets/images/placement_er.png'\r\nimport palcement_ye from './../../assets/images/palcement_ye.png'\r\nimport close from './../../assets/img/close.png'\r\n\r\n\r\nimport './mesasure.less'\r\nimport electronStore from './../../utils/electronStore'\r\nimport { mTop, pX, px, MTop, win } from '../../utils/px';\r\nimport { fetchRequest3 } from '../../utils/FetchUtil3';\r\nimport Heard from '../../utils/heard/Heard';\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\n\r\nlet storage = window.localStorage;\r\nlet echartCi = 0\r\nlet saveHistoryTime = null, getSerialTime = null\r\nlet ipcRenderer = window.electron.ipcRenderer\r\nlet detectTimer = null, countdownTimer = null;\r\n\r\nlet resyncDeviceIsClick = true //用于控制多次点击重新配对按钮\r\nlet num = 0, is97Time = null, is193Time = null, initTime = null\r\n\r\nlet num07 = 0       //接收到07命令行的次数\r\nlet indexNum = 0\r\nlet meetCondition = false //满足第一次测量在76.6与85之间\r\nlet tempArr = []\r\nlet dropNum = 0\r\n\r\nlet lastMeasureTemp = 0, lastMeasureBig = true\r\n\r\nlet firstMeasure = true  //用户反馈刚到这个界面测量就会显示测量温度过高,因此在这里做一个限制,第一次测量不进入温度过高提示\r\nexport default class Mesasure extends Component {\r\n  state = {\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    value: '',\r\n    api: '',\r\n    id: '',\r\n    dataArr: [],\r\n    seleceID: '',//医生id\r\n    data: { ci: [''], wen: [] },\r\n    echarsData: {\r\n      Eci: [],\r\n      wen0: [],\r\n      wen1: []\r\n    },\r\n    temColor: '',\r\n    Temp: '',\r\n    isMeasure: false,     //腋温正在测量中\r\n\r\n    mearsurePart: 1,\r\n    historyData: [],\r\n    patientId: '',\r\n    spin: false,        //patientId后面的刷新按钮是否旋转\r\n    petName: '',\r\n    notes: '',\r\n    addpatient_petName: '',\r\n    addpatient_description: '',\r\n    addpatient_species: 1,\r\n    roomTemperature: '',\r\n    referenceRectalTemperature: '',\r\n    bodyConditionScore: '',\r\n    furLength: '',\r\n    bodyType: '',\r\n    heartRate: '',\r\n    bloodPressure: '',\r\n    respiratoryRate: '',\r\n    visible: false,       //nodel框是否显示\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n\r\n    editVisible: false,\r\n    err07Visible: false,\r\n\r\n    leftStatus: 3,         //1代表着有宠物信息，2代表着添加宠物信息，3代表着初始化，没有填入patientId\r\n\r\n    selectPet: {\r\n      petId: '',\r\n      petName: '',\r\n      owner: '',\r\n      breedName: '',\r\n      isMix: false,\r\n      age: '',\r\n      weight: '',\r\n      birthday: ''\r\n    },\r\n    units: '℉',\r\n    measuerStatus: 'disconnected',\r\n    isconnected: false,\r\n    countdown: 60,\r\n    isPetCharacteristics: true,\r\n    isEmergency: false,\r\n    seleceEmergencies: {},\r\n    emerPatientID: '',\r\n    emerData: [],         //临床测试所有数据,用于传到mella后台\r\n    petVitalTypeId: '01',  //测量部位\r\n\r\n\r\n\r\n    memo: '',\r\n    editRectal: '',\r\n    editRoomTemperature: '',\r\n    editHeartRate: '',\r\n    editRespiratoryRate: '',\r\n    editBloodPressure: '',\r\n    editBodyConditionScore: '',\r\n    editFurLength: '',\r\n\r\n    noUSB: false,  //是否有usb底座，为true代表没有\r\n\r\n\r\n    tip: '',\r\n    tipSpin: false,\r\n    loading: false,\r\n    showHistoryEchart: false,  //在展示历史曲线的时候为true，当开始测量为false\r\n    tempHeight: false,           //第一次温度过高,需要冷却一下\r\n  }\r\n\r\n  componentWillMount () {\r\n    try {\r\n      console.log('-----------------===============-------------', this.props.location.isconnected);\r\n      if (this.props.location.isconnected === false || this.props.location.isconnected === true) {\r\n        if (this.props.location.isconnected === false) {\r\n\r\n        } else {\r\n          this.setState({\r\n            measuerStatus: 'connented',\r\n            isconnected: true\r\n\r\n          })\r\n          is97Time = new Date()\r\n        }\r\n      }\r\n    } catch (error) {\r\n\r\n    }\r\n  }\r\n  componentDidMount () {\r\n    firstMeasure = true\r\n\r\n\r\n    ipcRenderer.send('Lowbig', win())\r\n    console.log(this.props);\r\n    storage.isClinical = 'true'\r\n\r\n    //这里是为了从编辑宠物界面回来的时候能够直接展示这个宠物\r\n    if (this.props.location.participate) {\r\n      let props = this.props.location.participate\r\n\r\n      this.setState({\r\n        patientId: props.patientId\r\n      }, () => {\r\n        this._getPetInfo()\r\n      })\r\n    } else {\r\n      if (storage.measurepatientId) {\r\n        console.log('有上级传来的数据:', storage.measurepatientId);\r\n        this.setState({\r\n          patientId: storage.measurepatientId\r\n        }, () => {\r\n          this._getPetInfo()\r\n        })\r\n      }\r\n    }\r\n\r\n    //这里是记录从哪里传过来的，是普通医生、ezyVet、vetspire\r\n    if (this.props.location.identity) {\r\n      switch (this.props.location.identity) {\r\n        case '1':\r\n          console.log('这是从vetspire来的')\r\n\r\n          break;\r\n        case '2':\r\n          console.log('这是从ezyVet来的')\r\n          if (this.props.location.patientId) {\r\n            this.setState({\r\n              patientId: this.props.location.patientId\r\n            }, () => {\r\n              this._getPetInfo()\r\n            })\r\n          }\r\n\r\n          break;\r\n        case '3':\r\n          console.log('这是从普通医生来的来的');\r\n          // if (this.props.location.patientId) {\r\n          //   this.setState({\r\n          //     patientId: this.props.location.patientId\r\n          //   }, () => {\r\n          //     this._getPetInfo()\r\n          //   })\r\n          // }\r\n          this._getPetInfoBySave()\r\n          break;\r\n        default: console.log('暂未定义');\r\n          break;\r\n      }\r\n    }\r\n\r\n    let hardSet = electronStore.get('hardwareConfiguration')\r\n\r\n    if (!hardSet) {\r\n      let settings = {\r\n        isHua: true,\r\n        is15: true,\r\n        self_tarting: false,\r\n        isBacklight: true,\r\n        isBeep: true,\r\n        backlightTimer: { length: 140, number: '45' },\r\n        autoOff: { length: 0, number: '30' },\r\n      }\r\n      electronStore.set('hardwareConfiguration', settings)\r\n      this.setState({\r\n        units: '℉'\r\n      })\r\n    } else {\r\n      let units = hardSet.isHua ? '℉' : '℃'\r\n      this.setState({\r\n        units\r\n      })\r\n    }\r\n\r\n\r\n\r\n    ipcRenderer.on('sned', this._send)\r\n    ipcRenderer.on('usbDetect', this.usbDetect)\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    //分辨率改变后窗口自动改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    //检测有没有充电桩、温度计\r\n\r\n\r\n    this._whether_to_connect_to_mella()\r\n    countdownTimer && clearInterval(countdownTimer)\r\n\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    ipcRenderer.removeListener('sned', this._send)\r\n    ipcRenderer.removeListener('usbDetect', this.usbDetect)\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n    detectTimer && clearInterval(detectTimer)\r\n    this.timer && clearTimeout(this.timer)\r\n    countdownTimer && clearInterval(countdownTimer)\r\n    getSerialTime && clearTimeout(getSerialTime)\r\n    this.detectTimer && clearInterval(this.detectTimer)\r\n    message.destroy()\r\n    firstMeasure = true\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  usbDetect = (event, data) => {\r\n    if (data === true) {\r\n      this._whether_to_connect_to_mella()\r\n    } else {\r\n      this.detectTimer && clearInterval(this.detectTimer)\r\n      num07 = 0\r\n    }\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n\r\n    this.command(data)()\r\n  }\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      message.destroy()\r\n      this.setState({\r\n        noUSB: false\r\n      })\r\n    } else {\r\n      if (!this.state.noUSB) {\r\n        message.error('The base is not detected. Please insert the base', 0)\r\n        this.setState({\r\n          noUSB: true,\r\n          measuerStatus: 'disconnected',\r\n          countdown: 60,\r\n          isMeasure: false,\r\n          isconnected: false,\r\n          echarsData: {\r\n            Eci: [],\r\n            wen0: [],\r\n            wen1: []\r\n          },\r\n          Temp: '',\r\n          emerData: []\r\n        })\r\n        echartCi = 0\r\n        meetCondition = false\r\n      }\r\n\r\n    }\r\n  }\r\n  _whether_to_connect_to_mella = () => {\r\n    this.detectTimer && clearInterval(this.detectTimer)\r\n    message.destroy()\r\n    this.detectTimer = setInterval(() => {\r\n      if (this.state.isMeasure) {\r\n        return\r\n      }\r\n      // console.log(initTime);\r\n      if (!initTime) {\r\n        console.log('断开连接');\r\n        this.setState({\r\n          measuerStatus: 'disconnected',\r\n          countdown: 0,\r\n          isMeasure: false,\r\n          isconnected: false,\r\n          isEarMeasure: false\r\n        })\r\n        initTime = new Date()\r\n        meetCondition = false\r\n      } else {\r\n        // if (this.state.measuerStatus === 'disconnected') {\r\n        //   ipcRenderer.send('usbdata', { command: '07', arr: [] })\r\n        // }\r\n        ipcRenderer.send('usbdata', { command: '07', arr: [] })\r\n\r\n        if (new Date() - initTime < 5000) {\r\n          console.log('连接成功', indexNum);\r\n          if (indexNum++ % 5 === 1) {\r\n            console.log('去询问探头');\r\n            ipcRenderer.send('usbdata', { command: '31', arr: [] })\r\n          }\r\n\r\n\r\n\r\n        } else {\r\n\r\n          console.log('2断开连接');\r\n          this.setState({\r\n            measuerStatus: 'disconnected',\r\n            countdown: 0,\r\n            isMeasure: false,\r\n            isconnected: false,\r\n            isEarMeasure: false\r\n          })\r\n          meetCondition = false\r\n        }\r\n      }\r\n    }, 2000);\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n  getOption = () => {\r\n    let { units } = this.state\r\n    let min, max;\r\n    if (units === '℃') {\r\n      min = 25\r\n      max = 45\r\n    } else {\r\n      min = 75\r\n      max = 115\r\n    }\r\n    let { echarsData } = this.state\r\n    let { Eci, wen0, wen1 } = echarsData\r\n    let that = this\r\n    let option = {\r\n      color: ['#81b22f'],\r\n      tooltip: {\r\n        /*返回需要的信息*/\r\n        trigger: 'axis',\r\n        triggerOn: 'mousemove',\r\n        enterable: true,\r\n        formatter: function (param) {\r\n          var value = param[0].value;\r\n          // console.log('----para', param);\r\n          return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(1)}${that.state.units}</div>`\r\n        }\r\n      },\r\n      xAxis: {\r\n        name: 'SPL',\r\n        nameLocation: 'end',\r\n        nameTextStyle: {\r\n          align: 'left',\r\n        },\r\n        type: 'category',\r\n        // data: [\"\", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,],\r\n        data: Eci,\r\n        // data:['','15miao','30miao'],\r\n        axisLine: {\r\n          lineStyle: {\r\n            // 设置x轴颜色\r\n            color: '#A0A0A0',\r\n            show: true\r\n          }\r\n        },\r\n        // 设置X轴数据旋转倾斜\r\n        axisLabel: {\r\n          rotate: 0, // 旋转角度\r\n          interval: 29  //设置X轴数据间隔几个显示一个，为0表示都显示\r\n\r\n        },\r\n\r\n      },\r\n      yAxis: {\r\n        name: 'temperature',\r\n        type: 'value',\r\n        min, // 设置y轴刻度的最小值\r\n        max,  // 设置y轴刻度的最大值\r\n        splitNumber: 0,  // 设置y轴刻度间隔个数\r\n        nameTextStyle: {\r\n          padding: [0, 0, 0, 8],\r\n          // backgroundColor: 'pink',\r\n          width: '1200px',\r\n          // fontSize: 20,\r\n          align: 'left',\r\n        },\r\n\r\n        axisLine: {\r\n          lineStyle: {\r\n            // 设置x轴颜色\r\n            color: '#A0A0A0',\r\n            show: true\r\n          }\r\n        },\r\n        splitLine: {\r\n          show: false\r\n        },\r\n      },\r\n      series: [{\r\n        name: '模拟数据',\r\n        type: 'line',\r\n        showSymbol: false,\r\n        hoverAnimation: false,\r\n        // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\r\n        data: wen0,\r\n        smooth: 0.5,\r\n        symbol: 'none',\r\n        itemStyle: {\r\n          normal: {\r\n            lineStyle: {        // 系列级个性化折线样式 \r\n              width: 2,\r\n              type: 'solid',\r\n              color: {\r\n                type: 'linear',\r\n                x: 0,\r\n                y: 1,\r\n                x2: 0,\r\n                y2: 0,\r\n                colorStops: [{\r\n                  offset: 0.5, color: '#47C2ED' // 0% 处的颜色  蓝\r\n                }, {\r\n                  offset: 1, color: '#78D35D' // 50% 处的颜色  绿\r\n                },\r\n                  // {\r\n                  //   offset: 1, color: 'red' // 100% 处的颜色   红\r\n                  // }\r\n                ],\r\n                globalCoord: false // 缺省为 false\r\n              }\r\n            },\r\n          }\r\n        }\r\n      }]\r\n    }\r\n    return option;\r\n  }\r\n\r\n  handleClick = e => {\r\n    console.log('---------------身份', storage.identity);\r\n\r\n    switch (e.key) {\r\n      case '1':\r\n        //  storage.measurepatientId = this.state.patientId; console.log('返回前的问题查看：', this.props.history); this.props.history.goBack()\r\n        switch (storage.identity) {   //1是vetspire   2是ezyvet   3是医生\r\n          case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n            break;\r\n          case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n            break;\r\n\r\n          case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n            break;\r\n\r\n\r\n\r\n          default:\r\n            break;\r\n        }\r\n        break;\r\n      case '2': storage.measurepatientId = ''; this.props.history.push('/')\r\n        break;\r\n      case '3': storage.measurepatientId = this.state.patientId; this.props.history.push('/page12');\r\n        break;\r\n      case '4': storage.measurepatientId = this.state.patientId; this.props.history.push({ pathname: '/page10', isconnected: this.state.isconnected })\r\n        break;\r\n      case '5': this.props.history.push('/menuOptions/settings'); break;\r\n      default: console.log('这个选项还没有做呢');\r\n\r\n\r\n    }\r\n\r\n  };\r\n\r\n  command = (newArr) => {\r\n    const instruction = [209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 7, 99]\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    if (newArr[2] !== 7) {\r\n      initTime = new Date()\r\n      num07 = 0\r\n    } else {\r\n      num07++\r\n    }\r\n\r\n\r\n    const commandArr = {\r\n      209: () => {  //腋温\r\n\r\n        let temp1 = parseFloat(`${dataArr1[3]}.${(dataArr1[4])}`)\r\n        let temp0 = parseFloat(`${dataArr1[5]}.${(dataArr1[6])}`)\r\n        let temp2 = parseFloat(`${dataArr1[7]}.${(dataArr1[8])}`)\r\n        let pdt0 = parseFloat(`${dataArr1[9]}.${(dataArr1[10])}`)\r\n        let pdt1 = parseFloat(`${dataArr1[11]}.${(dataArr1[12])}`)\r\n        let alpha0 = parseFloat(`${dataArr1[13]}.${(dataArr1[14])}`)\r\n        let alpha1 = parseFloat(`${dataArr1[15]}.${(dataArr1[16])}`)\r\n        let Temp = temp0\r\n\r\n        if (Temp === 0 || Temp === null || Temp === undefined) {\r\n          return\r\n        }\r\n\r\n        if (this.state.isMeasure === false) {\r\n          ipcRenderer.send('usbdata', { command: '31', arr: [] })\r\n          this.setState({\r\n            echarsData: {\r\n              Eci: [],\r\n              wen0: [],\r\n              wen1: []\r\n            },\r\n            countdown: 60\r\n\r\n          })\r\n          echartCi = 0\r\n\r\n        }\r\n\r\n\r\n\r\n        //需要做第一次温度,判断,如果温度低于76.6(24.8)则界面显示low,并且不记录上传到后台的临床测试数据emerData\r\n        //需要第一次做温度判断,如果温度高于85(29.4)℉,则跳出高温弹窗,不记录上传到后台的临床测试数据emerDate,并且第一次测量也为true\r\n\r\n        if (!meetCondition) {\r\n          dropNum = 0\r\n          tempArr = []\r\n          if (Temp >= 24.8 && Temp <= 29.4) {\r\n            meetCondition = true\r\n\r\n            if (countdownTimer) {\r\n              console.log('有定时器了，清理掉');\r\n              clearInterval(countdownTimer)\r\n              this.setState((prestate, props) => ({\r\n                countdown: 60\r\n              }));\r\n            }\r\n            countdownTimer = setInterval(() => {\r\n              console.log('进入定时器');\r\n              let { countdown, isconnected } = this.state\r\n              if (countdown <= 0) {\r\n                countdown = 60\r\n              }\r\n              this.setState({\r\n                countdown: countdown - 1\r\n\r\n              })\r\n              if (countdown <= 1) {\r\n                clearInterval(countdownTimer)\r\n                console.log('我要去发送了');\r\n                ipcRenderer.send('usbdata', { command: '41', arr: [] })\r\n              }\r\n              if (isconnected === false) {\r\n                clearInterval(countdownTimer)\r\n              }\r\n            }, 1000);\r\n\r\n\r\n\r\n            let emerData = this.state.emerData\r\n            let str = {\r\n              data0: temp0,\r\n              data1: temp1,\r\n              data2: temp2,\r\n              pdt0,\r\n              pdt1,\r\n              Alpha0: alpha0,\r\n              Alpha1: alpha1,\r\n            }\r\n            emerData.push(str)\r\n\r\n            let { echarsData } = this.state\r\n            let { wen0, wen1, Eci } = echarsData\r\n            Eci.push((echartCi++))\r\n            if (this.state.units === '℃') {\r\n              wen0.push(temp0)\r\n              wen1.push(temp1)\r\n            } else {\r\n              wen0.push(temp0 * 1.8 + 32)\r\n              wen1.push(temp1 * 1.8 + 32)\r\n            }\r\n\r\n            this.setState({\r\n              Temp,\r\n              echarsData,\r\n              isMeasure: true,\r\n              measuerStatus: 'connented',\r\n              isconnected: true,\r\n              showHistoryEchart: false,\r\n              emerData,\r\n              tempHeight: false\r\n            }, () => {\r\n              const option = this.getOption();\r\n              this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n            })\r\n\r\n          } else {\r\n\r\n            meetCondition = false\r\n            lastMeasureBig = true\r\n            lastMeasureTemp = temp0\r\n            if (Temp < 24.8) {\r\n              let { echarsData } = this.state\r\n              let { wen0, wen1, Eci } = echarsData\r\n              Eci.push((echartCi++))\r\n              if (this.state.units === '℃') {\r\n                wen0.push(temp0)\r\n                wen1.push(temp1)\r\n              } else {\r\n                wen0.push(temp0 * 1.8 + 32)\r\n                wen1.push(temp1 * 1.8 + 32)\r\n              }\r\n\r\n              this.setState({\r\n                Temp,\r\n                echarsData,\r\n                isMeasure: true,\r\n                measuerStatus: 'connented',\r\n                isconnected: true,\r\n                showHistoryEchart: false,\r\n                countdown: 60,\r\n                tempHeight: false,\r\n              }, () => {\r\n                const option = this.getOption();\r\n                this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n              })\r\n            } else {\r\n              if (!firstMeasure) {\r\n                if (!this.state.tempHeight) {\r\n                  this.setState({\r\n                    tempHeight: true\r\n                  })\r\n                }\r\n              } else {\r\n                meetCondition = true\r\n                firstMeasure = false\r\n\r\n                if (countdownTimer) {\r\n                  console.log('有定时器了，清理掉');\r\n                  clearInterval(countdownTimer)\r\n                  this.setState((prestate, props) => ({\r\n                    countdown: 60\r\n                  }));\r\n                }\r\n                countdownTimer = setInterval(() => {\r\n                  console.log('进入定时器');\r\n                  let { countdown, isconnected } = this.state\r\n                  if (countdown <= 0) {\r\n                    countdown = 60\r\n                  }\r\n                  this.setState({\r\n                    countdown: countdown - 1\r\n\r\n                  })\r\n                  if (countdown <= 1) {\r\n                    clearInterval(countdownTimer)\r\n                    console.log('我要去发送了');\r\n                    ipcRenderer.send('usbdata', { command: '41', arr: [] })\r\n                  }\r\n                  if (isconnected === false) {\r\n                    clearInterval(countdownTimer)\r\n                  }\r\n                }, 1000);\r\n\r\n\r\n\r\n                let emerData = this.state.emerData\r\n                let str = {\r\n                  data0: temp0,\r\n                  data1: temp1,\r\n                  data2: temp2,\r\n                  pdt0,\r\n                  pdt1,\r\n                  Alpha0: alpha0,\r\n                  Alpha1: alpha1,\r\n                }\r\n                emerData.push(str)\r\n\r\n                let { echarsData } = this.state\r\n                let { wen0, wen1, Eci } = echarsData\r\n                Eci.push((echartCi++))\r\n                if (this.state.units === '℃') {\r\n                  wen0.push(temp0)\r\n                  wen1.push(temp1)\r\n                } else {\r\n                  wen0.push(temp0 * 1.8 + 32)\r\n                  wen1.push(temp1 * 1.8 + 32)\r\n                }\r\n\r\n                this.setState({\r\n                  Temp,\r\n                  echarsData,\r\n                  isMeasure: true,\r\n                  measuerStatus: 'connented',\r\n                  isconnected: true,\r\n                  showHistoryEchart: false,\r\n                  emerData,\r\n                  tempHeight: false\r\n                }, () => {\r\n                  const option = this.getOption();\r\n                  this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n                })\r\n              }\r\n\r\n            }\r\n\r\n            console.log('不满足');\r\n          }\r\n        } else {\r\n          console.log('差值', temp0, lastMeasureTemp, temp0 - lastMeasureTemp);\r\n          if (temp0 - lastMeasureTemp <= -0.03) {\r\n            console.log('本次测量要小于上次测量,不计入里面');\r\n            countdownTimer && clearInterval(countdownTimer)\r\n            lastMeasureBig = false\r\n            return\r\n          }\r\n          if (!lastMeasureBig) {\r\n            countdownTimer = setInterval(() => {\r\n              console.log('进入定时器');\r\n              let { countdown, isconnected } = this.state\r\n              if (countdown <= 0) {\r\n                countdown = 60\r\n              }\r\n              this.setState({\r\n                countdown: countdown - 1\r\n\r\n              })\r\n              if (countdown <= 1) {\r\n                clearInterval(countdownTimer)\r\n                console.log('我要去发送了');\r\n                ipcRenderer.send('usbdata', { command: '41', arr: [] })\r\n              }\r\n              if (isconnected === false) {\r\n                clearInterval(countdownTimer)\r\n              }\r\n            }, 1000);\r\n          }\r\n\r\n\r\n\r\n\r\n\r\n\r\n          lastMeasureBig = true\r\n          lastMeasureTemp = temp0\r\n          let emerData = this.state.emerData\r\n          let str = {\r\n            data0: temp0,\r\n            data1: temp1,\r\n            data2: temp2,\r\n            pdt0,\r\n            pdt1,\r\n            Alpha0: alpha0,\r\n            Alpha1: alpha1,\r\n          }\r\n          emerData.push(str)\r\n\r\n          let { echarsData } = this.state\r\n          let { wen0, wen1, Eci } = echarsData\r\n          Eci.push((echartCi++))\r\n          if (this.state.units === '℃') {\r\n            wen0.push(temp0)\r\n            wen1.push(temp1)\r\n          } else {\r\n            wen0.push(temp0 * 1.8 + 32)\r\n            wen1.push(temp1 * 1.8 + 32)\r\n          }\r\n\r\n          tempArr.push(temp0)\r\n          if (tempArr.length > 10) {\r\n            let k = (tempArr[tempArr.length - 1] - tempArr[tempArr.length - 11]) / 10\r\n            console.log('斜率', k);\r\n            if (k < -0.035) {\r\n              console.log('下降的有点狠了');\r\n              dropNum++\r\n            } else {\r\n              dropNum = 0\r\n            }\r\n            if (dropNum > 10) {\r\n              message.destroy()\r\n              message.error('Measurement failed')\r\n              dropNum = 0\r\n            }\r\n          }\r\n\r\n\r\n          this.setState({\r\n            Temp,\r\n            echarsData,\r\n            isMeasure: true,\r\n            measuerStatus: 'connented',\r\n            isconnected: true,\r\n            showHistoryEchart: false,\r\n            emerData,\r\n            tempHeight: false\r\n          }, () => {\r\n            const option = this.getOption();\r\n            this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n          })\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      },\r\n      208: () => {  //耳温\r\n\r\n\r\n\r\n        //现在探头0可能不存在，所以把探头0改为探头1\r\n\r\n        let temp0 = parseFloat(`${dataArr1[7]}.${(dataArr1[8])}`)\r\n\r\n\r\n        let Temp = Math.floor(temp0 * 10) / 10\r\n        console.log('------------gangwen--------------', Temp);\r\n\r\n        let emerData = this.state.emerData\r\n\r\n        let str = {\r\n          data0: temp0,\r\n\r\n        }\r\n        emerData.push(str)\r\n        this.setState({\r\n          emerData,\r\n          Temp,\r\n          isMeasure: false,\r\n          mearsurePart: 3,\r\n          measuerStatus: 'measuring',\r\n          isconnected: true\r\n        })\r\n        meetCondition = false\r\n\r\n      },\r\n      193: () => {  //硬件发送结束命令\r\n        let time = new Date() - is193Time\r\n        lastMeasureTemp = 0\r\n        lastMeasureBig = true\r\n        console.log(time);\r\n        if (time < 1000) {\r\n          is193Time = new Date()\r\n          console.log('我直接抛出');\r\n          return;\r\n        } else {\r\n          console.log('---------------------------', time);\r\n          is193Time = new Date()\r\n\r\n          countdownTimer && clearInterval(countdownTimer)\r\n\r\n\r\n          saveHistoryTime && clearTimeout(saveHistoryTime)\r\n\r\n          saveHistoryTime = setTimeout(() => { //防止连续向后台发送数据\r\n            countdownTimer && clearInterval(countdownTimer)\r\n\r\n            meetCondition = false\r\n\r\n\r\n\r\n            let { roomTemperature, referenceRectalTemperature, bodyConditionScore,\r\n              furLength, heartRate, bloodPressure, respiratoryRate, Temp, emerData } = this.state\r\n            if (emerData.length < 10) {\r\n              console.log('临床数据太少,不做保存');\r\n              return\r\n            }\r\n\r\n            if (bodyConditionScore === '') {\r\n              bodyConditionScore = null\r\n            } else {\r\n              bodyConditionScore = parseFloat(bodyConditionScore)\r\n            }\r\n\r\n            if (heartRate === '') {\r\n              heartRate = null\r\n            } else {\r\n              heartRate = parseFloat(heartRate)\r\n            }\r\n\r\n            if (respiratoryRate === '') {\r\n              respiratoryRate = null\r\n            } else {\r\n              respiratoryRate = parseFloat(respiratoryRate)\r\n            }\r\n\r\n            if (roomTemperature === '') {\r\n              roomTemperature = null\r\n            } else {\r\n              roomTemperature = ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2)\r\n            }\r\n\r\n            if (referenceRectalTemperature === '') {\r\n              referenceRectalTemperature = null\r\n            } else {\r\n              referenceRectalTemperature = ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2)\r\n            }\r\n\r\n            if (furLength === '') {\r\n              furLength = null\r\n            } else {\r\n              furLength = parseFloat(furLength)\r\n            }\r\n            let petVitalId = null\r\n            switch (this.state.petVitalTypeId) {\r\n              case '01': petVitalId = 1; break;\r\n              case '02': petVitalId = 3; break;\r\n              case '03': petVitalId = 4; break;\r\n              default: petVitalId = 1; break;\r\n            }\r\n            let datas = {\r\n\r\n              temperature: parseFloat(Temp),  //测量温度\r\n              roomTemperature,//室温\r\n              bodyConditionScore,\r\n              heartRate,\r\n              respiratoryRate,\r\n              referenceRectalTemperature,\r\n              furLength,\r\n              bloodPressure,\r\n              memo: this.state.notes,\r\n              petVitalTypeId: petVitalId,\r\n              clinicalDataEntityList: emerData\r\n            }\r\n            if (storage.roleId === `1`) {\r\n              datas.userId = storage.userId\r\n            } else {\r\n              datas.doctorId = storage.userId\r\n              datas.userId = storage.userId\r\n            }\r\n\r\n            if (this.state.selectPet.petId !== '' && this.state.isEmergency === false) {\r\n\r\n              datas.petId = this.state.selectPet.petId\r\n\r\n\r\n              console.log('临床测试入参：', datas);\r\n              //把数据保存进入云端\r\n              fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\r\n                .then(res => {\r\n                  console.log(res);\r\n                  meetCondition = false\r\n                  if (res.flag === true) {\r\n                    console.log('上传成功');\r\n                    // message.success('Uploaded successfully')\r\n                    this.setState({\r\n                      emerData: [],\r\n                      isMeasure: false\r\n                    })\r\n\r\n                    message.success('Uploaded successfully')\r\n                    this._getHistory11(this.state.selectPet.petId)\r\n                  } else {\r\n                    console.log('上传失败');\r\n                    this.setState({\r\n                      emerData: [],\r\n                      isMeasure: false\r\n                    })\r\n                    message.error('upload failed')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  console.log(err);\r\n                  // message.error(err)\r\n                  this.setState({\r\n                    emerData: [],\r\n                    isMeasure: false\r\n                  })\r\n                  meetCondition = false\r\n                })\r\n            } else if (this.state.isEmergency === true) {\r\n\r\n              console.log('温度数据保存入参：', datas);\r\n\r\n              fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\r\n                .then(res => {\r\n                  console.log(res);\r\n                  meetCondition = false\r\n                  if (res.flag === true) {\r\n                    console.log('上传成功');\r\n                    message.success('Uploaded successfully')\r\n                    this.setState({\r\n                      emerData: [],\r\n                      isMeasure: false\r\n                    })\r\n                    // this._getHistory11(this.state.selectPet.petId)\r\n                    this._getEmergencyHistory()\r\n                  } else {\r\n                    console.log('上传失败');\r\n                    message.error('upload failed')\r\n                    this.setState({\r\n                      emerData: [],\r\n                      isMeasure: false\r\n                    })\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  console.log(err);\r\n                  message.error(err)\r\n                  this.setState({\r\n                    emerData: [],\r\n                    isMeasure: false\r\n                  })\r\n                  meetCondition = false\r\n                })\r\n            }\r\n\r\n            clearTimeout(saveHistoryTime)\r\n          }, 500);\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n      },\r\n\r\n      192: () => {   //开始测量返回结果\r\n        switch (newArr[3]) {\r\n          case 90: console.log('有探头，开始测量的返回指令·'); break;\r\n          case 11: console.log('没有探头，开始测量的返回值'); break;\r\n\r\n        }\r\n      },\r\n      129: () => {      //返回硬件版本号\r\n        console.log(`返回的版本号为${newArr[3]}`);\r\n        this.setState({\r\n          measuerStatus: 'connented',\r\n          isconnected: true\r\n\r\n        })\r\n      },\r\n      135: () => {          //硬件的一些配置信息\r\n        /**\r\n         * ______________新版、旧版没法控制温度计__________________\r\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\r\n         * newArr[7] 无操作关机时间        bcd码\r\n         * newArr[8] 背光时间              bcd码\r\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\r\n         * newArr[10] 测量单位    01代表℃，00代表℉\r\n         */\r\n        countdownTimer && clearInterval(countdownTimer)\r\n        this.setState({\r\n          measuerStatus: 'connented',\r\n          isconnected: true\r\n\r\n        })\r\n        let hardSet = electronStore.get('hardwareConfiguration')\r\n        let beep = hardSet.isBeep ? '11' : '00'\r\n        let unit = hardSet.isHua ? '00' : '01'\r\n\r\n        if (dataArr1[7] === hardSet.autoOff.number && dataArr1[8] === hardSet.backlightTimer.number &&\r\n          dataArr1[9] === beep && dataArr1[10] === unit) {\r\n        } else {\r\n          console.log('不相同，去发送命令');\r\n          let setArr = ['03', 'ed', '07', 'dd', hardSet.autoOff.number, hardSet.isBacklight ? hardSet.backlightTimer.number : '00', hardSet.isBeep ? '11' : '00', hardSet.isHua ? '00' : '01']\r\n          ipcRenderer.send('usbdata', { command: '21', arr: setArr })\r\n        }\r\n        // if (newArr[10] === 0) {\r\n        //   this.setState({\r\n        //     units: '℉'\r\n        //   })\r\n        // } else {\r\n        //   this.setState({\r\n        //     units: '℃'\r\n        //   })\r\n        // }\r\n\r\n\r\n      },\r\n      238: () => {     //探头松动\r\n        console.log('探头松动');\r\n        this.setState({\r\n          isMeasure: false\r\n        })\r\n        meetCondition = false\r\n        message.error('The probe is loose, please re-install and measure again', 5)\r\n        clearInterval(countdownTimer)\r\n      },\r\n      98: () => { //蓝牙连接断开\r\n        console.log('断开连接---断开连接---断开连接---断开连接---断开连接---断开连接');\r\n\r\n        console.log(new Date() - is97Time);\r\n        if (new Date() - is97Time < 800) {\r\n          return\r\n        }\r\n        this.setState({\r\n          measuerStatus: 'disconnected',\r\n          countdown: 60,\r\n          isMeasure: false,\r\n          isconnected: false,\r\n          echarsData: {\r\n            Eci: [],\r\n            wen0: [],\r\n            wen1: []\r\n          },\r\n          Temp: '',\r\n          emerData: []\r\n        })\r\n        echartCi = 0\r\n        meetCondition = false\r\n\r\n      },\r\n      97: () => {       //蓝牙连接\r\n        console.log('连接成功---连接成功---连接成功---连接成功---连接成功---连接成功');\r\n        this.setState({\r\n          measuerStatus: 'connented',\r\n          isconnected: true\r\n\r\n        })\r\n        is97Time = new Date()\r\n      },\r\n      130: () => {   //获取到mac地址\r\n        let dataArr = newArr.map(item => {\r\n          if (item.toString(16).length < 2) {\r\n            return '0' + item.toString(16)\r\n          } else {\r\n            return item.toString(16)\r\n          }\r\n        })\r\n        let str = ''\r\n        for (let i = 3; i < dataArr.length - 2; i++) {\r\n\r\n          str += dataArr[i]\r\n\r\n        }\r\n        // console.log(str);\r\n        this.setState({\r\n          notes: `${str}\r\n          `\r\n        })\r\n      },\r\n      177: () => {         //探头id\r\n        let dataArr1 = newArr.map(item => {\r\n          if (item.toString(16).length < 2) {\r\n            return '0' + item.toString(16)\r\n          } else {\r\n            return item.toString(16)\r\n          }\r\n        })\r\n        let id = ''\r\n        for (let i = 3; i < dataArr1.length - 2; i++) {\r\n          id += dataArr1[i]\r\n\r\n        }\r\n        console.log(id, dataArr1[7]);\r\n\r\n        this.setState({\r\n          probeID: id,\r\n          petVitalTypeId: dataArr1[7]\r\n        })\r\n        if (dataArr1[7] === '01') {\r\n          this.setState({\r\n            mearsurePart: 1\r\n          })\r\n        } else if (dataArr1[7] === '02') {\r\n          this.setState({\r\n            mearsurePart: 2\r\n          })\r\n        } else if (dataArr1[7] === '03') {\r\n          this.setState({\r\n            mearsurePart: 3\r\n          })\r\n        }\r\n\r\n\r\n\r\n      },\r\n      7: () => {  //发什么收什么，需要去重新插拔底座\r\n        console.log('重新插拔底座');\r\n        if (num07 === 3 && this.state.err07Visible === false) {\r\n          this.setState({\r\n            err07Visible: true\r\n          })\r\n        }\r\n      },\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  _mearsurePort = () => {\r\n    switch (this.state.mearsurePart) {\r\n      case 1: return (\r\n        <div >\r\n          <div className='part'>\r\n            Axillary\r\n            <img src={ye} alt=\"\" width={px(50)} />\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n      case 2: return (\r\n        <div >\r\n          <div className='part'>\r\n            Rectal\r\n            <img src={gang} alt=\"\" width={px(50)} />\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n      default: return (\r\n        <div >\r\n          <div className='part'>\r\n            Ear\r\n            <img src={er} alt=\"\" width={px(50)} />\r\n\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  _getEmergencyHistory = () => {\r\n\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate (data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = []\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, 'GET', '')  //userID要自动的\r\n      .then(res => {\r\n        // console.log('获取的宠物记录列表1', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true) {\r\n          let datas = res.data\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let { petId, examId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo, clinicalDatagroupId,\r\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity } = datas[i]\r\n              let Tem = temperature\r\n              try {\r\n                Tem = temperature || clinicalDataEntity.data0\r\n              } catch (error) {\r\n                console.log('抛出的异常', error);\r\n              }\r\n\r\n\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format('MMM DD'),\r\n                time: moment(createTime).format('hh:mm A'),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\r\n              }\r\n\r\n              historys.push(str)\r\n            }\r\n          }\r\n\r\n          //把所有数据拿完后做个排序\r\n\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log('historyData:', historyData);\r\n          this.setState({\r\n            historyData\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n\r\n  _getHistory11 = (petId) => {\r\n    let historys = []\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    fetchRequest(`/pet/getPetExamAndClinicalByPetId/${petId}`, 'GET', '')  //userID要自动的\r\n      .then(res => {\r\n        console.log('获取历史记录', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true) {\r\n          let datas = res.data\r\n          console.log('-------', datas);\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n\r\n            let data = datas[i]\r\n\r\n            let { petId, examId, clinicalDatagroupId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo,\r\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity, modifiedTime } = data\r\n\r\n            if (!clinicalDatagroupId) {\r\n              continue\r\n            }\r\n            let Tem = temperature\r\n            if (clinicalDataEntity) {\r\n              Tem = Tem || clinicalDataEntity.data0\r\n            }\r\n            // console.log('==============', Tem);\r\n            Tem = Tem ? Tem : 0\r\n\r\n\r\n            let time = null\r\n            if (modifiedTime && `${modifiedTime}` !== '' && `${modifiedTime}` !== `undefined`) {\r\n              time = modifiedTime\r\n            } else {\r\n              time = createTime\r\n            }\r\n            let json = {\r\n              time,\r\n              Temp: Tem,\r\n              placement: petVitalTypeId,\r\n              note: memo,\r\n              historyId: examId,\r\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\r\n            }\r\n            historys.push(json)\r\n\r\n\r\n          }\r\n          console.log('---', historys);\r\n          let historyData = []\r\n          for (let i = 0; i < historys.length; i++) {\r\n            let history = historys[i]\r\n            let { bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId, examId } = history\r\n            // console.log('--------', history.placement);\r\n            let placement = history.placement\r\n            if (placement === null || placement === '') {\r\n              placement = 1\r\n            }\r\n            let str = {\r\n              date: moment(history.time).format('MMM DD'),\r\n              time: moment(history.time).format('hh:mm A'),\r\n              temp: history.Temp,\r\n              placement,\r\n              note: history.note,\r\n              historyId: history.historyId,\r\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId,\r\n              key: examId\r\n            }\r\n            historyData.push(str)\r\n          }\r\n          this.setState({\r\n            historyData\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        console.log(err);\r\n      })\r\n\r\n  }\r\n\r\n  _refresh = () => {\r\n    console.log('点击了');\r\n    // ipcRenderer.send('usbdata', { command: '07', arr: [] })\r\n    this.setState({\r\n      spin: true,  //\r\n      addpatient_description: '',\r\n      addpatient_petName: '',\r\n      addpatient_species: 1\r\n    })\r\n    if (this.state.patientId === '') {\r\n      this.setState({\r\n        spin: false\r\n      })\r\n    } else {\r\n      this._getPetInfo()\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  _getPetInfoBySave = () => {\r\n    let data = JSON.parse(storage.doctorExam)\r\n    console.log('从列表里面传过来的数据', data);\r\n    if (!data) {\r\n      console.log('从walk-in来的');\r\n    } else {\r\n      let { petId, petName, owner, breed, isMix, age, weight, url, patientId } = data\r\n      if (weight === 'unknown') {\r\n        weight = null\r\n      }\r\n      let selectPet = {\r\n        petId,\r\n        petName,\r\n        owner,\r\n        breedName: breed,\r\n        isMix,\r\n        age,\r\n        weight,\r\n        // birthday,\r\n        url,\r\n\r\n\r\n      }\r\n      this.setState({\r\n        selectPet,\r\n        leftStatus: 1,\r\n        patientId\r\n      })\r\n      this._getHistory11(petId)\r\n    }\r\n  }\r\n\r\n\r\n  _getPetInfo = () => {\r\n\r\n    switch (storage.identity) {\r\n      case '1':\r\n        console.log('我是vetspire查找');\r\n\r\n\r\n\r\n      case '2':\r\n        console.log('我是ezyVet查找');\r\n        let params = {\r\n          animalId: this.state.patientId,\r\n          organizationId: 4\r\n        }\r\n        let paramsArray = [];\r\n        Object.keys(params).forEach(key =>\r\n          paramsArray.push(key + \"=\" + params[key])\r\n        );\r\n        let url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId'\r\n        // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n        if (url.search(/\\?/) === -1) {\r\n          url = url + \"?\" + paramsArray.join(\"&\");\r\n        } else {\r\n          url = url + \"&\" + paramsArray.join(\"&\");\r\n        }\r\n        console.log('ezyVet集成查找宠物入参-请求地址', params, url);\r\n        fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            'authorization': `Bearer ${storage.ezyVetToken}`,\r\n          }\r\n        }).then((response) => response.json())\r\n          .then((res) => {\r\n            console.log('res', res);\r\n            this.setState({\r\n              spin: false\r\n            })\r\n            if (res.flag === true) {\r\n              //有宠物，进入1\r\n              let petArr = res.data\r\n              if (petArr.length > 1) {\r\n                petArr.sort(function (a, b) {\r\n                  return a.createTime > b.createTime ? -1 : -1;\r\n                })\r\n              }\r\n\r\n\r\n              console.log(petArr);\r\n\r\n              let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr\r\n              if (isMix !== true) {\r\n                isMix = false\r\n              }\r\n              let age = moment(new Date()).diff(birthday, 'year')\r\n              let selectPet = {\r\n                petId,\r\n                petName,\r\n                owner: `${lastName}  ${firstName}`,\r\n                breedName,\r\n                isMix,\r\n                age,\r\n                weight,\r\n                birthday,\r\n                url\r\n\r\n              }\r\n              this.setState({\r\n                selectPet,\r\n                leftStatus: 1,\r\n              })\r\n              this._getHistory11(petId)\r\n\r\n            } else {\r\n              //没有宠物，进入2\r\n              this.setState({\r\n                leftStatus: 2\r\n              })\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n\r\n        break;\r\n\r\n      case '3':\r\n        console.log('我是一般医生查找');\r\n        let datas = {\r\n          patientId: this.state.patientId,\r\n          doctorId: storage.userId,\r\n        }\r\n        if (storage.lastWorkplaceId) {\r\n          datas.workplaceId = storage.lastWorkplaceId\r\n        }\r\n        if (storage.lastOrganization) {\r\n          datas.org = storage.lastOrganization\r\n        }\r\n        console.log('入参：', datas);\r\n        fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n          .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n              spin: false\r\n            })\r\n            if (res.flag === true) {\r\n              //有宠物，进入1\r\n              let petArr = res.data\r\n              if (petArr.length > 1) {\r\n                petArr.sort(function (a, b) {\r\n                  return a.createTime > b.createTime ? -1 : -1;\r\n                })\r\n              }\r\n\r\n              console.log(petArr);\r\n\r\n              let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr[0]\r\n              if (isMix !== true) {\r\n                isMix = false\r\n              }\r\n              let age = moment(new Date()).diff(birthday, 'year')\r\n              let selectPet = {\r\n                petId,\r\n                petName,\r\n                owner: `${lastName}  ${firstName}`,\r\n                breedName,\r\n                isMix,\r\n                age,\r\n                weight,\r\n                birthday,\r\n                url\r\n\r\n              }\r\n              this.setState({\r\n                selectPet,\r\n                leftStatus: 1,\r\n              })\r\n              this._getHistory11(petId)\r\n\r\n            } else {\r\n              //没有宠物，进入2\r\n              this.setState({\r\n                leftStatus: 2\r\n              })\r\n            }\r\n          })\r\n          .catch(err => {\r\n            this.setState({\r\n              spin: false\r\n            })\r\n            console.log(err);\r\n          })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  draggleRef = React.createRef();\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n      emerPatientID: ''\r\n    });\r\n  };\r\n\r\n  handleCancel = (e) => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false,\r\n      emerPatientID: ''\r\n    });\r\n  };\r\n\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n  _addPatient = () => {\r\n    console.log(222);\r\n    let { addpatient_description, addpatient_petName, addpatient_species, patientId } = this.state\r\n    let speciesId = 3, petSpeciesBreedId = 13001\r\n\r\n    // speciesId   狗：2   猫：1    其他：3\r\n    switch (addpatient_species) {\r\n      case 1: speciesId = 2; petSpeciesBreedId = 12001; break;\r\n      case 2: speciesId = 1; petSpeciesBreedId = 11001; break;\r\n      default: speciesId = 3; petSpeciesBreedId = 13001;\r\n    }\r\n    // 11001 是cat 12001是dog 13001是other\r\n    // \r\n    let datas = {\r\n\r\n      petName: addpatient_petName,\r\n      description: addpatient_description,\r\n      speciesId,\r\n      doctorId: storage.userId,\r\n      petSpeciesBreedId\r\n\r\n\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      datas.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      datas.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log(datas);\r\n    fetchRequest(`/pet/addDeskPet/${patientId}`, 'POST', datas)\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.flag === true) {\r\n          message.success('Patient id created successfully')\r\n          this._refresh()\r\n        } else {\r\n          console.log('创建Patient id 失败');\r\n          message.error('Patient id creation failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        message.error('Patient id creation failed')\r\n      })\r\n  }\r\n\r\n  _topLeft = () => {\r\n    let { historyData, spin, selectPet, patientId } = this.state\r\n    let { petName, owner, breedName, isMix, age, weight, url, speciesId } = selectPet\r\n    if (!breedName) {\r\n      breedName = ''\r\n    }\r\n    switch (breedName) {\r\n      case 'defaultdog':\r\n        breedName = 'Dog'\r\n\r\n        break;\r\n      case 'defaultother':\r\n        breedName = 'Other'\r\n\r\n        break;\r\n      case 'defaultcat':\r\n        breedName = 'Cat'\r\n        break;\r\n\r\n    }\r\n\r\n    let image = `url(${other})`\r\n\r\n    if (url) {\r\n      image = `url(${url}?download=0&width=80)`\r\n    } else {\r\n      switch (speciesId) {\r\n        case 1: image = `url(${cat})`; break;\r\n        case 2: image = `url(${dog})`; break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n\r\n    let mix = ''\r\n    if (isMix === true) {\r\n      mix = 'Mix'\r\n    }\r\n    if (weight === null) {\r\n      weight = ''\r\n    } else {\r\n      weight = (2.2046 * parseFloat(weight)).toFixed(1) + 'lbs'\r\n    }\r\n\r\n    if (`${age}` === `NaN` || `${age}` === `null`) {\r\n      age = ''\r\n    } else {\r\n      age = `${age} yrs`\r\n    }\r\n    let datas = []\r\n    for (let i = 0; i < historyData.length; i++) {\r\n      if (i < 3) {\r\n        datas.push(historyData[i])\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    let dogbgc = '', catbgc = '', otherbgc = '';\r\n\r\n    switch (this.state.addpatient_species) {\r\n      case 1: dogbgc = '#E1206D'; catbgc = '#F08FB6'; otherbgc = '#F08FB6'; break;\r\n      case 2: dogbgc = '#F08FB6'; catbgc = '#E1206D'; otherbgc = '#F08FB6'; break;\r\n      case 3: dogbgc = '#F08FB6'; catbgc = '#F08FB6'; otherbgc = '#E1206D'; break;\r\n      default: break;\r\n    }\r\n\r\n    if (owner === `null  null`) {\r\n      // owner = 'unknown'\r\n      owner = ''\r\n    }\r\n    if (breedName === '' || breedName === null || breedName === undefined) {\r\n      // breedName = 'unknown'\r\n      breedName = ''\r\n    }\r\n    let title = ''\r\n    if (patientId) {\r\n      title += `ID: ${patientId}`\r\n    }\r\n    if (patientId && petName) {\r\n      title += ` , `\r\n    }\r\n    if (petName) {\r\n      title += `${petName}`\r\n    }\r\n    switch (this.state.leftStatus) {\r\n      case 1: return (\r\n        <div className=\"l\">\r\n          <div className=\"petinfo\">\r\n            <div className=\"heard\"\r\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\r\n            >\r\n              <Tooltip placement='bottom' title='Switch pet'>\r\n                <MyIcon\r\n                  type='icon-qiehuanchengshi'\r\n                  className=\"icon\"\r\n                  style={{ marginRight: px(10), textAlign: 'center', }}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      leftStatus: 3,\r\n                      isMeasure: false,\r\n                      selectPet: {\r\n                        petId: '',\r\n                        petName: '',\r\n                        owner: '',\r\n                        breedName: '',\r\n                        isMix: false,\r\n                        age: '',\r\n                        weight: '',\r\n                        birthday: '',\r\n                      },\r\n                      patientId: '',\r\n                      historyData: [],\r\n                    })\r\n                    meetCondition = false\r\n                  }} />\r\n              </Tooltip>\r\n\r\n              <div className='avatar'\r\n                style={{\r\n                  width: px(50),\r\n                  height: px(50),\r\n                  marginRight: px(10),\r\n                  backgroundImage: image,\r\n                }}\r\n\r\n              >\r\n\r\n                {/* <img src={image} width={px(80)} alt=\"\" /> */}\r\n\r\n                {(storage.identity === '3') &&\r\n                  <img className='edit' src={edit} alt=\"\" width='18px'\r\n                    onClick={() => {\r\n                      storage.goEditPet = 'mesasure'\r\n                      this.props.history.push({ pathname: '/page9', participate: { patientId, petName, petId: this.state.selectPet.petId } })\r\n                    }}\r\n\r\n                  />}\r\n\r\n\r\n              </div>\r\n              <div className=\"ltitle\">\r\n                <p > {title}</p>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"info\"\r\n              style={{ marginTop: mTop(10), marginBottom: mTop(20), paddingLeft: px(80) }}\r\n            >\r\n              Owner: {`${owner}`} <br />\r\n              {`Breed:  ${breedName}  ${mix}`}<br />\r\n              Age: {`${age}`}<br />\r\n              Weight: {`${weight}`}<br />\r\n            </div>\r\n          </div>\r\n          <div className=\"history\">\r\n            <div className=\"heard1\"\r\n              style={{ height: mTop(40), marginTop: mTop(10) }}\r\n              onClick={() => { this.setState({ visible: true }) }}>\r\n              <span>Device Info</span>\r\n            </div>\r\n            <div className=\"historyBody\">\r\n              {/* <div className=\"devices\">\r\n                <p>Device:</p>\r\n                <Select defaultValue=\"Mella-684h2\" style={{ width: 120 }} size={'small'}\r\n                // onChange={handleChange}\r\n                >\r\n                  <Option value=\"device1\">Mella-684h2</Option>\r\n                  <Option value=\"device2\">Mella-587j0</Option>\r\n                  <Option value=\"device3\">Mella-742k3</Option>\r\n                </Select>\r\n              </div> */}\r\n              {this._mearsurePort()}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n\r\n      case 2: return (\r\n        <div className=\"l\">\r\n          <div className=\"petinfo\">\r\n            <div className=\"heard\"\r\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\r\n\r\n            >\r\n              {`Clinical Study Mode`}\r\n            </div>\r\n            <div className=\"patirntID\"\r\n              style={{ marginTop: px(18) }}\r\n            >\r\n              <p style={{ width: '80px' }}>Patient ID:</p>\r\n              <Input\r\n                // style={{ border: 'none', outline: 'medium' }}\r\n                style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                value={this.state.patientId}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    patientId: item.target.value.replace(/\\s/g, \"\")\r\n                  })\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  // console.log('------', e);\r\n                  if (e.keyCode === 13) {\r\n                    this._refresh()\r\n                  }\r\n                }}\r\n              />\r\n              <SyncOutlined className='refresh'\r\n                style={{ fontSize: px(25) }}\r\n                onClick={this._refresh} spin={spin} />\r\n            </div>\r\n\r\n            <div className='newPet'>\r\n              <p style={{ color: '#E1206D', fontSize: px(18), fontWeight: 'bold', marginTop: mTop(10), paddingLeft: px(30) }}>Yay! You got a new patient!</p>\r\n              <div className=\"patirntID\"\r\n                style={{ marginTop: px(18) }}\r\n              >\r\n                <p style={{ width: '80px' }}>Pet Name:</p>\r\n                <Input\r\n                  // style={{ border: 'none', outline: 'medium' }}\r\n                  style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                  value={this.state.addpatient_petName}\r\n                  bordered={false}\r\n                  onChange={(item) => {\r\n                    // console.log(item);\r\n                    this.setState({\r\n                      addpatient_petName: item.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"patirntID\"\r\n                style={{ marginTop: px(18) }}\r\n              >\r\n                <p style={{ width: '80px' }}>Description:</p>\r\n                <Input\r\n                  // style={{ border: 'none', outline: 'medium' }}\r\n                  style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                  value={this.state.addpatient_description}\r\n                  bordered={false}\r\n                  onChange={(item) => {\r\n                    // console.log(item);\r\n                    this.setState({\r\n                      addpatient_description: item.target.value\r\n                    })\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"species\">\r\n\r\n                <ul>\r\n                  <li >\r\n                    <div className='speciesChild'\r\n                      style={{ width: px(50), }}\r\n                    >\r\n                      <div className='dog'\r\n                        style={{ width: px(50), height: px(50), backgroundColor: dogbgc }}\r\n                        onClick={() => { this.setState({ addpatient_species: 1 }) }} >\r\n                        <img src={dog} alt=\"\" style={{ width: px(38) }} />\r\n                      </div>\r\n                      Dog\r\n                    </div>\r\n                  </li>\r\n                  <li >\r\n                    <div className='speciesChild'\r\n                      style={{ width: px(50) }}\r\n                    >\r\n                      <div className='dog'\r\n                        style={{ width: px(50), height: px(50), backgroundColor: catbgc }}\r\n                        onClick={() => { this.setState({ addpatient_species: 2 }) }}  >\r\n                        <img src={cat} alt=\"\" style={{ width: px(38) }} />\r\n                      </div>\r\n                      Cat\r\n                    </div>\r\n                  </li>\r\n                  <li >\r\n                    <div className='speciesChild'\r\n                      style={{ width: px(50) }}\r\n                    >\r\n                      <div className='dog'\r\n                        style={{ width: px(50), height: px(50), backgroundColor: otherbgc }}\r\n\r\n                        onClick={() => { this.setState({ addpatient_species: 3 }) }}>\r\n                        <img src={other} alt=\"\" style={{ width: px(38), color: '#FFF' }} />\r\n                      </div>\r\n                      Other\r\n                    </div>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"savebtn\"\r\n                style={{ marginTop: mTop(20) }}\r\n              >\r\n                <p\r\n                  style={{ width: px(180), height: px(40), marginLeft: px(70), fontSize: px(16) }}\r\n                  onClick={() => { this._addPatient() }}>Add New Patient</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n      case 3: return (\r\n        <div className=\"l\">\r\n          <div className=\"petinfo\">\r\n            <div className=\"heard\"\r\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\r\n\r\n            >\r\n              {`Clinical Study Mode`}\r\n            </div>\r\n            <div className=\"patirntID\">\r\n              <p style={{ width: '80px' }}>Patient ID:</p>\r\n              <Input\r\n                // style={{ border: 'none', outline: 'medium' }}\r\n                style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\r\n\r\n                value={this.state.patientId}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  // console.log(item);\r\n                  this.setState({\r\n                    patientId: item.target.value.replace(/\\s/g, \"\")\r\n                  })\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  // console.log('------', e);\r\n                  if (e.keyCode === 13) {\r\n                    this._refresh()\r\n                  }\r\n                }}\r\n              />\r\n              <SyncOutlined className='refresh' onClick={this._refresh} spin={spin} />\r\n            </div>\r\n            <div className=\"emergency\"\r\n              style={{ marginTop: mTop(10) }}\r\n              onClick={() => {\r\n                this.setState({ leftStatus: 4, isEmergency: true })\r\n                this._getEmergencyHistory()\r\n              }}>\r\n              <div className=\"btn\"\r\n                style={{ width: px(180), height: px(40) }}\r\n              >\r\n                Emergency\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n      case 4: return (\r\n        <div className=\"l\">\r\n          <div className=\"petinfo\">\r\n            <div className=\"heard\"\r\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\r\n\r\n            >\r\n              {`Clinical Study Mode`}\r\n            </div>\r\n            <div className=\"emergencyText\">\r\n              <p style={{ fontSize: px(20), marginTop: mTop(10), margin: 0, padding: 0 }}>\r\n                You are in an emergency now,\r\n                you can click History in this mode to assign history records</p>\r\n\r\n            </div>\r\n            <div className=\"emergency\" onClick={() => {\r\n              this.setState({ leftStatus: 3, isEmergency: false, historyData: [] })\r\n\r\n            }}>\r\n              <div className=\"btn\"\r\n                style={{ width: px(180), height: px(40), fontSize: px(25) }}\r\n              >\r\n                Exit\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"history\">\r\n              <div className=\"heard1\"\r\n                style={{ height: mTop(40), marginTop: mTop(10) }}\r\n                onClick={() => { this.setState({ visible: true }) }}>\r\n                <span>Device Info</span>\r\n              </div>\r\n              <div className=\"historyBody\">\r\n                <div className=\"devices\">\r\n                  <p>Device:</p>\r\n                  <Select defaultValue=\"Mella-684h2\" style={{ width: 120 }} size={'small'}\r\n                  // onChange={handleChange}\r\n                  >\r\n                    <Option value=\"device1\">Mella-684h2</Option>\r\n                    <Option value=\"device2\">Mella-587j0</Option>\r\n                    <Option value=\"device3\">Mella-742k3</Option>\r\n                  </Select>\r\n                </div>\r\n                {this._mearsurePort()}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n      default: return null;\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  handleChange = index => {\r\n    console.log('---------', index);\r\n    this.setState({\r\n      furLength: index\r\n    })\r\n  };\r\n\r\n  handleChange1 = index => {\r\n    console.log('---------', index);\r\n    let bodyType = document.querySelectorAll('#_bodyType .ant-select-selector')\r\n    switch (`${index}`) {\r\n      case '1': bodyType[0].style.width = \"105px\"\r\n\r\n        break;\r\n      case '2': bodyType[0].style.width = \"130px\"\r\n\r\n        break;\r\n      case '3': bodyType[0].style.width = \"120px\"\r\n\r\n        break;\r\n\r\n      default: bodyType[0].style.width = \"105px\"\r\n        break;\r\n    }\r\n\r\n    // bodyType[0].style.width = \"120px\"\r\n    console.dir(bodyType)\r\n    this.setState({\r\n      bodyType: index\r\n    })\r\n  };\r\n\r\n  _foot = () => {\r\n    let lbgc = '', rbgc = ''\r\n    if (this.state.isPetCharacteristics) {\r\n      lbgc = 'rgba(25,173,228,0.5)'; rbgc = 'rgba(105,201,237,1)'\r\n    } else {\r\n      lbgc = 'rgba(105,201,237,1)'; rbgc = 'rgba(25,173,228,0.5)'\r\n    }\r\n    return (\r\n      <div className=\"clinical_foot\" >\r\n        <div className=\"top\"\r\n          style={{ height: '10%', }}\r\n        >\r\n\r\n          <div className=\"foot_l\" style={{ backgroundColor: lbgc }} onClick={() => this.setState({ isPetCharacteristics: true })}>\r\n            Pet Characteristics\r\n          </div>\r\n          <div className=\"foot_l\" style={{ backgroundColor: rbgc }} onClick={() => this.setState({ isPetCharacteristics: false })}>\r\n            History\r\n          </div>\r\n        </div>\r\n        {this.state.isPetCharacteristics ?\r\n          this._petCharacteristics() :\r\n          this._history()\r\n        }\r\n      </div >\r\n    )\r\n  }\r\n  _petCharacteristics = () => {\r\n\r\n    let { furLength, bodyType } = this.state\r\n    let placeholder = '', placeholder1 = ''\r\n    switch (`${furLength}`) {\r\n      case '1': placeholder = 'smooth'; break;\r\n      case '2': placeholder = 'short'; break;\r\n      case '3': placeholder = 'medium'; break;\r\n      case '4': placeholder = 'long'; break;\r\n      default: break;\r\n    }\r\n\r\n    switch (`${bodyType}`) {\r\n      case '1': placeholder1 = 'small'; break;\r\n      case '2': placeholder1 = 'barrel chested'; break;\r\n      case '3': placeholder1 = 'keel chested'; break;\r\n      default: break;\r\n    }\r\n    return (\r\n      <div className=\"petChaeacteristics\"\r\n        style={{ paddingLeft: px(10), paddingRight: px(10), height: '90%' }}\r\n      >\r\n        <div className=\"child\" style={{ marginTop: mTop(30), }}>\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n            <p style={{ width: '150px' }}>Room Temperature: </p>\r\n            <Input className='inp'\r\n              // style={{ border: 'none', outline: 'medium' }}\r\n              // style={{ width: px(105), height: mTop(33), fontSize: px(18), marginRight: px(6) }}\r\n\r\n              value={`${this.state.roomTemperature}`}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  roomTemperature: str\r\n                })\r\n              }}\r\n            />\r\n            <span style={{ position: 'absolute', top: \"5%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n            <p style={{ width: '150px' }}>Reference Rectal Temperature: </p>\r\n            <Input className='inp'\r\n              // style={{ border: 'none', outline: 'medium' }}\r\n\r\n              value={`${this.state.referenceRectalTemperature}`}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  referenceRectalTemperature: str\r\n                })\r\n              }}\r\n            />\r\n            <span style={{ position: 'absolute', top: \"10%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"child\">\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <p style={{ width: '150px' }}>Body Condition Score:  </p>\r\n            <Input className='inp'\r\n              style={{ border: 'none', outline: 'medium' }}\r\n\r\n              value={this.state.bodyConditionScore}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  bodyConditionScore: str\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className='furLength' >\r\n            <p style={{ width: '150px' }}>Fur Length: </p>\r\n            <Select\r\n              // showSearch\r\n              placeholder\r\n              onChange={this.handleChange}\r\n              style={{ width: '105px', borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n              value={placeholder}\r\n            >\r\n              <Option value=\"1\">smooth</Option>\r\n              <Option value=\"2\">short</Option>\r\n              <Option value=\"3\">medium</Option>\r\n              <Option value=\"4\">long</Option>\r\n            </Select>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"child\">\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\r\n            <p style={{ width: '150px' }}>Heart Rate:  </p>\r\n            <Input className='inp'\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              value={`${this.state.heartRate}`}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  heartRate: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\r\n          </div>\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\r\n            <p style={{ width: '150px' }}>Blood Pressure:  </p>\r\n            <Input className='inp'\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              value={this.state.bloodPressure}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  bloodPressure: str\r\n                })\r\n              }}\r\n            />\r\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>mm</span>\r\n          </div>\r\n\r\n        </div>\r\n        <div className=\"child\" style={{ marginBottom: px(40) }}>\r\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\r\n            <p style={{ width: '150px' }}>Respiratory Rate:  </p>\r\n            <Input className='inp'\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              value={`${this.state.respiratoryRate}`}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  respiratoryRate: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\r\n          </div>\r\n          <div className='furLength' id='_bodyType'  >\r\n            {/* <p style={{ width: '150px' }}>Body Type: </p>\r\n            <Select\r\n              // showSearch\r\n              placeholder\r\n              onChange={this.handleChange1}\r\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n              value={placeholder1}\r\n              dropdownMatchSelectWidth={120}\r\n\r\n            >\r\n              <Option value=\"1\">small</Option>\r\n              <Option value=\"2\">barrel chested</Option>\r\n              <Option value=\"3\">keel chested</Option>\r\n            </Select> */}\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"note\">\r\n          <p>Notes:</p>\r\n          <textarea\r\n            rows=\"2\"\r\n            cols=\"30\"\r\n            value={this.state.notes}\r\n            onChange={(val) => {\r\n              console.log(val);\r\n              this.setState({\r\n                notes: val.target.value\r\n              })\r\n            }}\r\n\r\n          >\r\n          </textarea>\r\n        </div> */}\r\n\r\n      </div>\r\n    )\r\n  }\r\n  _history = () => {\r\n\r\n    const _del = (key, record) => {\r\n      console.log('删除', key, record);\r\n\r\n\r\n      /**------------这里还要删除后台的数据------------ */\r\n      fetchRequest(`/pet/deletePetExamByExamId/${key}`, 'DELETE')\r\n        .then(res => {\r\n          if (res.flag === true) {\r\n            console.log('删除成功');\r\n            const historyData = [...this.state.historyData];\r\n            console.log(historyData);\r\n            this.setState({\r\n              historyData: historyData.filter((item) => item.historyId !== key)\r\n            });\r\n          } else {\r\n            console.log('删除失败');\r\n          }\r\n        })\r\n    }\r\n    const _edit = (key, record) => {\r\n      console.log('编辑', key, record);\r\n      let { heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature, bodyConditionScore, furLength, } = record\r\n      console.log('转换前：', heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature);\r\n      let editHeartRate = (heartRate !== null && heartRate !== undefined) ? heartRate : ''\r\n      let editBloodPressure = (bloodPressure !== null && bloodPressure !== undefined) ? bloodPressure : ''\r\n      let editRespiratoryRate = (respiratoryRate !== null && respiratoryRate !== undefined) ? respiratoryRate : ''\r\n      let editRectal = (referenceRectalTemperature !== null && referenceRectalTemperature !== undefined) ? (referenceRectalTemperature * 1.8 + 32).toFixed(1) : ''\r\n      let editRoomTemperature = (roomTemperature !== null && roomTemperature !== undefined) ? (roomTemperature * 1.8 + 32).toFixed(1) : ''\r\n      let editBodyConditionScore = (bodyConditionScore !== null && bodyConditionScore !== undefined) ? bodyConditionScore : ''\r\n      let editFurLength = furLength\r\n\r\n      console.log(editRectal,\r\n        editRoomTemperature,\r\n        editHeartRate,\r\n        editBloodPressure,\r\n        editRespiratoryRate);\r\n      this.setState({\r\n        editRectal,\r\n        editRoomTemperature,\r\n        editHeartRate,\r\n        editBloodPressure,\r\n        editRespiratoryRate,\r\n        editVisible: true,\r\n        editId: key,\r\n        memo: record.note,\r\n        editBodyConditionScore,\r\n        editFurLength\r\n      })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    const see = (id, record) => {\r\n      console.log(id, record);\r\n      this.setState({\r\n        tip: 'data is loading',\r\n        tipSpin: true\r\n      })\r\n\r\n      fetchRequest3(`/exam/getClinicalDataByExamId/${id}`, 'GET')\r\n        .then(res => {\r\n          console.log('此条记录的全部数据：', res);\r\n          this.setState({\r\n            tip: '',\r\n            tipSpin: false\r\n          })\r\n          if (res.flag) {\r\n            let datas = res.data.clinicalDataEntityList\r\n\r\n\r\n            if (datas) {\r\n\r\n              let echarsData = {\r\n                Eci: [],\r\n                wen0: [],\r\n                wen1: []\r\n              }\r\n              // let { echarsData } = this.state\r\n              let { wen0, wen1, Eci } = echarsData\r\n              for (let i = 0; i < datas.length; i++) {\r\n                let { data0, data1 } = datas[i]\r\n\r\n\r\n                Eci.push(i)\r\n                if (this.state.units === '℃') {\r\n                  wen0.push(data0)\r\n                  wen1.push(data1)\r\n\r\n                } else {\r\n                  wen0.push(data0 * 1.8 + 32)\r\n                  wen1.push(data1 * 1.8 + 32)\r\n                }\r\n\r\n              }\r\n              let Temp = datas[datas.length - 1].data0 || ''\r\n              console.log('----------------', Temp);\r\n              this.setState({\r\n                echarsData,\r\n                Temp,\r\n                showHistoryEchart: true\r\n              }, () => {\r\n                const option = this.getOption();\r\n                this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\r\n              })\r\n            }\r\n\r\n          }\r\n        })\r\n        .catch(err => {\r\n          this.setState({\r\n            tip: '',\r\n            tipSpin: false\r\n          })\r\n          console.log(err);\r\n        })\r\n    }\r\n    const isflog = window.screen.height < 1000 ? true : false\r\n\r\n    const columns = [\r\n      {\r\n        title: '',\r\n        dataIndex: 'operation',\r\n        key: 'operation',\r\n        width: '16%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n          // console.log('狩猎:', text, record, index);\r\n          //record:\r\n          return (\r\n            <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', padding: `${px(18)}px 0` }} >\r\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\r\n                <img src={del} alt=\"\" style={{ width: px(25) }} />\r\n              </Popconfirm>\r\n              {\r\n                (this.state.isEmergency) ? (\r\n                  <div className=\"assign\"\r\n                    style={{ width: mTop(60), height: mTop(28), fontSize: px(14) }}\r\n\r\n                    onClick={() => {\r\n                      console.log(text, record, index);\r\n                      this.setState({\r\n                        visible: true,\r\n                        seleceEmergencies: record\r\n                      })\r\n                    }}>Assign</div>\r\n                ) : (\r\n                  <>\r\n                    <img src={edit} alt=\"\" style={{ width: px(25) }}\r\n                      onClick={() => _edit(record.historyId, record)}\r\n                    />\r\n\r\n                    <img src={start} alt=\"\" style={{ width: px(25) }}\r\n                      onClick={() => see(record.historyId, record)}\r\n                    />\r\n\r\n                    {/* <div\r\n                      onClick={() => see(record.historyId, record)}\r\n                      className='see'\r\n                      style={{ width: px(25), height: px(25) }}\r\n                    >\r\n                      <MyIcon type={'icon-mimaxiaoyanjing-copy'} className=\"icon \" style={{ color: '#fff', fontSize: px(13) }} />\r\n                    </div> */}\r\n                  </>\r\n                )\r\n              }\r\n\r\n\r\n            </div>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Date',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        width: '14%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ textAlign: 'center' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Time',\r\n        dataIndex: 'time',\r\n        key: 'time',\r\n        width: '14%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ textAlign: 'center' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: `Temp(${this.state.units})`,\r\n        // title: `Temp(℉)`,\r\n        key: 'temp',\r\n        dataIndex: 'temp',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        width: '14%',\r\n        render: (text, record, index) => {\r\n          // console.log(text, record);\r\n\r\n          /**\r\n          * bag：温度数值前的圆圈的背景颜色\r\n          * tem：展示的温度\r\n          * endvalue:将从后台得到的数据全部转化成华氏度\r\n          * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n          * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\r\n          * \r\n          */\r\n\r\n\r\n          let bag = '', tem = ''\r\n\r\n          let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\r\n          let min = 100.4, max = 102.56\r\n\r\n\r\n\r\n\r\n\r\n\r\n          if (endValue > max) {\r\n            bag = '#E1206D'\r\n          } else if (endValue < min) {\r\n            bag = '#98DA86'\r\n          } else {\r\n            bag = '#58BDE6'\r\n          }\r\n\r\n          if (this.state.units === '℃') {\r\n            if (text) {\r\n              tem = `${text}${this.state.units}`\r\n              if (text > 55) {\r\n\r\n                tem = `${((text - 32) / 1.8).toFixed(1)}${this.state.units}`\r\n              }\r\n            }\r\n          } else {\r\n            if (text) {\r\n              if (text > 55) {\r\n                tem = `${text}${this.state.units}`\r\n              } else {\r\n                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\r\n              }\r\n\r\n            }\r\n          }\r\n          return (\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n              {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\r\n              <p style={{ margin: 0, padding: 0 }}>{tem}</p>\r\n            </div>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: `Rectal Temperature`,\r\n        key: 'referenceRectalTemperature',\r\n        dataIndex: 'referenceRectalTemperature',\r\n        width: '15%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n          // console.log('肛温的值：', text);\r\n          let num = text\r\n          if (text !== null) {\r\n            num = (text * 1.8 + 32).toFixed(1)\r\n          }\r\n\r\n          return (\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n              {text !== null && <p style={{ margin: 0, padding: 0 }}>{num} <span>{'℉'}</span></p>}\r\n\r\n            </div>\r\n          )\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Placement',\r\n        dataIndex: 'placement',\r\n        key: 'placement',\r\n        align: 'center',\r\n        width: '15%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n          switch (record.placement) {\r\n            case 1: return (    //腋温\r\n              <div>\r\n                <img src={palcement_ye} alt=\"\" />\r\n              </div>\r\n            )\r\n            case 3: return (     //肛温\r\n              <div>\r\n                <img src={placement_gang} alt=\"\" />\r\n              </div>\r\n            )\r\n            case 2: return (     //肛温\r\n              <div>\r\n                <img src={placement_gang} alt=\"\" />\r\n              </div>\r\n            )\r\n            case 4: return (    //耳温\r\n              <div>\r\n                <img src={placement_er} alt=\"\" />\r\n              </div>\r\n            )\r\n            default: return null;\r\n          }\r\n\r\n        }\r\n      },\r\n      {\r\n        title: 'Note',\r\n        dataIndex: 'note',\r\n        key: 'note',\r\n        width: '12%',\r\n        className: `${isflog ? 'operation' : ''}`,\r\n        render: (text, record, index) => {\r\n\r\n          return (\r\n            <p style={{ width: '70px' }}>{text}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n    ];\r\n\r\n\r\n\r\n    let hisHe = mTop(200)\r\n    try {\r\n      let historyElement = document.querySelectorAll('#clinicalMeasure11 .historyTable')\r\n      hisHe = historyElement[0].clientHeight - mTop(100)\r\n    } catch (error) {\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div className='historyTable' style={{ height: '90%' }}>\r\n        <Table\r\n          columns={columns}\r\n          loading={this.state.loading}\r\n          dataSource={this.state.historyData}\r\n          rowKey={columns => columns.historyId}\r\n          // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\r\n          pagination={false}\r\n          scroll={{\r\n            y: hisHe\r\n          }}\r\n        />\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n\r\n  _status = () => {\r\n    let { closeColor, closebgc, minbgc, units, isMeasure, Temp, measuerStatus, isconnected, showHistoryEchart } = this.state\r\n    let text = '', unit = '', temColor = ''\r\n\r\n    Temp = parseFloat(Temp)\r\n\r\n    if (isconnected === false) {\r\n      if (!showHistoryEchart) {\r\n        Temp = ''\r\n        text = 'disconnected'\r\n        temColor = '#3B3A3A'\r\n      } else {\r\n        text = 'disconnected'\r\n        temColor = '#3B3A3A'\r\n      }\r\n\r\n    } else {\r\n      text = 'connected'\r\n      temColor = '#3B3A3A'\r\n      if (Temp > 15) {\r\n        unit = units\r\n        if (Temp > 39) {\r\n          text = 'High'\r\n          temColor = '#E1206D'\r\n        } else if (Temp < 31) {\r\n          text = 'Low'\r\n          temColor = '#47C2ED'\r\n        } else {\r\n          text = 'Normal'\r\n          temColor = '#78D35D'\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n    let temp = ''\r\n\r\n    if (`${Temp}` !== 'NaN' && Temp !== '') {\r\n      temp = units === '℉' ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1)\r\n    }\r\n    let lowFlog = false\r\n    if (unit === '℃') {\r\n      if (temp < 24.8) {\r\n        lowFlog = true\r\n      }\r\n    } else {\r\n      if (temp < 76.6) {\r\n        lowFlog = true\r\n      }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div className='Tem' style={{ color: temColor, right: px(30), bottom: mTop(120) }}>\r\n\r\n        {(!isMeasure) ? (\r\n          showHistoryEchart ? <>\r\n            <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{units}</sup></span><br />\r\n            {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\r\n\r\n            <span style={{ fontSize: px(22), color: '#8a8a8a' }}>{`History`}</span>\r\n          </> :\r\n\r\n            <>\r\n              <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\r\n              <span style={{ fontSize: px(22) }}>{text}</span>\r\n            </>\r\n        ) : (\r\n          lowFlog ? (\r\n            <>\r\n              <span style={{ fontSize: px(36) }}>{'Low'}</span><br />\r\n\r\n            </>\r\n          ) : (\r\n            <>\r\n              <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\r\n\r\n            </>\r\n          )\r\n\r\n        )}\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  _modal = () => {\r\n    let that = this\r\n\r\n    function save () {\r\n\r\n\r\n      switch (storage.identity) {\r\n        case '1':\r\n          console.log('我是vetspire查找');\r\n\r\n          break;\r\n\r\n        case '2':\r\n          console.log('我是ezyVet查找');\r\n          let params = {\r\n            animalId: that.state.emerPatientID,\r\n            organizationId: 4\r\n          }\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach(key =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId'\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          console.log('ezyVet集成查找宠物入参-请求地址', params, url);\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              'authorization': `Bearer ${storage.ezyVetToken}`,\r\n            }\r\n          }).then((response) => response.json())\r\n            .then((res) => {\r\n              console.log('res', res);\r\n              this.setState({\r\n                spin: false\r\n              })\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  })\r\n                }\r\n\r\n\r\n                console.log(petArr);\r\n\r\n                let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr\r\n                assign(petId)\r\n\r\n              } else {\r\n                //没有宠物\r\n                message.error('There are no pets under this patientID')\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error('There are no pets under this patientID')\r\n            });\r\n\r\n          break;\r\n\r\n        case '3':\r\n          console.log('我是一般医生查找');\r\n          let datas = {\r\n            patientId: that.state.emerPatientID,\r\n            doctorId: storage.userId,\r\n          }\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId\r\n          }\r\n          console.log('入参：', datas);\r\n          fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n            .then(res => {\r\n\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? -1 : -1;\r\n                  })\r\n                }\r\n\r\n                console.log(petArr);\r\n\r\n                let { petId, } = petArr[0]\r\n                assign(petId)\r\n              } else {\r\n\r\n                message.error('There are no pets under this patientID')\r\n              }\r\n            })\r\n            .catch(err => {\r\n              message.error('There are no pets under this patientID')\r\n              console.log(err);\r\n            })\r\n          break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n\r\n      const assign = (petId) => {\r\n        let parmes = {\r\n          petId,\r\n          clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId\r\n        }\r\n        fetchRequest(`/pet/addAndSavePetExam/${that.state.seleceEmergencies.historyId}`, 'POST', parmes)\r\n          .then(res => {\r\n            console.log('----------', res);\r\n            if (res.flag === true) {\r\n              console.log('分配成功');\r\n              message.success('Assigned successfully')\r\n              that._getEmergencyHistory()\r\n              that.setState({\r\n                visible: false,\r\n                emerPatientID: ''\r\n              })\r\n            } else {\r\n              message.success('Assignment failed')\r\n            }\r\n\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            message.success('Assignment failed')\r\n          })\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    let { disabled, bounds, visible } = this.state\r\n    return (\r\n      <Modal\r\n        title={\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              cursor: 'move',\r\n              height: '20px',\r\n              textAlign: 'center'\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          >\r\n            Distribute the history of emergencies\r\n          </div>\r\n        }\r\n        visible={visible}\r\n        // visible={true}\r\n        onOk={this.handleOk}\r\n        onCancel={this.handleCancel}\r\n\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={\r\n          [] // 设置footer为空，去掉 取消 确定默认按钮\r\n        }\r\n        destroyOnClose={true}\r\n      >\r\n        <div id=\"selectEmergenciesModal\">\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '80px' }}>Patient ID</p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              value={this.state.emerPatientID}\r\n              bordered={false}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  emerPatientID: item.target.value.replace(/\\s/g, \"\")\r\n                })\r\n              }}\r\n              onKeyDown={(e) => {\r\n                // console.log('------', e);\r\n                if (e.keyCode === 13) {\r\n                  save()\r\n                }\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"btn\" onClick={save}>Save</div>\r\n        </div>\r\n\r\n      </Modal>\r\n\r\n    )\r\n\r\n  }\r\n\r\n  _editModal = () => {\r\n    let that = this\r\n\r\n    function save () {\r\n      let { editBodyConditionScore, editFurLength, editHeartRate, editBloodPressure, editRespiratoryRate } = that.state\r\n      let datas = {\r\n        memo: that.state.memo,\r\n        bodyConditionScore: parseInt(editBodyConditionScore),\r\n        furLength: parseInt(editFurLength),\r\n        heartRate: editHeartRate,\r\n        bloodPressure: editBloodPressure,\r\n        respiratoryRate: editRespiratoryRate\r\n        // roomTemperature: that.state.editRoomTemperature,\r\n        // referenceRectalTemperature: that.state.editRectal\r\n      }\r\n      if (that.state.editRoomTemperature) {\r\n        datas.roomTemperature = ((parseFloat(that.state.editRoomTemperature) - 32) / 1.8).toFixed(2)\r\n      }\r\n      if (that.state.editRectal) {\r\n        datas.referenceRectalTemperature = ((parseFloat(that.state.editRectal) - 32) / 1.8).toFixed(2)\r\n      }\r\n\r\n      console.log('入参：', datas, that.state.editId);\r\n      that.setState({\r\n        editVisible: false,\r\n        tip: 'Data is being modified',\r\n        tipSpin: true,\r\n\r\n      })\r\n      fetchRequest(`/pet/updatePetExam/${that.state.editId}`, 'POST', datas)\r\n        .then(res => {\r\n          console.log(res);\r\n          that.setState({\r\n\r\n            tip: '',\r\n            tipSpin: false\r\n          })\r\n          message.success('Data modified successfully')\r\n\r\n          that._getHistory11(that.state.selectPet.petId)\r\n        })\r\n        .catch(err => {\r\n          that.setState({\r\n            spin: false,\r\n            tip: '',\r\n            tipSpin: false\r\n          })\r\n          message.success(' Data modification failed')\r\n\r\n          console.log(err);\r\n        })\r\n\r\n    }\r\n\r\n\r\n    let { disabled, bounds, editVisible, editFurLength } = this.state\r\n    let furLength = ''\r\n    if (editFurLength !== null && editFurLength !== undefined) {\r\n      switch (`${editFurLength}`) {\r\n        case '1': furLength = 'smooth'; break;\r\n        case '2': furLength = 'short'; break;\r\n        case '3': furLength = 'medium'; break;\r\n        case '4': furLength = 'long'; break;\r\n\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        title={\r\n          <div\r\n            style={{\r\n              width: '100%',\r\n              cursor: 'move',\r\n              height: '20px',\r\n              textAlign: 'center'\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          >\r\n            Modification history information\r\n          </div>\r\n        }\r\n        visible={editVisible}\r\n        // visible={true}\r\n        onCancel={() => { that.setState({ editVisible: false, }); }}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={\r\n          [] // 设置footer为空，去掉 取消 确定默认按钮\r\n        }\r\n        destroyOnClose={true}\r\n      >\r\n        <div id=\"selectEmergenciesModal\">\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Room Temperature </p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editRoomTemperature}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  editRoomTemperature: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>℉</span>\r\n          </div>\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Rectal Temperature</p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editRectal}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\r\n                this.setState({\r\n                  editRectal: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>℉</span>\r\n          </div>\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Body Condition Score</p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editBodyConditionScore}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d]/g, '')\r\n                this.setState({\r\n                  editBodyConditionScore: str\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className='bodyType11' >\r\n            <p style={{ width: '140px' }}>Fur Length: </p>\r\n            <Select\r\n              placeholder\r\n              onChange={(index) => {\r\n                console.log(index);\r\n                this.setState({\r\n                  editFurLength: index\r\n                })\r\n              }}\r\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n              value={furLength}\r\n            >\r\n              <Option value=\"1\">smooth</Option>\r\n              <Option value=\"2\">short</Option>\r\n              <Option value=\"3\">medium</Option>\r\n              <Option value=\"4\">long</Option>\r\n            </Select>\r\n          </div>\r\n\r\n\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Heart Rate: </p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editHeartRate}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d]/g, '')\r\n\r\n                this.setState({\r\n                  editHeartRate: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>bpm</span>\r\n          </div>\r\n\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Blood Pressure </p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editBloodPressure}\r\n              onChange={(item) => {\r\n                this.setState({\r\n                  editBloodPressure: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>mm</span>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '140px' }}>Respiratory Rate: </p>\r\n            <Input\r\n              style={{ border: 'none', outline: 'medium' }}\r\n              bordered={false}\r\n              value={this.state.editRespiratoryRate}\r\n              onChange={(item) => {\r\n                let str = item.target.value.replace(/[^\\d]/g, '')\r\n\r\n                this.setState({\r\n                  editRespiratoryRate: str\r\n                })\r\n              }}\r\n\r\n            />\r\n            <span>bpm</span>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          {/* <div className='bodyType11' >\r\n            <p style={{ width: '140px' }}>Body Type: </p>\r\n            <Select\r\n              // showSearch\r\n              placeholder\r\n              onChange={this.handleChange1}\r\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\r\n              // value={placeholder1}\r\n              dropdownMatchSelectWidth={120}\r\n\r\n            >\r\n              <Option value=\"1\">small</Option>\r\n              <Option value=\"2\">barrel chested</Option>\r\n              <Option value=\"3\">keel chested</Option>\r\n            </Select>\r\n          </div> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <div className=\"selectEmergenciesModal\">\r\n            <p style={{ width: '80px' }}>Notes</p>\r\n            <textarea\r\n              rows=\"2\"\r\n              cols=\"40\"\r\n              style={{ textIndent: '10px' }}\r\n              value={that.state.memo}\r\n              onChange={(val) => {\r\n                that.setState({\r\n                  memo: val.target.value\r\n                })\r\n              }}\r\n\r\n            >\r\n            </textarea>\r\n          </div>\r\n\r\n          <div className=\"btn\" onClick={save}>Save</div>\r\n        </div>\r\n\r\n      </Modal>\r\n\r\n\r\n\r\n    )\r\n\r\n  }\r\n\r\n  render () {\r\n    console.log('-----', this.state.Temp);\r\n    return (\r\n      <div id=\"clinicalMeasure11\">\r\n        <div style={{ height: '60%' }}>\r\n\r\n          <div className=\"heard\">\r\n            <Heard\r\n              onSearch={(data) => {\r\n                console.log(data);\r\n                this.setState({\r\n                  patientId: data.patientId\r\n                }, () => {\r\n                  this._getPetInfo()\r\n                })\r\n              }}\r\n              menu9Click={() => {\r\n                storage.measurepatientId = this.state.patientId;\r\n              }}\r\n              menu8Click={() => {\r\n                switch (storage.identity) {   //1是vetspire   2是ezyvet   3是医生\r\n                  case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n                    break;\r\n                  case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                    break;\r\n\r\n                  case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                    break;\r\n                  default:\r\n                    break;\r\n                }\r\n              }}\r\n\r\n              onReturn={() => {\r\n                this.props.history.goBack()\r\n              }}\r\n\r\n\r\n            />\r\n          </div>\r\n\r\n\r\n          {/* 宠物信息与折线图部分 */}\r\n          <div className='clinical_top'\r\n          // style={{ height: mTop(480) }}\r\n          >\r\n            {this._topLeft()}\r\n            <div className=\"r\" >\r\n              {!this.state.isconnected && <div className=\"bb1\"\r\n                style={{ left: px(150) }}\r\n              >\r\n                <div className=\"btn78\"\r\n                  style={{ width: px(220), height: mTop(30), fontSize: px(16) }}\r\n                  onClick={() => {\r\n                    console.log('点击了切换按钮');\r\n\r\n                    if (resyncDeviceIsClick === true) {\r\n                      resyncDeviceIsClick = false\r\n                      console.log('发送给主进程切换按钮');\r\n                      ipcRenderer.send('qiehuan')\r\n                      // ipcRenderer.send('getSerialPort')\r\n                      const time = setTimeout(() => {\r\n                        resyncDeviceIsClick = true\r\n                        clearTimeout(time)\r\n                      }, 2500)\r\n                    }\r\n\r\n\r\n\r\n                  }}\r\n                >Re-sync Base</div>\r\n              </div>}\r\n\r\n\r\n              <div id='myCharts'\r\n                style={{ marginTop: mTop(50) }}\r\n\r\n              >\r\n                <ReactECharts\r\n\r\n                  option={this.getOption()} theme=\"Imooc\" style={{ height: mTop(430), }}\r\n                  notMerge={true}\r\n                  lazyUpdate={true}\r\n                  // theme={\"theme_name\"}\r\n                  ref={(e) => { this.echartsElement = e }}\r\n                />\r\n              </div>\r\n\r\n              {this._status()}\r\n              {/* {this._mearsurePort()} */}\r\n              <div className=\"time\"\r\n                style={{ bottom: mTop(20), left: px(70) }}\r\n              >\r\n                {(this.state.isconnected) ? (<p style={{ fontSize: px(25) }}>{`Measurement Timer  ${this.state.countdown} s`}</p>) : null}\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n        {/* 底部宠物信息 */}\r\n        {this._foot()}\r\n        {this._modal()}\r\n        {this._editModal()}\r\n\r\n\r\n        <Modal\r\n\r\n          visible={this.state.err07Visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          closable={false}\r\n          footer={[\r\n\r\n          ]}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"vetPrifileModal\"\r\n        >\r\n          <div id='vetPrifileModal'>\r\n            <div className=\"title\">prompt\r\n            </div>\r\n\r\n            <div className='text'>Please re-plug the base device</div>\r\n\r\n\r\n            <div className=\"btn\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '5px' }}>\r\n\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    err07Visible: false,\r\n                  })\r\n                  num07 = 0\r\n\r\n                }}\r\n              >OK</button>\r\n\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </Modal>\r\n\r\n        {\r\n          this.state.tipSpin &&\r\n          // true &&\r\n          <div className=\"modal\">\r\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n\r\n\r\n            </div>\r\n            <p>\r\n              data is loading...\r\n            </p>\r\n          </div>\r\n        }\r\n        <MyModal\r\n          visible={this.state.tempHeight}\r\n          element={\r\n            <div className=\"tempHeight\">\r\n              <div className=\"tempHeightImg\">\r\n                <img src={redjinggao} alt=\"\" style={{ width: px(60), }} />\r\n              </div>\r\n              <div className=\"tempText\" style={{ fontSize: px(24), marginBottom: px(60) }}>If the initial temperature reading is too high, the measurement may be inaccurate. Consider letting the thermometer cool down to 85°F and try again</div>\r\n\r\n              <div className=\"tempBtn flex\" style={{ height: px(45), fontSize: px(24), marginBottom: px(20) }}\r\n                onClick={() => { this.setState({ tempHeight: false }) }}\r\n              >\r\n                OK\r\n              </div>\r\n\r\n              <div className=\"close\" style={{ top: px(20), right: px(20) }}\r\n                onClick={() => { this.setState({ tempHeight: false }) }}\r\n              >\r\n                <img src={close} alt=\"\" style={{ width: px(30) }} />\r\n              </div>\r\n\r\n\r\n            </div>\r\n          }\r\n        />\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx",["444"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx",["445","446"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx",["447","448","449","450","451"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\advancedSettings\\AdvancedSettings.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx",["452","453","454","455","456","457","458","459","460","461","462","463"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Switch,\r\n  Select,\r\n} from 'antd'\r\n\r\n\r\n\r\n\r\nimport Heart from '../../../utils/heard/Heard'\r\nimport Slider from '../../../utils/slider/Slider'\r\nimport Button from '../../../utils/button/Button'\r\nimport electronStore from '../../../utils/electronStore'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport { mTop, px } from '../../../utils/px';\r\nimport MyModal from '../../../utils/myModal/MyModal'\r\nimport parent from './../../../assets/img/parent.png'\r\nimport dog from '../../../assets/images/reddog.png'\r\nimport cat from '../../../assets/images/redcat.png'\r\nimport other from '../../../assets/images/redother.png'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport moment from 'moment'\r\nimport './petAndParents.less'\r\nimport { parseGeoJSON } from 'echarts'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class PetAndParents extends Component {\r\n\r\n  state = {\r\n    parentList: [],       //宠物主人列表\r\n    petList: [],          //宠物列表\r\n    loading: false,       //加载中\r\n    parentSearchArr: [],  //搜索后的宠物主人列表\r\n    petSearchArr: [],     //搜索后的宠物列表\r\n    searchText: '',        //搜索文本\r\n    parentAndPetList: [],  //宠物主人下的所有宠物,\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    this._getExam()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true,\r\n      spin: false\r\n    })\r\n    let params = {\r\n      offset: 0,\r\n      size: 500,\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n\r\n    fetchRequest(`/petall/pet/${storage.lastOrganization}/petall`, 'POST', params)\r\n      .then(res => {\r\n        console.log('查询到的宠物列表', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true) {\r\n          let data = []\r\n          let list = res.data.list\r\n          let owerList = []\r\n          let parentAndPetList = []\r\n          for (let i = 0; i < list.length; i++) {\r\n            let { url, patientId, speciesId, petName, petId, rfid, createTime, userId, firstName, lastName, phone, email, userImageUrl, birthday, breedName, gender } = list[i]\r\n            petName = petName ? petName : (patientId ? patientId : 'unknown')\r\n            let json = {\r\n              insertedAt: createTime,\r\n              name: petName,\r\n              petId,\r\n              rfid,\r\n              url,\r\n              speciesId,\r\n              type: 'pet',\r\n              patientId,\r\n              petBirthday: birthday,\r\n              breedName,\r\n              gender\r\n            }\r\n            data.push(json)\r\n            if (userId) {\r\n              let flogNum = -1\r\n\r\n              for (let i = 0; i < owerList.length; i++) {\r\n                let ower = owerList[i]\r\n                if (ower.userId === userId) {\r\n                  flogNum = i\r\n                  break;\r\n                }\r\n\r\n              }\r\n              if (flogNum === -1) {     //这是一个不在数组里的宠物主人\r\n                let owerJson = {\r\n                  userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\r\n                }\r\n                owerList.push(owerJson)\r\n                let parentAndPetJson = {\r\n                  parent: owerJson,\r\n                  pets: [json]\r\n                }\r\n                // console.log('-----', parentAndPetJson);\r\n                parentAndPetList.push(parentAndPetJson)\r\n              } else {\r\n                parentAndPetList[flogNum].pets.push(json)\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            // if (userId) {\r\n            //   let sameFlog = owerList.some((ower => {\r\n            //     return ower.userId === userId\r\n            //   }))\r\n            //   if (!sameFlog) {\r\n            //     let owerJson = {\r\n            //       userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\r\n            //     }\r\n            //     owerList.push(owerJson)\r\n            //   }\r\n            // }\r\n          }\r\n          // console.log(parentAndPetList);\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            petList: data,\r\n            parentList: owerList,\r\n            parentAndPetList\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  list = (value) => {\r\n    let { petList, parentList, petSearchArr, parentSearchArr, searchText, parentAndPetList } = this.state\r\n    let data = []\r\n    if (value === 'parent') {\r\n      if (searchText.length > 0) {\r\n        data = parentSearchArr\r\n      } else {\r\n        data = parentList\r\n      }\r\n    } else {\r\n      if (searchText.length > 0) {\r\n        data = petSearchArr\r\n      } else {\r\n        data = petList\r\n      }\r\n    }\r\n\r\n    let options = data.map((item, index) => {\r\n      let { speciesId, url, userImageUrl, patientId, petId, name } = item\r\n      let images = null\r\n      if (value === 'parent') {\r\n        images = `url(${userImageUrl}?download=0&width=150)`\r\n        if (!userImageUrl) {\r\n          images = `url(${parent})`\r\n        }\r\n      } else {\r\n        images = `url(${url}?download=0&width=150)`\r\n        if (!url) {\r\n          switch (speciesId) {\r\n            case 1: images = `url(${cat})`\r\n              break;\r\n            case 2: images = `url(${dog})`\r\n              break\r\n            default: images = `url(${other})`\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20) }}\r\n          onClick={() => {\r\n            if (item.type !== 'pet') {\r\n              // console.log('跳转到宠物用户详情页', item,);\r\n              let params = []\r\n              for (let i = 0; i < parentAndPetList.length; i++) {\r\n                if (item.userId === parentAndPetList[i].parent.userId) {\r\n\r\n                  params = parentAndPetList[i]\r\n                  break\r\n                }\r\n\r\n              }\r\n\r\n\r\n              this.props.history.push({ pathname: '/menuOptions/editParent', parent: params })\r\n            } else {\r\n              console.log(item);\r\n              this.props.history.push({ pathname: '/page9', participate: { patientId, petName: name, petId } })\r\n\r\n            }\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div\r\n              className='img'\r\n              style={{\r\n                width: px(50),\r\n                height: px(50),\r\n                marginRight: px(20),\r\n                borderRadius: px(60),\r\n                backgroundImage: images,\r\n              }}>\r\n            </div>\r\n\r\n            <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{name}</p>\r\n            </div>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    let liStyle = { backgroundColor: '#fff', }\r\n    if (this.state.petList.length > 6) {\r\n      liStyle = { height: px(560), overflowY: 'auto' }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='petList'>\r\n        <ul style={liStyle}>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  inputChange = (text) => {\r\n    let search = text.target.value\r\n    this.setState({\r\n      searchText: search\r\n    })\r\n\r\n    let { parentList, petList } = this.state\r\n    console.log(parentList, petList);\r\n    let keyWord = search\r\n\r\n    let parentSearchData = []\r\n    for (let i = 0; i < parentList.length; i++) {\r\n      let petName = parentList[i].name.toLowerCase() || ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        parentSearchData.push(parentList[i])\r\n      }\r\n    }\r\n\r\n    let petSearchData = []\r\n    for (let i = 0; i < petList.length; i++) {\r\n      let petName = petList[i].name ? petList[i].name.toLowerCase() : ''\r\n      let patientId = petList[i].patientId ? petList[i].patientId.toLowerCase() : ''\r\n      let rfid = petList[i].rfid ? petList[i].rfid : ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${rfid}`.indexOf(keyWord) !== -1\r\n      ) {\r\n        petSearchData.push(petList[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      petSearchArr: petSearchData,\r\n      parentSearchArr: parentSearchData\r\n    })\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    let bodyHeight = '92%'\r\n    try {\r\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\r\n    } catch (error) {\r\n\r\n    }\r\n    return (\r\n      <div id=\"PetAndParents\">\r\n        <div className=\"heard\">\r\n          <Heart\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n            onSearch={(data) => {\r\n\r\n              storage.doctorExam = JSON.stringify(data)\r\n\r\n              storage.doctorList = JSON.stringify(this.state.data)\r\n              if (storage.isClinical === 'true') {\r\n                this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\r\n              } else {\r\n                this.props.history.push({ pathname: '/page10', })\r\n              }\r\n            }}\r\n            menu8Click={() => {\r\n              console.log('--', storage.identity, storage.doctorList);\r\n              switch (storage.identity) {\r\n                case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n                case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n                  break;\r\n                case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\r\n          <h1 style={{ fontSize: px(38) }}>{`Pet & Parents Profile Management`}</h1>\r\n          <div className=\"search\">\r\n            <div className=\"searchL\">\r\n              <input\r\n                type=\"text\"\r\n                style={{ paddingLeft: px(25), height: px(34) }}\r\n                placeholder=\"&#xe62c; Search \"\r\n                value={this.state.searchText}\r\n                onChange={(text) => {\r\n                  this.inputChange(text)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\r\n              Search\r\n            </div>\r\n          </div>\r\n          <div className=\"btns\">\r\n            <div className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}>\r\n              + New Parent\r\n            </div>\r\n            <div\r\n              className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}\r\n              onClick={() => {\r\n                this.props.history.push('/pet/doctorAddPet')\r\n              }}\r\n\r\n            >\r\n              + New Pet\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"lists\">\r\n            <div className=\"listsL\">\r\n              {this.list('parent')}\r\n            </div>\r\n\r\n            <div className=\"listsL\">\r\n              {this.list('pet')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <MyModal visible={this.state.loading} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx",["464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485"],"import React, { Component } from 'react'\r\nimport { Input, Button, Menu, message, Select, Calendar, Col, Row, Spin } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../../utils/FetchUtil1'\r\nimport dog from './../../../assets/images/reddog.png'\r\nimport cat from './../../../assets/images/redcat.png'\r\nimport other from '../../../assets/images/redother.png'\r\nimport horse from './../../../assets/images/horse.png'\r\nimport rabbit from './../../../assets/images/rabbit.png'\r\n// import selectphoto from './../../../assets/images/img.png'\r\nimport selectphoto from './../../../assets/images/sel.png'\r\nimport dui from './../../../assets/images/dui.png'\r\nimport female from './../../../assets/images/female.png'\r\nimport male from './../../../assets/images/male.png'\r\nimport './editParent.less'\r\nimport { mTop, px } from '../../../utils/px';\r\nimport Avatar from './../../avatar/Avatar'\r\nimport MyModal from '../../../utils/myModal/MyModal';\r\nimport Heard from '../../../utils/heard/Heard';\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class EditParent extends Component {\r\n  state = {\r\n\r\n    lastName: '',       //宠物主人性\r\n    firstName: '',      //宠物主人名\r\n    email: '',          //邮箱号\r\n    phone: '',          //电话号码\r\n    spin: false,        //加载中\r\n    imageId: null,      //图片的ID值\r\n    petList: [],         //当前这个宠物主人下的所有宠物\r\n    userId: '',          //当前这个宠物主人的userId\r\n\r\n    userImageUrl: '',\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    console.log(this.props.history.location.parent);\r\n\r\n    if (this.props.history.location.parent) { //接受入参\r\n      let { parent, pets } = this.props.history.location.parent\r\n      let { firstName, lastName, userId } = parent\r\n      this._getParent(userId)\r\n\r\n      this.setState({\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        petList: pets\r\n\r\n\r\n      })\r\n\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _getParent = (data) => {\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    fetchRequest(`/user/getUserInfoByUserId/${data}`, \"GET\", '')\r\n      .then(res => {\r\n        console.log('获取到了用户信息', res);\r\n        if (res.msg === 'success') {\r\n          let { firstName, phone, lastName, email, imageId, url, userImage } = res.data\r\n          let userImageUrl = res.data.userImage ? res.data.userImage.url : null\r\n          firstName = firstName ? firstName : ''\r\n          phone = phone ? phone : ''\r\n          email = email ? email : ''\r\n          lastName = lastName ? lastName : ''\r\n\r\n\r\n          this.setState({\r\n            userImageUrl,\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            email,\r\n            imageId,\r\n            spin: false\r\n\r\n          })\r\n        } else {\r\n          this.setState({\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n\r\n  _petSpecies = () => {\r\n    let { userImageUrl } = this.state\r\n    this.avatar = userImageUrl ? userImageUrl : selectphoto\r\n    let { firstName, lastName } = this.state\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>First Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  firstName: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Last Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  lastName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _petName = () => {\r\n    let { email, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  petList = () => {\r\n\r\n    let { petList } = this.state\r\n    console.log(petList);\r\n    let options = petList.map((item, index) => {\r\n      let { speciesId, url, breedName, petBirthday, gender, name, } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n\r\n      let petAge = moment(new Date()).diff(moment(petBirthday), 'years')\r\n\r\n      if (!url) {\r\n\r\n        switch (speciesId) {\r\n          case 1: images = `url(${cat})`\r\n\r\n            break;\r\n          case 2: images = `url(${dog})`\r\n            break\r\n          default: images = `url(${other})`\r\n            break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `  0 0 ${px(15)}px 0`, }}\r\n          onClick={() => {\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div className=\"itemL\">\r\n              <div\r\n                className='img'\r\n                style={{\r\n                  width: px(50),\r\n                  height: px(50),\r\n                  marginRight: px(20),\r\n                  borderRadius: px(60),\r\n                  backgroundImage: images,\r\n                }}>\r\n              </div>\r\n              <a\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  console.log(item);\r\n                }}\r\n              >{name}</a>\r\n            </div>\r\n            <div className=\"itemC\">\r\n              <p>{`${petAge} years old, ${gender === 0 ? 'Male' : 'Female'}`}</p>\r\n            </div>\r\n            <div className=\"itemR\">\r\n              <p>{`${breedName}`}</p>\r\n            </div>\r\n\r\n\r\n            {/* <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div> */}\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n\r\n\r\n    let liStyle = { backgroundColor: '#fff', marginTop: px(15) }\r\n    if (petList.length > 3) {\r\n      liStyle = { height: px(305), overflowY: 'auto', marginTop: px(15) }\r\n    }\r\n\r\n    return (\r\n      <ul style={liStyle}>\r\n        {options}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"editParent\">\r\n\r\n        <div className=\"heard\">\r\n          <Heard\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"editPetInfo_top\" >\r\n          <div className=\"parentInfo\">\r\n            <div className=\"title\" >{`Parent Information`}</div>\r\n            <div className=\"info\">\r\n              {this._petSpecies()}\r\n              {this._petName()}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"pets\">\r\n            <div className=\"petsTitle\">\r\n              <h2 style={{ fontSize: px(24), marginRight: px(40) }}>Pets</h2>\r\n              <div className=\"btn\" style={{ fontSize: px(22) }}>+ Add New Pet</div>\r\n            </div>\r\n            <div className=\"petList\">\r\n              {this.petList()}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"editPetInfo_foot\"  >\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              let { firstName, lastName, email, phone, imageId, userId } = this.state\r\n              console.log({ firstName, lastName, email, phone, imageId });\r\n              let parames = {\r\n                userId,\r\n                email,\r\n                phone,\r\n                firstName,\r\n                lastName,\r\n                imageId\r\n              }\r\n              this.setState({\r\n                spin: true\r\n              })\r\n              message.destroy()\r\n              console.log('修改的宠物信息:', parames);\r\n              fetchRequest('/user/updateUserInfo', 'POST', parames,)\r\n                .then(res => {\r\n                  console.log('保存所有信息', res);\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  if (res.flag === true) {\r\n                    this.props.history.goBack()\r\n                  } else {\r\n                    message.error('fail to edit')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  message.error('fail to edit')\r\n                  console.log(err);\r\n                })\r\n\r\n            }}\r\n\r\n          >Edit Profile</div>\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              this.props.history.goBack()\r\n            }}\r\n\r\n          >OK</div>\r\n\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n      </div >\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx",["486","487","488","489","490","491","492","493","494","495"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx",["496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx",["514","515","516","517","518","519","520","521","522","523"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Heard from \"../../utils/heard/Heard\";\r\nimport { mTop, px, pX, win, timerFun } from \"../../utils/px\";\r\nimport HardAndPetsUI from \"./HardAndPetsUI\";\r\nimport HardWareTypeUI from \"./hardWareTypeUI\";\r\nimport TemperaturePage from \"../../pages/temperaturePage\";\r\nimport {\r\n  setHardwareList,\r\n  selectHardwareModalShowFun,\r\n  setIsHaveUsbDeviceFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n  setMellaDeviceIdFun,\r\n  setMellaMeasureNumFun,\r\n\r\n  setBiggieConnectStatusFun,\r\n  setBiggieBodyFatFun,\r\n  setBiggieBodyWeightFun,\r\n  setBiggieUnitFun,\r\n  setBiggieSameWeightCountFun,\r\n  setRulerConnectStatusFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConfirmCountFun,\r\n  setReceiveBroadcastHardwareInfoFun,\r\n\r\n} from '../../store/actions';\r\nimport './mainbody.less'\r\nimport { message } from 'antd';\r\nimport electronStore from '../../utils/electronStore';\r\nimport AddDevice from './AddDevice';\r\nimport BiggiePage from '../../pages/biggiePage';\r\nimport ScanPage from '../../pages/scanPage'\r\nimport { compareObject } from '../../utils/current';\r\nimport { compareArray } from '../../utils/current';\r\nimport AllPets from '../../pages/allPetsPage';\r\nimport ScheduledPetPage from '../../pages/scheduledPetsPage';\r\nimport AddScheduledPet from '../../pages/addScheduledPet';\r\nimport ClininalStudy from '../../pages/clinicalStudyPage';\r\n\r\nlet ipcRenderer = window.require('electron').ipcRenderer\r\nlet isMeasure = false //是否正在测量,用于判断是否需要发送指定指令给USB,查看硬件是否连接\r\nlet initTime = 0 //初始化时间,用来计算底座没有回应温度计的时间差,如果时间差大于6秒代表断开连接\r\nlet num07 = 0       //接收到07命令行的次数,次数大于3跳出弹框\r\nlet firstEar = true  //为true代表一组数据测量完成,下组测量数据\r\nlet is97Time = null //为了防抖，因为有时候断开连接和连接成功总是连续的跳出来，展示就会一直闪烁，因此引入时间差大于800ms才展示\r\n\r\n//用于预测的东西\r\nlet clinicalYuce = [],\r\n  clinicalIndex = 0;\r\n\r\nlet storage = window.localStorage;\r\nclass App extends Component {\r\n  state = {\r\n    //body部分窗口高度\r\n    bodyHeight: 0,\r\n    //本地保存的硬件类型数组,不包括Add这个类型\r\n    devicesTypeList: [],\r\n    //展示硬件类型的数组\r\n    showHardWareTypeList: [],\r\n    //是否有USB设备\r\n    isHaveUsbDevice: true,\r\n    //mella温度计测量状态\r\n    mellaMeasureStatus: \"disconnected\", //connected,disconnected,isMeasuring,complete\r\n\r\n    //点击菜单的序号\r\n    clickMenuIndex: \"1\",\r\n  };\r\n  componentDidMount () {\r\n    ipcRenderer.send(\"big\", win());\r\n    timerFun();\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n    //获取窗口高度\r\n    this.resize();\r\n    //react监听屏幕窗口改变\r\n    window.addEventListener(\"resize\", this.resize);\r\n\r\n    //获取设备类型\r\n    this.getDevicesType();\r\n\r\n    //检测USB设备发来的信息\r\n    ipcRenderer.on(\"sned\", this._send);\r\n    //检测是否有USB设备\r\n    ipcRenderer.on(\"noUSB\", this._noUSB);\r\n    //定时查看mella温度计是否与底座连接或断开\r\n    this._whether_to_connect_to_mella();\r\n  }\r\n  componentWillUnmount () {\r\n    //组件销毁，取消监听\r\n    window.removeEventListener('resize', this.resize)\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n    ipcRenderer.removeListener('sned', this._send)\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    this.detectTimer && clearInterval(this.detectTimer)\r\n  }\r\n  //检测到props里的hardwareList更新\r\n  UNSAFE_componentWillReceiveProps (prevProps) {\r\n    //对比props里的hardwareList和state里的hardwareList是否相同\r\n\r\n    if (!compareArray(prevProps.hardwareList, this.state.devicesTypeList)) {\r\n      let showHardWareTypeList = [].concat(prevProps.hardwareList);\r\n      showHardWareTypeList.push({\r\n        type: \"add\",\r\n        devices: [],\r\n      });\r\n      this.setState({\r\n        devicesTypeList: prevProps.hardwareList,\r\n        showHardWareTypeList,\r\n      });\r\n    }\r\n    if (!compareObject(prevProps.menuNum, this.state.clickMenuIndex)) {\r\n      this.setState({\r\n        clickMenuIndex: prevProps.menuNum,\r\n      });\r\n    }\r\n  }\r\n\r\n  changeFenBianLv = (e) => {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    // ipcRenderer.send('small')\r\n    ipcRenderer.send(\"big\", win());\r\n    this.setState({});\r\n  };\r\n  //检测USB设备发来的信息\r\n  _send = (e, data) => {\r\n    // console.log('检测USB设备发来的信息', data)\r\n    //data就是测量的数据，是十进制的数字\r\n    this.command(data)();\r\n  };\r\n  //监听是否有USB设备,true代表没有USB设备，false代表有USB设备\r\n  _noUSB = (e, data) => {\r\n    console.log(\"监听是否有USB设备\", data);\r\n    if (data === this.props.isHaveUsbDevice) {\r\n      this.props.setIsHaveUsbDeviceFun(!data);\r\n    }\r\n    if (data === this.state.isHaveUsbDevice) {\r\n      this.setState({\r\n        isHaveUsbDevice: !data,\r\n      });\r\n    }\r\n  };\r\n  //监听mella温度计是否与底座连接或断开\r\n  _whether_to_connect_to_mella = () => {\r\n    console.log('监听mella温度计是否与底座连接或断开',);\r\n    message.destroy()\r\n    this.detectTimer && clearInterval(this.detectTimer)\r\n    //2秒检测一次\r\n    this.detectTimer = setInterval(() => {\r\n      //如果正在测量或者没有USB设备，不检测\r\n      if (isMeasure || !this.state.isHaveUsbDevice) {\r\n        return;\r\n      }\r\n\r\n      //让底座发送查询温度计信息指令\r\n      ipcRenderer.send(\"usbdata\", { command: \"07\", arr: [\"5A\"] });\r\n      //如果底座没有回应，则计算时间差,时间差大于5秒，则没与温度计连接\r\n      if (new Date() - initTime > 6000) {\r\n        this._disconnect_to_mella();\r\n      } else {\r\n      }\r\n    }, 2000);\r\n  };\r\n  //底座与温度计断开连接\r\n  _disconnect_to_mella = () => {\r\n    let { setMellaConnectStatusFun, mellaConnectStatus, setMellaDeviceIdFun } =\r\n      this.props;\r\n    if (mellaConnectStatus !== \"disconnected\") {\r\n      setMellaConnectStatusFun(\"disconnected\");\r\n    }\r\n    setMellaDeviceIdFun(\"\");\r\n  };\r\n  //底座与温度计连接\r\n  _connect_to_mella = () => {\r\n    let { setMellaConnectStatusFun, mellaConnectStatus } = this.props;\r\n    if (mellaConnectStatus !== \"connected\") {\r\n      setMellaConnectStatusFun(\"connected\");\r\n    }\r\n  };\r\n\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  command = (newArr) => {\r\n    let dataArr1 = newArr.map((item) => {\r\n      if (item.toString(16).length < 2) {\r\n        return \"0\" + item.toString(16);\r\n      } else {\r\n        return item.toString(16);\r\n      }\r\n    });\r\n    //除了255,其他都是温度计的数据\r\n    let {\r\n      setMellaConnectStatusFun,\r\n      setMellaMeasureValueFun,\r\n      setMellaPredictValueFun,\r\n      setMellaMeasurePartFun,\r\n      mellaMeasurePart,\r\n      mellaConnectStatus,\r\n      setBiggieBodyFatFun,\r\n      setBiggieBodyWeightFun,\r\n      setBiggieConnectStatusFun,\r\n      setBiggieUnitFun,\r\n      setBiggieSameWeightCountFun,\r\n    } = this.props;\r\n    let {\r\n      biggieConnectStatus,\r\n      biggieBodyFat,\r\n      biggieBodyWeight,\r\n      biggieUnit,\r\n      biggieSameWeightCount,\r\n    } = this.props.hardwareReduce;\r\n\r\n    const instruction = [\r\n      209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 194, 7, 99, 255, 182,\r\n    ];\r\n\r\n    if (newArr[2] !== 7 && newArr[2] !== 255 && newArr[2] !== 182) {\r\n      initTime = new Date();\r\n      num07 = 0;\r\n      if (mellaConnectStatus === \"disconnected\") {\r\n        this._connect_to_mella();\r\n      }\r\n    } else {\r\n      num07++;\r\n    }\r\n\r\n    const commandArr = {\r\n      209: () => {\r\n        //腋温\r\n        //第一次测量去获取探头ID\r\n        if (firstEar) {\r\n          firstEar = false;\r\n          console.log(\"去获取探头id\");\r\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\r\n          //重新测量,清空预测值\r\n          clinicalYuce = [];\r\n          clinicalIndex = 0;\r\n        }\r\n        let temp1 = parseFloat(`${dataArr1[3]}.${dataArr1[4]}`);\r\n        let temp0 = parseFloat(`${dataArr1[5]}.${dataArr1[6]}`);\r\n        let Temp = temp0;\r\n        if (\r\n          Temp === 24.7 ||\r\n          Temp === 0 ||\r\n          Temp === null ||\r\n          Temp === undefined\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        let dataS = {\r\n          sample: clinicalIndex++,\r\n          data0: temp0,\r\n          data1: temp1,\r\n        };\r\n        clinicalYuce.push(dataS);\r\n        if (clinicalYuce.length >= 30) {\r\n          setMellaPredictValueFun(clinicalYuce);\r\n        }\r\n        setMellaMeasureValueFun(Temp);\r\n        if (mellaConnectStatus !== \"isMeasuring\") {\r\n          setMellaConnectStatusFun(\"isMeasuring\");\r\n        }\r\n\r\n        if (mellaMeasurePart !== \"腋温\" || mellaMeasurePart !== \"肛温\") {\r\n          setMellaMeasurePartFun(\"腋温\");\r\n        }\r\n        this.props.setMellaMeasureNumFun(this.props.mellaMeasureNum + 1)\r\n\r\n\r\n\r\n\r\n      },\r\n      208: () => {\r\n        //耳温\r\n\r\n        if (firstEar) {\r\n          firstEar = false;\r\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\r\n          //重新测量,清空预测值\r\n          clinicalYuce = [];\r\n          clinicalIndex = 0;\r\n        }\r\n        //现在探头0可能不存在，所以把探头0改为探头1\r\n        let temp0 = parseFloat(`${dataArr1[7]}.${dataArr1[8]}`);\r\n        let Temp = temp0;\r\n        setMellaMeasureValueFun(Temp);\r\n        if (mellaConnectStatus !== \"isMeasuring\") {\r\n          setMellaConnectStatusFun(\"isMeasuring\");\r\n        }\r\n\r\n        if (mellaMeasurePart !== \"耳温\") {\r\n          setMellaMeasurePartFun(\"耳温\");\r\n        }\r\n      },\r\n      193: () => {\r\n        //指令结束\\自动结束后\\温度计收到预测数据后温度计返回值,结束后可能还会粘一组测量中的数据\r\n        //为了清除黏贴的数据，使用定时器\r\n        this.time193 && clearTimeout(this.time193);\r\n        this.time193 = setTimeout(() => {\r\n          firstEar = true;\r\n          if (mellaConnectStatus !== \"complete\") {\r\n            setMellaConnectStatusFun(\"complete\");\r\n          }\r\n\r\n          let { units } = this.state;\r\n          let Temp = this.props.mellaMeasureValue;\r\n          let temp =\r\n            units === \"℉\"\r\n              ? parseInt((Temp * 1.8 + 32) * 10) / 10\r\n              : Temp.toFixed(1);\r\n          // if (this.state.devicesType === 'mella') {\r\n          //   ipcRenderer.send('keyboardWriting', temp)\r\n          // }\r\n          this.time193 && clearTimeout(this.time193);\r\n        }, 1000);\r\n      },\r\n      194: () => {\r\n        //硬件收到机器学习结果并停止测量，\r\n        if (mellaConnectStatus !== \"complete\") {\r\n          setMellaConnectStatusFun(\"complete\");\r\n        }\r\n        clinicalYuce = [];\r\n        clinicalIndex = 0;\r\n      },\r\n      192: () => {\r\n        //温度计收到40开始数据后返回的指令\r\n        switch (newArr[3]) {\r\n          case 90:\r\n            console.log(\"有探头，开始测量的返回指令·\");\r\n            break;\r\n          case 11:\r\n            console.log(\"没有探头，开始测量的返回值\");\r\n            break;\r\n        }\r\n      },\r\n      129: () => {\r\n        //返回硬件版本号\r\n        console.log(`返回的版本号为${newArr[3]}`);\r\n      },\r\n      135: () => {\r\n        //硬件的一些基本信息\r\n        /**\r\n         * ______________新版、旧版没法控制温度计__________________\r\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\r\n         * newArr[7] 无操作关机时间\r\n         * newArr[8] 背光时间\r\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\r\n         * newArr[10] 测量单位    01代表℃，00代表℉\r\n         */\r\n\r\n        let hardSet = electronStore.get(\"hardwareConfiguration\") || {};\r\n\r\n        let beep = hardSet.isBeep ? \"11\" : \"00\";\r\n        let unit = hardSet.isHua ? \"00\" : \"01\";\r\n\r\n        // if (dataArr1[7] === hardSet.autoOff.number && dataArr1[8] === hardSet.backlightTimer.number &&\r\n        //   dataArr1[9] === beep && dataArr1[10] === unit) {\r\n        // } else {\r\n        //   console.log('不相同，去发送命令');\r\n        //   let setArr = ['03', 'ed', '07', 'dd', hardSet.autoOff.number, hardSet.isBacklight ? hardSet.backlightTimer.number : '00', hardSet.isBeep ? '11' : '00', hardSet.isHua ? '00' : '01']\r\n        //   ipcRenderer.send('usbdata', { command: '21', arr: setArr })\r\n        // }\r\n      },\r\n      238: () => {\r\n        //探头松动\r\n        console.log(\"探头松动\");\r\n        message.error(\r\n          \"The probe is loose, please re-install and measure again\",\r\n          5\r\n        );\r\n      },\r\n\r\n      98: () => {\r\n        //蓝牙连接断开\r\n        console.log(\r\n          \"断开连接---断开连接---断开连接---断开连接---断开连接---断开连接\"\r\n        );\r\n        firstEar = true;\r\n        console.log(new Date() - is97Time);\r\n        if (new Date() - is97Time < 1000) {\r\n          return;\r\n        }\r\n        this._disconnect_to_mella();\r\n      },\r\n      97: () => {\r\n        //蓝牙连接\r\n        console.log(\r\n          \"连接成功---连接成功---连接成功---连接成功---连接成功---连接成功\"\r\n        );\r\n\r\n        is97Time = new Date();\r\n        this._connect_to_mella();\r\n      },\r\n      177: () => {\r\n        //探头id\r\n        let dataArr1 = newArr.map((item) => {\r\n          if (item.toString(16).length < 2) {\r\n            return \"0\" + item.toString(16);\r\n          } else {\r\n            return item.toString(16);\r\n          }\r\n        });\r\n\r\n        let id = \"\";\r\n        for (let i = 3; i < dataArr1.length - 2; i++) {\r\n          id += dataArr1[i];\r\n        }\r\n        console.log(id, dataArr1[7]);\r\n        setMellaDeviceIdFun(id);\r\n        // this.setState({\r\n        //   probeID: id,\r\n        //   petVitalTypeId: dataArr1[7]\r\n        // })\r\n        if (dataArr1[7] === \"01\") {\r\n          if (mellaMeasurePart !== \"腋温\") {\r\n            setMellaMeasurePartFun(\"腋温\");\r\n          }\r\n        } else if (dataArr1[7] === \"02\") {\r\n          if (mellaMeasurePart !== \"肛温\") {\r\n            setMellaMeasurePartFun(\"肛温\");\r\n          }\r\n        } else if (dataArr1[7] === \"03\") {\r\n          if (mellaMeasurePart !== \"耳温\") {\r\n            setMellaMeasurePartFun(\"耳温\");\r\n          }\r\n        }\r\n      },\r\n      7: () => {\r\n        //发什么收什么，需要去重新插拔底座\r\n        console.log(\"重新插拔底座\");\r\n        if (num07 === 3 && this.state.err07Visible === false) {\r\n          this.setState({\r\n            err07Visible: true,\r\n          });\r\n        }\r\n      },\r\n      // 255: () => {\r\n\r\n      // }\r\n      255: () => {\r\n\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n        let bluName = ''\r\n        let bluData = []\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5]);\r\n          }\r\n          // console.log('--剪切的数据---', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              let str = \"\";\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                let item = parseInt(itemData[i], 16);\r\n                str += String.fromCharCode(item);\r\n              }\r\n              bluName = str;\r\n              // console.log('--蓝牙名称:', bluName);\r\n\r\n              break;\r\n\r\n            case 255:\r\n              bluData = itemData;\r\n              break;\r\n            case 7:\r\n              console.log(\"---UUID\");\r\n              break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              break;\r\n\r\n            case 3:\r\n              // console.log('----尺子的,不知道什么用');\r\n              break;\r\n\r\n            default:\r\n              console.log(\"直接跳出循环\");\r\n              return;\r\n          }\r\n          dataIndex = itemLength;\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\r\n        }\r\n        // console.log('硬件名称', bluName, '-----硬件数据', bluData);\r\n        let { setReceiveBroadcastHardwareInfoFun, hardwareReduce } = this.props\r\n\r\n        let { receiveBroadcastHardwareInfo } = hardwareReduce\r\n\r\n        if (bluName.indexOf(\"C19\") !== -1 && bluData.length > 10) {\r\n          let json = {\r\n            deviceType: \"biggie\",\r\n            macId: \"00:00:00:00:00:00\",\r\n            name: bluName,\r\n          };\r\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\r\n            setReceiveBroadcastHardwareInfoFun(json);\r\n          }\r\n\r\n          let weight = `0x${bluData[10]}${bluData[11]}`;\r\n          let impedance = `0x${bluData[12]}${bluData[13]}`;\r\n          let sendWeight = null;\r\n          //C19发送的体重值单位只是KG\r\n          try {\r\n            weight = parseInt(weight) / 100;\r\n            if (impedance) {\r\n              impedance = parseInt(impedance);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n          if (weight === biggieBodyWeight) {\r\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\r\n          } else {\r\n            setBiggieSameWeightCountFun(0);\r\n            setBiggieBodyWeightFun(weight);\r\n          }\r\n          if (impedance) {\r\n            setBiggieBodyFatFun(impedance);\r\n          }\r\n          if (biggieConnectStatus !== \"connected\") {\r\n            setBiggieConnectStatusFun(\"connected\");\r\n          }\r\n          if (biggieUnit !== \"kg\") {\r\n            setBiggieUnitFun(\"kg\");\r\n          }\r\n        } else if (bluName.indexOf(\"Mella Measure\") !== -1) {\r\n          let {\r\n            hardwareReduce,\r\n            setRulerConfirmCountFun,\r\n            setRulerConnectStatusFun,\r\n            setRulerMeasureValueFun,\r\n            setRulerUnitFun,\r\n          } = this.props;\r\n          let {\r\n            rulerConnectStatus,\r\n            rulerMeasureValue,\r\n            rulerUnit,\r\n            rulerConfirmCount,\r\n            receiveBroadcastHardwareInfo,\r\n          } = hardwareReduce;\r\n          // console.log('结束循环蓝牙名称', bluData)\r\n          let confirmBtn = bluData[8]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\r\n          let rulerUnitNum = parseInt(bluData[11], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\r\n          let newVal = null; //为测量数值，和单位匹配对应\r\n          const ITEMINDEX = 6;\r\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\r\n          let mac = bluData[1];\r\n          for (let i = 2; i <= 6; i++) {\r\n            mac += `:${bluData[i]}`;\r\n          }\r\n          let json = {\r\n            deviceType: \"tape\",\r\n            macId: mac,\r\n            name: bluName,\r\n          };\r\n\r\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\r\n            setReceiveBroadcastHardwareInfoFun(json);\r\n          }\r\n\r\n          if (units !== rulerUnit) {\r\n            setRulerUnitFun(units);\r\n          }\r\n          if (rulerConnectStatus !== \"isMeasuring\") {\r\n            setRulerConnectStatusFun(\"isMeasuring\");\r\n          }\r\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\r\n          let num1 = bluData[9];\r\n          let num2 = bluData[10];\r\n          let num = getVal(num1, num2);\r\n          try {\r\n            newVal = parseFloat(num);\r\n            if (rulerUnitNum === 17) {\r\n              newVal = newVal.toFixed(2);\r\n            } else {\r\n              newVal = newVal.toFixed(1);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n\r\n          function getVal (shi, xiaoshuo) {\r\n            let num1 = parseInt(shi, 16);\r\n            let num2 = parseInt(xiaoshuo, 16);\r\n            return `${num1}.${num2}`;\r\n          }\r\n          if (newVal !== rulerMeasureValue) {\r\n            setRulerMeasureValueFun(newVal);\r\n          }\r\n\r\n          //点击了确认按钮\r\n\r\n          if (\r\n            confirmBtn[1] === \"2\" &&\r\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\r\n            confirmBtn[0] !== null\r\n          ) {\r\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\r\n          }\r\n        } else if (bluName.indexOf(\"Biggie\") !== -1 && bluData.length > 10) {\r\n          function getVal (shi) {\r\n            if (`${shi}`.length < 2) {\r\n              return `0${shi}`;\r\n            }\r\n            return `${shi}`;\r\n          }\r\n\r\n          let newArr = bluData;\r\n\r\n          let mac = bluData[1];\r\n          for (let i = 2; i <= 6; i++) {\r\n            mac += `:${bluData[i]}`;\r\n          }\r\n\r\n          let json = {\r\n            deviceType: \"biggie\",\r\n            macId: mac,\r\n            name: bluName,\r\n          };\r\n\r\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\r\n            setReceiveBroadcastHardwareInfoFun(json);\r\n          }\r\n          //定义体重的控制字符\r\n          let weightControl = newArr[8];\r\n          //定义体重的值\r\n          let weight = `${getVal(newArr[9].toString(16))}${getVal(\r\n            newArr[10].toString(16)\r\n          )}`;\r\n          weight = parseInt(weight, 16);\r\n          //定义体脂值\r\n          let impedance = `${getVal(newArr[12].toString(16))}${getVal(\r\n            newArr[13].toString(16)\r\n          )}`;\r\n          impedance = parseInt(impedance, 16);\r\n          let arr11 = getVal(newArr[11].toString(16));\r\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\r\n\r\n          let weightUnits = arr11[1] === \"1\" ? \"lb\" : \"kg\";\r\n          let biggieStatus = \"isMeasuring\";\r\n          switch (weightControl) {\r\n            case 1:\r\n              biggieStatus = \"connected\";\r\n              break;\r\n            case 2:\r\n              biggieStatus = \"isMeasuring\";\r\n              break;\r\n            case 3:\r\n              biggieStatus = \"complete\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          if (biggieStatus !== biggieConnectStatus) {\r\n            setBiggieConnectStatusFun(biggieStatus);\r\n          }\r\n          if (weightUnits !== biggieUnit) {\r\n            setBiggieUnitFun(weightUnits);\r\n          }\r\n          if (weight !== biggieBodyWeight) {\r\n            setBiggieBodyWeightFun(weight);\r\n            setBiggieSameWeightCountFun(0);\r\n          } else {\r\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\r\n          }\r\n          if (impedance !== biggieBodyFat) {\r\n            setBiggieBodyFatFun(impedance);\r\n          }\r\n        }\r\n      },\r\n      182: () => {\r\n        console.log(\"打开了底座通信\");\r\n      },\r\n    };\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]];\r\n    } else {\r\n      return () => {\r\n        console.log(\"没有控制命令\", commandArr);\r\n      };\r\n    }\r\n  };\r\n\r\n  testCheck = (arr) => {\r\n    if (arr.length < 7) {\r\n      return false;\r\n    }\r\n    let i = 7;\r\n    let checkFloag = arr[i];\r\n\r\n    for (i = 8; i < arr.length - 2; i++) {\r\n      checkFloag = checkFloag ^ arr[i];\r\n    }\r\n    return checkFloag;\r\n  };\r\n  getMac = (arr) => {\r\n    // console.log(arr);\r\n    let str = arr[1].toString(16);\r\n    if (str.length === 1) {\r\n      str = \"0\" + str;\r\n    }\r\n    for (let i = 2; i < 7; i++) {\r\n      let item = arr[i].toString(16);\r\n      if (item.length === 1) {\r\n        item = \"0\" + item;\r\n      }\r\n      str += `:${item}`;\r\n      // }\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n  //监听屏幕窗口改变\r\n  resize = () => {\r\n    let { offsetWidth, offsetHeight } = this.mainbody;\r\n    // console.log('resize', this.mainbody, { offsetWidth, offsetHeight });\r\n    if (offsetHeight !== this.state.bodyHeight) {\r\n      this.setState({\r\n        bodyHeight: offsetHeight - px(50),\r\n      });\r\n    }\r\n  };\r\n  //获取设备类型\r\n  getDevicesType = () => {\r\n    // let devicesTypeList = [\r\n    //   {\r\n    //     type: 'mellaPro',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'mellaPro',\r\n    //         mac: '',\r\n    //         deviceType: 'mellaPro',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'biggie',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'biggie',\r\n    //         mac: '',\r\n    //         deviceType: 'biggie',\r\n    //         examRoom: '',\r\n    //       },\r\n    //       {\r\n    //         name: 'biggie002',\r\n    //         mac: '1253',\r\n    //         deviceType: 'biggie',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'otterEQ',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'otterEQ',\r\n    //         mac: '',\r\n    //         deviceType: 'otterEQ',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n\r\n    //   {\r\n    //     type: 'rfid',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'rfid',\r\n    //         mac: '',\r\n    //         deviceType: 'rfid',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'tape',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'tape',\r\n    //         mac: '',\r\n    //         deviceType: 'tape',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'maeBowl',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'maeBowl',\r\n    //         mac: '',\r\n    //         deviceType: 'maeBowl',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   }\r\n    // ]\r\n\r\n    let devicesTypeList =\r\n      electronStore.get(\r\n        `${storage.lastOrganization}-${storage.userId}-devicesTypeList`\r\n      ) || [];\r\n    console.log(\"获取的设22222备列表\", devicesTypeList);\r\n    if (devicesTypeList.length === 0) {\r\n      devicesTypeList.push({\r\n        type: \"mellaPro\",\r\n        devices: [\r\n          {\r\n            name: \"mellaPro\",\r\n            mac: \"\",\r\n            deviceType: \"mellaPro\",\r\n            examRoom: \"\",\r\n          },\r\n        ],\r\n      });\r\n      devicesTypeList.push({\r\n        type: \"biggie\",\r\n        devices: [\r\n          {\r\n            name: \"biggie\",\r\n            mac: \"\",\r\n            deviceType: \"biggie\",\r\n            examRoom: \"\",\r\n          },\r\n          {\r\n            name: \"biggie002\",\r\n            mac: \"1253\",\r\n            deviceType: \"biggie\",\r\n            examRoom: \"\",\r\n          },\r\n        ],\r\n      });\r\n      devicesTypeList.push({\r\n        type: \"tape\",\r\n        devices: [\r\n          {\r\n            name: \"tape\",\r\n            mac: \"45264\",\r\n            deviceType: \"tape\",\r\n            examRoom: \"\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n\r\n    let hardList = [].concat(devicesTypeList);\r\n    this.props.setHardwareList(hardList);\r\n    let showHardWareTypeList = [].concat(devicesTypeList);\r\n    showHardWareTypeList.push({\r\n      type: \"add\",\r\n      devices: [],\r\n    });\r\n\r\n    this.setState({\r\n      devicesTypeList,\r\n      showHardWareTypeList,\r\n    });\r\n  };\r\n  body = () => {\r\n    let { selectHardwareType } = this.props;\r\n\r\n    let { bodyHeight, clickMenuIndex } = this.state;\r\n    let measurePage = null;\r\n    switch (clickMenuIndex) {\r\n      case \"1\":\r\n        switch (selectHardwareType) {\r\n          case \"mellaPro\":\r\n            measurePage = <TemperaturePage />;\r\n\r\n            break;\r\n          case \"biggie\":\r\n            measurePage = <BiggiePage />;\r\n            break;\r\n\r\n          case \"tape\":\r\n            measurePage = <ScanPage />;\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n        if (selectHardwareType === \"add\") {\r\n          return <AddDevice bodyHeight={bodyHeight} />;\r\n        } else {\r\n          return (\r\n            <>\r\n              <HardAndPetsUI bodyHeight={bodyHeight} />\r\n              {measurePage}\r\n            </>\r\n          );\r\n        }\r\n        break;\r\n\r\n      case \"2\":\r\n        return <AllPets bodyHeight={bodyHeight} />;\r\n\r\n      case \"3\":\r\n        return <ScheduledPetPage bodyHeight={bodyHeight} />;\r\n\r\n      case \"AddScheduledPet\":\r\n        return <AddScheduledPet bodyHeight={bodyHeight} />\r\n      case \"6\":\r\n        return <>\r\n          <HardAndPetsUI\r\n            bodyHeight={bodyHeight}\r\n          />\r\n          <ClininalStudy bodyHeight={bodyHeight} />\r\n        </>\r\n\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render () {\r\n    let { bodyHeight } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"flex\"\r\n        id=\"mainbody\"\r\n        ref={(val) => (this.mainbody = val)}\r\n        onClick={() => {\r\n          if (this.props.selectHardwareModalShowFun) {\r\n            this.props.selectHardwareModalShowFun(false);\r\n          }\r\n        }}\r\n      >\r\n        <Heard />\r\n        <div className=\"mainbody-body\">\r\n          <HardWareTypeUI\r\n            bodyHeight={bodyHeight}\r\n            devicesTypeList={this.state.showHardWareTypeList}\r\n          />\r\n          {this.body()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({\r\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\r\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\r\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\r\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\r\n    mellaMeasurePart: state.hardwareReduce.mellaMeasurePart,\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    hardwareReduce: state.hardwareReduce,\r\n    hardwareList: state.hardwareReduce.hardwareList,\r\n    menuNum: state.userReduce.menuNum,\r\n  }),\r\n  {\r\n    setHardwareList,\r\n    selectHardwareModalShowFun,\r\n    setIsHaveUsbDeviceFun,\r\n\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n    setMellaDeviceIdFun,\r\n    setBiggieConnectStatusFun,\r\n    setBiggieBodyFatFun,\r\n    setBiggieBodyWeightFun,\r\n    setBiggieUnitFun,\r\n    setBiggieSameWeightCountFun,\r\n    setRulerConnectStatusFun,\r\n    setRulerMeasureValueFun,\r\n    setRulerUnitFun,\r\n    setRulerConfirmCountFun,\r\n    setReceiveBroadcastHardwareInfoFun,\r\n    setMellaMeasureNumFun\r\n\r\n\r\n  }\r\n)(App);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx",["524","525"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js",["526","527"],"\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { px, mTop } from './../px'\r\nimport './mouseDiv.less'\r\n\r\n/**\r\n * \r\n * @param {string} minHeight 最小化、最大化方块的宽高 \r\n * @param {number} imgWidth 最小化、最大化图片的高度 \r\n * @returns  封装了最小化和关闭按钮，有鼠标移入、移出的动画\r\n */\r\nconst MinClose = ({ minHeight, beforeDiv, afterDiv, divClick }) => {\r\n  const [minbgc, setMinbgc] = useState('')\r\n  const [rMin, setRMin] = useState(beforeDiv)\r\n\r\n  const minMouseEnter = () => {\r\n    setMinbgc('rgba(70, 70, 70, 0.5)')\r\n    setRMin(afterDiv)\r\n  }\r\n  const minMouseLeave = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n  }\r\n  const minClock = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n    divClick()\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div id='mouseDiv'>\r\n      <div\r\n        className='min_icon'\r\n        onClick={minClock}\r\n        style={{ backgroundColor: minbgc, height: minHeight, width: minHeight }}\r\n        onMouseEnter={minMouseEnter}\r\n        onMouseLeave={minMouseLeave}\r\n      >\r\n        {rMin}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nMinClose.propTypes = {\r\n  minHeight: PropTypes.string,\r\n  imgWidth: PropTypes.number,\r\n  divClick: PropTypes.func,\r\n  afterDiv: PropTypes.func,\r\n  beforeDiv: PropTypes.func,\r\n\r\n\r\n}\r\nMinClose.defaultProps = {\r\n  minHeight: '40px',\r\n  imgWidth: px(20)\r\n\r\n}\r\n\r\nexport default MinClose","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil5.js",["528","529","530","531"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx",["532"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\hardwareAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["573","574","575","576","577","578","579","580","581"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["582","583","584","585","586","587"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615"],"import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Progress,\r\n  Space,\r\n  Table,\r\n  Tag,\r\n  Badge,\r\n  Modal,\r\n  Popconfirm,\r\n  message,\r\n} from \"antd\";\r\nimport measuredTable_1 from \"./../../assets/img/measuredTable_1.png\";\r\nimport measuredTable_2 from \"./../../assets/img/measuredTable_2.png\";\r\nimport measuredTable_3 from \"./../../assets/img/measuredTable_3.png\";\r\nimport EditCircle from \"./../../assets/img/EditCircle.png\";\r\nimport Delete from \"./../../assets/img/Delete.png\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n} from \"../../store/actions\";\r\nimport Draggable from \"react-draggable\";\r\nimport { fetchRequest } from \"../../utils/FetchUtil1\";\r\nimport { px, mTop } from \"../../utils/px\";\r\nimport moment from \"moment\";\r\nimport \"./index.less\";\r\n\r\nconst HistoryTable = ({\r\n  petMessage,\r\n  hardwareMessage,\r\n  setMellaConnectStatusFun,\r\n  saveNum = 0,\r\n}) => {\r\n  let { mellaMeasureValue, mellaConnectStatus, mellaMeasurePart } =\r\n    hardwareMessage;\r\n  let { petId, memo } = petMessage;\r\n  let storage = window.localStorage;\r\n  const [petTemperatureData, setPetTemperatureData] = useState([]); //存储宠物历史温度数据\r\n  const [disabled, setDisabled] = useState(true); //model是否可拖拽\r\n  const [visible, setVisible] = useState(false); //model框是否显示\r\n  const [newMemo, setNewMemo] = useState(\"\"); //note内容\r\n  const [petMessages, setPetMessages] = useState({}); //接收点击了那个的值\r\n  const [saveType, setSaveType] = useState(false); //是否隐藏按钮\r\n  const [bounds, setBounds] = useState({\r\n    left: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    right: 0,\r\n  });\r\n  const [reRender, setReRender] = useState(0);\r\n\r\n  //表格渲染\r\n  const columns = [\r\n    {\r\n      title: \"Dat\",\r\n      dataIndex: \"createTime\",\r\n      // width: '15%',\r\n      render: (text, record) => moment(text).format(\"MMM D\"),\r\n    },\r\n    {\r\n      title: \"Tim\",\r\n      dataIndex: \"createTime\",\r\n      // width: '20%',\r\n      render: (text, record) => moment(text).format(\"hh:mm A\"),\r\n    },\r\n    {\r\n      title: \"Weight\",\r\n      dataIndex: \"weight\",\r\n      // width: '15%',\r\n      render: (text, record) => (\r\n        <Badge color={color()} text={_.toNumber(text).toFixed(1)} />\r\n      ),\r\n    },\r\n\r\n    {\r\n      title: \"BF%\",\r\n      dataIndex: \"fat\",\r\n      key: \"fat\",\r\n      align: \"center\",\r\n      // width: '10%',\r\n      render: (text, record, index) => {\r\n        return <p style={{ textAlign: \"center\", color: \"#58BDE6\" }}>{text}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"BCS\",\r\n      dataIndex: \"bodyConditionScore\",\r\n      key: \"bodyConditionScore\",\r\n      align: \"center\",\r\n      // width: '10%',\r\n      render: (text, record, index) => {\r\n        return <p style={{ textAlign: \"center\", color: \"#58BDE6\" }}>{text}</p>;\r\n      },\r\n    },\r\n    {\r\n      title: \"Note\",\r\n      dataIndex: \"memo\",\r\n      // width: '15%',\r\n      render: (text, record) => text,\r\n    },\r\n    {\r\n      key: \"action\",\r\n      // width: '15%',\r\n      render: (text, record) => (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"space-around\",\r\n          }}\r\n        >\r\n          <img\r\n            className=\"operationIcon\"\r\n            src={EditCircle}\r\n            onClick={() => {\r\n              setVisible(true);\r\n              setPetMessages(record);\r\n            }}\r\n          />\r\n          <Popconfirm\r\n            title=\"Sure to delete?\"\r\n            onConfirm={() => deletePetMessage(record.examId)}\r\n          >\r\n            <img src={Delete} />\r\n          </Popconfirm>\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n  //根据温度判断指示文字颜色\r\n  const color = () => {\r\n    if (mellaMeasureValue > 40) {\r\n      return \"#e1206d\";\r\n    } else if (_.inRange(_.round(mellaMeasureValue), 38, 40)) {\r\n      return \"#58bde6\";\r\n    } else {\r\n      return \"#98da86\";\r\n    }\r\n  };\r\n\r\n  //获取历史宠物温度数据\r\n  const getPetTemperatureData = () => {\r\n    fetchRequest(`/pet/getPetExamByPetId/${petId}`, \"GET\", \"\")\r\n      .then((res) => {\r\n        console.log(\"历史记录\", res);\r\n        if (res.flag === true) {\r\n          let arr = [];\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            const element = res.data[i];\r\n            if (element.weight) {\r\n              arr.push(element);\r\n            }\r\n          }\r\n          setPetTemperatureData(arr);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //保存note\r\n  const save = () => {\r\n    let datas = {\r\n      memo: newMemo,\r\n    };\r\n    fetchRequest(`/pet/updatePetExam/${petMessages.examId}`, \"POST\", datas)\r\n      .then((res) => {\r\n        setVisible(false);\r\n        getPetTemperatureData();\r\n      })\r\n      .catch((err) => {\r\n        setVisible(false);\r\n        console.log(err);\r\n      });\r\n  };\r\n  //删除历史温度记录\r\n  const deletePetMessage = (examId) => {\r\n    fetchRequest(`/pet/deletePetExamByExamId/${examId}`, \"DELETE\").then(\r\n      (res) => {\r\n        if (res.flag === true) {\r\n          message.success(\"Successfully Delete\");\r\n          getPetTemperatureData();\r\n        } else {\r\n          message.error(\"Fail To Delete\");\r\n        }\r\n      }\r\n    );\r\n  };\r\n  //关闭弹窗\r\n  const handleCancel = (e) => {\r\n    setVisible(false);\r\n  };\r\n  let draggleRef = React.createRef();\r\n  const onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = draggleRef?.current?.getBoundingClientRect();\r\n    setBounds({\r\n      left: -targetRect?.left + uiData?.x,\r\n      right: clientWidth - (targetRect?.right - uiData?.x),\r\n      top: -targetRect?.top + uiData?.y,\r\n      bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getPetTemperatureData();\r\n    return () => {};\r\n  }, [petMessage]);\r\n  useEffect(() => {\r\n    if (reRender !== saveNum) {\r\n      setReRender(saveNum);\r\n      getPetTemperatureData();\r\n    }\r\n    return () => {};\r\n  }, [saveNum]);\r\n\r\n  let hisHe = mTop(200);\r\n  try {\r\n    let historyElement = document.querySelectorAll(\".historyTable\");\r\n    hisHe = historyElement[0].clientHeight - mTop(60);\r\n  } catch (error) {}\r\n\r\n  return (\r\n    <Table\r\n      rowKey={\"examId\"}\r\n      columns={columns}\r\n      dataSource={petTemperatureData}\r\n      className=\"measuredTable\"\r\n      pagination={false}\r\n      scroll={{\r\n        y: hisHe,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n  }\r\n)(HistoryTable);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js",["616"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectExam\\EzyVetSelectExam.js",["638","639","640","641","642","643","644","645","646","647","648","649","650","651","652"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\home\\Home.jsx",["653","654"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\apiKey\\APIKey.jsx",["655","656","657","658"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx",["659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\help\\Help.jsx",["686"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\admin_VetProfile\\Veterinarians.jsx",["687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\addDevice\\AddDevice.jsx",["703","704","705","706","707","708","709","710","711","712"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\px.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx",["713"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.js",["714","715","716","717","718","719","720","721","722","723","724"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx",["725","726","727","728","729","730","731","732","733","734","735","736"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["737","738","739","740","741","742","743","744","745","746","747"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx",["748","749","750","751","752","753","754","755","756"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx",["757","758"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil.js",["759","760","761","762"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx",["763","764","765","766","767","768","769","770","771"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx",["772","773","774","775"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx",["776"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx",["777","778","779","780"],{"ruleId":"781","severity":1,"message":"782","line":2,"column":17,"nodeType":"783","messageId":"784","endLine":2,"endColumn":23},{"ruleId":"781","severity":1,"message":"785","line":2,"column":40,"nodeType":"783","messageId":"784","endLine":2,"endColumn":47},{"ruleId":"781","severity":1,"message":"786","line":3,"column":32,"nodeType":"783","messageId":"784","endLine":3,"endColumn":44},{"ruleId":"781","severity":1,"message":"787","line":10,"column":10,"nodeType":"783","messageId":"784","endLine":10,"endColumn":22},{"ruleId":"781","severity":1,"message":"788","line":13,"column":10,"nodeType":"783","messageId":"784","endLine":13,"endColumn":23},{"ruleId":"781","severity":1,"message":"789","line":14,"column":10,"nodeType":"783","messageId":"784","endLine":14,"endColumn":14},{"ruleId":"781","severity":1,"message":"790","line":14,"column":20,"nodeType":"783","messageId":"784","endLine":14,"endColumn":24},{"ruleId":"781","severity":1,"message":"791","line":14,"column":26,"nodeType":"783","messageId":"784","endLine":14,"endColumn":28},{"ruleId":"781","severity":1,"message":"792","line":17,"column":20,"nodeType":"783","messageId":"784","endLine":17,"endColumn":29},{"ruleId":"781","severity":1,"message":"793","line":19,"column":7,"nodeType":"783","messageId":"784","endLine":19,"endColumn":13},{"ruleId":"781","severity":1,"message":"794","line":354,"column":11,"nodeType":"783","messageId":"784","endLine":354,"endColumn":17},{"ruleId":"795","severity":1,"message":"796","line":367,"column":69,"nodeType":"797","messageId":"798","endLine":367,"endColumn":76},{"ruleId":"781","severity":1,"message":"799","line":422,"column":19,"nodeType":"783","messageId":"784","endLine":422,"endColumn":26},{"ruleId":"781","severity":1,"message":"800","line":423,"column":9,"nodeType":"783","messageId":"784","endLine":423,"endColumn":13},{"ruleId":"801","severity":1,"message":"802","line":550,"column":69,"nodeType":"803","endLine":550,"endColumn":104},{"ruleId":"781","severity":1,"message":"804","line":5,"column":3,"nodeType":"783","messageId":"784","endLine":5,"endColumn":10},{"ruleId":"781","severity":1,"message":"782","line":6,"column":3,"nodeType":"783","messageId":"784","endLine":6,"endColumn":9},{"ruleId":"781","severity":1,"message":"805","line":7,"column":3,"nodeType":"783","messageId":"784","endLine":7,"endColumn":8},{"ruleId":"781","severity":1,"message":"786","line":10,"column":10,"nodeType":"783","messageId":"784","endLine":10,"endColumn":22},{"ruleId":"781","severity":1,"message":"806","line":11,"column":10,"nodeType":"783","messageId":"784","endLine":11,"endColumn":24},{"ruleId":"781","severity":1,"message":"807","line":21,"column":8,"nodeType":"783","messageId":"784","endLine":21,"endColumn":16},{"ruleId":"781","severity":1,"message":"808","line":28,"column":8,"nodeType":"783","messageId":"784","endLine":28,"endColumn":17},{"ruleId":"781","severity":1,"message":"809","line":29,"column":8,"nodeType":"783","messageId":"784","endLine":29,"endColumn":21},{"ruleId":"781","severity":1,"message":"810","line":31,"column":8,"nodeType":"783","messageId":"784","endLine":31,"endColumn":16},{"ruleId":"781","severity":1,"message":"811","line":43,"column":8,"nodeType":"783","messageId":"784","endLine":43,"endColumn":15},{"ruleId":"781","severity":1,"message":"812","line":45,"column":9,"nodeType":"783","messageId":"784","endLine":45,"endColumn":16},{"ruleId":"781","severity":1,"message":"793","line":46,"column":7,"nodeType":"783","messageId":"784","endLine":46,"endColumn":13},{"ruleId":"781","severity":1,"message":"813","line":50,"column":7,"nodeType":"783","messageId":"784","endLine":50,"endColumn":17},{"ruleId":"814","severity":1,"message":"815","line":165,"column":7,"nodeType":"816","messageId":"817","endLine":166,"endColumn":31},{"ruleId":"814","severity":1,"message":"815","line":167,"column":7,"nodeType":"816","messageId":"817","endLine":170,"endColumn":15},{"ruleId":"814","severity":1,"message":"818","line":176,"column":7,"nodeType":"816","messageId":"819","endLine":177,"endColumn":15},{"ruleId":"820","severity":1,"message":"821","line":194,"column":6,"nodeType":"822","endLine":194,"endColumn":8,"suggestions":"823"},{"ruleId":"781","severity":1,"message":"824","line":232,"column":13,"nodeType":"783","messageId":"784","endLine":232,"endColumn":20},{"ruleId":"825","severity":1,"message":"826","line":816,"column":17,"nodeType":"803","endLine":816,"endColumn":63},{"ruleId":"825","severity":1,"message":"826","line":822,"column":17,"nodeType":"803","endLine":822,"endColumn":65},{"ruleId":"801","severity":1,"message":"802","line":856,"column":15,"nodeType":"803","endLine":861,"endColumn":16},{"ruleId":"801","severity":1,"message":"802","line":862,"column":15,"nodeType":"803","endLine":868,"endColumn":16},{"ruleId":"825","severity":1,"message":"826","line":948,"column":17,"nodeType":"803","endLine":948,"endColumn":63},{"ruleId":"825","severity":1,"message":"826","line":953,"column":15,"nodeType":"803","endLine":953,"endColumn":64},{"ruleId":"801","severity":1,"message":"802","line":1046,"column":13,"nodeType":"803","endLine":1048,"endColumn":14},{"ruleId":"801","severity":1,"message":"802","line":1111,"column":15,"nodeType":"803","endLine":1113,"endColumn":16},{"ruleId":"801","severity":1,"message":"802","line":1127,"column":13,"nodeType":"803","endLine":1129,"endColumn":14},{"ruleId":"801","severity":1,"message":"802","line":1195,"column":15,"nodeType":"803","endLine":1197,"endColumn":16},{"ruleId":"801","severity":1,"message":"802","line":1210,"column":15,"nodeType":"803","endLine":1212,"endColumn":16},{"ruleId":"825","severity":1,"message":"826","line":1251,"column":13,"nodeType":"803","endLine":1251,"endColumn":58},{"ruleId":"825","severity":1,"message":"826","line":1452,"column":17,"nodeType":"803","endLine":1452,"endColumn":52},{"ruleId":"825","severity":1,"message":"826","line":1453,"column":17,"nodeType":"803","endLine":1453,"endColumn":51},{"ruleId":"827","replacedBy":"828"},{"ruleId":"829","replacedBy":"830"},{"ruleId":"781","severity":1,"message":"831","line":2,"column":5,"nodeType":"783","messageId":"784","endLine":2,"endColumn":14},{"ruleId":"781","severity":1,"message":"832","line":3,"column":5,"nodeType":"783","messageId":"784","endLine":3,"endColumn":13},{"ruleId":"781","severity":1,"message":"833","line":5,"column":10,"nodeType":"783","messageId":"784","endLine":5,"endColumn":15},{"ruleId":"781","severity":1,"message":"834","line":16,"column":8,"nodeType":"783","messageId":"784","endLine":16,"endColumn":9},{"ruleId":"781","severity":1,"message":"835","line":19,"column":18,"nodeType":"783","messageId":"784","endLine":19,"endColumn":24},{"ruleId":"781","severity":1,"message":"836","line":22,"column":11,"nodeType":"783","messageId":"784","endLine":22,"endColumn":29},{"ruleId":"827","replacedBy":"837"},{"ruleId":"829","replacedBy":"838"},{"ruleId":"781","severity":1,"message":"839","line":11,"column":3,"nodeType":"783","messageId":"784","endLine":11,"endColumn":9},{"ruleId":"781","severity":1,"message":"840","line":21,"column":8,"nodeType":"783","messageId":"784","endLine":21,"endColumn":14},{"ruleId":"781","severity":1,"message":"841","line":26,"column":10,"nodeType":"783","messageId":"784","endLine":26,"endColumn":21},{"ruleId":"781","severity":1,"message":"842","line":28,"column":8,"nodeType":"783","messageId":"784","endLine":28,"endColumn":14},{"ruleId":"781","severity":1,"message":"790","line":30,"column":10,"nodeType":"783","messageId":"784","endLine":30,"endColumn":14},{"ruleId":"781","severity":1,"message":"789","line":30,"column":16,"nodeType":"783","messageId":"784","endLine":30,"endColumn":20},{"ruleId":"781","severity":1,"message":"843","line":31,"column":10,"nodeType":"783","messageId":"784","endLine":31,"endColumn":20},{"ruleId":"781","severity":1,"message":"844","line":36,"column":8,"nodeType":"783","messageId":"784","endLine":36,"endColumn":21},{"ruleId":"781","severity":1,"message":"845","line":37,"column":8,"nodeType":"783","messageId":"784","endLine":37,"endColumn":15},{"ruleId":"781","severity":1,"message":"812","line":42,"column":9,"nodeType":"783","messageId":"784","endLine":42,"endColumn":16},{"ruleId":"781","severity":1,"message":"793","line":43,"column":7,"nodeType":"783","messageId":"784","endLine":43,"endColumn":13},{"ruleId":"781","severity":1,"message":"846","line":166,"column":9,"nodeType":"783","messageId":"784","endLine":166,"endColumn":16},{"ruleId":"781","severity":1,"message":"847","line":176,"column":15,"nodeType":"783","messageId":"784","endLine":176,"endColumn":21},{"ruleId":"781","severity":1,"message":"848","line":626,"column":15,"nodeType":"783","messageId":"784","endLine":626,"endColumn":24},{"ruleId":"781","severity":1,"message":"849","line":901,"column":15,"nodeType":"783","messageId":"784","endLine":901,"endColumn":21},{"ruleId":"781","severity":1,"message":"850","line":905,"column":15,"nodeType":"783","messageId":"784","endLine":905,"endColumn":22},{"ruleId":"781","severity":1,"message":"851","line":989,"column":28,"nodeType":"783","messageId":"784","endLine":989,"endColumn":31},{"ruleId":"781","severity":1,"message":"852","line":989,"column":33,"nodeType":"783","messageId":"784","endLine":989,"endColumn":35},{"ruleId":"781","severity":1,"message":"853","line":989,"column":37,"nodeType":"783","messageId":"784","endLine":989,"endColumn":45},{"ruleId":"781","severity":1,"message":"854","line":989,"column":53,"nodeType":"783","messageId":"784","endLine":989,"endColumn":63},{"ruleId":"781","severity":1,"message":"855","line":989,"column":65,"nodeType":"783","messageId":"784","endLine":989,"endColumn":73},{"ruleId":"781","severity":1,"message":"856","line":989,"column":75,"nodeType":"783","messageId":"784","endLine":989,"endColumn":81},{"ruleId":"781","severity":1,"message":"857","line":989,"column":111,"nodeType":"783","messageId":"784","endLine":989,"endColumn":117},{"ruleId":"781","severity":1,"message":"858","line":989,"column":119,"nodeType":"783","messageId":"784","endLine":989,"endColumn":129},{"ruleId":"801","severity":1,"message":"802","line":1001,"column":11,"nodeType":"803","endLine":1017,"endColumn":12},{"ruleId":"859","severity":1,"message":"860","line":1099,"column":19,"nodeType":"861","messageId":"862","endLine":1118,"endColumn":20},{"ruleId":"825","severity":1,"message":"826","line":1214,"column":17,"nodeType":"803","endLine":1214,"endColumn":52},{"ruleId":"825","severity":1,"message":"826","line":1215,"column":17,"nodeType":"803","endLine":1215,"endColumn":51},{"ruleId":"781","severity":1,"message":"839","line":4,"column":3,"nodeType":"783","messageId":"784","endLine":4,"endColumn":9},{"ruleId":"781","severity":1,"message":"863","line":10,"column":10,"nodeType":"783","messageId":"784","endLine":10,"endColumn":30},{"ruleId":"781","severity":1,"message":"864","line":15,"column":8,"nodeType":"783","messageId":"784","endLine":15,"endColumn":11},{"ruleId":"781","severity":1,"message":"841","line":17,"column":10,"nodeType":"783","messageId":"784","endLine":17,"endColumn":21},{"ruleId":"781","severity":1,"message":"839","line":11,"column":3,"nodeType":"783","messageId":"784","endLine":11,"endColumn":9},{"ruleId":"781","severity":1,"message":"840","line":21,"column":8,"nodeType":"783","messageId":"784","endLine":21,"endColumn":14},{"ruleId":"781","severity":1,"message":"841","line":26,"column":10,"nodeType":"783","messageId":"784","endLine":26,"endColumn":21},{"ruleId":"781","severity":1,"message":"842","line":28,"column":8,"nodeType":"783","messageId":"784","endLine":28,"endColumn":14},{"ruleId":"781","severity":1,"message":"790","line":30,"column":10,"nodeType":"783","messageId":"784","endLine":30,"endColumn":14},{"ruleId":"781","severity":1,"message":"789","line":30,"column":16,"nodeType":"783","messageId":"784","endLine":30,"endColumn":20},{"ruleId":"781","severity":1,"message":"843","line":31,"column":10,"nodeType":"783","messageId":"784","endLine":31,"endColumn":20},{"ruleId":"781","severity":1,"message":"844","line":36,"column":8,"nodeType":"783","messageId":"784","endLine":36,"endColumn":21},{"ruleId":"781","severity":1,"message":"845","line":37,"column":8,"nodeType":"783","messageId":"784","endLine":37,"endColumn":15},{"ruleId":"781","severity":1,"message":"812","line":42,"column":9,"nodeType":"783","messageId":"784","endLine":42,"endColumn":16},{"ruleId":"781","severity":1,"message":"793","line":43,"column":7,"nodeType":"783","messageId":"784","endLine":43,"endColumn":13},{"ruleId":"781","severity":1,"message":"846","line":166,"column":9,"nodeType":"783","messageId":"784","endLine":166,"endColumn":16},{"ruleId":"781","severity":1,"message":"847","line":176,"column":15,"nodeType":"783","messageId":"784","endLine":176,"endColumn":21},{"ruleId":"781","severity":1,"message":"848","line":630,"column":15,"nodeType":"783","messageId":"784","endLine":630,"endColumn":24},{"ruleId":"781","severity":1,"message":"849","line":905,"column":15,"nodeType":"783","messageId":"784","endLine":905,"endColumn":21},{"ruleId":"781","severity":1,"message":"850","line":909,"column":15,"nodeType":"783","messageId":"784","endLine":909,"endColumn":22},{"ruleId":"781","severity":1,"message":"851","line":993,"column":28,"nodeType":"783","messageId":"784","endLine":993,"endColumn":31},{"ruleId":"781","severity":1,"message":"852","line":993,"column":33,"nodeType":"783","messageId":"784","endLine":993,"endColumn":35},{"ruleId":"781","severity":1,"message":"853","line":993,"column":37,"nodeType":"783","messageId":"784","endLine":993,"endColumn":45},{"ruleId":"781","severity":1,"message":"854","line":993,"column":53,"nodeType":"783","messageId":"784","endLine":993,"endColumn":63},{"ruleId":"781","severity":1,"message":"855","line":993,"column":65,"nodeType":"783","messageId":"784","endLine":993,"endColumn":73},{"ruleId":"781","severity":1,"message":"856","line":993,"column":75,"nodeType":"783","messageId":"784","endLine":993,"endColumn":81},{"ruleId":"781","severity":1,"message":"857","line":993,"column":111,"nodeType":"783","messageId":"784","endLine":993,"endColumn":117},{"ruleId":"781","severity":1,"message":"858","line":993,"column":119,"nodeType":"783","messageId":"784","endLine":993,"endColumn":129},{"ruleId":"801","severity":1,"message":"802","line":1005,"column":11,"nodeType":"803","endLine":1021,"endColumn":12},{"ruleId":"859","severity":1,"message":"860","line":1104,"column":19,"nodeType":"861","messageId":"862","endLine":1123,"endColumn":20},{"ruleId":"825","severity":1,"message":"826","line":1233,"column":17,"nodeType":"803","endLine":1233,"endColumn":52},{"ruleId":"825","severity":1,"message":"826","line":1234,"column":17,"nodeType":"803","endLine":1234,"endColumn":51},{"ruleId":"781","severity":1,"message":"865","line":2,"column":60,"nodeType":"783","messageId":"784","endLine":2,"endColumn":64},{"ruleId":"781","severity":1,"message":"866","line":3,"column":8,"nodeType":"783","messageId":"784","endLine":3,"endColumn":17},{"ruleId":"781","severity":1,"message":"867","line":6,"column":32,"nodeType":"783","messageId":"784","endLine":6,"endColumn":47},{"ruleId":"781","severity":1,"message":"812","line":31,"column":9,"nodeType":"783","messageId":"784","endLine":31,"endColumn":16},{"ruleId":"781","severity":1,"message":"793","line":33,"column":7,"nodeType":"783","messageId":"784","endLine":33,"endColumn":13},{"ruleId":"781","severity":1,"message":"868","line":38,"column":5,"nodeType":"783","messageId":"784","endLine":38,"endColumn":8},{"ruleId":"795","severity":1,"message":"869","line":75,"column":9,"nodeType":"797","messageId":"798","endLine":75,"endColumn":15},{"ruleId":"859","severity":1,"message":"860","line":116,"column":9,"nodeType":"861","messageId":"862","endLine":122,"endColumn":10},{"ruleId":"870","severity":1,"message":"871","line":129,"column":51,"nodeType":"872","messageId":"873","endLine":129,"endColumn":53},{"ruleId":"870","severity":1,"message":"871","line":168,"column":51,"nodeType":"872","messageId":"873","endLine":168,"endColumn":53},{"ruleId":"781","severity":1,"message":"874","line":277,"column":15,"nodeType":"783","messageId":"784","endLine":277,"endColumn":25},{"ruleId":"781","severity":1,"message":"875","line":277,"column":53,"nodeType":"783","messageId":"784","endLine":277,"endColumn":59},{"ruleId":"781","severity":1,"message":"876","line":350,"column":15,"nodeType":"783","messageId":"784","endLine":350,"endColumn":28},{"ruleId":"825","severity":1,"message":"826","line":554,"column":29,"nodeType":"803","endLine":554,"endColumn":77},{"ruleId":"781","severity":1,"message":"877","line":577,"column":9,"nodeType":"783","messageId":"784","endLine":577,"endColumn":16},{"ruleId":"781","severity":1,"message":"878","line":578,"column":15,"nodeType":"783","messageId":"784","endLine":578,"endColumn":24},{"ruleId":"825","severity":1,"message":"826","line":612,"column":29,"nodeType":"803","endLine":612,"endColumn":77},{"ruleId":"859","severity":1,"message":"860","line":643,"column":9,"nodeType":"861","messageId":"862","endLine":646,"endColumn":10},{"ruleId":"859","severity":1,"message":"860","line":648,"column":9,"nodeType":"861","messageId":"862","endLine":651,"endColumn":10},{"ruleId":"781","severity":1,"message":"854","line":732,"column":17,"nodeType":"783","messageId":"784","endLine":732,"endColumn":27},{"ruleId":"781","severity":1,"message":"855","line":732,"column":29,"nodeType":"783","messageId":"784","endLine":732,"endColumn":37},{"ruleId":"781","severity":1,"message":"856","line":732,"column":39,"nodeType":"783","messageId":"784","endLine":732,"endColumn":45},{"ruleId":"781","severity":1,"message":"879","line":732,"column":47,"nodeType":"783","messageId":"784","endLine":732,"endColumn":55},{"ruleId":"781","severity":1,"message":"880","line":798,"column":97,"nodeType":"783","messageId":"784","endLine":798,"endColumn":102},{"ruleId":"781","severity":1,"message":"881","line":798,"column":135,"nodeType":"783","messageId":"784","endLine":798,"endColumn":157},{"ruleId":"781","severity":1,"message":"865","line":11,"column":3,"nodeType":"783","messageId":"784","endLine":11,"endColumn":7},{"ruleId":"781","severity":1,"message":"882","line":18,"column":8,"nodeType":"783","messageId":"784","endLine":18,"endColumn":15},{"ruleId":"781","severity":1,"message":"788","line":26,"column":10,"nodeType":"783","messageId":"784","endLine":26,"endColumn":23},{"ruleId":"781","severity":1,"message":"791","line":47,"column":16,"nodeType":"783","messageId":"784","endLine":47,"endColumn":18},{"ruleId":"781","severity":1,"message":"812","line":50,"column":9,"nodeType":"783","messageId":"784","endLine":50,"endColumn":16},{"ruleId":"781","severity":1,"message":"883","line":63,"column":5,"nodeType":"783","messageId":"784","endLine":63,"endColumn":8},{"ruleId":"781","severity":1,"message":"884","line":455,"column":22,"nodeType":"783","messageId":"784","endLine":455,"endColumn":26},{"ruleId":"859","severity":1,"message":"860","line":1156,"column":9,"nodeType":"861","messageId":"862","endLine":1160,"endColumn":10},{"ruleId":"814","severity":1,"message":"815","line":1580,"column":7,"nodeType":"816","messageId":"817","endLine":1655,"endColumn":15},{"ruleId":"859","severity":1,"message":"860","line":1823,"column":5,"nodeType":"861","messageId":"862","endLine":1836,"endColumn":6},{"ruleId":"781","severity":1,"message":"885","line":2302,"column":17,"nodeType":"783","messageId":"784","endLine":2302,"endColumn":29},{"ruleId":"886","severity":1,"message":"887","line":2319,"column":59,"nodeType":"888","messageId":"889","endLine":2319,"endColumn":60,"suggestions":"890"},{"ruleId":"886","severity":1,"message":"891","line":2319,"column":165,"nodeType":"888","messageId":"889","endLine":2319,"endColumn":166,"suggestions":"892"},{"ruleId":"886","severity":1,"message":"887","line":2335,"column":59,"nodeType":"888","messageId":"889","endLine":2335,"endColumn":60,"suggestions":"893"},{"ruleId":"886","severity":1,"message":"891","line":2335,"column":165,"nodeType":"888","messageId":"889","endLine":2335,"endColumn":166,"suggestions":"894"},{"ruleId":"886","severity":1,"message":"887","line":2354,"column":59,"nodeType":"888","messageId":"889","endLine":2354,"endColumn":60,"suggestions":"895"},{"ruleId":"886","severity":1,"message":"891","line":2354,"column":165,"nodeType":"888","messageId":"889","endLine":2354,"endColumn":166,"suggestions":"896"},{"ruleId":"886","severity":1,"message":"887","line":2387,"column":59,"nodeType":"888","messageId":"889","endLine":2387,"endColumn":60,"suggestions":"897"},{"ruleId":"886","severity":1,"message":"891","line":2387,"column":165,"nodeType":"888","messageId":"889","endLine":2387,"endColumn":166,"suggestions":"898"},{"ruleId":"886","severity":1,"message":"887","line":2403,"column":59,"nodeType":"888","messageId":"889","endLine":2403,"endColumn":60,"suggestions":"899"},{"ruleId":"886","severity":1,"message":"891","line":2403,"column":165,"nodeType":"888","messageId":"889","endLine":2403,"endColumn":166,"suggestions":"900"},{"ruleId":"886","severity":1,"message":"887","line":2421,"column":59,"nodeType":"888","messageId":"889","endLine":2421,"endColumn":60,"suggestions":"901"},{"ruleId":"886","severity":1,"message":"891","line":2421,"column":165,"nodeType":"888","messageId":"889","endLine":2421,"endColumn":166,"suggestions":"902"},{"ruleId":"781","severity":1,"message":"854","line":2841,"column":11,"nodeType":"783","messageId":"784","endLine":2841,"endColumn":21},{"ruleId":"781","severity":1,"message":"855","line":2841,"column":23,"nodeType":"783","messageId":"784","endLine":2841,"endColumn":31},{"ruleId":"781","severity":1,"message":"856","line":2841,"column":33,"nodeType":"783","messageId":"784","endLine":2841,"endColumn":39},{"ruleId":"781","severity":1,"message":"903","line":2841,"column":65,"nodeType":"783","messageId":"784","endLine":2841,"endColumn":78},{"ruleId":"781","severity":1,"message":"904","line":2985,"column":30,"nodeType":"783","messageId":"784","endLine":2985,"endColumn":37},{"ruleId":"781","severity":1,"message":"905","line":2985,"column":39,"nodeType":"783","messageId":"784","endLine":2985,"endColumn":47},{"ruleId":"781","severity":1,"message":"906","line":2985,"column":49,"nodeType":"783","messageId":"784","endLine":2985,"endColumn":58},{"ruleId":"781","severity":1,"message":"878","line":2985,"column":60,"nodeType":"783","messageId":"784","endLine":2985,"endColumn":69},{"ruleId":"781","severity":1,"message":"880","line":2985,"column":71,"nodeType":"783","messageId":"784","endLine":2985,"endColumn":76},{"ruleId":"781","severity":1,"message":"907","line":2985,"column":78,"nodeType":"783","messageId":"784","endLine":2985,"endColumn":86},{"ruleId":"781","severity":1,"message":"847","line":2985,"column":88,"nodeType":"783","messageId":"784","endLine":2985,"endColumn":94},{"ruleId":"781","severity":1,"message":"868","line":2985,"column":96,"nodeType":"783","messageId":"784","endLine":2985,"endColumn":99},{"ruleId":"886","severity":1,"message":"887","line":3278,"column":59,"nodeType":"888","messageId":"889","endLine":3278,"endColumn":60,"suggestions":"908"},{"ruleId":"886","severity":1,"message":"891","line":3278,"column":165,"nodeType":"888","messageId":"889","endLine":3278,"endColumn":166,"suggestions":"909"},{"ruleId":"886","severity":1,"message":"887","line":3295,"column":59,"nodeType":"888","messageId":"889","endLine":3295,"endColumn":60,"suggestions":"910"},{"ruleId":"886","severity":1,"message":"891","line":3295,"column":165,"nodeType":"888","messageId":"889","endLine":3295,"endColumn":166,"suggestions":"911"},{"ruleId":"781","severity":1,"message":"786","line":5,"column":32,"nodeType":"783","messageId":"784","endLine":5,"endColumn":44},{"ruleId":"781","severity":1,"message":"789","line":10,"column":10,"nodeType":"783","messageId":"784","endLine":10,"endColumn":14},{"ruleId":"781","severity":1,"message":"912","line":30,"column":9,"nodeType":"783","messageId":"784","endLine":30,"endColumn":16},{"ruleId":"781","severity":1,"message":"913","line":4,"column":3,"nodeType":"783","messageId":"784","endLine":4,"endColumn":8},{"ruleId":"781","severity":1,"message":"914","line":5,"column":3,"nodeType":"783","messageId":"784","endLine":5,"endColumn":7},{"ruleId":"781","severity":1,"message":"915","line":7,"column":3,"nodeType":"783","messageId":"784","endLine":7,"endColumn":8},{"ruleId":"781","severity":1,"message":"863","line":13,"column":10,"nodeType":"783","messageId":"784","endLine":13,"endColumn":30},{"ruleId":"781","severity":1,"message":"916","line":19,"column":10,"nodeType":"783","messageId":"784","endLine":19,"endColumn":23},{"ruleId":"781","severity":1,"message":"917","line":4,"column":3,"nodeType":"783","messageId":"784","endLine":4,"endColumn":9},{"ruleId":"781","severity":1,"message":"918","line":12,"column":8,"nodeType":"783","messageId":"784","endLine":12,"endColumn":14},{"ruleId":"781","severity":1,"message":"782","line":13,"column":8,"nodeType":"783","messageId":"784","endLine":13,"endColumn":14},{"ruleId":"781","severity":1,"message":"919","line":14,"column":8,"nodeType":"783","messageId":"784","endLine":14,"endColumn":21},{"ruleId":"781","severity":1,"message":"920","line":15,"column":8,"nodeType":"783","messageId":"784","endLine":15,"endColumn":24},{"ruleId":"781","severity":1,"message":"789","line":16,"column":10,"nodeType":"783","messageId":"784","endLine":16,"endColumn":14},{"ruleId":"781","severity":1,"message":"921","line":25,"column":10,"nodeType":"783","messageId":"784","endLine":25,"endColumn":22},{"ruleId":"781","severity":1,"message":"922","line":27,"column":9,"nodeType":"783","messageId":"784","endLine":27,"endColumn":15},{"ruleId":"781","severity":1,"message":"923","line":43,"column":11,"nodeType":"783","messageId":"784","endLine":43,"endColumn":17},{"ruleId":"781","severity":1,"message":"924","line":43,"column":19,"nodeType":"783","messageId":"784","endLine":43,"endColumn":24},{"ruleId":"781","severity":1,"message":"925","line":59,"column":9,"nodeType":"783","messageId":"784","endLine":59,"endColumn":22},{"ruleId":"781","severity":1,"message":"926","line":78,"column":11,"nodeType":"783","messageId":"784","endLine":78,"endColumn":19},{"ruleId":"781","severity":1,"message":"913","line":2,"column":10,"nodeType":"783","messageId":"784","endLine":2,"endColumn":15},{"ruleId":"781","severity":1,"message":"782","line":2,"column":17,"nodeType":"783","messageId":"784","endLine":2,"endColumn":23},{"ruleId":"781","severity":1,"message":"927","line":2,"column":48,"nodeType":"783","messageId":"784","endLine":2,"endColumn":56},{"ruleId":"781","severity":1,"message":"928","line":2,"column":58,"nodeType":"783","messageId":"784","endLine":2,"endColumn":61},{"ruleId":"781","severity":1,"message":"929","line":2,"column":63,"nodeType":"783","messageId":"784","endLine":2,"endColumn":66},{"ruleId":"781","severity":1,"message":"865","line":2,"column":68,"nodeType":"783","messageId":"784","endLine":2,"endColumn":72},{"ruleId":"781","severity":1,"message":"866","line":3,"column":8,"nodeType":"783","messageId":"784","endLine":3,"endColumn":17},{"ruleId":"781","severity":1,"message":"867","line":6,"column":32,"nodeType":"783","messageId":"784","endLine":6,"endColumn":47},{"ruleId":"781","severity":1,"message":"930","line":11,"column":8,"nodeType":"783","messageId":"784","endLine":11,"endColumn":13},{"ruleId":"781","severity":1,"message":"931","line":12,"column":8,"nodeType":"783","messageId":"784","endLine":12,"endColumn":14},{"ruleId":"781","severity":1,"message":"864","line":15,"column":8,"nodeType":"783","messageId":"784","endLine":15,"endColumn":11},{"ruleId":"781","severity":1,"message":"932","line":16,"column":8,"nodeType":"783","messageId":"784","endLine":16,"endColumn":14},{"ruleId":"781","severity":1,"message":"933","line":17,"column":8,"nodeType":"783","messageId":"784","endLine":17,"endColumn":12},{"ruleId":"781","severity":1,"message":"812","line":23,"column":9,"nodeType":"783","messageId":"784","endLine":23,"endColumn":16},{"ruleId":"781","severity":1,"message":"922","line":24,"column":9,"nodeType":"783","messageId":"784","endLine":24,"endColumn":15},{"ruleId":"781","severity":1,"message":"793","line":25,"column":7,"nodeType":"783","messageId":"784","endLine":25,"endColumn":13},{"ruleId":"781","severity":1,"message":"934","line":28,"column":5,"nodeType":"783","messageId":"784","endLine":28,"endColumn":12},{"ruleId":"781","severity":1,"message":"935","line":29,"column":5,"nodeType":"783","messageId":"784","endLine":29,"endColumn":17},{"ruleId":"781","severity":1,"message":"868","line":30,"column":5,"nodeType":"783","messageId":"784","endLine":30,"endColumn":8},{"ruleId":"781","severity":1,"message":"868","line":92,"column":61,"nodeType":"783","messageId":"784","endLine":92,"endColumn":64},{"ruleId":"781","severity":1,"message":"936","line":92,"column":66,"nodeType":"783","messageId":"784","endLine":92,"endColumn":75},{"ruleId":"801","severity":1,"message":"802","line":277,"column":15,"nodeType":"803","endLine":283,"endColumn":16},{"ruleId":"781","severity":1,"message":"866","line":9,"column":8,"nodeType":"783","messageId":"784","endLine":9,"endColumn":17},{"ruleId":"781","severity":1,"message":"863","line":10,"column":10,"nodeType":"783","messageId":"784","endLine":10,"endColumn":30},{"ruleId":"781","severity":1,"message":"937","line":10,"column":32,"nodeType":"783","messageId":"784","endLine":10,"endColumn":47},{"ruleId":"781","severity":1,"message":"938","line":14,"column":8,"nodeType":"783","messageId":"784","endLine":14,"endColumn":16},{"ruleId":"781","severity":1,"message":"789","line":19,"column":10,"nodeType":"783","messageId":"784","endLine":19,"endColumn":14},{"ruleId":"859","severity":1,"message":"860","line":85,"column":25,"nodeType":"861","messageId":"862","endLine":114,"endColumn":26},{"ruleId":"814","severity":1,"message":"815","line":103,"column":29,"nodeType":"816","messageId":"817","endLine":104,"endColumn":68},{"ruleId":"814","severity":1,"message":"815","line":105,"column":29,"nodeType":"816","messageId":"817","endLine":112,"endColumn":39},{"ruleId":"781","severity":1,"message":"939","line":290,"column":49,"nodeType":"783","messageId":"784","endLine":290,"endColumn":63},{"ruleId":"781","severity":1,"message":"940","line":290,"column":65,"nodeType":"783","messageId":"784","endLine":290,"endColumn":79},{"ruleId":"781","severity":1,"message":"917","line":4,"column":5,"nodeType":"783","messageId":"784","endLine":4,"endColumn":11},{"ruleId":"781","severity":1,"message":"918","line":12,"column":8,"nodeType":"783","messageId":"784","endLine":12,"endColumn":14},{"ruleId":"781","severity":1,"message":"782","line":13,"column":8,"nodeType":"783","messageId":"784","endLine":13,"endColumn":14},{"ruleId":"781","severity":1,"message":"919","line":14,"column":8,"nodeType":"783","messageId":"784","endLine":14,"endColumn":21},{"ruleId":"781","severity":1,"message":"920","line":15,"column":8,"nodeType":"783","messageId":"784","endLine":15,"endColumn":24},{"ruleId":"781","severity":1,"message":"789","line":16,"column":10,"nodeType":"783","messageId":"784","endLine":16,"endColumn":14},{"ruleId":"781","severity":1,"message":"941","line":17,"column":8,"nodeType":"783","messageId":"784","endLine":17,"endColumn":15},{"ruleId":"781","severity":1,"message":"942","line":18,"column":8,"nodeType":"783","messageId":"784","endLine":18,"endColumn":14},{"ruleId":"781","severity":1,"message":"943","line":19,"column":8,"nodeType":"783","messageId":"784","endLine":19,"endColumn":11},{"ruleId":"781","severity":1,"message":"944","line":20,"column":8,"nodeType":"783","messageId":"784","endLine":20,"endColumn":11},{"ruleId":"781","severity":1,"message":"945","line":21,"column":8,"nodeType":"783","messageId":"784","endLine":21,"endColumn":13},{"ruleId":"781","severity":1,"message":"787","line":22,"column":10,"nodeType":"783","messageId":"784","endLine":22,"endColumn":22},{"ruleId":"781","severity":1,"message":"946","line":23,"column":8,"nodeType":"783","messageId":"784","endLine":23,"endColumn":14},{"ruleId":"781","severity":1,"message":"922","line":26,"column":9,"nodeType":"783","messageId":"784","endLine":26,"endColumn":15},{"ruleId":"781","severity":1,"message":"923","line":40,"column":15,"nodeType":"783","messageId":"784","endLine":40,"endColumn":21},{"ruleId":"781","severity":1,"message":"924","line":40,"column":23,"nodeType":"783","messageId":"784","endLine":40,"endColumn":28},{"ruleId":"795","severity":1,"message":"947","line":129,"column":13,"nodeType":"797","messageId":"798","endLine":129,"endColumn":26},{"ruleId":"781","severity":1,"message":"925","line":143,"column":13,"nodeType":"783","messageId":"784","endLine":143,"endColumn":26},{"ruleId":"781","severity":1,"message":"789","line":4,"column":10,"nodeType":"783","messageId":"784","endLine":4,"endColumn":14},{"ruleId":"781","severity":1,"message":"791","line":4,"column":20,"nodeType":"783","messageId":"784","endLine":4,"endColumn":22},{"ruleId":"781","severity":1,"message":"948","line":309,"column":15,"nodeType":"783","messageId":"784","endLine":309,"endColumn":19},{"ruleId":"859","severity":1,"message":"860","line":329,"column":9,"nodeType":"861","messageId":"862","endLine":336,"endColumn":10},{"ruleId":"781","severity":1,"message":"949","line":355,"column":13,"nodeType":"783","messageId":"784","endLine":355,"endColumn":17},{"ruleId":"781","severity":1,"message":"950","line":356,"column":13,"nodeType":"783","messageId":"784","endLine":356,"endColumn":17},{"ruleId":"781","severity":1,"message":"951","line":507,"column":15,"nodeType":"783","messageId":"784","endLine":507,"endColumn":25},{"ruleId":"781","severity":1,"message":"952","line":551,"column":17,"nodeType":"783","messageId":"784","endLine":551,"endColumn":26},{"ruleId":"781","severity":1,"message":"953","line":722,"column":11,"nodeType":"783","messageId":"784","endLine":722,"endColumn":22},{"ruleId":"954","severity":1,"message":"955","line":901,"column":9,"nodeType":"956","messageId":"957","endLine":901,"endColumn":15},{"ruleId":"781","severity":1,"message":"958","line":13,"column":10,"nodeType":"783","messageId":"784","endLine":13,"endColumn":12},{"ruleId":"781","severity":1,"message":"791","line":13,"column":14,"nodeType":"783","messageId":"784","endLine":13,"endColumn":16},{"ruleId":"781","severity":1,"message":"831","line":2,"column":27,"nodeType":"783","messageId":"784","endLine":2,"endColumn":36},{"ruleId":"781","severity":1,"message":"789","line":7,"column":14,"nodeType":"783","messageId":"784","endLine":7,"endColumn":18},{"ruleId":"781","severity":1,"message":"959","line":4,"column":5,"nodeType":"783","messageId":"784","endLine":4,"endColumn":10},{"ruleId":"960","severity":1,"message":"961","line":16,"column":16,"nodeType":"962","messageId":"798","endLine":16,"endColumn":18},{"ruleId":"960","severity":1,"message":"961","line":67,"column":16,"nodeType":"962","messageId":"798","endLine":67,"endColumn":18},{"ruleId":"960","severity":1,"message":"961","line":101,"column":16,"nodeType":"962","messageId":"798","endLine":101,"endColumn":18},{"ruleId":"820","severity":1,"message":"963","line":27,"column":8,"nodeType":"822","endLine":27,"endColumn":10,"suggestions":"964"},{"ruleId":"781","severity":1,"message":"965","line":6,"column":5,"nodeType":"783","messageId":"784","endLine":6,"endColumn":9},{"ruleId":"781","severity":1,"message":"966","line":10,"column":5,"nodeType":"783","messageId":"784","endLine":10,"endColumn":12},{"ruleId":"781","severity":1,"message":"865","line":12,"column":5,"nodeType":"783","messageId":"784","endLine":12,"endColumn":9},{"ruleId":"781","severity":1,"message":"863","line":17,"column":10,"nodeType":"783","messageId":"784","endLine":17,"endColumn":30},{"ruleId":"781","severity":1,"message":"786","line":17,"column":32,"nodeType":"783","messageId":"784","endLine":17,"endColumn":44},{"ruleId":"781","severity":1,"message":"941","line":23,"column":8,"nodeType":"783","messageId":"784","endLine":23,"endColumn":15},{"ruleId":"781","severity":1,"message":"967","line":25,"column":8,"nodeType":"783","messageId":"784","endLine":25,"endColumn":10},{"ruleId":"781","severity":1,"message":"968","line":26,"column":8,"nodeType":"783","messageId":"784","endLine":26,"endColumn":10},{"ruleId":"781","severity":1,"message":"969","line":27,"column":8,"nodeType":"783","messageId":"784","endLine":27,"endColumn":12},{"ruleId":"781","severity":1,"message":"943","line":28,"column":8,"nodeType":"783","messageId":"784","endLine":28,"endColumn":11},{"ruleId":"781","severity":1,"message":"944","line":29,"column":8,"nodeType":"783","messageId":"784","endLine":29,"endColumn":11},{"ruleId":"781","severity":1,"message":"945","line":30,"column":8,"nodeType":"783","messageId":"784","endLine":30,"endColumn":13},{"ruleId":"781","severity":1,"message":"970","line":34,"column":8,"nodeType":"783","messageId":"784","endLine":34,"endColumn":18},{"ruleId":"781","severity":1,"message":"971","line":38,"column":8,"nodeType":"783","messageId":"784","endLine":38,"endColumn":13},{"ruleId":"781","severity":1,"message":"972","line":48,"column":7,"nodeType":"783","messageId":"784","endLine":48,"endColumn":24},{"ruleId":"781","severity":1,"message":"973","line":51,"column":19,"nodeType":"783","messageId":"784","endLine":51,"endColumn":27},{"ruleId":"781","severity":1,"message":"974","line":69,"column":19,"nodeType":"783","messageId":"784","endLine":69,"endColumn":27},{"ruleId":"781","severity":1,"message":"975","line":81,"column":12,"nodeType":"783","messageId":"784","endLine":81,"endColumn":20},{"ruleId":"781","severity":1,"message":"976","line":85,"column":12,"nodeType":"783","messageId":"784","endLine":85,"endColumn":15},{"ruleId":"781","severity":1,"message":"977","line":88,"column":20,"nodeType":"783","messageId":"784","endLine":88,"endColumn":29},{"ruleId":"820","severity":1,"message":"978","line":147,"column":8,"nodeType":"822","endLine":147,"endColumn":25,"suggestions":"979"},{"ruleId":"820","severity":1,"message":"980","line":172,"column":8,"nodeType":"822","endLine":172,"endColumn":28,"suggestions":"981"},{"ruleId":"781","severity":1,"message":"982","line":176,"column":15,"nodeType":"783","messageId":"784","endLine":176,"endColumn":18},{"ruleId":"781","severity":1,"message":"884","line":436,"column":26,"nodeType":"783","messageId":"784","endLine":436,"endColumn":30},{"ruleId":"886","severity":1,"message":"887","line":683,"column":75,"nodeType":"888","messageId":"889","endLine":683,"endColumn":76,"suggestions":"983"},{"ruleId":"886","severity":1,"message":"891","line":683,"column":181,"nodeType":"888","messageId":"889","endLine":683,"endColumn":182,"suggestions":"984"},{"ruleId":"886","severity":1,"message":"887","line":697,"column":75,"nodeType":"888","messageId":"889","endLine":697,"endColumn":76,"suggestions":"985"},{"ruleId":"886","severity":1,"message":"891","line":697,"column":181,"nodeType":"888","messageId":"889","endLine":697,"endColumn":182,"suggestions":"986"},{"ruleId":"886","severity":1,"message":"887","line":714,"column":75,"nodeType":"888","messageId":"889","endLine":714,"endColumn":76,"suggestions":"987"},{"ruleId":"886","severity":1,"message":"891","line":714,"column":181,"nodeType":"888","messageId":"889","endLine":714,"endColumn":182,"suggestions":"988"},{"ruleId":"886","severity":1,"message":"887","line":744,"column":75,"nodeType":"888","messageId":"889","endLine":744,"endColumn":76,"suggestions":"989"},{"ruleId":"886","severity":1,"message":"891","line":744,"column":181,"nodeType":"888","messageId":"889","endLine":744,"endColumn":182,"suggestions":"990"},{"ruleId":"886","severity":1,"message":"887","line":758,"column":75,"nodeType":"888","messageId":"889","endLine":758,"endColumn":76,"suggestions":"991"},{"ruleId":"886","severity":1,"message":"891","line":758,"column":181,"nodeType":"888","messageId":"889","endLine":758,"endColumn":182,"suggestions":"992"},{"ruleId":"886","severity":1,"message":"887","line":774,"column":75,"nodeType":"888","messageId":"889","endLine":774,"endColumn":76,"suggestions":"993"},{"ruleId":"886","severity":1,"message":"891","line":774,"column":181,"nodeType":"888","messageId":"889","endLine":774,"endColumn":182,"suggestions":"994"},{"ruleId":"886","severity":1,"message":"887","line":1258,"column":75,"nodeType":"888","messageId":"889","endLine":1258,"endColumn":76,"suggestions":"995"},{"ruleId":"886","severity":1,"message":"891","line":1258,"column":181,"nodeType":"888","messageId":"889","endLine":1258,"endColumn":182,"suggestions":"996"},{"ruleId":"886","severity":1,"message":"887","line":1274,"column":75,"nodeType":"888","messageId":"889","endLine":1274,"endColumn":76,"suggestions":"997"},{"ruleId":"886","severity":1,"message":"891","line":1274,"column":181,"nodeType":"888","messageId":"889","endLine":1274,"endColumn":182,"suggestions":"998"},{"ruleId":"781","severity":1,"message":"833","line":4,"column":3,"nodeType":"783","messageId":"784","endLine":4,"endColumn":8},{"ruleId":"781","severity":1,"message":"915","line":10,"column":3,"nodeType":"783","messageId":"784","endLine":10,"endColumn":8},{"ruleId":"781","severity":1,"message":"999","line":11,"column":3,"nodeType":"783","messageId":"784","endLine":11,"endColumn":7},{"ruleId":"781","severity":1,"message":"1000","line":16,"column":8,"nodeType":"783","messageId":"784","endLine":16,"endColumn":15},{"ruleId":"781","severity":1,"message":"1001","line":62,"column":5,"nodeType":"783","messageId":"784","endLine":62,"endColumn":23},{"ruleId":"1002","severity":1,"message":"1003","line":120,"column":61,"nodeType":"962","messageId":"1004","endLine":120,"endColumn":62},{"ruleId":"1002","severity":1,"message":"1003","line":128,"column":45,"nodeType":"962","messageId":"1004","endLine":128,"endColumn":46},{"ruleId":"820","severity":1,"message":"1005","line":260,"column":6,"nodeType":"822","endLine":260,"endColumn":13,"suggestions":"1006"},{"ruleId":"820","severity":1,"message":"1007","line":280,"column":6,"nodeType":"822","endLine":280,"endColumn":26,"suggestions":"1008"},{"ruleId":"781","severity":1,"message":"831","line":2,"column":5,"nodeType":"783","messageId":"784","endLine":2,"endColumn":14},{"ruleId":"781","severity":1,"message":"832","line":3,"column":5,"nodeType":"783","messageId":"784","endLine":3,"endColumn":13},{"ruleId":"781","severity":1,"message":"833","line":5,"column":10,"nodeType":"783","messageId":"784","endLine":5,"endColumn":15},{"ruleId":"781","severity":1,"message":"835","line":22,"column":18,"nodeType":"783","messageId":"784","endLine":22,"endColumn":24},{"ruleId":"825","severity":1,"message":"826","line":35,"column":33,"nodeType":"803","endLine":35,"endColumn":60},{"ruleId":"825","severity":1,"message":"826","line":41,"column":33,"nodeType":"803","endLine":41,"endColumn":62},{"ruleId":"781","severity":1,"message":"782","line":3,"column":3,"nodeType":"783","messageId":"784","endLine":3,"endColumn":9},{"ruleId":"781","severity":1,"message":"1009","line":4,"column":3,"nodeType":"783","messageId":"784","endLine":4,"endColumn":11},{"ruleId":"781","severity":1,"message":"915","line":5,"column":3,"nodeType":"783","messageId":"784","endLine":5,"endColumn":8},{"ruleId":"781","severity":1,"message":"1010","line":7,"column":3,"nodeType":"783","messageId":"784","endLine":7,"endColumn":6},{"ruleId":"781","severity":1,"message":"805","line":9,"column":3,"nodeType":"783","messageId":"784","endLine":9,"endColumn":8},{"ruleId":"781","severity":1,"message":"1011","line":13,"column":8,"nodeType":"783","messageId":"784","endLine":13,"endColumn":23},{"ruleId":"781","severity":1,"message":"1012","line":14,"column":8,"nodeType":"783","messageId":"784","endLine":14,"endColumn":23},{"ruleId":"781","severity":1,"message":"1013","line":15,"column":8,"nodeType":"783","messageId":"784","endLine":15,"endColumn":23},{"ruleId":"781","severity":1,"message":"866","line":29,"column":8,"nodeType":"783","messageId":"784","endLine":29,"endColumn":17},{"ruleId":"781","severity":1,"message":"958","line":31,"column":10,"nodeType":"783","messageId":"784","endLine":31,"endColumn":12},{"ruleId":"781","severity":1,"message":"836","line":41,"column":28,"nodeType":"783","messageId":"784","endLine":41,"endColumn":46},{"ruleId":"781","severity":1,"message":"1014","line":41,"column":48,"nodeType":"783","messageId":"784","endLine":41,"endColumn":64},{"ruleId":"781","severity":1,"message":"1015","line":43,"column":16,"nodeType":"783","messageId":"784","endLine":43,"endColumn":20},{"ruleId":"781","severity":1,"message":"934","line":44,"column":7,"nodeType":"783","messageId":"784","endLine":44,"endColumn":14},{"ruleId":"781","severity":1,"message":"879","line":46,"column":10,"nodeType":"783","messageId":"784","endLine":46,"endColumn":18},{"ruleId":"781","severity":1,"message":"1016","line":46,"column":20,"nodeType":"783","messageId":"784","endLine":46,"endColumn":31},{"ruleId":"781","severity":1,"message":"1017","line":47,"column":10,"nodeType":"783","messageId":"784","endLine":47,"endColumn":17},{"ruleId":"781","severity":1,"message":"1018","line":48,"column":19,"nodeType":"783","messageId":"784","endLine":48,"endColumn":29},{"ruleId":"781","severity":1,"message":"1019","line":50,"column":10,"nodeType":"783","messageId":"784","endLine":50,"endColumn":18},{"ruleId":"781","severity":1,"message":"1020","line":50,"column":20,"nodeType":"783","messageId":"784","endLine":50,"endColumn":31},{"ruleId":"781","severity":1,"message":"1021","line":51,"column":10,"nodeType":"783","messageId":"784","endLine":51,"endColumn":16},{"ruleId":"825","severity":1,"message":"826","line":120,"column":11,"nodeType":"803","endLine":127,"endColumn":13},{"ruleId":"825","severity":1,"message":"826","line":132,"column":13,"nodeType":"803","endLine":132,"endColumn":33},{"ruleId":"781","severity":1,"message":"1022","line":171,"column":9,"nodeType":"783","messageId":"784","endLine":171,"endColumn":13},{"ruleId":"781","severity":1,"message":"1023","line":199,"column":9,"nodeType":"783","messageId":"784","endLine":199,"endColumn":21},{"ruleId":"781","severity":1,"message":"1024","line":203,"column":9,"nodeType":"783","messageId":"784","endLine":203,"endColumn":16},{"ruleId":"820","severity":1,"message":"1025","line":217,"column":6,"nodeType":"822","endLine":217,"endColumn":18,"suggestions":"1026"},{"ruleId":"820","severity":1,"message":"1027","line":224,"column":6,"nodeType":"822","endLine":224,"endColumn":15,"suggestions":"1028"},{"ruleId":"781","severity":1,"message":"832","line":2,"column":17,"nodeType":"783","messageId":"784","endLine":2,"endColumn":25},{"ruleId":"781","severity":1,"message":"1029","line":2,"column":10,"nodeType":"783","messageId":"784","endLine":2,"endColumn":20},{"ruleId":"781","severity":1,"message":"965","line":4,"column":5,"nodeType":"783","messageId":"784","endLine":4,"endColumn":9},{"ruleId":"781","severity":1,"message":"804","line":5,"column":5,"nodeType":"783","messageId":"784","endLine":5,"endColumn":12},{"ruleId":"781","severity":1,"message":"782","line":6,"column":5,"nodeType":"783","messageId":"784","endLine":6,"endColumn":11},{"ruleId":"781","severity":1,"message":"805","line":7,"column":5,"nodeType":"783","messageId":"784","endLine":7,"endColumn":10},{"ruleId":"781","severity":1,"message":"789","line":15,"column":10,"nodeType":"783","messageId":"784","endLine":15,"endColumn":14},{"ruleId":"781","severity":1,"message":"790","line":15,"column":20,"nodeType":"783","messageId":"784","endLine":15,"endColumn":24},{"ruleId":"781","severity":1,"message":"919","line":16,"column":8,"nodeType":"783","messageId":"784","endLine":16,"endColumn":21},{"ruleId":"870","severity":1,"message":"871","line":49,"column":36,"nodeType":"872","messageId":"873","endLine":49,"endColumn":38},{"ruleId":"870","severity":1,"message":"871","line":65,"column":32,"nodeType":"872","messageId":"873","endLine":65,"endColumn":34},{"ruleId":"870","severity":1,"message":"871","line":74,"column":37,"nodeType":"872","messageId":"873","endLine":74,"endColumn":39},{"ruleId":"870","severity":1,"message":"871","line":80,"column":23,"nodeType":"872","messageId":"873","endLine":80,"endColumn":25},{"ruleId":"870","severity":1,"message":"871","line":82,"column":31,"nodeType":"872","messageId":"873","endLine":82,"endColumn":33},{"ruleId":"960","severity":1,"message":"961","line":86,"column":32,"nodeType":"962","messageId":"798","endLine":86,"endColumn":34},{"ruleId":"820","severity":1,"message":"1030","line":104,"column":8,"nodeType":"822","endLine":104,"endColumn":10,"suggestions":"1031"},{"ruleId":"870","severity":1,"message":"871","line":114,"column":39,"nodeType":"872","messageId":"873","endLine":114,"endColumn":41},{"ruleId":"870","severity":1,"message":"871","line":115,"column":49,"nodeType":"872","messageId":"873","endLine":115,"endColumn":51},{"ruleId":"960","severity":1,"message":"1032","line":124,"column":39,"nodeType":"962","messageId":"798","endLine":124,"endColumn":41},{"ruleId":"870","severity":1,"message":"871","line":137,"column":39,"nodeType":"872","messageId":"873","endLine":137,"endColumn":41},{"ruleId":"820","severity":1,"message":"1033","line":152,"column":8,"nodeType":"822","endLine":152,"endColumn":20,"suggestions":"1034"},{"ruleId":"801","severity":1,"message":"1035","line":202,"column":21,"nodeType":"803","endLine":207,"endColumn":22},{"ruleId":"781","severity":1,"message":"1036","line":102,"column":9,"nodeType":"783","messageId":"784","endLine":102,"endColumn":15},{"ruleId":"781","severity":1,"message":"1037","line":191,"column":25,"nodeType":"783","messageId":"784","endLine":191,"endColumn":32},{"ruleId":"781","severity":1,"message":"1038","line":191,"column":34,"nodeType":"783","messageId":"784","endLine":191,"endColumn":49},{"ruleId":"781","severity":1,"message":"1039","line":191,"column":51,"nodeType":"783","messageId":"784","endLine":191,"endColumn":55},{"ruleId":"781","severity":1,"message":"1040","line":192,"column":25,"nodeType":"783","messageId":"784","endLine":192,"endColumn":44},{"ruleId":"781","severity":1,"message":"1041","line":192,"column":46,"nodeType":"783","messageId":"784","endLine":192,"endColumn":62},{"ruleId":"781","severity":1,"message":"1042","line":192,"column":64,"nodeType":"783","messageId":"784","endLine":192,"endColumn":84},{"ruleId":"781","severity":1,"message":"1043","line":192,"column":86,"nodeType":"783","messageId":"784","endLine":192,"endColumn":96},{"ruleId":"1044","severity":1,"message":"1045","line":281,"column":33,"nodeType":"783","messageId":"1046","endLine":281,"endColumn":37},{"ruleId":"886","severity":1,"message":"1047","line":350,"column":55,"nodeType":"1048","messageId":"889","endLine":350,"endColumn":56,"suggestions":"1049"},{"ruleId":"886","severity":1,"message":"1047","line":350,"column":69,"nodeType":"1048","messageId":"889","endLine":350,"endColumn":70,"suggestions":"1050"},{"ruleId":"781","severity":1,"message":"849","line":548,"column":15,"nodeType":"783","messageId":"784","endLine":548,"endColumn":21},{"ruleId":"781","severity":1,"message":"851","line":560,"column":28,"nodeType":"783","messageId":"784","endLine":560,"endColumn":31},{"ruleId":"781","severity":1,"message":"852","line":560,"column":33,"nodeType":"783","messageId":"784","endLine":560,"endColumn":35},{"ruleId":"781","severity":1,"message":"853","line":560,"column":37,"nodeType":"783","messageId":"784","endLine":560,"endColumn":45},{"ruleId":"781","severity":1,"message":"919","line":13,"column":8,"nodeType":"783","messageId":"784","endLine":13,"endColumn":21},{"ruleId":"781","severity":1,"message":"1051","line":14,"column":8,"nodeType":"783","messageId":"784","endLine":14,"endColumn":20},{"ruleId":"781","severity":1,"message":"1052","line":6,"column":5,"nodeType":"783","messageId":"784","endLine":6,"endColumn":10},{"ruleId":"781","severity":1,"message":"1053","line":10,"column":10,"nodeType":"783","messageId":"784","endLine":10,"endColumn":28},{"ruleId":"781","severity":1,"message":"1054","line":10,"column":30,"nodeType":"783","messageId":"784","endLine":10,"endColumn":42},{"ruleId":"781","severity":1,"message":"793","line":19,"column":7,"nodeType":"783","messageId":"784","endLine":19,"endColumn":13},{"ruleId":"781","severity":1,"message":"966","line":2,"column":35,"nodeType":"783","messageId":"784","endLine":2,"endColumn":42},{"ruleId":"781","severity":1,"message":"841","line":13,"column":10,"nodeType":"783","messageId":"784","endLine":13,"endColumn":21},{"ruleId":"781","severity":1,"message":"791","line":43,"column":20,"nodeType":"783","messageId":"784","endLine":43,"endColumn":22},{"ruleId":"781","severity":1,"message":"812","line":50,"column":9,"nodeType":"783","messageId":"784","endLine":50,"endColumn":16},{"ruleId":"781","severity":1,"message":"793","line":52,"column":7,"nodeType":"783","messageId":"784","endLine":52,"endColumn":13},{"ruleId":"781","severity":1,"message":"1055","line":79,"column":5,"nodeType":"783","messageId":"784","endLine":79,"endColumn":15},{"ruleId":"781","severity":1,"message":"1056","line":212,"column":48,"nodeType":"783","messageId":"784","endLine":212,"endColumn":54},{"ruleId":"859","severity":1,"message":"860","line":331,"column":9,"nodeType":"861","messageId":"862","endLine":344,"endColumn":10},{"ruleId":"859","severity":1,"message":"860","line":744,"column":9,"nodeType":"861","messageId":"862","endLine":748,"endColumn":10},{"ruleId":"781","severity":1,"message":"1057","line":752,"column":9,"nodeType":"783","messageId":"784","endLine":752,"endColumn":27},{"ruleId":"795","severity":1,"message":"1058","line":798,"column":7,"nodeType":"797","messageId":"798","endLine":798,"endColumn":10},{"ruleId":"859","severity":1,"message":"860","line":1051,"column":11,"nodeType":"861","messageId":"862","endLine":1058,"endColumn":12},{"ruleId":"859","severity":1,"message":"860","line":1274,"column":13,"nodeType":"861","messageId":"862","endLine":1281,"endColumn":14},{"ruleId":"859","severity":1,"message":"860","line":1431,"column":13,"nodeType":"861","messageId":"862","endLine":1438,"endColumn":14},{"ruleId":"781","severity":1,"message":"1059","line":1502,"column":15,"nodeType":"783","messageId":"784","endLine":1502,"endColumn":26},{"ruleId":"954","severity":1,"message":"955","line":1789,"column":9,"nodeType":"956","messageId":"957","endLine":1789,"endColumn":15},{"ruleId":"954","severity":1,"message":"955","line":1798,"column":9,"nodeType":"956","messageId":"957","endLine":1798,"endColumn":14},{"ruleId":"859","severity":1,"message":"860","line":2024,"column":9,"nodeType":"861","messageId":"862","endLine":2037,"endColumn":10},{"ruleId":"886","severity":1,"message":"891","line":2430,"column":36,"nodeType":"888","messageId":"889","endLine":2430,"endColumn":37,"suggestions":"1060"},{"ruleId":"960","severity":1,"message":"1032","line":2431,"column":47,"nodeType":"962","messageId":"798","endLine":2431,"endColumn":49},{"ruleId":"781","severity":1,"message":"1061","line":2632,"column":107,"nodeType":"783","messageId":"784","endLine":2632,"endColumn":112},{"ruleId":"781","severity":1,"message":"1062","line":3057,"column":11,"nodeType":"783","messageId":"784","endLine":3057,"endColumn":14},{"ruleId":"781","severity":1,"message":"1063","line":3694,"column":17,"nodeType":"783","messageId":"784","endLine":3694,"endColumn":23},{"ruleId":"781","severity":1,"message":"854","line":4322,"column":13,"nodeType":"783","messageId":"784","endLine":4322,"endColumn":23},{"ruleId":"781","severity":1,"message":"855","line":4322,"column":25,"nodeType":"783","messageId":"784","endLine":4322,"endColumn":33},{"ruleId":"781","severity":1,"message":"856","line":4322,"column":35,"nodeType":"783","messageId":"784","endLine":4322,"endColumn":41},{"ruleId":"859","severity":1,"message":"860","line":4355,"column":17,"nodeType":"861","messageId":"862","endLine":4368,"endColumn":18},{"ruleId":"781","severity":1,"message":"1064","line":58,"column":9,"nodeType":"783","messageId":"784","endLine":58,"endColumn":12},{"ruleId":"781","severity":1,"message":"917","line":4,"column":3,"nodeType":"783","messageId":"784","endLine":4,"endColumn":9},{"ruleId":"781","severity":1,"message":"918","line":13,"column":8,"nodeType":"783","messageId":"784","endLine":13,"endColumn":14},{"ruleId":"781","severity":1,"message":"782","line":14,"column":8,"nodeType":"783","messageId":"784","endLine":14,"endColumn":14},{"ruleId":"781","severity":1,"message":"919","line":15,"column":8,"nodeType":"783","messageId":"784","endLine":15,"endColumn":21},{"ruleId":"781","severity":1,"message":"920","line":16,"column":8,"nodeType":"783","messageId":"784","endLine":16,"endColumn":24},{"ruleId":"781","severity":1,"message":"943","line":20,"column":8,"nodeType":"783","messageId":"784","endLine":20,"endColumn":11},{"ruleId":"781","severity":1,"message":"944","line":21,"column":8,"nodeType":"783","messageId":"784","endLine":21,"endColumn":11},{"ruleId":"781","severity":1,"message":"945","line":22,"column":8,"nodeType":"783","messageId":"784","endLine":22,"endColumn":13},{"ruleId":"781","severity":1,"message":"922","line":32,"column":9,"nodeType":"783","messageId":"784","endLine":32,"endColumn":15},{"ruleId":"781","severity":1,"message":"923","line":55,"column":11,"nodeType":"783","messageId":"784","endLine":55,"endColumn":17},{"ruleId":"781","severity":1,"message":"924","line":55,"column":19,"nodeType":"783","messageId":"784","endLine":55,"endColumn":24},{"ruleId":"781","severity":1,"message":"925","line":71,"column":9,"nodeType":"783","messageId":"784","endLine":71,"endColumn":22},{"ruleId":"781","severity":1,"message":"906","line":154,"column":18,"nodeType":"783","messageId":"784","endLine":154,"endColumn":27},{"ruleId":"781","severity":1,"message":"905","line":154,"column":29,"nodeType":"783","messageId":"784","endLine":154,"endColumn":37},{"ruleId":"825","severity":1,"message":"826","line":558,"column":19,"nodeType":"803","endLine":565,"endColumn":61},{"ruleId":"801","severity":1,"message":"802","line":573,"column":19,"nodeType":"803","endLine":581,"endColumn":30},{"ruleId":"781","severity":1,"message":"913","line":2,"column":10,"nodeType":"783","messageId":"784","endLine":2,"endColumn":15},{"ruleId":"781","severity":1,"message":"782","line":2,"column":17,"nodeType":"783","messageId":"784","endLine":2,"endColumn":23},{"ruleId":"781","severity":1,"message":"865","line":2,"column":34,"nodeType":"783","messageId":"784","endLine":2,"endColumn":38},{"ruleId":"781","severity":1,"message":"785","line":2,"column":40,"nodeType":"783","messageId":"784","endLine":2,"endColumn":47},{"ruleId":"781","severity":1,"message":"863","line":3,"column":10,"nodeType":"783","messageId":"784","endLine":3,"endColumn":30},{"ruleId":"781","severity":1,"message":"786","line":3,"column":32,"nodeType":"783","messageId":"784","endLine":3,"endColumn":44},{"ruleId":"781","severity":1,"message":"941","line":11,"column":8,"nodeType":"783","messageId":"784","endLine":11,"endColumn":15},{"ruleId":"781","severity":1,"message":"791","line":12,"column":26,"nodeType":"783","messageId":"784","endLine":12,"endColumn":28},{"ruleId":"781","severity":1,"message":"1065","line":18,"column":5,"nodeType":"783","messageId":"784","endLine":18,"endColumn":10},{"ruleId":"859","severity":1,"message":"860","line":164,"column":9,"nodeType":"861","messageId":"862","endLine":182,"endColumn":10},{"ruleId":"781","severity":1,"message":"1066","line":24,"column":7,"nodeType":"783","messageId":"784","endLine":24,"endColumn":19},{"ruleId":"781","severity":1,"message":"1067","line":2,"column":8,"nodeType":"783","messageId":"784","endLine":2,"endColumn":17},{"ruleId":"781","severity":1,"message":"913","line":4,"column":10,"nodeType":"783","messageId":"784","endLine":4,"endColumn":15},{"ruleId":"781","severity":1,"message":"782","line":4,"column":17,"nodeType":"783","messageId":"784","endLine":4,"endColumn":23},{"ruleId":"781","severity":1,"message":"1068","line":4,"column":25,"nodeType":"783","messageId":"784","endLine":4,"endColumn":32},{"ruleId":"781","severity":1,"message":"865","line":4,"column":34,"nodeType":"783","messageId":"784","endLine":4,"endColumn":38},{"ruleId":"781","severity":1,"message":"785","line":4,"column":40,"nodeType":"783","messageId":"784","endLine":4,"endColumn":47},{"ruleId":"781","severity":1,"message":"863","line":5,"column":10,"nodeType":"783","messageId":"784","endLine":5,"endColumn":30},{"ruleId":"781","severity":1,"message":"867","line":5,"column":46,"nodeType":"783","messageId":"784","endLine":5,"endColumn":61},{"ruleId":"781","severity":1,"message":"789","line":9,"column":10,"nodeType":"783","messageId":"784","endLine":9,"endColumn":14},{"ruleId":"781","severity":1,"message":"790","line":9,"column":20,"nodeType":"783","messageId":"784","endLine":9,"endColumn":24},{"ruleId":"781","severity":1,"message":"791","line":9,"column":26,"nodeType":"783","messageId":"784","endLine":9,"endColumn":28},{"ruleId":"781","severity":1,"message":"831","line":1,"column":27,"nodeType":"783","messageId":"784","endLine":1,"endColumn":36},{"ruleId":"781","severity":1,"message":"1067","line":2,"column":8,"nodeType":"783","messageId":"784","endLine":2,"endColumn":17},{"ruleId":"781","severity":1,"message":"913","line":4,"column":10,"nodeType":"783","messageId":"784","endLine":4,"endColumn":15},{"ruleId":"781","severity":1,"message":"782","line":4,"column":17,"nodeType":"783","messageId":"784","endLine":4,"endColumn":23},{"ruleId":"781","severity":1,"message":"865","line":4,"column":34,"nodeType":"783","messageId":"784","endLine":4,"endColumn":38},{"ruleId":"781","severity":1,"message":"785","line":4,"column":40,"nodeType":"783","messageId":"784","endLine":4,"endColumn":47},{"ruleId":"781","severity":1,"message":"786","line":5,"column":32,"nodeType":"783","messageId":"784","endLine":5,"endColumn":44},{"ruleId":"781","severity":1,"message":"867","line":5,"column":46,"nodeType":"783","messageId":"784","endLine":5,"endColumn":61},{"ruleId":"781","severity":1,"message":"919","line":8,"column":8,"nodeType":"783","messageId":"784","endLine":8,"endColumn":21},{"ruleId":"781","severity":1,"message":"789","line":18,"column":10,"nodeType":"783","messageId":"784","endLine":18,"endColumn":14},{"ruleId":"781","severity":1,"message":"790","line":18,"column":20,"nodeType":"783","messageId":"784","endLine":18,"endColumn":24},{"ruleId":"781","severity":1,"message":"791","line":18,"column":26,"nodeType":"783","messageId":"784","endLine":18,"endColumn":28},{"ruleId":"781","severity":1,"message":"915","line":5,"column":28,"nodeType":"783","messageId":"784","endLine":5,"endColumn":33},{"ruleId":"781","severity":1,"message":"1010","line":5,"column":42,"nodeType":"783","messageId":"784","endLine":5,"endColumn":45},{"ruleId":"781","severity":1,"message":"1015","line":30,"column":18,"nodeType":"783","messageId":"784","endLine":30,"endColumn":22},{"ruleId":"825","severity":1,"message":"826","line":68,"column":28,"nodeType":"803","endLine":68,"endColumn":57},{"ruleId":"825","severity":1,"message":"826","line":70,"column":28,"nodeType":"803","endLine":70,"endColumn":57},{"ruleId":"825","severity":1,"message":"826","line":72,"column":28,"nodeType":"803","endLine":72,"endColumn":57},{"ruleId":"825","severity":1,"message":"826","line":74,"column":28,"nodeType":"803","endLine":74,"endColumn":57},{"ruleId":"825","severity":1,"message":"826","line":89,"column":21,"nodeType":"803","endLine":96,"endColumn":23},{"ruleId":"825","severity":1,"message":"826","line":98,"column":25,"nodeType":"803","endLine":98,"endColumn":45},{"ruleId":"960","severity":1,"message":"1032","line":159,"column":32,"nodeType":"962","messageId":"798","endLine":159,"endColumn":34},{"ruleId":"820","severity":1,"message":"1025","line":240,"column":8,"nodeType":"822","endLine":240,"endColumn":20,"suggestions":"1069"},{"ruleId":"781","severity":1,"message":"832","line":1,"column":17,"nodeType":"783","messageId":"784","endLine":1,"endColumn":25},{"ruleId":"781","severity":1,"message":"831","line":1,"column":27,"nodeType":"783","messageId":"784","endLine":1,"endColumn":36},{"ruleId":"781","severity":1,"message":"786","line":3,"column":10,"nodeType":"783","messageId":"784","endLine":3,"endColumn":22},{"ruleId":"781","severity":1,"message":"863","line":3,"column":24,"nodeType":"783","messageId":"784","endLine":3,"endColumn":44},{"ruleId":"781","severity":1,"message":"806","line":4,"column":10,"nodeType":"783","messageId":"784","endLine":4,"endColumn":24},{"ruleId":"825","severity":1,"message":"826","line":44,"column":11,"nodeType":"803","endLine":47,"endColumn":13},{"ruleId":"825","severity":1,"message":"826","line":53,"column":13,"nodeType":"803","endLine":56,"endColumn":15},{"ruleId":"825","severity":1,"message":"826","line":61,"column":11,"nodeType":"803","endLine":64,"endColumn":13},{"ruleId":"825","severity":1,"message":"826","line":74,"column":11,"nodeType":"803","endLine":77,"endColumn":13},{"ruleId":"781","severity":1,"message":"834","line":4,"column":8,"nodeType":"783","messageId":"784","endLine":4,"endColumn":9},{"ruleId":"781","severity":1,"message":"831","line":6,"column":10,"nodeType":"783","messageId":"784","endLine":6,"endColumn":19},{"ruleId":"781","severity":1,"message":"959","line":6,"column":5,"nodeType":"783","messageId":"784","endLine":6,"endColumn":10},{"ruleId":"781","severity":1,"message":"1070","line":12,"column":13,"nodeType":"783","messageId":"784","endLine":12,"endColumn":19},{"ruleId":"960","severity":1,"message":"961","line":15,"column":20,"nodeType":"962","messageId":"798","endLine":15,"endColumn":22},{"ruleId":"960","severity":1,"message":"961","line":59,"column":20,"nodeType":"962","messageId":"798","endLine":59,"endColumn":22},{"ruleId":"781","severity":1,"message":"789","line":14,"column":10,"nodeType":"783","messageId":"784","endLine":14,"endColumn":14},{"ruleId":"781","severity":1,"message":"782","line":17,"column":8,"nodeType":"783","messageId":"784","endLine":17,"endColumn":14},{"ruleId":"795","severity":1,"message":"1071","line":48,"column":5,"nodeType":"797","messageId":"798","endLine":48,"endColumn":13},{"ruleId":"781","severity":1,"message":"925","line":59,"column":9,"nodeType":"783","messageId":"784","endLine":59,"endColumn":22},{"ruleId":"781","severity":1,"message":"925","line":95,"column":9,"nodeType":"783","messageId":"784","endLine":95,"endColumn":22},{"ruleId":"870","severity":1,"message":"871","line":213,"column":41,"nodeType":"872","messageId":"873","endLine":213,"endColumn":43},{"ruleId":"870","severity":1,"message":"871","line":226,"column":47,"nodeType":"872","messageId":"873","endLine":226,"endColumn":49},{"ruleId":"781","severity":1,"message":"1061","line":397,"column":23,"nodeType":"783","messageId":"784","endLine":397,"endColumn":28},{"ruleId":"781","severity":1,"message":"1072","line":450,"column":21,"nodeType":"783","messageId":"784","endLine":450,"endColumn":36},{"ruleId":"781","severity":1,"message":"831","line":1,"column":17,"nodeType":"783","messageId":"784","endLine":1,"endColumn":26},{"ruleId":"781","severity":1,"message":"832","line":1,"column":28,"nodeType":"783","messageId":"784","endLine":1,"endColumn":36},{"ruleId":"781","severity":1,"message":"965","line":3,"column":18,"nodeType":"783","messageId":"784","endLine":3,"endColumn":22},{"ruleId":"781","severity":1,"message":"1073","line":3,"column":24,"nodeType":"783","messageId":"784","endLine":3,"endColumn":34},{"ruleId":"820","severity":1,"message":"1074","line":63,"column":6,"nodeType":"822","endLine":63,"endColumn":26,"suggestions":"1075"},{"ruleId":"781","severity":1,"message":"835","line":15,"column":9,"nodeType":"783","messageId":"784","endLine":15,"endColumn":15},{"ruleId":"781","severity":1,"message":"1076","line":15,"column":26,"nodeType":"783","messageId":"784","endLine":15,"endColumn":32},{"ruleId":"781","severity":1,"message":"1077","line":15,"column":34,"nodeType":"783","messageId":"784","endLine":15,"endColumn":39},{"ruleId":"820","severity":1,"message":"1078","line":93,"column":6,"nodeType":"822","endLine":93,"endColumn":22,"suggestions":"1079"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'BackTop' is defined but never used.","'SyncOutlined' is defined but never used.","'fetchRequest' is defined but never used.","'fetchRequest1' is defined but never used.","'mTop' is defined but never used.","'MTop' is defined but never used.","'pX' is defined but never used.","'addQRCode' is defined but never used.","'MyIcon' is assigned a value but never used.","'isCode' is assigned a value but never used.","no-dupe-keys","Duplicate key 'opacity'.","ObjectExpression","unexpected","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Popover' is defined but never used.","'Modal' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'SubMenu' is assigned a value but never used.","'allPetList' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.","ArrayExpression",["1080"],"'bluData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["1081"],"no-negated-in-lhs",["1082"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'_' is defined but never used.","'Header' is assigned a value but never used.","'mellaConnectStatus' is assigned a value but never used.",["1081"],["1082"],"'Select' is defined but never used.","'MaxMin' is defined but never used.","'FetchEszVet' is defined but never used.","'gender' is defined but never used.","'stopBubble' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'createFromIconfontCN' is defined but never used.","'dui' is defined but never used.","'Spin' is defined but never used.","'Draggable' is defined but never used.","'LoadingOutlined' is defined but never used.","'url' is assigned a value but never used.","Duplicate key 'imgurl'.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.","'disabled' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","'echarts' is defined but never used.","'num' is assigned a value but never used.","'wen1' is assigned a value but never used.","'placeholder1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["1083","1084"],"Unnecessary escape character: \\-.",["1085","1086"],["1087","1088"],["1089","1090"],["1091","1092"],["1093","1094"],["1095","1096"],["1097","1098"],["1099","1100"],["1101","1102"],["1103","1104"],["1105","1106"],"'measuerStatus' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'birthday' is assigned a value but never used.",["1107","1108"],["1109","1110"],["1111","1112"],["1113","1114"],"'_resend' is assigned a value but never used.","'Input' is defined but never used.","'Form' is defined but never used.","'Space' is defined but never used.","'fetchRequest2' is defined but never used.","'Switch' is defined but never used.","'Slider' is defined but never used.","'electronStore' is defined but never used.","'temporaryStorage' is defined but never used.","'parseGeoJSON' is defined but never used.","'Option' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'isUnKnow' is assigned a value but never used.","'Calendar' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'horse' is defined but never used.","'rabbit' is defined but never used.","'female' is defined but never used.","'male' is defined but never used.","'storage' is assigned a value but never used.","'errPatientId' is assigned a value but never used.","'userImage' is assigned a value but never used.","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'MyModal' is defined but never used.","'parent' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'moment' is defined but never used.","Duplicate key 'connectionKey'.","'temp' is assigned a value but never used.","'beep' is assigned a value but never used.","'unit' is assigned a value but never used.","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'px' is defined but never used.","'token' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["1115"],"'Menu' is defined but never used.","'Tooltip' is defined but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setUnits' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'echarsData', 'getOption', and 'mellaMeasureValue'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["1116"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["1117"],"'Eci' is assigned a value but never used.",["1118","1119"],["1120","1121"],["1122","1123"],["1124","1125"],["1126","1127"],["1128","1129"],["1130","1131"],["1132","1133"],["1134","1135"],["1136","1137"],["1138","1139"],["1140","1141"],["1142","1143"],["1144","1145"],["1146","1147"],["1148","1149"],"'Card' is defined but never used.","'Charlie' is defined but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["1150"],"React Hook useEffect has missing dependencies: 'mellaMeasureValue' and 'value'. Either include them or remove the dependency array.",["1151"],"'Progress' is defined but never used.","'Tag' is defined but never used.","'measuredTable_1' is defined but never used.","'measuredTable_2' is defined but never used.","'measuredTable_3' is defined but never used.","'mellaMeasurePart' is assigned a value but never used.","'memo' is assigned a value but never used.","'setDisabled' is assigned a value but never used.","'visible' is assigned a value but never used.","'setNewMemo' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.","'bounds' is assigned a value but never used.","'save' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'onStart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["1152"],"React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["1153"],"'useHistory' is defined but never used.","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["1154"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["1155"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'params' is assigned a value but never used.","'bree_id' is assigned a value but never used.","'animalcolour_id' is assigned a value but never used.","'guid' is assigned a value but never used.","'referring_clinic_id' is assigned a value but never used.","'referring_vet_id' is assigned a value but never used.","'residence_contact_id' is assigned a value but never used.","'species_id' is assigned a value but never used.","no-const-assign","'name' is constant.","const","Unnecessary escape character: \\\".","TemplateElement",["1156","1157"],["1158","1159"],"'SelectionBox' is defined but never used.","'Alert' is defined but never used.","'InfoCircleOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'biggieSave' is assigned a value but never used.","'gender' is assigned a value but never used.","'lastConnectionTime' is assigned a value but never used.","Duplicate key '194'.","'weightUnits' is assigned a value but never used.",["1160","1161"],"'petId' is assigned a value but never used.","'pas' is assigned a value but never used.","'temp15' is assigned a value but never used.","'mar' is assigned a value but never used.","'num07' is assigned a value but never used.","'selectDevice' is assigned a value but never used.","'PropTypes' is defined but never used.","'message' is defined but never used.",["1162"],"'header' is assigned a value but never used.","Duplicate key 'disabled'.","'assignOwnerName' is assigned a value but never used.","'PageHeader' is defined but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["1163"],"'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["1164"],{"desc":"1165","fix":"1166"},"no-global-assign","no-unsafe-negation",{"messageId":"1167","fix":"1168","desc":"1169"},{"messageId":"1170","fix":"1171","desc":"1172"},{"messageId":"1167","fix":"1173","desc":"1169"},{"messageId":"1170","fix":"1174","desc":"1172"},{"messageId":"1167","fix":"1175","desc":"1169"},{"messageId":"1170","fix":"1176","desc":"1172"},{"messageId":"1167","fix":"1177","desc":"1169"},{"messageId":"1170","fix":"1178","desc":"1172"},{"messageId":"1167","fix":"1179","desc":"1169"},{"messageId":"1170","fix":"1180","desc":"1172"},{"messageId":"1167","fix":"1181","desc":"1169"},{"messageId":"1170","fix":"1182","desc":"1172"},{"messageId":"1167","fix":"1183","desc":"1169"},{"messageId":"1170","fix":"1184","desc":"1172"},{"messageId":"1167","fix":"1185","desc":"1169"},{"messageId":"1170","fix":"1186","desc":"1172"},{"messageId":"1167","fix":"1187","desc":"1169"},{"messageId":"1170","fix":"1188","desc":"1172"},{"messageId":"1167","fix":"1189","desc":"1169"},{"messageId":"1170","fix":"1190","desc":"1172"},{"messageId":"1167","fix":"1191","desc":"1169"},{"messageId":"1170","fix":"1192","desc":"1172"},{"messageId":"1167","fix":"1193","desc":"1169"},{"messageId":"1170","fix":"1194","desc":"1172"},{"messageId":"1167","fix":"1195","desc":"1169"},{"messageId":"1170","fix":"1196","desc":"1172"},{"messageId":"1167","fix":"1197","desc":"1169"},{"messageId":"1170","fix":"1198","desc":"1172"},{"messageId":"1167","fix":"1199","desc":"1169"},{"messageId":"1170","fix":"1200","desc":"1172"},{"messageId":"1167","fix":"1201","desc":"1169"},{"messageId":"1170","fix":"1202","desc":"1172"},{"desc":"1203","fix":"1204"},{"desc":"1205","fix":"1206"},{"desc":"1207","fix":"1208"},{"messageId":"1167","fix":"1209","desc":"1169"},{"messageId":"1170","fix":"1210","desc":"1172"},{"messageId":"1167","fix":"1211","desc":"1169"},{"messageId":"1170","fix":"1212","desc":"1172"},{"messageId":"1167","fix":"1213","desc":"1169"},{"messageId":"1170","fix":"1214","desc":"1172"},{"messageId":"1167","fix":"1215","desc":"1169"},{"messageId":"1170","fix":"1216","desc":"1172"},{"messageId":"1167","fix":"1217","desc":"1169"},{"messageId":"1170","fix":"1218","desc":"1172"},{"messageId":"1167","fix":"1219","desc":"1169"},{"messageId":"1170","fix":"1220","desc":"1172"},{"messageId":"1167","fix":"1221","desc":"1169"},{"messageId":"1170","fix":"1222","desc":"1172"},{"messageId":"1167","fix":"1223","desc":"1169"},{"messageId":"1170","fix":"1224","desc":"1172"},{"messageId":"1167","fix":"1225","desc":"1169"},{"messageId":"1170","fix":"1226","desc":"1172"},{"messageId":"1167","fix":"1227","desc":"1169"},{"messageId":"1170","fix":"1228","desc":"1172"},{"messageId":"1167","fix":"1229","desc":"1169"},{"messageId":"1170","fix":"1230","desc":"1172"},{"messageId":"1167","fix":"1231","desc":"1169"},{"messageId":"1170","fix":"1232","desc":"1172"},{"messageId":"1167","fix":"1233","desc":"1169"},{"messageId":"1170","fix":"1234","desc":"1172"},{"messageId":"1167","fix":"1235","desc":"1169"},{"messageId":"1170","fix":"1236","desc":"1172"},{"messageId":"1167","fix":"1237","desc":"1169"},{"messageId":"1170","fix":"1238","desc":"1172"},{"messageId":"1167","fix":"1239","desc":"1169"},{"messageId":"1170","fix":"1240","desc":"1172"},{"desc":"1241","fix":"1242"},{"desc":"1243","fix":"1244"},{"desc":"1245","fix":"1246"},{"desc":"1247","fix":"1248"},{"desc":"1249","fix":"1250"},{"desc":"1251","fix":"1252"},{"messageId":"1167","fix":"1253","desc":"1169"},{"messageId":"1170","fix":"1254","desc":"1172"},{"messageId":"1167","fix":"1255","desc":"1169"},{"messageId":"1170","fix":"1256","desc":"1172"},{"messageId":"1167","fix":"1257","desc":"1169"},{"messageId":"1170","fix":"1258","desc":"1172"},{"desc":"1245","fix":"1259"},{"desc":"1260","fix":"1261"},{"desc":"1262","fix":"1263"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1264","text":"1265"},"removeEscape",{"range":"1266","text":"1267"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1268","text":"1269"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1270","text":"1267"},{"range":"1271","text":"1269"},{"range":"1272","text":"1267"},{"range":"1273","text":"1269"},{"range":"1274","text":"1267"},{"range":"1275","text":"1269"},{"range":"1276","text":"1267"},{"range":"1277","text":"1269"},{"range":"1278","text":"1267"},{"range":"1279","text":"1269"},{"range":"1280","text":"1267"},{"range":"1281","text":"1269"},{"range":"1282","text":"1267"},{"range":"1283","text":"1269"},{"range":"1284","text":"1267"},{"range":"1285","text":"1269"},{"range":"1286","text":"1267"},{"range":"1287","text":"1269"},{"range":"1288","text":"1267"},{"range":"1289","text":"1269"},{"range":"1290","text":"1267"},{"range":"1291","text":"1269"},{"range":"1292","text":"1267"},{"range":"1293","text":"1269"},{"range":"1294","text":"1267"},{"range":"1295","text":"1269"},{"range":"1296","text":"1267"},{"range":"1297","text":"1269"},{"range":"1298","text":"1267"},{"range":"1299","text":"1269"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"1300","text":"1301"},"Update the dependencies array to be: [echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",{"range":"1302","text":"1303"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"1304","text":"1305"},{"range":"1306","text":"1267"},{"range":"1307","text":"1269"},{"range":"1308","text":"1267"},{"range":"1309","text":"1269"},{"range":"1310","text":"1267"},{"range":"1311","text":"1269"},{"range":"1312","text":"1267"},{"range":"1313","text":"1269"},{"range":"1314","text":"1267"},{"range":"1315","text":"1269"},{"range":"1316","text":"1267"},{"range":"1317","text":"1269"},{"range":"1318","text":"1267"},{"range":"1319","text":"1269"},{"range":"1320","text":"1267"},{"range":"1321","text":"1269"},{"range":"1322","text":"1267"},{"range":"1323","text":"1269"},{"range":"1324","text":"1267"},{"range":"1325","text":"1269"},{"range":"1326","text":"1267"},{"range":"1327","text":"1269"},{"range":"1328","text":"1267"},{"range":"1329","text":"1269"},{"range":"1330","text":"1267"},{"range":"1331","text":"1269"},{"range":"1332","text":"1267"},{"range":"1333","text":"1269"},{"range":"1334","text":"1267"},{"range":"1335","text":"1269"},{"range":"1336","text":"1267"},{"range":"1337","text":"1269"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"1338","text":"1339"},"Update the dependencies array to be: [mellaConnectStatus, mellaMeasureValue, value]",{"range":"1340","text":"1341"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1342","text":"1343"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1344","text":"1345"},"Update the dependencies array to be: [listDate]",{"range":"1346","text":"1347"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1348","text":"1349"},{"range":"1350","text":"1267"},{"range":"1351","text":"1269"},{"range":"1352","text":"1267"},{"range":"1353","text":"1269"},{"range":"1354","text":"1267"},{"range":"1355","text":"1269"},{"range":"1356","text":"1343"},"Update the dependencies array to be: [hardwareList, selectHardwareType]",{"range":"1357","text":"1358"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"1359","text":"1360"},[6407,6409],"[_noUSB, _send, blueSearch]",[68657,68658],"",[68657,68657],"\\",[68763,68764],[68763,68763],[69601,69602],[69601,69601],[69707,69708],[69707,69707],[70563,70564],[70563,70563],[70669,70670],[70669,70669],[71973,71974],[71973,71973],[72079,72080],[72079,72079],[72879,72880],[72879,72879],[72985,72986],[72985,72985],[73880,73881],[73880,73880],[73986,73987],[73986,73986],[99071,99072],[99071,99071],[99177,99178],[99177,99177],[99764,99765],[99764,99764],[99870,99871],[99870,99870],[885,887],"[initSelectVale, listArr]",[5519,5536],"[echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",[6119,6139],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[25342,25343],[25342,25342],[25448,25449],[25448,25448],[26393,26394],[26393,26393],[26499,26500],[26499,26499],[27478,27479],[27478,27478],[27584,27585],[27584,27584],[29145,29146],[29145,29145],[29251,29252],[29251,29251],[30158,30159],[30158,30158],[30264,30265],[30264,30264],[31282,31283],[31282,31282],[31388,31389],[31388,31388],[49726,49727],[49726,49726],[49832,49833],[49832,49832],[50528,50529],[50528,50528],[50634,50635],[50634,50634],[7656,7663],"[callBack, prediction, timeNum, value]",[8223,8243],"[mellaConnectStatus, mellaMeasureValue, value]",[5949,5961],"[getPetTemperatureData, petMessage]",[6114,6123],"[getPetTemperatureData, reRender, saveNum]",[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]",[12789,12790],[12789,12789],[12803,12804],[12803,12803],[75103,75104],[75103,75103],[8363,8375],[2600,2620],"[hardwareList, selectHardwareType]",[2911,2927],"[hardwareReduce, weight]"]