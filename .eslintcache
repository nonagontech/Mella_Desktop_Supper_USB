[{"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\index.js":"1","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx":"2","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx":"3","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\doctorSelectExam\\AddYuding.jsx":"4","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\button\\Button.js":"5","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil.js":"6","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\selectionBox\\SelectionBox.jsx":"7","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"8","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil3.js":"9","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx":"10","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\App.js":"11","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx":"12","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\help\\Help.jsx":"13","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\PetsUI.jsx":"14","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx":"15","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"16","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\choose\\Choose.jsx":"17","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx":"18","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil2.js":"19","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\userAction.js":"20","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\hardwareAction.js":"21","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\HardListModal.jsx":"22","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\index.js":"23","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\workPlace\\WorkPlace.jsx":"24","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\home\\Home.jsx":"25","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\reducers\\index.js":"26","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\heard\\Heard.js":"27","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\index.jsx":"28","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"29","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx":"30","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\AddDevice.jsx":"31","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\index.js":"32","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\petTable\\index.jsx":"33","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"34","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\gender.js":"35","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\myModal\\MyModal.jsx":"36","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\minClose\\MinClose.js":"37","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil4.js":"38","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\axios\\http.js":"39","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\areaCode\\country.js":"40","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\biggiePage\\index.jsx":"41"},{"size":573,"mtime":1654138261979,"results":"42","hashOfConfig":"43"},{"size":6007,"mtime":1653893163212,"results":"44","hashOfConfig":"43"},{"size":7357,"mtime":1653893163118,"results":"45","hashOfConfig":"43"},{"size":12945,"mtime":1655469052016,"results":"46","hashOfConfig":"43"},{"size":1041,"mtime":1653893163590,"results":"47","hashOfConfig":"43"},{"size":3403,"mtime":1653893163227,"results":"48","hashOfConfig":"43"},{"size":3371,"mtime":1653893163636,"results":"49","hashOfConfig":"43"},{"size":12178,"mtime":1655469052096,"results":"50","hashOfConfig":"43"},{"size":2624,"mtime":1653893163227,"results":"51","hashOfConfig":"43"},{"size":1273,"mtime":1655469219204,"results":"52","hashOfConfig":"43"},{"size":7424,"mtime":1655469051969,"results":"53","hashOfConfig":"43"},{"size":40704,"mtime":1653893163103,"results":"54","hashOfConfig":"43"},{"size":4924,"mtime":1653893163149,"results":"55","hashOfConfig":"43"},{"size":6248,"mtime":1655469052035,"results":"56","hashOfConfig":"43"},{"size":1502,"mtime":1655469052069,"results":"57","hashOfConfig":"43"},{"size":8196,"mtime":1653893163636,"results":"58","hashOfConfig":"43"},{"size":3737,"mtime":1653893163056,"results":"59","hashOfConfig":"43"},{"size":13197,"mtime":1653893163071,"results":"60","hashOfConfig":"43"},{"size":2667,"mtime":1653893163227,"results":"61","hashOfConfig":"43"},{"size":293,"mtime":1655469052117,"results":"62","hashOfConfig":"43"},{"size":3550,"mtime":1655469052112,"results":"63","hashOfConfig":"43"},{"size":7253,"mtime":1655469052032,"results":"64","hashOfConfig":"43"},{"size":356,"mtime":1655469052054,"results":"65","hashOfConfig":"43"},{"size":9743,"mtime":1653893163212,"results":"66","hashOfConfig":"43"},{"size":5372,"mtime":1655781447721,"results":"67","hashOfConfig":"43"},{"size":249,"mtime":1655469052122,"results":"68","hashOfConfig":"43"},{"size":50596,"mtime":1655469052130,"results":"69","hashOfConfig":"43"},{"size":2186,"mtime":1655469052104,"results":"70","hashOfConfig":"43"},{"size":2311,"mtime":1655469052092,"results":"71","hashOfConfig":"43"},{"size":13023,"mtime":1653893163087,"results":"72","hashOfConfig":"43"},{"size":14708,"mtime":1655469052027,"results":"73","hashOfConfig":"43"},{"size":91,"mtime":1655469052114,"results":"74","hashOfConfig":"43"},{"size":12104,"mtime":1655469052048,"results":"75","hashOfConfig":"43"},{"size":5178,"mtime":1653893163118,"results":"76","hashOfConfig":"43"},{"size":152,"mtime":1653893163605,"results":"77","hashOfConfig":"43"},{"size":1410,"mtime":1653893163621,"results":"78","hashOfConfig":"43"},{"size":2445,"mtime":1653893163621,"results":"79","hashOfConfig":"43"},{"size":3126,"mtime":1653893163227,"results":"80","hashOfConfig":"43"},{"size":846,"mtime":1653893163590,"results":"81","hashOfConfig":"43"},{"size":18925,"mtime":1653893163243,"results":"82","hashOfConfig":"43"},{"size":3620,"mtime":1655469052072,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xy2jmh",{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"96"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"91"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"180","messages":"181","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\index.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx",["182","183","184","185"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx",["186","187"],"import React, { Component, } from 'react'\r\nimport {\r\n    Button,\r\n    Input,\r\n    Form,\r\n    Select\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './esyVetLogin.less'\r\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\nexport default class EzyNetLogin extends Component {\r\n\r\n    state = {\r\n        isRemember: false,\r\n        client_id: '',\r\n        client_secret: '',\r\n        partner_id: ''\r\n    }\r\n\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('middle')\r\n        storage.ezyVetToken = ''\r\n    }\r\n    componentWillMount () {\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin1 !== '', storage.ezyVetToken1 !== undefined, `${storage.ezyVetToken1}` !== 'undefined');\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin !== '', storage.ezyVetToken !== undefined, `${storage.ezyVetToken}` !== 'undefined');\r\n        if (storage.ezyVetLogin !== '' && storage.ezyVetToken !== undefined && `${storage.ezyVetToken}` !== 'undefined') {\r\n            try {\r\n                let data = JSON.parse(storage.ezyVetLogin)\r\n                console.log('--', data);\r\n                this.setState({\r\n                    isRemember: data.isRemember,\r\n                    client_id: data.client_id,\r\n                    client_secret: data.client_secret,\r\n                    partner_id: data.partner_id\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 10 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 14 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 10,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 8,\r\n                    offset: 7,\r\n                },\r\n            },\r\n        };\r\n\r\n        const _next = (values) => {\r\n            console.log('Received values of form: ', values);\r\n            let parames = {\r\n                clientId: values.client_id,\r\n                clientSecret: values.client_secret,\r\n                partnerId: values.partner_id,\r\n            }\r\n            console.log(parames);\r\n            fetchRequest2('/EzyVet/ezyvetauth', 'GET', parames, '')\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res && res.msg === 'success') {\r\n\r\n                        storage.ezyVetToken = res.data\r\n                        if (this.state.isRemember) {\r\n                            storage.ezyVetLogin = JSON.stringify({\r\n                                client_id: values.client_id,\r\n                                client_secret: values.client_secret,\r\n                                partner_id: values.partner_id,\r\n                                isRemember: this.state.isRemember\r\n                            })\r\n                        } else {\r\n                            storage.ezyVetLogin = ''\r\n                        }\r\n                        storage.selectTime = ''\r\n                        storage.ezyVetReLogin = JSON.stringify({  //如果令牌过期了，需要重新输入信息重新获取令牌\r\n                            client_id: values.client_id,\r\n                            client_secret: values.client_secret,\r\n                            partner_id: values.partner_id,\r\n                        })\r\n\r\n                        this.props.history.push('EzyVetSelectTime')\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n\r\n        }\r\n        let { client_id, client_secret, partner_id } = this.state\r\n\r\n        return (\r\n            <div id=\"eszVetLogin\">\r\n                {/* 关闭缩小 */}\r\n                <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                    onClick1={() => this.props.history.push('/page1')}\r\n                />\r\n                <div className=\"text\">\r\n                    Please enter your user information\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form\r\n                        {...formItemLayout}\r\n                        name=\"register\"\r\n                        onFinish={_next}\r\n                        initialValues={{\r\n                            client_id, client_secret, partner_id\r\n                        }}\r\n\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"client_id\"\r\n                            label=\"Client ID\"\r\n                            rules={[{ required: true, message: 'Please input your Client ID!', whitespace: true }]}\r\n\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"client_secret\"\r\n                            label=\"Client Secret\"\r\n                            rules={[{ required: true, message: 'Please input your Client Secret!', whitespace: true }]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"partner_id\"\r\n                            label=\"Partner ID\"\r\n                            rules={[{ required: true, message: 'Please input your Partner ID!', whitespace: true }]}\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            {...tailFormItemLayout}\r\n                        >\r\n                            <div className=\"btn\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    htmlType=\"submit\"\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"remember\">\r\n                    <p>Stay Signed In:</p>\r\n                    <div className=\"box\" onClick={() => {\r\n                        let { isRemember } = this.state\r\n                        this.setState({\r\n                            isRemember: !isRemember\r\n                        })\r\n                        storage.isRemember = !isRemember\r\n                    }}>\r\n                        {this.state.isRemember && <img src={dui} alt=\"\" />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}",["188","189"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\doctorSelectExam\\AddYuding.jsx",["190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\button\\Button.js",[],["206","207"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil.js",["208","209","210","211"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\selectionBox\\SelectionBox.jsx",["212"],"\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './selectionBox.less'\r\nimport { px } from './../px'\r\nimport { stopBubble } from './../current'\r\n\r\nimport blackTriangle from './../../assets/img/blackTriangle.png'\r\n\r\n\r\nconst SelectionBox = ({ listArr, clickItem, clickitemBgc, clickItemColor, initSelectVale }) => {\r\n    const [selectValue, setSelectValue] = useState('')\r\n    const [mouseValue, setMouseValue] = useState('')\r\n    const [showSelect, setShowSelect] = useState(false)\r\n    // const [bacColor, setBacColor] = useState('#fff')\r\n    // const [textColor, setTextColor] = useState('#000')\r\n\r\n    useEffect(() => {\r\n        console.log(listArr[0]);\r\n        setSelectValue(listArr[0].value)\r\n        setMouseValue(listArr[0].value)\r\n        if (initSelectVale) {\r\n            setSelectValue(initSelectVale)\r\n        }\r\n    }, [])\r\n\r\n    const selection = () => {\r\n        let option = listArr.map((item, index) => {\r\n            let bacColor = item.value === selectValue ? clickitemBgc : item.value === mouseValue ? '#e7e7e7' : '#fff'\r\n            let textColor = item.value === selectValue ? clickItemColor : '#000'\r\n\r\n\r\n            // setBacColor(bacColor1)\r\n            // setTextColor(textColor1)\r\n            return <li\r\n                key={item.key}\r\n                style={{ paddingTop: px(5), paddingBottom: px(5), backgroundColor: bacColor, color: textColor }}\r\n                onClick={() => {\r\n                    setSelectValue(item.value)\r\n                    setShowSelect(false)\r\n                    clickItem(item)\r\n                }}\r\n                onMouseMove={() => {\r\n                    console.log();\r\n                    if (item.value !== selectValue) {\r\n                        setMouseValue(item.value)\r\n                    }\r\n                }}\r\n                onMouseLeave={() => {\r\n                    if (item.value !== selectValue) {\r\n                        // setBacColor('#fff')\r\n                        setMouseValue('')\r\n                    }\r\n                }}\r\n            >{item.value}</li>\r\n        })\r\n        return (\r\n            <ul>\r\n                {option}\r\n            </ul>\r\n        )\r\n\r\n\r\n    }\r\n    return (\r\n        <div className='selectionbox'>\r\n\r\n            <div className=\"select flex\" style={{ height: px(26) }}>\r\n                <div className=\"flex box\" onClick={(e) => {\r\n                    setShowSelect(true)\r\n                    stopBubble(e)\r\n                }}>\r\n                    <p style={{ fontSize: px(16), }}>{selectValue}</p>\r\n                    <img src={blackTriangle} alt=\"\" style={{ height: '50%' }} />\r\n                </div>\r\n\r\n                {\r\n                    showSelect &&\r\n                    true &&\r\n                    <div className=\"sortList\" style={{ top: px(26), }}>\r\n                        {selection()}\r\n                    </div>\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\nSelectionBox.propTypes = {\r\n    listArr: PropTypes.array.isRequired,\r\n    clickItem: PropTypes.func,\r\n    clickitemBgc: PropTypes.string,\r\n    clickItemColor: PropTypes.string,\r\n    initSelectVale: PropTypes.string\r\n\r\n\r\n}\r\nSelectionBox.defaultProps = {\r\n    clickitemBgc: '#e1206d',\r\n    clickItemColor: '#fff',\r\n    initSelectVale: '',\r\n    clickItem: () => {\r\n\r\n    }\r\n}\r\nexport default SelectionBox","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["213","214","215","216","217","218","219","220","221","222","223"],"import React, {\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport { Button, Progress, Space, Table, Tag, Badge, Modal, Popconfirm, message } from 'antd';\r\nimport measuredTable_1 from './../../../assets/img/measuredTable_1.png';\r\nimport measuredTable_2 from './../../../assets/img/measuredTable_2.png';\r\nimport measuredTable_3 from './../../../assets/img/measuredTable_3.png';\r\nimport EditCircle from './../../../assets/img/EditCircle.png';\r\nimport Delete from './../../../assets/img/Delete.png';\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun\r\n} from '../../../store/actions';\r\nimport Draggable from \"react-draggable\";\r\nimport { fetchRequest } from '../../../utils/FetchUtil1';\r\nimport moment from 'moment';\r\nimport './measuredData.less';\r\n\r\nconst MeasuredData = ({ petMessage, hardwareMessage, setMellaConnectStatusFun }) => {\r\n    let { mellaMeasureValue, mellaConnectStatus, mellaMeasurePart } = hardwareMessage;\r\n    let { petId, memo } = petMessage;\r\n    let storage = window.localStorage;\r\n    const [petTemperatureData, setPetTemperatureData] = useState([]);//存储宠物历史温度数据\r\n    const [disabled, setDisabled] = useState(true);//model是否可拖拽\r\n    const [visible, setVisible] = useState(false);//model框是否显示\r\n    const [newMemo, setNewMemo] = useState('');//note内容\r\n    const [petMessages, setPetMessages] = useState({});//接收点击了那个的值\r\n    const [saveType, setSaveType] = useState(false);//是否隐藏按钮\r\n    const [bounds, setBounds] = useState({ left: 0, top: 0, bottom: 0, right: 0 });\r\n    //表格渲染\r\n    const columns = [\r\n        {\r\n            title: 'Dat',\r\n            dataIndex: 'createTime',\r\n            with: 200,\r\n            render: (text, record) => (moment(text).format('MMM D')),\r\n\r\n        },\r\n        {\r\n            title: 'Tim',\r\n            dataIndex: 'createTime',\r\n            with: 150,\r\n            render: (text, record) => (moment(text).format('hh:mm A')),\r\n        },\r\n        {\r\n            title: 'Temp',\r\n            dataIndex: 'temperature',\r\n            with: 150,\r\n            render: (text, record) => (\r\n                <Badge color={color()} text={text} />\r\n            ),\r\n        },\r\n        {\r\n            title: 'Placeme',\r\n            dataIndex: 'petVitalTypeId',\r\n            render: (text, record) => {\r\n                if (text === 1) {\r\n                    return <img src={measuredTable_2} />\r\n                } else if (text === 3) {\r\n                    return <img src={measuredTable_1} />\r\n                } else if (text === 4) {\r\n                    return <img src={measuredTable_3} />\r\n                } else {\r\n                    return <img src={measuredTable_2} />\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Note',\r\n            dataIndex: 'memo',\r\n            render: (text, record) => (text)\r\n        },\r\n        {\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <>\r\n                    <img\r\n                        className='operationIcon'\r\n                        src={EditCircle}\r\n                        onClick={() => {\r\n                            setVisible(true);\r\n                            setPetMessages(record);\r\n                        }}\r\n                    />\r\n                    <Popconfirm title=\"Sure to delete?\" onConfirm={() => deletePetMessage(record.examId)}>\r\n                        <img src={Delete} />\r\n                    </Popconfirm>\r\n                </>\r\n            ),\r\n        },\r\n    ]\r\n    //根据温度判断指示文字颜色\r\n    const color = () => {\r\n        if (mellaMeasureValue > 40) {\r\n            return '#e1206d'\r\n        } else if (_.inRange(_.round(mellaMeasureValue), 38, 40)) {\r\n            return '#58bde6'\r\n        } else {\r\n            return '#98da86'\r\n        }\r\n    }\r\n    //圆滑里面的文字\r\n    const ProgressTitle = (percent) => {\r\n        //根据温度判断指示文字\r\n        const title = () => {\r\n            if (mellaMeasureValue > 40) {\r\n                return 'Danger'\r\n            } else if (_.inRange(_.round(mellaMeasureValue), 38, 40)) {\r\n                return 'Normal'\r\n            } else {\r\n                return 'Low'\r\n            }\r\n        }\r\n        return (\r\n            <>\r\n                <p style={{ color: { color } }} className='ProgressTitle'>{percent}\r\n                    <span style={{ color: { color } }} className='symbol'>℃</span>\r\n                </p>\r\n                <p style={{ color: { color } }} className='ProgressTitle'>{title()}</p>\r\n            </>\r\n\r\n        );\r\n    }\r\n    //获取历史宠物温度数据\r\n    const getPetTemperatureData = () => {\r\n        fetchRequest(`/pet/getPetExamByPetId/${petId}`, 'GET', '')\r\n            .then(res => {\r\n                console.log('历史温度记录', res);\r\n                if (res.flag === true) {\r\n                    setPetTemperatureData(res.data);\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n    //返回准备测量界面\r\n    const backConnectedPage = () => {\r\n        if (mellaConnectStatus != 'connected') {\r\n            setMellaConnectStatusFun('connected');\r\n        } else {\r\n            setMellaConnectStatusFun('disconnected');\r\n        }\r\n    }\r\n    //保存数据\r\n    const saveData = () => {\r\n        let petVitalId = null;\r\n        switch (mellaMeasurePart) {\r\n            case '腋温': petVitalId = 1; break;\r\n            case '肛温': petVitalId = 3; break;\r\n            case '耳温': petVitalId = 4; break;\r\n            default: petVitalId = 1; break;\r\n        }\r\n        let params = {\r\n            petId: petId,\r\n            doctorId: storage.userId,\r\n            temperature: mellaMeasureValue,\r\n            petVitalTypeId: petVitalId,\r\n            memo: ''\r\n        }\r\n        fetchRequest('/exam/addClamantPetExam', 'POST', params)\r\n            .then(res => {\r\n                if (res.flag === true) {\r\n                    getPetTemperatureData();\r\n                    setSaveType(true);\r\n                    message.success('save successfully');\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err);\r\n            })\r\n    }\r\n    //保存note\r\n    const save = () => {\r\n        let datas = {\r\n            memo: newMemo\r\n        }\r\n        fetchRequest(`/pet/updatePetExam/${petMessages.examId}`, 'POST', datas)\r\n            .then(res => {\r\n                setVisible(false);\r\n                getPetTemperatureData();\r\n            })\r\n            .catch(err => {\r\n                setVisible(false);\r\n                console.log(err);\r\n            })\r\n\r\n    }\r\n    //删除历史温度记录\r\n    const deletePetMessage = (examId) => {\r\n        fetchRequest(`/pet/deletePetExamByExamId/${examId}`, 'DELETE')\r\n            .then(res => {\r\n                if (res.flag === true) {\r\n                    message.success('Successfully Delete');\r\n                    getPetTemperatureData();\r\n                } else {\r\n                    message.error('Fail To Delete');\r\n                }\r\n            })\r\n\r\n    }\r\n    //关闭弹窗\r\n    const handleCancel = (e) => {\r\n        setVisible(false);\r\n    };\r\n    let draggleRef = React.createRef();\r\n    const onStart = (event, uiData) => {\r\n        const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n        const targetRect = draggleRef?.current?.getBoundingClientRect();\r\n        setBounds({\r\n            left: -targetRect?.left + uiData?.x,\r\n            right: clientWidth - (targetRect?.right - uiData?.x),\r\n            top: -targetRect?.top + uiData?.y,\r\n            bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPetTemperatureData();\r\n        return (() => { });\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className='measurementBox'>\r\n                <Progress\r\n                    type=\"dashboard\"\r\n                    percent={_.round(mellaMeasureValue, 1)}\r\n                    gapDegree={30}\r\n                    width={'260px'}\r\n                    strokeWidth={'8'}\r\n                    format={percent => ProgressTitle(percent)}\r\n                    strokeColor={{\r\n                        '0%': '#7bd163',\r\n                        '100%': '#19ade4',\r\n                    }}\r\n                />\r\n                {\r\n                    !saveType && (\r\n                        <div className='buttonBox'>\r\n                            <Button type=\"danger\" shape=\"round\" color='#e1206d' onClick={() => backConnectedPage()}>Discard</Button>\r\n                            <Button type=\"danger\" shape=\"round\" color='#e1206d' onClick={() => saveData()}>Save</Button>\r\n                        </div>\r\n                    )\r\n                }\r\n                <div className='listTitleBox'>\r\n                    <p className='listTitle'>History</p>\r\n                </div>\r\n                <Table\r\n                    rowKey={'examId'}\r\n                    columns={columns}\r\n                    dataSource={petTemperatureData}\r\n                    className='measuredTable'\r\n                    pagination={false}\r\n                >\r\n                </Table>\r\n            </div>\r\n            {/*修改note弹窗 */}\r\n            <Modal\r\n                title={\r\n                    <div\r\n                        style={{\r\n                            width: '100%',\r\n                            cursor: 'move',\r\n                            height: '20px',\r\n                            textAlign: 'center'\r\n                        }}\r\n                        onMouseOver={() => {\r\n                            if (disabled) {\r\n                                setDisabled(false);\r\n                            }\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            setDisabled(true);\r\n                        }}\r\n                        onFocus={() => { }}\r\n                        onBlur={() => { }}\r\n                    >\r\n                        Edit Note\r\n                    </div>\r\n                }\r\n                visible={visible}\r\n                onCancel={handleCancel}\r\n                modalRender={(modal) => (\r\n                    <Draggable\r\n                        disabled={disabled}\r\n                        bounds={bounds}\r\n                        onStart={(event, uiData) => onStart(event, uiData)}\r\n                    >\r\n                        <div ref={draggleRef}>{modal}</div>\r\n                    </Draggable>\r\n                )}\r\n                footer={\r\n                    [] // 设置footer为空，去掉 取消 确定默认按钮\r\n                }\r\n                destroyOnClose={true}\r\n            >\r\n                <div className=\"noteModal\">\r\n                    <div className=\"noteModalText\">\r\n                        <p style={{ width: '80px' }}>Notes</p>\r\n                        <textarea\r\n                            rows=\"5\"\r\n                            cols=\"40\"\r\n                            style={{ textIndent: '10px' }}\r\n                            // value={petMessages.memo}\r\n                            onChange={(val) => {\r\n                                setNewMemo(val.target.value);\r\n                            }}\r\n                        >\r\n                        </textarea>\r\n                    </div>\r\n                    <div className=\"btn\" style={{ width: '60%' }} onClick={() => save()}>Save Changes</div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    state => ({\r\n        petMessage: state.petReduce.petDetailInfo,\r\n        hardwareMessage: state.hardwareReduce,\r\n    }),\r\n    {\r\n        selectHardwareModalShowFun,\r\n        petSortTypeFun,\r\n        petDetailInfoFun,\r\n        setMellaConnectStatusFun,\r\n        setMellaMeasureValueFun,\r\n        setMellaPredictValueFun,\r\n        setMellaMeasurePartFun\r\n    }\r\n)(MeasuredData);","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil3.js",["224","225","226","227"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx",["228","229","230","231","232","233"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\App.js",["234","235"],"import React, { Component } from 'react'\r\n\r\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom'\r\n\r\nimport Home from './components/home/Home'\r\nimport Choose from './components/choose/Choose'\r\nimport EzyVetLogin from './components/ezyVetLogin/EzyVetLogin'\r\nimport EzyVetSelectTime from './components/ezyVetSelectTime/EzyVetSelectTime'\r\nimport SelectMella from './components/selectMella/SelectMella'\r\nimport APIkey from './components/apiKey/APIKey'\r\nimport VerifyOrganizationInformation from './components/selectLocation/VerifyOrganizationInformation'\r\nimport EzyVetSelectExam from './components/ezyVetSelectExam/EzyVetSelectExam'\r\nimport DoctorSelectExam from './components/doctorSelectExam/DoctorSelectScheduledExam'\r\n\r\nimport DoctorSelectAllExam from './components/doctorSelectExam/DoctorSelectAllExam'\r\nimport Praviders from './components/praviders/Praviders'\r\nimport SelectExam from \"./components/selectExam/SelectExam\";\r\n\r\nimport Mesasure from \"./components/measure/Mesasure\";\r\nimport NorMalMeasurement from \"./components/measure/NorMalMeasurement\";\r\n\r\nimport MaxMinReturn from './utils/maxminreturn/MaxMinReturn'\r\nimport EditPetInfo from './components/editPetInfo/EditPetInfo'\r\nimport WorkPlace from './components/workPlace/WorkPlace'\r\n\r\nimport DoctorAddPet from './components/doctorAddPet/DoctorAddPet'\r\nimport AddYuding from './components/doctorSelectExam/AddYuding'\r\n//登录部分\r\nimport SignIn from './components/signIn/SignIn'\r\nimport ForgotPassword from './components/signIn/forgotPassword/ForgotPassword'\r\nimport ResetPassword from './components/signIn/resetPassword/ResetPassword'\r\n\r\nimport ScanCodeLogin from './components/signIn/scanCodeLogin/ScanCodeLogin'\r\n\r\n//邮箱注册的整体部分\r\nimport VetPrifile from './components/createAccount/vetProfile/VetPrifile'\r\nimport JoinOrganizationByOption from './components/createAccount/joinOrganizationByOption/JoinOrganizationByOption'\r\nimport FindMyOrganization from './components/createAccount/findMyOrganization/FindMyOrganization'\r\nimport FindMyWorkplace from './components/createAccount/findMyWorkplace/FindMyWorkplace'\r\nimport IsHavePMS from './components/createAccount/ishavePMS/IsHavePMS'\r\nimport VerifyEmail from './components/createAccount/verifyEmail/index'\r\nimport NewOrganization from './components/createAccount/newOrganization/NewOrganization'\r\nimport NewWorkplace from './components/createAccount/newWorkplace/NewWorkplace'\r\n\r\nimport InviteTeam from './components/createAccount/inviteTeam/InviteTeam'\r\n\r\n//options\r\nimport Help from './components/menuOptions/help/Help'\r\nimport Unassigned from './components/menuOptions/unassigned/Unassigned'\r\nimport Settings from './components/menuOptions/settings/Settings'\r\nimport AdvancedSettings from './components/menuOptions/advancedSettings/AdvancedSettings'\r\nimport Invite from './components/menuOptions/invite/Invite'\r\nimport PetAndParents from './components/menuOptions/petAndParents/PetAndParents'\r\nimport EditParent from './components/menuOptions/editParent/EditParent'\r\n// import AdminAddPet from './components/menuOptions/adminAddPet/AdminAddPet'\r\nimport Veterinarians from './components/menuOptions/admin_VetProfile/Veterinarians'\r\nimport AddDevice from './components/menuOptions/addDevice/AddDevice'\r\nimport ConnectWorkplace from './components/menuOptions/orgAndPractice/ConnectWorkplace'\r\nimport NewOrg from './components/menuOptions/orgAndPractice/NewOrganization'\r\nimport Team from './components/menuOptions/orgAndPractice/InviteTeam'\r\n\r\nimport MainBody from './components/mainbody'\r\n\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/page1\" component={Choose} />\r\n          <Route exact path=\"/ezyVetLogin\" component={EzyVetLogin} />\r\n          <Route exact path=\"/EzyVetSelectTime\" component={EzyVetSelectTime} />\r\n          <Route exact path=\"/EzyVetSelectExam\" component={EzyVetSelectExam} />\r\n          <Route exact path=\"/page2\" component={APIkey} />\r\n          <Route exact path=\"/page3\" component={VerifyOrganizationInformation} />\r\n          <Route exact path=\"/page4\" component={SelectMella} />\r\n\r\n\r\n          <Route exact path=\"/VetSpireSelectExam\" component={SelectExam} />\r\n          <Route exact path=\"/page7\" component={MaxMinReturn} />\r\n\r\n          <Route exact path=\"/page8\" component={Mesasure} />\r\n          <Route exact path=\"/page9\" component={EditPetInfo} />\r\n          <Route exact path=\"/page10\" component={NorMalMeasurement} />\r\n          {/* <Route exact path=\"/page10\" component={MainBody} /> */}\r\n          <Route exact path=\"/MainBody\" component={MainBody} />\r\n\r\n\r\n\r\n          <Route exact path=\"/page12\" component={WorkPlace} />\r\n          <Route exact path=\"/AddYuding\" component={AddYuding} />\r\n\r\n\r\n          <Route exact path=\"/page11\" component={SignIn} />\r\n          <Route exact path=\"/user/login/forgotPassword\" component={ForgotPassword} />\r\n          <Route exact path=\"/user/login/resetPassword\" component={ResetPassword} />\r\n          <Route exact path=\"/user/login/scanCodeLogin\" component={ScanCodeLogin} />\r\n\r\n          <Route exact path=\"/uesr/logUp/FindMyOrganization\" component={FindMyOrganization} />\r\n          <Route exact path=\"/uesr/logUp/FindMyWorkplace\" component={FindMyWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/VetPrifile\" component={VetPrifile} />\r\n          <Route exact path=\"/uesr/logUp/JoinOrganizationByOption\" component={JoinOrganizationByOption} />\r\n          <Route exact path=\"/uesr/logUp/isHavePMS\" component={IsHavePMS} />\r\n          <Route exact path=\"/uesr/logUp/VerifyEmail\" component={VerifyEmail} />\r\n          <Route exact path=\"/uesr/logUp/NewOrganization\" component={NewOrganization} />\r\n          <Route exact path=\"/uesr/logUp/NewWorkplace\" component={NewWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/InviteTeam\" component={InviteTeam} />\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/uesr/selectExam\" component={DoctorSelectExam} />\r\n          <Route exact path=\"/uesr/DoctorSelectAllExam\" component={DoctorSelectAllExam} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/pet/doctorAddPet\" component={DoctorAddPet} />\r\n\r\n          {/* options */}\r\n          <Route exact path=\"/menuOptions/help\" component={Help} />\r\n          <Route exact path=\"/menuOptions/unassigned\" component={Unassigned} />\r\n          <Route exact path=\"/menuOptions/settings\" component={Settings} />\r\n          <Route exact path=\"/menuOptions/advancedsettings\" component={AdvancedSettings} />\r\n          <Route exact path=\"/menuOptions/invite\" component={Invite} />\r\n          <Route exact path=\"/menuOptions/petAndParents\" component={PetAndParents} />\r\n          <Route exact path=\"/menuOptions/editParent\" component={EditParent} />\r\n          {/* <Route exact path=\"/menuOptions/adminAddPet\" component={AdminAddPet} /> */}\r\n          <Route exact path=\"/menuOptions/veterinarians\" component={Veterinarians} />\r\n          <Route exact path=\"/menuOptions/AddDevice\" component={AddDevice} />\r\n          <Route exact path=\"/menuOptions/ConnectWorkplace\" component={ConnectWorkplace} />\r\n          <Route exact path=\"/menuOptions/NewOrg\" component={NewOrg} />\r\n          <Route exact path=\"/menuOptions/Team\" component={Team} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\nexport default App",["236","237"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259"],"import React, { Component } from 'react'\r\nimport { Input, Menu, message, Select, Calendar, Col, Row, Spin } from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport dog from './../../assets/images/pinkdog.png'\r\nimport cat from './../../assets/images/pinkcat.png'\r\nimport redDog from './../../assets/images/reddog.png'\r\nimport redCat from './../../assets/images/redcat.png'\r\nimport redother from './../../assets/images/redother.png'\r\nimport other from './../../assets/images/other.png'\r\nimport selectphoto from './../../assets/images/sel.png'\r\n\r\nimport Close from './../../assets/img/close.png'\r\nimport nextImg from './../../assets/img/nextImg.png'\r\n\r\nimport dui from './../../assets/images/dui.png'\r\nimport female from './../../assets/images/female.png'\r\nimport male from './../../assets/images/male.png'\r\nimport { mTop, px, win } from '../../utils/px';\r\nimport Avatar from './../avatar/Avatar'\r\nimport './editPetInfo.less'\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport electronStore from '../../utils/electronStore';\r\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\r\nimport Button from './../../utils/button/Button'\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class EditPetInfo extends Component {\r\n  state = {\r\n    dogImg: dog,\r\n    catImg: cat,\r\n    otherImg: other,\r\n    selectWZ: '',\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    api: '',\r\n    id: '',\r\n    seleceID: '',//医生id\r\n    petSpecies: 0,\r\n    unit: 1,\r\n    gender: 0,\r\n    isMix: false,\r\n    imageId: -1,\r\n    imgurl: '',\r\n    breedArr: [],\r\n    petSpeciesBreedId: '',\r\n    dogData: [],\r\n    birthday: moment(new Date()).format('MMMM D, YYYY'),\r\n    patientId: '',\r\n    petName: '',\r\n\r\n    petId: '',\r\n    lastName: '',\r\n    firstName: '',\r\n    breedName: '',\r\n\r\n    initpetName: '',\r\n    initpetId: '',\r\n    initlastName: '',\r\n    initfirstName: '',\r\n    initbreedName: '',\r\n    spin: false,\r\n    dogBreed: [],\r\n    catBreed: [],\r\n\r\n    oldPatientId: '',\r\n    searchBreed: '',\r\n    selectBreedJson: {},\r\n    confirmSelectBreedJson: {},\r\n    selectBreed: false,\r\n\r\n    doctorArr: [],\r\n    selectUser: false,\r\n    selectUserJson: {},\r\n    selectUserId: '',\r\n    confirmSelectUserJson: {},\r\n    petUrl: ''\r\n\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big', win())\r\n\r\n    let path = this.props.history.location.pathname\r\n\r\n    console.log('444444444', path);\r\n\r\n\r\n    if (this.props.location.participate) {\r\n      let props = this.props.location.participate\r\n      console.log(props);\r\n      this.setState({\r\n        patientId: props.patientId,\r\n        petId: props.petId,\r\n        oldPatientId: props.patientId,\r\n\r\n      }, () => {\r\n        this._getPetInfo()\r\n      })\r\n      console.log(props);\r\n    } else {\r\n      this._getPetInfo()\r\n    }\r\n\r\n    let dogBreed = electronStore.get('dogBreed') || []\r\n    let catBreed = electronStore.get('catBreed') || []\r\n    this.setState({\r\n      dogBreed,\r\n      catBreed\r\n    })\r\n    this.getBreed('cat')\r\n    this.getBreed('dog')\r\n    this.getUser()\r\n\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  getBreed = (val) => {\r\n    let data = {}\r\n    switch (val) {\r\n      case 'dog':\r\n        data.speciesId = 2; break;\r\n\r\n      case 'cat':\r\n        data.speciesId = 1; break;\r\n    }\r\n\r\n    fetchRequest(`/pet/selectBreedBySpeciesId`, 'POST', data)\r\n      .then(res => {\r\n        // console.log('---', res);\r\n        if (res.code === 0) {\r\n          let arr = []\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName\r\n            }\r\n            arr.push(data)\r\n          })\r\n          if (val === 'dog') {\r\n            this.setState({\r\n              dogBreed: arr\r\n            })\r\n            electronStore.set('dogBreed', arr)\r\n          } else if (val === 'cat') {\r\n            this.setState({\r\n              catBreed: arr\r\n            })\r\n            electronStore.set('catBreed', arr)\r\n          }\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  getUser = () => {\r\n    let params = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    fetchRequest(`/organization/listDoctorsByAdmin/${storage.lastOrganization}`, 'GET', params)\r\n      .then(res => {\r\n        console.log('人员列表', res);\r\n\r\n        if (res.flag === true && res.code === 20000) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              breedName: `${lastName} ${firstName}`,\r\n              petSpeciesBreedId: userId,\r\n              email,\r\n              birthday,\r\n              isLimit,\r\n              isDeleted,\r\n              phone,\r\n              url,\r\n              firstName, lastName, roleId\r\n            }\r\n            data.push(json)\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            doctorArr: data,\r\n            // parentList: data //这里只是测试，后期删除\r\n\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n\r\n      })\r\n  }\r\n\r\n  _getPetInfo = () => {\r\n    let { patientId, petId } = this.state\r\n    let datas = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      datas.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      datas.org = storage.lastOrganization\r\n    }\r\n    if (patientId && patientId !== 'undefined') {\r\n      datas.patientId = patientId\r\n    }\r\n    if (petId) {\r\n      datas.petId = petId\r\n    }\r\n    this.setState({\r\n      spin: true\r\n    })\r\n\r\n\r\n\r\n    console.log('入参：', datas);\r\n    fetchRequest('/pet/getPetInfoByPatientIdAndPetId', 'POST', datas)\r\n      .then(res => {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        console.log('>>>>>>>>>>>>>>', res);\r\n        if (res.flag === true) {\r\n          //有宠物，进入1\r\n          let datas = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            if (res.data[i].petId === this.state.petId) {\r\n              datas = res.data[i]\r\n              break\r\n            }\r\n          }\r\n          console.log('获取到宠物', datas);\r\n          let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url, gender, speciesId, petSpeciesBreedId } = datas\r\n\r\n          if (isMix !== true) {\r\n            isMix = false\r\n          }\r\n          petName = isNull(petName)\r\n          lastName = isNull(lastName)\r\n          firstName = isNull(firstName)\r\n          breedName = isNull(breedName)\r\n\r\n          let confirmSelectBreedJson = {}\r\n          if (petSpeciesBreedId || petSpeciesBreedId === 0) {\r\n            confirmSelectBreedJson = {\r\n              name: breedName,\r\n              petSpeciesBreedId\r\n            }\r\n          }\r\n\r\n          url = isNull(url)\r\n          if (birthday != null) {\r\n            birthday = moment(birthday).format('MMMM D, YYYY')\r\n          }\r\n          else {\r\n            birthday = ''\r\n          }\r\n          if (gender === null || gender === NaN || `${gender}` === 'null' || `${gender}` === 'NaN') {\r\n            gender = 0\r\n          }\r\n          if (weight) {\r\n            weight = (weight * 2.2046).toFixed(1)\r\n          } else {\r\n            weight = ''\r\n          }\r\n\r\n\r\n          this.setState({\r\n            petId,\r\n            petName,\r\n            lastName,\r\n            firstName,\r\n            breedName,\r\n            isMix,\r\n            birthday,\r\n            weight,\r\n            imgurl: url,\r\n            gender,\r\n            petSpecies: speciesId,\r\n\r\n\r\n            initpetName: petName,\r\n            initlastName: lastName,\r\n            initfirstName: firstName,\r\n            confirmSelectBreedJson,\r\n            petSpeciesBreedId\r\n          })\r\n          switch (speciesId) {\r\n            case 1: this.selectWZ('cat'); break;\r\n            case 2: this.selectWZ('dog'); break;\r\n\r\n            default: this.selectWZ('other'); break;\r\n          }\r\n\r\n        } else {\r\n          message.destroy()\r\n          message.error('data load failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          spin: false\r\n        })\r\n        console.log(err);\r\n        message.destroy()\r\n        message.error('data load failed')\r\n      })\r\n    const isNull = (value) => {\r\n      if (value === null || value === NaN || `${value}` === 'null' || `${value}` === 'NaN') {\r\n        return ''\r\n      } else {\r\n        return value\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n  /**------------------顶部end------------------------ */\r\n  selectWZ = (val) => {\r\n    let { catBreed, dogBreed } = this.state\r\n    switch (val) {\r\n      case 'dog':\r\n        this.setState({\r\n          catImg: cat,\r\n          dogImg: redDog,\r\n          otherImg: other,\r\n          selectWZ: val,\r\n          breedArr: [].concat(dogBreed)\r\n        })\r\n\r\n        break;\r\n\r\n      case 'cat':\r\n        this.setState({\r\n          catImg: redCat,\r\n          dogImg: dog,\r\n          otherImg: other,\r\n          selectWZ: val,\r\n          breedArr: [].concat(catBreed)\r\n        })\r\n\r\n        break;\r\n\r\n      case 'other':\r\n        this.setState({\r\n          catImg: cat,\r\n          dogImg: dog,\r\n          otherImg: redother,\r\n          selectWZ: val,\r\n          breedArr: []\r\n        })\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  _petSpecies = () => {\r\n    let { petSpecies, dogImg, catImg, otherImg, imgurl } = this.state\r\n\r\n    this.avatar = imgurl ? imgurl : selectphoto\r\n\r\n    return (\r\n      <div className=\"petSpecies\"\r\n        style={{ marginTop: mTop(30) }}\r\n      >\r\n        <div className=\"l\">\r\n          <p style={{ color: '#A0A0A0', fontSize: '16px' }}>Pet Species</p>\r\n          <div className=\"selectSpecies\">\r\n            <ul>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog'\r\n\r\n                    onClick={() => { this.selectWZ('dog') }}>\r\n                    <img src={dogImg} alt=\"\" style={{ width: px(40) }} />\r\n                  </div>\r\n                  Dog\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this.selectWZ('cat') }} >\r\n                    <img src={catImg} alt=\"\" style={{ width: px(40) }} />\r\n                  </div>\r\n                  Cat\r\n                </div>\r\n              </li>\r\n              <li >\r\n                <div className='speciesChild' >\r\n                  <div className='dog' onClick={() => { this.selectWZ('other') }} >\r\n                    <img src={otherImg} alt=\"\" style={{ width: px(40) }} />\r\n                  </div>\r\n                  Other\r\n                </div>\r\n              </li>\r\n\r\n            </ul>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n        <div className=\"r\">\r\n          {/* <div className=\"img\"\r\n                    style={{ width: px(110), height: px(110) }}\r\n                >\r\n                    <div className=\"ciral\" onClick={() => {\r\n                        let file = document.getElementById('f')\r\n                        file.click();\r\n                    }}>\r\n                        <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                        <input type=\"file\" accept=\"image/gif,image/jpeg,image/jpg,image/png,image/svg\" className=\"uploadImg\" id=\"f\" onChange={(e) => {\r\n                            console.log(e);\r\n                            let $target = e.target || e.srcElement\r\n                            if ($target.files.length === 0) {\r\n                                return;\r\n                            }\r\n                            let file = $target.files[0]\r\n                            var reader = new FileReader()                   //创建文件阅读器实例\r\n                            reader.readAsDataURL(file)\r\n                            reader.onload = (data) => {\r\n                                let res = data.target || data.srcElement\r\n                                console.dir(document.getElementById('touxiang'));\r\n                                document.getElementById('touxiang').src = res.result\r\n\r\n\r\n                                const formData = new FormData();\r\n                                formData.append('img', file);\r\n                                fetch(`${url}/image/uploadImage`, {\r\n                                    method: 'POST',\r\n                                    headers: {\r\n                                    },\r\n                                    body: formData\r\n                                })\r\n                                    .then((response) => response.json())\r\n                                    .then((res) => {\r\n                                        console.log(res);\r\n                                        if (res.flag === true) {\r\n                                            this.setState({\r\n                                                imageId: res.data.imageId,\r\n                                                imgurl: res.data.url\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        console.log(err);\r\n                                    });\r\n                            }\r\n\r\n                        }} />\r\n                        <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                    </div>\r\n                </div> */}\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n              getAllInfo={(val) => {\r\n                console.log('所有的信息', val);\r\n                if (val.url) {\r\n                  this.setState({\r\n                    petUrl: val.url\r\n                  })\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _petName = () => {\r\n\r\n    const onPanelChange = (value, mode) => {\r\n      console.log('-----', value, mode);\r\n    }\r\n    let birthday = this.state.birthday\r\n    let birthdayValue = birthday ? moment(birthday) : moment(new Date())\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\r\n        <div className=\"l\">\r\n          <p >Pet Name</p>\r\n          <div className=\"infoInput\">\r\n            <Input\r\n              bordered={false}\r\n              value={this.state.initpetName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  petName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n                  initpetName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <p >Pet Birthday</p>\r\n          <div className=\"infoInput\" >\r\n            <p style={{ weight: '60px', height: '27px', padding: 0, margin: 0 }} onClick={() => {\r\n              document.getElementById('calendar').style.display = 'block'\r\n            }}>{this.state.birthday}</p>\r\n            <div className=\"calendar\" id=\"calendar\">\r\n              <Calendar\r\n                fullscreen={false}\r\n                headerRender={({ value, type, onChange, onTypeChange }) => {\r\n                  const start = 0;\r\n                  const end = 12;\r\n                  const monthOptions = [];\r\n\r\n                  const current = value.clone();\r\n                  const localeData = value.localeData();\r\n                  const months = [];\r\n                  for (let i = 0; i < 12; i++) {\r\n                    current.month(i);\r\n                    months.push(localeData.monthsShort(current));\r\n                  }\r\n\r\n                  for (let index = start; index < end; index++) {\r\n                    monthOptions.push(\r\n                      <Select.Option className=\"month-item\" key={`${index}`}>\r\n                        {months[index]}\r\n                      </Select.Option>\r\n                    );\r\n                  }\r\n                  const month = value.month();\r\n\r\n                  const year = value.year();\r\n                  const options = [];\r\n                  for (let i = year - 10; i < year + 10; i += 1) {\r\n                    options.push(\r\n                      <Select.Option key={i} value={i} className=\"year-item\">\r\n                        {i}\r\n                      </Select.Option>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <div style={{ padding: 8 }}>\r\n                      <Row gutter={8}>\r\n                        <Col>\r\n                          <Select\r\n                            size=\"small\"\r\n                            dropdownMatchSelectWidth={false}\r\n                            className=\"my-year-select\"\r\n                            onChange={(newYear) => {\r\n                              const now = value.clone().year(newYear);\r\n                              onChange(now);\r\n                            }}\r\n                            value={String(year)}\r\n                          >\r\n                            {options}\r\n                          </Select>\r\n                        </Col>\r\n                        <Col>\r\n                          <Select\r\n                            size=\"small\"\r\n                            dropdownMatchSelectWidth={false}\r\n                            value={String(month)}\r\n                            onChange={(selectedMonth) => {\r\n                              const newValue = value.clone();\r\n                              newValue.month(parseInt(selectedMonth, 10));\r\n                              onChange(newValue);\r\n                            }}\r\n                          >\r\n                            {monthOptions}\r\n                          </Select>\r\n                        </Col>\r\n                        {/* <Col>\r\n                          <div className=\"btn\" onClick={() => {\r\n                            document.getElementById('calendar').style.display = 'none'\r\n                          }}>\r\n                            Choose this date\r\n                          </div>\r\n\r\n                        </Col> */}\r\n                      </Row>\r\n                    </div>\r\n                  );\r\n                }}\r\n                value={birthdayValue}\r\n                onSelect={(value) => {\r\n                  console.log(value);\r\n                  this.setState({\r\n                    birthday: moment(value).format('MMMM D, YYYY')\r\n                  })\r\n                  document.getElementById('calendar').style.display = 'none'\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _ownName = () => {\r\n    let { confirmSelectUserJson } = this.state\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(18), alignItems: 'flex-end' }}\r\n      >\r\n        <div className=\"l\">\r\n\r\n          <p ><span style={{ color: 'red' }}>*</span> Patient ID</p>\r\n          <div className=\"infoInput\">\r\n            <Input bordered={false}\r\n              value={this.state.patientId}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  patientId: item.target.value.replace(/\\s/g, \"\"),\r\n                  intFlog: true\r\n\r\n                })\r\n                if (item.target.value !== errPatientId) {\r\n                  message.destroy()\r\n                }\r\n              }}\r\n              onBlur={() => {\r\n                message.destroy()\r\n                console.log('我离开光标了');\r\n                if (this.state.patientId === this.state.oldPatientId) {\r\n                  return\r\n                }\r\n\r\n                let params = {\r\n                  patientId: this.state.patientId,\r\n                  doctorId: storage.userId\r\n                }\r\n                if (storage.lastWorkplaceId) {\r\n                  params.workplaceId = storage.lastWorkplaceId\r\n                }\r\n\r\n                fetchRequest(`/pet/checkPatientId`, \"GET\", params)\r\n                  .then(res => {\r\n                    console.log(res);\r\n                    if (res.flag === false) {\r\n                      errPatientId = params.patientId\r\n                      message.destroy()\r\n                      message.error('This patient ID is already occupied, please change to a new one', 0)\r\n                    } else {\r\n                      errPatientId = ''\r\n                    }\r\n\r\n                  })\r\n                  .catch(err => {\r\n                    console.log(err);\r\n\r\n                  })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"r\">\r\n          <div className=\"infoInput flex\"\r\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer', }}\r\n            onClick={() => {\r\n\r\n              this.setState({\r\n                // selectUser: true\r\n              })\r\n            }}\r\n          >\r\n\r\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectUserJson.name ? confirmSelectUserJson.name : 'My Parents'}</div>\r\n            <div className=\"nextimg\" >\r\n              <img src={nextImg} style={{ height: px(15) }} />\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n\r\n    // return (\r\n    //   <div className=\"petName\" style={{ marginTop: mTop(30) }}>\r\n    //     <div className=\"l\">\r\n    //       <p >Owner First Name</p>\r\n    //       <div className=\"infoInput\">\r\n    //         <Input bordered={false}\r\n    //           value={this.state.initfirstName}\r\n    //           onChange={(item) => {\r\n\r\n    //             this.setState({\r\n    //               firstName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n    //               initfirstName: item.target.value\r\n    //             })\r\n    //           }}\r\n\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n\r\n    //     <div className=\"r\">\r\n    //       <p >Owner Last Name</p>\r\n    //       <div className=\"infoInput\">\r\n    //         <Input bordered={false}\r\n    //           value={this.state.initlastName}\r\n    //           onChange={(item) => {\r\n\r\n    //             this.setState({\r\n    //               lastName: item.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\"),\r\n    //               initlastName: item.target.value\r\n    //             })\r\n    //           }}\r\n    //         />\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n\r\n    // )\r\n  }\r\n  _select = (value, data) => {\r\n    console.log(value, data);  //value的值为id\r\n    this.setState({\r\n      petSpeciesBreedId: value,\r\n      breedName: data.children\r\n    })\r\n  }\r\n  _primaryBreed = () => {\r\n    let options = null\r\n    // switch (this.state.petSpecies) {\r\n    //     case 2: options = this.state.catData.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>); break;\r\n    //     case 1: options = this.state.dogData.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>); break;\r\n    // }\r\n    options = this.state.breedArr.map(d => <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>);\r\n    let { breedName, confirmSelectBreedJson } = this.state\r\n    // console.log('-----breedName:', confirmSelectBreedJson);\r\n\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(30), alignItems: 'flex-end', }}>\r\n        <div className=\"l\">\r\n          {/* <p >Primary Breed</p>\r\n          <div className=\"infoInput\">\r\n            <Select\r\n              showSearch\r\n              style={{ width: '100%' }}\r\n              bordered={false}\r\n              value={breedName}\r\n              // size = {'small'}        \r\n              placeholder=\"Search to Select\"\r\n              optionFilterProp=\"children\"\r\n              listHeight={256}\r\n              onSelect={(value, data) => this._select(value, data)}\r\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              filterSort={(optionA, optionB) => optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())}\r\n            >\r\n              {options}\r\n            </Select>\r\n          </div> */}\r\n          <div className=\"infoInput flex\"\r\n            style={{ marginTop: px(8), flexDirection: 'row', justifyContent: 'space-between', cursor: 'pointer' }}\r\n            onClick={() => {\r\n              this.setState({\r\n                selectBreed: true\r\n              })\r\n            }}\r\n          >\r\n\r\n            <div className=\"myBreed\" style={{ width: '90%', height: px(25) }}>{confirmSelectBreedJson.name ? confirmSelectBreedJson.name : 'My Breed'}</div>\r\n            <div className=\"nextimg\" >\r\n              <img src={nextImg} style={{ height: px(15) }} />\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"r\" >\r\n          <div className=\"max\">\r\n            Mix?\r\n            <div className=\"selected\"\r\n              onClick={() => this.setState({\r\n                isMix: !this.state.isMix\r\n              })}\r\n            >\r\n              {(this.state.isMix) ? (<img src={dui} alt=\"\" width='20px' />) : (null)}\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _weight = () => {\r\n    let ibBgcColor = '', ibCor = '', kgBgcColor = '', kgCor = '', femaleBgc = '', maleBgc = '';\r\n    switch (this.state.unit) {\r\n      case 1: ibBgcColor = '#E1206D'; ibCor = '#fff'; kgBgcColor = '#fff'; kgCor = '#E1206D'; break;\r\n      case 2: ibBgcColor = '#fff'; ibCor = '#E1206D'; kgBgcColor = '#E1206D'; kgCor = '#fff'; break;\r\n    }\r\n\r\n    switch (this.state.gender) {\r\n      case 1: femaleBgc = '#E1206D'; maleBgc = '#F08FB6'; break;\r\n      case 0: femaleBgc = '#F08FB6'; maleBgc = '#E1206D'; break;\r\n    }\r\n\r\n    return (\r\n      <div className=\"petName\" style={{ marginTop: mTop(30) }}>\r\n        <div className=\"l\">\r\n          <p >Pet Weight</p>\r\n          <div className=\"infoInput\">\r\n            <Input bordered={false}\r\n              value={this.state.weight}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  weight: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n            <div className=\"ibKg\">\r\n              <div className=\"ibs\"\r\n                style={{ backgroundColor: ibBgcColor, color: ibCor }}\r\n                onClick={() => {\r\n                  if (this.state.unit === 2) {\r\n\r\n                    this.setState({\r\n                      unit: 1,\r\n                      weight: (this.state.weight * 2.2046).toFixed(1)\r\n                    })\r\n                  }\r\n                }}\r\n              >Ibs</div>\r\n              <div className=\"kgs\"\r\n                style={{ backgroundColor: kgBgcColor, color: kgCor }}\r\n                onClick={() => {\r\n\r\n                  if (this.state.unit === 1) {\r\n\r\n                    this.setState({\r\n                      unit: 1,\r\n                      weight: (this.state.weight / 2.2046).toFixed(1)\r\n                    })\r\n                  }\r\n                  this.setState({ unit: 2 })\r\n                }}\r\n              >kgs</div>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <p style={{ color: '#4a4a4a', fontSize: '17px', marginTop: '20px' }}>Pet Gender</p>\r\n          <div className=\"gender\">\r\n            <div className=\"selectGender\">\r\n              <div className=\"female\" style={{ marginRight: px(8), fontSize: px(18) }}>\r\n                <div className=\"femaleCiral\"\r\n                  style={{ backgroundColor: femaleBgc, width: px(40), height: px(40), }}\r\n                  onClick={() => this.setState({ gender: 1 })}\r\n                >\r\n                  <img src={female} alt=\"\" style={{ width: px(15) }} />\r\n                </div>\r\n                Female\r\n              </div>\r\n              <div className=\"male\" style={{ fontSize: px(18) }}>\r\n                <div className=\"maleCiral\"\r\n                  style={{ backgroundColor: maleBgc, width: px(40), height: px(40), }}\r\n                  onClick={() => this.setState({ gender: 0 })}\r\n                >\r\n                  <img src={male} alt=\"\" style={{ width: px(20) }} />\r\n                </div>\r\n                Male\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const { closeColor, closebgc, minbgc } = this.state\r\n\r\n    return (\r\n      <div id=\"editPetInfo\">\r\n        {/* 头部 */}\r\n        <div className=\"close1\">\r\n          {/* 菜单 */}\r\n          <div className=\"menu\">\r\n\r\n            <MyIcon type='icon-fanhui4' className=\"icon\" onClick={() => {\r\n              if (storage.goEditPet === \"mesasure\") {\r\n                this.props.history.push({ pathname: 'page8', participate: { patientId: this.state.patientId } })\r\n              } else {\r\n                this.props.history.goBack()\r\n              }\r\n            }} />\r\n          </div>\r\n          <div className=\"text\">mella</div>\r\n          <div className='maxmin'>\r\n            <div\r\n              className=\"min iconfont icon-64\"\r\n              onClick={this._min}\r\n              onMouseEnter={this._minMove}\r\n              onMouseLeave={this._minLeave}\r\n              style={{ backgroundColor: minbgc }}\r\n            ></div>\r\n\r\n            <div\r\n              className=\"max iconfont icon-guanbi2\"\r\n              onClick={this._close}\r\n              onMouseEnter={this._closeMove}\r\n              onMouseLeave={this._closeLeave}\r\n              style={{ backgroundColor: closebgc, color: closeColor }}\r\n            ></div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"editPetInfo_top\">\r\n          <div className=\"title\">{`${this.state.patientId}, ${this.state.petName}`}</div>\r\n          {this._petSpecies()}\r\n          {this._petName()}\r\n          {this._ownName()}\r\n          {this._primaryBreed()}\r\n          {this._weight()}\r\n        </div>\r\n        <div className=\"editPetInfo_foot\">\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              let { petName, birthday, firstName, lastName, petSpeciesBreedId, isMix, weight, gender, unit, imageId, breedName, petId, confirmSelectBreedJson, confirmSelectUserJson } = this.state\r\n              console.log('生日：', birthday);\r\n              if (unit === 1) {\r\n                weight = (0.45359 * weight).toFixed(2)\r\n              }\r\n\r\n              let data = {\r\n                petName,\r\n                weight: parseFloat(weight),\r\n                gender,\r\n                firstName,\r\n                lastName,\r\n              }\r\n              if (birthday) {\r\n                data.birthday = moment(birthday).format('YYYY-MM-DD')\r\n              }\r\n              if (imageId !== -1) {\r\n                data.imageId = imageId\r\n              }\r\n              // if (breedName) {\r\n              //   data.breedName = breedName\r\n              // }\r\n              if (confirmSelectBreedJson.name) {\r\n                data.breedName = confirmSelectBreedJson.name\r\n              }\r\n              if (confirmSelectUserJson.petSpeciesBreedId) {\r\n                data.userId = confirmSelectUserJson.petSpeciesBreedId\r\n              }\r\n\r\n              console.log('------', data);\r\n              this.setState({\r\n                spin: true\r\n              })\r\n              fetchRequest(`/pet/updatePetInfo/${petId}`, 'POST', data)\r\n                .then(res => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  console.log(res);\r\n                  if (res.flag === true) {\r\n                    try {\r\n                      if (storage.identity === '3') {\r\n                        let data = JSON.parse(storage.doctorExam)\r\n                        data.petName = petName\r\n                        data.weight = weight\r\n                        data.gender = gender\r\n                        data.patientId = this.state.patientId\r\n                        if (birthday) {\r\n                          data.age = moment(new Date()).diff(moment(birthday), 'years')\r\n                        }\r\n                        if (confirmSelectBreedJson.name) {\r\n                          data.breed = confirmSelectBreedJson.name\r\n                        }\r\n                        if (this.state.petUrl) {\r\n                          data.url = this.state.petUrl\r\n                        }\r\n\r\n                        storage.doctorExam = JSON.stringify(data)\r\n\r\n\r\n                      }\r\n                    } catch (error) {\r\n\r\n                    }\r\n                    console.log('从哪来', storage.goEditPet);\r\n                    if (storage.goEditPet === \"mesasure\") {\r\n                      this.props.history.replace({ pathname: 'page8', participate: { patientId: this.state.patientId } })\r\n                    } else {\r\n                      this.props.history.goBack()\r\n                    }\r\n\r\n\r\n\r\n                  } else {\r\n                    message.error('Update failed')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  console.log(err);\r\n                })\r\n            }}\r\n\r\n          >Save Changes</div>\r\n\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n        <MyModal\r\n          // visible={true}\r\n          visible={this.state.selectBreed}\r\n          element={\r\n            <div className='myfindOrg' >\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div>\r\n\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        selectBreed: false,\r\n                        selectBreedJson: {}\r\n                      })\r\n                    }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"text\" >Choose Breed</div>\r\n\r\n                <div className=\"searchBox\">\r\n\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search name\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.searchBreed}\r\n                    onChange={(item) => {\r\n\r\n                      this.setState({\r\n                        searchBreed: item.target.value\r\n                      })\r\n                    }}\r\n\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"list\" >\r\n                <PhoneBook\r\n                  listDate={this.state.breedArr}\r\n                  confirmSelectBreed={this.state.petSpeciesBreedId}\r\n                  selectFun={(val) => {\r\n                    // console.log('从子组件传来的数据', val);\r\n                    this.setState({\r\n                      selectBreedJson: val,\r\n                      petSpeciesBreedId: val.petSpeciesBreedId\r\n                    })\r\n\r\n\r\n                  }}\r\n                  searchText={this.state.searchBreed}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"foot\">\r\n                <Button\r\n                  text={'Select'}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      confirmSelectBreedJson: this.state.selectBreedJson,\r\n                      selectBreed: false\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n\r\n            </div>\r\n          }\r\n        />\r\n\r\n        <MyModal\r\n          visible={true}\r\n          visible={this.state.selectUser}\r\n          element={\r\n            <div className='myfindOrg' >\r\n              <div className=\"orgHeard\">\r\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                  <div>\r\n\r\n                  </div>\r\n                  <div\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        selectUser: false,\r\n                        selectUserJson: {}\r\n                      })\r\n                    }}\r\n                  >\r\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                  </div>\r\n                </div>\r\n                <div className=\"text\" >Choose Parents</div>\r\n\r\n                <div className=\"searchBox\">\r\n\r\n                  <Input\r\n                    placeholder=\" &#xe61b; Search name\"\r\n                    bordered={false}\r\n                    allowClear={true}\r\n                    value={this.state.searchBreed}\r\n                    onChange={(item) => {\r\n\r\n                      this.setState({\r\n                        searchBreed: item.target.value\r\n                      })\r\n                    }}\r\n\r\n                  />\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div className=\"list\" >\r\n                <PhoneBook\r\n                  listDate={this.state.doctorArr}\r\n                  confirmSelectBreed={this.state.selectUserId}\r\n                  selectFun={(val) => {\r\n\r\n                    this.setState({\r\n                      selectUserJson: val,\r\n                      selectUserId: val.petSpeciesBreedId\r\n                    })\r\n\r\n\r\n                  }}\r\n                  searchText={this.state.searchBreed}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"foot\">\r\n                <Button\r\n                  text={'Select'}\r\n                  onClick={() => {\r\n                    this.setState({\r\n                      confirmSelectUserJson: this.state.selectUserJson,\r\n                      selectUser: false\r\n                    })\r\n                  }}\r\n                />\r\n\r\n              </div>\r\n\r\n            </div>\r\n          }\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\help\\Help.jsx",["260"],"import React, { Component } from 'react'\r\n\r\nimport Heard from './../../../utils/heard/Heard'\r\nimport using from './../../../assets/images/using.png'\r\nimport measuring from './../../../assets/images/measuring.png'\r\nimport unassigned from './../../../assets/images/unassigned.png'\r\nimport adding from './../../../assets/images/adding.png'\r\nimport email from './../../../assets/images/email.png'\r\nimport phone from './../../../assets/images/phone.png'\r\nimport './help.less'\r\nimport { px } from './../../../utils/px'\r\nlet storage = window.localStorage;\r\n\r\nexport default class Help extends Component {\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n\r\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    let list = [\r\n      {\r\n        img: using,\r\n        title: 'Using the app'\r\n      }, {\r\n        img: measuring,\r\n        title: 'Measuring with Mella'\r\n      }, {\r\n        img: unassigned,\r\n        title: 'Unassigned Readings'\r\n      },\r\n      {\r\n        img: adding,\r\n        title: 'Adding New Users'\r\n      },\r\n    ]\r\n    let num = 150 / list.length\r\n    let mar = num + 'px'\r\n    return (\r\n      <div id=\"help\">\r\n        <div className=\"heard\">\r\n          <Heard\r\n            menu8Click={() => {\r\n              switch (storage.identity) {\r\n                case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n                case '1': this.props.history.push('/VetSpireSelectExam')\r\n\r\n                  break;\r\n                case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\r\n\r\n                  break;\r\n\r\n                default:\r\n                  break;\r\n              }\r\n            }}\r\n            onReturn={() => {\r\n              this.props.history.goBack()\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"title\">How can we help you?</div>\r\n          <div className=\"input\" style={{ marginTop: px(25) }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Describe you issue     &#xe63f;\"\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"list\" style={{ marginTop: px(50) }}>\r\n            <ul>\r\n              {list.map((data, index) => (\r\n                <li key={index}\r\n                  style={{ width: px(150), height: px(150) }}\r\n                >\r\n\r\n                  <>\r\n                    <img src={data.img} alt=\"\" style={{ height: px(80) }} />\r\n                    <p style={{ fontSize: px(19) }}>{data.title}</p>\r\n                  </>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"popularArticles\" style={{ marginTop: px(80) }}>\r\n            <div className=\"text\">Popular Articles</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n          <div className=\"popularArticles tutorials\">\r\n            <div className=\"text\">Tutorials</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n\r\n          <div className=\"time\" style={{ marginTop: px(40) }}>\r\n            <p style={{ fontSize: px(30) }}>Still need help?</p>\r\n            <div className=\"line\" style={{ height: px(6) }}></div>\r\n            <p style={{ fontSize: px(30) }}>Monday - Friday: 9am - 5pm (ET)</p>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"foot\">\r\n          <div className=\"l\">\r\n            <img src={email} alt=\"\" style={{ height: px(50) }} />\r\n            <div className=\"text\" style={{ fontSize: px(18) }}>Drop us a line</div>\r\n            <a href=\"mailto:support@mella.ai\"\r\n              style={{ fontSize: px(18) }}\r\n              onClick={(e) => {\r\n                // e.preventDefault();\r\n                // let electron = window.electron\r\n                // electron.shell.openExternal(' https://www.mella.ai/')\r\n                // return false;\r\n              }}\r\n            >support@mella.ai</a>\r\n          </div>\r\n\r\n          <div className=\"l r\">\r\n            <img src={phone} alt=\"\" style={{ height: px(50) }} />\r\n            <div className=\"text\" style={{ fontSize: px(18) }}>Bark at Us!</div>\r\n            <div className=\"text\" style={{ fontSize: px(18) }}>201.977.6411</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\PetsUI.jsx",["261","262","263"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx",["264","265","266","267","268","269","270","271"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n    Menu,\r\n    Popover,\r\n    Button,\r\n    Modal\r\n} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport pinyin from 'pinyin';\r\n\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './phoneBook.less'\r\nimport { mTop, px, MTop } from '../px';\r\nimport electronStore from '../electronStore';\r\n\r\n\r\n/**\r\n * \r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns \r\n */\r\n\r\n\r\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\r\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\r\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\r\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\r\n\r\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\r\n\r\n    useEffect(() => {\r\n        if (confirmSelectBreed !== -1) {\r\n            setSelectBreed(confirmSelectBreed)\r\n        }\r\n    }, [confirmSelectBreed])\r\n\r\n\r\n    console.log('listsDate', phoneList)\r\n\r\n    useEffect(() => {\r\n        // console.log('listsDate', listDate)\r\n        console.log('进来了');\r\n        let test = []\r\n        listDate.map((item, index) => {\r\n            let data = {\r\n                name: item.breedName,\r\n                hidden: false,\r\n                petSpeciesBreedId: item.petSpeciesBreedId\r\n            }\r\n            test.push(data)\r\n        })\r\n        // 暂时静态数据替换\r\n        //获取联系人列表\r\n        console.log('11111111111', test)\r\n        let list = test;\r\n        let sections = [], letterArr = [];\r\n        // console.log('原始的数据:',list)\r\n\r\n        // 右侧字母栏数据处理\r\n        list.map((item, index) => {\r\n            letterArr.push(pinyin(item.name.substring(0, 1), {\r\n                style: pinyin.STYLE_FIRST_LETTER,\r\n            })[0][0].toUpperCase());\r\n\r\n            letterArr = [...new Set(letterArr)].sort();\r\n        });\r\n\r\n        // 分组数据处理\r\n        letterArr.map((item, index) => {\r\n            sections.push({\r\n                title: item,\r\n                data: []\r\n            })\r\n        });\r\n        list.map(item => {\r\n            let listItem = item;\r\n            sections.map(item => {\r\n                // console.log('}}}}}}}}}}}}}}',item)\r\n                let first = listItem.name.substring(0, 1);\r\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\r\n                if (item.title == test) {\r\n                    item.data.push({\r\n                        firstName: first,\r\n                        name: listItem.name,\r\n                        hidden: listItem.hidden,\r\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\r\n                    });\r\n                }\r\n            })\r\n        });\r\n\r\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\r\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\r\n        // console.log('-1----', sections, letterArr);\r\n        setPhoneList(sections)\r\n        setPhoneListCopy(sections)\r\n        setLetterList(letterArr)\r\n        setLetterListCopy(letterArr)\r\n    }, [])\r\n    useEffect(() => {\r\n        // if (searchText) {\r\n        console.log('搜索内容', searchText, letterListCopy);\r\n        if (letterListCopy.length > 0) {\r\n\r\n            let allData = phoneListCopy\r\n            let newArr = []\r\n            let arr = []\r\n            if (searchText.length > 0) {\r\n                allData.map((item, i) => {\r\n                    item.data.map((data, index) => {\r\n                        // console.log(index)\r\n                        let dataName = data.name ? data.name.toUpperCase() : ''\r\n                        let keyData = searchText ? searchText.toUpperCase() : ''\r\n                        if (dataName.search(keyData) !== -1) {\r\n                            newArr.push(data)\r\n                        }\r\n                    })\r\n                    // console.log('一组数据：', newArr)\r\n                    if (newArr.length != 0) {\r\n                        let oneGreep = {\r\n                            title: item.title,\r\n                            data: newArr\r\n                        }\r\n                        //   console.log('一11组数据：', oneGreep)\r\n                        arr.push(oneGreep)\r\n                    }\r\n\r\n                    newArr = []\r\n                })\r\n                //   console.log('--------------------------', arr)\r\n                let letterArr = []\r\n                arr.map((item, index) => {\r\n                    letterArr.push(item.title)\r\n                })\r\n                // newArr = []\r\n                // // console.log('---||-----',newArr)\r\n                setPhoneList(arr)\r\n                setLetterList(letterArr)\r\n            } else {\r\n\r\n                setPhoneList(phoneListCopy)\r\n                setLetterList(letterListCopy)\r\n            }\r\n        }\r\n\r\n\r\n    }, [searchText])\r\n\r\n\r\n\r\n    const _phoneList = () => {\r\n\r\n        let option = phoneList.map((item, index) => {\r\n            let data = item.data\r\n            let option1 = data.map((value, index1) => {\r\n                return (\r\n                    <li\r\n                        key={`option1${index1}`}\r\n                        onClick={() => {\r\n                            // console.log(value.petSpeciesBreedId);\r\n                            setSelectBreed(value.petSpeciesBreedId)\r\n                            selectFun(value)\r\n                        }}>\r\n                        {value.name}\r\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\r\n                    </li>\r\n                )\r\n            })\r\n\r\n            return (\r\n                <div className=\"phoneBody\">\r\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\r\n                    <ul>\r\n                        {option1}\r\n                    </ul>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul>\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const _letterList = () => {\r\n\r\n        let option = letterList.map((item, index) => {\r\n\r\n\r\n            return (\r\n                <li\r\n                    key={`${index}`}\r\n\r\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\r\n                    <a\r\n\r\n                        onClick={() => {\r\n                            litterClick(item)\r\n                        }}\r\n                    >{item}</a>\r\n                </li>\r\n            )\r\n\r\n        })\r\n\r\n        return (\r\n            <ul className=\"letterUL\">\r\n                {option}\r\n            </ul>\r\n        )\r\n    }\r\n    const litterClick = (anchorName) => {\r\n        // console.log(anchorName);\r\n        if (anchorName) {\r\n            // 找到锚点\r\n            let anchorElement = document.getElementById(anchorName);\r\n            // console.log(anchorElement);\r\n            // 如果对应id的锚点存在，就跳转到锚点\r\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\r\n        }\r\n        // e.preventDefault();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"phoneBook\">\r\n            <div className=\"phone\">\r\n                {_phoneList()}\r\n            </div>\r\n            <div className=\"litter\">\r\n                {_letterList()}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nPhoneBook.propTypes = {\r\n\r\n    listDate: PropTypes.array,\r\n    selectFun: PropTypes.func,\r\n    searchText: PropTypes.string,\r\n    confirmSelectBreed: PropTypes.number\r\n}\r\nPhoneBook.defaultProps = {\r\n    listDate: [],\r\n    selectFun: () => { },\r\n    searchText: '',\r\n    confirmSelectBreed: -1,\r\n}\r\n\r\nexport default PhoneBook","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\choose\\Choose.jsx",[],["293","294"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx",["295","296","297","298","299","300","301","302","303","304","305","306"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil2.js",["307","308","309","310"],"\r\n// let COMMON_URL = 'http://192.168.0.36:8080/melladesk';//本地\r\nlet COMMON_URL = 'https://www.mellaserver.com/api/melladesk';//企业AWS\r\nlet token = '';\r\n\r\n//'/v1/appUser/login', 'POST', params\r\nexport function fetchRequest2 (url, method, params = '', Authorization) {\r\n\r\n  if (method === 'GET' || method === 'DELETE') {\r\n    let header = {\r\n      'Content-Type': 'application/x-www-form-urlencoded',\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      // 定一个空数组\r\n      let paramsArray = [];\r\n      //  拆分对象\r\n      Object.keys(params).forEach(key =>\r\n        paramsArray.push(key + \"=\" + params[key])\r\n      );\r\n      // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数   \r\n      if (url.search(/\\?/) === -1) {\r\n        url = url + \"?\" + paramsArray.join(\"&\");\r\n      } else {\r\n        url = url + \"&\" + paramsArray.join(\"&\");\r\n      }\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: {\r\n            \"Content-Type\": 'text/plain'\r\n          }\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  } else {\r\n    let header = {\r\n      \"Content-type\": \"application/json\",\r\n      Authorization\r\n    };\r\n    if (params == '') {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          headers: header\r\n        }).then((Response) => Response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData)\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    } else {\r\n      return new Promise(function (resolve, reject) {\r\n        fetch(COMMON_URL + url, {\r\n          method: method,\r\n          // mode: 'cors',\r\n          headers: header,\r\n          body: JSON.stringify(params),\r\n        }).then((response) => response.json())\r\n          .then((responseData) => {\r\n            resolve(responseData);\r\n          })\r\n          .catch((err) => {\r\n            reject(err);\r\n          });\r\n      });\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\userAction.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\hardwareAction.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\HardListModal.jsx",["311"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\index.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\workPlace\\WorkPlace.jsx",["312","313","314","315","316","317","318","319","320"],"\r\nimport React, { Component, } from 'react'\r\nimport {\r\n  Select,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Spin\r\n\r\n\r\n} from 'antd';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport './workplace.less'\r\nimport { mTop, pX, px, win } from '../../utils/px';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\nimport { fetchRequest } from './../../utils/FetchUtil1'\r\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport logo from '../../assets/images/mellaLogo.png'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\nexport default class WorkPlace extends Component {\r\n  state = {\r\n    organization: '',\r\n    workplaceList: [],\r\n\r\n\r\n    spin: false,\r\n    orgArr: [],\r\n    workplaceJson: {},\r\n    workplaceId: '',\r\n    workplaceName: '',\r\n    organizationId: '',\r\n    organizationName: '',\r\n    connectionKey: '',\r\n    selectRoleId: ''\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n\r\n    let userWorkplace = []\r\n    try {\r\n      userWorkplace = JSON.parse(storage.userWorkplace) || []\r\n      console.log(userWorkplace);\r\n    } catch (error) {\r\n      console.log('字符串转对象失败', error);\r\n    }\r\n    /*orgArr的格式为[{\r\n      organizationId:1,\r\n      organizationName:'11111',\r\n      connectionKey:''\r\n    }]\r\n    \r\n     workplace:{\r\n       1:{\r\n          workplaceId:1,\r\n          workplaceName:'122334\r\n        },\r\n     }\r\n    */\r\n    let orgArr = [], workplaceJson = {}\r\n    console.log('存储的工作场所和组织id', storage.lastWorkplaceId, storage.lastOrganization);\r\n    for (let i = 0; i < userWorkplace.length; i++) {\r\n      let element = userWorkplace[i]\r\n      // console.log('每一项的值：', element);\r\n      if (element.organizationEntity && element.workplaceEntity) {\r\n        let { organizationEntity, workplaceEntity, roleId } = element\r\n        const { name, organizationId, connectionKey } = organizationEntity\r\n        const { workplaceName, workplaceId } = workplaceEntity\r\n\r\n        if (`${workplaceId}` === storage.lastWorkplaceId) {\r\n          this.setState({\r\n            workplaceName,\r\n            workplaceId: storage.lastWorkplaceId\r\n          })\r\n        }\r\n\r\n        if (`${organizationId}` === storage.lastOrganization) {\r\n          this.setState({\r\n            organizationName: name,\r\n            organizationId: storage.lastOrganization\r\n          })\r\n        }\r\n\r\n        let orgRepeatFlog = false, repeatFlogNum = -1\r\n        for (let j = 0; j < orgArr.length; j++) {\r\n          console.log(orgArr[j].organizationId, organizationId);\r\n          if (orgArr[j].organizationId === organizationId) {\r\n            orgRepeatFlog = true\r\n            repeatFlogNum = j\r\n            break;\r\n          }\r\n\r\n        }\r\n        if (orgRepeatFlog) {\r\n          let workplace = {\r\n            workplaceName, workplaceId\r\n          }\r\n          let id = orgArr[repeatFlogNum].organizationId\r\n          let sameflog = false\r\n          console.log(workplaceJson[`${id}`], workplace);\r\n          for (let k = 0; k < workplaceJson[`${id}`].length; k++) {\r\n            const element = workplaceJson[`${id}`][k];\r\n            if (element.workplaceId === workplace.workplaceId && element.workplaceName === workplace.workplaceName) {\r\n              sameflog = true\r\n              break\r\n            }\r\n\r\n          }\r\n          if (!sameflog) {\r\n            workplaceJson[`${id}`].push(workplace)\r\n          }\r\n\r\n        } else {\r\n          let connectKey = connectionKey || ''\r\n          let json = {\r\n            organizationId,\r\n            organizationName: name,\r\n            connectionKey: connectKey,\r\n            roleId\r\n          }\r\n          let workplace = [{\r\n            workplaceName, workplaceId\r\n          }]\r\n          workplaceJson[`${organizationId}`] = workplace\r\n\r\n          orgArr.push(json)\r\n        }\r\n      }\r\n    }\r\n    console.log('-----转换后的组织信息--', orgArr, workplaceJson);\r\n    this.setState({\r\n      orgArr,\r\n      workplaceJson,\r\n      connectionKey: storage.connectionKey,\r\n      selectRoleId: storage.roleId\r\n    })\r\n    //分辨率改变后窗口自动改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig', win())\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _select = (value, e) => {\r\n    console.log(value, e);  //value的值为id\r\n\r\n  }\r\n\r\n  _next = () => {\r\n    // this.props.history.push('/page8')\r\n\r\n    let { workplaceId, organizationId, connectionKey, selectRoleId } = this.state\r\n    console.log({ workplaceId, organizationId, connectionKey, selectRoleId });\r\n\r\n    // this.setState({\r\n    //   spin: true\r\n    // })\r\n    // fetchRequest(`/organization/updateLastWorkplace/${storage.userId}/${workplaceId}`)\r\n    //   .then(res => {\r\n    //     console.log(res);\r\n    //     this.setState({\r\n    //       spin: false\r\n    //     })\r\n    //     if (res.msg === 'success') {\r\n    //       storage.lastWorkplaceId = workplaceId\r\n    //       this.props.history.goBack()\r\n    //     }\r\n    //   })\r\n    //   .catch(err => {\r\n    //     this.setState({\r\n    //       spin: false\r\n    //     })\r\n    //     console.log(err);\r\n    //   })\r\n\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    console.log('入参', { userId: storage.userId, roleId: storage.roleId, workplaceId });\r\n    fetchRequest4(`/user/changeLatestWorkplace/${storage.userId}/${2}/${workplaceId}`, \"GET\")\r\n      .then(res => {\r\n        console.log('切换成功', res);\r\n        storage.lastWorkplaceId = `${workplaceId}`\r\n        storage.lastOrganization = organizationId\r\n        storage.connectionKey = connectionKey\r\n\r\n        if (selectRoleId) {\r\n          storage.roleId = selectRoleId\r\n        }\r\n\r\n        this.props.history.push('/uesr/selectExam')\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        storage.lastWorkplaceId = workplaceId\r\n        storage.lastOrganization = organizationId\r\n        storage.connectionKey = connectionKey\r\n\r\n        this.props.history.push('/uesr/selectExam')\r\n\r\n      })\r\n  }\r\n  render () {\r\n\r\n    let { orgArr, organizationName, workplaceName, workplaceJson, organizationId } = this.state\r\n    let orgOptions = orgArr.map(item => <Option key={item.organizationId} connectionkey={item.connectionKey} roleid={item.roleId} >{item.organizationName}</Option>)\r\n    let workplaceArr = []\r\n    if (workplaceJson[`${organizationId}`]) {\r\n      workplaceArr = workplaceJson[`${organizationId}`]\r\n      console.log('workArr = ', workplaceArr);\r\n    }\r\n    let workplaceOptions = workplaceArr.map(item => <Option key={item.workplaceId}>{item.workplaceName}</Option>)\r\n    return (\r\n      <div id=\"workplace\">\r\n        {/* 关闭缩小 */}\r\n        <div className=\"header\">\r\n          <MaxMin\r\n            onClick={() => { this.props.history.push('/') }}\r\n            onClick1={() => this.props.history.goBack()}\r\n          />\r\n        </div>\r\n        <div className=\"body flex\">\r\n          <div className=\"img flex\">\r\n            <img src={logo} alt=\"\" style={{ width: px(130) }} />\r\n          </div>\r\n\r\n          <div className=\"title\">\r\n            <div className=\"text\" style={{ fontSize: px(28), marginBottom: px(40) }}>Verify Organization Information</div>\r\n            <div className=\"text2\" style={{ fontSize: px(24), textAlign: 'center' }}>Good Pets</div>\r\n          </div>\r\n\r\n\r\n          <div className=\"selectAll\" style={{ marginBottom: px(160) }}>\r\n\r\n            <div className=\"select\" >\r\n              <p style={{ fontSize: px(18) }}>Select Organization:</p>\r\n              <Select style={{ width: '40%' }}\r\n                value={organizationName}\r\n                onChange={(val, e) => {\r\n                  console.log(val, e)\r\n                  let workplace = workplaceJson[e.key]\r\n                  console.log(workplace);\r\n                  this.setState({\r\n                    organizationId: e.key,\r\n                    organizationName: e.children,\r\n                    connectionKey: e.connectionkey,\r\n                    workplaceId: workplace[0].workplaceId,\r\n                    workplaceName: workplace[0].workplaceName,\r\n                    selectRoleId: e.roleid\r\n                  })\r\n                }}>\r\n                {/* <Option value=\"1\">UGA Veterinary Teaching Hospital</Option> */}\r\n                {orgOptions}\r\n              </Select>\r\n            </div>\r\n\r\n            <div className=\"select\" >\r\n              <p style={{ fontSize: px(18) }}>Select Location:</p>\r\n              <Select style={{ width: '40%' }}\r\n                value={workplaceName}\r\n                onChange={(val, e) => {\r\n                  console.log(val, e)\r\n                  this.setState({\r\n                    workplaceId: e.key,\r\n                    workplaceName: e.children\r\n                  })\r\n                }}>\r\n                {workplaceOptions}\r\n              </Select>\r\n            </div>\r\n\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"foot flex\">\r\n          <div className=\"btn\">\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size='large'\r\n              onClick={this._next}\r\n            >\r\n              Verify\r\n            </Button>\r\n          </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n",["321","322"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\home\\Home.jsx",["323","324"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\reducers\\index.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\heard\\Heard.js",["325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\index.jsx",["357","358","359","360","361","362"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["363","364","365","366","367","368"],"import React, {\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport { Image, Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport PressButton_Pro from './../../../assets/img/PressButton_Pro.png';\r\nimport AxillaryPlacement from './../../../assets/img/AxillaryPlacement.png';\r\nimport {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun\r\n} from '../../../store/actions';\r\nimport _ from 'lodash';\r\n// import HeaderItem from './headerItem';\r\nimport './linkEquipment.less';\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n    let { mellaConnectStatus } = hardwareMessage;\r\n    return (\r\n        <>\r\n            {/* <HeaderItem /> */}\r\n            <Content className={\"contentBox\"}>\r\n                {\r\n                    _.isEqual(mellaConnectStatus, 'disconnected') ?\r\n                        (\r\n                            <div className='startBox'>\r\n                                <p className='startTitle'>Turn on your<br />Mella Thermometer<br />or Pair New Mella</p>\r\n                                <img src={PressButton_Pro}></img>\r\n                            </div>\r\n                        ) :\r\n                        (\r\n                            <div className='startBox'>\r\n                                <p className='startTitle'>Ready, place under foreleg</p>\r\n                                <img src={AxillaryPlacement}></img>\r\n                                <div className='bottomTip'>\r\n                                    <p className='tipTitle'>Need Help With Accurate Placement On Pet?</p>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                }\r\n            </Content>\r\n        </>\r\n    );\r\n}\r\nexport default connect(\r\n    state => ({\r\n        petMessage: state.petReduce.petDetailInfo,\r\n        hardwareMessage: state.hardwareReduce,\r\n    }),\r\n    {\r\n        selectHardwareModalShowFun,\r\n        petSortTypeFun,\r\n        petDetailInfoFun,\r\n        setMellaConnectStatusFun,\r\n        setMellaMeasureValueFun,\r\n        setMellaPredictValueFun,\r\n        setMellaMeasurePartFun\r\n    }\r\n)(LinkEquipment);",["369","370"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx",["371","372","373","374","375"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\AddDevice.jsx",["376","377","378","379","380","381","382","383","384","385","386","387","388","389","390"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\petTable\\index.jsx",["391","392","393","394","395","396","397","398"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["399","400","401","402"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\gender.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\myModal\\MyModal.jsx",["403","404"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\minClose\\MinClose.js",["405","406","407"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil4.js",["408","409","410","411"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\biggiePage\\index.jsx",["412","413","414","415","416","417","418"],{"ruleId":"419","severity":1,"message":"420","line":3,"column":3,"nodeType":"421","messageId":"422","endLine":3,"endColumn":8},{"ruleId":"419","severity":1,"message":"423","line":5,"column":3,"nodeType":"421","messageId":"422","endLine":5,"endColumn":10},{"ruleId":"419","severity":1,"message":"424","line":10,"column":8,"nodeType":"421","messageId":"422","endLine":10,"endColumn":17},{"ruleId":"419","severity":1,"message":"425","line":12,"column":10,"nodeType":"421","messageId":"422","endLine":12,"endColumn":22},{"ruleId":"419","severity":1,"message":"426","line":8,"column":10,"nodeType":"421","messageId":"422","endLine":8,"endColumn":30},{"ruleId":"419","severity":1,"message":"427","line":18,"column":9,"nodeType":"421","messageId":"422","endLine":18,"endColumn":15},{"ruleId":"428","replacedBy":"429"},{"ruleId":"430","replacedBy":"431"},{"ruleId":"419","severity":1,"message":"432","line":4,"column":3,"nodeType":"421","messageId":"422","endLine":4,"endColumn":8},{"ruleId":"419","severity":1,"message":"420","line":5,"column":3,"nodeType":"421","messageId":"422","endLine":5,"endColumn":8},{"ruleId":"419","severity":1,"message":"433","line":6,"column":3,"nodeType":"421","messageId":"422","endLine":6,"endColumn":9},{"ruleId":"419","severity":1,"message":"434","line":7,"column":3,"nodeType":"421","messageId":"422","endLine":7,"endColumn":8},{"ruleId":"419","severity":1,"message":"435","line":10,"column":3,"nodeType":"421","messageId":"422","endLine":10,"endColumn":8},{"ruleId":"419","severity":1,"message":"436","line":11,"column":3,"nodeType":"421","messageId":"422","endLine":11,"endColumn":9},{"ruleId":"419","severity":1,"message":"437","line":12,"column":3,"nodeType":"421","messageId":"422","endLine":12,"endColumn":17},{"ruleId":"419","severity":1,"message":"438","line":15,"column":8,"nodeType":"421","messageId":"422","endLine":15,"endColumn":17},{"ruleId":"419","severity":1,"message":"439","line":16,"column":8,"nodeType":"421","messageId":"422","endLine":16,"endColumn":15},{"ruleId":"419","severity":1,"message":"440","line":17,"column":8,"nodeType":"421","messageId":"422","endLine":17,"endColumn":14},{"ruleId":"419","severity":1,"message":"441","line":20,"column":10,"nodeType":"421","messageId":"422","endLine":20,"endColumn":22},{"ruleId":"419","severity":1,"message":"442","line":21,"column":8,"nodeType":"421","messageId":"422","endLine":21,"endColumn":14},{"ruleId":"419","severity":1,"message":"443","line":27,"column":10,"nodeType":"421","messageId":"422","endLine":27,"endColumn":14},{"ruleId":"419","severity":1,"message":"444","line":27,"column":16,"nodeType":"421","messageId":"422","endLine":27,"endColumn":20},{"ruleId":"419","severity":1,"message":"445","line":27,"column":22,"nodeType":"421","messageId":"422","endLine":27,"endColumn":24},{"ruleId":"419","severity":1,"message":"446","line":39,"column":9,"nodeType":"421","messageId":"422","endLine":39,"endColumn":16},{"ruleId":"428","replacedBy":"447"},{"ruleId":"430","replacedBy":"448"},{"ruleId":"419","severity":1,"message":"449","line":6,"column":5,"nodeType":"421","messageId":"422","endLine":6,"endColumn":10},{"ruleId":"419","severity":1,"message":"450","line":12,"column":13,"nodeType":"421","messageId":"422","endLine":12,"endColumn":19},{"ruleId":"451","severity":1,"message":"452","line":15,"column":20,"nodeType":"453","messageId":"454","endLine":15,"endColumn":22},{"ruleId":"451","severity":1,"message":"452","line":59,"column":20,"nodeType":"453","messageId":"454","endLine":59,"endColumn":22},{"ruleId":"455","severity":1,"message":"456","line":27,"column":8,"nodeType":"457","endLine":27,"endColumn":10,"suggestions":"458"},{"ruleId":"419","severity":1,"message":"434","line":5,"column":28,"nodeType":"421","messageId":"422","endLine":5,"endColumn":33},{"ruleId":"419","severity":1,"message":"459","line":5,"column":42,"nodeType":"421","messageId":"422","endLine":5,"endColumn":45},{"ruleId":"419","severity":1,"message":"460","line":29,"column":18,"nodeType":"421","messageId":"422","endLine":29,"endColumn":22},{"ruleId":"461","severity":1,"message":"462","line":66,"column":28,"nodeType":"463","endLine":66,"endColumn":57},{"ruleId":"461","severity":1,"message":"462","line":68,"column":28,"nodeType":"463","endLine":68,"endColumn":57},{"ruleId":"461","severity":1,"message":"462","line":70,"column":28,"nodeType":"463","endLine":70,"endColumn":57},{"ruleId":"461","severity":1,"message":"462","line":72,"column":28,"nodeType":"463","endLine":72,"endColumn":57},{"ruleId":"461","severity":1,"message":"462","line":85,"column":21,"nodeType":"463","endLine":92,"endColumn":23},{"ruleId":"461","severity":1,"message":"462","line":94,"column":25,"nodeType":"463","endLine":94,"endColumn":45},{"ruleId":"451","severity":1,"message":"464","line":147,"column":32,"nodeType":"453","messageId":"454","endLine":147,"endColumn":34},{"ruleId":"455","severity":1,"message":"465","line":228,"column":8,"nodeType":"457","endLine":228,"endColumn":10,"suggestions":"466"},{"ruleId":"419","severity":1,"message":"449","line":5,"column":5,"nodeType":"421","messageId":"422","endLine":5,"endColumn":10},{"ruleId":"419","severity":1,"message":"450","line":11,"column":9,"nodeType":"421","messageId":"422","endLine":11,"endColumn":15},{"ruleId":"451","severity":1,"message":"452","line":14,"column":16,"nodeType":"453","messageId":"454","endLine":14,"endColumn":18},{"ruleId":"451","severity":1,"message":"452","line":58,"column":16,"nodeType":"453","messageId":"454","endLine":58,"endColumn":18},{"ruleId":"419","severity":1,"message":"467","line":2,"column":5,"nodeType":"421","messageId":"422","endLine":2,"endColumn":14},{"ruleId":"419","severity":1,"message":"468","line":3,"column":5,"nodeType":"421","messageId":"422","endLine":3,"endColumn":13},{"ruleId":"419","severity":1,"message":"469","line":5,"column":10,"nodeType":"421","messageId":"422","endLine":5,"endColumn":15},{"ruleId":"419","severity":1,"message":"470","line":16,"column":8,"nodeType":"421","messageId":"422","endLine":16,"endColumn":9},{"ruleId":"419","severity":1,"message":"471","line":19,"column":18,"nodeType":"421","messageId":"422","endLine":19,"endColumn":24},{"ruleId":"419","severity":1,"message":"472","line":22,"column":11,"nodeType":"421","messageId":"422","endLine":22,"endColumn":29},{"ruleId":"419","severity":1,"message":"473","line":3,"column":10,"nodeType":"421","messageId":"422","endLine":3,"endColumn":23},{"ruleId":"419","severity":1,"message":"474","line":16,"column":8,"nodeType":"421","messageId":"422","endLine":16,"endColumn":17},{"ruleId":"428","replacedBy":"475"},{"ruleId":"430","replacedBy":"476"},{"ruleId":"419","severity":1,"message":"477","line":2,"column":60,"nodeType":"421","messageId":"422","endLine":2,"endColumn":64},{"ruleId":"419","severity":1,"message":"438","line":3,"column":8,"nodeType":"421","messageId":"422","endLine":3,"endColumn":17},{"ruleId":"419","severity":1,"message":"441","line":6,"column":32,"nodeType":"421","messageId":"422","endLine":6,"endColumn":44},{"ruleId":"419","severity":1,"message":"478","line":6,"column":46,"nodeType":"421","messageId":"422","endLine":6,"endColumn":61},{"ruleId":"419","severity":1,"message":"446","line":29,"column":9,"nodeType":"421","messageId":"422","endLine":29,"endColumn":16},{"ruleId":"419","severity":1,"message":"479","line":36,"column":5,"nodeType":"421","messageId":"422","endLine":36,"endColumn":8},{"ruleId":"480","severity":1,"message":"481","line":145,"column":5,"nodeType":"482","messageId":"483","endLine":151,"endColumn":6},{"ruleId":"484","severity":1,"message":"485","line":158,"column":41,"nodeType":"486","messageId":"487","endLine":158,"endColumn":43},{"ruleId":"488","severity":1,"message":"489","line":302,"column":34,"nodeType":"453","messageId":"490","endLine":302,"endColumn":48},{"ruleId":"488","severity":1,"message":"489","line":353,"column":29,"nodeType":"453","messageId":"490","endLine":353,"endColumn":42},{"ruleId":"419","severity":1,"message":"491","line":441,"column":11,"nodeType":"421","messageId":"422","endLine":441,"endColumn":21},{"ruleId":"419","severity":1,"message":"492","line":574,"column":11,"nodeType":"421","messageId":"422","endLine":574,"endColumn":24},{"ruleId":"461","severity":1,"message":"462","line":770,"column":15,"nodeType":"463","endLine":770,"endColumn":63},{"ruleId":"419","severity":1,"message":"493","line":834,"column":5,"nodeType":"421","messageId":"422","endLine":834,"endColumn":12},{"ruleId":"419","severity":1,"message":"494","line":835,"column":11,"nodeType":"421","messageId":"422","endLine":835,"endColumn":20},{"ruleId":"461","severity":1,"message":"462","line":870,"column":15,"nodeType":"463","endLine":870,"endColumn":63},{"ruleId":"480","severity":1,"message":"481","line":901,"column":5,"nodeType":"482","messageId":"483","endLine":904,"endColumn":6},{"ruleId":"480","severity":1,"message":"481","line":906,"column":5,"nodeType":"482","messageId":"483","endLine":909,"endColumn":6},{"ruleId":"419","severity":1,"message":"495","line":1042,"column":61,"nodeType":"421","messageId":"422","endLine":1042,"endColumn":78},{"ruleId":"419","severity":1,"message":"496","line":1042,"column":80,"nodeType":"421","messageId":"422","endLine":1042,"endColumn":85},{"ruleId":"419","severity":1,"message":"494","line":1042,"column":118,"nodeType":"421","messageId":"422","endLine":1042,"endColumn":127},{"ruleId":"497","severity":1,"message":"498","line":1212,"column":11,"nodeType":"499","endLine":1212,"endColumn":42},{"ruleId":"419","severity":1,"message":"500","line":58,"column":9,"nodeType":"421","messageId":"422","endLine":58,"endColumn":12},{"ruleId":"419","severity":1,"message":"501","line":35,"column":9,"nodeType":"421","messageId":"422","endLine":35,"endColumn":16},{"ruleId":"455","severity":1,"message":"502","line":37,"column":6,"nodeType":"457","endLine":37,"endColumn":8,"suggestions":"503"},{"ruleId":"480","severity":1,"message":"481","line":75,"column":5,"nodeType":"482","messageId":"483","endLine":94,"endColumn":6},{"ruleId":"419","severity":1,"message":"467","line":2,"column":5,"nodeType":"421","messageId":"422","endLine":2,"endColumn":14},{"ruleId":"419","severity":1,"message":"468","line":3,"column":5,"nodeType":"421","messageId":"422","endLine":3,"endColumn":13},{"ruleId":"419","severity":1,"message":"469","line":5,"column":10,"nodeType":"421","messageId":"422","endLine":5,"endColumn":15},{"ruleId":"419","severity":1,"message":"504","line":7,"column":8,"nodeType":"421","messageId":"422","endLine":7,"endColumn":23},{"ruleId":"419","severity":1,"message":"470","line":18,"column":8,"nodeType":"421","messageId":"422","endLine":18,"endColumn":9},{"ruleId":"419","severity":1,"message":"471","line":21,"column":18,"nodeType":"421","messageId":"422","endLine":21,"endColumn":24},{"ruleId":"419","severity":1,"message":"472","line":24,"column":11,"nodeType":"421","messageId":"422","endLine":24,"endColumn":29},{"ruleId":"461","severity":1,"message":"462","line":30,"column":21,"nodeType":"463","endLine":30,"endColumn":46},{"ruleId":"419","severity":1,"message":"505","line":2,"column":10,"nodeType":"421","messageId":"422","endLine":2,"endColumn":20},{"ruleId":"419","severity":1,"message":"506","line":4,"column":5,"nodeType":"421","messageId":"422","endLine":4,"endColumn":9},{"ruleId":"419","severity":1,"message":"507","line":5,"column":5,"nodeType":"421","messageId":"422","endLine":5,"endColumn":12},{"ruleId":"419","severity":1,"message":"433","line":6,"column":5,"nodeType":"421","messageId":"422","endLine":6,"endColumn":11},{"ruleId":"419","severity":1,"message":"435","line":7,"column":5,"nodeType":"421","messageId":"422","endLine":7,"endColumn":10},{"ruleId":"419","severity":1,"message":"444","line":15,"column":10,"nodeType":"421","messageId":"422","endLine":15,"endColumn":14},{"ruleId":"419","severity":1,"message":"443","line":15,"column":20,"nodeType":"421","messageId":"422","endLine":15,"endColumn":24},{"ruleId":"419","severity":1,"message":"508","line":16,"column":8,"nodeType":"421","messageId":"422","endLine":16,"endColumn":21},{"ruleId":"484","severity":1,"message":"485","line":49,"column":36,"nodeType":"486","messageId":"487","endLine":49,"endColumn":38},{"ruleId":"484","severity":1,"message":"485","line":65,"column":32,"nodeType":"486","messageId":"487","endLine":65,"endColumn":34},{"ruleId":"484","severity":1,"message":"485","line":74,"column":37,"nodeType":"486","messageId":"487","endLine":74,"endColumn":39},{"ruleId":"484","severity":1,"message":"485","line":80,"column":23,"nodeType":"486","messageId":"487","endLine":80,"endColumn":25},{"ruleId":"484","severity":1,"message":"485","line":82,"column":31,"nodeType":"486","messageId":"487","endLine":82,"endColumn":33},{"ruleId":"451","severity":1,"message":"452","line":86,"column":32,"nodeType":"453","messageId":"454","endLine":86,"endColumn":34},{"ruleId":"455","severity":1,"message":"509","line":104,"column":8,"nodeType":"457","endLine":104,"endColumn":10,"suggestions":"510"},{"ruleId":"484","severity":1,"message":"485","line":114,"column":39,"nodeType":"486","messageId":"487","endLine":114,"endColumn":41},{"ruleId":"484","severity":1,"message":"485","line":115,"column":49,"nodeType":"486","messageId":"487","endLine":115,"endColumn":51},{"ruleId":"451","severity":1,"message":"464","line":124,"column":39,"nodeType":"453","messageId":"454","endLine":124,"endColumn":41},{"ruleId":"484","severity":1,"message":"485","line":137,"column":39,"nodeType":"486","messageId":"487","endLine":137,"endColumn":41},{"ruleId":"455","severity":1,"message":"511","line":152,"column":8,"nodeType":"457","endLine":152,"endColumn":20,"suggestions":"512"},{"ruleId":"513","severity":1,"message":"514","line":202,"column":21,"nodeType":"463","endLine":207,"endColumn":22},{"ruleId":"428","replacedBy":"515"},{"ruleId":"430","replacedBy":"516"},{"ruleId":"419","severity":1,"message":"438","line":9,"column":8,"nodeType":"421","messageId":"422","endLine":9,"endColumn":17},{"ruleId":"419","severity":1,"message":"426","line":10,"column":10,"nodeType":"421","messageId":"422","endLine":10,"endColumn":30},{"ruleId":"419","severity":1,"message":"517","line":10,"column":32,"nodeType":"421","messageId":"422","endLine":10,"endColumn":47},{"ruleId":"419","severity":1,"message":"518","line":14,"column":8,"nodeType":"421","messageId":"422","endLine":14,"endColumn":16},{"ruleId":"419","severity":1,"message":"444","line":19,"column":10,"nodeType":"421","messageId":"422","endLine":19,"endColumn":14},{"ruleId":"480","severity":1,"message":"481","line":85,"column":25,"nodeType":"482","messageId":"483","endLine":114,"endColumn":26},{"ruleId":"519","severity":1,"message":"520","line":103,"column":29,"nodeType":"521","messageId":"522","endLine":104,"endColumn":68},{"ruleId":"519","severity":1,"message":"520","line":105,"column":29,"nodeType":"521","messageId":"522","endLine":112,"endColumn":39},{"ruleId":"419","severity":1,"message":"523","line":214,"column":42,"nodeType":"421","messageId":"422","endLine":214,"endColumn":58},{"ruleId":"419","severity":1,"message":"524","line":235,"column":29,"nodeType":"421","messageId":"422","endLine":235,"endColumn":42},{"ruleId":"419","severity":1,"message":"525","line":270,"column":49,"nodeType":"421","messageId":"422","endLine":270,"endColumn":63},{"ruleId":"419","severity":1,"message":"526","line":270,"column":65,"nodeType":"421","messageId":"422","endLine":270,"endColumn":79},{"ruleId":"419","severity":1,"message":"449","line":4,"column":5,"nodeType":"421","messageId":"422","endLine":4,"endColumn":10},{"ruleId":"419","severity":1,"message":"450","line":10,"column":9,"nodeType":"421","messageId":"422","endLine":10,"endColumn":15},{"ruleId":"451","severity":1,"message":"452","line":13,"column":16,"nodeType":"453","messageId":"454","endLine":13,"endColumn":18},{"ruleId":"451","severity":1,"message":"452","line":58,"column":16,"nodeType":"453","messageId":"454","endLine":58,"endColumn":18},{"ruleId":"455","severity":1,"message":"527","line":63,"column":6,"nodeType":"457","endLine":63,"endColumn":26,"suggestions":"528"},{"ruleId":"419","severity":1,"message":"435","line":6,"column":3,"nodeType":"421","messageId":"422","endLine":6,"endColumn":8},{"ruleId":"419","severity":1,"message":"423","line":7,"column":3,"nodeType":"421","messageId":"422","endLine":7,"endColumn":10},{"ruleId":"419","severity":1,"message":"477","line":8,"column":3,"nodeType":"421","messageId":"422","endLine":8,"endColumn":7},{"ruleId":"419","severity":1,"message":"444","line":15,"column":10,"nodeType":"421","messageId":"422","endLine":15,"endColumn":14},{"ruleId":"419","severity":1,"message":"445","line":15,"column":16,"nodeType":"421","messageId":"422","endLine":15,"endColumn":18},{"ruleId":"419","severity":1,"message":"426","line":17,"column":10,"nodeType":"421","messageId":"422","endLine":17,"endColumn":30},{"ruleId":"419","severity":1,"message":"441","line":17,"column":32,"nodeType":"421","messageId":"422","endLine":17,"endColumn":44},{"ruleId":"419","severity":1,"message":"478","line":17,"column":46,"nodeType":"421","messageId":"422","endLine":17,"endColumn":61},{"ruleId":"419","severity":1,"message":"425","line":18,"column":10,"nodeType":"421","messageId":"422","endLine":18,"endColumn":22},{"ruleId":"428","replacedBy":"529"},{"ruleId":"430","replacedBy":"530"},{"ruleId":"419","severity":1,"message":"508","line":13,"column":8,"nodeType":"421","messageId":"422","endLine":13,"endColumn":21},{"ruleId":"419","severity":1,"message":"531","line":14,"column":8,"nodeType":"421","messageId":"422","endLine":14,"endColumn":20},{"ruleId":"419","severity":1,"message":"507","line":5,"column":3,"nodeType":"421","messageId":"422","endLine":5,"endColumn":10},{"ruleId":"419","severity":1,"message":"433","line":6,"column":3,"nodeType":"421","messageId":"422","endLine":6,"endColumn":9},{"ruleId":"419","severity":1,"message":"435","line":7,"column":3,"nodeType":"421","messageId":"422","endLine":7,"endColumn":8},{"ruleId":"419","severity":1,"message":"441","line":10,"column":10,"nodeType":"421","messageId":"422","endLine":10,"endColumn":22},{"ruleId":"419","severity":1,"message":"532","line":11,"column":10,"nodeType":"421","messageId":"422","endLine":11,"endColumn":24},{"ruleId":"419","severity":1,"message":"533","line":21,"column":8,"nodeType":"421","messageId":"422","endLine":21,"endColumn":16},{"ruleId":"419","severity":1,"message":"534","line":28,"column":8,"nodeType":"421","messageId":"422","endLine":28,"endColumn":17},{"ruleId":"419","severity":1,"message":"535","line":29,"column":8,"nodeType":"421","messageId":"422","endLine":29,"endColumn":21},{"ruleId":"419","severity":1,"message":"536","line":31,"column":8,"nodeType":"421","messageId":"422","endLine":31,"endColumn":16},{"ruleId":"419","severity":1,"message":"439","line":43,"column":8,"nodeType":"421","messageId":"422","endLine":43,"endColumn":15},{"ruleId":"419","severity":1,"message":"446","line":45,"column":9,"nodeType":"421","messageId":"422","endLine":45,"endColumn":16},{"ruleId":"419","severity":1,"message":"537","line":46,"column":7,"nodeType":"421","messageId":"422","endLine":46,"endColumn":13},{"ruleId":"419","severity":1,"message":"538","line":50,"column":7,"nodeType":"421","messageId":"422","endLine":50,"endColumn":17},{"ruleId":"519","severity":1,"message":"520","line":165,"column":7,"nodeType":"521","messageId":"522","endLine":166,"endColumn":31},{"ruleId":"519","severity":1,"message":"520","line":167,"column":7,"nodeType":"521","messageId":"522","endLine":170,"endColumn":15},{"ruleId":"519","severity":1,"message":"539","line":176,"column":7,"nodeType":"521","messageId":"540","endLine":177,"endColumn":15},{"ruleId":"455","severity":1,"message":"541","line":194,"column":6,"nodeType":"457","endLine":194,"endColumn":8,"suggestions":"542"},{"ruleId":"419","severity":1,"message":"543","line":232,"column":13,"nodeType":"421","messageId":"422","endLine":232,"endColumn":20},{"ruleId":"461","severity":1,"message":"462","line":868,"column":17,"nodeType":"463","endLine":868,"endColumn":63},{"ruleId":"461","severity":1,"message":"462","line":874,"column":17,"nodeType":"463","endLine":874,"endColumn":65},{"ruleId":"513","severity":1,"message":"544","line":908,"column":15,"nodeType":"463","endLine":913,"endColumn":16},{"ruleId":"513","severity":1,"message":"544","line":914,"column":15,"nodeType":"463","endLine":920,"endColumn":16},{"ruleId":"461","severity":1,"message":"462","line":1000,"column":17,"nodeType":"463","endLine":1000,"endColumn":63},{"ruleId":"461","severity":1,"message":"462","line":1005,"column":15,"nodeType":"463","endLine":1005,"endColumn":64},{"ruleId":"513","severity":1,"message":"544","line":1098,"column":13,"nodeType":"463","endLine":1100,"endColumn":14},{"ruleId":"513","severity":1,"message":"544","line":1163,"column":15,"nodeType":"463","endLine":1165,"endColumn":16},{"ruleId":"513","severity":1,"message":"544","line":1179,"column":13,"nodeType":"463","endLine":1181,"endColumn":14},{"ruleId":"513","severity":1,"message":"544","line":1247,"column":15,"nodeType":"463","endLine":1249,"endColumn":16},{"ruleId":"513","severity":1,"message":"544","line":1262,"column":15,"nodeType":"463","endLine":1264,"endColumn":16},{"ruleId":"461","severity":1,"message":"462","line":1303,"column":13,"nodeType":"463","endLine":1303,"endColumn":58},{"ruleId":"461","severity":1,"message":"462","line":1504,"column":17,"nodeType":"463","endLine":1504,"endColumn":52},{"ruleId":"461","severity":1,"message":"462","line":1505,"column":17,"nodeType":"463","endLine":1505,"endColumn":51},{"ruleId":"419","severity":1,"message":"467","line":2,"column":5,"nodeType":"421","messageId":"422","endLine":2,"endColumn":14},{"ruleId":"419","severity":1,"message":"468","line":3,"column":5,"nodeType":"421","messageId":"422","endLine":3,"endColumn":13},{"ruleId":"419","severity":1,"message":"506","line":6,"column":18,"nodeType":"421","messageId":"422","endLine":6,"endColumn":22},{"ruleId":"419","severity":1,"message":"545","line":6,"column":24,"nodeType":"421","messageId":"422","endLine":6,"endColumn":34},{"ruleId":"419","severity":1,"message":"546","line":23,"column":9,"nodeType":"421","messageId":"422","endLine":23,"endColumn":16},{"ruleId":"419","severity":1,"message":"471","line":23,"column":18,"nodeType":"421","messageId":"422","endLine":23,"endColumn":24},{"ruleId":"419","severity":1,"message":"467","line":2,"column":5,"nodeType":"421","messageId":"422","endLine":2,"endColumn":14},{"ruleId":"419","severity":1,"message":"468","line":3,"column":5,"nodeType":"421","messageId":"422","endLine":3,"endColumn":13},{"ruleId":"419","severity":1,"message":"469","line":5,"column":10,"nodeType":"421","messageId":"422","endLine":5,"endColumn":15},{"ruleId":"419","severity":1,"message":"471","line":22,"column":18,"nodeType":"421","messageId":"422","endLine":22,"endColumn":24},{"ruleId":"461","severity":1,"message":"462","line":35,"column":33,"nodeType":"463","endLine":35,"endColumn":60},{"ruleId":"461","severity":1,"message":"462","line":41,"column":33,"nodeType":"463","endLine":41,"endColumn":62},{"ruleId":"428","replacedBy":"547"},{"ruleId":"430","replacedBy":"548"},{"ruleId":"419","severity":1,"message":"420","line":4,"column":3,"nodeType":"421","messageId":"422","endLine":4,"endColumn":8},{"ruleId":"419","severity":1,"message":"549","line":5,"column":3,"nodeType":"421","messageId":"422","endLine":5,"endColumn":7},{"ruleId":"419","severity":1,"message":"434","line":7,"column":3,"nodeType":"421","messageId":"422","endLine":7,"endColumn":8},{"ruleId":"419","severity":1,"message":"426","line":13,"column":10,"nodeType":"421","messageId":"422","endLine":13,"endColumn":30},{"ruleId":"419","severity":1,"message":"550","line":19,"column":10,"nodeType":"421","messageId":"422","endLine":19,"endColumn":23},{"ruleId":"419","severity":1,"message":"420","line":4,"column":10,"nodeType":"421","messageId":"422","endLine":4,"endColumn":15},{"ruleId":"419","severity":1,"message":"433","line":4,"column":17,"nodeType":"421","messageId":"422","endLine":4,"endColumn":23},{"ruleId":"419","severity":1,"message":"477","line":4,"column":34,"nodeType":"421","messageId":"422","endLine":4,"endColumn":38},{"ruleId":"419","severity":1,"message":"551","line":4,"column":40,"nodeType":"421","messageId":"422","endLine":4,"endColumn":47},{"ruleId":"419","severity":1,"message":"426","line":5,"column":10,"nodeType":"421","messageId":"422","endLine":5,"endColumn":30},{"ruleId":"419","severity":1,"message":"441","line":5,"column":32,"nodeType":"421","messageId":"422","endLine":5,"endColumn":44},{"ruleId":"419","severity":1,"message":"552","line":9,"column":8,"nodeType":"421","messageId":"422","endLine":9,"endColumn":18},{"ruleId":"419","severity":1,"message":"536","line":18,"column":8,"nodeType":"421","messageId":"422","endLine":18,"endColumn":16},{"ruleId":"419","severity":1,"message":"553","line":19,"column":8,"nodeType":"421","messageId":"422","endLine":19,"endColumn":16},{"ruleId":"419","severity":1,"message":"554","line":20,"column":8,"nodeType":"421","messageId":"422","endLine":20,"endColumn":18},{"ruleId":"419","severity":1,"message":"555","line":21,"column":8,"nodeType":"421","messageId":"422","endLine":21,"endColumn":16},{"ruleId":"419","severity":1,"message":"556","line":23,"column":8,"nodeType":"421","messageId":"422","endLine":23,"endColumn":15},{"ruleId":"419","severity":1,"message":"445","line":24,"column":26,"nodeType":"421","messageId":"422","endLine":24,"endColumn":28},{"ruleId":"455","severity":1,"message":"557","line":60,"column":8,"nodeType":"457","endLine":60,"endColumn":10,"suggestions":"558"},{"ruleId":"455","severity":1,"message":"559","line":102,"column":8,"nodeType":"457","endLine":102,"endColumn":38,"suggestions":"560"},{"ruleId":"419","severity":1,"message":"467","line":1,"column":27,"nodeType":"421","messageId":"422","endLine":1,"endColumn":36},{"ruleId":"419","severity":1,"message":"444","line":8,"column":10,"nodeType":"421","messageId":"422","endLine":8,"endColumn":14},{"ruleId":"419","severity":1,"message":"443","line":8,"column":20,"nodeType":"421","messageId":"422","endLine":8,"endColumn":24},{"ruleId":"419","severity":1,"message":"561","line":18,"column":9,"nodeType":"421","messageId":"422","endLine":18,"endColumn":16},{"ruleId":"419","severity":1,"message":"562","line":68,"column":21,"nodeType":"421","messageId":"422","endLine":68,"endColumn":27},{"ruleId":"419","severity":1,"message":"563","line":72,"column":21,"nodeType":"421","messageId":"422","endLine":72,"endColumn":28},{"ruleId":"513","severity":1,"message":"544","line":160,"column":17,"nodeType":"463","endLine":176,"endColumn":18},{"ruleId":"480","severity":1,"message":"481","line":224,"column":29,"nodeType":"482","messageId":"483","endLine":243,"endColumn":30},{"ruleId":"419","severity":1,"message":"436","line":4,"column":3,"nodeType":"421","messageId":"422","endLine":4,"endColumn":9},{"ruleId":"419","severity":1,"message":"426","line":10,"column":10,"nodeType":"421","messageId":"422","endLine":10,"endColumn":30},{"ruleId":"419","severity":1,"message":"564","line":15,"column":8,"nodeType":"421","messageId":"422","endLine":15,"endColumn":11},{"ruleId":"419","severity":1,"message":"565","line":17,"column":10,"nodeType":"421","messageId":"422","endLine":17,"endColumn":21},{"ruleId":"419","severity":1,"message":"566","line":13,"column":10,"nodeType":"421","messageId":"422","endLine":13,"endColumn":12},{"ruleId":"419","severity":1,"message":"445","line":13,"column":14,"nodeType":"421","messageId":"422","endLine":13,"endColumn":16},{"ruleId":"419","severity":1,"message":"467","line":2,"column":27,"nodeType":"421","messageId":"422","endLine":2,"endColumn":36},{"ruleId":"419","severity":1,"message":"505","line":3,"column":10,"nodeType":"421","messageId":"422","endLine":3,"endColumn":20},{"ruleId":"419","severity":1,"message":"444","line":8,"column":14,"nodeType":"421","messageId":"422","endLine":8,"endColumn":18},{"ruleId":"419","severity":1,"message":"449","line":7,"column":5,"nodeType":"421","messageId":"422","endLine":7,"endColumn":10},{"ruleId":"419","severity":1,"message":"450","line":20,"column":9,"nodeType":"421","messageId":"422","endLine":20,"endColumn":15},{"ruleId":"451","severity":1,"message":"452","line":23,"column":16,"nodeType":"453","messageId":"454","endLine":23,"endColumn":18},{"ruleId":"451","severity":1,"message":"452","line":74,"column":16,"nodeType":"453","messageId":"454","endLine":74,"endColumn":18},{"ruleId":"419","severity":1,"message":"433","line":5,"column":10,"nodeType":"421","messageId":"422","endLine":5,"endColumn":16},{"ruleId":"419","severity":1,"message":"567","line":5,"column":18,"nodeType":"421","messageId":"422","endLine":5,"endColumn":26},{"ruleId":"419","severity":1,"message":"434","line":5,"column":28,"nodeType":"421","messageId":"422","endLine":5,"endColumn":33},{"ruleId":"419","severity":1,"message":"432","line":5,"column":35,"nodeType":"421","messageId":"422","endLine":5,"endColumn":40},{"ruleId":"419","severity":1,"message":"459","line":5,"column":42,"nodeType":"421","messageId":"422","endLine":5,"endColumn":45},{"ruleId":"419","severity":1,"message":"568","line":5,"column":47,"nodeType":"421","messageId":"422","endLine":5,"endColumn":52},{"ruleId":"455","severity":1,"message":"569","line":50,"column":8,"nodeType":"457","endLine":50,"endColumn":24,"suggestions":"570"},"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'message' is defined but never used.","'mellaLogo' is defined but never used.","'fetchRequest' is defined but never used.","'createFromIconfontCN' is defined but never used.","'Option' is assigned a value but never used.","no-native-reassign",["571"],"no-negated-in-lhs",["572"],"'Table' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'Modal' is defined but never used.","'Select' is defined but never used.","'ConfigProvider' is defined but never used.","'Draggable' is defined but never used.","'Button1' is defined but never used.","'moment' is defined but never used.","'SyncOutlined' is defined but never used.","'MaxMin' is defined but never used.","'MTop' is defined but never used.","'mTop' is defined but never used.","'pX' is defined but never used.","'SubMenu' is assigned a value but never used.",["571"],["572"],"'token' is assigned a value but never used.","'header' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.","ArrayExpression",["573"],"'Tag' is defined but never used.","'memo' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["574"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Image' is defined but never used.","'_' is defined but never used.","'Header' is assigned a value but never used.","'mellaConnectStatus' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Praviders' is defined but never used.",["571"],["572"],"'Spin' is defined but never used.","'LoadingOutlined' is defined but never used.","'url' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","'petSpecies' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'mar' is assigned a value but never used.","'petList' is assigned a value but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["575"],"'PressButton_Pro' is defined but never used.","'useHistory' is defined but never used.","'Menu' is defined but never used.","'Popover' is defined but never used.","'electronStore' is defined but never used.","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["576"],"React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["577"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["571"],["572"],"'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'lastOrganization' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["578"],["571"],["572"],"'SelectionBox' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'MyIcon' is assigned a value but never used.","'allPetList' is assigned a value but never used.","Expected a 'break' statement before 'default'.","default","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["579"],"'bluData' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'PageHeader' is defined but never used.","'Content' is assigned a value but never used.",["571"],["572"],"'Form' is defined but never used.","'fetchRequest2' is defined but never used.","'BackTop' is defined but never used.","'blueSearch' is defined but never used.","'MouseDiv' is defined but never used.","'back_white' is defined but never used.","'back_hui' is defined but never used.","'MyModal' is defined but never used.","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["580"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["581"],"'history' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'dui' is defined but never used.","'FetchEszVet' is defined but never used.","'px' is defined but never used.","'Progress' is defined but never used.","'Badge' is defined but never used.","React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["582"],"no-global-assign","no-unsafe-negation",{"desc":"583","fix":"584"},{"desc":"585","fix":"586"},{"desc":"587","fix":"588"},{"desc":"589","fix":"590"},{"desc":"591","fix":"592"},{"desc":"593","fix":"594"},{"desc":"595","fix":"596"},{"desc":"597","fix":"598"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"603","text":"604"},"Update the dependencies array to be: [getPetTemperatureData]",{"range":"605","text":"606"},"Update the dependencies array to be: [_getExam]",{"range":"607","text":"608"},"Update the dependencies array to be: [listDate]",{"range":"609","text":"610"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"611","text":"612"},"Update the dependencies array to be: [hardwareList, selectHardwareType]",{"range":"613","text":"614"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"615","text":"616"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"617","text":"618"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"619","text":"620"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"621","text":"622"},[885,887],"[initSelectVale, listArr]",[7800,7802],"[getPetTemperatureData]",[1069,1071],"[_getExam]",[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]",[2600,2620],"[hardwareList, selectHardwareType]",[6392,6394],"[_noUSB, _send, blueSearch]",[2680,2682],"[setReceiveBroadcastHardwareInfoFun]",[3991,4021],"[devicesList, receiveBroadcastHardwareInfo]",[1723,1739],"[hardwareReduce, weight]"]