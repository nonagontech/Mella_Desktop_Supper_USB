[{"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\home\\Home.jsx":"1","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\appversion.js":"2","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\PetsUI.jsx":"3","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"4","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\App.js":"5","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"6","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\current.js":"7","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\index.jsx":"8","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"9","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\axios\\http.js":"10","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\petTable\\index.jsx":"11","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectExam\\SelectExam.jsx":"12","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx":"13","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx":"14","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\workPlace\\WorkPlace.jsx":"15","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx":"16","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil4.js":"17","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\combineScales\\index.jsx":"18","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"19","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"20","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectMella\\SelectMella.jsx":"21","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx":"22","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\selectionBox\\SelectionBox.jsx":"23","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\allPetsPage\\index.jsx":"24"},{"size":6248,"mtime":1657604200538,"results":"25","hashOfConfig":"26"},{"size":74,"mtime":1657604349981,"results":"27","hashOfConfig":"26"},{"size":7856,"mtime":1657604704833,"results":"28","hashOfConfig":"26"},{"size":55508,"mtime":1657679908937,"results":"29","hashOfConfig":"26"},{"size":7424,"mtime":1655469051969,"results":"30","hashOfConfig":"26"},{"size":5178,"mtime":1653893163118,"results":"31","hashOfConfig":"26"},{"size":1150,"mtime":1655469052127,"results":"32","hashOfConfig":"26"},{"size":1839,"mtime":1657534076479,"results":"33","hashOfConfig":"26"},{"size":6165,"mtime":1657534076458,"results":"34","hashOfConfig":"26"},{"size":846,"mtime":1653893163590,"results":"35","hashOfConfig":"26"},{"size":12123,"mtime":1657606663992,"results":"36","hashOfConfig":"26"},{"size":12757,"mtime":1653893163181,"results":"37","hashOfConfig":"26"},{"size":38143,"mtime":1656482638145,"results":"38","hashOfConfig":"26"},{"size":3373,"mtime":1657534076478,"results":"39","hashOfConfig":"26"},{"size":9743,"mtime":1653893163212,"results":"40","hashOfConfig":"26"},{"size":13496,"mtime":1653893163165,"results":"41","hashOfConfig":"26"},{"size":3126,"mtime":1653893163227,"results":"42","hashOfConfig":"26"},{"size":8221,"mtime":1656481876864,"results":"43","hashOfConfig":"26"},{"size":14822,"mtime":1657534076458,"results":"44","hashOfConfig":"26"},{"size":8196,"mtime":1653893163636,"results":"45","hashOfConfig":"26"},{"size":3973,"mtime":1653893163196,"results":"46","hashOfConfig":"26"},{"size":11451,"mtime":1653893163149,"results":"47","hashOfConfig":"26"},{"size":3371,"mtime":1653893163636,"results":"48","hashOfConfig":"26"},{"size":7652,"mtime":1655469052061,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"1xy2jmh",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\home\\Home.jsx",["109","110"],"import React, { Component, } from 'react'\nimport {\n    Button,\n    message\n} from 'antd';\n//import 'antd/dist/antd.css';\nimport './home.less'\nimport logo from './../../assets/images/mella.png'\n// import MaxMin from './../../utils/maxMin/MaxMin'\nimport temporaryStorage from './../../utils/temporaryStorage'\nimport { px, mTop, win, timerFun } from './../../utils/px'\nimport MinClose from '../../utils/minClose/MinClose';\nimport electronStore from './../../utils/electronStore'\nimport SelectionBox from './../../utils/selectionBox/SelectionBox'\nimport { addQRCode } from '../../utils/axios';\nimport { fetchRequest2 } from '../../utils/FetchUtil2';\nimport { version } from './../../utils/appversion'\nlet storage = window.localStorage;\n//定义变量:连续点击了几次logo\nlet logoClick = 0;\n//定义变量:点击logo的时间\nlet logoTime = 0;\nexport default class Home extends Component {\n    state = {\n        imgurl: '',\n        size: { width: 0, height: 0 }\n    }\n    componentDidMount () {\n        let ipcRenderer = window.electron.ipcRenderer\n        timerFun()\n        ipcRenderer.send('close-loading-window', 1)\n        ipcRenderer.send('small', win())\n        storage.measurepatientId = '';\n        temporaryStorage.logupVetInfo = {}\n        ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n        fetchRequest2('/user/getLoginQRcode', \"GET\", '')\n            // addQRCode()\n            .then(res => {\n                console.log('首页获取', res);\n\n\n            })\n            .catch(err => {\n\n                console.log(err);\n            })\n\n\n        addQRCode()\n            .then(res => {\n                message.destroy()\n\n                console.log('---获取二维码', res);\n\n            })\n            .catch(err => {\n\n                console.log(err);\n            })\n\n\n\n\n\n    }\n    resize = (e) => {\n        // console.log('-------------监听的数据', e);\n\n    }\n    componentWillUnmount () {\n        let ipcRenderer = window.electron.ipcRenderer\n        window.removeEventListener('resize', this.resize);\n\n        ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n    }\n    changeFenBianLv = (e) => {\n        console.log('changeFenBianLv');\n        console.log(e);\n        let ipcRenderer = window.electron.ipcRenderer\n        // ipcRenderer.send('small')\n        ipcRenderer.send('small', win())\n        this.setState({\n\n        })\n    }\n\n\n    _quickStart = () => {\n        console.log('dianji2')\n        this.props.history.push('/page1')\n        // this.props.history.push('/menuOptions/advancedsettings')\n\n    }\n    _createAccount = () => {\n        this.props.history.push('/uesr/logUp/VetPrifile')\n\n        // this.props.history.push('/uesr/logUp/JoinOrganizationByOption')\n\n    }\n    _test = () => {\n        console.log('点击');\n        console.log(navigator);\n        console.log(navigator.userAgent);\n        console.log('---------------------------');\n    }\n    _openUtils = () => {\n        console.log('点击来了', logoClick);\n        if (new Date() - logoTime > 500) {\n            logoClick = 0;\n            logoTime = new Date();\n\n        } else {\n            logoClick++;\n            logoTime = new Date();\n            if (logoClick >= 8) {\n                logoClick = 0;\n\n                let ipcRenderer = window.electron.ipcRenderer\n                ipcRenderer.send('openDevTools', true)\n            }\n        }\n\n    }\n    render () {\n        return (\n\n            <div id=\"home\">\n                {/* <MaxMin\n                    onClick={() => { this.props.history.push('/') }}\n                /> */}\n                <div className=\"daohang\" style={{ paddingTop: px(10), paddingRight: px(20) }}>\n                    <MinClose />\n                </div>\n                <div className='flex refresh' style={{ alignItems: 'flex-end', paddingRight: px(20) }}>\n                    <div className='flex' style={{ flexDirection: 'row', paddingTop: px(20), paddingRight: px(18), color: '#700B33', cursor: 'pointer' }}>\n\n                        V{version}\n                    </div>\n\n\n\n                </div>\n\n                <div className=\"heard\" >\n                    <div\n\n                        onClick={this._openUtils}\n                        className=\"logo\"\n\n                    >\n                        <img\n                            src={logo}\n                            alt=\"\"\n                            style={{ marginTop: mTop(100), marginBottom: mTop(100), width: px(300) }}\n                        />\n                    </div>\n\n                </div>\n\n\n                <div className=\"button\" style={{ marginBottom: px(25) }}>\n                    <Button\n                        style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\n                        type=\"primary\"\n                        shape=\"round\"\n                        size='large'\n                        onClick={() => { this.props.history.push('/page11') }}\n                    // onClick={() => { this.props.history.push('/menuOptions/settings') }}\n\n\n\n                    >\n                        Sign In\n                    </Button>\n\n                </div>\n\n                {/* <div className=\"button\">\n                    <Button\n                        style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\n                        type=\"primary\"\n                        shape=\"round\"\n                        size='large'\n                        onClick={this._quickStart}\n                    >\n                        Sign in with PMS\n                    </Button>\n\n                </div> */}\n                <p className=\"text\" style={{ fontSize: px(20), marginTop: mTop(5), marginBottom: mTop(5) }}>New to Mella?</p>\n\n                <div className=\"create\" style={{ marginBottom: mTop(20), marginTop: px(25) }}>\n                    <Button\n                        style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\n                        type=\"primary\"\n                        shape=\"round\"\n                        size='large'\n                        onClick={this._createAccount}\n                    >\n                        Create an Account\n                    </Button>\n                </div>\n\n\n\n            </div>\n        )\n    }\n}",["111","112"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\mainbody\\PetsUI.jsx",["113","114","115"],"import React, { useEffect, useState } from 'react'\nimport {\n  Dropdown,\n  Menu,\n} from 'antd'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { px } from '../../utils/px'\nimport { petSortTypeFun, petDetailInfoFun, setPetListArrFun } from '../../store/actions'\nimport electronStore from '../../utils/electronStore'\nimport petIcon from './../../assets/img/petIcon.png'\nimport xia from './../../assets/img/xia.png'\nimport MyModal from './../../utils/myModal/MyModal'\nimport redjinggao from './../../assets/img/redjinggao.png'\n\nimport { devicesTitleHeight } from '../../utils/InitDate'\n\n\nimport './mainbody.less'\nimport { fetchRequest } from '../../utils/FetchUtil1';\n\nlet storage = window.localStorage;\n\n\nconst PetsUI = ({ bodyHeight, petSortTypeFun, petSortType, petDetailInfoFun, petDetailInfo, setPetListArrFun, petListArr, selectHardwareType, rulerConnectStatus }) => {\n  //定义宠物列表数组\n  const [petList, setPetList] = useState([])\n  //是否展示弹窗\n  const [showModal, setShowModal] = useState(false)\n  //选中的宠物的详细信息\n  const [selectPetDetail, setSelectPetDetail] = useState({})\n\n  //获取宠物列表加载动画\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    //设置宠物列表数据\n    setPetList(petListArr)\n  }, [petListArr])\n\n  useEffect(() => {\n    //从本地获取宠物列表数据\n    // let petList = electronStore.get('petList') || [];\n    setPetList(petList)\n    _getExam()\n  }, [])\n\n  //获取宠物列表数据\n  const _getExam = () => {\n\n    let params = {\n      doctorId: storage.userId,\n      offset: 0,\n      size: 100,\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n    console.log('查询宠物的入参', params);\n\n    setLoading(true)\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\n      .then(res => {\n        setLoading(false)\n        console.log('查询所有宠物', res);\n        if (res.flag === true && res.data) {\n          let oldList = res.data\n          let petArr = dataSort(oldList)\n          setPetList(petArr)\n          setPetListArrFun(petArr)\n        } else {\n\n        }\n      })\n      .catch(err => {\n        setLoading(false)\n        console.log(err);\n\n      })\n  }\n  const dataSort = (data) => {\n    let petList = [].concat(data)\n    switch (petSortType) {\n      case 'Time':\n        petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n        break;\n      case 'Pet ID':\n        petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n        break;\n      case 'Owner':\n        petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n        break;\n      case 'Breed':\n        petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n        break;\n      case 'Pet Name':\n        petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n        break;\n      case 'Gender':\n        petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n        break;\n    }\n    return petList\n\n\n\n  }\n\n\n  const menu = () => {\n    let menuList = [\n      // { value: 'Time' },\n      { value: 'Pet ID' },\n      // { value: 'Owner' },\n      // { value: 'Breed' },\n      { value: 'Pet Name' },\n      // { value: 'Gender' },\n    ];\n    let options = menuList.map((item, index) => {\n      let itemstyle = {}, textColor = '#1a1a1a'\n      if (petSortType === item.value) {\n        itemstyle = { backgroundColor: '#e1206D' }\n        textColor = '#fff'\n      }\n      return (\n        <Menu.Item style={itemstyle} key={`${item.value}`}>\n          <div style={{ color: textColor }}>{item.value}</div>\n        </Menu.Item>\n      )\n    })\n    return (\n      <Menu onClick={({ key, }) => {\n        petSortTypeFun(key)\n        let petArr = dataSort(petList)\n        setPetList(petArr)\n        setPetListArrFun(petArr)\n      }}>\n        {options}\n\n      </Menu>\n    );\n  }\n  const petListUI = () => {\n    let options = petList.map((item, index) => {\n      let itemBac = '#E7E7E7', itemColor = '#141414'\n      if (item.petId === petDetailInfo.petId) {\n        itemBac = '#e1206D'\n        itemColor = '#fff'\n      }\n      return (\n        <li key={index} >\n          <div className='petItem'\n            style={{ padding: `${px(7)}px 0 ${px(7)}px ${px(20)}px`, fontSize: 14, backgroundColor: itemBac, color: itemColor }}\n            onClick={() => {\n              //当硬件是尺子且尺子还在测量的时候,要做出提示\n              setSelectPetDetail(item)\n              if (selectHardwareType === 'tape' && rulerConnectStatus !== 'disconnected') {\n                setShowModal(true)\n              } else {\n                petDetailInfoFun(item)\n              }\n            }}\n          >\n            {`${item.patientId}, ${item.petName}`}\n          </div>\n        </li>\n      )\n\n    })\n\n    return (\n      <div className=\"petList\" style={{ marginTop: px(10), height: bodyHeight - devicesTitleHeight - px(240) }}>\n\n        <ul>\n          {options}\n        </ul>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"PetUI\" style={{ height: bodyHeight - devicesTitleHeight, }}>\n      <MyModal\n        visible={showModal}\n        element={\n          <div className='petUiModal'>\n            <img src={redjinggao} alt=\"\" width={'45px'} style={{ margin: `${px(25)}px 0` }} />\n            <div className='bodyText' style={{ marginTop: px(30) }}>Patient Switched – select dimension to measure</div>\n            <div className=\"btns\" style={{ marginTop: px(35) }}>\n              <div className=\"btn\" onClick={() => { setShowModal(false) }}>Cancel</div>\n              <div className=\"btn\" onClick={() => { setShowModal(false); petDetailInfoFun(selectPetDetail) }}>Confirm</div>\n            </div>\n          </div>\n        }\n      />\n      <div style={{ width: '100%', position: 'relative', height: bodyHeight - devicesTitleHeight, }}>\n        <div className=\"title\" style={{ padding: `${px(20)}px 0px ${px(20)}px ${px(20)}px ` }}>\n          <img src={petIcon} alt=\"\" width={px(25)} style={{ marginRight: px(10) }} />\n          <div className=\"titleText\" >Pets</div>\n        </div>\n        <div className=\"sort\" style={{ paddingLeft: px(20) }}>\n          <Dropdown overlay={menu} trigger={['click']}>\n            <div className=\"sortBox\">\n              <img src={xia} alt=\"\" width={px(20)} style={{ marginRight: px(10) }} />\n              <div className=\"sortText\" >\n                {`Sort by: ${petSortType}`}\n              </div>\n            </div>\n          </Dropdown>\n        </div>\n        {petListUI()}\n\n        <div className=\"walkBtn\">\n          <div\n            className=\"walkbtnBox\"\n            style={{ height: px(40), marginTop: px(15) }}\n            onClick={() => {\n              let json = {\n                isWalkIn: true,\n                petId: null,\n                petName: null,\n                owner: null,\n                breed: null,\n\n              }\n              petDetailInfoFun(json)\n            }}\n          >\n            <div className=\"walkText\">Walk-In</div>\n          </div>\n        </div>\n        <MyModal visible={loading} />\n      </div>\n\n\n\n\n    </div>\n  )\n}\n\n\nPetsUI.propTypes = {\n  bodyHeight: PropTypes.number\n}\n//默认值\nPetsUI.defaultProps = {\n  bodyHeight: 0\n}\nexport default connect(\n  state => ({\n    petSortType: state.petReduce.petSortType,\n    petDetailInfo: state.petReduce.petDetailInfo,\n    petListArr: state.petReduce.petListArr,\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    rulerConnectStatus: state.hardwareReduce.rulerConnectStatus,\n  }),\n  { petSortTypeFun, petDetailInfoFun, setPetListArrFun }\n)(PetsUI)",["116","117"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\App.js",["160","161"],"import React, { Component } from 'react'\r\n\r\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom'\r\n\r\nimport Home from './components/home/Home'\r\nimport Choose from './components/choose/Choose'\r\nimport EzyVetLogin from './components/ezyVetLogin/EzyVetLogin'\r\nimport EzyVetSelectTime from './components/ezyVetSelectTime/EzyVetSelectTime'\r\nimport SelectMella from './components/selectMella/SelectMella'\r\nimport APIkey from './components/apiKey/APIKey'\r\nimport VerifyOrganizationInformation from './components/selectLocation/VerifyOrganizationInformation'\r\nimport EzyVetSelectExam from './components/ezyVetSelectExam/EzyVetSelectExam'\r\nimport DoctorSelectExam from './components/doctorSelectExam/DoctorSelectScheduledExam'\r\n\r\nimport DoctorSelectAllExam from './components/doctorSelectExam/DoctorSelectAllExam'\r\nimport Praviders from './components/praviders/Praviders'\r\nimport SelectExam from \"./components/selectExam/SelectExam\";\r\n\r\nimport Mesasure from \"./components/measure/Mesasure\";\r\nimport NorMalMeasurement from \"./components/measure/NorMalMeasurement\";\r\n\r\nimport MaxMinReturn from './utils/maxminreturn/MaxMinReturn'\r\nimport EditPetInfo from './components/editPetInfo/EditPetInfo'\r\nimport WorkPlace from './components/workPlace/WorkPlace'\r\n\r\nimport DoctorAddPet from './components/doctorAddPet/DoctorAddPet'\r\nimport AddYuding from './components/doctorSelectExam/AddYuding'\r\n//登录部分\r\nimport SignIn from './components/signIn/SignIn'\r\nimport ForgotPassword from './components/signIn/forgotPassword/ForgotPassword'\r\nimport ResetPassword from './components/signIn/resetPassword/ResetPassword'\r\n\r\nimport ScanCodeLogin from './components/signIn/scanCodeLogin/ScanCodeLogin'\r\n\r\n//邮箱注册的整体部分\r\nimport VetPrifile from './components/createAccount/vetProfile/VetPrifile'\r\nimport JoinOrganizationByOption from './components/createAccount/joinOrganizationByOption/JoinOrganizationByOption'\r\nimport FindMyOrganization from './components/createAccount/findMyOrganization/FindMyOrganization'\r\nimport FindMyWorkplace from './components/createAccount/findMyWorkplace/FindMyWorkplace'\r\nimport IsHavePMS from './components/createAccount/ishavePMS/IsHavePMS'\r\nimport VerifyEmail from './components/createAccount/verifyEmail/index'\r\nimport NewOrganization from './components/createAccount/newOrganization/NewOrganization'\r\nimport NewWorkplace from './components/createAccount/newWorkplace/NewWorkplace'\r\n\r\nimport InviteTeam from './components/createAccount/inviteTeam/InviteTeam'\r\n\r\n//options\r\nimport Help from './components/menuOptions/help/Help'\r\nimport Unassigned from './components/menuOptions/unassigned/Unassigned'\r\nimport Settings from './components/menuOptions/settings/Settings'\r\nimport AdvancedSettings from './components/menuOptions/advancedSettings/AdvancedSettings'\r\nimport Invite from './components/menuOptions/invite/Invite'\r\nimport PetAndParents from './components/menuOptions/petAndParents/PetAndParents'\r\nimport EditParent from './components/menuOptions/editParent/EditParent'\r\n// import AdminAddPet from './components/menuOptions/adminAddPet/AdminAddPet'\r\nimport Veterinarians from './components/menuOptions/admin_VetProfile/Veterinarians'\r\nimport AddDevice from './components/menuOptions/addDevice/AddDevice'\r\nimport ConnectWorkplace from './components/menuOptions/orgAndPractice/ConnectWorkplace'\r\nimport NewOrg from './components/menuOptions/orgAndPractice/NewOrganization'\r\nimport Team from './components/menuOptions/orgAndPractice/InviteTeam'\r\n\r\nimport MainBody from './components/mainbody'\r\n\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/page1\" component={Choose} />\r\n          <Route exact path=\"/ezyVetLogin\" component={EzyVetLogin} />\r\n          <Route exact path=\"/EzyVetSelectTime\" component={EzyVetSelectTime} />\r\n          <Route exact path=\"/EzyVetSelectExam\" component={EzyVetSelectExam} />\r\n          <Route exact path=\"/page2\" component={APIkey} />\r\n          <Route exact path=\"/page3\" component={VerifyOrganizationInformation} />\r\n          <Route exact path=\"/page4\" component={SelectMella} />\r\n\r\n\r\n          <Route exact path=\"/VetSpireSelectExam\" component={SelectExam} />\r\n          <Route exact path=\"/page7\" component={MaxMinReturn} />\r\n\r\n          <Route exact path=\"/page8\" component={Mesasure} />\r\n          <Route exact path=\"/page9\" component={EditPetInfo} />\r\n          <Route exact path=\"/page10\" component={NorMalMeasurement} />\r\n          {/* <Route exact path=\"/page10\" component={MainBody} /> */}\r\n          <Route exact path=\"/MainBody\" component={MainBody} />\r\n\r\n\r\n\r\n          <Route exact path=\"/page12\" component={WorkPlace} />\r\n          <Route exact path=\"/AddYuding\" component={AddYuding} />\r\n\r\n\r\n          <Route exact path=\"/page11\" component={SignIn} />\r\n          <Route exact path=\"/user/login/forgotPassword\" component={ForgotPassword} />\r\n          <Route exact path=\"/user/login/resetPassword\" component={ResetPassword} />\r\n          <Route exact path=\"/user/login/scanCodeLogin\" component={ScanCodeLogin} />\r\n\r\n          <Route exact path=\"/uesr/logUp/FindMyOrganization\" component={FindMyOrganization} />\r\n          <Route exact path=\"/uesr/logUp/FindMyWorkplace\" component={FindMyWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/VetPrifile\" component={VetPrifile} />\r\n          <Route exact path=\"/uesr/logUp/JoinOrganizationByOption\" component={JoinOrganizationByOption} />\r\n          <Route exact path=\"/uesr/logUp/isHavePMS\" component={IsHavePMS} />\r\n          <Route exact path=\"/uesr/logUp/VerifyEmail\" component={VerifyEmail} />\r\n          <Route exact path=\"/uesr/logUp/NewOrganization\" component={NewOrganization} />\r\n          <Route exact path=\"/uesr/logUp/NewWorkplace\" component={NewWorkplace} />\r\n          <Route exact path=\"/uesr/logUp/InviteTeam\" component={InviteTeam} />\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/uesr/selectExam\" component={DoctorSelectExam} />\r\n          <Route exact path=\"/uesr/DoctorSelectAllExam\" component={DoctorSelectAllExam} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          <Route exact path=\"/pet/doctorAddPet\" component={DoctorAddPet} />\r\n\r\n          {/* options */}\r\n          <Route exact path=\"/menuOptions/help\" component={Help} />\r\n          <Route exact path=\"/menuOptions/unassigned\" component={Unassigned} />\r\n          <Route exact path=\"/menuOptions/settings\" component={Settings} />\r\n          <Route exact path=\"/menuOptions/advancedsettings\" component={AdvancedSettings} />\r\n          <Route exact path=\"/menuOptions/invite\" component={Invite} />\r\n          <Route exact path=\"/menuOptions/petAndParents\" component={PetAndParents} />\r\n          <Route exact path=\"/menuOptions/editParent\" component={EditParent} />\r\n          {/* <Route exact path=\"/menuOptions/adminAddPet\" component={AdminAddPet} /> */}\r\n          <Route exact path=\"/menuOptions/veterinarians\" component={Veterinarians} />\r\n          <Route exact path=\"/menuOptions/AddDevice\" component={AddDevice} />\r\n          <Route exact path=\"/menuOptions/ConnectWorkplace\" component={ConnectWorkplace} />\r\n          <Route exact path=\"/menuOptions/NewOrg\" component={NewOrg} />\r\n          <Route exact path=\"/menuOptions/Team\" component={Team} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}\r\nexport default App",["162","163"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["164","165","166","167"],"import React, { Component, } from 'react'\r\nimport {\r\n\r\n  Select,\r\n  DatePicker, Space,\r\n  message,\r\n  Button,\r\n  Input\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\nimport moment from 'moment';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './ezyVetSelectTime.less'\r\nimport { FetchEszVet } from './../../utils/FetchEszVet'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class EzyVetSelectTime extends Component {\r\n\r\n  state = {\r\n    startTime: moment(moment().format(\"YYYY-MM-DD\")),\r\n    endTime: moment(),\r\n    patientId: ''\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    console.log(storage.selectTime);\r\n    if (storage.selectTime && `${storage.selectTime}` !== `undefined` && storage.selectTime !== '') {\r\n      try {\r\n        this.setState({\r\n          startTime: moment(JSON.parse(storage.selectTime).startTime),\r\n          endTime: moment(JSON.parse(storage.selectTime).endTime)\r\n        })\r\n      } catch (error) {\r\n        console.log('时间转换错误', error);\r\n      }\r\n\r\n    }\r\n    console.log('============', storage.selectPatientId);\r\n    if (storage.selectPatientId && `${storage.selectPatientId}` !== `undefined` && storage.selectPatientId !== '') {\r\n      try {\r\n        this.setState({\r\n          patientId: storage.selectPatientId\r\n\r\n        })\r\n      } catch (error) {\r\n        console.log('时间转换错误', error);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  _next = () => {\r\n    let { startTime, endTime } = this.state\r\n    if (startTime === null || endTime === null) {\r\n      message.error('Please select a date range')\r\n      return\r\n    }\r\n    let saveSart = startTime.format('YYYY-MM-DD HH:mm:ss'), saveEnd = endTime.format('YYYY-MM-DD HH:mm:ss');\r\n    console.log('开始时间', startTime.format('YYYY-MM-DD HH:mm:ss'), '---------------结束时间', endTime.format('YYYY-MM-DD HH:mm:ss'));\r\n    let chazhi = new Date().getTimezoneOffset()\r\n    chazhi = chazhi + 360\r\n    console.log('差值', chazhi);\r\n    let start = startTime.add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n    let end = endTime.add(chazhi, 'm').format('YYYY-MM-DD HH:mm:ss');\r\n    console.log(start, end);\r\n    let unix = `{\">\": ${moment(start).format('X')}, \"<\": ${moment(end).format('X')}}`\r\n    let uri = encodeURIComponent(unix)\r\n    console.log('-----------', unix, uri);\r\n    storage.unixToURI = uri\r\n    let selectTime = {\r\n      startTime: saveSart,\r\n      endTime: saveEnd,\r\n    }\r\n    console.log('最终的选择时间：', selectTime);\r\n    storage.selectTime = JSON.stringify(selectTime)\r\n    storage.selectPatientId = this.state.patientId\r\n    console.log(storage.selectTime, JSON.parse(storage.selectTime), storage.selectPatientId);\r\n    this.props.history.push('EzyVetSelectExam')\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"ezyVetSelectTime\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push('/ezyVetLogin')}\r\n        />\r\n        <div className=\"text\">\r\n          Please select the scope of <br /> search for medical records\r\n        </div>\r\n\r\n        <div className=\"patirntID\">\r\n          <p style={{ width: '80px' }}>Patient ID:</p>\r\n          <Input\r\n            style={{ outline: 'medium' }}\r\n            value={this.state.patientId}\r\n            // bordered={false}\r\n            onChange={(item) => {\r\n              console.log(item);\r\n              this.setState({\r\n                patientId: item.target.value\r\n              })\r\n            }}\r\n\r\n          />\r\n\r\n        </div>\r\n\r\n        <div className=\"time\">\r\n          <Space direction=\"vertical\" size={12}>\r\n            <RangePicker\r\n              value={[this.state.startTime, this.state.endTime]}\r\n              showTime\r\n              ranges={{\r\n                Today: [moment(moment().format(\"YYYY-MM-DD\")), moment(moment().endOf('day'))],\r\n              }}\r\n              onChange={(dates, dateStrings) => {\r\n                // console.log('From: ', dates[0], ', to: ', dates[1]);\r\n                // console.log('From: ', dateStrings[0], ', to: ', dateStrings[1]);\r\n                console.log('我是第一个', dates, dateStrings);\r\n                // this.setState({\r\n                //   startTime: dateStrings[0],\r\n                //   endTime: dateStrings[1]\r\n                // })\r\n              }}\r\n              onCalendarChange={(dates, dateStrings) => {\r\n                console.log('我是第二个', dates, dateStrings);\r\n                this.setState({\r\n                  startTime: moment(dateStrings[0]),\r\n                  endTime: moment(dateStrings[1])\r\n                })\r\n              }}\r\n            />\r\n          </Space>\r\n        </div>\r\n\r\n        <div className=\"btn\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._next}\r\n          >\r\n            Next\r\n          </Button>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\current.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\index.jsx",["168","169","170","171","172","173"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["174","175","176","177","178","179","180"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Image, Layout, Button } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport PressButton_Pro from \"./../../../assets/img/PressButton_Pro.png\";\nimport AxillaryPlacement from \"./../../../assets/img/AxillaryPlacement.png\"; //腋温底部图片\nimport EarPlacement from \"./../../../assets/img/EarPlacement.png\"; //耳温底部图片\nimport RectalPlacement from \"./../../../assets/img/RectalPlacement.png\"; //肛温底部图片\nimport Standing_Dog from \"./../../../assets/img/Standing_Dog.png\";\nimport Standing_Cat from \"./../../../assets/img/Standing_Cat.png\";\nimport Sitting_Dog from \"./../../../assets/img/Sitting_Dog.png\";\nimport Sitting_Cat from \"./../../../assets/img/Sitting_Cat.png\";\nimport Laying_Dog from \"./../../../assets/img/Laying_Dog.png\";\nimport Laying_Cat from \"./../../../assets/img/Laying_Cat.png\";\nimport { px } from \"../../../utils/px\";\n\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../../store/actions\";\nimport _ from \"lodash\";\nimport HistoryTable from \"../../../components/historyTable\";\nimport moment from \"moment\";\nimport \"./linkEquipment.less\";\n\nconst { Content, Header } = Layout;\n\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\n  let { mellaConnectStatus, mellaMeasurePart } = hardwareMessage;\n  let imageMap = [\n    Standing_Dog,\n    Standing_Cat,\n    Sitting_Dog,\n    Sitting_Cat,\n    Laying_Dog,\n    Laying_Cat,\n  ];\n\n  const [type, setType] = useState(false); //是否显示轮播图\n  const [carouselIndex, setCarouselIndex] = useState(0); //轮播图下标\n  const saveCallBack = useRef();\n  const callBack = () => {\n    setCarouselIndex(carouselIndex + 1);\n  };\n\n  //切换图片\n  const checkImage = () => {\n    if (mellaMeasurePart === \"腋温\") {\n      return AxillaryPlacement;\n    } else if (mellaMeasurePart === \"耳温\") {\n      return EarPlacement;\n    } else {\n      return RectalPlacement;\n    }\n  };\n  //点击进入轮播图\n  const clickIntoTip = () => {\n    setType(true);\n  };\n  //小圆点点击事件\n  const clickPoint = (index) => {\n    setCarouselIndex(index);\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (carouselIndex === 6) {\n      setCarouselIndex(0);\n    }\n  }, [carouselIndex]);\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    let timer = null;\n    if (type && mellaConnectStatus === \"connected\") {\n      timer = setInterval(tick, 1500);\n    }\n    if (mellaConnectStatus !== \"connected\") {\n      setType(false);\n      setCarouselIndex(0);\n      clearInterval(timer);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [type, mellaConnectStatus]);\n\n  return (\n    <>\n      <Content className={\"contentBox\"}>\n        {_.isEqual(mellaConnectStatus, \"disconnected\") ? (\n          <>\n            <div className=\"startBox\">\n              <p className=\"startTitle\">\n                Turn on your\n                <br />\n                Mella Thermometer\n                <br />\n                or Pair New Mella\n              </p>\n              <img src={PressButton_Pro} className={\"PressButton_Pro\"} style={{width:px(300),height:px(200)}} />\n            </div>\n            <div className=\"tableBox\">\n              <HistoryTable tableColumnType='temperature' />\n            </div>\n          </>\n        ) : (\n          <>\n            <div className=\"startBox\">\n              <p className=\"startTitle\">\n                {!type\n                  ? \"Ready, place under foreleg\"\n                  : \"Place Under Foreleg Standing\"}\n              </p>\n              {!type ? (\n                <>\n                  <img src={checkImage()}></img>\n                  {mellaMeasurePart === \"腋温\" ? (\n                    <div className=\"bottomTip\">\n                      <p className=\"tipTitle\" onClick={() => clickIntoTip()}>\n                        Need Help With Accurate Placement On Pet?\n                      </p>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </>\n              ) : (\n                <>\n                  <div className=\"carouselBox\">\n                    {_.map(imageMap, (item, index) => {\n                      return (\n                        <div key={index}>\n                          <img\n                            className=\"contentStyle\"\n                            src={item}\n                            style={{\n                              display: carouselIndex === index ? \"\" : \"none\",\n                            }}\n                          />\n                        </div>\n                      );\n                    })}\n                  </div>\n                  <div className=\"dotBox\">\n                    <ul className=\"dotList\">\n                      {_.map(imageMap, (item, index) => {\n                        return (\n                          <li key={index}>\n                            <Button\n                              className=\"dotItem\"\n                              onClick={() => clickPoint(index)}\n                              style={{\n                                background:\n                                  carouselIndex === index\n                                    ? \"#0a0a0a\"\n                                    : \"#bdbaba\",\n                              }}\n                            >\n                              {index}\n                            </Button>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                </>\n              )}\n            </div>\n          </>\n        )}\n      </Content>\n    </>\n  );\n};\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(LinkEquipment);\n",["181","182"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\petTable\\index.jsx",["183","184","185","186","187","188","189","190"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectExam\\SelectExam.jsx",["191","192","193","194"],"//这是vetspire的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Space\r\n\r\n} from 'antd';\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\r\nimport './selectExam.less'\r\n\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { fetchRequest1 } from '../../utils/FetchUtil'\r\nimport { fetchRequest2 } from '../../utils/FetchUtil2'\r\n\r\nlet storage = window.localStorage;\r\n\r\n\r\nexport default class SelectExam extends Component {\r\n  state = {\r\n    loading: false,\r\n    api: '',\r\n    id: '',  //选择location的id\r\n    locations: [],\r\n    data: [],\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    seleceID: '',  //宠物医生id\r\n    spin: false,   //刷新按钮是否旋转\r\n\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    if (window.screen.height < 1000) {\r\n      ipcRenderer.send('table')\r\n    } else {\r\n      ipcRenderer.send('big')\r\n    }\r\n    this._getData()\r\n    storage.identity = '1'\r\n\r\n  }\r\n  _getData = async () => {\r\n    this.setState({\r\n      api: storage.API,\r\n      id: storage.selectLocationId,\r\n      seleceID: storage.selectvetId\r\n    })\r\n    let time = new Date()\r\n    let updateAtStart = moment(time).format('YYYY-MM-DD')\r\n    console.log(time, updateAtStart);\r\n    let params = {\r\n      APIkey: storage.API,\r\n      providerId: storage.selectvetId,\r\n      updateAtStart\r\n    }\r\n    console.log('发送获取宠物列表数据：', params);\r\n    this.setState({ loading: true });\r\n    let arr = [\r\n      {\r\n        age: 10,\r\n        breed: \"american shorthair\",\r\n        gender: \"FEMALE\",\r\n        key: \"847571\",\r\n        owner: \"Emma Bunin\",\r\n        petName: \"Ruby\",\r\n        weight: \"100 LB\",\r\n      },\r\n      {\r\n        age: 7,\r\n        breed: \"labrador retriever\",\r\n        gender: \"MALE\",\r\n        key: \"847570\",\r\n        owner: \"Emma Bunin\",\r\n        petName: \"Wally\",\r\n        weight: \"68.4 LB\",\r\n      },\r\n      {\r\n        age: 11,\r\n        breed: \"french bulldog\",\r\n        gender: \"MALE\",\r\n        key: \"847569\",\r\n        owner: \"Jane Doe\",\r\n        petName: \"Charmander\",\r\n        weight: \"68.4 LB\",\r\n      },\r\n      {\r\n        age: 10,\r\n        breed: \"american shorthair\",\r\n        gender: \"FEMALE\",\r\n        key: \"847567\",\r\n        owner: \"Marilyn Monroe\",\r\n        petName: \"Lemon\",\r\n        weight: \"22 LB\",\r\n      }, {\r\n        age: 9,\r\n        breed: \"golden retriever\",\r\n        gender: \"MALE\",\r\n        key: \"847566\",\r\n        owner: \"Marilyn Monroe\",\r\n        petName: \"Zack\",\r\n        weight: \"100 LB\",\r\n      },\r\n      {\r\n        age: 9,\r\n        breed: \"american shorthair\",\r\n        gender: \"MALE\",\r\n        key: \"847568\",\r\n        owner: \"Marilyn Monroe\",\r\n        petName: \"Oreo\",\r\n        weight: \"10.5 LB\",\r\n      }\r\n    ]\r\n\r\n\r\n    console.log('转换的数据：', arr);\r\n    let examData = []\r\n    let indexArr = []\r\n    for (let i = 0; i < arr.length; i++) {\r\n      let sendData = {\r\n        APIkey: storage.API,\r\n        patientId: arr[i].key\r\n      }\r\n      console.log('发送获取exam数据', sendData);\r\n\r\n      fetchRequest2('/VetSpire/selectExamByPatientId', 'POST', sendData)\r\n        .then(res => {\r\n          console.log('接收exam数据', i, res);\r\n          this.setState({ loading: false, spin: false });\r\n          indexArr.push(i)\r\n          if (res.flag === true) {\r\n            let examArr = res.data.encounters\r\n            for (let index = 0; index < examArr.length; index++) {\r\n              let chazhi = new Date().getTimezoneOffset()\r\n              let newTime = moment(new Date()).add(chazhi, 'm').format('YYYY-MM-DD');\r\n              let insertedAt = moment(examArr[index].insertedAt).format('YYYY-MM-DD')\r\n              if (newTime === insertedAt) {\r\n                let examId = examArr[index].vitals.id\r\n                let patientId = examArr[index].patient.id\r\n                let json = {\r\n                  examId,\r\n                  patientId,\r\n                  insertedAt: examArr[index].insertedAt,\r\n                  petName: examArr[index].patient.name\r\n                }\r\n                examData.push(json)\r\n              }\r\n\r\n            }\r\n          }\r\n          if (indexArr.length === arr.length) {\r\n\r\n            let tableArr = []\r\n            for (let j = 0; j < arr.length; j++) {\r\n              for (let k = 0; k < examData.length; k++) {\r\n                if (arr[j].key === examData[k].patientId) {\r\n                  let { age, breed, gender, owner, petName, weight } = arr[j]\r\n                  let { examId, insertedAt, patientId } = examData[k]\r\n                  let json1 = {\r\n                    age, breed, gender, owner, key: examId, petName, weight, insertedAt, patientId\r\n                  }\r\n                  tableArr.push(json1)\r\n                }\r\n              }\r\n            }\r\n\r\n            console.log('最终合成的数据：', tableArr);\r\n            let historyDataArr = this.ForwardRankingDate(tableArr, 'insertedAt')\r\n            // console.log(`日期排序后：----------`, historyDataArr);\r\n\r\n\r\n            this.setState({\r\n              data: historyDataArr\r\n            })\r\n          }\r\n\r\n        })\r\n        .catch(err => {\r\n          console.log('err', err);\r\n        })\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  //封装的日期排序方法<div className=\" ForwardRankingDate(data, p) {\r\n  ForwardRankingDate = (data, p) => {\r\n    for (let i = 0; i < data.length - 1; i++) {\r\n      for (let j = 0; j < data.length - 1 - i; j++) {\r\n        // console.log(Date.parse(data[j][p]));\r\n        if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n          var temp = data[j];\r\n          data[j] = data[j + 1];\r\n          data[j + 1] = temp;\r\n        }\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    //dataIndex 是标题名称\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    //自定义Icon\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\r\n    onFilter: (value, record) => {\r\n      console.log(value, record, dataIndex);\r\n      return record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : ''\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n  _refresh = () => {\r\n    console.log('点击了');\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    this._getData()\r\n  }\r\n  render () {\r\n    const columns = [\r\n      {\r\n        title: 'Pet Name',\r\n        dataIndex: 'petName',\r\n        key: 'petName',\r\n        //   width: '30%',\r\n        ...this.getColumnSearchProps('petName'),\r\n      },\r\n      {\r\n        title: 'Owner',\r\n        dataIndex: 'owner',\r\n        key: 'owner',\r\n        //   width: '20%',\r\n        ...this.getColumnSearchProps('owner'),\r\n      },\r\n      {\r\n        title: 'Breed',\r\n        dataIndex: 'breed',\r\n        key: 'breed',\r\n        ...this.getColumnSearchProps('breed'),\r\n      },\r\n\r\n      {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        key: 'gender',\r\n        // width: '30%',\r\n        ...this.getColumnSearchProps('gender'),\r\n      },\r\n      {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n        // width: '20%',\r\n        ...this.getColumnSearchProps('age'),\r\n      },\r\n      {\r\n        title: 'Weight',\r\n        dataIndex: 'weight',\r\n        key: 'weight',\r\n        ...this.getColumnSearchProps('weight'),\r\n      },\r\n      {\r\n        title: 'Creation time',\r\n        dataIndex: 'insertedAt',\r\n        key: 'insertedAt',\r\n        render: (text, record, index) => {\r\n          let chazhi = new Date().getTimezoneOffset()\r\n\r\n          let newTime = moment(text).subtract(chazhi, 'm').format('YYYY-MM-DD HH:mm');\r\n          return (\r\n            <p style={{ textAlign: 'center' }}>{newTime}</p>\r\n          )\r\n\r\n        }\r\n      },\r\n      // {\r\n      //   title: '',\r\n      //   dataIndex: 'patientId',\r\n      //   key: 'patientId',\r\n      //   render: (text, record, index) => {\r\n      //     // console.log(text, record, index);\r\n      //     let chazhi = new Date().getTimezoneOffset()\r\n\r\n      //     let newTime = moment(text).subtract(chazhi, 'm').format('YYYY-MM-DD HH:mm');\r\n      //     return (\r\n      //       null\r\n      //     )\r\n\r\n      //   }\r\n      // },\r\n    ];\r\n    const { loading, data, api, id, seleceID, spin } = this.state\r\n    return (\r\n\r\n      <div id=\"patient\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push({ pathname: '/page4' })}\r\n        />\r\n\r\n        <div className=\"textfa1\">\r\n          <div className=\"textfa\">\r\n            <div className=\"text\">Select Patient Exam</div>\r\n            <div className=\"text3\"><SyncOutlined onClick={this._refresh} spin={spin} />   </div>\r\n          </div>\r\n          <div className=\"r\" onClick={() => {\r\n            let electron = window.electron\r\n            electron.shell.openExternal('https://mella.vetspire.com/clients')\r\n          }}>+</div>\r\n        </div>\r\n\r\n\r\n        <div className=\"table\">\r\n          <Table\r\n            columns={columns}\r\n            dataSource={data}\r\n            loading={loading}\r\n            locale={{ filterConfirm: <div>111</div> }}\r\n            pagination={{ pageSize: 7, showSizeChanger: false, showQuickJumper: true }}\r\n            onRow={(record) => {\r\n              return {\r\n                onClick: (event) => {\r\n                  console.log(record);\r\n                  let patientId = record.key\r\n                  let petName = record.petName\r\n\r\n                  console.log(patientId, petName);\r\n                  storage.selectExamId = record.key\r\n                  storage.selectPatientId = record.patientId\r\n\r\n                  storage.selectAge = record.age\r\n                  storage.selectBreed = record.breed\r\n                  storage.selectOwner = record.owner\r\n                  storage.selectWeight = record.weight\r\n                  storage.selectPetName = record.petName\r\n\r\n                  this.props.history.push({ pathname: '/page10', })\r\n                  // if (storage.isClinical === 'true') {\r\n                  //   console.log('---------', record.patientId);\r\n                  //   this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.patientId })\r\n                  // } else {\r\n                  //   this.props.history.push({ pathname: '/page10', })\r\n                  // }\r\n\r\n                }, // 点击行\r\n\r\n              };\r\n            }}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx",["195","196","197","198","199","200","201","202","203"],"import React, { Component } from \"react\";\nimport { Table, Popconfirm, Modal, Input, message, Select } from \"antd\";\nimport moment from \"moment\";\nimport Draggable from \"react-draggable\";\n\nimport \"./unassigned.less\";\nimport Heard from \"./../../../utils/heard/Heard\";\nimport { fetchRequest } from \"../../../utils/FetchUtil1\";\n\nimport del from \"./../../../assets/images/del.png\";\nimport Close from \"./../../../assets/img/close.png\";\n\nimport UploadImg from \"./../../../utils/uploadImg/UploadImg\";\nimport { mTop, px, MTop } from \"../../../utils/px\";\nimport electronStore from \"./../../../utils/electronStore\";\nimport MyModal from \"../../../utils/myModal/MyModal\";\nimport Button from \"./../../../utils/button/Button\";\n\nlet storage = window.localStorage;\nconst { Option } = Select;\n\nexport default class Unassigned extends Component {\n  state = {\n    historyData: [], //列表的数据集合\n    units: \"℉\",\n    searchText: \"\", //搜索测试记录框输入的内容\n    serchExamData: [], //搜索到的测量记录\n    seleceEmergencies: {}, //分配的这条记录里的所有内容，比如温度、id、时间等\n    visible: false, //nodel框是否显示\n    disabled: true, //model是否可拖拽\n    imgId: -1, //上传后返回的图像id号\n\n    assignPatientId: \"\",\n    assignPetName: \"\",\n    assignOwnerName: \"\",\n    assignBreed: \"\",\n    assignBreedId: \"\",\n    assignPetAge: \"\",\n    assignPetWeight: \"\",\n    assignPetId: \"\",\n    assignPetImgUrl: \"\",\n    inputDisabled: false,\n\n    breedArr: [], //猫、狗品种集合\n\n    loading: false,\n\n    disabled: true, //model是否可拖拽\n    search: \"\", //分配宠物搜索框\n    petListData: [],\n    searchPetList: [],\n    assignVisible: false, //点击assign按钮后跳出的选择宠物的弹框\n    selectPetId: \"\",\n  };\n\n  componentDidMount () {\n    let ipcRenderer = window.electron.ipcRenderer;\n    let { height, width } = window.screen;\n    let windowsHeight = height > width ? width : height;\n    ipcRenderer.send(\"Lowbig\");\n    // if (windowsHeight < 1000) {\n    //   ipcRenderer.send('table')\n    // } else {\n    //   ipcRenderer.send('big')\n    // }\n    let getBreed = electronStore.get(\"getBreed\");\n    console.log(\"------\", getBreed);\n    if (getBreed) {\n      this.setState({\n        breedArr: getBreed,\n      });\n    }\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    this._getEmergencyHistory();\n    const timer = setTimeout(() => {\n      this._getBreed();\n      clearTimeout(timer);\n    }, 3000);\n\n    let list = electronStore.get(\"doctorExam\");\n    this.setState({\n      petListData: list || [],\n    });\n  }\n  componentWillUnmount () {\n    message.destroy();\n    let ipcRenderer = window.electron.ipcRenderer;\n\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer;\n    let { height, width } = window.screen;\n    let windowsHeight = height > width ? width : height;\n    ipcRenderer.send(\"Lowbig\");\n    // if (windowsHeight < 1000) {\n    //   ipcRenderer.send('table')\n    // } else {\n    //   ipcRenderer.send('big')\n    // }\n    this.setState({});\n  };\n\n  _getEmergencyHistory = () => {\n    //封装的日期排序方法\n    function ForwardRankingDate (data, p) {\n      for (let i = 0; i < data.length - 1; i++) {\n        for (let j = 0; j < data.length - 1 - i; j++) {\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\n            var temp = data[j];\n            data[j] = data[j + 1];\n            data[j + 1] = temp;\n          }\n        }\n      }\n      return data;\n    }\n    let historys = [];\n    this.setState({\n      loading: true,\n    });\n    fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, \"GET\", \"\") //userID要自动的\n      .then((res) => {\n        console.log(\"---res\", res);\n        if (res.flag === true) {\n          let datas = res.data;\n          for (let i = datas.length - 1; i >= 0; i--) {\n            if (datas[i].petId === null) {\n              let {\n                petId,\n                examId,\n                userId,\n                petVitalTypeId,\n                temperature,\n                roomTemperature,\n                bloodPressure,\n                memo,\n                clinicalDatagroupId,\n                bodyConditionScore,\n                heartRate,\n                respiratoryRate,\n                referenceRectalTemperature,\n                furLength,\n                createTime,\n                clinicalDataEntity,\n              } = datas[i];\n              let day = moment().diff(moment(createTime), \"day\");\n              // console.log(day);\n              if (day > 3) {\n                continue;\n              }\n\n              let Tem = temperature;\n              try {\n                if (clinicalDataEntity) {\n                  Tem = temperature || clinicalDataEntity.data0;\n                }\n              } catch (error) {\n                console.log(\"抛出的异常\", error);\n              }\n              let str = {\n                clinicalDatagroupId,\n                createTime,\n                date: moment(createTime).format(\"MMM DD\"),\n                time: moment(createTime).format(\"hh:mm A\"),\n                temp: parseInt(Tem * 10) / 10,\n                placement: petVitalTypeId,\n                note: memo,\n                historyId: examId,\n                bodyConditionScore,\n                heartRate,\n                respiratoryRate,\n                referenceRectalTemperature,\n                furLength,\n                roomTemperature,\n                bloodPressure,\n                petId,\n                userId,\n                day,\n              };\n\n              historys.push(str);\n            }\n          }\n\n          //把所有数据拿完后做个排序\n\n          let historyData = ForwardRankingDate(historys, \"createTime\");\n          console.log(\"historyData:\", historyData);\n          this.setState({\n            historyData,\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          loading: false,\n        });\n      });\n  };\n  _getBreed = () => {\n    fetchRequest(`/pet/selectBreedBySpeciesId`, \"POST\", { speciesId: 1 })\n      .then((res) => {\n        if (res.code === 0) {\n          let arr = [];\n          res.petlist.map((item, index) => {\n            let data = {\n              petSpeciesBreedId: item.petSpeciesBreedId,\n              breedName: item.breedName,\n              speciesId: 1,\n            };\n\n            arr.push(data);\n          });\n\n          fetchRequest(`/pet/selectBreedBySpeciesId`, \"POST\", { speciesId: 2 })\n            .then((res) => {\n              if (res.code === 0) {\n                res.petlist.map((item, index) => {\n                  let data = {\n                    petSpeciesBreedId: item.petSpeciesBreedId,\n                    breedName: item.breedName,\n                    speciesId: 2,\n                  };\n                  arr.push(data);\n                });\n\n                console.log(\"----品种集合：\", arr);\n                electronStore.set(\"getBreed\", arr);\n                this.setState({\n                  breedArr: arr,\n                });\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n            });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  _search = (value = \"\") => {\n    console.log(\"我要去搜索了\");\n    let list = this.state.historyData;\n    let searchData = [];\n    let keyWord = value || this.state.searchText;\n    for (let i = 0; i < list.length; i++) {\n      let note = list[i].note ? list[i].note.toLowerCase() : \"\";\n      if (`${note}`.indexOf(keyWord.toLowerCase()) !== -1) {\n        searchData.push(list[i]);\n      }\n    }\n\n    this.setState({\n      serchExamData: searchData,\n    });\n  };\n  _searchPet = (value = \"\") => {\n    console.log(\"我要去搜索了\", this.state.petListData);\n    let list = this.state.petListData;\n    let searchData = [];\n    let keyWord = value || this.state.searchText;\n    for (let i = 0; i < list.length; i++) {\n      let name = list[i].petName ? list[i].petName.toLowerCase() : \"\";\n      let rfid = list[i].rfid ? list[i].rfid.toLowerCase() : \"\";\n      let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : \"\";\n\n      if (\n        `${name}`.indexOf(keyWord.toLowerCase()) !== -1 ||\n        `${rfid}`.indexOf(keyWord.toLowerCase()) !== -1 ||\n        `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n      ) {\n        searchData.push(list[i]);\n      }\n    }\n\n    this.setState({\n      searchPetList: searchData,\n    });\n  };\n\n  draggleRef = React.createRef();\n\n  handleOk = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n      assignPatientId: \"\",\n      assignPetName: \"\",\n      assignOwnerName: \"\",\n      assignBreed: \"\",\n      assignBreedId: \"\",\n      assignPetAge: \"\",\n      assignPetWeight: \"\",\n      assignPetId: \"\",\n      assignPetImgUrl: \"\",\n    });\n  };\n\n  handleCancel = (e) => {\n    console.log(\"取消\");\n    this.setState({\n      visible: false,\n      assignPatientId: \"\",\n      assignPetName: \"\",\n      assignOwnerName: \"\",\n      assignBreed: \"\",\n      assignBreedId: \"\",\n      assignPetAge: \"\",\n      assignPetWeight: \"\",\n      assignPetId: \"\",\n      assignPetImgUrl: \"\",\n    });\n  };\n\n  onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y),\n      },\n    });\n  };\n  _select = (value, data) => {\n    console.log(value, data); //value的值为id\n    this.setState({\n      assignBreedId: value,\n      assignBreed: data.children,\n    });\n  };\n\n  _modal = () => {\n    let that = this;\n\n    function getPetInfoByPatientId () {\n      switch (storage.identity) {\n        case \"1\":\n          console.log(\"我是vetspire查找\");\n\n          break;\n\n        case \"2\":\n          console.log(\"我是ezyVet查找\");\n          let params = {\n            animalId: that.state.assignPatientId,\n            organizationId: 4,\n          };\n          let paramsArray = [];\n          Object.keys(params).forEach((key) =>\n            paramsArray.push(key + \"=\" + params[key])\n          );\n          let url =\n            \"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId\";\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\n          if (url.search(/\\?/) === -1) {\n            url = url + \"?\" + paramsArray.join(\"&\");\n          } else {\n            url = url + \"&\" + paramsArray.join(\"&\");\n          }\n          console.log(\"ezyVet集成查找宠物入参-请求地址\", params, url);\n          fetch(url, {\n            method: \"GET\",\n            headers: {\n              authorization: `Bearer ${storage.ezyVetToken}`,\n            },\n          })\n            .then((response) => response.json())\n            .then((res) => {\n              console.log(\"res\", res);\n              this.setState({\n                spin: false,\n              });\n              if (res.flag === true) {\n                //有宠物，进入1\n                let petArr = res.data;\n                if (petArr.length > 1) {\n                  petArr.sort(function (a, b) {\n                    return a.createTime > b.createTime ? -1 : -1;\n                  });\n                }\n                console.log(petArr);\n\n                let { petId } = petArr;\n                // assign(petId)\n              } else {\n                //没有宠物\n                message.error(\"There are no pets under this patientID\");\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n              message.error(\"There are no pets under this patientID\");\n            });\n\n          break;\n\n        case \"3\":\n          console.log(\"我是一般医生查找\");\n          let datas = {\n            patientId: that.state.assignPatientId,\n            doctorId: storage.userId,\n          };\n          if (storage.lastWorkplaceId) {\n            datas.workplaceId = storage.lastWorkplaceId;\n          }\n          console.log(\"入参：\", datas);\n          fetchRequest(\"/pet/getPetInfoByPatientIdAndPetId\", \"POST\", datas)\n            .then((res) => {\n              if (res.flag === true) {\n                //有宠物，进入1\n                let petArr = res.data;\n                if (petArr.length > 1) {\n                  petArr.sort(function (a, b) {\n                    return a.createTime > b.createTime ? -1 : -1;\n                  });\n                }\n\n                console.log(\"获取到宠物信息\", petArr);\n\n                let {\n                  petId,\n                  petName,\n                  firstName,\n                  lastName,\n                  breedName,\n                  age,\n                  weight,\n                  url,\n                  birthday,\n                } = petArr[0];\n\n                let assignPetName = petName ? petName : \"\";\n                let assignOwnerName = lastName ? lastName : \"\";\n                assignOwnerName = firstName\n                  ? `${assignOwnerName} ${firstName}`\n                  : assignOwnerName;\n                let assignBreed = breedName ? breedName : \"\";\n                let assignPetAge = age ? age : \"\";\n                let assignPetWeight = weight ? weight : \"\";\n                let assignPetImgUrl = url ? url : \"\";\n\n                if (!assignPetAge) {\n                  let now = moment(new Date());\n                  let year = now.diff(moment(birthday), \"years\");\n                  assignPetAge = year;\n                }\n\n                that.setState({\n                  assignPetName,\n                  assignBreed,\n                  assignPetAge,\n                  assignPetWeight,\n                  assignPetId: petId,\n                  assignPetImgUrl,\n                  inputDisabled: true,\n                });\n\n                // assign(petId)\n              } else {\n                that.setState({\n                  inputDisabled: false,\n                  assignPetName: \"\",\n                  assignOwnerName: \"\",\n                  assignBreed: \"\",\n                  assignBreedId: \"\",\n                  assignPetAge: \"\",\n                  assignPetWeight: \"\",\n                  assignPetId: \"\",\n                  assignPetImgUrl: \"\",\n                });\n                message.error(\"There are no pets under this patientID\");\n              }\n            })\n            .catch((err) => {\n              that.setState({\n                inputDisabled: false,\n                assignPetName: \"\",\n                assignOwnerName: \"\",\n                assignBreed: \"\",\n                assignBreedId: \"\",\n                assignPetAge: \"\",\n                assignPetWeight: \"\",\n                assignPetId: \"\",\n                assignPetImgUrl: \"\",\n              });\n              message.error(\"There are no pets under this patientID\");\n              console.log(err);\n            });\n          break;\n\n        default:\n          break;\n      }\n    }\n    const assignPet = () => {\n      let parmes = {\n        petId: this.state.assignPetId,\n        clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId,\n      };\n      console.log(\"分配的数据信息\", parmes);\n      fetchRequest(\n        `/pet/addAndSavePetExam/${that.state.seleceEmergencies.historyId}`,\n        \"POST\",\n        parmes\n      )\n        .then((res) => {\n          console.log(\"----------\", res);\n          if (res.flag === true) {\n            console.log(\"分配成功\");\n            message.success(\"Assigned successfully\");\n            that._getEmergencyHistory();\n            that.setState({\n              visible: false,\n              assignPatientId: \"\",\n              assignPetName: \"\",\n              assignOwnerName: \"\",\n              assignBreed: \"\",\n              assignBreedId: \"\",\n              assignPetAge: \"\",\n              assignPetWeight: \"\",\n              assignPetId: \"\",\n              assignPetImgUrl: \"\",\n            });\n          } else {\n            message.error(\"Assignment failed\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          message.error(\"Assignment failed\");\n        });\n    };\n\n    let { disabled, bounds, visible } = this.state;\n    let options = this.state.breedArr.map((d) => (\n      <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>\n    ));\n    return (\n      <Modal\n        wrapClassName={\"web\"} //对话框外部的类名，主要是用来修改这个modal的样式的\n        destroyOnClose={true}\n        title={\n          <div\n            style={{\n              width: \"100%\",\n              cursor: \"move\",\n              height: \"30px\",\n              textAlign: \"center\",\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                this.setState({\n                  disabled: false,\n                });\n              }\n            }}\n            onMouseOut={() => {\n              this.setState({\n                disabled: true,\n              });\n            }}\n            onFocus={() => { }}\n            onBlur={() => { }}\n          // end\n          ></div>\n        }\n        visible={visible}\n        // visible={true}\n        onOk={this.handleOk}\n        onCancel={this.handleCancel}\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div ref={this.draggleRef}>{modal}</div>\n          </Draggable>\n        )}\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\n      >\n        <div id=\"unassignedModal\">\n          <div className=\"title\">\n            Assign <br />\n            Measurement to\n          </div>\n\n          <div className=\"addPhoto\">\n            <UploadImg\n              getImg={(val) => {\n                console.log(\"hahahahahahah我获得了\", val);\n                this.setState({\n                  imgId: val.imageId,\n                });\n              }}\n              imgUrl={this.state.assignPetImgUrl}\n              disable={this.state.inputDisabled}\n            />\n          </div>\n\n          <div className=\"item\">\n            <p>Patient ID:</p>\n            <Input\n              value={this.state.assignPatientId}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignPatientId: item.target.value,\n                });\n              }}\n              onKeyDown={(e) => {\n                if (e.keyCode === 13) {\n                  getPetInfoByPatientId();\n                }\n                if (e.keyCode === 27) {\n                  console.log(\"清空\");\n                  this.setState({\n                    assignPatientId: \"\",\n                  });\n                }\n              }}\n              onBlur={() => {\n                if (this.state.assignPatientId.length > 0) {\n                  getPetInfoByPatientId();\n                }\n              }}\n            />\n          </div>\n\n          <div className=\"item\">\n            <p>Pet Name:</p>\n            <Input\n              disabled={this.state.inputDisabled}\n              value={this.state.assignPetName}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignPetName: item.target.value,\n                });\n              }}\n            />\n          </div>\n\n          <div className=\"item\">\n            <p>Owner Name:</p>\n            <Input\n              disabled={this.state.inputDisabled}\n              value={this.state.assignOwnerName}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignOwnerName: item.target.value,\n                });\n              }}\n            />\n          </div>\n          <div className=\"item\">\n            <p>Breed:</p>\n            <div className=\"infoInput\">\n              {/* <Input bordered={false} /> */}\n              <Select\n                disabled={this.state.inputDisabled}\n                showSearch\n                style={{ width: \"100%\" }}\n                bordered={false}\n                value={this.state.assignBreed}\n                // size = {'small'}\n                placeholder=\"Search to Select\"\n                optionFilterProp=\"children\"\n                listHeight={256}\n                onSelect={(value, data) => this._select(value, data)}\n                filterOption={(input, option) =>\n                  option.children.toLowerCase().indexOf(input.toLowerCase()) >=\n                  0\n                }\n                filterSort={(optionA, optionB) =>\n                  optionA.children\n                    .toLowerCase()\n                    .localeCompare(optionB.children.toLowerCase())\n                }\n              >\n                {options}\n              </Select>\n            </div>\n          </div>\n          <div className=\"item\">\n            <p>Pet Age:</p>\n            <Input\n              disabled={this.state.inputDisabled}\n              value={this.state.assignPetAge}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignPetAge: item.target.value,\n                });\n              }}\n            />\n          </div>\n          <div className=\"item\">\n            <p>Pet Weight:</p>\n            <Input\n              disabled={this.state.inputDisabled}\n              value={this.state.assignPetWeight}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  assignPetWeight: item.target.value,\n                });\n              }}\n            />\n\n            <div className=\"unit\">{`kg`}</div>\n          </div>\n\n          <div className=\"btnF\">\n            <div className=\"btn\" onClick={this.handleCancel}>\n              Cancel\n            </div>\n            <div\n              className=\"btn\"\n              onClick={() => {\n                if (this.state.assignPetId) {\n                  assignPet();\n                } else {\n                  message.error(\"Did not find this pet\");\n                }\n              }}\n            >\n              Confirm\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  };\n  _list = () => {\n    const { search, petListData, searchPetList } = this.state;\n    let data = search.length > 0 ? searchPetList : petListData;\n    console.log('--------------------data', data);\n    let option = data.map((item, index) => {\n      let male = item.gender === \"F\" ? \"Female\" : \"Male\";\n      return (\n        <li\n          key={item.organizationId}\n          onClick={() => {\n            this.setState({\n              selectPetId: item.petId,\n            });\n            console.log(item);\n          }}\n        >\n          <div className=\"item\">\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\n              {item.petName}\n            </span>{\" \"}\n            &nbsp;&nbsp;\n            <span\n              className=\"petName\"\n              style={{ margin: `${px(5)}px 0` }}\n            >{`${item.age} yrs,`}</span>{\" \"}\n            &nbsp;&nbsp;\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\n              {male}\n            </span>\n          </div>\n\n          {this.state.selectPetId === item.petId ? (\n            <span className=\"search\">&#xe614;</span>\n          ) : null}\n\n          {/* <div className=\"dui\">\n          <img src={} alt=\"\"/>\n        </div> */}\n        </li>\n      );\n    });\n    return <ul>{option}</ul>;\n  };\n\n  render () {\n    let { loading, disabled, historyData, searchText, serchExamData } =\n      this.state;\n    const _del = (key, record) => {\n      console.log(\"删除\", key, record);\n\n      fetchRequest(`/pet/deletePetExamByExamId/${key}`, \"DELETE\").then(\n        (res) => {\n          if (res.flag === true) {\n            console.log(\"删除成功\");\n            const historyData = [...this.state.historyData];\n            console.log(historyData);\n            this.setState({\n              historyData: historyData.filter((item) => item.historyId !== key),\n            });\n          } else {\n            console.log(\"删除失败\");\n          }\n        }\n      );\n    };\n\n    const columns = [\n      {\n        title: \"\",\n        dataIndex: \"operation\",\n        key: \"operation\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          // console.log('狩猎:', text, record, index);\n          //record:\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                margin: `${px(8)}px 0`,\n              }}\n            >\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => _del(record.historyId, record)}\n              >\n                <img src={del} alt=\"\" style={{ marginRight: \"8px\" }} />\n              </Popconfirm>\n            </div>\n          );\n        },\n      },\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        key: \"date\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      {\n        title: \"Time\",\n        dataIndex: \"time\",\n        key: \"time\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      // {\n      //   // title: `Temp(${this.state.units})`,\n      //   title: `Temp(℉)`,\n      //   key: 'temp',\n      //   dataIndex: 'temp',\n      //   render: (text, record, index) => {\n      //     // console.log(text, record);\n      //     /**\n      //      * bag：温度数值前的圆圈的背景颜色\n      //      * tem：展示的温度\n      //      * endvalue:将从后台得到的数据全部转化成华氏度\n      //      * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n      //      * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n      //      *\n      //      */\n\n      //     let bag = '', tem = ''\n\n      //     let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\n      //     let min = 100.4, max = 102.56\n\n      //     if (endValue > max) {\n      //       bag = '#E1206D'\n      //     } else if (endValue < min) {\n      //       bag = '#98DA86'\n      //     } else {\n      //       bag = '#58BDE6'\n      //     }\n\n      //     if (this.state.units === '℃') {\n      //       if (text) {\n      //         tem = `${text}${this.state.units}`\n      //       }\n      //     } else {\n      //       if (text) {\n      //         if (text > 55) {\n      //           tem = `${text}${this.state.units}`\n      //         } else {\n      //           tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\n      //         }\n\n      //       }\n      //     }\n      //     return (\n      //       <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      //         {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\n      //         <p style={{ margin: 0, padding: 0 }}>{tem}</p>\n      //       </div>\n      //     )\n\n      //   }\n      // },\n\n      {\n        title: \" Pet Description\",\n        dataIndex: \"description\",\n        key: \"description\",\n        width: \"20%\",\n        render: (text, record, index) => {\n          return <p style={{ width: \"70px\" }}>{text}</p>;\n        },\n      },\n      // Species\n\n      {\n        title: \"Species\",\n        dataIndex: \"species\",\n        key: \"species\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          return <p style={{ width: \"70px\" }}>{text}</p>;\n        },\n      },\n\n      {\n        title: \"Note\",\n        dataIndex: \"note\",\n        key: \"note\",\n        width: \"20%\",\n        render: (text, record, index) => {\n          return <p style={{ width: \"70px\" }}>{text}</p>;\n        },\n      },\n\n      {\n        title: \"\",\n        dataIndex: \"assign\",\n        key: \"assign\",\n        width: \"10%\",\n        render: (text, record, index) => {\n          return (\n            <div\n              className=\"assign\"\n              style={{\n                fontSize: px(16),\n                paddingTop: px(5),\n                paddingBottom: px(5),\n              }}\n              onClick={() => {\n                console.log(text, record, index);\n                this.setState({\n                  // visible: true,\n                  assignVisible: true,\n                  seleceEmergencies: record,\n                });\n              }}\n            >\n              Assign\n            </div>\n          );\n        },\n      },\n    ];\n\n    let tableData = searchText.length > 0 ? serchExamData : historyData;\n\n    return (\n      <div id=\"unassigned\">\n        <Heard\n          onReturn={() => {\n            this.props.history.goBack();\n          }}\n          onSearch={(data) => {\n            storage.doctorExam = JSON.stringify(data);\n\n            storage.doctorList = JSON.stringify(this.state.data);\n            if (storage.isClinical === \"true\") {\n              this.props.history.push({\n                pathname: \"/page8\",\n                identity: storage.identity,\n                patientId: data.patientId,\n              });\n            } else {\n              this.props.history.push({ pathname: \"/page10\" });\n            }\n          }}\n          menu8Click={() => {\n            console.log(\"--\", storage.identity);\n            switch (storage.identity) {\n              case \"2\":\n                this.props.history.push({\n                  pathname: \"/EzyVetSelectExam\",\n                  listDate: storage.ezyVetList,\n                  defaultCurrent: storage.defaultCurrent,\n                });\n\n                break;\n              case \"1\":\n                this.props.history.push(\"/VetSpireSelectExam\");\n\n                break;\n              case \"3\":\n                this.props.history.push({\n                  pathname: \"/uesr/selectExam\",\n                  listDate: storage.doctorList,\n                  defaultCurrent: storage.defaultCurrent,\n                });\n\n                break;\n\n              default:\n                break;\n            }\n          }}\n        />\n\n        <div className=\"body\">\n          <div\n            className=\"title\"\n            style={{\n              marginTop: px(30),\n              fontSize: px(30),\n              marginBottom: px(40),\n            }}\n          >\n            Unassigned Measurements{\" \"}\n          </div>\n          <div className=\"input\" style={{ marginBottom: px(10) }}>\n            <input\n              type=\"text\"\n              // className=\"iconfont search\"\n              placeholder=\"&#xe628; Search Pet Name or Description\"\n              value={this.state.searchText}\n              onChange={(e) => {\n                this.setState({\n                  searchText: e.target.value,\n                });\n                this._search(e.target.value);\n              }}\n              onKeyUp={(e) => {\n                // console.log(e);\n                if (e.keyCode === 13) {\n                  this._search();\n                }\n                if (e.keyCode === 27) {\n                  this.setState({\n                    searchText: \"\",\n                  });\n                }\n              }}\n            />\n            <div\n              className=\"searchBtn\"\n              style={{ height: px(35), fontSize: px(18) }}\n              onClick={this._search}\n            >\n              <p>Search</p>\n            </div>\n          </div>\n\n          <div className=\"table\">\n            <Table\n              style={{\n                // border: ' #979797 1px solid',\n                padding: 0,\n                margin: 0,\n                width: \"95%\",\n                height: MTop(280),\n                // backgroundColor: 'pink'\n              }}\n              loading={loading}\n              columns={columns}\n              dataSource={tableData}\n              rowKey={(columns) => columns.historyId}\n              // pagination={{ pageSize: 8, showSizeChanger: false, showQuickJumper: true }}\n              pagination={false}\n              scroll={{\n                y: MTop(260),\n              }}\n            />\n          </div>\n\n          {this._modal()}\n        </div>\n        <MyModal\n          visible={this.state.assignVisible}\n          // visible={true}\n          element={\n            <div className=\"myfindOrg\">\n              <div className=\"orgHeard\">\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\n                  <div\n                  // className=\" iconfont icon-left return\"\n                  // onClick={() => { this.setState({ isWorkplace: false, isOrg: true }) }}\n                  >\n                    {/* <img src={left1} alt=\"\" style={{ height: px(25) }} /> */}\n                  </div>\n                  <div\n                    onClick={() => {\n                      this.setState({ assignVisible: false });\n                    }}\n                  >\n                    <img src={Close} alt=\"\" style={{ width: px(25) }} />\n                  </div>\n                </div>\n                <div\n                  className=\"text\"\n                  onMouseOver={() => {\n                    if (disabled) {\n                      this.setState({\n                        disabled: false,\n                      });\n                    }\n                  }}\n                  onMouseOut={() => {\n                    this.setState({\n                      disabled: true,\n                    });\n                  }}\n                >\n                  Assign Measurement\n                </div>\n\n                <div className=\"searchBox\">\n                  <Input\n                    placeholder=\" &#xe61b; Search Pet\"\n                    bordered={false}\n                    allowClear={true}\n                    value={this.state.search}\n                    onChange={(item) => {\n                      this.setState({\n                        search: item.target.value,\n                      });\n                      this._searchPet(item.target.value);\n                    }}\n                  />\n                </div>\n              </div>\n\n              <div className=\"list\">{this._list()}</div>\n\n              <div className=\"foot\">\n                <div\n                  className=\"btnn flex\"\n                  style={{ height: px(45) }}\n                  onClick={() => {\n                    this.setState({\n                      assignVisible: false,\n                      visible: true,\n                    });\n                  }}\n                >\n                  <p>+Add New Pet</p>\n                </div>\n                <div\n                  className=\"btnn flex\"\n                  style={{ height: px(45) }}\n                  onClick={() => {\n                    if (!this.state.selectPetId) {\n                      message.error(\"Please select a pet to assign\");\n                    } else {\n                      let { selectPetId, seleceEmergencies, historyData } =\n                        this.state;\n                      let parmes = {\n                        petId: selectPetId,\n                        clinicalDatagroupId:\n                          seleceEmergencies.clinicalDatagroupId,\n                      };\n                      console.log(\"分配的数据信息\", parmes);\n                      fetchRequest(\n                        `/pet/addAndSavePetExam/${seleceEmergencies.historyId}`,\n                        \"POST\",\n                        parmes\n                      )\n                        .then((res) => {\n                          console.log(\"----------\", res);\n                          if (res.flag === true) {\n                            console.log(\"分配成功\");\n                            message.success(\"Assigned successfully\");\n                            let arr = [];\n                            for (let i = 0; i < historyData.length; i++) {\n                              const element = historyData[i];\n                              if (\n                                seleceEmergencies.clinicalDatagroupId !==\n                                element.clinicalDatagroupId\n                              ) {\n                                arr.push(element);\n                              }\n                            }\n\n                            this.setState({\n                              assignVisible: false,\n                              historyData: arr,\n                            });\n                          } else {\n                            message.error(\"Assignment failed\");\n                          }\n                        })\n                        .catch((err) => {\n                          console.log(err);\n                          message.error(\"Assignment failed\");\n                        });\n                    }\n                  }}\n                >\n                  <p>Confirm</p>\n                </div>\n                {/* <Button\n                  text={'+Add New Pet'}\n                  onClick={() => {\n                    this.setState({\n                      assignVisible: false,\n                      visible: true\n                    })\n                  }}\n                />\n                <Button\n                  text={'Confirm'}\n                  \n                /> */}\n              </div>\n            </div>\n          }\n        />\n      </div>\n    );\n  }\n}\n","C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx",["204","205","206","207","208","209","210","211","212","213","214"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\workPlace\\WorkPlace.jsx",["215","216","217","218","219","220","221","222","223"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx",["224","225","226","227","228","229","230","231","232","233"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\FetchUtil4.js",["234","235","236","237"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\combineScales\\index.jsx",["238","239","240","241"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\selectMella\\SelectMella.jsx",["289"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\components\\menuOptions\\editParent\\EditParent.jsx",["290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\utils\\selectionBox\\SelectionBox.jsx",["312"],"C:\\Users\\nonagon\\Desktop\\workCode\\Mella_Desktop_Supper_USB\\src\\pages\\allPetsPage\\index.jsx",["313","314","315","316","317","318","319","320","321","322","323","324"],{"ruleId":"325","severity":1,"message":"326","line":13,"column":8,"nodeType":"327","messageId":"328","endLine":13,"endColumn":21},{"ruleId":"325","severity":1,"message":"329","line":14,"column":8,"nodeType":"327","messageId":"328","endLine":14,"endColumn":20},{"ruleId":"330","replacedBy":"331"},{"ruleId":"332","replacedBy":"333"},{"ruleId":"325","severity":1,"message":"326","line":11,"column":8,"nodeType":"327","messageId":"328","endLine":11,"endColumn":21},{"ruleId":"334","severity":1,"message":"335","line":47,"column":6,"nodeType":"336","endLine":47,"endColumn":8,"suggestions":"337"},{"ruleId":"338","severity":1,"message":"339","line":87,"column":5,"nodeType":"340","messageId":"341","endLine":106,"endColumn":6},{"ruleId":"330","replacedBy":"342"},{"ruleId":"332","replacedBy":"343"},{"ruleId":"325","severity":1,"message":"344","line":7,"column":3,"nodeType":"327","messageId":"328","endLine":7,"endColumn":7},{"ruleId":"325","severity":1,"message":"345","line":11,"column":3,"nodeType":"327","messageId":"328","endLine":11,"endColumn":10},{"ruleId":"325","severity":1,"message":"346","line":13,"column":3,"nodeType":"327","messageId":"328","endLine":13,"endColumn":7},{"ruleId":"325","severity":1,"message":"347","line":19,"column":3,"nodeType":"327","messageId":"328","endLine":19,"endColumn":23},{"ruleId":"325","severity":1,"message":"348","line":20,"column":3,"nodeType":"327","messageId":"328","endLine":20,"endColumn":15},{"ruleId":"325","severity":1,"message":"349","line":27,"column":8,"nodeType":"327","messageId":"328","endLine":27,"endColumn":15},{"ruleId":"325","severity":1,"message":"350","line":31,"column":8,"nodeType":"327","messageId":"328","endLine":31,"endColumn":10},{"ruleId":"325","severity":1,"message":"351","line":32,"column":8,"nodeType":"327","messageId":"328","endLine":32,"endColumn":10},{"ruleId":"325","severity":1,"message":"352","line":33,"column":8,"nodeType":"327","messageId":"328","endLine":33,"endColumn":12},{"ruleId":"325","severity":1,"message":"353","line":34,"column":8,"nodeType":"327","messageId":"328","endLine":34,"endColumn":11},{"ruleId":"325","severity":1,"message":"354","line":35,"column":8,"nodeType":"327","messageId":"328","endLine":35,"endColumn":11},{"ruleId":"325","severity":1,"message":"355","line":36,"column":8,"nodeType":"327","messageId":"328","endLine":36,"endColumn":13},{"ruleId":"325","severity":1,"message":"356","line":40,"column":8,"nodeType":"327","messageId":"328","endLine":40,"endColumn":18},{"ruleId":"325","severity":1,"message":"357","line":44,"column":8,"nodeType":"327","messageId":"328","endLine":44,"endColumn":13},{"ruleId":"325","severity":1,"message":"358","line":56,"column":7,"nodeType":"327","messageId":"328","endLine":56,"endColumn":24},{"ruleId":"325","severity":1,"message":"359","line":90,"column":17,"nodeType":"327","messageId":"328","endLine":90,"endColumn":25},{"ruleId":"325","severity":1,"message":"360","line":102,"column":10,"nodeType":"327","messageId":"328","endLine":102,"endColumn":18},{"ruleId":"325","severity":1,"message":"361","line":106,"column":10,"nodeType":"327","messageId":"328","endLine":106,"endColumn":13},{"ruleId":"325","severity":1,"message":"362","line":109,"column":18,"nodeType":"327","messageId":"328","endLine":109,"endColumn":27},{"ruleId":"325","severity":1,"message":"363","line":129,"column":11,"nodeType":"327","messageId":"328","endLine":129,"endColumn":14},{"ruleId":"325","severity":1,"message":"364","line":442,"column":22,"nodeType":"327","messageId":"328","endLine":442,"endColumn":26},{"ruleId":"365","severity":1,"message":"366","line":453,"column":88,"nodeType":"367","messageId":"368","endLine":453,"endColumn":90},{"ruleId":"369","severity":1,"message":"370","line":700,"column":34,"nodeType":"371","messageId":"372","endLine":700,"endColumn":35,"suggestions":"373"},{"ruleId":"369","severity":1,"message":"374","line":705,"column":31,"nodeType":"371","messageId":"372","endLine":705,"endColumn":32,"suggestions":"375"},{"ruleId":"369","severity":1,"message":"370","line":740,"column":34,"nodeType":"371","messageId":"372","endLine":740,"endColumn":35,"suggestions":"376"},{"ruleId":"369","severity":1,"message":"374","line":745,"column":31,"nodeType":"371","messageId":"372","endLine":745,"endColumn":32,"suggestions":"377"},{"ruleId":"369","severity":1,"message":"370","line":780,"column":34,"nodeType":"371","messageId":"372","endLine":780,"endColumn":35,"suggestions":"378"},{"ruleId":"369","severity":1,"message":"374","line":785,"column":31,"nodeType":"371","messageId":"372","endLine":785,"endColumn":32,"suggestions":"379"},{"ruleId":"369","severity":1,"message":"370","line":828,"column":34,"nodeType":"371","messageId":"372","endLine":828,"endColumn":35,"suggestions":"380"},{"ruleId":"369","severity":1,"message":"374","line":833,"column":31,"nodeType":"371","messageId":"372","endLine":833,"endColumn":32,"suggestions":"381"},{"ruleId":"369","severity":1,"message":"370","line":867,"column":34,"nodeType":"371","messageId":"372","endLine":867,"endColumn":35,"suggestions":"382"},{"ruleId":"369","severity":1,"message":"374","line":872,"column":31,"nodeType":"371","messageId":"372","endLine":872,"endColumn":32,"suggestions":"383"},{"ruleId":"369","severity":1,"message":"370","line":908,"column":34,"nodeType":"371","messageId":"372","endLine":908,"endColumn":35,"suggestions":"384"},{"ruleId":"369","severity":1,"message":"374","line":913,"column":31,"nodeType":"371","messageId":"372","endLine":913,"endColumn":32,"suggestions":"385"},{"ruleId":"369","severity":1,"message":"370","line":1454,"column":34,"nodeType":"371","messageId":"372","endLine":1454,"endColumn":35,"suggestions":"386"},{"ruleId":"369","severity":1,"message":"374","line":1459,"column":31,"nodeType":"371","messageId":"372","endLine":1459,"endColumn":32,"suggestions":"387"},{"ruleId":"369","severity":1,"message":"370","line":1475,"column":34,"nodeType":"371","messageId":"372","endLine":1475,"endColumn":35,"suggestions":"388"},{"ruleId":"369","severity":1,"message":"374","line":1480,"column":31,"nodeType":"371","messageId":"372","endLine":1480,"endColumn":32,"suggestions":"389"},{"ruleId":"334","severity":1,"message":"390","line":1655,"column":5,"nodeType":"336","endLine":1655,"endColumn":7,"suggestions":"391"},{"ruleId":"334","severity":1,"message":"392","line":1706,"column":6,"nodeType":"336","endLine":1706,"endColumn":23,"suggestions":"393"},{"ruleId":"334","severity":1,"message":"394","line":1735,"column":6,"nodeType":"336","endLine":1735,"endColumn":26,"suggestions":"395"},{"ruleId":"334","severity":1,"message":"396","line":1741,"column":6,"nodeType":"336","endLine":1741,"endColumn":18,"suggestions":"397"},{"ruleId":"325","severity":1,"message":"398","line":3,"column":10,"nodeType":"327","messageId":"328","endLine":3,"endColumn":23},{"ruleId":"325","severity":1,"message":"399","line":16,"column":8,"nodeType":"327","messageId":"328","endLine":16,"endColumn":17},{"ruleId":"330","replacedBy":"400"},{"ruleId":"332","replacedBy":"401"},{"ruleId":"325","severity":1,"message":"402","line":4,"column":3,"nodeType":"327","messageId":"328","endLine":4,"endColumn":9},{"ruleId":"325","severity":1,"message":"347","line":10,"column":10,"nodeType":"327","messageId":"328","endLine":10,"endColumn":30},{"ruleId":"325","severity":1,"message":"403","line":15,"column":8,"nodeType":"327","messageId":"328","endLine":15,"endColumn":11},{"ruleId":"325","severity":1,"message":"404","line":17,"column":10,"nodeType":"327","messageId":"328","endLine":17,"endColumn":21},{"ruleId":"325","severity":1,"message":"405","line":1,"column":17,"nodeType":"327","messageId":"328","endLine":1,"endColumn":26},{"ruleId":"325","severity":1,"message":"406","line":1,"column":28,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"344","line":3,"column":18,"nodeType":"327","messageId":"328","endLine":3,"endColumn":22},{"ruleId":"325","severity":1,"message":"407","line":3,"column":24,"nodeType":"327","messageId":"328","endLine":3,"endColumn":34},{"ruleId":"325","severity":1,"message":"408","line":20,"column":9,"nodeType":"327","messageId":"328","endLine":20,"endColumn":16},{"ruleId":"325","severity":1,"message":"409","line":20,"column":18,"nodeType":"327","messageId":"328","endLine":20,"endColumn":24},{"ruleId":"325","severity":1,"message":"410","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":15},{"ruleId":"325","severity":1,"message":"411","line":28,"column":8,"nodeType":"327","messageId":"328","endLine":28,"endColumn":14},{"ruleId":"325","severity":1,"message":"409","line":31,"column":18,"nodeType":"327","messageId":"328","endLine":31,"endColumn":24},{"ruleId":"334","severity":1,"message":"412","line":75,"column":6,"nodeType":"336","endLine":75,"endColumn":21,"suggestions":"413"},{"ruleId":"414","severity":1,"message":"415","line":108,"column":15,"nodeType":"416","endLine":108,"endColumn":113},{"ruleId":"414","severity":1,"message":"415","line":124,"column":19,"nodeType":"416","endLine":124,"endColumn":43},{"ruleId":"414","severity":1,"message":"415","line":141,"column":27,"nodeType":"416","endLine":147,"endColumn":29},{"ruleId":"330","replacedBy":"417"},{"ruleId":"332","replacedBy":"418"},{"ruleId":"325","severity":1,"message":"405","line":1,"column":27,"nodeType":"327","messageId":"328","endLine":1,"endColumn":36},{"ruleId":"325","severity":1,"message":"419","line":8,"column":10,"nodeType":"327","messageId":"328","endLine":8,"endColumn":14},{"ruleId":"325","severity":1,"message":"420","line":8,"column":20,"nodeType":"327","messageId":"328","endLine":8,"endColumn":24},{"ruleId":"325","severity":1,"message":"421","line":18,"column":9,"nodeType":"327","messageId":"328","endLine":18,"endColumn":16},{"ruleId":"325","severity":1,"message":"422","line":68,"column":21,"nodeType":"327","messageId":"328","endLine":68,"endColumn":27},{"ruleId":"325","severity":1,"message":"423","line":72,"column":21,"nodeType":"327","messageId":"328","endLine":72,"endColumn":28},{"ruleId":"424","severity":1,"message":"425","line":160,"column":17,"nodeType":"416","endLine":176,"endColumn":18},{"ruleId":"338","severity":1,"message":"339","line":224,"column":29,"nodeType":"340","messageId":"341","endLine":243,"endColumn":30},{"ruleId":"325","severity":1,"message":"426","line":18,"column":10,"nodeType":"327","messageId":"328","endLine":18,"endColumn":23},{"ruleId":"325","severity":1,"message":"427","line":358,"column":28,"nodeType":"327","messageId":"328","endLine":358,"endColumn":31},{"ruleId":"325","severity":1,"message":"428","line":358,"column":33,"nodeType":"327","messageId":"328","endLine":358,"endColumn":35},{"ruleId":"325","severity":1,"message":"429","line":358,"column":37,"nodeType":"327","messageId":"328","endLine":358,"endColumn":45},{"ruleId":"325","severity":1,"message":"419","line":14,"column":10,"nodeType":"327","messageId":"328","endLine":14,"endColumn":14},{"ruleId":"325","severity":1,"message":"430","line":17,"column":8,"nodeType":"327","messageId":"328","endLine":17,"endColumn":14},{"ruleId":"431","severity":1,"message":"432","line":48,"column":5,"nodeType":"433","messageId":"368","endLine":48,"endColumn":13},{"ruleId":"325","severity":1,"message":"434","line":59,"column":9,"nodeType":"327","messageId":"328","endLine":59,"endColumn":22},{"ruleId":"325","severity":1,"message":"434","line":95,"column":9,"nodeType":"327","messageId":"328","endLine":95,"endColumn":22},{"ruleId":"435","severity":1,"message":"436","line":213,"column":41,"nodeType":"437","messageId":"438","endLine":213,"endColumn":43},{"ruleId":"435","severity":1,"message":"436","line":226,"column":47,"nodeType":"437","messageId":"438","endLine":226,"endColumn":49},{"ruleId":"325","severity":1,"message":"439","line":397,"column":23,"nodeType":"327","messageId":"328","endLine":397,"endColumn":28},{"ruleId":"325","severity":1,"message":"440","line":450,"column":21,"nodeType":"327","messageId":"328","endLine":450,"endColumn":36},{"ruleId":"325","severity":1,"message":"430","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":16},{"ruleId":"325","severity":1,"message":"441","line":2,"column":36,"nodeType":"327","messageId":"328","endLine":2,"endColumn":44},{"ruleId":"325","severity":1,"message":"442","line":3,"column":10,"nodeType":"327","messageId":"328","endLine":3,"endColumn":22},{"ruleId":"325","severity":1,"message":"409","line":23,"column":18,"nodeType":"327","messageId":"328","endLine":23,"endColumn":24},{"ruleId":"325","severity":1,"message":"443","line":27,"column":10,"nodeType":"327","messageId":"328","endLine":27,"endColumn":17},{"ruleId":"325","severity":1,"message":"444","line":27,"column":19,"nodeType":"327","messageId":"328","endLine":27,"endColumn":29},{"ruleId":"414","severity":1,"message":"415","line":62,"column":16,"nodeType":"416","endLine":62,"endColumn":41},{"ruleId":"414","severity":1,"message":"415","line":64,"column":16,"nodeType":"416","endLine":64,"endColumn":41},{"ruleId":"414","severity":1,"message":"415","line":66,"column":16,"nodeType":"416","endLine":66,"endColumn":41},{"ruleId":"414","severity":1,"message":"415","line":68,"column":16,"nodeType":"416","endLine":68,"endColumn":41},{"ruleId":"334","severity":1,"message":"445","line":74,"column":3,"nodeType":"327","endLine":74,"endColumn":12,"suggestions":"446"},{"ruleId":"325","severity":1,"message":"447","line":6,"column":3,"nodeType":"327","messageId":"328","endLine":6,"endColumn":8},{"ruleId":"325","severity":1,"message":"448","line":7,"column":3,"nodeType":"327","messageId":"328","endLine":7,"endColumn":10},{"ruleId":"325","severity":1,"message":"346","line":8,"column":3,"nodeType":"327","messageId":"328","endLine":8,"endColumn":7},{"ruleId":"325","severity":1,"message":"419","line":15,"column":10,"nodeType":"327","messageId":"328","endLine":15,"endColumn":14},{"ruleId":"325","severity":1,"message":"449","line":15,"column":16,"nodeType":"327","messageId":"328","endLine":15,"endColumn":18},{"ruleId":"325","severity":1,"message":"347","line":17,"column":10,"nodeType":"327","messageId":"328","endLine":17,"endColumn":30},{"ruleId":"325","severity":1,"message":"348","line":17,"column":32,"nodeType":"327","messageId":"328","endLine":17,"endColumn":44},{"ruleId":"325","severity":1,"message":"450","line":17,"column":46,"nodeType":"327","messageId":"328","endLine":17,"endColumn":61},{"ruleId":"325","severity":1,"message":"451","line":18,"column":10,"nodeType":"327","messageId":"328","endLine":18,"endColumn":22},{"ruleId":"325","severity":1,"message":"452","line":9,"column":8,"nodeType":"327","messageId":"328","endLine":9,"endColumn":17},{"ruleId":"325","severity":1,"message":"347","line":10,"column":10,"nodeType":"327","messageId":"328","endLine":10,"endColumn":30},{"ruleId":"325","severity":1,"message":"453","line":10,"column":32,"nodeType":"327","messageId":"328","endLine":10,"endColumn":47},{"ruleId":"325","severity":1,"message":"454","line":14,"column":8,"nodeType":"327","messageId":"328","endLine":14,"endColumn":16},{"ruleId":"325","severity":1,"message":"419","line":19,"column":10,"nodeType":"327","messageId":"328","endLine":19,"endColumn":14},{"ruleId":"338","severity":1,"message":"339","line":85,"column":25,"nodeType":"340","messageId":"341","endLine":114,"endColumn":26},{"ruleId":"455","severity":1,"message":"456","line":103,"column":29,"nodeType":"457","messageId":"458","endLine":104,"endColumn":68},{"ruleId":"455","severity":1,"message":"456","line":105,"column":29,"nodeType":"457","messageId":"458","endLine":112,"endColumn":39},{"ruleId":"325","severity":1,"message":"459","line":290,"column":49,"nodeType":"327","messageId":"328","endLine":290,"endColumn":63},{"ruleId":"325","severity":1,"message":"460","line":290,"column":65,"nodeType":"327","messageId":"328","endLine":290,"endColumn":79},{"ruleId":"325","severity":1,"message":"461","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":10},{"ruleId":"325","severity":1,"message":"462","line":20,"column":9,"nodeType":"327","messageId":"328","endLine":20,"endColumn":15},{"ruleId":"365","severity":1,"message":"366","line":23,"column":16,"nodeType":"367","messageId":"368","endLine":23,"endColumn":18},{"ruleId":"365","severity":1,"message":"366","line":74,"column":16,"nodeType":"367","messageId":"368","endLine":74,"endColumn":18},{"ruleId":"325","severity":1,"message":"463","line":28,"column":26,"nodeType":"327","messageId":"328","endLine":28,"endColumn":32},{"ruleId":"325","severity":1,"message":"464","line":28,"column":34,"nodeType":"327","messageId":"328","endLine":28,"endColumn":39},{"ruleId":"334","severity":1,"message":"465","line":115,"column":6,"nodeType":"336","endLine":115,"endColumn":8,"suggestions":"466"},{"ruleId":"414","severity":1,"message":"415","line":167,"column":17,"nodeType":"416","endLine":167,"endColumn":45},{"ruleId":"325","severity":1,"message":"467","line":1,"column":38,"nodeType":"327","messageId":"328","endLine":1,"endColumn":44},{"ruleId":"325","severity":1,"message":"344","line":5,"column":3,"nodeType":"327","messageId":"328","endLine":5,"endColumn":7},{"ruleId":"325","severity":1,"message":"407","line":6,"column":3,"nodeType":"327","messageId":"328","endLine":6,"endColumn":13},{"ruleId":"325","severity":1,"message":"441","line":13,"column":3,"nodeType":"327","messageId":"328","endLine":13,"endColumn":11},{"ruleId":"325","severity":1,"message":"409","line":42,"column":18,"nodeType":"327","messageId":"328","endLine":42,"endColumn":24},{"ruleId":"325","severity":1,"message":"468","line":56,"column":10,"nodeType":"327","messageId":"328","endLine":56,"endColumn":17},{"ruleId":"325","severity":1,"message":"469","line":56,"column":19,"nodeType":"327","messageId":"328","endLine":56,"endColumn":29},{"ruleId":"414","severity":1,"message":"415","line":152,"column":11,"nodeType":"416","endLine":152,"endColumn":29},{"ruleId":"414","severity":1,"message":"415","line":154,"column":11,"nodeType":"416","endLine":154,"endColumn":32},{"ruleId":"414","severity":1,"message":"415","line":158,"column":11,"nodeType":"416","endLine":158,"endColumn":29},{"ruleId":"414","severity":1,"message":"415","line":160,"column":11,"nodeType":"416","endLine":160,"endColumn":32},{"ruleId":"414","severity":1,"message":"415","line":164,"column":11,"nodeType":"416","endLine":164,"endColumn":30},{"ruleId":"414","severity":1,"message":"415","line":166,"column":11,"nodeType":"416","endLine":166,"endColumn":33},{"ruleId":"414","severity":1,"message":"415","line":170,"column":11,"nodeType":"416","endLine":170,"endColumn":30},{"ruleId":"414","severity":1,"message":"415","line":172,"column":11,"nodeType":"416","endLine":172,"endColumn":33},{"ruleId":"414","severity":1,"message":"415","line":176,"column":11,"nodeType":"416","endLine":176,"endColumn":29},{"ruleId":"414","severity":1,"message":"415","line":178,"column":11,"nodeType":"416","endLine":178,"endColumn":32},{"ruleId":"414","severity":1,"message":"415","line":182,"column":11,"nodeType":"416","endLine":182,"endColumn":29},{"ruleId":"414","severity":1,"message":"415","line":184,"column":11,"nodeType":"416","endLine":184,"endColumn":32},{"ruleId":"414","severity":1,"message":"415","line":188,"column":11,"nodeType":"416","endLine":188,"endColumn":29},{"ruleId":"414","severity":1,"message":"415","line":190,"column":11,"nodeType":"416","endLine":190,"endColumn":32},{"ruleId":"334","severity":1,"message":"470","line":248,"column":6,"nodeType":"336","endLine":248,"endColumn":29,"suggestions":"471"},{"ruleId":"334","severity":1,"message":"472","line":270,"column":6,"nodeType":"336","endLine":270,"endColumn":25,"suggestions":"473"},{"ruleId":"334","severity":1,"message":"474","line":292,"column":6,"nodeType":"336","endLine":292,"endColumn":13,"suggestions":"475"},{"ruleId":"334","severity":1,"message":"476","line":319,"column":6,"nodeType":"336","endLine":319,"endColumn":44,"suggestions":"477"},{"ruleId":"334","severity":1,"message":"478","line":330,"column":6,"nodeType":"336","endLine":330,"endColumn":17,"suggestions":"479"},{"ruleId":"325","severity":1,"message":"480","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":20},{"ruleId":"325","severity":1,"message":"344","line":4,"column":5,"nodeType":"327","messageId":"328","endLine":4,"endColumn":9},{"ruleId":"325","severity":1,"message":"481","line":5,"column":5,"nodeType":"327","messageId":"328","endLine":5,"endColumn":12},{"ruleId":"325","severity":1,"message":"430","line":6,"column":5,"nodeType":"327","messageId":"328","endLine":6,"endColumn":11},{"ruleId":"325","severity":1,"message":"447","line":7,"column":5,"nodeType":"327","messageId":"328","endLine":7,"endColumn":10},{"ruleId":"325","severity":1,"message":"419","line":15,"column":10,"nodeType":"327","messageId":"328","endLine":15,"endColumn":14},{"ruleId":"325","severity":1,"message":"420","line":15,"column":20,"nodeType":"327","messageId":"328","endLine":15,"endColumn":24},{"ruleId":"325","severity":1,"message":"326","line":16,"column":8,"nodeType":"327","messageId":"328","endLine":16,"endColumn":21},{"ruleId":"435","severity":1,"message":"436","line":49,"column":36,"nodeType":"437","messageId":"438","endLine":49,"endColumn":38},{"ruleId":"435","severity":1,"message":"436","line":65,"column":32,"nodeType":"437","messageId":"438","endLine":65,"endColumn":34},{"ruleId":"435","severity":1,"message":"436","line":74,"column":37,"nodeType":"437","messageId":"438","endLine":74,"endColumn":39},{"ruleId":"435","severity":1,"message":"436","line":80,"column":23,"nodeType":"437","messageId":"438","endLine":80,"endColumn":25},{"ruleId":"435","severity":1,"message":"436","line":82,"column":31,"nodeType":"437","messageId":"438","endLine":82,"endColumn":33},{"ruleId":"365","severity":1,"message":"366","line":86,"column":32,"nodeType":"367","messageId":"368","endLine":86,"endColumn":34},{"ruleId":"334","severity":1,"message":"482","line":104,"column":8,"nodeType":"336","endLine":104,"endColumn":10,"suggestions":"483"},{"ruleId":"435","severity":1,"message":"436","line":114,"column":39,"nodeType":"437","messageId":"438","endLine":114,"endColumn":41},{"ruleId":"435","severity":1,"message":"436","line":115,"column":49,"nodeType":"437","messageId":"438","endLine":115,"endColumn":51},{"ruleId":"365","severity":1,"message":"484","line":124,"column":39,"nodeType":"367","messageId":"368","endLine":124,"endColumn":41},{"ruleId":"435","severity":1,"message":"436","line":137,"column":39,"nodeType":"437","messageId":"438","endLine":137,"endColumn":41},{"ruleId":"334","severity":1,"message":"485","line":152,"column":8,"nodeType":"336","endLine":152,"endColumn":20,"suggestions":"486"},{"ruleId":"424","severity":1,"message":"487","line":202,"column":21,"nodeType":"416","endLine":207,"endColumn":22},{"ruleId":"325","severity":1,"message":"488","line":60,"column":13,"nodeType":"327","messageId":"328","endLine":60,"endColumn":22},{"ruleId":"325","severity":1,"message":"489","line":2,"column":10,"nodeType":"327","messageId":"328","endLine":2,"endColumn":15},{"ruleId":"325","severity":1,"message":"430","line":2,"column":17,"nodeType":"327","messageId":"328","endLine":2,"endColumn":23},{"ruleId":"325","severity":1,"message":"490","line":2,"column":48,"nodeType":"327","messageId":"328","endLine":2,"endColumn":56},{"ruleId":"325","severity":1,"message":"491","line":2,"column":58,"nodeType":"327","messageId":"328","endLine":2,"endColumn":61},{"ruleId":"325","severity":1,"message":"492","line":2,"column":63,"nodeType":"327","messageId":"328","endLine":2,"endColumn":66},{"ruleId":"325","severity":1,"message":"346","line":2,"column":68,"nodeType":"327","messageId":"328","endLine":2,"endColumn":72},{"ruleId":"325","severity":1,"message":"452","line":3,"column":8,"nodeType":"327","messageId":"328","endLine":3,"endColumn":17},{"ruleId":"325","severity":1,"message":"450","line":6,"column":32,"nodeType":"327","messageId":"328","endLine":6,"endColumn":47},{"ruleId":"325","severity":1,"message":"493","line":11,"column":8,"nodeType":"327","messageId":"328","endLine":11,"endColumn":13},{"ruleId":"325","severity":1,"message":"494","line":12,"column":8,"nodeType":"327","messageId":"328","endLine":12,"endColumn":14},{"ruleId":"325","severity":1,"message":"403","line":15,"column":8,"nodeType":"327","messageId":"328","endLine":15,"endColumn":11},{"ruleId":"325","severity":1,"message":"495","line":16,"column":8,"nodeType":"327","messageId":"328","endLine":16,"endColumn":14},{"ruleId":"325","severity":1,"message":"496","line":17,"column":8,"nodeType":"327","messageId":"328","endLine":17,"endColumn":12},{"ruleId":"325","severity":1,"message":"497","line":23,"column":9,"nodeType":"327","messageId":"328","endLine":23,"endColumn":16},{"ruleId":"325","severity":1,"message":"498","line":24,"column":9,"nodeType":"327","messageId":"328","endLine":24,"endColumn":15},{"ruleId":"325","severity":1,"message":"499","line":25,"column":7,"nodeType":"327","messageId":"328","endLine":25,"endColumn":13},{"ruleId":"325","severity":1,"message":"500","line":28,"column":5,"nodeType":"327","messageId":"328","endLine":28,"endColumn":12},{"ruleId":"325","severity":1,"message":"501","line":29,"column":5,"nodeType":"327","messageId":"328","endLine":29,"endColumn":17},{"ruleId":"325","severity":1,"message":"502","line":30,"column":5,"nodeType":"327","messageId":"328","endLine":30,"endColumn":8},{"ruleId":"325","severity":1,"message":"502","line":92,"column":61,"nodeType":"327","messageId":"328","endLine":92,"endColumn":64},{"ruleId":"325","severity":1,"message":"503","line":92,"column":66,"nodeType":"327","messageId":"328","endLine":92,"endColumn":75},{"ruleId":"424","severity":1,"message":"425","line":277,"column":15,"nodeType":"416","endLine":283,"endColumn":16},{"ruleId":"334","severity":1,"message":"504","line":27,"column":8,"nodeType":"336","endLine":27,"endColumn":10,"suggestions":"505"},{"ruleId":"325","severity":1,"message":"506","line":2,"column":8,"nodeType":"327","messageId":"328","endLine":2,"endColumn":17},{"ruleId":"325","severity":1,"message":"489","line":4,"column":10,"nodeType":"327","messageId":"328","endLine":4,"endColumn":15},{"ruleId":"325","severity":1,"message":"430","line":4,"column":17,"nodeType":"327","messageId":"328","endLine":4,"endColumn":23},{"ruleId":"325","severity":1,"message":"448","line":4,"column":25,"nodeType":"327","messageId":"328","endLine":4,"endColumn":32},{"ruleId":"325","severity":1,"message":"346","line":4,"column":34,"nodeType":"327","messageId":"328","endLine":4,"endColumn":38},{"ruleId":"325","severity":1,"message":"507","line":4,"column":40,"nodeType":"327","messageId":"328","endLine":4,"endColumn":47},{"ruleId":"325","severity":1,"message":"347","line":5,"column":10,"nodeType":"327","messageId":"328","endLine":5,"endColumn":30},{"ruleId":"325","severity":1,"message":"450","line":5,"column":46,"nodeType":"327","messageId":"328","endLine":5,"endColumn":61},{"ruleId":"325","severity":1,"message":"419","line":9,"column":10,"nodeType":"327","messageId":"328","endLine":9,"endColumn":14},{"ruleId":"325","severity":1,"message":"420","line":9,"column":20,"nodeType":"327","messageId":"328","endLine":9,"endColumn":24},{"ruleId":"325","severity":1,"message":"449","line":9,"column":26,"nodeType":"327","messageId":"328","endLine":9,"endColumn":28},{"ruleId":"334","severity":1,"message":"508","line":30,"column":8,"nodeType":"336","endLine":30,"endColumn":10,"suggestions":"509"},"no-unused-vars","'electronStore' is defined but never used.","Identifier","unusedVar","'SelectionBox' is defined but never used.","no-native-reassign",["510"],"no-negated-in-lhs",["511"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_getExam' and 'petList'. Either include them or remove the dependency array. You can also do a functional update 'setPetList(p => ...)' if you only need 'petList' in the 'setPetList' call.","ArrayExpression",["512"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["510"],["511"],"'Menu' is defined but never used.","'Tooltip' is defined but never used.","'Spin' is defined but never used.","'createFromIconfontCN' is defined but never used.","'SyncOutlined' is defined but never used.","'MyModal' is defined but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["513","514"],"Unnecessary escape character: \\-.",["515","516"],["517","518"],["519","520"],["521","522"],["523","524"],["525","526"],["527","528"],["529","530"],["531","532"],["533","534"],["535","536"],["537","538"],["539","540"],["541","542"],["543","544"],"React Hook useEffect has a missing dependency: 'mellaMeasureNum'. Either include it or remove the dependency array.",["545"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["546"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["547"],"React Hook useEffect has a missing dependency: 'getOption'. Either include it or remove the dependency array.",["548"],"'BrowserRouter' is defined but never used.","'Praviders' is defined but never used.",["510"],["511"],"'Select' is defined but never used.","'dui' is defined but never used.","'FetchEszVet' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'PageHeader' is defined but never used.","'Content' is assigned a value but never used.","'Header' is assigned a value but never used.","'Image' is defined but never used.","'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["549"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["510"],["511"],"'mTop' is defined but never used.","'MTop' is defined but never used.","'history' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'fetchRequest1' is defined but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'Button' is defined but never used.","no-dupe-keys","Duplicate key 'disabled'.","ObjectExpression","'windowsHeight' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petId' is assigned a value but never used.","'assignOwnerName' is assigned a value but never used.","'Carousel' is defined but never used.","'PlusOutlined' is defined but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["550"],"'Modal' is defined but never used.","'message' is defined but never used.","'pX' is defined but never used.","'LoadingOutlined' is defined but never used.","'fetchRequest' is defined but never used.","'Draggable' is defined but never used.","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'token' is assigned a value but never used.","'header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["551"],"'useRef' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["552"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["553"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["554"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["555"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["556"],"'useHistory' is defined but never used.","'Popover' is defined but never used.","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["557"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["558"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'chooseNum' is assigned a value but never used.","'Input' is defined but never used.","'Calendar' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'horse' is defined but never used.","'rabbit' is defined but never used.","'female' is defined but never used.","'male' is defined but never used.","'SubMenu' is assigned a value but never used.","'Option' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'storage' is assigned a value but never used.","'errPatientId' is assigned a value but never used.","'url' is assigned a value but never used.","'userImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["559"],"'PropTypes' is defined but never used.","'BackTop' is defined but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["560"],"no-global-assign","no-unsafe-negation",{"desc":"561","fix":"562"},{"messageId":"563","fix":"564","desc":"565"},{"messageId":"566","fix":"567","desc":"568"},{"messageId":"563","fix":"569","desc":"565"},{"messageId":"566","fix":"570","desc":"568"},{"messageId":"563","fix":"571","desc":"565"},{"messageId":"566","fix":"572","desc":"568"},{"messageId":"563","fix":"573","desc":"565"},{"messageId":"566","fix":"574","desc":"568"},{"messageId":"563","fix":"575","desc":"565"},{"messageId":"566","fix":"576","desc":"568"},{"messageId":"563","fix":"577","desc":"565"},{"messageId":"566","fix":"578","desc":"568"},{"messageId":"563","fix":"579","desc":"565"},{"messageId":"566","fix":"580","desc":"568"},{"messageId":"563","fix":"581","desc":"565"},{"messageId":"566","fix":"582","desc":"568"},{"messageId":"563","fix":"583","desc":"565"},{"messageId":"566","fix":"584","desc":"568"},{"messageId":"563","fix":"585","desc":"565"},{"messageId":"566","fix":"586","desc":"568"},{"messageId":"563","fix":"587","desc":"565"},{"messageId":"566","fix":"588","desc":"568"},{"messageId":"563","fix":"589","desc":"565"},{"messageId":"566","fix":"590","desc":"568"},{"messageId":"563","fix":"591","desc":"565"},{"messageId":"566","fix":"592","desc":"568"},{"messageId":"563","fix":"593","desc":"565"},{"messageId":"566","fix":"594","desc":"568"},{"messageId":"563","fix":"595","desc":"565"},{"messageId":"566","fix":"596","desc":"568"},{"messageId":"563","fix":"597","desc":"565"},{"messageId":"566","fix":"598","desc":"568"},{"desc":"599","fix":"600"},{"desc":"601","fix":"602"},{"desc":"603","fix":"604"},{"desc":"605","fix":"606"},{"desc":"607","fix":"608"},{"desc":"609","fix":"610"},{"desc":"611","fix":"612"},{"desc":"613","fix":"614"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},{"desc":"621","fix":"622"},{"desc":"623","fix":"624"},{"desc":"625","fix":"626"},{"desc":"627","fix":"628"},{"desc":"629","fix":"630"},"Update the dependencies array to be: [_getExam, petList]",{"range":"631","text":"632"},"removeEscape",{"range":"633","text":"634"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"635","text":"636"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"637","text":"634"},{"range":"638","text":"636"},{"range":"639","text":"634"},{"range":"640","text":"636"},{"range":"641","text":"634"},{"range":"642","text":"636"},{"range":"643","text":"634"},{"range":"644","text":"636"},{"range":"645","text":"634"},{"range":"646","text":"636"},{"range":"647","text":"634"},{"range":"648","text":"636"},{"range":"649","text":"634"},{"range":"650","text":"636"},{"range":"651","text":"634"},{"range":"652","text":"636"},{"range":"653","text":"634"},{"range":"654","text":"636"},{"range":"655","text":"634"},{"range":"656","text":"636"},{"range":"657","text":"634"},{"range":"658","text":"636"},{"range":"659","text":"634"},{"range":"660","text":"636"},{"range":"661","text":"634"},{"range":"662","text":"636"},{"range":"663","text":"634"},{"range":"664","text":"636"},{"range":"665","text":"634"},{"range":"666","text":"636"},"Update the dependencies array to be: [mellaMeasureNum]",{"range":"667","text":"668"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"669","text":"670"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"671","text":"672"},"Update the dependencies array to be: [echarsData, getOption]",{"range":"673","text":"674"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"675","text":"676"},"Add dependencies array: [callBack, timers]",{"range":"677","text":"678"},"Update the dependencies array to be: [hardwareList]",{"range":"679","text":"680"},"Update the dependencies array to be: [finishScan, inputIndex, newData, patientId]",{"range":"681","text":"682"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"683","text":"684"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"685","text":"686"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"687","text":"688"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"689","text":"690"},"Update the dependencies array to be: [listDate]",{"range":"691","text":"692"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"693","text":"694"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"695","text":"696"},"Update the dependencies array to be: [_getExam]",{"range":"697","text":"698"},[1414,1416],"[_getExam, petList]",[20806,20807],"",[20806,20806],"\\",[21007,21008],[21007,21007],[22077,22078],[22077,22077],[22278,22279],[22278,22278],[23346,23347],[23346,23346],[23547,23548],[23547,23547],[24941,24942],[24941,24941],[25142,25143],[25142,25142],[26172,26173],[26172,26172],[26373,26374],[26373,26373],[27495,27496],[27495,27495],[27696,27697],[27696,27696],[43038,43039],[43038,43038],[43239,43240],[43239,43239],[43769,43770],[43769,43769],[43970,43971],[43970,43970],[49047,49049],"[mellaMeasureNum]",[50296,50313],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[50983,51003],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[51160,51172],"[echarsData, getOption]",[2280,2295],"[callBack, carouselIndex]",[2225,2225],", [callBack, timers]",[3175,3177],"[hardwareList]",[6313,6336],"[finishScan, inputIndex, newData, patientId]",[6785,6804],"[inputIndex, rulerConfirmCount]",[7417,7424],"[petId, petLengthDataConvert, petMessage]",[8039,8077],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[8500,8511],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]",[885,887],"[initSelectVale, listArr]",[1031,1033],"[_getExam]"]