[{"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"2","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"3","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\App.js":"4","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx":"5","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx":"6","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\apiKey\\APIKey.jsx":"7","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx":"8","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx":"9","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx":"10","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx":"11","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx":"12","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx":"13","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\settings\\Settings.jsx":"14","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx":"15","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\addDevice\\AddDevice.jsx":"16","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx":"17","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js":"18","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil1.js":"19","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js":"20","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js":"21","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx":"22","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js":"23","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js":"24","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx":"25","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx":"26","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx":"27","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx":"28","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js":"29","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js":"30","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx":"31","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"32","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx":"33","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js":"34","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"35","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js":"36","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js":"37","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js":"38","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"39","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js":"40","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\home\\Home.jsx":"41","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"42","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\AddYuding.jsx":"43","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx":"44","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx":"45","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx":"46","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx":"47","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx":"48","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx":"49","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx":"50","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil2.js":"51","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js":"52","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js":"53","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js":"54","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\current.js":"55","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js":"56","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx":"57","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx":"58","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx":"59","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx":"60","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js":"61","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx":"62","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"63","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx":"64","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js":"65","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil5.js":"66","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"67","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx":"68"},{"size":35125,"mtime":1657530192370,"results":"69","hashOfConfig":"70"},{"size":54576,"mtime":1657530922999,"results":"71","hashOfConfig":"70"},{"size":6362,"mtime":1657530881460,"results":"72","hashOfConfig":"70"},{"size":7424,"mtime":1655467295798,"results":"73","hashOfConfig":"70"},{"size":3737,"mtime":1655168677392,"results":"74","hashOfConfig":"70"},{"size":7357,"mtime":1655168677429,"results":"75","hashOfConfig":"70"},{"size":8762,"mtime":1655168677387,"results":"76","hashOfConfig":"70"},{"size":38409,"mtime":1655793172098,"results":"77","hashOfConfig":"70"},{"size":141874,"mtime":1655377730766,"results":"78","hashOfConfig":"70"},{"size":6007,"mtime":1655168677501,"results":"79","hashOfConfig":"70"},{"size":3459,"mtime":1655168677395,"results":"80","hashOfConfig":"70"},{"size":6453,"mtime":1657269085098,"results":"81","hashOfConfig":"70"},{"size":13023,"mtime":1655168677410,"results":"82","hashOfConfig":"70"},{"size":26779,"mtime":1656498255349,"results":"83","hashOfConfig":"70"},{"size":12616,"mtime":1655168677474,"results":"84","hashOfConfig":"70"},{"size":13651,"mtime":1655168677451,"results":"85","hashOfConfig":"70"},{"size":13496,"mtime":1655168677468,"results":"86","hashOfConfig":"70"},{"size":152,"mtime":1655168677794,"results":"87","hashOfConfig":"70"},{"size":3460,"mtime":1655168677527,"results":"88","hashOfConfig":"70"},{"size":2445,"mtime":1655168677803,"results":"89","hashOfConfig":"70"},{"size":18925,"mtime":1655168677533,"results":"90","hashOfConfig":"70"},{"size":14696,"mtime":1656047826772,"results":"91","hashOfConfig":"70"},{"size":4641,"mtime":1656498255379,"results":"92","hashOfConfig":"70"},{"size":91,"mtime":1655467295880,"results":"93","hashOfConfig":"70"},{"size":8490,"mtime":1656067629344,"results":"94","hashOfConfig":"70"},{"size":7652,"mtime":1655467295863,"results":"95","hashOfConfig":"70"},{"size":1243,"mtime":1657530192378,"results":"96","hashOfConfig":"70"},{"size":1909,"mtime":1657505508782,"results":"97","hashOfConfig":"70"},{"size":2103,"mtime":1656498255375,"results":"98","hashOfConfig":"70"},{"size":89,"mtime":1655467295873,"results":"99","hashOfConfig":"70"},{"size":1232,"mtime":1657530960234,"results":"100","hashOfConfig":"70"},{"size":12463,"mtime":1657272421270,"results":"101","hashOfConfig":"70"},{"size":4595,"mtime":1655727114179,"results":"102","hashOfConfig":"70"},{"size":532,"mtime":1655467295881,"results":"103","hashOfConfig":"70"},{"size":12293,"mtime":1657530192346,"results":"104","hashOfConfig":"70"},{"size":3044,"mtime":1655168677819,"results":"105","hashOfConfig":"70"},{"size":3126,"mtime":1655168677530,"results":"106","hashOfConfig":"70"},{"size":80,"mtime":1657530192381,"results":"107","hashOfConfig":"70"},{"size":846,"mtime":1655168677772,"results":"108","hashOfConfig":"70"},{"size":356,"mtime":1655467295857,"results":"109","hashOfConfig":"70"},{"size":6412,"mtime":1657530192351,"results":"110","hashOfConfig":"70"},{"size":5178,"mtime":1655168677434,"results":"111","hashOfConfig":"70"},{"size":12945,"mtime":1655467295802,"results":"112","hashOfConfig":"70"},{"size":41509,"mtime":1655723373489,"results":"113","hashOfConfig":"70"},{"size":39743,"mtime":1655168677418,"results":"114","hashOfConfig":"70"},{"size":7651,"mtime":1655168677499,"results":"115","hashOfConfig":"70"},{"size":2615,"mtime":1655168677801,"results":"116","hashOfConfig":"70"},{"size":16452,"mtime":1655168677407,"results":"117","hashOfConfig":"70"},{"size":39382,"mtime":1656498255353,"results":"118","hashOfConfig":"70"},{"size":10219,"mtime":1655168677467,"results":"119","hashOfConfig":"70"},{"size":2667,"mtime":1655168677528,"results":"120","hashOfConfig":"70"},{"size":343,"mtime":1655168677793,"results":"121","hashOfConfig":"70"},{"size":1041,"mtime":1655168677775,"results":"122","hashOfConfig":"70"},{"size":249,"mtime":1655467295885,"results":"123","hashOfConfig":"70"},{"size":1150,"mtime":1655427981745,"results":"124","hashOfConfig":"70"},{"size":358,"mtime":1655467295910,"results":"125","hashOfConfig":"70"},{"size":5382,"mtime":1657265484940,"results":"126","hashOfConfig":"70"},{"size":8118,"mtime":1657530192355,"results":"127","hashOfConfig":"70"},{"size":13008,"mtime":1655467295861,"results":"128","hashOfConfig":"70"},{"size":5037,"mtime":1657530192372,"results":"129","hashOfConfig":"70"},{"size":71,"mtime":1655257026122,"results":"130","hashOfConfig":"70"},{"size":8152,"mtime":1656067360425,"results":"131","hashOfConfig":"70"},{"size":15336,"mtime":1656643617950,"results":"132","hashOfConfig":"70"},{"size":1365,"mtime":1655880805276,"results":"133","hashOfConfig":"70"},{"size":4449,"mtime":1655168677816,"results":"134","hashOfConfig":"70"},{"size":3658,"mtime":1655168677531,"results":"135","hashOfConfig":"70"},{"size":8196,"mtime":1655168677810,"results":"136","hashOfConfig":"70"},{"size":1232,"mtime":1657530988475,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},"1wlgw0n",{"filePath":"142","messages":"143","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"141"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"141"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"141"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"141"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"141"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"141"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"176","messages":"177","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"141"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"209","messages":"210","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"141"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"232","messages":"233","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"234","messages":"235","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"236","messages":"237","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"282","messages":"283","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx",["284","285","286","287","288","289","290"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Heard from \"../../utils/heard/Heard\";\r\nimport { mTop, px, pX, win, timerFun } from \"../../utils/px\";\r\nimport HardAndPetsUI from \"./HardAndPetsUI\";\r\nimport HardWareTypeUI from \"./hardWareTypeUI\";\r\nimport TemperaturePage from \"../../pages/temperaturePage\";\r\nimport {\r\n  setHardwareList,\r\n  selectHardwareModalShowFun,\r\n  setIsHaveUsbDeviceFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n  setMellaDeviceIdFun,\r\n  setMellaMeasureNumFun,\r\n  setBiggieConnectStatusFun,\r\n  setBiggieBodyFatFun,\r\n  setBiggieBodyWeightFun,\r\n  setBiggieUnitFun,\r\n  setBiggieSameWeightCountFun,\r\n  setRulerConnectStatusFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConfirmCountFun,\r\n  setReceiveBroadcastHardwareInfoFun,\r\n} from \"../../store/actions\";\r\nimport \"./mainbody.less\";\r\nimport { message } from \"antd\";\r\nimport electronStore from \"../../utils/electronStore\";\r\nimport AddDevice from \"./AddDevice\";\r\nimport BiggiePage from \"../../pages/biggiePage\";\r\nimport ScanPage from \"../../pages/scanPage\";\r\nimport { compareObject } from \"../../utils/current\";\r\nimport { compareArray } from \"../../utils/current\";\r\nimport AllPets from \"../../pages/allPetsPage\";\r\nimport ScheduledPetPage from \"../../pages/scheduledPetsPage\";\r\nimport AddScheduledPet from \"../../pages/addScheduledPet\";\r\nimport ClininalStudy from \"../../pages/clinicalStudyPage\";\r\nimport CombineScales from \"../../pages/combineScales\";\r\nimport { Modal } from \"antd\";\r\n\r\nlet ipcRenderer = window.require(\"electron\").ipcRenderer;\r\nlet isMeasure = false; //是否正在测量,用于判断是否需要发送指定指令给USB,查看硬件是否连接\r\nlet initTime = 0; //初始化时间,用来计算底座没有回应温度计的时间差,如果时间差大于6秒代表断开连接\r\nlet num07 = 0; //接收到07命令行的次数,次数大于3跳出弹框\r\nlet firstEar = true; //为true代表一组数据测量完成,下组测量数据\r\nlet is97Time = null; //为了防抖，因为有时候断开连接和连接成功总是连续的跳出来，展示就会一直闪烁，因此引入时间差大于800ms才展示\r\nlet exchangeNum = 0; //奇数发送查询探头id指令，偶数发送询问配置\r\n\r\n//用于预测的东西\r\nlet clinicalYuce = [],\r\n  clinicalIndex = 0;\r\n\r\nlet storage = window.localStorage;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    //body部分窗口高度\r\n    bodyHeight: 0,\r\n    //本地保存的硬件类型数组,不包括Add这个类型\r\n    devicesTypeList: [],\r\n    //展示硬件类型的数组\r\n    showHardWareTypeList: [],\r\n    //是否有USB设备\r\n    isHaveUsbDevice: true,\r\n    //mella温度计测量状态\r\n    mellaMeasureStatus: \"disconnected\", //connected,disconnected,isMeasuring,complete\r\n\r\n    //点击菜单的序号\r\n    clickMenuIndex: \"1\",\r\n    err07Visible: false,\r\n  };\r\n  componentDidMount() {\r\n    ipcRenderer.send(\"big\", win());\r\n    timerFun();\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n    //获取窗口高度\r\n    this.resize();\r\n    //react监听屏幕窗口改变\r\n    window.addEventListener(\"resize\", this.resize);\r\n\r\n    //获取设备类型\r\n    this.getDevicesType();\r\n\r\n    //检测USB设备发来的信息\r\n    ipcRenderer.on(\"sned\", this._send);\r\n    //检测是否有USB设备\r\n    ipcRenderer.on(\"noUSB\", this._noUSB);\r\n    //定时查看mella温度计是否与底座连接或断开\r\n    this._whether_to_connect_to_mella();\r\n\r\n    //获取本地设置\r\n    this.getLocalSetting();\r\n  }\r\n  componentWillUnmount() {\r\n    //组件销毁，取消监听\r\n    window.removeEventListener(\"resize\", this.resize);\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n    ipcRenderer.removeListener(\"sned\", this._send);\r\n    ipcRenderer.removeListener(\"noUSB\", this._noUSB);\r\n    this.detectTimer && clearInterval(this.detectTimer);\r\n    this.rulerTimer && clearTimeout(this.rulerTimer);\r\n  }\r\n  //检测到props里的hardwareList更新\r\n  UNSAFE_componentWillReceiveProps(prevProps) {\r\n    //对比props里的hardwareList和state里的hardwareList是否相同\r\n\r\n    if (!compareArray(prevProps.hardwareList, this.state.devicesTypeList)) {\r\n      let showHardWareTypeList = [].concat(prevProps.hardwareList);\r\n      showHardWareTypeList.push({\r\n        type: \"add\",\r\n        devices: [],\r\n      });\r\n      this.setState({\r\n        devicesTypeList: prevProps.hardwareList,\r\n        showHardWareTypeList,\r\n      });\r\n    }\r\n    if (!compareObject(prevProps.menuNum, this.state.clickMenuIndex)) {\r\n      this.setState({\r\n        clickMenuIndex: prevProps.menuNum,\r\n      });\r\n    }\r\n  }\r\n\r\n  changeFenBianLv = (e) => {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    // ipcRenderer.send('small')\r\n    ipcRenderer.send(\"big\", win());\r\n    this.setState({});\r\n  };\r\n  //获取本地设置\r\n  getLocalSetting = () => {\r\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\r\n    if (!hardSet) {\r\n      let settings = {\r\n        isHua: true,\r\n        is15: true,\r\n        self_tarting: false, //自启动\r\n        isBacklight: true,\r\n        isBeep: true,\r\n        backlightTimer: { length: 140, number: \"45\" },\r\n        autoOff: { length: 0, number: \"30\" },\r\n      };\r\n      electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\r\n    }\r\n  };\r\n  //检测USB设备发来的信息\r\n  _send = (e, data) => {\r\n    // console.log('检测USB设备发来的信息', data)\r\n    //data就是测量的数据，是十进制的数字\r\n    this.command(data)();\r\n  };\r\n  //监听是否有USB设备,true代表没有USB设备，false代表有USB设备\r\n  _noUSB = (e, data) => {\r\n    if (data === false) {\r\n      message.destroy();\r\n    } else {\r\n      if (this.state.isHaveUsbDevice) {\r\n        message.destroy();\r\n        message.error(\"The base is not detected. Please insert the base\", 0);\r\n      }\r\n    }\r\n    if (data === this.props.isHaveUsbDevice) {\r\n      this.props.setIsHaveUsbDeviceFun(!data);\r\n    }\r\n    if (data === this.state.isHaveUsbDevice) {\r\n      this.setState({\r\n        isHaveUsbDevice: !data,\r\n      });\r\n    }\r\n  };\r\n  //监听mella温度计是否与底座连接或断开\r\n  _whether_to_connect_to_mella = () => {\r\n    console.log(\"监听mella温度计是否与底座连接或断开\");\r\n    message.destroy();\r\n    this.detectTimer && clearInterval(this.detectTimer);\r\n    //2秒检测一次\r\n    this.detectTimer = setInterval(() => {\r\n      exchangeNum++;\r\n      //如果正在测量或者没有USB设备，不检测\r\n      if (isMeasure || !this.state.isHaveUsbDevice) {\r\n        return;\r\n      }\r\n      if (exchangeNum % 2 === 0) {\r\n        //让底座发送查询温度计信息指令\r\n        ipcRenderer.send(\"usbdata\", { command: \"07\", arr: [\"5A\"] });\r\n      } else {\r\n        ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\r\n      }\r\n\r\n      //如果底座没有回应，则计算时间差,时间差大于5秒，则没与温度计连接\r\n      if (new Date() - initTime > 6000) {\r\n        this._disconnect_to_mella();\r\n      } else {\r\n      }\r\n    }, 2000);\r\n  };\r\n  //底座与温度计断开连接\r\n  _disconnect_to_mella = () => {\r\n    let { setMellaConnectStatusFun, mellaConnectStatus, setMellaDeviceIdFun } =\r\n      this.props;\r\n    if (mellaConnectStatus !== \"disconnected\") {\r\n      setMellaConnectStatusFun(\"disconnected\");\r\n    }\r\n    setMellaDeviceIdFun(\"\");\r\n  };\r\n  //底座与温度计连接\r\n  _connect_to_mella = () => {\r\n    let { setMellaConnectStatusFun, mellaConnectStatus } = this.props;\r\n    if (mellaConnectStatus !== \"connected\") {\r\n      setMellaConnectStatusFun(\"connected\");\r\n    }\r\n  };\r\n\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  command = (newArr) => {\r\n    let dataArr1 = newArr.map((item) => {\r\n      if (item.toString(16).length < 2) {\r\n        return \"0\" + item.toString(16);\r\n      } else {\r\n        return item.toString(16);\r\n      }\r\n    });\r\n    //除了255,其他都是温度计的数据\r\n    let {\r\n      setMellaConnectStatusFun,\r\n      setMellaMeasureValueFun,\r\n      setMellaPredictValueFun,\r\n      setMellaMeasurePartFun,\r\n      mellaMeasurePart,\r\n      mellaConnectStatus,\r\n      setBiggieBodyFatFun,\r\n      setBiggieBodyWeightFun,\r\n      setBiggieConnectStatusFun,\r\n      setBiggieUnitFun,\r\n      setBiggieSameWeightCountFun,\r\n    } = this.props;\r\n    let {\r\n      biggieConnectStatus,\r\n      biggieBodyFat,\r\n      biggieBodyWeight,\r\n      biggieUnit,\r\n      biggieSameWeightCount,\r\n    } = this.props.hardwareReduce;\r\n\r\n    const instruction = [\r\n      209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 194, 7, 99, 255, 182,\r\n    ];\r\n\r\n    if (newArr[2] !== 7 && newArr[2] !== 255 && newArr[2] !== 182) {\r\n      initTime = new Date();\r\n      num07 = 0;\r\n      if (mellaConnectStatus === \"disconnected\") {\r\n        this._connect_to_mella();\r\n      }\r\n    } else {\r\n      num07++;\r\n    }\r\n\r\n    const commandArr = {\r\n      209: () => {\r\n        //腋温\r\n        //第一次测量去获取探头ID\r\n        if (firstEar) {\r\n          firstEar = false;\r\n          console.log(\"去获取探头id\");\r\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\r\n          //重新测量,清空预测值\r\n          clinicalYuce = [];\r\n          clinicalIndex = 0;\r\n        }\r\n        let temp1 = parseFloat(`${dataArr1[3]}.${dataArr1[4]}`);\r\n        let temp0 = parseFloat(`${dataArr1[5]}.${dataArr1[6]}`);\r\n        let Temp = temp0;\r\n        if (\r\n          Temp === 24.7 ||\r\n          Temp === 0 ||\r\n          Temp === null ||\r\n          Temp === undefined\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        let dataS = {\r\n          sample: clinicalIndex++,\r\n          data0: temp0,\r\n          data1: temp1,\r\n        };\r\n        clinicalYuce.push(dataS);\r\n        if (clinicalYuce.length >= 30) {\r\n          setMellaPredictValueFun(clinicalYuce);\r\n        }\r\n        setMellaMeasureValueFun(Temp);\r\n        if (mellaConnectStatus !== \"isMeasuring\") {\r\n          setMellaConnectStatusFun(\"isMeasuring\");\r\n        }\r\n\r\n        if (mellaMeasurePart !== \"腋温\" || mellaMeasurePart !== \"肛温\") {\r\n          setMellaMeasurePartFun(\"腋温\");\r\n        }\r\n        this.props.setMellaMeasureNumFun(this.props.mellaMeasureNum + 1);\r\n      },\r\n      208: () => {\r\n        //耳温\r\n\r\n        if (firstEar) {\r\n          firstEar = false;\r\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\r\n          //重新测量,清空预测值\r\n          clinicalYuce = [];\r\n          clinicalIndex = 0;\r\n        }\r\n        //现在探头0可能不存在，所以把探头0改为探头1\r\n        let temp0 = parseFloat(`${dataArr1[7]}.${dataArr1[8]}`);\r\n        let Temp = temp0;\r\n        setMellaMeasureValueFun(Temp);\r\n        if (mellaConnectStatus !== \"isMeasuring\") {\r\n          setMellaConnectStatusFun(\"isMeasuring\");\r\n        }\r\n\r\n        if (mellaMeasurePart !== \"耳温\") {\r\n          setMellaMeasurePartFun(\"耳温\");\r\n        }\r\n      },\r\n      193: () => {\r\n        //指令结束\\自动结束后\\温度计收到预测数据后温度计返回值,结束后可能还会粘一组测量中的数据\r\n        //为了清除黏贴的数据，使用定时器\r\n        this.time193 && clearTimeout(this.time193);\r\n        this.time193 = setTimeout(() => {\r\n          firstEar = true;\r\n          if (mellaConnectStatus !== \"complete\") {\r\n            setMellaConnectStatusFun(\"complete\");\r\n          }\r\n\r\n          let { units } = this.state;\r\n          let Temp = this.props.mellaMeasureValue;\r\n          let temp =\r\n            units === \"℉\"\r\n              ? parseInt((Temp * 1.8 + 32) * 10) / 10\r\n              : Temp.toFixed(1);\r\n          if (this.props.selectHardwareType === \"mellaPro\") {\r\n            ipcRenderer.send(\"keyboardWriting\", temp);\r\n          }\r\n          this.time193 && clearTimeout(this.time193);\r\n        }, 500);\r\n      },\r\n      194: () => {\r\n        //硬件收到机器学习结果并停止测量，\r\n        this.time193 && clearTimeout(this.time193);\r\n        console.log(\"---机器学习\", newArr);\r\n        if (mellaConnectStatus !== \"complete\") {\r\n          setMellaConnectStatusFun(\"complete\");\r\n        }\r\n        const timer = setTimeout(() => {\r\n          setMellaMeasureValueFun(this.props.mellaPredictReturnValue);\r\n\r\n          firstEar = true;\r\n          if (mellaConnectStatus !== \"complete\") {\r\n            setMellaConnectStatusFun(\"complete\");\r\n          }\r\n\r\n          let { units } = this.state;\r\n          let Temp = this.props.mellaPredictReturnValue;\r\n          let temp =\r\n            units === \"℉\"\r\n              ? parseInt((Temp * 1.8 + 32) * 10) / 10\r\n              : Temp.toFixed(1);\r\n          if (this.props.selectHardwareType === \"mellaPro\") {\r\n            ipcRenderer.send(\"keyboardWriting\", temp);\r\n          }\r\n          clearTimeout(timer);\r\n        }, 80);\r\n        clinicalYuce = [];\r\n        clinicalIndex = 0;\r\n      },\r\n      192: () => {\r\n        //温度计收到40开始数据后返回的指令\r\n        switch (newArr[3]) {\r\n          case 90:\r\n            console.log(\"有探头，开始测量的返回指令·\");\r\n            break;\r\n          case 11:\r\n            console.log(\"没有探头，开始测量的返回值\");\r\n            break;\r\n        }\r\n      },\r\n      129: () => {\r\n        //返回硬件版本号\r\n        console.log(`返回的版本号为${newArr[3]}`);\r\n      },\r\n      135: () => {\r\n        //硬件的一些基本信息\r\n        /**\r\n         * ______________新版、旧版没法控制温度计__________________\r\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\r\n         * newArr[7] 无操作关机时间\r\n         * newArr[8] 背光时间\r\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\r\n         * newArr[10] 测量单位    01代表℃，00代表℉\r\n         */\r\n\r\n        let hardSet = electronStore.get(\r\n          `${storage.userId}-hardwareConfiguration`\r\n        );\r\n        if (!hardSet) {\r\n          hardSet = {\r\n            isHua: true,\r\n            is15: true,\r\n            self_tarting: false, //自启动\r\n            isBacklight: true,\r\n            isBeep: true,\r\n            backlightTimer: { length: 140, number: \"45\" },\r\n            autoOff: { length: 0, number: \"30\" },\r\n          };\r\n        }\r\n\r\n        let beep = hardSet.isBeep ? \"11\" : \"00\";\r\n        let unit = hardSet.isHua ? \"00\" : \"01\";\r\n\r\n        if (\r\n          dataArr1[7] === hardSet.autoOff.number &&\r\n          dataArr1[8] === hardSet.backlightTimer.number &&\r\n          dataArr1[9] === beep &&\r\n          dataArr1[10] === unit\r\n        ) {\r\n        } else {\r\n          console.log(\"不相同，去发送命令\");\r\n          let setArr = [\r\n            \"03\",\r\n            \"ed\",\r\n            \"07\",\r\n            \"dd\",\r\n            hardSet.autoOff.number,\r\n            hardSet.isBacklight ? hardSet.backlightTimer.number : \"00\",\r\n            hardSet.isBeep ? \"11\" : \"00\",\r\n            hardSet.isHua ? \"00\" : \"01\",\r\n          ];\r\n          ipcRenderer.send(\"usbdata\", { command: \"21\", arr: setArr });\r\n        }\r\n      },\r\n      238: () => {\r\n        //探头松动\r\n        console.log(\"探头松动\");\r\n        message.error(\r\n          \"The probe is loose, please re-install and measure again\",\r\n          5\r\n        );\r\n      },\r\n\r\n      98: () => {\r\n        //蓝牙连接断开\r\n        console.log(\r\n          \"断开连接---断开连接---断开连接---断开连接---断开连接---断开连接\"\r\n        );\r\n        firstEar = true;\r\n        // console.log(new Date() - is97Time);\r\n        if (new Date() - is97Time < 1300) {\r\n          return;\r\n        }\r\n        this._disconnect_to_mella();\r\n      },\r\n      97: () => {\r\n        //蓝牙连接\r\n        console.log(\r\n          \"连接成功---连接成功---连接成功---连接成功---连接成功---连接成功\"\r\n        );\r\n        this.getIdTimer && clearTimeout(this.getIdTimer);\r\n        this.getIdTimer = setTimeout(() => {\r\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\r\n          this.getIdTimer && clearTimeout(this.getIdTimer);\r\n        }, 50);\r\n\r\n\r\n        is97Time = new Date();\r\n        this._connect_to_mella();\r\n      },\r\n      177: () => {\r\n        //探头id\r\n        let dataArr1 = newArr.map((item) => {\r\n          if (item.toString(16).length < 2) {\r\n            return \"0\" + item.toString(16);\r\n          } else {\r\n            return item.toString(16);\r\n          }\r\n        });\r\n\r\n        let id = \"\";\r\n        for (let i = 3; i < dataArr1.length - 2; i++) {\r\n          id += dataArr1[i];\r\n        }\r\n        // console.log(id, dataArr1[7]);\r\n        setMellaDeviceIdFun(id);\r\n        // this.setState({\r\n        //   probeID: id,\r\n        //   petVitalTypeId: dataArr1[7]\r\n        // })\r\n        if (dataArr1[7] === \"01\") {\r\n          if (mellaMeasurePart !== \"腋温\") {\r\n            setMellaMeasurePartFun(\"腋温\");\r\n          }\r\n        } else if (dataArr1[7] === \"02\") {\r\n          if (mellaMeasurePart !== \"肛温\") {\r\n            setMellaMeasurePartFun(\"肛温\");\r\n          }\r\n        } else if (dataArr1[7] === \"03\") {\r\n          if (mellaMeasurePart !== \"耳温\") {\r\n            setMellaMeasurePartFun(\"耳温\");\r\n          }\r\n        }\r\n      },\r\n      7: () => {\r\n        //发什么收什么，需要去重新插拔底座\r\n        console.log(\"重新插拔底座\");\r\n        if (num07 === 3 && this.state.err07Visible === false) {\r\n          this.setState({\r\n            err07Visible: true,\r\n          });\r\n        }\r\n      },\r\n      // 255: () => {\r\n\r\n      // }\r\n      255: () => {\r\n        let length = newArr.length;\r\n        let frameLength = newArr[1]; //帧长\r\n        let itemLength = newArr[3] + 1; //数据位的长度   13\r\n        let dataIndex = 0;\r\n        let bluName = \"\";\r\n        let bluData = [];\r\n\r\n        while (itemLength < length && itemLength + 3 <= frameLength) {\r\n          let itemData = [];\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5]);\r\n          }\r\n          // console.log('--剪切的数据---', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              let str = \"\";\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                let item = parseInt(itemData[i], 16);\r\n                str += String.fromCharCode(item);\r\n              }\r\n              bluName = str;\r\n              // console.log('--蓝牙名称:', bluName);\r\n\r\n              break;\r\n\r\n            case 255:\r\n              bluData = itemData;\r\n              break;\r\n            case 7:\r\n              console.log(\"---UUID\");\r\n              break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              break;\r\n\r\n            case 3:\r\n              // console.log('----尺子的,不知道什么用');\r\n              break;\r\n\r\n            default:\r\n              console.log(\"直接跳出循环\");\r\n              return;\r\n          }\r\n          dataIndex = itemLength;\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\r\n        }\r\n        // console.log('硬件名称', bluName, '-----硬件数据', bluData);\r\n        let { setReceiveBroadcastHardwareInfoFun, hardwareReduce } = this.props;\r\n\r\n        let { receiveBroadcastHardwareInfo } = hardwareReduce;\r\n\r\n        if (bluName.indexOf(\"C19\") !== -1 && bluData.length > 10) {\r\n          let json = {\r\n            deviceType: \"biggie\",\r\n            macId: \"00:00:00:00:00:00\",\r\n            name: bluName,\r\n          };\r\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\r\n            setReceiveBroadcastHardwareInfoFun(json);\r\n          }\r\n\r\n          let weight = `0x${bluData[10]}${bluData[11]}`;\r\n          let impedance = `0x${bluData[12]}${bluData[13]}`;\r\n          let sendWeight = null;\r\n          //C19发送的体重值单位只是KG\r\n          try {\r\n            weight = parseInt(weight) / 100;\r\n            if (impedance) {\r\n              impedance = parseInt(impedance);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n          if (weight === biggieBodyWeight) {\r\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\r\n          } else {\r\n            setBiggieSameWeightCountFun(0);\r\n            setBiggieBodyWeightFun(weight);\r\n          }\r\n          if (impedance) {\r\n            setBiggieBodyFatFun(impedance);\r\n          }\r\n          if (biggieConnectStatus !== \"isMeasuring\") {\r\n            setBiggieConnectStatusFun(\"isMeasuring\");\r\n          }\r\n          if (biggieUnit !== \"kg\") {\r\n            setBiggieUnitFun(\"kg\");\r\n          }\r\n        } else if (bluName.indexOf(\"Mella Measure\") !== -1) {\r\n          let {\r\n            hardwareReduce,\r\n            setRulerConfirmCountFun,\r\n            setRulerConnectStatusFun,\r\n            setRulerMeasureValueFun,\r\n            setRulerUnitFun,\r\n          } = this.props;\r\n          let {\r\n            rulerConnectStatus,\r\n            rulerMeasureValue,\r\n            rulerUnit,\r\n            rulerConfirmCount,\r\n            receiveBroadcastHardwareInfo,\r\n          } = hardwareReduce;\r\n          // console.log('结束循环蓝牙名称', bluData)\r\n          let confirmBtn = bluData[8]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\r\n          let rulerUnitNum = parseInt(bluData[11], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\r\n          let newVal = null; //为测量数值，和单位匹配对应\r\n          const ITEMINDEX = 6;\r\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\r\n          let mac = bluData[1];\r\n          for (let i = 2; i <= 6; i++) {\r\n            mac += `:${bluData[i]}`;\r\n          }\r\n          let json = {\r\n            deviceType: \"tape\",\r\n            macId: mac,\r\n            name: bluName,\r\n          };\r\n\r\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\r\n            setReceiveBroadcastHardwareInfoFun(json);\r\n          }\r\n\r\n          if (units !== rulerUnit) {\r\n            setRulerUnitFun(units);\r\n          }\r\n          if (rulerConnectStatus !== \"isMeasuring\") {\r\n            setRulerConnectStatusFun(\"isMeasuring\");\r\n          }\r\n          this.rulerTimer && clearTimeout(this.rulerTimer);\r\n          this.rulerTimer = setTimeout(() => {\r\n            setRulerConnectStatusFun(\"disconnected\");\r\n          }, 5000);\r\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\r\n          let num1 = bluData[9];\r\n          let num2 = bluData[10];\r\n          let num = getVal(num1, num2);\r\n          try {\r\n            newVal = parseFloat(num);\r\n            if (rulerUnitNum === 17) {\r\n              newVal = newVal.toFixed(2);\r\n            } else {\r\n              newVal = newVal.toFixed(1);\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n          }\r\n\r\n          function getVal(shi, xiaoshuo) {\r\n            let num1 = parseInt(shi, 16);\r\n            let num2 = parseInt(xiaoshuo, 16);\r\n            return `${num1}.${num2}`;\r\n          }\r\n          if (newVal !== rulerMeasureValue) {\r\n            setRulerMeasureValueFun(newVal);\r\n          }\r\n\r\n          //点击了确认按钮\r\n\r\n          if (\r\n            confirmBtn[1] === \"2\" &&\r\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\r\n            confirmBtn[0] !== null\r\n          ) {\r\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\r\n          }\r\n        } else if (bluName.indexOf(\"Biggie\") !== -1 && bluData.length > 10) {\r\n          function getVal(shi) {\r\n            if (`${shi}`.length < 2) {\r\n              return `0${shi}`;\r\n            }\r\n            return `${shi}`;\r\n          }\r\n\r\n          let newArr = bluData;\r\n\r\n          let mac = bluData[1];\r\n          for (let i = 2; i <= 6; i++) {\r\n            mac += `:${bluData[i]}`;\r\n          }\r\n\r\n          let json = {\r\n            deviceType: \"biggie\",\r\n            macId: mac,\r\n            name: bluName,\r\n          };\r\n\r\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\r\n            setReceiveBroadcastHardwareInfoFun(json);\r\n          }\r\n          //定义体重的控制字符\r\n          let weightControl = newArr[8];\r\n          //定义体重的值\r\n          let weight = `${getVal(newArr[9].toString(16))}${getVal(\r\n            newArr[10].toString(16)\r\n          )}`;\r\n          weight = parseInt(weight, 16);\r\n          //定义体脂值\r\n          let impedance = `${getVal(newArr[12].toString(16))}${getVal(\r\n            newArr[13].toString(16)\r\n          )}`;\r\n          impedance = parseInt(impedance, 16);\r\n          let arr11 = getVal(newArr[11].toString(16));\r\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\r\n\r\n          let weightUnits = arr11[1] === \"1\" ? \"lb\" : \"kg\";\r\n          let biggieStatus = \"isMeasuring\";\r\n          switch (weightControl) {\r\n            case 1:\r\n              biggieStatus = \"connected\";\r\n              break;\r\n            case 2:\r\n              biggieStatus = \"isMeasuring\";\r\n              break;\r\n            case 3:\r\n              biggieStatus = \"complete\";\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          if (biggieStatus !== biggieConnectStatus) {\r\n            setBiggieConnectStatusFun(biggieStatus);\r\n          }\r\n          if (weightUnits !== biggieUnit) {\r\n            setBiggieUnitFun(weightUnits);\r\n          }\r\n          if (weight !== biggieBodyWeight) {\r\n            setBiggieBodyWeightFun(weight);\r\n            setBiggieSameWeightCountFun(0);\r\n          } else {\r\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\r\n          }\r\n          if (impedance !== biggieBodyFat) {\r\n            setBiggieBodyFatFun(impedance);\r\n          }\r\n        }\r\n      },\r\n      182: () => {\r\n        console.log(\"打开了底座通信\");\r\n      },\r\n    };\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]];\r\n    } else {\r\n      return () => {\r\n        console.log(\"没有控制命令\", commandArr);\r\n      };\r\n    }\r\n  };\r\n\r\n  testCheck = (arr) => {\r\n    if (arr.length < 7) {\r\n      return false;\r\n    }\r\n    let i = 7;\r\n    let checkFloag = arr[i];\r\n\r\n    for (i = 8; i < arr.length - 2; i++) {\r\n      checkFloag = checkFloag ^ arr[i];\r\n    }\r\n    return checkFloag;\r\n  };\r\n  getMac = (arr) => {\r\n    // console.log(arr);\r\n    let str = arr[1].toString(16);\r\n    if (str.length === 1) {\r\n      str = \"0\" + str;\r\n    }\r\n    for (let i = 2; i < 7; i++) {\r\n      let item = arr[i].toString(16);\r\n      if (item.length === 1) {\r\n        item = \"0\" + item;\r\n      }\r\n      str += `:${item}`;\r\n      // }\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n  //监听屏幕窗口改变\r\n  resize = () => {\r\n    let { offsetWidth, offsetHeight } = this.mainbody;\r\n    // console.log('resize', this.mainbody, { offsetWidth, offsetHeight });\r\n    if (offsetHeight !== this.state.bodyHeight) {\r\n      this.setState({\r\n        bodyHeight: offsetHeight - px(50),\r\n      });\r\n    }\r\n  };\r\n  //获取设备类型\r\n  getDevicesType = () => {\r\n    // let devicesTypeList = [\r\n    //   {\r\n    //     type: 'mellaPro',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'mellaPro',\r\n    //         mac: '',\r\n    //         deviceType: 'mellaPro',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'biggie',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'biggie',\r\n    //         mac: '',\r\n    //         deviceType: 'biggie',\r\n    //         examRoom: '',\r\n    //       },\r\n    //       {\r\n    //         name: 'biggie002',\r\n    //         mac: '1253',\r\n    //         deviceType: 'biggie',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'otterEQ',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'otterEQ',\r\n    //         mac: '',\r\n    //         deviceType: 'otterEQ',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n\r\n    //   {\r\n    //     type: 'rfid',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'rfid',\r\n    //         mac: '',\r\n    //         deviceType: 'rfid',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'tape',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'tape',\r\n    //         mac: '',\r\n    //         deviceType: 'tape',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   },\r\n    //   {\r\n    //     type: 'maeBowl',\r\n    //     devices: [\r\n    //       {\r\n    //         name: 'maeBowl',\r\n    //         mac: '',\r\n    //         deviceType: 'maeBowl',\r\n    //         examRoom: '',\r\n    //       }\r\n    //     ]\r\n    //   }\r\n    // ]\r\n\r\n    let devicesTypeList =\r\n      electronStore.get(\r\n        `${storage.lastOrganization}-${storage.userId}-devicesTypeList`\r\n      ) || [];\r\n    // console.log(\"获取的设22222备列表\", devicesTypeList);\r\n    if (devicesTypeList.length === 0) {\r\n      devicesTypeList.push({\r\n        type: \"mellaPro\",\r\n        devices: [\r\n          {\r\n            name: \"mellaPro\",\r\n            mac: \"\",\r\n            deviceType: \"mellaPro\",\r\n            examRoom: \"\",\r\n          },\r\n        ],\r\n      });\r\n      devicesTypeList.push({\r\n        type: \"biggie\",\r\n        devices: [\r\n          {\r\n            name: \"biggie\",\r\n            mac: \"\",\r\n            deviceType: \"biggie\",\r\n            examRoom: \"\",\r\n          },\r\n          {\r\n            name: \"biggie002\",\r\n            mac: \"1253\",\r\n            deviceType: \"biggie\",\r\n            examRoom: \"\",\r\n          },\r\n        ],\r\n      });\r\n      devicesTypeList.push({\r\n        type: \"tape\",\r\n        devices: [\r\n          {\r\n            name: \"tape\",\r\n            mac: \"45264\",\r\n            deviceType: \"tape\",\r\n            examRoom: \"\",\r\n          },\r\n        ],\r\n      });\r\n    }\r\n\r\n    let hardList = [].concat(devicesTypeList);\r\n    this.props.setHardwareList(hardList);\r\n    let showHardWareTypeList = [].concat(devicesTypeList);\r\n    showHardWareTypeList.push({\r\n      type: \"add\",\r\n      devices: [],\r\n    });\r\n\r\n    this.setState({\r\n      devicesTypeList,\r\n      showHardWareTypeList,\r\n    });\r\n  };\r\n  body = () => {\r\n    let { selectHardwareType } = this.props;\r\n\r\n    let { bodyHeight, clickMenuIndex } = this.state;\r\n    let measurePage = null;\r\n    switch (clickMenuIndex) {\r\n      case \"1\":\r\n        if (electronStore.get(`${storage.userId}-isClical`)) {\r\n          return (\r\n            <>\r\n              <HardAndPetsUI bodyHeight={bodyHeight} />\r\n              <ClininalStudy bodyHeight={bodyHeight} />\r\n            </>\r\n          );\r\n        } else {\r\n          switch (selectHardwareType) {\r\n            case \"mellaPro\":\r\n              measurePage = <TemperaturePage />;\r\n\r\n              break;\r\n            case \"biggie\":\r\n              measurePage = <BiggiePage />;\r\n              break;\r\n\r\n            case \"tape\":\r\n              measurePage = <ScanPage />;\r\n              break;\r\n\r\n            default:\r\n              break;\r\n          }\r\n          if (selectHardwareType === \"add\") {\r\n            return <AddDevice bodyHeight={bodyHeight} />;\r\n          } else {\r\n            return (\r\n              <>\r\n                <HardAndPetsUI bodyHeight={bodyHeight} />\r\n                {measurePage}\r\n              </>\r\n            );\r\n          }\r\n        }\r\n\r\n        break;\r\n\r\n      case \"2\":\r\n        return <AllPets bodyHeight={bodyHeight} />;\r\n      case \"CombineScales\":\r\n        return <CombineScales />;\r\n      case \"AddDevice\":\r\n        return <AddDevice bodyHeight={bodyHeight} />;\r\n      case \"3\":\r\n        return <ScheduledPetPage bodyHeight={bodyHeight} />;\r\n\r\n      case \"AddScheduledPet\":\r\n        return <AddScheduledPet bodyHeight={bodyHeight} />;\r\n      case \"6\":\r\n        return (\r\n          <>\r\n            <HardAndPetsUI bodyHeight={bodyHeight} />\r\n            <ClininalStudy bodyHeight={bodyHeight} />\r\n          </>\r\n        );\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { bodyHeight } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"flex\"\r\n        id=\"mainbody\"\r\n        ref={(val) => (this.mainbody = val)}\r\n        onClick={() => {\r\n          if (this.props.selectHardwareModalShowFun) {\r\n            this.props.selectHardwareModalShowFun(false);\r\n          }\r\n        }}\r\n      >\r\n        <Heard />\r\n        <div className=\"mainbody-body\">\r\n          <HardWareTypeUI\r\n            bodyHeight={bodyHeight}\r\n            devicesTypeList={this.state.showHardWareTypeList}\r\n          />\r\n          {this.body()}\r\n        </div>\r\n        <Modal\r\n          visible={this.state.err07Visible}\r\n          // visible={true}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          width={330}\r\n          closable={false}\r\n          footer={[]}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"vetPrifileModal\"\r\n        >\r\n          <div id=\"vetPrifileModal\">\r\n            <div className=\"title\">prompt</div>\r\n\r\n            <div className=\"text\">Please re-plug the base device</div>\r\n\r\n            <div\r\n              className=\"btn\"\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                marginBottom: \"5px\",\r\n              }}\r\n            >\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({\r\n                    err07Visible: false,\r\n                  });\r\n                  num07 = 0;\r\n                }}\r\n              >\r\n                OK\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({\r\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\r\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\r\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\r\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\r\n    mellaMeasurePart: state.hardwareReduce.mellaMeasurePart,\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    hardwareReduce: state.hardwareReduce,\r\n    hardwareList: state.hardwareReduce.hardwareList,\r\n    hardwareInfo: state.hardwareReduce.selectHardwareInfo,\r\n    menuNum: state.userReduce.menuNum,\r\n    mellaPredictReturnValue: state.hardwareReduce.mellaPredictReturnValue,\r\n  }),\r\n  {\r\n    setHardwareList,\r\n    selectHardwareModalShowFun,\r\n    setIsHaveUsbDeviceFun,\r\n\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n    setMellaDeviceIdFun,\r\n    setBiggieConnectStatusFun,\r\n    setBiggieBodyFatFun,\r\n    setBiggieBodyWeightFun,\r\n    setBiggieUnitFun,\r\n    setBiggieSameWeightCountFun,\r\n    setRulerConnectStatusFun,\r\n    setRulerMeasureValueFun,\r\n    setRulerUnitFun,\r\n    setRulerConfirmCountFun,\r\n    setReceiveBroadcastHardwareInfoFun,\r\n    setMellaMeasureNumFun,\r\n  }\r\n)(App);\r\n",["291","292"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["330","331","332","333","334","335","336"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Image, Layout, Button } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport PressButton_Pro from \"./../../../assets/img/PressButton_Pro.png\";\r\nimport AxillaryPlacement from \"./../../../assets/img/AxillaryPlacement.png\"; //腋温底部图片\r\nimport EarPlacement from \"./../../../assets/img/EarPlacement.png\"; //耳温底部图片\r\nimport RectalPlacement from \"./../../../assets/img/RectalPlacement.png\"; //肛温底部图片\r\nimport Standing_Dog from \"./../../../assets/img/Standing_Dog.png\";\r\nimport Standing_Cat from \"./../../../assets/img/Standing_Cat.png\";\r\nimport Sitting_Dog from \"./../../../assets/img/Sitting_Dog.png\";\r\nimport Sitting_Cat from \"./../../../assets/img/Sitting_Cat.png\";\r\nimport Laying_Dog from \"./../../../assets/img/Laying_Dog.png\";\r\nimport Laying_Cat from \"./../../../assets/img/Laying_Cat.png\";\r\nimport { px } from \"../../../utils/px\";\r\n\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n} from \"../../../store/actions\";\r\nimport _ from \"lodash\";\r\nimport HistoryTable from \"../../../components/historyTable\";\r\nimport moment from \"moment\";\r\nimport \"./linkEquipment.less\";\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n  let { mellaConnectStatus, mellaMeasurePart } = hardwareMessage;\r\n  let imageMap = [\r\n    Standing_Dog,\r\n    Standing_Cat,\r\n    Sitting_Dog,\r\n    Sitting_Cat,\r\n    Laying_Dog,\r\n    Laying_Cat,\r\n  ];\r\n\r\n  const [type, setType] = useState(false); //是否显示轮播图\r\n  const [carouselIndex, setCarouselIndex] = useState(0); //轮播图下标\r\n  const saveCallBack = useRef();\r\n  const callBack = () => {\r\n    setCarouselIndex(carouselIndex + 1);\r\n  };\r\n\r\n  //切换图片\r\n  const checkImage = () => {\r\n    if (mellaMeasurePart === \"腋温\") {\r\n      return AxillaryPlacement;\r\n    } else if (mellaMeasurePart === \"耳温\") {\r\n      return EarPlacement;\r\n    } else {\r\n      return RectalPlacement;\r\n    }\r\n  };\r\n  //点击进入轮播图\r\n  const clickIntoTip = () => {\r\n    setType(true);\r\n  };\r\n  //小圆点点击事件\r\n  const clickPoint = (index) => {\r\n    setCarouselIndex(index);\r\n  };\r\n\r\n  useEffect(() => {\r\n    saveCallBack.current = callBack;\r\n    if (carouselIndex === 6) {\r\n      setCarouselIndex(0);\r\n    }\r\n  }, [carouselIndex]);\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      saveCallBack.current();\r\n    };\r\n    let timer = null;\r\n    if (type && mellaConnectStatus === \"connected\") {\r\n      timer = setInterval(tick, 1500);\r\n    }\r\n    if (mellaConnectStatus !== \"connected\") {\r\n      setType(false);\r\n      setCarouselIndex(0);\r\n      clearInterval(timer);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [type, mellaConnectStatus]);\r\n\r\n  return (\r\n    <>\r\n      <Content className={\"contentBox\"}>\r\n        {_.isEqual(mellaConnectStatus, \"disconnected\") ? (\r\n          <>\r\n            <div className=\"startBox\">\r\n              <p className=\"startTitle\">\r\n                Turn on your\r\n                <br />\r\n                Mella Thermometer\r\n                <br />\r\n                or Pair New Mella\r\n              </p>\r\n              <img src={PressButton_Pro} className={\"PressButton_Pro\"} style={{width:px(300),height:px(200)}} />\r\n            </div>\r\n            <div className=\"tableBox\">\r\n              <HistoryTable tableColumnType='temperature' />\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className=\"startBox\">\r\n              <p className=\"startTitle\">\r\n                {!type\r\n                  ? \"Ready, place under foreleg\"\r\n                  : \"Place Under Foreleg Standing\"}\r\n              </p>\r\n              {!type ? (\r\n                <>\r\n                  <img src={checkImage()}></img>\r\n                  {mellaMeasurePart === \"腋温\" ? (\r\n                    <div className=\"bottomTip\">\r\n                      <p className=\"tipTitle\" onClick={() => clickIntoTip()}>\r\n                        Need Help With Accurate Placement On Pet?\r\n                      </p>\r\n                    </div>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"carouselBox\">\r\n                    {_.map(imageMap, (item, index) => {\r\n                      return (\r\n                        <div key={index}>\r\n                          <img\r\n                            className=\"contentStyle\"\r\n                            src={item}\r\n                            style={{\r\n                              display: carouselIndex === index ? \"\" : \"none\",\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  <div className=\"dotBox\">\r\n                    <ul className=\"dotList\">\r\n                      {_.map(imageMap, (item, index) => {\r\n                        return (\r\n                          <li key={index}>\r\n                            <Button\r\n                              className=\"dotItem\"\r\n                              onClick={() => clickPoint(index)}\r\n                              style={{\r\n                                background:\r\n                                  carouselIndex === index\r\n                                    ? \"#0a0a0a\"\r\n                                    : \"#bdbaba\",\r\n                              }}\r\n                            >\r\n                              {index}\r\n                            </Button>\r\n                          </li>\r\n                        );\r\n                      })}\r\n                    </ul>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n  }\r\n)(LinkEquipment);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\App.js",["337","338"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetLogin\\EzyVetLogin.jsx",["339","340"],"import React, { Component, } from 'react'\r\nimport {\r\n    Button,\r\n    Input,\r\n    Form,\r\n    Select\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './esyVetLogin.less'\r\nimport { fetchRequest2 } from './../../utils/FetchUtil2'\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\nexport default class EzyNetLogin extends Component {\r\n\r\n    state = {\r\n        isRemember: false,\r\n        client_id: '',\r\n        client_secret: '',\r\n        partner_id: ''\r\n    }\r\n\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('middle')\r\n        storage.ezyVetToken = ''\r\n    }\r\n    componentWillMount () {\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin1 !== '', storage.ezyVetToken1 !== undefined, `${storage.ezyVetToken1}` !== 'undefined');\r\n        console.log(storage.ezyVetLogin1, storage.ezyVetLogin !== '', storage.ezyVetToken !== undefined, `${storage.ezyVetToken}` !== 'undefined');\r\n        if (storage.ezyVetLogin !== '' && storage.ezyVetToken !== undefined && `${storage.ezyVetToken}` !== 'undefined') {\r\n            try {\r\n                let data = JSON.parse(storage.ezyVetLogin)\r\n                console.log('--', data);\r\n                this.setState({\r\n                    isRemember: data.isRemember,\r\n                    client_id: data.client_id,\r\n                    client_secret: data.client_secret,\r\n                    partner_id: data.partner_id\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render () {\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 10 },\r\n                sm: { span: 6 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 14 },\r\n            },\r\n        };\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 10,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 8,\r\n                    offset: 7,\r\n                },\r\n            },\r\n        };\r\n\r\n        const _next = (values) => {\r\n            console.log('Received values of form: ', values);\r\n            let parames = {\r\n                clientId: values.client_id,\r\n                clientSecret: values.client_secret,\r\n                partnerId: values.partner_id,\r\n            }\r\n            console.log(parames);\r\n            fetchRequest2('/EzyVet/ezyvetauth', 'GET', parames, '')\r\n                .then((res) => {\r\n                    console.log(res);\r\n                    if (res && res.msg === 'success') {\r\n\r\n                        storage.ezyVetToken = res.data\r\n                        if (this.state.isRemember) {\r\n                            storage.ezyVetLogin = JSON.stringify({\r\n                                client_id: values.client_id,\r\n                                client_secret: values.client_secret,\r\n                                partner_id: values.partner_id,\r\n                                isRemember: this.state.isRemember\r\n                            })\r\n                        } else {\r\n                            storage.ezyVetLogin = ''\r\n                        }\r\n                        storage.selectTime = ''\r\n                        storage.ezyVetReLogin = JSON.stringify({  //如果令牌过期了，需要重新输入信息重新获取令牌\r\n                            client_id: values.client_id,\r\n                            client_secret: values.client_secret,\r\n                            partner_id: values.partner_id,\r\n                        })\r\n\r\n                        this.props.history.push('EzyVetSelectTime')\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n\r\n        }\r\n        let { client_id, client_secret, partner_id } = this.state\r\n\r\n        return (\r\n            <div id=\"eszVetLogin\">\r\n                {/* 关闭缩小 */}\r\n                <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                    onClick1={() => this.props.history.push('/page1')}\r\n                />\r\n                <div className=\"text\">\r\n                    Please enter your user information\r\n                </div>\r\n                <div className=\"form\">\r\n                    <Form\r\n                        {...formItemLayout}\r\n                        name=\"register\"\r\n                        onFinish={_next}\r\n                        initialValues={{\r\n                            client_id, client_secret, partner_id\r\n                        }}\r\n\r\n                        scrollToFirstError\r\n                    >\r\n                        <Form.Item\r\n                            name=\"client_id\"\r\n                            label=\"Client ID\"\r\n                            rules={[{ required: true, message: 'Please input your Client ID!', whitespace: true }]}\r\n\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"client_secret\"\r\n                            label=\"Client Secret\"\r\n                            rules={[{ required: true, message: 'Please input your Client Secret!', whitespace: true }]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password className='inp' />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"partner_id\"\r\n                            label=\"Partner ID\"\r\n                            rules={[{ required: true, message: 'Please input your Partner ID!', whitespace: true }]}\r\n                        >\r\n                            <Input className='inp' />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            {...tailFormItemLayout}\r\n                        >\r\n                            <div className=\"btn\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    htmlType=\"submit\"\r\n                                >\r\n                                    Next\r\n                                </Button>\r\n                            </div>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </div>\r\n                <div className=\"remember\">\r\n                    <p>Stay Signed In:</p>\r\n                    <div className=\"box\" onClick={() => {\r\n                        let { isRemember } = this.state\r\n                        this.setState({\r\n                            isRemember: !isRemember\r\n                        })\r\n                        storage.isRemember = !isRemember\r\n                    }}>\r\n                        {this.state.isRemember && <img src={dui} alt=\"\" />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\apiKey\\APIKey.jsx",["341","342","343","344"],"import React, { Component, } from 'react'\r\nimport {\r\n    Button,\r\n    Input,\r\n    Spin,\r\n    Alert,\r\n    Form,\r\n    Modal\r\n} from 'antd';\r\nimport { InfoCircleOutlined, UserOutlined, createFromIconfontCN } from '@ant-design/icons';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport MaxMin from './../../utils/maxminreturn/MaxMinReturn'\r\nimport dui from './../../assets/images/dui.png'\r\nimport './apikey.less'\r\nimport { fetchRequest1 } from './../../utils/FetchUtil'\r\nimport { mTop } from '../../utils/px';\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_2326495_ryrpg35knb.js'\r\n})\r\nlet storage = window.localStorage;\r\nexport default class APIKey extends Component {\r\n    state = {\r\n        value: '',\r\n        loading: false,\r\n        id: '', // location 的ID\r\n        name: '',\r\n        flog: false,\r\n        visible: false,\r\n        modalText: '',\r\n        api: '',\r\n        selectApi: false\r\n    }\r\n    componentDidMount () {\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('big')\r\n    }\r\n    componentWillMount () {\r\n        if (storage.selectApi === `true`) {\r\n            if (`${storage.API}` !== `undefined`) {\r\n                this.setState({\r\n                    api: storage.API\r\n                })\r\n            }\r\n            this.setState({\r\n                selectApi: storage.selectApi\r\n            })\r\n        }\r\n        console.log('----------', storage.selectApi, storage.API);\r\n\r\n    }\r\n    onFinish = values => {\r\n        console.log(\"Success:\", values);\r\n        console.log('跳转');\r\n        if (values) {\r\n            this.setState({\r\n                loading: true\r\n            })\r\n            let params = {\r\n                APIkey: values.api\r\n            }\r\n            console.log('传入的数据：', params);\r\n\r\n            fetchRequest1('/VetSpire/selectLocationsByOrganization', 'POST', params)\r\n                .then(res => {\r\n                    console.log('接收到的数据', res);\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                    if (res.code === 14002) {\r\n\r\n\r\n                        storage.selectApi = this.state.selectApi\r\n                        console.log(this.state.selectApi);\r\n                        storage.API = values.api\r\n                        console.log(res.message);\r\n                        let data = res.data.org\r\n                        console.log(data);\r\n                        this.setState({\r\n                            id: data.id,\r\n                            name: data.name,\r\n                            flog: true,\r\n                            api: params.APIkey\r\n                        })\r\n                        storage.id = data.id\r\n                        console.log(storage.id);\r\n                        this.props.history.push({ pathname: '/page3', })\r\n                    } else {\r\n                        this.setState({\r\n                            visible: true,\r\n                            modalText: 'The input API is wrong',\r\n                            flog: false\r\n                        })\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('错误', err);\r\n                    this.setState({\r\n                        loading: false,\r\n                        visible: true,\r\n                        modalText: `${err}`,\r\n                        flog: false\r\n                    })\r\n                })\r\n\r\n        }\r\n    };\r\n    onFinishFailed = errorInfo => {\r\n        console.log(\"Failed:\", errorInfo);\r\n    };\r\n    render () {\r\n        const { api, id } = this.state\r\n        return (\r\n            <div id=\"inputAPI\">\r\n                {/* 关闭缩小 */}\r\n                <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                    onClick1={() => this.props.history.push('/page1')}\r\n                />\r\n\r\n\r\n                <Spin tip=\"Loading...\" spinning={this.state.loading} delay={500}>\r\n\r\n                    {/* 文本 */}\r\n                    <div className=\"text\"\r\n                        style={{ marginTop: mTop(100), marginBottom: mTop(80) }}\r\n                    >Enter your Vetspire API key<br />and we’ll take care of the rest.</div>\r\n\r\n\r\n                    <Form\r\n                        name=\"basic\"\r\n                        initialValues={{\r\n                            remember: true\r\n                        }}\r\n                        onFinish={(value) => this.onFinish(value)}\r\n                        onFinishFailed={(value) => this.onFinishFailed(value)}\r\n                    >\r\n                        <div className=\"inptDiv\">\r\n                            <Form.Item\r\n                                name=\"api\"\r\n                                initialValue={this.state.api}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: \"Please input your vetspire API key!\"\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input\r\n                                    className='input'\r\n                                    placeholder=\"Your Vetspire API Key\"\r\n\r\n                                />\r\n\r\n                            </Form.Item>\r\n                        </div>\r\n                        <div className=\"remember\">\r\n                            <div className=\"text1\">Remember Me</div>\r\n                            <div className=\"square\" onClick={() => {\r\n                                this.setState({ selectApi: !this.state.selectApi })\r\n                            }}>\r\n                                {(this.state.selectApi) ? (<img src={dui} width={'40px'} alt=\"\" />) : (null)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* {(!this.state.flog) ? ( */}\r\n                        {(true) ? (\r\n                            <Form.Item>\r\n                                <div className=\"btn\"\r\n                                    style={{ marginTop: mTop(280) }}\r\n                                >\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        shape=\"round\"\r\n                                        size='large'\r\n                                        htmlType=\"submit\"\r\n                                    >\r\n                                        Connect\r\n                                    </Button>\r\n                                </div>\r\n                            </Form.Item>\r\n                        ) : (null)}\r\n\r\n                    </Form>\r\n\r\n                </Spin>\r\n\r\n                {/* {(this.state.flog) ? ( */}\r\n                {(false) ? (\r\n                    <div>\r\n                        <div className=\"text2\"> Verify Organization<br />Information</div>\r\n                        <div className=\"text9\">Business Name <span>{this.state.name}</span></div>\r\n                        <div className=\"btns\">\r\n                            <div className=\"btn1\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    onClick={() => this.setState({ flog: false })}\r\n                                >\r\n                                    Try Again\r\n                                </Button>\r\n                            </div>\r\n                            <div className=\"btn2\">\r\n                                <Button\r\n                                    type=\"primary\"\r\n                                    shape=\"round\"\r\n                                    size='large'\r\n                                    onClick={() => {\r\n                                        console.log('点击了');\r\n                                        this.props.history.push({ pathname: '/page4', query: { api, id } })\r\n                                    }}\r\n                                >\r\n                                    Verify\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                ) : (null)}\r\n\r\n\r\n                <Modal\r\n                    title='err'\r\n                    visible={this.state.visible}\r\n                    footer={[]}\r\n                    onCancel={() => this.setState({ visible: false })}\r\n                >\r\n                    {this.state.modalText}\r\n                </Modal>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx",["345","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372"],"////这是普通用户的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Table,\r\n  Input,\r\n  Button,\r\n  Space,\r\n  message,\r\n  Menu,\r\n  Modal,\r\n  Select,\r\n  ConfigProvider\r\n\r\n} from 'antd';\r\nimport Draggable from \"react-draggable\";\r\nimport Button1 from '../../utils/button/Button'\r\nimport moment from 'moment'\r\n//import 'antd/dist/antd.css';\r\nimport Heard from '../../utils/heard/Heard'\r\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\r\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\r\nimport './doctorSelectExam.less'\r\n\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { FetchEszVet } from '../../utils/FetchEszVet'\r\nimport { fetchRequest } from '../../utils/FetchUtil1'\r\nimport gender from '../../utils/gender'\r\nimport temporaryStorage from '../../utils/temporaryStorage';\r\nimport { MTop, mTop, pX, px, win } from '../../utils/px';\r\nimport { stopBubble } from '../../utils/current'\r\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\r\nimport { fetchRhapsody } from '../../utils/FetchUtil5';\r\nimport jinggao from './../../assets/img/jinggao.png'\r\nimport redclose from './../../assets/img/redclose.png'\r\nimport blackTriangle from './../../assets/img/blackTriangle.png'\r\nimport refresh from './../../assets/img/Refresh.png'\r\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\r\n\r\nimport electronStore from '../../utils/electronStore';\r\n\r\nconst { SubMenu } = Menu;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\n\r\n\r\n\r\nexport default class DoctorSelectAllExam extends Component {\r\n  state = {\r\n    loading: false,\r\n    api: '',\r\n    id: '',  //选择location的id\r\n    locations: [],\r\n    data: [],\r\n    searchData: [],\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    seleceID: '',  //宠物医生id\r\n    spin: false,   //刷新按钮是否旋转\r\n    unixToURI: '',\r\n    ezyVetToken: '',\r\n    current: 1,\r\n    closebgc: '',\r\n    minbgc: '',\r\n    closeColor: '',\r\n    heardSearchText: '',\r\n\r\n    isNotFound: true,\r\n    modalVis: false,\r\n\r\n    disabled: true,       //model是否可拖拽\r\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\r\n\r\n    sortBy: 'Time',\r\n    showsortBy: false\r\n  }\r\n  componentWillMount () {\r\n    // console.log('------------', this.props.location.listDate);\r\n    try {\r\n      if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\r\n        // console.log('------------', this.props.location);\r\n        let data = JSON.parse(this.props.location.listDate)\r\n        this.setState({\r\n          data,\r\n        })\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    console.log(windowsHeight, height, width);\r\n    if (windowsHeight < 900) {\r\n      ipcRenderer.send('table', win())\r\n    } else {\r\n      ipcRenderer.send('big', win())\r\n    }\r\n    // ipcRenderer.send('big')\r\n    message.destroy()\r\n\r\n\r\n\r\n    storage.identity = '3'\r\n\r\n    if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\r\n      let data = JSON.parse(this.props.location.listDate)\r\n      this.setState({\r\n        data,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        loading: true,\r\n      })\r\n    }\r\n    this._getExam()\r\n    temporaryStorage.logupVetInfo = {}\r\n    temporaryStorage.logupSelectOrganization = {}\r\n    temporaryStorage.logupSuccessData = {}\r\n    temporaryStorage.logupOrganization = {}\r\n    temporaryStorage.logupEmailCode = ''\r\n\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n\r\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\r\n    for (let i = 0; i < items.length; i++) {\r\n      let style = items[i].style\r\n      style.padding = \"5px 5px\"\r\n      style.textAlign = 'center'\r\n\r\n\r\n    }\r\n\r\n  }\r\n  componentWillUnmount () {\r\n    message.destroy()\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    console.log(windowsHeight, height, width);\r\n    if (windowsHeight < 900) {\r\n      ipcRenderer.send('table', win())\r\n    } else {\r\n      ipcRenderer.send('big', win())\r\n    }\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  rhapsody = async (patientsArr) => {\r\n\r\n    // console.log(patientsArr);\r\n    let dataArr = []\r\n    try {\r\n      for (let i = 0; i < patientsArr.length; i++) {\r\n        let params = { query: `query { patient (id:\"${patientsArr[i].patientId}\") {  vitals { data{ id, weight{value}, createdAt, updatedAt}}}}` }\r\n        let item = await fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n        if (item.data) {\r\n\r\n          let { vitals } = item.data.patient\r\n          let vitalData = vitals.data\r\n          console.log('-----------', vitalData);\r\n          let weight = ''\r\n          if (vitalData.length > 0) {\r\n            vitalData.sort((a, b) => {\r\n              return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n            })\r\n            if (vitalData[0].weight && vitalData[0].weight.value) {\r\n              patientsArr[i].weight = (vitalData[0].weight.value * 0.45).toFixed(1)\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n      }\r\n      console.log(patientsArr);\r\n      patientsArr.sort((a, b) => {\r\n        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n      })\r\n      this.setState({\r\n        data: patientsArr,\r\n        loading: false\r\n      })\r\n\r\n      electronStore.set('doctorExam', patientsArr)\r\n    } catch (error) {\r\n      this.setState({\r\n        loading: false,\r\n      })\r\n      message.destroy()\r\n      message.error('Medical record acquisition failed')\r\n    }\r\n\r\n\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n\r\n\r\n\r\n\r\n\r\n    //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\r\n    if (storage.lastOrganization === '34') {\r\n\r\n      console.log(storage.connectionKey);\r\n      //1.获取用户id\r\n\r\n      let params = { query: `query { business { id, name, state } }` }\r\n      fetchRhapsody('', 'POST', params, storage.connectionKey)\r\n\r\n        .then(res => {\r\n          console.log('---', res);\r\n          if (res.errors) {\r\n            this.setState({\r\n              loading: false,\r\n              spin: false\r\n            })\r\n            message.destroy()\r\n            message.error('Data acquisition failed')\r\n\r\n          } else {\r\n            console.log('获取到了businessId');\r\n            let businessId = res.data.business.id\r\n            // let param = {\r\n            //   query: `query  { patients (businessId:\"${businessId}\") { data{ id, clientId, name,gender, dateOfBirth\r\n            //   species{id,name},\r\n            //   breeds{id,name},\r\n            //   createdAt,owners{owner{firstName,lastName} }}}` }\r\n            let param = {\r\n              query: `query { \r\n                patients (businessId:\"${businessId}\") {\r\n                    data{ \r\n                         id, \r\n                         clientId, \r\n                         businessId, \r\n                         name  \r\n                         gender,\r\n                         dateOfBirth,\r\n                         species{id,name},\r\n                         breeds{id,name},\r\n                         createdAt ,\r\n                         owners{owner{firstName,lastName}}\r\n                    }\r\n                }\r\n            }`\r\n            }\r\n\r\n            console.log('获取病历单的入参', param, JSON.stringify(param));\r\n            fetchRhapsody('', 'POST', param, storage.connectionKey)\r\n              .then(res => {\r\n                console.log(res);\r\n                if (res.errors) {\r\n                  this.setState({\r\n                    loading: false,\r\n                    spin: false\r\n                  })\r\n                  message.destroy()\r\n                  message.error('Failed to get pet list')\r\n\r\n                } else {\r\n                  let patientsArr = res.data.patients.data\r\n                  let dataArr = []\r\n                  for (let i = 0; i < patientsArr.length; i++) {\r\n                    const patient = patientsArr[i];\r\n                    let { id, name, gender, dateOfBirth, breeds, owners, createdAt } = patient\r\n\r\n                    createdAt = moment(createdAt).format('X')\r\n                    let owner = 'unknown'\r\n                    if (owners.length > 0) {\r\n                      let ownerItem = owners[0]\r\n                      if (ownerItem && ownerItem.owner) {\r\n                        let { firstName, lastName } = ownerItem.owner\r\n                        if (firstName || lastName) {\r\n                          owner = `${lastName} ${firstName}`\r\n                        }\r\n                      }\r\n\r\n                    }\r\n\r\n                    let breed = 'unknown'\r\n                    if (breeds.length > 0 && breeds[0].name) {\r\n                      breed = breeds[0].name\r\n                    }\r\n\r\n                    let petAge = 'unknown'\r\n                    if (dateOfBirth) {\r\n                      petAge = moment(new Date()).diff(moment(dateOfBirth), 'years')\r\n                      // console.log('petAge', petAge);\r\n                    }\r\n\r\n                    let json = {\r\n                      insertedAt: createdAt,\r\n                      patientId: id,\r\n                      petName: name,\r\n                      owner,\r\n                      breed,\r\n                      gender: gender || 'unknown',\r\n                      age: petAge,\r\n                      petId: '',\r\n                      id: `${i}`,\r\n                      weight: null,\r\n                      rfid: null,\r\n                      url: null,\r\n                      speciesId: null,\r\n                    }\r\n                    dataArr.push(json)\r\n\r\n\r\n                  }\r\n\r\n                  console.log(dataArr);\r\n\r\n\r\n\r\n                  this.rhapsody(dataArr)\r\n                }\r\n\r\n              })\r\n              .catch(err => {\r\n                console.log(err);\r\n                this.setState({\r\n                  loading: false,\r\n                  spin: false\r\n                })\r\n                message.destroy()\r\n                message.error('Failed to get pet list')\r\n              })\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          this.setState({\r\n            loading: false,\r\n            spin: false\r\n          })\r\n          message.destroy()\r\n          message.error('Data acquisition failed')\r\n        })\r\n\r\n\r\n\r\n\r\n      return\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    console.log('查询宠物的入参', params);\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n\r\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\r\n      // fetchRequest('/new/pet/subscribe/page', 'POST', params)\r\n\r\n      .then(res => {\r\n        console.log('查询到的宠物列表,/user/listAllPetInfo', res);\r\n\r\n        if (res.flag === true && res.data) {\r\n          let data = []\r\n          let oldList = res.data\r\n          // let oldList = res.data.list\r\n          for (let i = 0; i < oldList.length; i++) {\r\n            let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\r\n              h2tLength, torsoLength } = oldList[i]\r\n            let owner = ''\r\n            patientId = isUnKnow(patientId)\r\n            petName = isUnKnow(petName)\r\n            breedName = isUnKnow(breedName)\r\n            age = isUnKnow(age)\r\n            weight = isUnKnow(weight)\r\n            if (!firstName) {\r\n              firstName = ''\r\n            }\r\n            if (!lastName) {\r\n              lastName = ''\r\n            }\r\n            if (lastName === '' && firstName === '') {\r\n              owner = 'unknown'\r\n            } else {\r\n              owner = `${lastName} ${firstName}`\r\n            }\r\n            createTime = moment(createTime).format('X')\r\n            let petGender = ''\r\n            switch (`${gender}`) {\r\n              case '1': petGender = 'F'\r\n\r\n                break;\r\n              case '0': petGender = \"M\"\r\n                break;\r\n              default: petGender = 'unknown'\r\n                break;\r\n            }\r\n            let petAge = 'unknown'\r\n            if (birthday) {\r\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n            }\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              patientId,\r\n              petName,\r\n              owner,\r\n              breed: breedName,\r\n              gender: petGender,\r\n              age: petAge,\r\n              petId,\r\n              id: i,\r\n              weight,\r\n              rfid,\r\n              url,\r\n              speciesId,\r\n              l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n              h2tLength, torsoLength,\r\n              pethubId, macId,\r\n\r\n            }\r\n            data.push(json)\r\n\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          console.log('列表的数据：', data);\r\n          storage.doctorList = JSON.stringify(data)\r\n          this.setState({\r\n            data,\r\n            loading: false,\r\n            spin: false\r\n          })\r\n\r\n          electronStore.set('doctorExam', data)\r\n\r\n\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n          spin: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  getColumnSearchProps = dataIndex => ({\r\n    //dataIndex 是标题名称\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    //自定义Icon\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\r\n    onFilter: (value, record) => {\r\n      console.log(value, record, dataIndex);\r\n      return record[dataIndex]\r\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n        : ''\r\n    },\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n  _refresh = () => {\r\n    console.log('点击了');\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    // this._getData()\r\n    this._getExam()\r\n  }\r\n\r\n  /**------------------顶部start------------------------ */\r\n  _close = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('关闭程序');\r\n    ipcRenderer.send('window-close')\r\n  }\r\n  _min = () => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    console.log('最小化程序');\r\n    ipcRenderer.send('window-min')\r\n    this.setState({\r\n      minbgc: '',\r\n    })\r\n  }\r\n  _minMove = () => {\r\n\r\n    this.setState({\r\n      minbgc: 'rgb(211, 205, 205)'\r\n    })\r\n  }\r\n  _minLeave = () => {\r\n    this.setState({\r\n      minbgc: ''\r\n    })\r\n  }\r\n  _closeMove = () => {\r\n    this.setState({\r\n      closeColor: 'red',\r\n      closebgc: '#fff'\r\n    })\r\n  }\r\n  _closeLeave = () => {\r\n    this.setState({\r\n      closeColor: '#fff',\r\n      closebgc: ''\r\n    })\r\n  }\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n\r\n    switch (e.key) {\r\n      case '1': this.props.history.push('/page11'); break;\r\n      case '2': this.props.history.push('/'); break;\r\n      case '3':\r\n        try {\r\n\r\n          let selectNum = document.getElementsByClassName('ant-pagination-item-active')\r\n          // storage.defaultCurrent = selectNum[0].title\r\n          storage.doctorList = JSON.stringify(this.state.data)\r\n        } catch (error) {\r\n          console.log('错误信息', error);\r\n        }\r\n\r\n\r\n        this.props.history.push('/page8'); break;\r\n      case '4': this.props.history.push('/page12'); break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  };\r\n\r\n  _search1 = (search) => {       //这个是搜索调用后台的函数，现在废弃20210929\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      petName: search,\r\n    }\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n    console.log('搜索的数据', params);\r\n    fetchRequest('/pet/listPetsLike', \"POST\", params)\r\n      .then(res => {\r\n        console.log(res);\r\n\r\n        if (res.flag === true) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { age, createTime, patientId, petName, firstName, birthday, lastName, breedName, gender, petId, weight } = res.data[i]\r\n            let owner = ''\r\n            patientId = isUnKnow(patientId)\r\n            petName = isUnKnow(petName)\r\n            breedName = isUnKnow(breedName)\r\n            age = isUnKnow(age)\r\n            weight = isUnKnow(weight)\r\n            if (!firstName) {\r\n              firstName = ''\r\n            }\r\n            if (!lastName) {\r\n              lastName = ''\r\n            }\r\n            if (lastName === '' && firstName === '') {\r\n              owner = 'unknown'\r\n            } else {\r\n              owner = `${lastName} ${firstName}`\r\n            }\r\n            createTime = moment(createTime).format('X')\r\n            let petGender = ''\r\n            switch (`${gender}`) {\r\n              case '1': petGender = 'F'\r\n\r\n                break;\r\n              case '0': petGender = \"M\"\r\n                break;\r\n              default: petGender = 'unknown'\r\n                break;\r\n            }\r\n            let petAge = 'unknown'\r\n            if (birthday) {\r\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n              // console.log('petAge', petAge);\r\n            }\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              patientId,\r\n              petName,\r\n              owner,\r\n              breed: breedName,\r\n              gender: petGender,\r\n              age: petAge,\r\n              petId,\r\n              id: i,\r\n              weight\r\n\r\n            }\r\n            data.push(json)\r\n\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            searchData: data,\r\n            loading: false\r\n          })\r\n        } else {\r\n          this.setState({\r\n            searchData: [],\r\n            loading: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n  }\r\n\r\n  _search = (keyWord) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\r\n\r\n    /**\r\n     * 使用indexof方法实现模糊查询\r\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n     *  \r\n     * list         原数组\r\n     * keyWord      查询关键词\r\n     * searchData   查询的结果\r\n     * \r\n     * toLowerCase（）方法：将字符串统一转成小写\r\n     * toUpperCase（）方法：将字符串统一转成大写\r\n     * \r\n     */\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    let list = this.state.data\r\n    let searchData = []\r\n    for (let i = 0; i < list.length; i++) {\r\n      let petName = list[i].petName.toLowerCase() || ''\r\n      let patientId = list[i].patientId.toLowerCase() || ''\r\n      let rfid = list[i].rfid || ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${rfid}`.indexOf(keyWord) !== -1\r\n      ) {\r\n        searchData.push(list[i])\r\n      }\r\n    }\r\n    console.log(searchData);\r\n    this.setState({\r\n      searchData,\r\n      loading: false\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  RFIDSearch = () => {\r\n    this.setState({\r\n      loading: true\r\n    })\r\n    fetchRequest4(`/pet/getPetInfoByRFID/${this.state.heardSearchText}/${storage.lastOrganization}`, 'GET')\r\n      .then(res => {\r\n        console.log('----RFID搜索结果', res);\r\n\r\n        if (res.flag === true && res.data) {\r\n          let { createTime, patientId, petName, firstName, lastName, breedName, gender, birthday, petId, rfid, weight } = res.data\r\n          patientId = patientId || 'unknown'\r\n          petName = petName || 'unknown'\r\n          breedName = breedName || 'unknown'\r\n          weight = weight || 'unknown'\r\n          let owner = ''\r\n          if (!firstName) {\r\n            firstName = ''\r\n          }\r\n          if (!lastName) {\r\n            lastName = ''\r\n          }\r\n          if (lastName === '' && firstName === '') {\r\n            owner = 'unknown'\r\n          } else {\r\n            owner = `${lastName} ${firstName}`\r\n          }\r\n          createTime = moment(createTime).format('X')\r\n          let petGender = ''\r\n          switch (`${gender}`) {\r\n            case '1': petGender = 'F'\r\n\r\n              break;\r\n            case '0': petGender = \"M\"\r\n              break;\r\n            default: petGender = 'unknown'\r\n              break;\r\n          }\r\n          let petAge = 'unknown'\r\n          if (birthday) {\r\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n            // console.log('petAge', petAge);\r\n          }\r\n          let json = {\r\n            insertedAt: createTime,\r\n            patientId,\r\n            petName,\r\n            owner,\r\n            breed: breedName,\r\n            gender: petGender,\r\n            age: petAge,\r\n            petId,\r\n            id: 0,\r\n            weight,\r\n            rfid\r\n          }\r\n          let searchData = []\r\n          searchData.push(json)\r\n          this.setState({\r\n            searchData,\r\n            loading: false\r\n          })\r\n\r\n\r\n\r\n\r\n        } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\r\n          console.log('找到了但是不是在这个组织下');\r\n          this.setState({\r\n            loading: false,\r\n            modalVis: true,\r\n            isNotFound: false,\r\n            heardSearchText: ''\r\n          })\r\n        } else {\r\n          console.log('没有找到');\r\n          this.setState({\r\n            loading: false,\r\n            modalVis: true,\r\n            isNotFound: true,\r\n            heardSearchText: ''\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n\r\n        console.log('抛出异常:', err);\r\n        this.setState({\r\n          loading: false,\r\n        })\r\n      })\r\n  }\r\n  draggleRef = React.createRef();\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  render () {\r\n    const columns = [\r\n      {\r\n        title: 'Time',\r\n        dataIndex: 'insertedAt',\r\n        key: 'insertedAt',\r\n        width: '16%',\r\n        // ...this.getColumnSearchProps('insertedAt'),\r\n        render: (text, record, index) => {\r\n          let chazhi = new Date().getTimezoneOffset()\r\n          // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\r\n          let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\r\n          let time = moment(parseInt(text) * 1000).format('hh:mm a');\r\n          let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\r\n          // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\r\n          return (\r\n            <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\r\n              <p>{`${year}`}</p>\r\n              <p>{`${time}`}</p>\r\n            </div>\r\n          )\r\n        },\r\n\r\n      },\r\n      {\r\n        title: 'Pet ID',\r\n        dataIndex: 'patientId',\r\n        key: 'patientId',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('patientId'),\r\n      },\r\n      {\r\n        title: 'Pet Name',\r\n        dataIndex: 'petName',\r\n        key: 'petName',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('petName'),\r\n      },\r\n      {\r\n        title: 'Owner',\r\n        dataIndex: 'owner',\r\n        key: 'owner',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('owner'),\r\n      },\r\n      {\r\n        title: 'Breed',\r\n        dataIndex: 'breed',\r\n        key: 'breed',\r\n        width: '15%',\r\n        // ...this.getColumnSearchProps('breed'),\r\n        render: (text, record, index) => {\r\n          if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{'unknown'}</p>\r\n            )\r\n          } else {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{text}</p>\r\n            )\r\n          }\r\n\r\n        }\r\n      },\r\n\r\n      {\r\n        title: 'Gender',\r\n        dataIndex: 'gender',\r\n        key: 'gender',\r\n        width: '12%',\r\n        // width: '30%',\r\n        // ...this.getColumnSearchProps('gender'),\r\n      },\r\n      {\r\n        title: 'Age',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n        width: '12%',\r\n        // width: '20%',\r\n        render: (text, record, index) => {\r\n          // console.log(text);\r\n\r\n          if (`${text}` === 'NaN') {\r\n            return (\r\n              <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\r\n            )\r\n          } else {\r\n            return (\r\n              <p style={{ textAlign: 'center' }}>{text}</p>\r\n            )\r\n          }\r\n\r\n        }\r\n      },\r\n\r\n\r\n    ];\r\n    const { loading, data, api, id, seleceID, spin, closeColor, closebgc, minbgc, disabled, bounds, modalVis, sortBy, showsortBy } = this.state\r\n\r\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\r\n    for (let i = 0; i < items.length; i++) {\r\n      let style = items[i].style\r\n      style.padding = `5px 5px`\r\n      style.textAlign = 'center'\r\n    }\r\n    const noData = () => {\r\n      return (\r\n        <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\r\n          <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\r\n          <a style={{ fontSize: px(22) }} href=\"#\"\r\n            onClick={(e) => {\r\n              console.log('我要去添加宠物');\r\n              try {\r\n\r\n                storage.doctorList = JSON.stringify(this.state.data)\r\n              } catch (error) {\r\n                console.log('错误信息', error);\r\n              }\r\n              // /pet/doctorAddPet\r\n              this.props.history.push({ pathname: '/pet/doctorAddPet' })\r\n\r\n              e.preventDefault();\r\n\r\n            }}\r\n\r\n          >{`go to add`}</a>\r\n        </div>\r\n      )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n      <div id=\"doctorSelectExam\" onClick={(e) => {\r\n        console.log('隐藏');\r\n        this.setState({\r\n          showsortBy: false\r\n        })\r\n      }}>\r\n        {/* 关闭缩小 */}\r\n        <Heard\r\n          onReturn={() => {\r\n            this.props.history.push('/page11')\r\n          }}\r\n          onSearch={(data) => {\r\n\r\n            storage.doctorExam = JSON.stringify(data)\r\n\r\n            storage.doctorList = JSON.stringify(this.state.data)\r\n            if (storage.isClinical === 'true') {\r\n              this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\r\n            } else {\r\n              this.props.history.push({ pathname: '/page10', })\r\n            }\r\n          }}\r\n          menu8Click={() => {\r\n            this.props.history.push({ pathname: '/uesr/selectExam', })\r\n          }}\r\n          blueSearch={true}\r\n        />\r\n\r\n\r\n        <div className=\"hread flex\">\r\n          <div className=\"hread1 flex\" style={{ marginTop: px(30) }}>\r\n            <div className=\"heard1L flex\">\r\n              <div className=\"title\" style={{ fontSize: px(25) }}>Client Results</div>\r\n              <div className=\"refresh flex\"\r\n                style={{ fontSize: px(25), marginLeft: px(10) }}\r\n              >\r\n                <SyncOutlined onClick={this._refresh} spin={spin} />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"walkin flex\"\r\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20) }}\r\n              onClick={() => {\r\n                storage.doctorExam = JSON.stringify('')\r\n                storage.doctorList = JSON.stringify(this.state.data)\r\n                if (storage.isClinical === 'true') {\r\n                  this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: null })\r\n                } else {\r\n                  this.props.history.push({ pathname: '/page10', })\r\n                }\r\n\r\n              }}\r\n            >Walk-In</div>\r\n\r\n          </div>\r\n          <div className=\"heard2 flex\" style={{ marginTop: px(8), marginBottom: px(8) }}>\r\n\r\n            <div className=\"sort flex\" >\r\n              <p style={{ fontSize: px(16), marginRight: px(10) }}>sort By:</p>\r\n\r\n              <SelectionBox\r\n                listArr={[\r\n                  { key: 'time', value: 'Time' },\r\n                  { key: 'petid', value: 'Pet ID' },\r\n                  { key: 'owner', value: 'Owner' },\r\n                  { key: 'breed', value: 'Breed' },\r\n                  { key: 'petname', value: 'Pet Name' },\r\n                  { key: 'gender', value: 'Gender' },\r\n                ]}\r\n                clickItem={(item) => {\r\n                  let petList = [].concat(data)\r\n                  switch (item.key) {\r\n                    case 'time':\r\n                      petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\r\n                      break;\r\n                    case 'petid':\r\n                      petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\r\n                      break;\r\n                    case 'owner':\r\n                      petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\r\n                      break;\r\n                    case 'breed':\r\n                      petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\r\n                      break;\r\n                    case 'petname':\r\n                      petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\r\n                      break;\r\n                    case 'gender':\r\n                      petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\r\n                      break;\r\n                  }\r\n\r\n                  this.setState({\r\n                    sortBy: item.value,\r\n                    showsortBy: false,\r\n                    data: petList\r\n                  })\r\n                }}\r\n              />\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <div className=\"table\" >\r\n          <ConfigProvider renderEmpty={noData}>\r\n            <Table\r\n              style={{\r\n                // border: ' #979797 1px solid',\r\n                padding: 0,\r\n                margin: 0,\r\n                width: '95%',\r\n                // height: px(500)\r\n              }}\r\n              rowKey={data => data.id}\r\n              bordered={false}\r\n              columns={columns}\r\n              dataSource={(this.state.heardSearchText.length === 0) ? this.state.data : this.state.searchData}\r\n              loading={loading}\r\n              locale={{ filterConfirm: <div>111</div> }}\r\n              // pagination={{ showSizeChanger: false, showQuickJumper: true, defaultCurrent: this.state.current }}\r\n              pagination={false}\r\n              scroll={{\r\n                y: px(600)\r\n              }}\r\n              onRow={(record) => {\r\n                return {\r\n                  onClick: (event) => {\r\n\r\n                    console.log('record', record);\r\n                    storage.doctorExam = JSON.stringify(record)\r\n                    storage.doctorList = JSON.stringify(this.state.data)\r\n\r\n                    if (storage.isClinical === 'true') {\r\n                      this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.patientId })\r\n                    } else {\r\n                      this.props.history.push({ pathname: '/page10', })\r\n                    }\r\n\r\n\r\n                  }, // 点击行\r\n\r\n                };\r\n              }}\r\n            />\r\n          </ConfigProvider>\r\n        </div>\r\n\r\n        <Modal\r\n\r\n          // visible={isOrg}\r\n          visible={modalVis}\r\n          onCancel={() => this.setState({ modalVis: false })}\r\n          width={350}\r\n          footer={[]}\r\n          modalRender={(modal) => (\r\n            <Draggable\r\n              disabled={disabled}\r\n              bounds={bounds}\r\n              onStart={(event, uiData) => this.onStart(event, uiData)}\r\n            >\r\n              <div ref={this.draggleRef}>{modal}</div>\r\n            </Draggable>\r\n          )}\r\n          destroyOnClose={true}\r\n          wrapClassName=\"doctorSelectExamModal\"\r\n        >\r\n          <div id='doctorSelectExamModal'>\r\n            <div className=\"text\"\r\n              onMouseOver={() => {\r\n                if (disabled) {\r\n                  this.setState({\r\n                    disabled: false,\r\n                  });\r\n                }\r\n              }}\r\n              onMouseOut={() => {\r\n                this.setState({\r\n                  disabled: true,\r\n                });\r\n              }}\r\n\r\n            >{this.state.isNotFound ? 'Pet not found!' : 'Pet found!'}</div>\r\n            <div className='Img'>\r\n              {this.state.isNotFound ?\r\n                <img src={redclose} width=\"50px\" /> :\r\n                <img src={jinggao} width=\"50px\" />\r\n              }\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n            {this.state.isNotFound ? <p > This pet is not on your database</p> :\r\n              <p >Pet Identified but does not <br /> belong to your organization.</p>}\r\n\r\n\r\n            <div style={{ marginTop: px(20) }}>\r\n              <Button1\r\n                text={'OK'}\r\n\r\n                onClick={() => this.setState({\r\n                  modalVis: false\r\n                })}\r\n              />\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </div>\r\n\r\n        </Modal>\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx",["373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\scanCodeLogin\\ScanCodeLogin.jsx",["400","401","402","403"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyOrganization\\FindMyOrganization.jsx",["404"],"import React, { Component } from 'react'\r\nimport {\r\n  Input\r\n} from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport Button from '../../../utils/button/Button'\r\n\r\n\r\n\r\nimport './findMyOrganization.less'\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nexport default class JoinworkplaceByName extends Component {\r\n\r\n  state = {\r\n    search: '',\r\n    listData: [],\r\n    searchData: [],\r\n    selectId: {}\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    fetchRequest(`/organization/listAll`, \"GET\", '')\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.msg === 'success') {\r\n          this.setState({\r\n            listData: res.data\r\n          })\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n    this.setState({\r\n      selectId: temporaryStorage.logupSelectOrganization\r\n    })\r\n  }\r\n  _search = (val) => {\r\n    let search = val.target.value\r\n    let { listData } = this.state\r\n    let searchData = []\r\n    for (let i = 0; i < listData.length; i++) {\r\n      if (listData[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        searchData.push(listData[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      search,\r\n      searchData\r\n    })\r\n\r\n  }\r\n  _list = () => {\r\n    const { search, listData, searchData } = this.state\r\n    let data = (search.length > 0) ? searchData : listData\r\n    let option = data.map((item, index) => {\r\n      return <li key={item.organizationId}\r\n        onClick={() => {\r\n          this.setState({\r\n            selectId: item\r\n          })\r\n          console.log(item);\r\n          temporaryStorage.logupSelectOrganization = item\r\n          this.props.history.push('/uesr/logUp/FindMyWorkplace')\r\n\r\n        }}\r\n\r\n      >\r\n        {(this.state.selectId.organizationId === item.organizationId ? <span className=\"search\">&#xe614;</span> : null)}\r\n        {item.name}</li>\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div id=\"findMyOrganization\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.push('/uesr/logUp/JoinOrganizationByOption')}\r\n        />\r\n        <div className=\"body\">\r\n          <div className=\"text\">Find my organization</div>\r\n\r\n          <div className=\"searchBox\">\r\n            <div><MyIcon type='icon-sousuo' className=\"icon\" /></div>\r\n\r\n            <Input\r\n              placeholder=\"Please input organization name\"\r\n              bordered={false}\r\n              allowClear={true}\r\n              value={this.state.search}\r\n              onChange={this._search}\r\n            />\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"list\">\r\n            {this._list()}\r\n          </div>\r\n\r\n          <Button\r\n            text={'My Organization Isn`t Listed'}\r\n            textBoxStyle={{ marginTop: '50px' }}\r\n            onClick={() => {\r\n              this.props.history.push('/uesr/logUp/NewOrganization')\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\findMyWorkplace\\FindMyWorkplace.jsx",["405","406"],"import React, { Component } from 'react'\r\nimport {\r\n  Input, message\r\n} from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n//import 'antd/dist/antd.css';\r\n\r\nimport MaxMin from '../../../utils/maxminreturn/MaxMinReturn'\r\nimport { fetchRequest } from '../../../utils/FetchUtil1'\r\nimport temporaryStorage from '../../../utils/temporaryStorage'\r\nimport Button from '../../../utils/button/Button'\r\nimport './findMyWorkplace.less'\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nexport default class JoinworkplaceByName extends Component {\r\n\r\n  state = {\r\n    search: '',\r\n    listData: [],\r\n    searchData: [],\r\n    selectId: {}\r\n\r\n  }\r\n  componentDidMount () {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('small')\r\n    fetchRequest(`/workplace/listAllWorkplaceByOrganizationId/${temporaryStorage.logupSelectOrganization.organizationId}`, \"GET\", '')\r\n      .then((res) => {\r\n        console.log(res);\r\n        if (res.msg === 'success') {\r\n          this.setState({\r\n            listData: res.data\r\n          })\r\n        } else {\r\n          console.log('请求错误');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  _search = (val) => {\r\n    let search = val.target.value\r\n    let { listData } = this.state\r\n    let searchData = []\r\n    for (let i = 0; i < listData.length; i++) {\r\n      if (listData[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\r\n        searchData.push(listData[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      search,\r\n      searchData\r\n    })\r\n\r\n  }\r\n  _list = () => {\r\n    const { search, listData, searchData } = this.state\r\n    let data = (search.length > 0) ? searchData : listData\r\n    let option = data.map((item, index) => {\r\n\r\n      return <li key={item.workplaceId}\r\n        onClick={() => {\r\n          this.setState({\r\n            selectId: item\r\n          })\r\n          console.log(item);\r\n          let params = {\r\n            userId: temporaryStorage.logupSuccessData.userId,\r\n            roleId: 2,\r\n            workplaceId: item.workplaceId,\r\n            organizationId: item.organizationId\r\n          }\r\n          fetchRequest('/user/updateUserInfo', 'POST', params)\r\n            .then(res => {\r\n              console.log(res);\r\n              if (res.flag === true) {\r\n\r\n                console.log('成功',);\r\n                this._logIn()\r\n              }\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              message.error(err.message, 3)\r\n            })\r\n        }}\r\n\r\n      >\r\n        {(this.state.selectId === item ? <span className=\"search\">&#xe614;</span> : null)}\r\n        {item.workplaceName}</li>\r\n    })\r\n    return (\r\n      <ul>\r\n        {option}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  _logIn = () => {\r\n\r\n    let storage = window.localStorage;\r\n    let { email, hash } = temporaryStorage.logupVetInfo\r\n    let params = {\r\n      email: email.replace(/(^\\s*)/g, \"\"),\r\n      hash,\r\n      identityTypeId: '1'\r\n    }\r\n    fetchRequest('/user/mellaLogin', 'POST', params)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.status && res.status === 404) {\r\n          message.error('system error');\r\n          return\r\n        }\r\n        if (res.code === 10001 && res.msg === '账号错误') {\r\n          message.error('Account error');\r\n          return\r\n        }\r\n        if (res.code === 10002 && res.msg === '密码错误') {\r\n          message.error('wrong password')\r\n          return;\r\n        }\r\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\r\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\r\n          return\r\n        }\r\n\r\n        if (res.code === 0 && res.msg === 'success') {\r\n          console.log('账号密码正确，登录进去了');\r\n          let { userWorkplace, lastOrganization, token } = res.success\r\n          storage.token = token\r\n          storage.userId = ''\r\n\r\n          storage.userId = res.success.userId\r\n          storage.roleId = res.success.roleId\r\n\r\n          //每次登陆后清空宠物列表缓存的数据\r\n          storage.doctorList = ''\r\n          storage.defaultCurrent = ''\r\n          if (userWorkplace) {\r\n            storage.userWorkplace = JSON.stringify(userWorkplace)\r\n            let connectionKey = ''\r\n            const element = userWorkplace[0];\r\n            storage.lastOrganization = element.organizationEntity.organizationId\r\n            storage.lastWorkplaceId = element.workplaceEntity.workplaceId\r\n            if (element.organizationEntity.connectionKey) {\r\n              connectionKey = element.organizationEntity.connectionKey\r\n            }\r\n            if (element.roleId) {\r\n              console.log(element.roleId);\r\n              storage.roleId = element.roleId\r\n            }\r\n            if (userWorkplace.length === 1) {\r\n              this.props.history.push('/uesr/selectExam')\r\n\r\n            } else {\r\n              this.props.history.push('/page12')\r\n            }\r\n          } else {\r\n            storage.userWorkplace = ''\r\n            storage.connectionKey = ''\r\n            this.props.history.push('/uesr/selectExam')\r\n          }\r\n\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  render () {\r\n    return (\r\n      <div id=\"findMyWorkplace\">\r\n        {/* 关闭缩小 */}\r\n        <MaxMin\r\n          onClick={() => { this.props.history.push('/') }}\r\n          onClick1={() => this.props.history.goBack()}\r\n        />\r\n        <div className=\"body\">\r\n          <div className=\"text\">Find my workplace</div>\r\n\r\n          <div className=\"searchBox\">\r\n            <div><MyIcon type='icon-sousuo' className=\"icon\" /></div>\r\n\r\n            <Input\r\n              placeholder=\"Please input workplace name\"\r\n              bordered={false}\r\n              allowClear={true}\r\n              value={this.state.search}\r\n              onChange={this._search}\r\n            />\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"list\">\r\n            {this._list()}\r\n          </div>\r\n          <Button\r\n            text={'My Workplace Isn`t Listed'}\r\n            textBoxStyle={{ marginTop: '50px' }}\r\n            onClick={() => {\r\n              this.props.history.push('/uesr/logUp/NewWorkplace')\r\n            }}\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx",["407","408","409","410","411"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\settings\\Settings.jsx",["412","413","414","415","416","417","418","419","420"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\petAndParents\\PetAndParents.jsx",["421","422","423","424","425","426","427","428","429","430","431","432"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\addDevice\\AddDevice.jsx",["433","434","435","436","437","438","439","440","441","442"],"import React, { Component } from 'react'\r\nimport { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport './addDevice.less'\r\nimport MinClose from '../../../utils/minClose/MinClose'\r\nimport MouseDiv from '../../../utils/mouseDiv/MouseDiv'\r\nimport back_white from '../../../assets/img/back-white.png'\r\nimport back_hui from '../../../assets/img/back-hui.png'\r\nimport redclose from '../../../assets/img/redclose.png'\r\nimport MyModal from './../../../utils/myModal/MyModal'\r\nimport { mTop, px, MTop, pX } from '../../../utils/px';\r\nimport electronStore from '../../../utils/electronStore';\r\n\r\nlet storage = window.localStorage;\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\nlet num07 = 0       //接收到07命令行的次数\r\n\r\n\r\nexport default class AddDevice extends Component {\r\n\r\n  state = {\r\n    noUSB: false,\r\n    devicesList: [],\r\n    selectDevice: null,\r\n    // selectDevice: true,\r\n    reName: '',\r\n    saveDeviceMac: []  //这是已经保存过的设备的macid\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    message.destroy()\r\n\r\n    ipcRenderer.send('small')\r\n    // 监听分辨率是否改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    //这里做了个监听，当有数据发过来的时候直接在这里接收\r\n    ipcRenderer.on('sned', this._send)\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    let devicesList = electronStore.get(`${storage.userId}-deviceList`)\r\n    if (devicesList) {\r\n      let saveDeviceMac = []\r\n      for (let i = 0; i < devicesList.length; i++) {\r\n        const element = devicesList[i];\r\n        saveDeviceMac.push(element.macId)\r\n      }\r\n      this.setState({\r\n        saveDeviceMac\r\n      })\r\n    }\r\n\r\n\r\n\r\n    // const timer = setTimeout(() => {\r\n    //   let deviceList = [\r\n    //     // { name: 'Add Device', deviceType: 'add', macId: '0' },\r\n    //     { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:55:66' },\r\n    //   ]\r\n    //   this.setState({\r\n    //     devicesList: deviceList\r\n    //   })\r\n    //   clearTimeout(timer)\r\n    // }, 500);\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    ipcRenderer.removeListener('sned', this._send)\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      message.destroy()\r\n      this.setState({\r\n        noUSB: false\r\n      })\r\n    } else {\r\n      if (!this.state.noUSB) {\r\n        // message.error('The base is not detected. Please insert the base', 0)\r\n        this.setState({\r\n          noUSB: true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n    // console.log(data);\r\n    this.command(data)()\r\n  }\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  command = (newArr) => {\r\n    const instruction = [255]\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    // console.log(dataArr1);\r\n    const commandArr = {\r\n      255: () => {//蓝牙软尺广播的数据\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n\r\n        let bluName = ''\r\n        let bluData = []\r\n        //[\"aa\", \"25\", \"ff\", |\"03\", \"03\", \"b0\", \"ff\",| \"0f\", \"ff\", \"ac\", \"d2\", \"0b\", \"72\", \"c1\", \"7d\", \"3e\", \"d0\", \"a0\", \"00\", \"05\", \"09\", \"00\", \"2e\",| \"05\", \"09\", \"54\", \"61\", \"70\", \"65\", |\"06\", \"ef\", \"d0\", \"3e\", \"7d\", \"c1\", \"72\", |\"0b\", \"5c\", \"55\"]\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5])\r\n          }\r\n          // console.log('--剪切的数据---', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              let str = ''\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                let item = parseInt(itemData[i], 16)\r\n                str += String.fromCharCode(item)\r\n              }\r\n              bluName = str\r\n              break;\r\n            case 255:\r\n              bluData = itemData\r\n              break;\r\n            case 7: console.log('---UUID'); break;\r\n            case 239:\r\n              // console.log('---mac地址'); \r\n              break;\r\n            case 3: console.log('----尺子的,不知道什么用'); break;\r\n            default: console.log('直接跳出循环'); return;\r\n          }\r\n          dataIndex = itemLength\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\r\n        }\r\n        console.log('硬件名称', bluName, '-----硬件数据', bluData);\r\n        let macId = ''\r\n        if (bluData.length > 7) {\r\n          macId = this.getMac(bluName, bluData)\r\n        }\r\n\r\n\r\n        let sameFlog = this.state.devicesList.some((device, index) => {\r\n          return device.macId === macId\r\n        })\r\n        if (sameFlog || !macId) {   //重复直接退出\r\n          return\r\n        }\r\n        let deviceType = ''\r\n        switch (bluName) {\r\n          case 'Biggie':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n          case 'C19':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n\r\n          case 'MaeBowl':   //这是称量碗\r\n            deviceType = 'maeBowl'\r\n            break;\r\n\r\n          case 'Mella Measure': //这是蓝牙尺\r\n            deviceType = 'tape'\r\n            break;\r\n\r\n        }\r\n        if (macId && deviceType && bluName) {\r\n          let json = {\r\n            name: bluName,\r\n            deviceType,\r\n            macId\r\n          }\r\n          let deviceArr = [].concat(this.state.devicesList)\r\n          deviceArr.push(json)\r\n          this.setState({\r\n            devicesList: deviceArr\r\n          })\r\n        }\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n  }\r\n  getMac = (bluName, bluData) => {\r\n    switch (bluName) {\r\n      case 'Biggie':\r\n      case 'MaeBowl':\r\n      case 'Mella Measure':\r\n      case 'C19':\r\n        let str = bluData[1]\r\n        for (let i = 2; i < 7; i++) {\r\n          str += `:${bluData[i]}`\r\n        }\r\n        return str\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  changeFenBianLv = (e) => {\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n    })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  body = () => {\r\n    let { noUSB, devicesList, selectDevice, reName } = this.state\r\n    if (selectDevice) {\r\n      return <div className=\"addDevice flex\">\r\n        <div className=\"addDeviceTop flex\">\r\n          <div className=\"title\" style={{ fontSize: px(30), marginBottom: px(40) }}>Would you like to name<br />\r\n            this Mella device?</div>\r\n\r\n          <div className=\"input flex\" style={{ marginBottom: px(60) }}>\r\n            <input type=\"text\" style={{ height: px(45) }}\r\n              value={reName}\r\n              onChange={(value) => {\r\n                this.setState({\r\n                  reName: value.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\r\n          on the Exam Room. Write the name\r\n          on the sticker provided so it is easy\r\n            to select your device in the future.</div>\r\n        </div>\r\n        <div className=\"addDeviceFoot flex\">\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              console.log('---', deviceList);\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              let { saveDeviceMac } = this.state\r\n              saveDeviceMac.push(selectDevice.macId)\r\n              this.setState({\r\n                saveDeviceMac,\r\n                selectDevice: null,\r\n                reName: ''\r\n              })\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Add Another</p>\r\n          </div>\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              this.props.history.goBack()\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Finish</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    } else {\r\n      if (noUSB) {\r\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\r\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\r\n\r\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\r\n        </div>\r\n      } else {\r\n        if (devicesList.length === 0) {\r\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n            {/* < MyModal\r\n              visible={true}\r\n              element={\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n                  <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n                  </div>\r\n                  <p>\r\n                    {'searching...'}\r\n                  </p>\r\n                </div>\r\n              }\r\n            /> */}\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\r\n              <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\r\n              </div>\r\n              <p>\r\n                {'searching...'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        } else {\r\n          let options = devicesList.map((item, index) => {\r\n            let { saveDeviceMac } = this.state\r\n            let flog = saveDeviceMac.some((device, index) => {\r\n              return device === item.macId\r\n            })\r\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\r\n            return <li\r\n              className='flex'\r\n              style={{ marginBottom: px(20) }}\r\n              key={`${index}`}\r\n              onClick={() => {\r\n                if (!flog) {\r\n                  this.setState({\r\n                    selectDevice: item\r\n                  })\r\n                } else {\r\n                  message.destroy();\r\n                  message.error('This device has already been added')\r\n                }\r\n\r\n              }}\r\n            >\r\n\r\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\r\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\r\n\r\n            </li>\r\n          })\r\n          return <div className='deviceList'>\r\n            <ul>\r\n              {options}\r\n            </ul>\r\n          </div>\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"addDevice\">\r\n        <div className=\"heaed\">\r\n          <div className=\"l\"\r\n          >\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                let { selectDevice } = this.state\r\n                if (selectDevice) {\r\n                  this.setState({\r\n                    selectDevice: null\r\n                  })\r\n                } else {\r\n                  this.props.history.goBack()\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body flex\">\r\n          {this.body()}\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\InviteTeam.jsx",["443","444","445","446","447","448","449","450","451","452"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\gender.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil1.js",["453","454","455","456"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js",["457","458","459"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx",["475","476","477","478"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx",["479","480","481","482","483","484","485","486","487","488","489","490"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx",["491","492","493","494"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx",["495","496","497","498","499","500"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx",["501","502","503","504","505","506"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["507","508","509","510","511","512","513","514","515","516","517","518"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx",["519","520","521","522","523","524","525","526","527"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { px, mTop } from './../../utils/px'\r\nimport cir from './../../assets/images/cir.png'\r\nimport xia from './../../assets/img/xia.png'\r\n\r\n//import 'antd/dist/antd.css';\r\nimport './biggie.less'\r\n\r\n/**\r\n * \r\n * @param {string} weight   体重值\r\n * @param {string} bodyFat   体脂\r\n * @param {string} score   健康指数\r\n * @param {string} impedance   阻抗值\r\n * @param {boolean} issave   按钮文本，为true展示save，为false展示send to pms\r\n * @param {function} onPress   点击按钮调用的函数\r\n * \r\n * @returns \r\n */\r\n\r\nconst Biggie = ({ weight, bodyFat, score, impedance, issave, onPress, discardOnPress, isIbs, isHaveSaveBtn = true }) => {\r\n\r\n  // let { weight, bodyFat, score } = this.props\r\n\r\n  let lTColor = bodyFat !== null && bodyFat >= 0 ? '#87C563' : '#D8D9D9'\r\n  let rTColor = score !== null && score >= 0 ? '#87C563' : '#D8D9D9'\r\n  let lTtext = bodyFat !== null && bodyFat >= 0 ? `${bodyFat}%` : `Not Available`\r\n  let lTtextSize = bodyFat !== null && bodyFat >= 0 ? px(16) : px(15)\r\n  let rTtext = score !== null && score >= 0 ? `${score}` : `Not\\nAvailable`\r\n  let rTtextSize = score !== null && score >= 0 ? px(16) : px(15)\r\n\r\n  return (\r\n    <div className=\"biggie\" >\r\n      <div className=\"top\">\r\n\r\n        <div style={{ marginTop: px(150), height: px(160), borderRadius: px(150) }} className='biggiel'>\r\n          <div style={{ backgroundColor: lTColor, borderRadius: px(75), }} className='lT'>\r\n            <div className='lTText' style={{ fontSize: lTtextSize }}>{lTtext}</div>\r\n          </div>\r\n          <div style={{ fontSize: px(14) }}>{`Body Fat\\nPercent`}</div>\r\n          <img\r\n            src={xia}\r\n            style={{ width: px(20), marginBottom: px(5) }}\r\n          />\r\n        </div>\r\n\r\n\r\n        <div style={{ height: px(240), borderRadius: px(150), marginBottom: px(50) }} className='cen'>\r\n          <div style={{ borderRadius: px(75) }} className='lT'>\r\n            <img\r\n              src={cir}\r\n              width={'100%'}\r\n            />\r\n          </div>\r\n          <div className='cTText' style={{ top: px(45), fontSize: px(32), fontWeight: '800' }}>{weight}</div>\r\n          <div style={{ top: px(95), fontSize: px(25) }} className='cTText'>{`${isIbs ? 'lbs' : 'kgs'}`}</div>\r\n          <div className='cenCText' style={{ fontSize: px(24) }}>Weight</div>\r\n          <img\r\n            src={xia}\r\n            style={{ width: px(20), marginBottom: px(6) }}\r\n          />\r\n        </div>\r\n\r\n\r\n\r\n        <div style={{ marginTop: px(150), height: px(160), borderRadius: px(150) }} className='biggiel'>\r\n          <div style={{ backgroundColor: rTColor, borderRadius: px(75) }} className='lT'>\r\n            <div className='lTText' style={{ fontSize: rTtextSize }}>{rTtext}</div>\r\n          </div>\r\n          <div style={{ fontSize: px(14) }}>{`Body\\nCondition\\nScore`}</div>\r\n          <img\r\n            src={xia}\r\n            style={{ width: px(20), marginBottom: px(5) }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n      <div className='biggiefoot' style={{ marginTop: px(10), }}>\r\n        {isHaveSaveBtn &&\r\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', width: '100%' }}>\r\n            <div\r\n              className='biggiefootbtn'\r\n              style={{ height: px(36), }}\r\n              onClick={() => {\r\n                discardOnPress()\r\n              }}\r\n            >\r\n              <div style={{ color: '#fff', fontSize: px(16) }}>{`Discard`}</div>\r\n            </div>\r\n\r\n\r\n            <div\r\n              className='biggiefootbtn'\r\n              style={{ height: px(36), }}\r\n              onClick={() => {\r\n                onPress()\r\n              }}\r\n            >\r\n              <div style={{ color: '#fff', fontSize: px(16) }}>{issave ? `Save` : `Send to PMS`}</div>\r\n            </div>\r\n\r\n\r\n          </div>\r\n        }\r\n\r\n\r\n        {(impedance && impedance > 0) ? <div style={{ color: '#000', fontSize: px(18), marginTop: mTop(10) }}>{`Impedance ${impedance} Ohms`}</div> : null}\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nBiggie.propTypes = {\r\n  weight: PropTypes.string || PropTypes.number,\r\n  bodyFat: PropTypes.number || PropTypes.string,\r\n  score: PropTypes.number || PropTypes.string,\r\n  impedance: PropTypes.number || PropTypes.string,\r\n  issave: PropTypes.bool,\r\n  onPress: PropTypes.func,\r\n  isIbs: PropTypes.bool\r\n}\r\nexport default Biggie","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js",["550"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil4.js",["551","552","553","554"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\home\\Home.jsx",["555","556"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["557","558","559","560"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\AddYuding.jsx",["561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx",["577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx",["602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\resetPassword\\ResetPassword.jsx",["627","628","629"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newOrganization\\NewOrganization.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx",["630","631","632","633","634","635","636","637","638"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx",["639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil2.js",["657","658","659","660"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\current.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx",["661","662","663"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx",["664","665","666"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx",["667","668","669","670","671","672","673","674","675","676","677","678"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx",["679","680","681","682","683"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\InitDate.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx",["684"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx",["711","712"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil5.js",["713","714","715","716"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\linkEquipment.jsx",["738","739","740","741","742","743"],{"ruleId":"744","severity":1,"message":"745","line":4,"column":10,"nodeType":"746","messageId":"747","endLine":4,"endColumn":14},{"ruleId":"744","severity":1,"message":"748","line":4,"column":20,"nodeType":"746","messageId":"747","endLine":4,"endColumn":22},{"ruleId":"749","severity":1,"message":"750","line":381,"column":9,"nodeType":"751","messageId":"752","endLine":388,"endColumn":10},{"ruleId":"744","severity":1,"message":"753","line":591,"column":15,"nodeType":"746","messageId":"747","endLine":591,"endColumn":25},{"ruleId":"744","severity":1,"message":"754","line":635,"column":17,"nodeType":"746","messageId":"747","endLine":635,"endColumn":26},{"ruleId":"744","severity":1,"message":"755","line":810,"column":11,"nodeType":"746","messageId":"747","endLine":810,"endColumn":22},{"ruleId":"756","severity":1,"message":"757","line":999,"column":9,"nodeType":"758","messageId":"759","endLine":999,"endColumn":15},{"ruleId":"760","replacedBy":"761"},{"ruleId":"762","replacedBy":"763"},{"ruleId":"744","severity":1,"message":"764","line":3,"column":16,"nodeType":"746","messageId":"747","endLine":3,"endColumn":23},{"ruleId":"744","severity":1,"message":"765","line":3,"column":25,"nodeType":"746","messageId":"747","endLine":3,"endColumn":31},{"ruleId":"744","severity":1,"message":"766","line":3,"column":33,"nodeType":"746","messageId":"747","endLine":3,"endColumn":38},{"ruleId":"744","severity":1,"message":"767","line":5,"column":10,"nodeType":"746","messageId":"747","endLine":5,"endColumn":22},{"ruleId":"744","severity":1,"message":"768","line":6,"column":10,"nodeType":"746","messageId":"747","endLine":6,"endColumn":24},{"ruleId":"744","severity":1,"message":"769","line":16,"column":8,"nodeType":"746","messageId":"747","endLine":16,"endColumn":16},{"ruleId":"744","severity":1,"message":"770","line":23,"column":8,"nodeType":"746","messageId":"747","endLine":23,"endColumn":17},{"ruleId":"744","severity":1,"message":"771","line":24,"column":8,"nodeType":"746","messageId":"747","endLine":24,"endColumn":21},{"ruleId":"744","severity":1,"message":"772","line":26,"column":8,"nodeType":"746","messageId":"747","endLine":26,"endColumn":16},{"ruleId":"744","severity":1,"message":"773","line":38,"column":8,"nodeType":"746","messageId":"747","endLine":38,"endColumn":15},{"ruleId":"744","severity":1,"message":"774","line":40,"column":9,"nodeType":"746","messageId":"747","endLine":40,"endColumn":16},{"ruleId":"744","severity":1,"message":"775","line":41,"column":7,"nodeType":"746","messageId":"747","endLine":41,"endColumn":13},{"ruleId":"744","severity":1,"message":"776","line":45,"column":7,"nodeType":"746","messageId":"747","endLine":45,"endColumn":17},{"ruleId":"744","severity":1,"message":"777","line":106,"column":10,"nodeType":"746","messageId":"747","endLine":106,"endColumn":19},{"ruleId":"744","severity":1,"message":"778","line":106,"column":21,"nodeType":"746","messageId":"747","endLine":106,"endColumn":33},{"ruleId":"744","severity":1,"message":"779","line":138,"column":10,"nodeType":"746","messageId":"747","endLine":138,"endColumn":19},{"ruleId":"780","severity":1,"message":"781","line":167,"column":7,"nodeType":"782","messageId":"783","endLine":168,"endColumn":31},{"ruleId":"780","severity":1,"message":"781","line":169,"column":7,"nodeType":"782","messageId":"783","endLine":172,"endColumn":15},{"ruleId":"780","severity":1,"message":"784","line":181,"column":7,"nodeType":"782","messageId":"785","endLine":182,"endColumn":15},{"ruleId":"744","severity":1,"message":"786","line":220,"column":13,"nodeType":"746","messageId":"747","endLine":220,"endColumn":20},{"ruleId":"787","severity":1,"message":"788","line":818,"column":17,"nodeType":"789","endLine":818,"endColumn":62},{"ruleId":"787","severity":1,"message":"788","line":823,"column":17,"nodeType":"789","endLine":823,"endColumn":65},{"ruleId":"790","severity":1,"message":"791","line":878,"column":15,"nodeType":"789","endLine":884,"endColumn":16},{"ruleId":"790","severity":1,"message":"791","line":887,"column":15,"nodeType":"789","endLine":893,"endColumn":16},{"ruleId":"787","severity":1,"message":"788","line":987,"column":17,"nodeType":"789","endLine":987,"endColumn":62},{"ruleId":"787","severity":1,"message":"788","line":991,"column":15,"nodeType":"789","endLine":991,"endColumn":64},{"ruleId":"790","severity":1,"message":"791","line":1109,"column":13,"nodeType":"789","endLine":1113,"endColumn":14},{"ruleId":"790","severity":1,"message":"791","line":1190,"column":15,"nodeType":"789","endLine":1198,"endColumn":16},{"ruleId":"790","severity":1,"message":"791","line":1213,"column":13,"nodeType":"789","endLine":1213,"endColumn":76},{"ruleId":"790","severity":1,"message":"791","line":1284,"column":15,"nodeType":"789","endLine":1292,"endColumn":16},{"ruleId":"790","severity":1,"message":"791","line":1316,"column":15,"nodeType":"789","endLine":1320,"endColumn":16},{"ruleId":"744","severity":1,"message":"792","line":1346,"column":9,"nodeType":"746","messageId":"747","endLine":1346,"endColumn":15},{"ruleId":"793","severity":1,"message":"794","line":1382,"column":6,"nodeType":"795","endLine":1382,"endColumn":8,"suggestions":"796"},{"ruleId":"793","severity":1,"message":"797","line":1391,"column":6,"nodeType":"795","endLine":1391,"endColumn":32,"suggestions":"798"},{"ruleId":"787","severity":1,"message":"788","line":1411,"column":13,"nodeType":"789","endLine":1411,"endColumn":57},{"ruleId":"787","severity":1,"message":"788","line":1586,"column":17,"nodeType":"789","endLine":1586,"endColumn":52},{"ruleId":"787","severity":1,"message":"788","line":1588,"column":17,"nodeType":"789","endLine":1588,"endColumn":51},{"ruleId":"744","severity":1,"message":"799","line":2,"column":10,"nodeType":"746","messageId":"747","endLine":2,"endColumn":15},{"ruleId":"744","severity":1,"message":"800","line":28,"column":8,"nodeType":"746","messageId":"747","endLine":28,"endColumn":14},{"ruleId":"744","severity":1,"message":"801","line":31,"column":18,"nodeType":"746","messageId":"747","endLine":31,"endColumn":24},{"ruleId":"793","severity":1,"message":"802","line":75,"column":6,"nodeType":"795","endLine":75,"endColumn":21,"suggestions":"803"},{"ruleId":"787","severity":1,"message":"788","line":108,"column":15,"nodeType":"789","endLine":108,"endColumn":113},{"ruleId":"787","severity":1,"message":"788","line":124,"column":19,"nodeType":"789","endLine":124,"endColumn":43},{"ruleId":"787","severity":1,"message":"788","line":141,"column":27,"nodeType":"789","endLine":147,"endColumn":29},{"ruleId":"744","severity":1,"message":"804","line":3,"column":10,"nodeType":"746","messageId":"747","endLine":3,"endColumn":23},{"ruleId":"744","severity":1,"message":"805","line":16,"column":8,"nodeType":"746","messageId":"747","endLine":16,"endColumn":17},{"ruleId":"744","severity":1,"message":"806","line":8,"column":10,"nodeType":"746","messageId":"747","endLine":8,"endColumn":30},{"ruleId":"744","severity":1,"message":"807","line":18,"column":9,"nodeType":"746","messageId":"747","endLine":18,"endColumn":15},{"ruleId":"744","severity":1,"message":"808","line":6,"column":5,"nodeType":"746","messageId":"747","endLine":6,"endColumn":10},{"ruleId":"744","severity":1,"message":"809","line":10,"column":10,"nodeType":"746","messageId":"747","endLine":10,"endColumn":28},{"ruleId":"744","severity":1,"message":"810","line":10,"column":30,"nodeType":"746","messageId":"747","endLine":10,"endColumn":42},{"ruleId":"744","severity":1,"message":"775","line":19,"column":7,"nodeType":"746","messageId":"747","endLine":19,"endColumn":13},{"ruleId":"744","severity":1,"message":"811","line":11,"column":3,"nodeType":"746","messageId":"747","endLine":11,"endColumn":9},{"ruleId":"744","severity":1,"message":"812","line":21,"column":8,"nodeType":"746","messageId":"747","endLine":21,"endColumn":14},{"ruleId":"744","severity":1,"message":"813","line":26,"column":10,"nodeType":"746","messageId":"747","endLine":26,"endColumn":21},{"ruleId":"744","severity":1,"message":"814","line":28,"column":8,"nodeType":"746","messageId":"747","endLine":28,"endColumn":14},{"ruleId":"744","severity":1,"message":"815","line":30,"column":10,"nodeType":"746","messageId":"747","endLine":30,"endColumn":14},{"ruleId":"744","severity":1,"message":"745","line":30,"column":16,"nodeType":"746","messageId":"747","endLine":30,"endColumn":20},{"ruleId":"744","severity":1,"message":"816","line":31,"column":10,"nodeType":"746","messageId":"747","endLine":31,"endColumn":20},{"ruleId":"744","severity":1,"message":"817","line":36,"column":8,"nodeType":"746","messageId":"747","endLine":36,"endColumn":21},{"ruleId":"744","severity":1,"message":"818","line":37,"column":8,"nodeType":"746","messageId":"747","endLine":37,"endColumn":15},{"ruleId":"744","severity":1,"message":"774","line":42,"column":9,"nodeType":"746","messageId":"747","endLine":42,"endColumn":16},{"ruleId":"744","severity":1,"message":"775","line":43,"column":7,"nodeType":"746","messageId":"747","endLine":43,"endColumn":13},{"ruleId":"744","severity":1,"message":"819","line":166,"column":9,"nodeType":"746","messageId":"747","endLine":166,"endColumn":16},{"ruleId":"744","severity":1,"message":"820","line":176,"column":15,"nodeType":"746","messageId":"747","endLine":176,"endColumn":21},{"ruleId":"744","severity":1,"message":"821","line":626,"column":15,"nodeType":"746","messageId":"747","endLine":626,"endColumn":24},{"ruleId":"744","severity":1,"message":"822","line":901,"column":15,"nodeType":"746","messageId":"747","endLine":901,"endColumn":21},{"ruleId":"744","severity":1,"message":"823","line":905,"column":15,"nodeType":"746","messageId":"747","endLine":905,"endColumn":22},{"ruleId":"744","severity":1,"message":"824","line":989,"column":28,"nodeType":"746","messageId":"747","endLine":989,"endColumn":31},{"ruleId":"744","severity":1,"message":"825","line":989,"column":33,"nodeType":"746","messageId":"747","endLine":989,"endColumn":35},{"ruleId":"744","severity":1,"message":"826","line":989,"column":37,"nodeType":"746","messageId":"747","endLine":989,"endColumn":45},{"ruleId":"744","severity":1,"message":"827","line":989,"column":53,"nodeType":"746","messageId":"747","endLine":989,"endColumn":63},{"ruleId":"744","severity":1,"message":"828","line":989,"column":65,"nodeType":"746","messageId":"747","endLine":989,"endColumn":73},{"ruleId":"744","severity":1,"message":"829","line":989,"column":75,"nodeType":"746","messageId":"747","endLine":989,"endColumn":81},{"ruleId":"744","severity":1,"message":"830","line":989,"column":111,"nodeType":"746","messageId":"747","endLine":989,"endColumn":117},{"ruleId":"744","severity":1,"message":"831","line":989,"column":119,"nodeType":"746","messageId":"747","endLine":989,"endColumn":129},{"ruleId":"790","severity":1,"message":"791","line":1001,"column":11,"nodeType":"789","endLine":1017,"endColumn":12},{"ruleId":"749","severity":1,"message":"750","line":1099,"column":19,"nodeType":"751","messageId":"752","endLine":1118,"endColumn":20},{"ruleId":"787","severity":1,"message":"788","line":1214,"column":17,"nodeType":"789","endLine":1214,"endColumn":52},{"ruleId":"787","severity":1,"message":"788","line":1215,"column":17,"nodeType":"789","endLine":1215,"endColumn":51},{"ruleId":"744","severity":1,"message":"832","line":2,"column":35,"nodeType":"746","messageId":"747","endLine":2,"endColumn":42},{"ruleId":"744","severity":1,"message":"813","line":13,"column":10,"nodeType":"746","messageId":"747","endLine":13,"endColumn":21},{"ruleId":"744","severity":1,"message":"748","line":43,"column":20,"nodeType":"746","messageId":"747","endLine":43,"endColumn":22},{"ruleId":"744","severity":1,"message":"774","line":50,"column":9,"nodeType":"746","messageId":"747","endLine":50,"endColumn":16},{"ruleId":"744","severity":1,"message":"775","line":52,"column":7,"nodeType":"746","messageId":"747","endLine":52,"endColumn":13},{"ruleId":"744","severity":1,"message":"833","line":79,"column":5,"nodeType":"746","messageId":"747","endLine":79,"endColumn":15},{"ruleId":"744","severity":1,"message":"834","line":212,"column":48,"nodeType":"746","messageId":"747","endLine":212,"endColumn":54},{"ruleId":"749","severity":1,"message":"750","line":331,"column":9,"nodeType":"751","messageId":"752","endLine":344,"endColumn":10},{"ruleId":"749","severity":1,"message":"750","line":744,"column":9,"nodeType":"751","messageId":"752","endLine":748,"endColumn":10},{"ruleId":"744","severity":1,"message":"835","line":752,"column":9,"nodeType":"746","messageId":"747","endLine":752,"endColumn":27},{"ruleId":"836","severity":1,"message":"837","line":798,"column":7,"nodeType":"838","messageId":"839","endLine":798,"endColumn":10},{"ruleId":"749","severity":1,"message":"750","line":1051,"column":11,"nodeType":"751","messageId":"752","endLine":1058,"endColumn":12},{"ruleId":"749","severity":1,"message":"750","line":1274,"column":13,"nodeType":"751","messageId":"752","endLine":1281,"endColumn":14},{"ruleId":"749","severity":1,"message":"750","line":1431,"column":13,"nodeType":"751","messageId":"752","endLine":1438,"endColumn":14},{"ruleId":"744","severity":1,"message":"840","line":1502,"column":15,"nodeType":"746","messageId":"747","endLine":1502,"endColumn":26},{"ruleId":"756","severity":1,"message":"757","line":1789,"column":9,"nodeType":"758","messageId":"759","endLine":1789,"endColumn":15},{"ruleId":"756","severity":1,"message":"757","line":1798,"column":9,"nodeType":"758","messageId":"759","endLine":1798,"endColumn":14},{"ruleId":"749","severity":1,"message":"750","line":2024,"column":9,"nodeType":"751","messageId":"752","endLine":2037,"endColumn":10},{"ruleId":"841","severity":1,"message":"842","line":2430,"column":36,"nodeType":"843","messageId":"844","endLine":2430,"endColumn":37,"suggestions":"845"},{"ruleId":"846","severity":1,"message":"847","line":2431,"column":47,"nodeType":"848","messageId":"839","endLine":2431,"endColumn":49},{"ruleId":"744","severity":1,"message":"849","line":2632,"column":107,"nodeType":"746","messageId":"747","endLine":2632,"endColumn":112},{"ruleId":"744","severity":1,"message":"850","line":3057,"column":11,"nodeType":"746","messageId":"747","endLine":3057,"endColumn":14},{"ruleId":"744","severity":1,"message":"851","line":3694,"column":17,"nodeType":"746","messageId":"747","endLine":3694,"endColumn":23},{"ruleId":"744","severity":1,"message":"827","line":4322,"column":13,"nodeType":"746","messageId":"747","endLine":4322,"endColumn":23},{"ruleId":"744","severity":1,"message":"828","line":4322,"column":25,"nodeType":"746","messageId":"747","endLine":4322,"endColumn":33},{"ruleId":"744","severity":1,"message":"829","line":4322,"column":35,"nodeType":"746","messageId":"747","endLine":4322,"endColumn":41},{"ruleId":"749","severity":1,"message":"750","line":4355,"column":17,"nodeType":"751","messageId":"752","endLine":4368,"endColumn":18},{"ruleId":"744","severity":1,"message":"852","line":3,"column":3,"nodeType":"746","messageId":"747","endLine":3,"endColumn":8},{"ruleId":"744","severity":1,"message":"853","line":5,"column":3,"nodeType":"746","messageId":"747","endLine":5,"endColumn":10},{"ruleId":"744","severity":1,"message":"854","line":10,"column":8,"nodeType":"746","messageId":"747","endLine":10,"endColumn":17},{"ruleId":"744","severity":1,"message":"855","line":12,"column":10,"nodeType":"746","messageId":"747","endLine":12,"endColumn":22},{"ruleId":"744","severity":1,"message":"767","line":5,"column":32,"nodeType":"746","messageId":"747","endLine":5,"endColumn":44},{"ruleId":"744","severity":1,"message":"856","line":133,"column":32,"nodeType":"746","messageId":"747","endLine":133,"endColumn":48},{"ruleId":"744","severity":1,"message":"857","line":150,"column":15,"nodeType":"746","messageId":"747","endLine":150,"endColumn":28},{"ruleId":"744","severity":1,"message":"852","line":4,"column":3,"nodeType":"746","messageId":"747","endLine":4,"endColumn":8},{"ruleId":"744","severity":1,"message":"858","line":5,"column":3,"nodeType":"746","messageId":"747","endLine":5,"endColumn":7},{"ruleId":"744","severity":1,"message":"859","line":7,"column":3,"nodeType":"746","messageId":"747","endLine":7,"endColumn":8},{"ruleId":"744","severity":1,"message":"806","line":13,"column":10,"nodeType":"746","messageId":"747","endLine":13,"endColumn":30},{"ruleId":"744","severity":1,"message":"860","line":19,"column":10,"nodeType":"746","messageId":"747","endLine":19,"endColumn":23},{"ruleId":"744","severity":1,"message":"861","line":16,"column":8,"nodeType":"746","messageId":"747","endLine":16,"endColumn":24},{"ruleId":"744","severity":1,"message":"745","line":17,"column":10,"nodeType":"746","messageId":"747","endLine":17,"endColumn":14},{"ruleId":"744","severity":1,"message":"862","line":22,"column":8,"nodeType":"746","messageId":"747","endLine":22,"endColumn":20},{"ruleId":"744","severity":1,"message":"807","line":23,"column":9,"nodeType":"746","messageId":"747","endLine":23,"endColumn":15},{"ruleId":"744","severity":1,"message":"863","line":344,"column":9,"nodeType":"746","messageId":"747","endLine":344,"endColumn":25},{"ruleId":"744","severity":1,"message":"864","line":381,"column":11,"nodeType":"746","messageId":"747","endLine":381,"endColumn":24},{"ruleId":"744","severity":1,"message":"830","line":381,"column":142,"nodeType":"746","messageId":"747","endLine":381,"endColumn":148},{"ruleId":"744","severity":1,"message":"831","line":381,"column":150,"nodeType":"746","messageId":"747","endLine":381,"endColumn":160},{"ruleId":"744","severity":1,"message":"865","line":385,"column":7,"nodeType":"746","messageId":"747","endLine":385,"endColumn":17},{"ruleId":"744","severity":1,"message":"866","line":4,"column":3,"nodeType":"746","messageId":"747","endLine":4,"endColumn":9},{"ruleId":"744","severity":1,"message":"867","line":12,"column":8,"nodeType":"746","messageId":"747","endLine":12,"endColumn":14},{"ruleId":"744","severity":1,"message":"765","line":13,"column":8,"nodeType":"746","messageId":"747","endLine":13,"endColumn":14},{"ruleId":"744","severity":1,"message":"868","line":14,"column":8,"nodeType":"746","messageId":"747","endLine":14,"endColumn":21},{"ruleId":"744","severity":1,"message":"861","line":15,"column":8,"nodeType":"746","messageId":"747","endLine":15,"endColumn":24},{"ruleId":"744","severity":1,"message":"745","line":16,"column":10,"nodeType":"746","messageId":"747","endLine":16,"endColumn":14},{"ruleId":"744","severity":1,"message":"869","line":25,"column":10,"nodeType":"746","messageId":"747","endLine":25,"endColumn":22},{"ruleId":"744","severity":1,"message":"807","line":27,"column":9,"nodeType":"746","messageId":"747","endLine":27,"endColumn":15},{"ruleId":"744","severity":1,"message":"870","line":43,"column":11,"nodeType":"746","messageId":"747","endLine":43,"endColumn":17},{"ruleId":"744","severity":1,"message":"871","line":43,"column":19,"nodeType":"746","messageId":"747","endLine":43,"endColumn":24},{"ruleId":"744","severity":1,"message":"872","line":59,"column":9,"nodeType":"746","messageId":"747","endLine":59,"endColumn":22},{"ruleId":"744","severity":1,"message":"873","line":78,"column":11,"nodeType":"746","messageId":"747","endLine":78,"endColumn":19},{"ruleId":"744","severity":1,"message":"852","line":2,"column":10,"nodeType":"746","messageId":"747","endLine":2,"endColumn":15},{"ruleId":"744","severity":1,"message":"765","line":2,"column":17,"nodeType":"746","messageId":"747","endLine":2,"endColumn":23},{"ruleId":"744","severity":1,"message":"874","line":2,"column":34,"nodeType":"746","messageId":"747","endLine":2,"endColumn":38},{"ruleId":"744","severity":1,"message":"875","line":2,"column":40,"nodeType":"746","messageId":"747","endLine":2,"endColumn":47},{"ruleId":"744","severity":1,"message":"806","line":3,"column":10,"nodeType":"746","messageId":"747","endLine":3,"endColumn":30},{"ruleId":"744","severity":1,"message":"767","line":3,"column":32,"nodeType":"746","messageId":"747","endLine":3,"endColumn":44},{"ruleId":"744","severity":1,"message":"876","line":11,"column":8,"nodeType":"746","messageId":"747","endLine":11,"endColumn":15},{"ruleId":"744","severity":1,"message":"748","line":12,"column":26,"nodeType":"746","messageId":"747","endLine":12,"endColumn":28},{"ruleId":"744","severity":1,"message":"877","line":18,"column":5,"nodeType":"746","messageId":"747","endLine":18,"endColumn":10},{"ruleId":"749","severity":1,"message":"750","line":164,"column":9,"nodeType":"751","messageId":"752","endLine":182,"endColumn":10},{"ruleId":"744","severity":1,"message":"878","line":9,"column":8,"nodeType":"746","messageId":"747","endLine":9,"endColumn":17},{"ruleId":"744","severity":1,"message":"806","line":10,"column":10,"nodeType":"746","messageId":"747","endLine":10,"endColumn":30},{"ruleId":"744","severity":1,"message":"879","line":10,"column":32,"nodeType":"746","messageId":"747","endLine":10,"endColumn":47},{"ruleId":"744","severity":1,"message":"880","line":14,"column":8,"nodeType":"746","messageId":"747","endLine":14,"endColumn":16},{"ruleId":"744","severity":1,"message":"745","line":19,"column":10,"nodeType":"746","messageId":"747","endLine":19,"endColumn":14},{"ruleId":"749","severity":1,"message":"750","line":85,"column":25,"nodeType":"751","messageId":"752","endLine":114,"endColumn":26},{"ruleId":"780","severity":1,"message":"781","line":103,"column":29,"nodeType":"782","messageId":"783","endLine":104,"endColumn":68},{"ruleId":"780","severity":1,"message":"781","line":105,"column":29,"nodeType":"782","messageId":"783","endLine":112,"endColumn":39},{"ruleId":"744","severity":1,"message":"881","line":290,"column":49,"nodeType":"746","messageId":"747","endLine":290,"endColumn":63},{"ruleId":"744","severity":1,"message":"882","line":290,"column":65,"nodeType":"746","messageId":"747","endLine":290,"endColumn":79},{"ruleId":"744","severity":1,"message":"883","line":4,"column":5,"nodeType":"746","messageId":"747","endLine":4,"endColumn":10},{"ruleId":"744","severity":1,"message":"884","line":10,"column":13,"nodeType":"746","messageId":"747","endLine":10,"endColumn":19},{"ruleId":"846","severity":1,"message":"885","line":13,"column":20,"nodeType":"848","messageId":"839","endLine":13,"endColumn":22},{"ruleId":"846","severity":1,"message":"885","line":61,"column":20,"nodeType":"848","messageId":"839","endLine":61,"endColumn":22},{"ruleId":"744","severity":1,"message":"886","line":2,"column":27,"nodeType":"746","messageId":"747","endLine":2,"endColumn":36},{"ruleId":"744","severity":1,"message":"887","line":3,"column":10,"nodeType":"746","messageId":"747","endLine":3,"endColumn":20},{"ruleId":"744","severity":1,"message":"745","line":8,"column":14,"nodeType":"746","messageId":"747","endLine":8,"endColumn":18},{"ruleId":"744","severity":1,"message":"852","line":4,"column":10,"nodeType":"746","messageId":"747","endLine":4,"endColumn":15},{"ruleId":"744","severity":1,"message":"765","line":4,"column":17,"nodeType":"746","messageId":"747","endLine":4,"endColumn":23},{"ruleId":"744","severity":1,"message":"874","line":4,"column":34,"nodeType":"746","messageId":"747","endLine":4,"endColumn":38},{"ruleId":"744","severity":1,"message":"875","line":4,"column":40,"nodeType":"746","messageId":"747","endLine":4,"endColumn":47},{"ruleId":"744","severity":1,"message":"806","line":5,"column":10,"nodeType":"746","messageId":"747","endLine":5,"endColumn":30},{"ruleId":"744","severity":1,"message":"767","line":5,"column":32,"nodeType":"746","messageId":"747","endLine":5,"endColumn":44},{"ruleId":"744","severity":1,"message":"888","line":9,"column":8,"nodeType":"746","messageId":"747","endLine":9,"endColumn":18},{"ruleId":"744","severity":1,"message":"772","line":18,"column":8,"nodeType":"746","messageId":"747","endLine":18,"endColumn":16},{"ruleId":"744","severity":1,"message":"889","line":19,"column":8,"nodeType":"746","messageId":"747","endLine":19,"endColumn":16},{"ruleId":"744","severity":1,"message":"890","line":20,"column":8,"nodeType":"746","messageId":"747","endLine":20,"endColumn":18},{"ruleId":"744","severity":1,"message":"891","line":21,"column":8,"nodeType":"746","messageId":"747","endLine":21,"endColumn":16},{"ruleId":"744","severity":1,"message":"876","line":23,"column":8,"nodeType":"746","messageId":"747","endLine":23,"endColumn":15},{"ruleId":"744","severity":1,"message":"748","line":24,"column":26,"nodeType":"746","messageId":"747","endLine":24,"endColumn":28},{"ruleId":"793","severity":1,"message":"892","line":60,"column":8,"nodeType":"795","endLine":60,"endColumn":10,"suggestions":"893"},{"ruleId":"793","severity":1,"message":"894","line":102,"column":8,"nodeType":"795","endLine":102,"endColumn":38,"suggestions":"895"},{"ruleId":"744","severity":1,"message":"896","line":28,"column":26,"nodeType":"746","messageId":"747","endLine":28,"endColumn":32},{"ruleId":"744","severity":1,"message":"897","line":28,"column":34,"nodeType":"746","messageId":"747","endLine":28,"endColumn":39},{"ruleId":"793","severity":1,"message":"898","line":115,"column":6,"nodeType":"795","endLine":115,"endColumn":8,"suggestions":"899"},{"ruleId":"787","severity":1,"message":"788","line":167,"column":17,"nodeType":"789","endLine":167,"endColumn":45},{"ruleId":"744","severity":1,"message":"900","line":2,"column":8,"nodeType":"746","messageId":"747","endLine":2,"endColumn":17},{"ruleId":"744","severity":1,"message":"852","line":4,"column":10,"nodeType":"746","messageId":"747","endLine":4,"endColumn":15},{"ruleId":"744","severity":1,"message":"765","line":4,"column":17,"nodeType":"746","messageId":"747","endLine":4,"endColumn":23},{"ruleId":"744","severity":1,"message":"853","line":4,"column":25,"nodeType":"746","messageId":"747","endLine":4,"endColumn":32},{"ruleId":"744","severity":1,"message":"874","line":4,"column":34,"nodeType":"746","messageId":"747","endLine":4,"endColumn":38},{"ruleId":"744","severity":1,"message":"875","line":4,"column":40,"nodeType":"746","messageId":"747","endLine":4,"endColumn":47},{"ruleId":"744","severity":1,"message":"806","line":5,"column":10,"nodeType":"746","messageId":"747","endLine":5,"endColumn":30},{"ruleId":"744","severity":1,"message":"901","line":5,"column":46,"nodeType":"746","messageId":"747","endLine":5,"endColumn":61},{"ruleId":"744","severity":1,"message":"745","line":9,"column":10,"nodeType":"746","messageId":"747","endLine":9,"endColumn":14},{"ruleId":"744","severity":1,"message":"815","line":9,"column":20,"nodeType":"746","messageId":"747","endLine":9,"endColumn":24},{"ruleId":"744","severity":1,"message":"748","line":9,"column":26,"nodeType":"746","messageId":"747","endLine":9,"endColumn":28},{"ruleId":"793","severity":1,"message":"902","line":30,"column":8,"nodeType":"795","endLine":30,"endColumn":10,"suggestions":"903"},{"ruleId":"744","severity":1,"message":"886","line":1,"column":17,"nodeType":"746","messageId":"747","endLine":1,"endColumn":26},{"ruleId":"744","severity":1,"message":"904","line":1,"column":28,"nodeType":"746","messageId":"747","endLine":1,"endColumn":36},{"ruleId":"744","severity":1,"message":"905","line":3,"column":18,"nodeType":"746","messageId":"747","endLine":3,"endColumn":22},{"ruleId":"744","severity":1,"message":"906","line":3,"column":24,"nodeType":"746","messageId":"747","endLine":3,"endColumn":34},{"ruleId":"744","severity":1,"message":"886","line":1,"column":17,"nodeType":"746","messageId":"747","endLine":1,"endColumn":26},{"ruleId":"744","severity":1,"message":"904","line":1,"column":28,"nodeType":"746","messageId":"747","endLine":1,"endColumn":36},{"ruleId":"744","severity":1,"message":"905","line":3,"column":18,"nodeType":"746","messageId":"747","endLine":3,"endColumn":22},{"ruleId":"744","severity":1,"message":"906","line":3,"column":24,"nodeType":"746","messageId":"747","endLine":3,"endColumn":34},{"ruleId":"744","severity":1,"message":"907","line":20,"column":9,"nodeType":"746","messageId":"747","endLine":20,"endColumn":16},{"ruleId":"744","severity":1,"message":"801","line":20,"column":18,"nodeType":"746","messageId":"747","endLine":20,"endColumn":24},{"ruleId":"744","severity":1,"message":"886","line":2,"column":5,"nodeType":"746","messageId":"747","endLine":2,"endColumn":14},{"ruleId":"744","severity":1,"message":"904","line":3,"column":5,"nodeType":"746","messageId":"747","endLine":3,"endColumn":13},{"ruleId":"744","severity":1,"message":"799","line":5,"column":10,"nodeType":"746","messageId":"747","endLine":5,"endColumn":15},{"ruleId":"744","severity":1,"message":"908","line":16,"column":8,"nodeType":"746","messageId":"747","endLine":16,"endColumn":9},{"ruleId":"744","severity":1,"message":"801","line":19,"column":18,"nodeType":"746","messageId":"747","endLine":19,"endColumn":24},{"ruleId":"744","severity":1,"message":"909","line":22,"column":11,"nodeType":"746","messageId":"747","endLine":22,"endColumn":29},{"ruleId":"744","severity":1,"message":"859","line":5,"column":3,"nodeType":"746","messageId":"747","endLine":5,"endColumn":8},{"ruleId":"744","severity":1,"message":"910","line":7,"column":3,"nodeType":"746","messageId":"747","endLine":7,"endColumn":6},{"ruleId":"744","severity":1,"message":"911","line":44,"column":16,"nodeType":"746","messageId":"747","endLine":44,"endColumn":20},{"ruleId":"787","severity":1,"message":"788","line":99,"column":18,"nodeType":"789","endLine":99,"endColumn":47},{"ruleId":"787","severity":1,"message":"788","line":101,"column":18,"nodeType":"789","endLine":101,"endColumn":47},{"ruleId":"787","severity":1,"message":"788","line":103,"column":18,"nodeType":"789","endLine":103,"endColumn":47},{"ruleId":"787","severity":1,"message":"788","line":105,"column":18,"nodeType":"789","endLine":105,"endColumn":47},{"ruleId":"787","severity":1,"message":"788","line":127,"column":11,"nodeType":"789","endLine":134,"endColumn":13},{"ruleId":"787","severity":1,"message":"788","line":139,"column":13,"nodeType":"789","endLine":139,"endColumn":33},{"ruleId":"846","severity":1,"message":"847","line":204,"column":28,"nodeType":"848","messageId":"839","endLine":204,"endColumn":30},{"ruleId":"793","severity":1,"message":"912","line":301,"column":6,"nodeType":"795","endLine":301,"endColumn":18,"suggestions":"913"},{"ruleId":"793","severity":1,"message":"914","line":309,"column":6,"nodeType":"795","endLine":309,"endColumn":8,"suggestions":"915"},{"ruleId":"744","severity":1,"message":"904","line":1,"column":17,"nodeType":"746","messageId":"747","endLine":1,"endColumn":25},{"ruleId":"744","severity":1,"message":"886","line":1,"column":27,"nodeType":"746","messageId":"747","endLine":1,"endColumn":36},{"ruleId":"744","severity":1,"message":"767","line":3,"column":10,"nodeType":"746","messageId":"747","endLine":3,"endColumn":22},{"ruleId":"744","severity":1,"message":"806","line":3,"column":24,"nodeType":"746","messageId":"747","endLine":3,"endColumn":44},{"ruleId":"744","severity":1,"message":"768","line":4,"column":10,"nodeType":"746","messageId":"747","endLine":4,"endColumn":24},{"ruleId":"787","severity":1,"message":"788","line":44,"column":11,"nodeType":"789","endLine":47,"endColumn":13},{"ruleId":"787","severity":1,"message":"788","line":53,"column":13,"nodeType":"789","endLine":56,"endColumn":15},{"ruleId":"787","severity":1,"message":"788","line":61,"column":11,"nodeType":"789","endLine":64,"endColumn":13},{"ruleId":"787","severity":1,"message":"788","line":74,"column":11,"nodeType":"789","endLine":77,"endColumn":13},{"ruleId":"744","severity":1,"message":"765","line":3,"column":3,"nodeType":"746","messageId":"747","endLine":3,"endColumn":9},{"ruleId":"744","severity":1,"message":"916","line":4,"column":3,"nodeType":"746","messageId":"747","endLine":4,"endColumn":11},{"ruleId":"744","severity":1,"message":"859","line":5,"column":3,"nodeType":"746","messageId":"747","endLine":5,"endColumn":8},{"ruleId":"744","severity":1,"message":"910","line":7,"column":3,"nodeType":"746","messageId":"747","endLine":7,"endColumn":6},{"ruleId":"744","severity":1,"message":"917","line":31,"column":10,"nodeType":"746","messageId":"747","endLine":31,"endColumn":12},{"ruleId":"744","severity":1,"message":"918","line":43,"column":9,"nodeType":"746","messageId":"747","endLine":43,"endColumn":26},{"ruleId":"744","severity":1,"message":"909","line":43,"column":28,"nodeType":"746","messageId":"747","endLine":43,"endColumn":46},{"ruleId":"744","severity":1,"message":"919","line":43,"column":48,"nodeType":"746","messageId":"747","endLine":43,"endColumn":64},{"ruleId":"744","severity":1,"message":"911","line":45,"column":16,"nodeType":"746","messageId":"747","endLine":45,"endColumn":20},{"ruleId":"744","severity":1,"message":"920","line":58,"column":10,"nodeType":"746","messageId":"747","endLine":58,"endColumn":18},{"ruleId":"744","severity":1,"message":"921","line":58,"column":20,"nodeType":"746","messageId":"747","endLine":58,"endColumn":31},{"ruleId":"787","severity":1,"message":"788","line":136,"column":11,"nodeType":"789","endLine":143,"endColumn":13},{"ruleId":"787","severity":1,"message":"788","line":148,"column":13,"nodeType":"789","endLine":148,"endColumn":33},{"ruleId":"787","severity":1,"message":"788","line":196,"column":18,"nodeType":"789","endLine":196,"endColumn":47},{"ruleId":"787","severity":1,"message":"788","line":198,"column":18,"nodeType":"789","endLine":198,"endColumn":47},{"ruleId":"787","severity":1,"message":"788","line":200,"column":18,"nodeType":"789","endLine":200,"endColumn":47},{"ruleId":"787","severity":1,"message":"788","line":202,"column":18,"nodeType":"789","endLine":202,"endColumn":47},{"ruleId":"787","severity":1,"message":"788","line":226,"column":11,"nodeType":"789","endLine":233,"endColumn":13},{"ruleId":"787","severity":1,"message":"788","line":238,"column":13,"nodeType":"789","endLine":238,"endColumn":63},{"ruleId":"793","severity":1,"message":"912","line":345,"column":6,"nodeType":"795","endLine":345,"endColumn":18,"suggestions":"922"},{"ruleId":"793","severity":1,"message":"923","line":353,"column":6,"nodeType":"795","endLine":353,"endColumn":15,"suggestions":"924"},{"ruleId":"793","severity":1,"message":"914","line":361,"column":6,"nodeType":"795","endLine":361,"endColumn":8,"suggestions":"925"},{"ruleId":"744","severity":1,"message":"904","line":2,"column":17,"nodeType":"746","messageId":"747","endLine":2,"endColumn":25},{"ruleId":"744","severity":1,"message":"883","line":7,"column":5,"nodeType":"746","messageId":"747","endLine":7,"endColumn":10},{"ruleId":"744","severity":1,"message":"884","line":20,"column":9,"nodeType":"746","messageId":"747","endLine":20,"endColumn":15},{"ruleId":"846","severity":1,"message":"885","line":23,"column":16,"nodeType":"848","messageId":"839","endLine":23,"endColumn":18},{"ruleId":"846","severity":1,"message":"885","line":74,"column":16,"nodeType":"848","messageId":"839","endLine":74,"endColumn":18},{"ruleId":"744","severity":1,"message":"868","line":13,"column":8,"nodeType":"746","messageId":"747","endLine":13,"endColumn":21},{"ruleId":"744","severity":1,"message":"862","line":14,"column":8,"nodeType":"746","messageId":"747","endLine":14,"endColumn":20},{"ruleId":"744","severity":1,"message":"811","line":4,"column":3,"nodeType":"746","messageId":"747","endLine":4,"endColumn":9},{"ruleId":"744","severity":1,"message":"806","line":10,"column":10,"nodeType":"746","messageId":"747","endLine":10,"endColumn":30},{"ruleId":"744","severity":1,"message":"926","line":15,"column":8,"nodeType":"746","messageId":"747","endLine":15,"endColumn":11},{"ruleId":"744","severity":1,"message":"813","line":17,"column":10,"nodeType":"746","messageId":"747","endLine":17,"endColumn":21},{"ruleId":"744","severity":1,"message":"927","line":4,"column":3,"nodeType":"746","messageId":"747","endLine":4,"endColumn":8},{"ruleId":"744","severity":1,"message":"852","line":5,"column":3,"nodeType":"746","messageId":"747","endLine":5,"endColumn":8},{"ruleId":"744","severity":1,"message":"765","line":6,"column":3,"nodeType":"746","messageId":"747","endLine":6,"endColumn":9},{"ruleId":"744","severity":1,"message":"859","line":7,"column":3,"nodeType":"746","messageId":"747","endLine":7,"endColumn":8},{"ruleId":"744","severity":1,"message":"766","line":10,"column":3,"nodeType":"746","messageId":"747","endLine":10,"endColumn":8},{"ruleId":"744","severity":1,"message":"811","line":11,"column":3,"nodeType":"746","messageId":"747","endLine":11,"endColumn":9},{"ruleId":"744","severity":1,"message":"928","line":12,"column":3,"nodeType":"746","messageId":"747","endLine":12,"endColumn":17},{"ruleId":"744","severity":1,"message":"878","line":15,"column":8,"nodeType":"746","messageId":"747","endLine":15,"endColumn":17},{"ruleId":"744","severity":1,"message":"773","line":16,"column":8,"nodeType":"746","messageId":"747","endLine":16,"endColumn":15},{"ruleId":"744","severity":1,"message":"800","line":17,"column":8,"nodeType":"746","messageId":"747","endLine":17,"endColumn":14},{"ruleId":"744","severity":1,"message":"767","line":20,"column":10,"nodeType":"746","messageId":"747","endLine":20,"endColumn":22},{"ruleId":"744","severity":1,"message":"812","line":21,"column":8,"nodeType":"746","messageId":"747","endLine":21,"endColumn":14},{"ruleId":"744","severity":1,"message":"815","line":27,"column":10,"nodeType":"746","messageId":"747","endLine":27,"endColumn":14},{"ruleId":"744","severity":1,"message":"745","line":27,"column":16,"nodeType":"746","messageId":"747","endLine":27,"endColumn":20},{"ruleId":"744","severity":1,"message":"748","line":27,"column":22,"nodeType":"746","messageId":"747","endLine":27,"endColumn":24},{"ruleId":"744","severity":1,"message":"774","line":39,"column":9,"nodeType":"746","messageId":"747","endLine":39,"endColumn":16},{"ruleId":"744","severity":1,"message":"874","line":2,"column":60,"nodeType":"746","messageId":"747","endLine":2,"endColumn":64},{"ruleId":"744","severity":1,"message":"878","line":3,"column":8,"nodeType":"746","messageId":"747","endLine":3,"endColumn":17},{"ruleId":"744","severity":1,"message":"767","line":6,"column":32,"nodeType":"746","messageId":"747","endLine":6,"endColumn":44},{"ruleId":"744","severity":1,"message":"901","line":6,"column":46,"nodeType":"746","messageId":"747","endLine":6,"endColumn":61},{"ruleId":"744","severity":1,"message":"774","line":31,"column":9,"nodeType":"746","messageId":"747","endLine":31,"endColumn":16},{"ruleId":"744","severity":1,"message":"929","line":38,"column":5,"nodeType":"746","messageId":"747","endLine":38,"endColumn":8},{"ruleId":"744","severity":1,"message":"930","line":118,"column":29,"nodeType":"746","messageId":"747","endLine":118,"endColumn":36},{"ruleId":"744","severity":1,"message":"931","line":118,"column":38,"nodeType":"746","messageId":"747","endLine":118,"endColumn":46},{"ruleId":"744","severity":1,"message":"932","line":118,"column":48,"nodeType":"746","messageId":"747","endLine":118,"endColumn":57},{"ruleId":"744","severity":1,"message":"933","line":118,"column":59,"nodeType":"746","messageId":"747","endLine":118,"endColumn":68},{"ruleId":"749","severity":1,"message":"750","line":161,"column":5,"nodeType":"751","messageId":"752","endLine":167,"endColumn":6},{"ruleId":"934","severity":1,"message":"935","line":174,"column":41,"nodeType":"936","messageId":"937","endLine":174,"endColumn":43},{"ruleId":"938","severity":1,"message":"939","line":318,"column":34,"nodeType":"848","messageId":"940","endLine":318,"endColumn":48},{"ruleId":"938","severity":1,"message":"939","line":369,"column":29,"nodeType":"848","messageId":"940","endLine":369,"endColumn":42},{"ruleId":"744","severity":1,"message":"941","line":457,"column":11,"nodeType":"746","messageId":"747","endLine":457,"endColumn":21},{"ruleId":"744","severity":1,"message":"942","line":590,"column":11,"nodeType":"746","messageId":"747","endLine":590,"endColumn":24},{"ruleId":"787","severity":1,"message":"788","line":786,"column":15,"nodeType":"789","endLine":786,"endColumn":63},{"ruleId":"744","severity":1,"message":"943","line":850,"column":5,"nodeType":"746","messageId":"747","endLine":850,"endColumn":12},{"ruleId":"744","severity":1,"message":"933","line":851,"column":11,"nodeType":"746","messageId":"747","endLine":851,"endColumn":20},{"ruleId":"787","severity":1,"message":"788","line":886,"column":15,"nodeType":"789","endLine":886,"endColumn":63},{"ruleId":"749","severity":1,"message":"750","line":917,"column":5,"nodeType":"751","messageId":"752","endLine":920,"endColumn":6},{"ruleId":"749","severity":1,"message":"750","line":922,"column":5,"nodeType":"751","messageId":"752","endLine":925,"endColumn":6},{"ruleId":"744","severity":1,"message":"944","line":1059,"column":61,"nodeType":"746","messageId":"747","endLine":1059,"endColumn":78},{"ruleId":"744","severity":1,"message":"945","line":1059,"column":80,"nodeType":"746","messageId":"747","endLine":1059,"endColumn":85},{"ruleId":"744","severity":1,"message":"933","line":1059,"column":118,"nodeType":"746","messageId":"747","endLine":1059,"endColumn":127},{"ruleId":"744","severity":1,"message":"874","line":2,"column":60,"nodeType":"746","messageId":"747","endLine":2,"endColumn":64},{"ruleId":"744","severity":1,"message":"878","line":3,"column":8,"nodeType":"746","messageId":"747","endLine":3,"endColumn":17},{"ruleId":"744","severity":1,"message":"901","line":6,"column":32,"nodeType":"746","messageId":"747","endLine":6,"endColumn":47},{"ruleId":"744","severity":1,"message":"774","line":31,"column":9,"nodeType":"746","messageId":"747","endLine":31,"endColumn":16},{"ruleId":"744","severity":1,"message":"775","line":33,"column":7,"nodeType":"746","messageId":"747","endLine":33,"endColumn":13},{"ruleId":"744","severity":1,"message":"929","line":38,"column":5,"nodeType":"746","messageId":"747","endLine":38,"endColumn":8},{"ruleId":"836","severity":1,"message":"946","line":75,"column":9,"nodeType":"838","messageId":"839","endLine":75,"endColumn":15},{"ruleId":"749","severity":1,"message":"750","line":116,"column":9,"nodeType":"751","messageId":"752","endLine":122,"endColumn":10},{"ruleId":"934","severity":1,"message":"935","line":129,"column":51,"nodeType":"936","messageId":"937","endLine":129,"endColumn":53},{"ruleId":"934","severity":1,"message":"935","line":168,"column":51,"nodeType":"936","messageId":"937","endLine":168,"endColumn":53},{"ruleId":"744","severity":1,"message":"941","line":277,"column":15,"nodeType":"746","messageId":"747","endLine":277,"endColumn":25},{"ruleId":"744","severity":1,"message":"947","line":277,"column":53,"nodeType":"746","messageId":"747","endLine":277,"endColumn":59},{"ruleId":"744","severity":1,"message":"942","line":350,"column":15,"nodeType":"746","messageId":"747","endLine":350,"endColumn":28},{"ruleId":"787","severity":1,"message":"788","line":554,"column":29,"nodeType":"789","endLine":554,"endColumn":77},{"ruleId":"744","severity":1,"message":"943","line":577,"column":9,"nodeType":"746","messageId":"747","endLine":577,"endColumn":16},{"ruleId":"744","severity":1,"message":"933","line":578,"column":15,"nodeType":"746","messageId":"747","endLine":578,"endColumn":24},{"ruleId":"787","severity":1,"message":"788","line":612,"column":29,"nodeType":"789","endLine":612,"endColumn":77},{"ruleId":"749","severity":1,"message":"750","line":643,"column":9,"nodeType":"751","messageId":"752","endLine":646,"endColumn":10},{"ruleId":"749","severity":1,"message":"750","line":648,"column":9,"nodeType":"751","messageId":"752","endLine":651,"endColumn":10},{"ruleId":"744","severity":1,"message":"827","line":732,"column":17,"nodeType":"746","messageId":"747","endLine":732,"endColumn":27},{"ruleId":"744","severity":1,"message":"828","line":732,"column":29,"nodeType":"746","messageId":"747","endLine":732,"endColumn":37},{"ruleId":"744","severity":1,"message":"829","line":732,"column":39,"nodeType":"746","messageId":"747","endLine":732,"endColumn":45},{"ruleId":"744","severity":1,"message":"948","line":732,"column":47,"nodeType":"746","messageId":"747","endLine":732,"endColumn":55},{"ruleId":"744","severity":1,"message":"945","line":798,"column":97,"nodeType":"746","messageId":"747","endLine":798,"endColumn":102},{"ruleId":"744","severity":1,"message":"949","line":798,"column":135,"nodeType":"746","messageId":"747","endLine":798,"endColumn":157},{"ruleId":"744","severity":1,"message":"806","line":8,"column":10,"nodeType":"746","messageId":"747","endLine":8,"endColumn":30},{"ruleId":"744","severity":1,"message":"767","line":8,"column":32,"nodeType":"746","messageId":"747","endLine":8,"endColumn":44},{"ruleId":"744","severity":1,"message":"748","line":14,"column":20,"nodeType":"746","messageId":"747","endLine":14,"endColumn":22},{"ruleId":"744","severity":1,"message":"745","line":14,"column":10,"nodeType":"746","messageId":"747","endLine":14,"endColumn":14},{"ruleId":"744","severity":1,"message":"765","line":17,"column":8,"nodeType":"746","messageId":"747","endLine":17,"endColumn":14},{"ruleId":"836","severity":1,"message":"950","line":48,"column":5,"nodeType":"838","messageId":"839","endLine":48,"endColumn":13},{"ruleId":"744","severity":1,"message":"872","line":59,"column":9,"nodeType":"746","messageId":"747","endLine":59,"endColumn":22},{"ruleId":"744","severity":1,"message":"872","line":95,"column":9,"nodeType":"746","messageId":"747","endLine":95,"endColumn":22},{"ruleId":"934","severity":1,"message":"935","line":213,"column":41,"nodeType":"936","messageId":"937","endLine":213,"endColumn":43},{"ruleId":"934","severity":1,"message":"935","line":226,"column":47,"nodeType":"936","messageId":"937","endLine":226,"endColumn":49},{"ruleId":"744","severity":1,"message":"849","line":397,"column":23,"nodeType":"746","messageId":"747","endLine":397,"endColumn":28},{"ruleId":"744","severity":1,"message":"951","line":450,"column":21,"nodeType":"746","messageId":"747","endLine":450,"endColumn":36},{"ruleId":"744","severity":1,"message":"866","line":4,"column":5,"nodeType":"746","messageId":"747","endLine":4,"endColumn":11},{"ruleId":"744","severity":1,"message":"867","line":12,"column":8,"nodeType":"746","messageId":"747","endLine":12,"endColumn":14},{"ruleId":"744","severity":1,"message":"765","line":13,"column":8,"nodeType":"746","messageId":"747","endLine":13,"endColumn":14},{"ruleId":"744","severity":1,"message":"868","line":14,"column":8,"nodeType":"746","messageId":"747","endLine":14,"endColumn":21},{"ruleId":"744","severity":1,"message":"861","line":15,"column":8,"nodeType":"746","messageId":"747","endLine":15,"endColumn":24},{"ruleId":"744","severity":1,"message":"745","line":16,"column":10,"nodeType":"746","messageId":"747","endLine":16,"endColumn":14},{"ruleId":"744","severity":1,"message":"876","line":17,"column":8,"nodeType":"746","messageId":"747","endLine":17,"endColumn":15},{"ruleId":"744","severity":1,"message":"952","line":18,"column":8,"nodeType":"746","messageId":"747","endLine":18,"endColumn":14},{"ruleId":"744","severity":1,"message":"953","line":19,"column":8,"nodeType":"746","messageId":"747","endLine":19,"endColumn":11},{"ruleId":"744","severity":1,"message":"954","line":20,"column":8,"nodeType":"746","messageId":"747","endLine":20,"endColumn":11},{"ruleId":"744","severity":1,"message":"955","line":21,"column":8,"nodeType":"746","messageId":"747","endLine":21,"endColumn":13},{"ruleId":"744","severity":1,"message":"855","line":22,"column":10,"nodeType":"746","messageId":"747","endLine":22,"endColumn":22},{"ruleId":"744","severity":1,"message":"800","line":23,"column":8,"nodeType":"746","messageId":"747","endLine":23,"endColumn":14},{"ruleId":"744","severity":1,"message":"807","line":26,"column":9,"nodeType":"746","messageId":"747","endLine":26,"endColumn":15},{"ruleId":"744","severity":1,"message":"870","line":40,"column":15,"nodeType":"746","messageId":"747","endLine":40,"endColumn":21},{"ruleId":"744","severity":1,"message":"871","line":40,"column":23,"nodeType":"746","messageId":"747","endLine":40,"endColumn":28},{"ruleId":"836","severity":1,"message":"956","line":129,"column":13,"nodeType":"838","messageId":"839","endLine":129,"endColumn":26},{"ruleId":"744","severity":1,"message":"872","line":143,"column":13,"nodeType":"746","messageId":"747","endLine":143,"endColumn":26},{"ruleId":"744","severity":1,"message":"883","line":4,"column":5,"nodeType":"746","messageId":"747","endLine":4,"endColumn":10},{"ruleId":"744","severity":1,"message":"884","line":10,"column":9,"nodeType":"746","messageId":"747","endLine":10,"endColumn":15},{"ruleId":"846","severity":1,"message":"885","line":13,"column":16,"nodeType":"848","messageId":"839","endLine":13,"endColumn":18},{"ruleId":"846","severity":1,"message":"885","line":58,"column":16,"nodeType":"848","messageId":"839","endLine":58,"endColumn":18},{"ruleId":"744","severity":1,"message":"957","line":1,"column":17,"nodeType":"746","messageId":"747","endLine":1,"endColumn":26},{"ruleId":"744","severity":1,"message":"904","line":1,"column":39,"nodeType":"746","messageId":"747","endLine":1,"endColumn":47},{"ruleId":"793","severity":1,"message":"958","line":162,"column":6,"nodeType":"795","endLine":162,"endColumn":23,"suggestions":"959"},{"ruleId":"744","severity":1,"message":"868","line":11,"column":8,"nodeType":"746","messageId":"747","endLine":11,"endColumn":21},{"ruleId":"793","severity":1,"message":"960","line":47,"column":6,"nodeType":"795","endLine":47,"endColumn":8,"suggestions":"961"},{"ruleId":"749","severity":1,"message":"750","line":87,"column":5,"nodeType":"751","messageId":"752","endLine":106,"endColumn":6},{"ruleId":"744","severity":1,"message":"886","line":1,"column":27,"nodeType":"746","messageId":"747","endLine":1,"endColumn":36},{"ruleId":"744","severity":1,"message":"900","line":2,"column":8,"nodeType":"746","messageId":"747","endLine":2,"endColumn":17},{"ruleId":"744","severity":1,"message":"852","line":4,"column":10,"nodeType":"746","messageId":"747","endLine":4,"endColumn":15},{"ruleId":"744","severity":1,"message":"765","line":4,"column":17,"nodeType":"746","messageId":"747","endLine":4,"endColumn":23},{"ruleId":"744","severity":1,"message":"874","line":4,"column":34,"nodeType":"746","messageId":"747","endLine":4,"endColumn":38},{"ruleId":"744","severity":1,"message":"875","line":4,"column":40,"nodeType":"746","messageId":"747","endLine":4,"endColumn":47},{"ruleId":"744","severity":1,"message":"767","line":5,"column":32,"nodeType":"746","messageId":"747","endLine":5,"endColumn":44},{"ruleId":"744","severity":1,"message":"901","line":5,"column":46,"nodeType":"746","messageId":"747","endLine":5,"endColumn":61},{"ruleId":"744","severity":1,"message":"868","line":8,"column":8,"nodeType":"746","messageId":"747","endLine":8,"endColumn":21},{"ruleId":"744","severity":1,"message":"745","line":18,"column":10,"nodeType":"746","messageId":"747","endLine":18,"endColumn":14},{"ruleId":"744","severity":1,"message":"815","line":18,"column":20,"nodeType":"746","messageId":"747","endLine":18,"endColumn":24},{"ruleId":"744","severity":1,"message":"748","line":18,"column":26,"nodeType":"746","messageId":"747","endLine":18,"endColumn":28},{"ruleId":"744","severity":1,"message":"801","line":16,"column":9,"nodeType":"746","messageId":"747","endLine":16,"endColumn":15},{"ruleId":"744","severity":1,"message":"896","line":16,"column":26,"nodeType":"746","messageId":"747","endLine":16,"endColumn":32},{"ruleId":"744","severity":1,"message":"897","line":16,"column":34,"nodeType":"746","messageId":"747","endLine":16,"endColumn":39},{"ruleId":"793","severity":1,"message":"962","line":94,"column":6,"nodeType":"795","endLine":94,"endColumn":22,"suggestions":"963"},{"ruleId":"793","severity":1,"message":"964","line":103,"column":6,"nodeType":"795","endLine":103,"endColumn":21,"suggestions":"965"},{"ruleId":"793","severity":1,"message":"966","line":231,"column":6,"nodeType":"795","endLine":231,"endColumn":26,"suggestions":"967"},{"ruleId":"744","severity":1,"message":"968","line":1,"column":38,"nodeType":"746","messageId":"747","endLine":1,"endColumn":44},{"ruleId":"744","severity":1,"message":"905","line":5,"column":3,"nodeType":"746","messageId":"747","endLine":5,"endColumn":7},{"ruleId":"744","severity":1,"message":"906","line":6,"column":3,"nodeType":"746","messageId":"747","endLine":6,"endColumn":13},{"ruleId":"744","severity":1,"message":"969","line":13,"column":3,"nodeType":"746","messageId":"747","endLine":13,"endColumn":11},{"ruleId":"744","severity":1,"message":"801","line":42,"column":18,"nodeType":"746","messageId":"747","endLine":42,"endColumn":24},{"ruleId":"744","severity":1,"message":"970","line":56,"column":10,"nodeType":"746","messageId":"747","endLine":56,"endColumn":17},{"ruleId":"744","severity":1,"message":"971","line":56,"column":19,"nodeType":"746","messageId":"747","endLine":56,"endColumn":29},{"ruleId":"787","severity":1,"message":"788","line":152,"column":11,"nodeType":"789","endLine":152,"endColumn":29},{"ruleId":"787","severity":1,"message":"788","line":154,"column":11,"nodeType":"789","endLine":154,"endColumn":32},{"ruleId":"787","severity":1,"message":"788","line":158,"column":11,"nodeType":"789","endLine":158,"endColumn":29},{"ruleId":"787","severity":1,"message":"788","line":160,"column":11,"nodeType":"789","endLine":160,"endColumn":32},{"ruleId":"787","severity":1,"message":"788","line":164,"column":11,"nodeType":"789","endLine":164,"endColumn":30},{"ruleId":"787","severity":1,"message":"788","line":166,"column":11,"nodeType":"789","endLine":166,"endColumn":33},{"ruleId":"787","severity":1,"message":"788","line":170,"column":11,"nodeType":"789","endLine":170,"endColumn":30},{"ruleId":"787","severity":1,"message":"788","line":172,"column":11,"nodeType":"789","endLine":172,"endColumn":33},{"ruleId":"787","severity":1,"message":"788","line":176,"column":11,"nodeType":"789","endLine":176,"endColumn":29},{"ruleId":"787","severity":1,"message":"788","line":178,"column":11,"nodeType":"789","endLine":178,"endColumn":32},{"ruleId":"787","severity":1,"message":"788","line":182,"column":11,"nodeType":"789","endLine":182,"endColumn":29},{"ruleId":"787","severity":1,"message":"788","line":184,"column":11,"nodeType":"789","endLine":184,"endColumn":32},{"ruleId":"787","severity":1,"message":"788","line":188,"column":11,"nodeType":"789","endLine":188,"endColumn":29},{"ruleId":"787","severity":1,"message":"788","line":190,"column":11,"nodeType":"789","endLine":190,"endColumn":32},{"ruleId":"793","severity":1,"message":"972","line":248,"column":6,"nodeType":"795","endLine":248,"endColumn":29,"suggestions":"973"},{"ruleId":"793","severity":1,"message":"974","line":270,"column":6,"nodeType":"795","endLine":270,"endColumn":25,"suggestions":"975"},{"ruleId":"793","severity":1,"message":"976","line":292,"column":6,"nodeType":"795","endLine":292,"endColumn":13,"suggestions":"977"},{"ruleId":"793","severity":1,"message":"978","line":319,"column":6,"nodeType":"795","endLine":319,"endColumn":44,"suggestions":"979"},{"ruleId":"793","severity":1,"message":"980","line":330,"column":6,"nodeType":"795","endLine":330,"endColumn":17,"suggestions":"981"},{"ruleId":"744","severity":1,"message":"908","line":4,"column":8,"nodeType":"746","messageId":"747","endLine":4,"endColumn":9},{"ruleId":"744","severity":1,"message":"886","line":6,"column":10,"nodeType":"746","messageId":"747","endLine":6,"endColumn":19},{"ruleId":"744","severity":1,"message":"883","line":4,"column":5,"nodeType":"746","messageId":"747","endLine":4,"endColumn":10},{"ruleId":"846","severity":1,"message":"885","line":16,"column":16,"nodeType":"848","messageId":"839","endLine":16,"endColumn":18},{"ruleId":"846","severity":1,"message":"885","line":67,"column":16,"nodeType":"848","messageId":"839","endLine":67,"endColumn":18},{"ruleId":"846","severity":1,"message":"885","line":101,"column":16,"nodeType":"848","messageId":"839","endLine":101,"endColumn":18},{"ruleId":"744","severity":1,"message":"887","line":2,"column":10,"nodeType":"746","messageId":"747","endLine":2,"endColumn":20},{"ruleId":"744","severity":1,"message":"905","line":4,"column":5,"nodeType":"746","messageId":"747","endLine":4,"endColumn":9},{"ruleId":"744","severity":1,"message":"764","line":5,"column":5,"nodeType":"746","messageId":"747","endLine":5,"endColumn":12},{"ruleId":"744","severity":1,"message":"765","line":6,"column":5,"nodeType":"746","messageId":"747","endLine":6,"endColumn":11},{"ruleId":"744","severity":1,"message":"766","line":7,"column":5,"nodeType":"746","messageId":"747","endLine":7,"endColumn":10},{"ruleId":"744","severity":1,"message":"745","line":15,"column":10,"nodeType":"746","messageId":"747","endLine":15,"endColumn":14},{"ruleId":"744","severity":1,"message":"815","line":15,"column":20,"nodeType":"746","messageId":"747","endLine":15,"endColumn":24},{"ruleId":"744","severity":1,"message":"868","line":16,"column":8,"nodeType":"746","messageId":"747","endLine":16,"endColumn":21},{"ruleId":"934","severity":1,"message":"935","line":49,"column":36,"nodeType":"936","messageId":"937","endLine":49,"endColumn":38},{"ruleId":"934","severity":1,"message":"935","line":65,"column":32,"nodeType":"936","messageId":"937","endLine":65,"endColumn":34},{"ruleId":"934","severity":1,"message":"935","line":74,"column":37,"nodeType":"936","messageId":"937","endLine":74,"endColumn":39},{"ruleId":"934","severity":1,"message":"935","line":80,"column":23,"nodeType":"936","messageId":"937","endLine":80,"endColumn":25},{"ruleId":"934","severity":1,"message":"935","line":82,"column":31,"nodeType":"936","messageId":"937","endLine":82,"endColumn":33},{"ruleId":"846","severity":1,"message":"885","line":86,"column":32,"nodeType":"848","messageId":"839","endLine":86,"endColumn":34},{"ruleId":"793","severity":1,"message":"982","line":104,"column":8,"nodeType":"795","endLine":104,"endColumn":10,"suggestions":"983"},{"ruleId":"934","severity":1,"message":"935","line":114,"column":39,"nodeType":"936","messageId":"937","endLine":114,"endColumn":41},{"ruleId":"934","severity":1,"message":"935","line":115,"column":49,"nodeType":"936","messageId":"937","endLine":115,"endColumn":51},{"ruleId":"846","severity":1,"message":"847","line":124,"column":39,"nodeType":"848","messageId":"839","endLine":124,"endColumn":41},{"ruleId":"934","severity":1,"message":"935","line":137,"column":39,"nodeType":"936","messageId":"937","endLine":137,"endColumn":41},{"ruleId":"793","severity":1,"message":"984","line":152,"column":8,"nodeType":"795","endLine":152,"endColumn":20,"suggestions":"985"},{"ruleId":"790","severity":1,"message":"986","line":202,"column":21,"nodeType":"789","endLine":207,"endColumn":22},{"ruleId":"744","severity":1,"message":"886","line":2,"column":5,"nodeType":"746","messageId":"747","endLine":2,"endColumn":14},{"ruleId":"744","severity":1,"message":"904","line":3,"column":5,"nodeType":"746","messageId":"747","endLine":3,"endColumn":13},{"ruleId":"744","severity":1,"message":"799","line":5,"column":10,"nodeType":"746","messageId":"747","endLine":5,"endColumn":15},{"ruleId":"744","severity":1,"message":"908","line":16,"column":8,"nodeType":"746","messageId":"747","endLine":16,"endColumn":9},{"ruleId":"744","severity":1,"message":"801","line":19,"column":18,"nodeType":"746","messageId":"747","endLine":19,"endColumn":24},{"ruleId":"744","severity":1,"message":"909","line":22,"column":11,"nodeType":"746","messageId":"747","endLine":22,"endColumn":29},"no-unused-vars","'mTop' is defined but never used.","Identifier","unusedVar","'pX' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","no-native-reassign",["987"],"no-negated-in-lhs",["988"],"'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SyncOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'SubMenu' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'bluData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'resize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.","ArrayExpression",["989"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["990"],"'Image' is defined but never used.","'moment' is defined but never used.","'Header' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["991"],"'BrowserRouter' is defined but never used.","'Praviders' is defined but never used.","'createFromIconfontCN' is defined but never used.","'Option' is assigned a value but never used.","'Alert' is defined but never used.","'InfoCircleOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'Select' is defined but never used.","'MaxMin' is defined but never used.","'FetchEszVet' is defined but never used.","'gender' is defined but never used.","'MTop' is defined but never used.","'stopBubble' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","'Tooltip' is defined but never used.","'biggieSave' is assigned a value but never used.","'gender' is assigned a value but never used.","'lastConnectionTime' is assigned a value but never used.","no-dupe-keys","Duplicate key '194'.","ObjectExpression","unexpected","'weightUnits' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["992","993"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","'petId' is assigned a value but never used.","'pas' is assigned a value but never used.","'temp15' is assigned a value but never used.","'Input' is defined but never used.","'message' is defined but never used.","'mellaLogo' is defined but never used.","'fetchRequest' is defined but never used.","'lastOrganization' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'Form' is defined but never used.","'Space' is defined but never used.","'fetchRequest2' is defined but never used.","'temporaryStorage' is defined but never used.","'SelectionBox' is defined but never used.","'selectDeviceName' is assigned a value but never used.","'isClicleStudy' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.","'Switch' is defined but never used.","'Slider' is defined but never used.","'electronStore' is defined but never used.","'parseGeoJSON' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'isUnKnow' is assigned a value but never used.","'Spin' is defined but never used.","'BackTop' is defined but never used.","'MyModal' is defined but never used.","'num07' is assigned a value but never used.","'Draggable' is defined but never used.","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'token' is assigned a value but never used.","'header' is assigned a value but never used.","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'blueSearch' is defined but never used.","'MouseDiv' is defined but never used.","'back_white' is defined but never used.","'back_hui' is defined but never used.","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["994"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["995"],"'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["996"],"'PropTypes' is defined but never used.","'LoadingOutlined' is defined but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["997"],"'useState' is defined but never used.","'Menu' is defined but never used.","'PageHeader' is defined but never used.","'Content' is assigned a value but never used.","'_' is defined but never used.","'mellaConnectStatus' is assigned a value but never used.","'Tag' is defined but never used.","'memo' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["998"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["999"],"'Progress' is defined but never used.","'px' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'mellaMeasurePart' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.",["1000"],"React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["1001"],["1002"],"'dui' is defined but never used.","'Table' is defined but never used.","'ConfigProvider' is defined but never used.","'url' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'breedName' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","'petSpecies' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'options' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","Duplicate key 'imgurl'.","'imgurl' is assigned a value but never used.","'disabled' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","Duplicate key 'disabled'.","'assignOwnerName' is assigned a value but never used.","'parent' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","Duplicate key 'connectionKey'.","'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1003"],"React Hook useEffect has missing dependencies: '_getExam' and 'petList'. Either include them or remove the dependency array. You can also do a functional update 'setPetList(p => ...)' if you only need 'petList' in the 'setPetList' call.",["1004"],"React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["1005"],"React Hook useEffect has a missing dependency: 'setBiggieConnectStatusFun'. Either include it or remove the dependency array. If 'setBiggieConnectStatusFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1006"],"React Hook useEffect has missing dependencies: 'hardwareList' and 'selectHardwareInfo'. Either include them or remove the dependency array.",["1007"],"'useRef' is defined but never used.","'Carousel' is defined but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["1008"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1009"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["1010"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["1011"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1012"],"React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["1013"],"React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["1014"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"1015","fix":"1016"},{"desc":"1017","fix":"1018"},{"desc":"1019","fix":"1020"},{"messageId":"1021","fix":"1022","desc":"1023"},{"messageId":"1024","fix":"1025","desc":"1026"},{"desc":"1027","fix":"1028"},{"desc":"1029","fix":"1030"},{"desc":"1031","fix":"1032"},{"desc":"1033","fix":"1034"},{"desc":"1035","fix":"1036"},{"desc":"1037","fix":"1038"},{"desc":"1035","fix":"1039"},{"desc":"1040","fix":"1041"},{"desc":"1037","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1045","fix":"1046"},{"desc":"1047","fix":"1048"},{"desc":"1049","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1053","fix":"1054"},{"desc":"1055","fix":"1056"},{"desc":"1057","fix":"1058"},{"desc":"1059","fix":"1060"},{"desc":"1061","fix":"1062"},{"desc":"1063","fix":"1064"},{"desc":"1065","fix":"1066"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1067","text":"1068"},"Update the dependencies array to be: []",{"range":"1069","text":"1070"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1071","text":"1072"},"removeEscape",{"range":"1073","text":"1074"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1075","text":"1076"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1077","text":"1078"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1079","text":"1080"},"Update the dependencies array to be: [hardwareList]",{"range":"1081","text":"1082"},"Update the dependencies array to be: [_getExam]",{"range":"1083","text":"1084"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1085","text":"1086"},"Update the dependencies array to be: [storage.userId]",{"range":"1087","text":"1088"},{"range":"1089","text":"1086"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1090","text":"1091"},{"range":"1092","text":"1088"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"1093","text":"1094"},"Update the dependencies array to be: [_getExam, petList]",{"range":"1095","text":"1096"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"1097","text":"1098"},"Update the dependencies array to be: [petDetailInfo, setBiggieConnectStatusFun]",{"range":"1099","text":"1100"},"Update the dependencies array to be: [hardwareList, selectHardwareInfo, selectHardwareType]",{"range":"1101","text":"1102"},"Update the dependencies array to be: [finishScan, inputIndex, newData, patientId]",{"range":"1103","text":"1104"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1105","text":"1106"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"1109","text":"1110"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"1111","text":"1112"},"Update the dependencies array to be: [listDate]",{"range":"1113","text":"1114"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1115","text":"1116"},[43924,43926],"[_noUSB, _send, blueSearch]",[44265,44291],"[]",[2354,2369],"[callBack, carouselIndex]",[75103,75104],"",[75103,75103],"\\",[2680,2682],"[setReceiveBroadcastHardwareInfoFun]",[3991,4021],"[devicesList, receiveBroadcastHardwareInfo]",[3289,3291],"[hardwareList]",[1031,1033],"[_getExam]",[8309,8321],"[getPetTemperatureData, petMessage]",[8517,8519],"[storage.userId]",[9440,9452],[9608,9617],"[getPetTemperatureData, reRender, saveNum]",[9813,9815],[4564,4581],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[1460,1462],"[_getExam, petList]",[2917,2933],"[hardwareReduce, weight]",[3130,3145],"[petDetailInfo, setBiggieConnectStatusFun]",[7225,7245],"[hardwareList, selectHardwareInfo, selectHardwareType]",[6560,6583],"[finishScan, inputIndex, newData, patientId]",[7054,7073],"[inputIndex, rulerConfirmCount]",[7708,7715],"[petId, petLengthDataConvert, petMessage]",[8357,8395],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[8829,8840],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[3366,3368],"[listDate]",[5113,5125],"[letterListCopy, phoneListCopy, searchText]"]