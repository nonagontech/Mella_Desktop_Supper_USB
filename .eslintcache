[{"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx":"1","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\settings\\Settings.jsx":"2","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js":"3","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx":"4","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx":"5","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx":"6","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.js":"7","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx":"8","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js":"9","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx":"10","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx":"11","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"12","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx":"13","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\swabPetEar\\index.jsx":"14","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\experimental\\index.jsx":"15","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js":"16","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx":"17","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx":"18","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"19","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx":"20","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\timer\\index.jsx":"21","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\linkEquipment\\index.jsx":"22","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx":"23","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"24","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\home\\Home.jsx":"25","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\advancedSettings\\AdvancedSettings.jsx":"26","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"27","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"28","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx":"29","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx":"30","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx":"31","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx":"32","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx":"33","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx":"34","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx":"35","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx":"36","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"37","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"38","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx":"39","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx":"40","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx":"41","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\help\\Help.jsx":"42","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\SignIn.jsx":"43","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx":"44","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\App.js":"45","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx":"46","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectMella\\SelectMella.jsx":"47","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx":"48","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectScheduledExam.jsx":"49","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx":"50","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx":"51","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx":"52","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx":"53","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx":"54","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx":"55","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil2.js":"56","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js":"57","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\index.js":"58","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js":"59","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js":"60","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js":"61","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js":"62","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js":"63","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js":"64","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\hardwareAction.js":"65","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js":"66","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx":"67","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js":"68","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"69","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\Fetch_token.js":"70"},{"size":141795,"mtime":1660039584357,"results":"71","hashOfConfig":"72"},{"size":25269,"mtime":1660292191032,"results":"73","hashOfConfig":"72"},{"size":2445,"mtime":1660039584374,"results":"74","hashOfConfig":"72"},{"size":14685,"mtime":1657699131947,"results":"75","hashOfConfig":"72"},{"size":2162,"mtime":1660122220025,"results":"76","hashOfConfig":"72"},{"size":1575,"mtime":1660122892316,"results":"77","hashOfConfig":"72"},{"size":6913,"mtime":1660273224917,"results":"78","hashOfConfig":"72"},{"size":2259,"mtime":1660123074629,"results":"79","hashOfConfig":"72"},{"size":3044,"mtime":1655168677819,"results":"80","hashOfConfig":"72"},{"size":8152,"mtime":1656067360425,"results":"81","hashOfConfig":"72"},{"size":3569,"mtime":1660200016614,"results":"82","hashOfConfig":"72"},{"size":10994,"mtime":1660214689148,"results":"83","hashOfConfig":"72"},{"size":1562,"mtime":1657271071421,"results":"84","hashOfConfig":"72"},{"size":2695,"mtime":1658483746593,"results":"85","hashOfConfig":"72"},{"size":2508,"mtime":1658483803920,"results":"86","hashOfConfig":"72"},{"size":75,"mtime":1660039606364,"results":"87","hashOfConfig":"72"},{"size":3450,"mtime":1660122215508,"results":"88","hashOfConfig":"72"},{"size":12986,"mtime":1657699200148,"results":"89","hashOfConfig":"72"},{"size":6751,"mtime":1660196282287,"results":"90","hashOfConfig":"72"},{"size":8791,"mtime":1660299558329,"results":"91","hashOfConfig":"72"},{"size":1201,"mtime":1658485132416,"results":"92","hashOfConfig":"72"},{"size":1738,"mtime":1658479581468,"results":"93","hashOfConfig":"72"},{"size":1232,"mtime":1657622269661,"results":"94","hashOfConfig":"72"},{"size":11905,"mtime":1660208145497,"results":"95","hashOfConfig":"72"},{"size":5021,"mtime":1660296196879,"results":"96","hashOfConfig":"72"},{"size":9454,"mtime":1660025444490,"results":"97","hashOfConfig":"72"},{"size":53620,"mtime":1660299902571,"results":"98","hashOfConfig":"72"},{"size":57590,"mtime":1660289408165,"results":"99","hashOfConfig":"72"},{"size":32102,"mtime":1660098807708,"results":"100","hashOfConfig":"72"},{"size":7364,"mtime":1660272475546,"results":"101","hashOfConfig":"72"},{"size":9487,"mtime":1660272886460,"results":"102","hashOfConfig":"72"},{"size":35730,"mtime":1660099518792,"results":"103","hashOfConfig":"72"},{"size":5380,"mtime":1660113149680,"results":"104","hashOfConfig":"72"},{"size":40043,"mtime":1660122503204,"results":"105","hashOfConfig":"72"},{"size":9657,"mtime":1660270006396,"results":"106","hashOfConfig":"72"},{"size":37093,"mtime":1660126016822,"results":"107","hashOfConfig":"72"},{"size":17192,"mtime":1660206390671,"results":"108","hashOfConfig":"72"},{"size":16139,"mtime":1660209371349,"results":"109","hashOfConfig":"72"},{"size":8651,"mtime":1660211996599,"results":"110","hashOfConfig":"72"},{"size":4230,"mtime":1660272077396,"results":"111","hashOfConfig":"72"},{"size":10697,"mtime":1660282877116,"results":"112","hashOfConfig":"72"},{"size":4460,"mtime":1660293862756,"results":"113","hashOfConfig":"72"},{"size":17834,"mtime":1660297296635,"results":"114","hashOfConfig":"72"},{"size":8753,"mtime":1660299992454,"results":"115","hashOfConfig":"72"},{"size":7380,"mtime":1659921321634,"results":"116","hashOfConfig":"72"},{"size":3737,"mtime":1655168677392,"results":"117","hashOfConfig":"72"},{"size":3973,"mtime":1655168677493,"results":"118","hashOfConfig":"72"},{"size":5178,"mtime":1655168677434,"results":"119","hashOfConfig":"72"},{"size":39476,"mtime":1655467295805,"results":"120","hashOfConfig":"72"},{"size":17372,"mtime":1655168677415,"results":"121","hashOfConfig":"72"},{"size":17948,"mtime":1657786565842,"results":"122","hashOfConfig":"72"},{"size":13023,"mtime":1655168677410,"results":"123","hashOfConfig":"72"},{"size":13209,"mtime":1658121326034,"results":"124","hashOfConfig":"72"},{"size":4706,"mtime":1655168677413,"results":"125","hashOfConfig":"72"},{"size":39339,"mtime":1660039584366,"results":"126","hashOfConfig":"72"},{"size":2667,"mtime":1655168677528,"results":"127","hashOfConfig":"72"},{"size":1451,"mtime":1655168677805,"results":"128","hashOfConfig":"72"},{"size":431,"mtime":1655168677773,"results":"129","hashOfConfig":"72"},{"size":697,"mtime":1655467295909,"results":"130","hashOfConfig":"72"},{"size":4641,"mtime":1656498255379,"results":"131","hashOfConfig":"72"},{"size":91,"mtime":1655467295880,"results":"132","hashOfConfig":"72"},{"size":2103,"mtime":1656498255375,"results":"133","hashOfConfig":"72"},{"size":1041,"mtime":1655168677775,"results":"134","hashOfConfig":"72"},{"size":89,"mtime":1655467295873,"results":"135","hashOfConfig":"72"},{"size":3856,"mtime":1656498255377,"results":"136","hashOfConfig":"72"},{"size":224,"mtime":1655467295875,"results":"137","hashOfConfig":"72"},{"size":1365,"mtime":1655880805276,"results":"138","hashOfConfig":"72"},{"size":4449,"mtime":1655168677816,"results":"139","hashOfConfig":"72"},{"size":8224,"mtime":1657874652863,"results":"140","hashOfConfig":"72"},{"size":3717,"mtime":1655168677531,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1wlgw0n",{"filePath":"144","messages":"145","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"151"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"157","messages":"158","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"164"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"151"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"164"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"151"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"164"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"184","messages":"185","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"151"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"197","messages":"198","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"151"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"202","messages":"203","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"151"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"207","messages":"208","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"151"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":1,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"216","messages":"217","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"151"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"151"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"151"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"151"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"244","messages":"245","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"254","messages":"255","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"256","messages":"257","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"258","messages":"259","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"264","messages":"265","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"268","messages":"269","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"298","messages":"299","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\measure\\NorMalMeasurement.jsx",["300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\settings\\Settings.jsx",["324","325","326","327","328","329","330","331","332","333"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\minClose\\MinClose.js",["334","335","336"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\AddDevice.jsx",["337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Input, Button, message, Spin, BackTop } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate'\r\nimport electronStore from '../../utils/electronStore';\r\nimport blueSearch from './../../assets/img/blueSerch.png'\r\nimport biggieHome from './../../assets/img/searchType-biggieHome.png'\r\nimport biggiePro from './../../assets/img/searchType-biggiePro.png'\r\nimport mellaHome from './../../assets/img/searchType-home.png'\r\nimport mellaPro from './../../assets/img/searchType-mellaPro.png'\r\nimport maeBowl from './../../assets/img/searchType-maeBowl.png'\r\nimport other from './../../assets/img/searchType-other.png'\r\nimport possum from './../../assets/img/searchType-possum.png'\r\nimport rfid from './../../assets/img/searchType-rfid.png'\r\nimport MinClose from '../../utils/minClose/MinClose'\r\nimport MouseDiv from '../../utils/mouseDiv/MouseDiv'\r\nimport back_white from '../../assets/img/back-white.png'\r\nimport back_hui from '../../assets/img/back-hui.png'\r\nimport redclose from '../../assets/img/redclose.png'\r\nimport MyModal from './../../utils/myModal/MyModal'\r\nimport { mTop, px, MTop, pX } from '../../utils/px';\r\nimport './mainbody.less'\r\nimport { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList } from '../../store/actions';\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst AddDevice = ({ bodyHeight, hardwareReducer, isHaveUsbDevice, receiveBroadcastHardwareInfo, hardwareList, setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }) => {\r\n    //是否有底座设备\r\n    const [noUSB, setNoUSB] = useState(false)\r\n    //设备列表\r\n    const [devicesList, setDevicesList] = useState([])\r\n    //选择的设备\r\n    const [selectDevice, setSelectDevice] = useState(null)\r\n    //重命名\r\n    const [reName, setReName] = useState('')\r\n    //房间号\r\n    const [examRoom, setExamRoom] = useState('')\r\n    //已经保存过的设备的macid\r\n    const [saveDeviceMac, setSaveDeviceMac] = useState([])\r\n    //顶部文本\r\n    const [topText, setTopText] = useState(' Pair Device')\r\n\r\n    //初始化\r\n    useEffect(() => {\r\n        setNoUSB(false)\r\n        setDevicesList([])\r\n        setSelectDevice(null)\r\n        setReName('')\r\n        setSaveDeviceMac([])\r\n        setTopText(' Pair Device')\r\n        //组件渲染完毕后要先清空广播的硬件信息\r\n        setReceiveBroadcastHardwareInfoFun({\r\n            deviceType: '',\r\n            macId: '',\r\n            name: ''\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (hardwareList.length > 0) {\r\n            let saveDeviceMac = []\r\n            for (let i = 0; i < hardwareList.length; i++) {\r\n                const element = hardwareList[i];\r\n                for (let j = 0; j < element.devices.length; j++) {\r\n                    const device = element.devices[j];\r\n                    saveDeviceMac.push(device.mac)\r\n                }\r\n            }\r\n            setSaveDeviceMac(saveDeviceMac)\r\n\r\n        }\r\n    }, [hardwareList])\r\n    useEffect(() => {\r\n        if (!selectDevice) {\r\n            setTopText(' Pair Device')\r\n        } else {\r\n            setTopText('Device Connected')\r\n        }\r\n\r\n    }, [selectDevice])\r\n    useEffect(() => {\r\n        setNoUSB(!isHaveUsbDevice)\r\n    }, [isHaveUsbDevice])\r\n    useEffect(() => {\r\n        let sameFlog = devicesList.some((device, index) => {\r\n            return device.macId === receiveBroadcastHardwareInfo.macId\r\n        })\r\n        if (sameFlog || !receiveBroadcastHardwareInfo.macId) {   //重复直接退出\r\n            return\r\n        }\r\n        console.log('receiveBroadcastHardwareInfo', devicesList, receiveBroadcastHardwareInfo);\r\n        let deviceArr = [].concat(devicesList)\r\n        deviceArr.push(receiveBroadcastHardwareInfo)\r\n        setDevicesList(deviceArr)\r\n\r\n\r\n\r\n    }, [receiveBroadcastHardwareInfo])\r\n\r\n    const addDevice = () => {\r\n        //从redux拿到列表中的所有硬件设备 hardwareList\r\n        console.log('hardwareList', hardwareList);\r\n        //拿到硬件的macid 类型 名称 房间号\r\n        console.log('selectDevice', selectDevice);\r\n        let sameFlog = hardwareList.some((item, index) => {\r\n            return item.type === selectDevice.deviceType\r\n        })\r\n        let hardwareArr = [].concat(hardwareList)\r\n        let { deviceType, macId, name } = selectDevice\r\n        let newDevice = {\r\n            name: reName || name,\r\n            mac: macId,\r\n            deviceType,\r\n            examRoom: examRoom || '',\r\n        }\r\n        console.log('newDevice', newDevice);\r\n        if (sameFlog) {\r\n            //相同就代表有这个硬件类型,可以直接去push\r\n\r\n            for (let i = 0; i < hardwareArr.length; i++) {\r\n                if (hardwareArr[i].type === selectDevice.deviceType) {\r\n                    hardwareArr[i].devices.push(newDevice)\r\n                    break\r\n                }\r\n            }\r\n\r\n        } else {\r\n            //没有就要新建一个硬件类型\r\n            let json = {\r\n                type: selectDevice.deviceType,\r\n                devices: [newDevice]\r\n            }\r\n            hardwareArr.push(json)\r\n        }\r\n        setReName('')\r\n        setExamRoom('')\r\n        setHardwareList(hardwareArr)\r\n\r\n        return newDevice\r\n\r\n\r\n    }\r\n\r\n    const body = () => {\r\n\r\n        if (selectDevice) {\r\n            return <div className=\"addDevice1 flex\">\r\n                <div className=\"addDeviceTop flex\">\r\n                    <div className=\"title\" style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(20) }}>Would you like to name<br />\r\n                        {`this ${selectDevice.name} device?`}</div>\r\n\r\n                    <div className=\"title\" style={{ fontSize: px(24), marginBottom: px(40), }}>\r\n                        {`SN: ${selectDevice.macId}`}</div>\r\n\r\n\r\n                    <div className=\"input flex\" style={{ marginBottom: px(20), width: px(400) }}>\r\n                        <input type=\"text\" style={{ height: px(45) }}\r\n                            value={reName}\r\n                            onChange={(value) => {\r\n                                setReName(value.target.value)\r\n\r\n                            }}\r\n                            placeholder={`${selectDevice.name} Device Name`}\r\n                        />\r\n                    </div>\r\n                    <div className=\"input flex\" style={{ marginBottom: px(60), width: px(400) }}>\r\n                        <input type=\"text\" style={{ height: px(45) }}\r\n                            value={examRoom}\r\n                            onChange={(value) => {\r\n                                setExamRoom(value.target.value)\r\n\r\n                            }}\r\n                            placeholder={`Exam Room Name`}\r\n                        />\r\n                    </div>\r\n                    <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\r\n                        on the Exam Room. Write<br /> the name\r\n                        on the sticker provided so it is easy\r\n                        to select<br /> your device in the future.</div>\r\n                </div>\r\n                <div className=\"addDeviceFoot flex\">\r\n                    <div className=\"btn\"\r\n                        onClick={() => {\r\n                            addDevice()\r\n                            setSelectDevice(null)\r\n                            setSelectHardwareType('add')\r\n\r\n                        }}\r\n                    >\r\n                        <p className='btnText'>Add Another Device</p>\r\n                    </div>\r\n                    <div className=\"btn\"\r\n                        onClick={() => {\r\n                            let newDevice = addDevice()\r\n                            setSelectHardwareType(selectDevice.deviceType)\r\n\r\n\r\n                            electronStore.set(`${storage.lastOrganization}-${storage.userId}-${selectDevice.deviceType}-selectDeviceInfo`, newDevice)\r\n                            setSelectDevice(null)\r\n                        }}\r\n                    >\r\n                        <p className='btnText'>Finish</p>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        } else {\r\n            if (noUSB) {\r\n                return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\r\n                    <img src={redclose} alt=\"\" style={{ width: px(80) }} />\r\n\r\n                    <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\r\n                </div>\r\n            } else {\r\n                if (devicesList.length === 0) {\r\n                    let options = (val) => {\r\n                        let arr = []\r\n                        if (val === 1) {\r\n                            arr = [mellaPro, mellaHome, biggiePro, biggieHome, rfid]\r\n                        } else {\r\n                            arr = [possum, maeBowl, other]\r\n                        }\r\n                        let option = arr.map((item, index) => {\r\n                            let imgWidth = px(80)\r\n                            imgWidth = index === 2 ? px(65) : imgWidth\r\n                            return (<li key={index.toString()} style={{ margin: `${px(20)}px` }}>\r\n                                <div className=\"searchType-item\" key={index} >\r\n                                    <img src={item} alt=\"\" width={imgWidth} />\r\n                                </div>\r\n                            </li>)\r\n                        })\r\n                        return (\r\n                            <ul>\r\n                                {option}\r\n                            </ul>\r\n                        )\r\n                    }\r\n                    return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n\r\n\r\n                        <div className=\"addDeviceContent\">\r\n                            <div className=\"blueAnimal\" style={{ marginTop: px(50) }}>\r\n                                {/* <img src={blueSearch} alt=\"\" width={px(150)} /> */}\r\n                                <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                                    <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"openText\" style={{ margin: `${px(15)}px 0` }}>\r\n                                Make sure your bluetooth and wifi is<br /> activated and turn on your device.\r\n                            </div>\r\n                            <div className=\"btn\" style={{ width: px(350), height: px(40) }}>\r\n                                <div className=\"btnText\">\r\n                                    Scan For Devices\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"or\" style={{ marginTop: px(10), marginBottom: px(15) }}>\r\n                                Or\r\n                            </div>\r\n                            <div className=\"select\">\r\n                                Select device type to\r\n                            </div>\r\n                            <div className=\"add\">\r\n                                add manually\r\n                            </div>\r\n\r\n                            <div className=\"item\">\r\n                                {options(1)}\r\n                                {options(2)}\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\r\n                          \r\n                            <p>\r\n                                {'searching...'}\r\n                            </p>\r\n                        </div> */}\r\n                    </div>\r\n                } else {\r\n                    let options = devicesList.map((item, index) => {\r\n\r\n                        let flog = saveDeviceMac.some((device, index) => {\r\n                            return device === item.macId\r\n                        })\r\n                        let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\r\n                        return <li\r\n                            className='flex'\r\n                            style={{ marginBottom: px(20) }}\r\n                            key={`${index}`}\r\n                            onClick={() => {\r\n                                if (!flog) {\r\n                                    setSelectDevice(item)\r\n\r\n                                } else {\r\n                                    message.destroy();\r\n                                    message.error('This device has already been added')\r\n                                }\r\n\r\n                            }}\r\n                        >\r\n\r\n                            <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\r\n                            <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\r\n\r\n                        </li>\r\n                    })\r\n                    return <div className='deviceList ' >\r\n                        <ul>\r\n                            {options}\r\n                        </ul>\r\n                    </div>\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='addDevice' style={{ height: bodyHeight }}>\r\n            <div className=\"addDeviceTitle\" style={{ height: px(100), fontSize: 26, paddingLeft: px(20) }}>\r\n                {topText}\r\n            </div>\r\n\r\n            {body()}\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nAddDevice.propTypes = {\r\n    bodyHeight: PropTypes.number,\r\n    devicesTypeList: PropTypes.array\r\n}\r\n//默认值\r\nAddDevice.defaultProps = {\r\n    bodyHeight: 0,\r\n    devicesTypeList: []\r\n}\r\nexport default connect(\r\n    state => ({\r\n        hardwareReducer: state.hardwareReduce,\r\n        isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\r\n        receiveBroadcastHardwareInfo: state.hardwareReduce.receiveBroadcastHardwareInfo,\r\n        hardwareList: state.hardwareReduce.hardwareList,\r\n    }),\r\n    { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }\r\n)(AddDevice)",["353","354"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx",["355","356"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Layout } from \"antd\";\nimport LinkEquipment from \"./components/linkEquipment\";\nimport Measurement from \"./components/measurement\";\nimport MeasuredData from \"./components/measuredData\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../store/actions\";\nimport _ from \"lodash\";\nimport HeaderItem from \"./components/headerItem\";\nimport { px } from \"../../utils/px\";\nimport PropTypes from 'prop-types';\nimport \"./index.less\";\n\nconst TemperaturePage = ({ petMessage, hardwareMessage,bodyHeight }) => {\n  let { mellaConnectStatus } = hardwareMessage;\n  //测量温度中的页面变化\n  const changePage = () => {\n    // return <MeasuredData />\n    switch (mellaConnectStatus) {\n      case \"isMeasuring\":\n        return <Measurement />;\n      case \"complete\":\n        return <MeasuredData />;\n      case \"connected\":\n        return <LinkEquipment />;\n      case \"disconnected\":\n        return <LinkEquipment />;\n      default:\n        break;\n    }\n  };\n  return (\n    <>\n      <Layout className=\"homeBox\" style={{ height: bodyHeight }}>\n        <div style={{ height: px(100), background: \"#fff\", position: 'relative' }}>\n          <div style={{ height: '100%' }}>\n            <HeaderItem />\n          </div>\n        </div>\n        {_.isEmpty(petMessage) ? (\n          <div className=\"chackPatientBox\">\n            <p className=\"chackPatientTitle\">Select a patient</p>\n          </div>\n        ) : (\n          changePage()\n        )}\n      </Layout>\n    </>\n  );\n};\n\nTemperaturePage.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(TemperaturePage);\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx",["357","358","359","360"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.js",["361","362","363","364","365","366","367","368","369","370","371","372"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx",["373","374"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js",["375"],"\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './uploadImg.less'\r\nimport selectphoto from './../../assets/images/sel.png'\r\n\r\nconst UploadImg = ({ imgWidth, text, getImg, imgUrl, disable }) => {\r\n\r\n  const url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver'\r\n  let backgroundImage = imgUrl ? `url(${imgUrl})` : `url(${selectphoto})`\r\n  let cursor = !disable ? 'default' : 'no-drop'\r\n  return (\r\n\r\n    <div id=\"uploadImg\">\r\n      <div className=\"ciral\"\r\n        onClick={() => {\r\n          if (disable) {\r\n            return\r\n          }\r\n          let file = document.getElementById('img')\r\n          file.click();\r\n        }}\r\n        style={{\r\n          width: imgWidth,\r\n          height: imgWidth,\r\n          borderRadius: imgWidth,\r\n          backgroundImage: backgroundImage,\r\n          backgroundPosition: 'center',\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundSize: `auto ${imgWidth}`,\r\n          cursor: cursor\r\n\r\n        }}\r\n      >\r\n\r\n        <input type=\"file\"\r\n          accept=\"image/gif,image/jpeg,image/jpg,image/png,image/svg\"\r\n          className=\"uploadImg\"\r\n          id=\"img\"\r\n          style={{ display: 'none' }}\r\n          onChange={(e) => {\r\n            console.log(e);\r\n            let $target = e.target || e.srcElement\r\n            if ($target.files.length === 0) {\r\n              return;\r\n            }\r\n            let file = $target.files[0]\r\n            var reader = new FileReader()                   //创建文件阅读器实例\r\n            reader.readAsDataURL(file)\r\n            reader.onload = (data) => {\r\n              let res = data.target || data.srcElement\r\n              console.dir(document.getElementsByClassName('ciral')[0]);\r\n              document.getElementsByClassName('ciral')[0].style.backgroundImage = `url(${res.result})`\r\n              // document.getElementById('touxiang').src = res.result\r\n\r\n\r\n              const formData = new FormData();\r\n              formData.append('img', file);\r\n              fetch(`${url}/image/uploadImage`, {\r\n                method: 'POST',\r\n                headers: {\r\n                },\r\n                body: formData\r\n              })\r\n                .then((response) => response.json())\r\n                .then((res) => {\r\n                  console.log('上传的结果', res);\r\n                  if (res.flag === true) {\r\n                    getImg(res.data)\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                  console.log(err);\r\n                });\r\n            }\r\n\r\n          }} />\r\n        <p>{text}</p>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\nUploadImg.propTypes = {\r\n  imgWidth: PropTypes.string,\r\n  text: PropTypes.string,\r\n  getImg: PropTypes.func,\r\n  imgUrl: PropTypes.string,\r\n  disable: PropTypes.bool\r\n}\r\nUploadImg.defaultProps = {\r\n  imgWidth: '120px',\r\n  text: 'Add Photo',\r\n  disable: false\r\n  // imgUrl: 'http://ec2-3-214-224-72.compute-1.amazonaws.com:18886/group1/image/0_email.png'\r\n}\r\nexport default UploadImg",["376","377"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardListModal.jsx",["378"],"import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { px } from \"../../utils/px\";\r\nimport {\r\n  selectHardwareInfoFun,\r\n  selectHardwareModalShowFun,\r\n  setMenuNum,\r\n} from \"./../../store/actions\";\r\nimport electronStore from \"../../utils/electronStore\";\r\n\r\nimport deviceBiggie from \"./../../assets/img/deviceIcon-biggie.png\";\r\nimport nextImg from \"./../../assets/img/nextImg.png\";\r\nimport dui from \"./../../assets/img/dui.png\";\r\nimport deviceMella from \"./../../assets/img/deviceIcon-mella.png\";\r\nimport deviceRfid from \"./../../assets/img/deviceIcon-rfid.png\";\r\nimport deviceMaeBowl from \"./../../assets/img/deviceIcon-maeBowl.png\";\r\nimport deviceTape from \"./../../assets/img/deviceIcon-tape.png\";\r\nimport deivceAdd from \"./../../assets/img/hardList-add.png\";\r\nimport scales from \"./../../assets/img/scales.png\";\r\nimport \"./mainbody.less\";\r\nimport { compareObject } from \"../../utils/current\";\r\n\r\nlet storage = window.localStorage;\r\nconst HardAndPetsUI = ({\r\n  hardwareList,\r\n  selectHardwareType,\r\n  selectHardwareInfoFun,\r\n  selectHardwareModalShowFun,\r\n  setInfo,\r\n  setMenuNum,\r\n  hardwareMessage,\r\n}) => {\r\n  let { selectHardwareInfo } = hardwareMessage;\r\n  //定义数组hardwareList\r\n  const [hardwareListArr, setHardwareList] = useState([]);\r\n  //定义选择的硬件详细信息\r\n  const [selectHardwareDetail, setSelectHardwareDetail] = useState({});\r\n\r\n  let options = hardwareListArr.map((item, index) => {\r\n    let { name, mac, deviceType } = item;\r\n    let deviceTypeStr = \"\",\r\n      img = null;\r\n    switch (deviceType) {\r\n      case \"biggie\":\r\n        deviceTypeStr = \"Biggie Pro Scale\";\r\n        img = <img src={deviceBiggie} alt=\"\" width={px(75)} />;\r\n        break;\r\n      case \"rfid\":\r\n        deviceTypeStr = \"RFID\";\r\n        img = <img src={deviceRfid} alt=\"\" width={px(40)} />;\r\n        break;\r\n      case \"tape\":\r\n        deviceTypeStr = \"Tabby\";\r\n        img = <img src={deviceTape} alt=\"\" width={px(50)} />;\r\n        break;\r\n      case \"maeBowl\":\r\n        deviceTypeStr = \"MaeBowl\";\r\n        img = <img src={deviceMaeBowl} alt=\"\" width={px(40)} />;\r\n\r\n        break;\r\n      case \"otterEQ\":\r\n        deviceTypeStr = \"Otter EQ\";\r\n\r\n        break;\r\n      case \"mellaPro\":\r\n        deviceTypeStr = \"Mella Pro\";\r\n        img = <img src={deviceMella} alt=\"\" width={px(20)} />;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    //判断对象是否相等\r\n\r\n    let isEqual = compareObject(item, selectHardwareDetail);\r\n    // console.log(\"判断两个对象是否相同\", isEqual, item, selectHardwareDetail);\r\n    return (\r\n      <li\r\n        key={`${index}`}\r\n        onClick={() => {\r\n          setSelectHardwareDetail(item);\r\n          electronStore.set(\r\n            `${storage.lastOrganization}-${storage.userId}-${deviceType}-selectDeviceInfo`,\r\n            item\r\n          );\r\n          selectHardwareInfoFun(item);\r\n          setInfo && setInfo(item);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"hardListInfo\"\r\n          style={{ paddingTop: px(15), paddingBottom: px(15) }}\r\n        >\r\n          <div className=\"deviceL\">\r\n            <div\r\n              className=\"hardIcon\"\r\n              style={{ marginLeft: px(3), marginRight: px(3), width: px(75) }}\r\n            >\r\n              {img}\r\n            </div>\r\n            <div className=\"deviceInfo\">\r\n              <div className=\"deviceName\">{`Device Name: ${name}`}</div>\r\n              <div className=\"deviceName\">{deviceTypeStr}</div>\r\n              <div className=\"deviceName\">{`SN: ${mac}`}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"deviceR\" style={{ marginRight: px(20) }}>\r\n            <img src={nextImg} alt=\"\" width={px(13)} />\r\n            {isEqual && (\r\n              <div\r\n                className=\"seleIcon\"\r\n                style={{ width: px(18), height: px(18), top: px(-30) }}\r\n              >\r\n                <img src={dui} alt=\"\" width={px(12)} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  const otherItems = () => {\r\n    let deviceType = selectHardwareDetail.deviceType;\r\n    let isBiggie = deviceType === \"biggie\",\r\n      deviceTypeStr = \"\";\r\n    switch (deviceType) {\r\n      case \"biggie\":\r\n        deviceTypeStr = \"Biggie\";\r\n        break;\r\n      case \"rfid\":\r\n        deviceTypeStr = \"RFID\";\r\n        break;\r\n      case \"tape\":\r\n        deviceTypeStr = \"Tabby\";\r\n\r\n        break;\r\n      case \"maeBowl\":\r\n        deviceTypeStr = \"MaeBowl\";\r\n\r\n        break;\r\n      case \"otterEQ\":\r\n        deviceTypeStr = \"Otter EQ\";\r\n        break;\r\n      case \"mellaPro\":\r\n        deviceTypeStr = \"Mella\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // console.log(\"selectHardwareDetail\", selectHardwareDetail);\r\n    return (\r\n      <div>\r\n        {isBiggie && (\r\n          <div\r\n            className=\"addNewDevice\"\r\n            style={{ paddingTop: px(10), paddingBottom: px(10) }}\r\n            onClick={() => setMenuNum(\"CombineScales\")}\r\n          >\r\n            <div\r\n              className=\"addNewDeviceText\"\r\n              style={{ paddingLeft: px(25) }}\r\n            >{`Combine Scales`}</div>\r\n            <div className=\"addNewDeviceImg\">\r\n              <img\r\n                src={scales}\r\n                alt=\"\"\r\n                width={px(30)}\r\n                style={{ marginRight: px(20) }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div\r\n          className=\"addNewDevice\"\r\n          style={{ paddingTop: px(10), paddingBottom: px(10) }}\r\n        >\r\n          <div\r\n            className=\"addNewDeviceText\"\r\n            style={{ paddingLeft: px(25) }}\r\n          >{`Add New ${deviceTypeStr}`}</div>\r\n          <div className=\"addNewDeviceImg\">\r\n            <img\r\n              src={deivceAdd}\r\n              alt=\"\"\r\n              width={px(30)}\r\n              style={{ marginRight: px(20) }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //根据设备类型获取到此类型下的所有硬件,并用来展示\r\n    for (let i = 0; i < hardwareList.length; i++) {\r\n      const element = hardwareList[i];\r\n      if (element.type === selectHardwareType) {\r\n        let list = element.devices || [];\r\n        setHardwareList(list);\r\n        //获取被选中的硬件的详细信息\r\n        let selectHardwareInfoData = selectHardwareInfo || {};\r\n        if (selectHardwareInfoData === {}) {\r\n          let selectHardwareInfoData = list[0] || {};\r\n          setSelectHardwareDetail(selectHardwareInfoData);\r\n        } else {\r\n          let sameFlag = false;\r\n          for (let i = 0; i < list.length; i++) {\r\n            const element = list[i];\r\n            if (\r\n              element.name === selectHardwareInfoData.name &&\r\n              element.mac === selectHardwareInfoData.mac\r\n            ) {\r\n              setSelectHardwareDetail(selectHardwareInfoData);\r\n              sameFlag = true;\r\n              break;\r\n            }\r\n          }\r\n          console.log(\"sameFlag\", sameFlag);\r\n          if (!sameFlag) {\r\n            console.log(\"设置了默认值\");\r\n            let selectHardwareInfoData = list[0] || {};\r\n            setSelectHardwareDetail(selectHardwareInfoData);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }, [selectHardwareType]);\r\n\r\n  return (\r\n    <div\r\n      className=\"hardList\"\r\n      style={{ top: px(90), zIndex: 999 }}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        selectHardwareModalShowFun(false);\r\n      }}\r\n    >\r\n      <ul>{options}</ul>\r\n      {otherItems()}\r\n    </div>\r\n  );\r\n};\r\n\r\nHardAndPetsUI.propTypes = {\r\n  setInfo: PropTypes.func,\r\n};\r\n//默认值\r\nHardAndPetsUI.defaultProps = {\r\n  setInfo: () => {},\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    hardwareList: state.hardwareReduce.hardwareList,\r\n    userMessage: state.userReduce,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  { selectHardwareInfoFun, selectHardwareModalShowFun, setMenuNum }\r\n)(HardAndPetsUI);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx",["379","380","381","382","383","384","385","386","387","388","389"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Button, Progress, Layout, Carousel } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport Animation_1 from \"./../../../assets/img/Animation_1.png\";\nimport Animation_2 from \"./../../../assets/img/Animation_2.png\";\nimport Animation_3 from \"./../../../assets/img/Animation_3.png\";\n// import HeaderItem from './headerItem';\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../../store/actions\";\nimport _ from \"lodash\";\nimport \"./measurement.less\";\nimport { px } from \"../../../utils/px\";\nimport electronStore from \"../../../utils/electronStore\";\n\nlet storage = window.localStorage;\nconst { Content, Header } = Layout;\n\nconst Measurement = ({ petMessage, hardwareMessage }) => {\n  let { mellaMeasureValue, mellaMeasurePart } = hardwareMessage;\n  const [percent, setPercent] = useState(0);\n  const [value, setValue] = useState(0);\n  const [timers, setTimers] = useState(0);\n  const [isHua, setIsHua] = useState(true);\n  const saveCallBack = useRef();\n  const callBack = () => {\n    const random = 1;\n    setValue(value + random);\n    setTimers(timers + random);\n  };\n\n  //圆滑里面的文字\n  const ProgressTitle = (percent) => {\n    let num = parseFloat(percent);\n    if (isHua) {\n      num = (num * 1.8 + 32).toFixed(1);\n    }\n    return (\n      <>\n        {mellaMeasurePart !== \"耳温\" ? (\n          <p className=\"ProgressTitle\">\n            {num}\n            <span className=\"symbol\">{`${isHua ? \"℉\" : \"℃\"}`}</span>\n          </p>\n        ) : (\n          <></>\n        )}\n        <p className=\"ProgressTitle\">Measuring</p>\n      </>\n    );\n  };\n  //图片切换\n  const checkImage = () => {\n    switch (timers) {\n      case 0:\n        return <img src={Animation_1} />;\n      case 1:\n        return <img src={Animation_2} />;\n      case 2:\n        return <img src={Animation_3} />;\n      case 3:\n        return <img src={Animation_3} />;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (timers > 2) {\n      setTimers(0);\n    }\n    return () => { };\n  });\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    const timer = setInterval(tick, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  useEffect(() => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (hardSet) {\n      let { isHua } = hardSet;\n      setIsHua(isHua);\n    }\n  }, []);\n\n  return (\n    <>\n      {/* <HeaderItem /> */}\n      <Content className={\"measureContentBox\"}>\n        <div style={{ marginTop: px(33) }}>\n          <Progress\n            type=\"dashboard\"\n            percent={_.round(mellaMeasureValue, 1)}\n            gapDegree={30}\n            // width={px(260)}\n            strokeWidth={\"8\"}\n            format={(percent) => ProgressTitle(percent)}\n            strokeColor={'#4C595E'}\n            className='measuringProgress'\n          />\n        </div>\n\n        {checkImage()}\n      </Content>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(Measurement);\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["390","391","392","393","394","395","396","397","398","399","400","401"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx",["402","403","404","405","406","407","408","409","410"],"import React, { useEffect, useState } from \"react\";\r\nimport { Image, Layout } from \"antd\";\r\nimport { connect } from \"react-redux\";\r\nimport PressButton_Pro from \"./../../../assets/img/PressButton_Pro.png\";\r\nimport biggieonscale from \"./../../../assets/img/biggieonscale.png\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n} from \"../../../store/actions\";\r\nimport _ from \"lodash\";\r\nimport HistoryTable from \"../../../components/historyTable\";\r\nimport \"./linkEquipment.less\";\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n  let { mellaConnectStatus } = hardwareMessage;\r\n  const [saveNum, setSaveNum] = useState(0);\r\n  return (\r\n    <>\r\n      <div className={\"linkBox\"}>\r\n        <div className=\"startBox\">\r\n          <img src={biggieonscale}></img>\r\n          <p className=\"startTitle\">Ready, place pet onto scale</p>\r\n        </div>\r\n        <div className=\"tableBox\">\r\n          <HistoryTable saveNum={saveNum} tableColumnType=\"weight\" />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n  }\r\n)(LinkEquipment);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\swabPetEar\\index.jsx",["411","412","413","414","415"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport DogLeftEar from \"../../../../assets/img/DogLeftEar.png\";\nimport DogRightEar from \"../../../../assets/img/DogRightEar.png\";\nimport CatLeftEar from \"../../../../assets/img/CatLeftEar.png\";\nimport CatRightEar from \"../../../../assets/img/CatRightEar.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\n\nconst SwabPetEar = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  let {\n    petSpeciesBreedId,\n  } = petMessage;\n  const [value, setValue] = useState(1);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const imagetypeEvent = () => {\n    if (value === 1) {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatRightEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogRightEar} alt=\"\" />;\n      } else {\n        return <img src={DogRightEar} alt=\"\" />;\n      }\n    } else {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatLeftEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogLeftEar} alt=\"\" />;\n      } else {\n        return <img src={DogLeftEar} alt=\"\" />;\n      }\n    }\n  }\n\n  const onClick = () => {\n    if (value === 1) {\n      setValue(2);\n    } else {\n      cutPageType('experimentalPage');\n    }\n  }\n\n  // useEffect(() => {\n  //   imagetypeEvent();\n  // },[value])\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          Swab Pet's Ear\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {imagetypeEvent()}\n      </div>\n      <div className=\"radioBox\">\n        <Radio.Group onChange={onChange} value={value}>\n          <Radio value={1}>Right Ear</Radio>\n          <Radio value={2}>Left Ear</Radio>\n        </Radio.Group>\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>Next</Button>\n      </div>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(SwabPetEar);\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\experimental\\index.jsx",["416","417","418","419","420","421","422"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport swirl from \"../../../../assets/img/swirl.png\";\nimport BreakSeal from \"../../../../assets/img/Break-Seal.png\";\nimport label from \"../../../../assets/img/label.png\";\nimport Incubator from \"../../../../assets/img/Incubator.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\nconst ExperimentalPage = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  const [value, setValue] = useState(1);\n\n  const cutTitle = () => {\n    switch (value) {\n      case 1:\n        return (<>{`${'Swirl sample in'}`}<br />{`${'solution'}`}</>);\n      case 2:\n        return (<>{`${'Break off stem and'}`}<br />{`${'seal collection tube'}`} </>);\n      case 3:\n        return (<>{`${'Affix label to'}`}<br />{`${'collection tube'}`} </>);\n      case 4:\n        return (<>{`${'Place tube in'}`}<br />{`${'incubator'}`} </>);\n      default:\n        break;\n    }\n  }\n\n  const cutImage = () => {\n    switch (value) {\n      case 1:\n        return <img src={swirl} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 2:\n        return <img src={BreakSeal} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 3:\n        return <img src={label} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 4:\n        return <img src={Incubator} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      default:\n        break;\n    }\n  }\n\n  const onClick = () => {\n    if (value !== 4) {\n      setValue(value + 1)\n    } else {\n      cutPageType('timerPage');\n    }\n  }\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          {cutTitle()}\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {cutImage()}\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>{value !== 4 ? 'Next' : 'Start Timer'}</Button>\n      </div>\n    </>\n  );\n\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(ExperimentalPage);\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\HardAndPetsUI.jsx",["423","424","425","426"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx",["427","428","429","430","431","432","433","434","435","436","437","438","439"],"import React, { useState, useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Input, Button, message, Spin, BackTop, } from 'antd';\r\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport { devicesTitleHeight } from '../../utils/InitDate'\r\nimport electronStore from '../../utils/electronStore';\r\nimport dog from './../../assets/images/pinkdog.png'\r\nimport cat from './../../assets/images/pinkcat.png'\r\nimport redDog from './../../assets/images/reddog.png'\r\nimport redCat from './../../assets/images/redcat.png'\r\nimport redother from './../../assets/images/redother.png'\r\nimport other from './../../assets/images/other.png'\r\nimport redJinggao from './../../assets/img/redjinggao.png'\r\n\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport { mTop, px, MTop, pX } from '../../utils/px';\r\nimport './addScheduledPet.less'\r\nimport { setMenuNum } from '../../store/actions';\r\nimport { fetchRequest } from '../../utils/FetchUtil1';\r\nimport MYButton from './../../utils/button/Button'\r\n\r\nconst MyIcon = createFromIconfontCN({\r\n    scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\n\r\nlet defaultData = {\r\n    patientId: \"\",\r\n    wuzhong: 'dog',\r\n    petName: '',\r\n    miaoshu: ''\r\n}\r\n\r\nlet storage = window.localStorage;\r\nconst AddScheduledPet = ({ bodyHeight, setMenuNum }) => {\r\n    const [addPetist1, setAddPetist] = useState([]);\r\n    const [petName, setPetName] = useState('');\r\n    const [wuzhong, setWuzhong] = useState('dog');\r\n    const [patientId, setPatientId] = useState('');\r\n    const [miaoshu, setMiaoshu] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [isSave, setIsSave] = useState(false);\r\n\r\n    const selsectwuzhong = (val) => {\r\n        setWuzhong(val);\r\n\r\n    }\r\n    console.log('addPetist1', addPetist1);\r\n\r\n    const add = () => {\r\n        message.destroy()\r\n        if (!patientId) {\r\n            message.error(`Please enter the pet's patientId`)\r\n            return\r\n        }\r\n        setLoading(true)\r\n\r\n        let petSpeciesBreedId = 12001\r\n        switch (wuzhong) {\r\n            case 'dog': petSpeciesBreedId = 12001; break;\r\n            case 'cat': petSpeciesBreedId = 11001; break;\r\n            case 'other': petSpeciesBreedId = 13001; break;\r\n            default:\r\n                break;\r\n        }\r\n        let params = {\r\n            description: miaoshu,\r\n            doctorId: storage.userId,\r\n            patientId,\r\n            petName,\r\n            petSpeciesBreedId\r\n        }\r\n\r\n        if (storage.lastOrganization) {\r\n            params.organizationId = storage.lastOrganization\r\n        }\r\n        if (storage.lastWorkplaceId) {\r\n            params.workplaceId = storage.lastWorkplaceId\r\n        }\r\n        console.log('入参', params);\r\n        fetchRequest('/new/petall/subscribe', \"POST\", params)\r\n            .then(res => {\r\n                console.log(res);\r\n                if (res.flag) {\r\n                    let json = {\r\n                        patientId,\r\n                        wuzhong,\r\n                        petName,\r\n                        miaoshu\r\n                    }\r\n                    let list = [].concat(addPetist1)\r\n                    list.push(json)\r\n                    setAddPetist(list)\r\n                    setLoading(false)\r\n                    setPatientId('')\r\n                    setWuzhong('')\r\n                    setPetName('')\r\n                    setMiaoshu('')\r\n\r\n                } else {\r\n\r\n                    setLoading(false)\r\n                    message.error('add failed')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('错误原因', err);\r\n                setLoading(false)\r\n                message.error('add failed')\r\n            })\r\n\r\n    }\r\n    const body = () => {\r\n        let addPetist = [].concat(addPetist1)\r\n        addPetist.push(defaultData)\r\n        console.log('新的:', addPetist);\r\n\r\n        let options = addPetist.map((item, index) => {\r\n\r\n\r\n            if (index === addPetist.length - 1) {\r\n                return <li key={`${index}`} style={{ width: '100%', }}>\r\n                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\r\n                            <input type=\"text\" className='tableInput'\r\n                                value={patientId}\r\n                                onChange={value => {\r\n                                    setPatientId(value.target.value)\r\n\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\r\n                            <input type=\"text\" className='tableInput'\r\n                                value={petName}\r\n                                onChange={value => {\r\n\r\n                                    setPetName(value.target.value)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className='tableHeard flex' style={{ flexDirection: 'row', paddingTop: px(5), paddingBottom: px(5), justifyContent: 'space-around', borderTopWidth: '0px' }} >\r\n                            <div\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    selsectwuzhong('dog')\r\n                                }}>\r\n                                <img src={wuzhong === 'dog' ? redDog : dog} alt=\"\" width={px(40)} />\r\n                            </div>\r\n                            <div\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    selsectwuzhong('cat')\r\n                                }}>\r\n                                <img src={wuzhong === 'cat' ? redCat : cat} alt=\"\" width={px(40)} />\r\n                            </div>\r\n\r\n                            <div\r\n                                style={{ cursor: 'pointer' }}\r\n                                onClick={() => {\r\n                                    selsectwuzhong('other')\r\n                                }}>\r\n                                <img src={wuzhong === 'other' ? redother : other} alt=\"\" width={px(40)} />\r\n                            </div>\r\n\r\n\r\n\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px', width: '30%' }}>\r\n                            <input type=\"text\" className='tableInput'\r\n                                value={miaoshu}\r\n                                onChange={value => {\r\n\r\n                                    setMiaoshu(value.target.value)\r\n                                }}\r\n\r\n                            />\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', borderTopWidth: '0px', width: '10%' }}>\r\n                            <div\r\n                                className='flex'\r\n                                style={{ width: px(30), height: px(30), borderRadius: px(30), backgroundColor: '#e1206d', cursor: 'pointer' }}\r\n                                onClick={add}\r\n\r\n                            >\r\n\r\n                                <MyIcon type={'icon-baocun-copy'} className=\"icon \" style={{ color: '#fff', fontSize: px(16) }} />\r\n                            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n                </li>\r\n            } else {\r\n                let { patientId, wuzhong, petName, miaoshu } = item\r\n                return <li key={`${index}`} style={{ width: '100%', }}>\r\n                    <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\r\n                            <div className='tableText'>\r\n                                {patientId}\r\n                            </div>\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px' }}>\r\n                            <div className='tableText'> {petName}</div>\r\n                        </div>\r\n                        <div className='tableHeard flex' style={{ flexDirection: 'row', paddingTop: px(5), paddingBottom: px(5), justifyContent: 'space-around', borderTopWidth: '0px' }} >\r\n                            <img src={wuzhong === 'dog' ? redDog : dog} alt=\"\" width={px(40)} />\r\n                            <img src={wuzhong === 'cat' ? redCat : cat} alt=\"\" width={px(40)} />\r\n                            <img src={wuzhong === 'other' ? redother : other} alt=\"\" width={px(40)} />\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderTopWidth: '0px', width: '30%' }}>\r\n                            <div className='tableText'>{miaoshu}</div>\r\n                        </div>\r\n                        <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', borderTopWidth: '0px', width: '10%' }}>\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </li>\r\n            }\r\n\r\n\r\n        })\r\n\r\n        return (\r\n            <div style={{ width: '100%', marginTop: px(30), height: px(500), overflowY: 'auto', paddingLeft: '5%', paddingRight: '5%', }}>\r\n                <div style={{ width: '100%', display: 'flex', flexDirection: 'row', }}>\r\n                    <div className='tableHeard'>Patient Id</div>\r\n                    <div className='tableHeard'>Pet Name</div>\r\n                    <div className='tableHeard'>species</div>\r\n                    <div className='tableHeard' style={{ width: '30%' }}>description</div>\r\n                    <div className='tableHeard' style={{ borderRight: '#5a5a5a solid 1px', width: '10%' }}></div>\r\n\r\n                </div>\r\n                <ul >\r\n                    {options}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className='addScjediled' style={{ height: bodyHeight }}>\r\n            <div className=\"addDeviceTitle\" style={{ height: px(100), fontSize: 26, paddingLeft: px(20) }}>Create New Scheduled </div>\r\n            <div className='addSBody' style={{ width: '100%', height: bodyHeight - px(100), }}>\r\n                {body()}\r\n\r\n\r\n                <div className='continueBox'>\r\n                    <div className='continueBtn'\r\n                        style={{ borderRadius: px(50), height: px(45), fontSize: px(20), }}\r\n                        onClick={() => {\r\n\r\n                            if (!patientId) {\r\n                                setMenuNum('3')\r\n                            } else {\r\n                                setIsSave(true)\r\n                            }\r\n                        }}\r\n                    >Continue</div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <MyModal\r\n                visible={loading}\r\n            />\r\n            <MyModal\r\n                visible={isSave}\r\n                element={\r\n                    <div className='isSave'\r\n                    //  style={{ borderRadius: `${px(20)}px`, backgroundColor: '#fff' }}\r\n                    >\r\n                        <img src={redJinggao} alt=\"\" style={{ width: px(50), margin: `${px(25)}px 0` }} />\r\n                        <p style={{ textAlign: 'center' }}>There are unsaved patient appointments, <br />are you sure you want to exit?</p>\r\n                        <div className=\"btn\" style={{ margin: `${px(30)}px 0` }} >\r\n                            <MYButton\r\n                                text={'Cancel'}\r\n                                onClick={() => {\r\n                                    setIsSave(false)\r\n\r\n                                }}\r\n                                textBoxStyle={{\r\n                                    width: '40%',\r\n                                    height: px(40)\r\n                                }}\r\n                            />\r\n                            <MYButton\r\n                                text={'Exit'}\r\n                                onClick={() => {\r\n                                    setIsSave(false)\r\n                                    setMenuNum('3')\r\n                                }}\r\n                                textBoxStyle={{\r\n                                    width: '40%',\r\n                                    height: px(40)\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\n\r\nAddScheduledPet.propTypes = {\r\n\r\n}\r\n//默认值\r\nAddScheduledPet.defaultProps = {\r\n\r\n}\r\nexport default connect(\r\n    state => ({\r\n\r\n    }),\r\n    { setMenuNum }\r\n)(AddScheduledPet)","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["440","441","442","443","444","445","446","447"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\PetsUI.jsx",["448","449","450","451"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\timer\\index.jsx",["452","453","454","455","456"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\linkEquipment\\index.jsx",["457","458","459","460","461"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\LinkEquipment.jsx",["462","463","464","465","466","467"],"import React, {\r\n    useEffect,\r\n    useState,\r\n} from 'react';\r\nimport { Image, Layout } from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun\r\n} from '../../../store/actions';\r\nimport _ from 'lodash';\r\nimport './LinkEquipment.less';\r\n\r\nconst { Content, Header } = Layout;\r\n\r\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\r\n    let { mellaConnectStatus } = hardwareMessage;\r\n    return (\r\n\r\n        <Content className={\"contentBox\"}>\r\n            <div className='chackPatientBox'>\r\n                <p className='chackPatientTitle'>Select a patient</p>\r\n            </div>\r\n        </Content>\r\n\r\n    );\r\n}\r\nexport default connect(\r\n    state => ({\r\n        petMessage: state.petReduce.petDetailInfo,\r\n        hardwareMessage: state.hardwareReduce,\r\n    }),\r\n    {\r\n        selectHardwareModalShowFun,\r\n        petSortTypeFun,\r\n        petDetailInfoFun,\r\n        setMellaConnectStatusFun,\r\n        setMellaMeasureValueFun,\r\n        setMellaPredictValueFun,\r\n        setMellaMeasurePartFun\r\n    }\r\n)(LinkEquipment);","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\home\\Home.jsx",["491","492","493","494","495"],"import React, { Component, } from 'react'\nimport {\n  Button,\n  message\n} from 'antd';\n//import 'antd/dist/antd.css';\nimport './home.less'\nimport logo from './../../assets/images/mella.png'\n// import MaxMin from './../../utils/maxMin/MaxMin'\nimport temporaryStorage from './../../utils/temporaryStorage'\nimport { px, mTop, win, timerFun } from './../../utils/px'\nimport MinClose from '../../utils/minClose/MinClose';\nimport electronStore from './../../utils/electronStore'\nimport SelectionBox from './../../utils/selectionBox/SelectionBox'\nimport { addQRCode } from '../../utils/axios';\nimport { fetchRequest2 } from '../../utils/FetchUtil2';\nimport { version } from './../../utils/appversion'\nlet storage = window.localStorage;\n//定义变量:连续点击了几次logo\nlet logoClick = 0;\n//定义变量:点击logo的时间\nlet logoTime = 0;\nexport default class Home extends Component {\n  state = {\n    imgurl: '',\n    size: { width: 0, height: 0 }\n  }\n  componentDidMount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    timerFun()\n    ipcRenderer.send('close-loading-window', 1)\n    ipcRenderer.send('small', win())\n    storage.measurepatientId = '';\n    temporaryStorage.logupVetInfo = {}\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n    // fetchRequest2('/user/getLoginQRcode', \"GET\", '')\n    //     // addQRCode()\n    //     .then(res => {\n    //         console.log('首页获取', res);\n\n\n    //     })\n    //     .catch(err => {\n\n    //         console.log(err);\n    //     })\n\n\n    // addQRCode()\n    //     .then(res => {\n    //         message.destroy()\n\n    //         console.log('---获取二维码', res);\n\n    //     })\n    //     .catch(err => {\n\n    //         console.log(err);\n    //     })\n\n\n\n\n\n  }\n  resize = (e) => {\n    // console.log('-------------监听的数据', e);\n\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    window.removeEventListener('resize', this.resize);\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log('changeFenBianLv');\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    // ipcRenderer.send('small')\n    ipcRenderer.send('small', win())\n    this.setState({\n\n    })\n  }\n\n\n  _quickStart = () => {\n    console.log('dianji2')\n    this.props.history.push('/page1')\n    // this.props.history.push('/menuOptions/advancedsettings')\n\n  }\n  _createAccount = () => {\n    this.props.history.push('/uesr/logUp/VetPrifile')\n\n    // this.props.history.push('/uesr/logUp/JoinOrganizationByOption')\n\n  }\n  _test = () => {\n    console.log('点击');\n    console.log(navigator);\n    console.log(navigator.userAgent);\n    console.log('---------------------------');\n  }\n  _openUtils = () => {\n    console.log('点击来了', logoClick);\n    if (new Date() - logoTime > 500) {\n      logoClick = 0;\n      logoTime = new Date();\n\n    } else {\n      logoClick++;\n      logoTime = new Date();\n      if (logoClick >= 8) {\n        logoClick = 0;\n\n        let ipcRenderer = window.electron.ipcRenderer\n        ipcRenderer.send('openDevTools', true)\n      }\n    }\n\n  }\n  render() {\n    return (\n\n      <div id=\"home\">\n        {/* <MaxMin\n                    onClick={() => { this.props.history.push('/') }}\n                /> */}\n        <div className=\"daohang\" style={{ paddingTop: px(10), paddingRight: px(20) }}>\n          <MinClose />\n        </div>\n        <div className='flex refresh' style={{ alignItems: 'flex-end', paddingRight: px(20) }}>\n          <div className='flex' style={{ flexDirection: 'row', paddingTop: px(20), paddingRight: px(18), color: '#700B33', cursor: 'pointer' }}>\n\n            V{version}\n          </div>\n\n\n\n        </div>\n\n        <div className=\"heard\" >\n          <div\n\n            onClick={this._openUtils}\n            className=\"logo\"\n\n          >\n            <img\n              src={logo}\n              alt=\"\"\n              // style={{ marginTop: mTop(100), marginBottom: mTop(100), width: px(300) }}\n            />\n          </div>\n\n        </div>\n\n\n        <div className=\"button\" style={{ marginBottom: px(25) }}>\n          <Button\n            // style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\n            type=\"primary\"\n            shape=\"round\"\n            size='large'\n            onClick={() => { this.props.history.push('/page11') }}\n            className=\"siginInBtn\"\n          >\n            Sign In\n          </Button>\n\n        </div>\n        <p className=\"text\" style={{ marginTop: mTop(5), marginBottom: mTop(5) }}>New to Mella?</p>\n        <div className=\"create\" style={{ marginBottom: mTop(20), marginTop: px(25) }}>\n          <Button\n            // style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\n            type=\"primary\"\n            shape=\"round\"\n            size='large'\n            onClick={this._createAccount}\n            className=\"createBtn\"\n          >\n            Create an Account\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\advancedSettings\\AdvancedSettings.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Menu, Popover, Button, Modal } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport { SyncOutlined, createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\nimport { SearchOutlined } from '@ant-design/icons';\nimport moment from 'moment'\nimport MyModal from './../myModal/MyModal'\nimport { connect } from 'react-redux'\nimport { setMenuNum, setSelectHardwareType, petDetailInfoFun } from '../../store/actions';\n\n//import 'antd/dist/antd.css';\nimport \"./heard.less\";\nimport help from \"./../../assets/images/help.png\";\nimport message from \"./../../assets/images/message.png\";\nimport triangle from \"./../../assets/img/triangle.png\";\nimport { mTop, px, MTop } from \"../px\";\nimport electronStore from \"../electronStore\";\nimport dog from \"./../../assets/images/reddog.png\";\nimport cat from \"./../../assets/images/redcat.png\";\nimport other from \"./../../assets/images/redother.png\";\nimport menu from \"./../../assets/img/menu.png\";\nimport heardLeft from \"./../../assets/img/heardLeft.png\";\nimport blueSearchPng from \"./../../assets/img/blueSearch.png\";\nimport close from \"./../../assets/img/close.png\";\nimport MinClose from \"../../utils/minClose/MinClose\";\nimport jinggao from \"./../../assets/img/jinggao.png\";\nimport redclose from \"./../../assets/img/redclose.png\";\n\nimport rMin_red from \"./../../assets/img/min-red.png\";\nimport rClose_red from \"./../../assets/img/close-red.png\";\n\nimport rMin_white from \"./../../assets/img/min-white.png\";\nimport rClose_white from \"./../../assets/img/close-white.png\";\nimport mellaLogo from \"./../../assets/images/mellaLogo.png\";\nimport { version, updateTime } from \"./../appversion\";\nimport { fetchRequest4 } from \"../FetchUtil4\";\nimport Button1 from \"../button/Button\";\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: \"//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js\",\n});\n\nconst allPetList = electronStore.get(\"doctorExam\");\nlet storage = window.localStorage;\nlet ipcRenderer = window.electron.ipcRenderer;\n\nlet mouseoutTimer = null;\nlet matchingTimer = null;\n\n/**\n *\n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns\n */\n\nconst Heard = ({\n  onReturn,\n  onSearch,\n  menu1Click,\n  menu2Click,\n  menu3Click,\n  menu4Click,\n  menu5Click,\n  menu6Click,\n  menu7Click,\n  menu8Click,\n  menu9Click,\n  blueSearch,\n  setMenuNum,\n  menuNum,\n  setSelectHardwareType,\n  petListArr,\n  petDetailInfoFun\n}) => {\n  const [minbgc, setMinbgc] = useState('')        //最小化的背景颜色\n  const [closebgc, setClosebgc] = useState('')    //关闭按钮的背景色\n  const [rMin, setRMin] = useState(rMin_red)      //最小化的图标\n  const [rClose, setRClose] = useState(rClose_red) //关闭按钮图标\n  const [value, setValue] = useState('')          //搜索框输入的内容\n  const [visible, setVisible] = useState(false)   //搜索框下面的搜索model\n  const [loading, setLoading] = useState(false)     //搜索宠物过程中的加载图标\n  const [petList, setPetList] = useState([])        //搜索到的宠物列表\n  const [menuVisible, setMenuVisible] = useState(false)//菜单图标下面的菜单内容图标\n  const [menuMouseOverIndex, setMenuMouseOverIndex] = useState('')//用来定位鼠标滑到哪个菜单选项\n\n\n  const [modalvisible, setModalVisible] = useState(false)       //关于的弹窗\n  const [modalVis, setModalVis] = useState(false)               //RFID搜索是否有宠物的弹窗\n  const [isNotFound, setIsNotFound] = useState(false)           //是否找到RFID对应的图标\n  const [deviceModel, setDeviceModel] = useState(false)         //我的设备弹窗\n\n  const [noUSB, setNoUSB] = useState(false)                 //没有底座设备\n  const [searchMac, setSearchMac] = useState(false)         //是否展示狗牌mac搜索图标下面的Modal框\n  const [bluDevice, setBluDevice] = useState([])            //搜索到的狗牌设备mac地址\n\n  const [isShowBlePetList, setIsShowBlePetList] = useState(false)  //是否展示狗牌对应宠物\n  const [isMatchPet, setIsMatchPet] = useState(false)      //正在匹配狗牌对应的宠物\n  const [macMatchPetList, setMacMatchPetList] = useState([])\n  const [updateStatus, setUpdateStatus] = useState('init')\n  const [lastVersion, setLastVersion] = useState(version)\n  const [downLoadNum, setDownLoadingNum] = useState(0)\n  const [selectDeviceMac, setSelectDeviceMac] = useState('')\n  const [clickType, setClickType] = useState(false);\n\n  //这里是为了模拟数据所做出来的,后期要改成接口\n  const testPetList = [\n    {\n      macId: \"E0:7C:62:30:08:08\",\n      petName: \"Mella\",\n      petId: \"b9de0868-9202-4fc9-9f1b-325220ceeccf\",\n    },\n    {\n      macId: \"E0:7C:62:03:75:32\",\n      petName: \"Possum\",\n      petId: \"e4b11580-1277-4b10-bd64-46b097f6f882\",\n    },\n    {\n      macId: \"E0:7D:EA:A8:8D:7E\",\n      petName: \"Charlie\",\n      petId: \"b4e7a185-1c7e-4885-ab95-4a7d2d2ada83\",\n    },\n    {\n      macId: \"E0:7C:62:32:76:8C\",\n      petName: \"Noah\",\n      petId: \"01b34bf2-47e6-4036-884f-47299447cb6a\",\n    },\n\n    {\n      macId: \"84:C2:E4:03:C3:06\",\n      petName: \"Whitey\",\n      petId: \"f713a238-f5df-4c85-8c4f-5766b0770c07\",\n    },\n  ];\n  const [size, setSize] = useState({ height: px(50) });\n  const [headerRef, setHeaderRef] = useState();\n\n  const uploadMessage = (e, data) => {\n    switch (data.payload.status) {\n      case -1:\n        console.log('查询异常');\n        setUpdateStatus('error')\n        break;\n\n      case 0:\n        console.log(\"正在检查应用程序更新\");\n        setUpdateStatus(\"check\");\n        break;\n\n      case 2:\n        console.log(\"正在检查应用程序更新\");\n        setUpdateStatus(\"lastVersion\");\n        break;\n\n      case 1:\n        console.log(\"检测到新版本\");\n        let version = data.output.version;\n        setLastVersion(version);\n\n        setUpdateStatus(\"newVersion\");\n        break;\n\n      // case 3:\n      //   console.log(\"下载新版成功\");\n      // case 4:\n      //   console.log(\"取消背景下载\");\n      case 5:\n        console.log(\"取消安装\");\n        setUpdateStatus(\"init\");\n        break;\n      case 6:\n        console.log(\"正在下载\");\n        setUpdateStatus(\"downLoading\");\n        let loadNum = data.output.percent\n          ? (data.output.percent / 100).toFixed(1)\n          : 0;\n        setDownLoadingNum(loadNum);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const _noUSB = (e, data) => {\n    console.log(\"没有USB设备：\", data);\n    if (data === false) {\n      setNoUSB(false);\n    } else {\n      if (!noUSB) {\n        setNoUSB(true);\n      }\n    }\n  };\n  const _send = (event, data) => {\n    command(data)();\n  };\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  const command = (newArr) => {\n    let dataArr1 = newArr.map((item) => {\n      if (item.toString(16).length < 2) {\n        return \"0\" + item.toString(16);\n      } else {\n        return item.toString(16);\n      }\n    });\n    console.log(dataArr1);\n    const instruction = [255];\n    const commandArr = {\n      255: () => {\n        // console.log(dataArr1);\n        // console.log(bluDevice);\n        let length = newArr.length;\n        let frameLength = newArr[1]; //帧长\n        let itemLength = newArr[3] + 1; //数据位的长度   13\n        let dataIndex = 0;\n\n        let MAC = \"\";\n        let bluData = [];\n        let UUID = \"\";\n        while (itemLength < length && itemLength + 3 <= frameLength) {\n          let itemData = [];\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5]);\n          }\n          // console.log('循环得到的数据', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              break;\n            case 255:\n              break;\n            case 3:\n              break;\n            case 239:\n              // console.log('---mac地址');\n              let str = itemData[0];\n              for (let i = 1; i < itemData.length; i++) {\n                str += `:${itemData[i]}`;\n              }\n              MAC = str.toUpperCase();\n\n              break;\n            case 7:\n              console.log(\"uuid\");\n              let uuid = \"\";\n              for (let i = 0; i < itemData.length; i++) {\n                uuid += `${itemData[i]}`;\n              }\n              UUID = uuid;\n              break;\n            default:\n              return;\n          }\n          dataIndex = itemLength;\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\n\n          // console.log(itemLength, itemLength < length && (itemLength + 3 <= frameLength));\n        }\n        console.log(\"----mac\", MAC, \"-----uuid\", UUID);\n        if (UUID === \"d7895ab1acc74de3b9919e825c24c809\") {\n          // console.log('uuid相等', bluDevice, bluDevice.indexOf(MAC) === -1,);\n          if (bluDevice.indexOf(MAC) === -1) {\n            let dataArr = [].concat(bluDevice);\n            dataArr.push(MAC);\n            setBluDevice(dataArr);\n          }\n        }\n      },\n    };\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]];\n    } else {\n      return () => {\n        console.log(\"没有控制命令\", commandArr);\n      };\n    }\n  };\n\n  let history = useHistory();\n  //最小化，关闭的\n  const MINCOLOSE = {\n    minMouseEnter: () => {\n      setMinbgc(\"rgba(70, 70, 70, 0.5)\");\n      setRMin(rMin_white);\n    },\n    minMouseLeave: () => {\n      setMinbgc(\"\");\n      setRMin(rMin_red);\n    },\n    minClock: () => {\n      setMinbgc(\"\");\n      setRMin(rMin_red);\n      let ipcRenderer = window.electron.ipcRenderer;\n      ipcRenderer.send(\"window-min\");\n    },\n    closeMouseEnter: () => {\n      setClosebgc(\"rgba(232,17,35)\");\n      setRClose(rClose_white);\n    },\n    closeMouseLeave: () => {\n      setClosebgc(\"\");\n      setRClose(rClose_red);\n    },\n    closeClock: () => {\n      let ipcRenderer = window.electron.ipcRenderer;\n      ipcRenderer.send(\"window-close\");\n    },\n  };\n\n  //搜索框内容\n  const searchPetBody = () => {\n    if (loading) {\n      //加载中\n      return (\n        <div className=\"searchPetLoading\" style={{ padding: `${20}px 0` }}>\n          <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n            <LoadingOutlined\n              style={{ fontSize: 30, color: \"#e1206d\", marginTop: mTop(-30) }}\n            />\n          </div>\n          <p style={{ color: \"#e1206d\", marginTop: px(5) }}>loading...</p>\n        </div>\n      );\n    } else {\n      // console.log('-----展示', petList.length);\n      if (petList.length > 0) {\n        //找到了宠物，展示出来\n\n        // let petList = electronStore.get('doctorExam')\n        // console.log(petList);\n\n        let option = petList.map((item, index) => {\n          let { speciesId, url } = item;\n\n          let images = `url(${url}?download=0&width=150)`;\n          if (!url) {\n            switch (speciesId) {\n              case 1:\n                images = `url(${cat})`;\n\n                break;\n              case 2:\n                images = `url(${dog})`;\n                break;\n              default:\n                images = `url(${other})`;\n                break;\n            }\n          }\n          return (\n            <li\n              key={`${index}`}\n              style={{ margin: `${px(20)}px 0` }}\n              onClick={() => {\n                setValue('')\n                setVisible(false)\n                setPetList([])\n                petDetailInfoFun(item)\n                onSearch(item)\n              }}\n            >\n              <div className=\"item\" style={{ paddingLeft: px(40) }}>\n                <div\n                  className=\"img\"\n                  style={{\n                    width: px(50),\n                    height: px(50),\n                    marginRight: px(40),\n                    borderRadius: px(60),\n                    backgroundImage: images,\n                    // backgroundColor: 'hotpink',\n                  }}\n                >\n                  {/* <img src={images} style={{ width: px(40) }} /> */}\n                </div>\n\n                <div className=\"petInfo\">\n                  <p\n                    style={{\n                      color: \"#141414\",\n                      fontWeight: 600,\n                      fontSize: px(20),\n                    }}\n                  >\n                    {item.petName}\n                  </p>\n                  <p\n                    style={{ color: \"#797979\", fontSize: px(18) }}\n                  >{`Patient ID: ${item.patientId}`}</p>\n                  <p\n                    style={{ color: \"#797979\", fontSize: px(18) }}\n                  >{`Owner: ${item.owner}`}</p>\n                </div>\n              </div>\n            </li>\n          );\n        });\n        let liStyle = { backgroundColor: \"#fff\" };\n        if (petList.length > 4) {\n          liStyle = { height: px(500), overflowY: \"auto\" };\n        }\n\n        return (\n          <div className=\"searchPetList\">\n            <ul style={liStyle}>{option}</ul>\n          </div>\n        );\n      } else {\n        //没有发现这个宠物\n        return (\n          <div className=\"searchPetLoading\" style={{ padding: `${10}px 0` }}>\n            <p style={{ width: \"80%\", fontSize: px(18) }}>\n              Pet not found. Would you like to add a new patient?\n            </p>\n\n            <div\n              className=\"searchPetBtn\"\n              style={{ fontSize: px(18) }}\n              onClick={() => {\n                history.push(\"/pet/doctorAddPet\");\n              }}\n            >\n              <p style={{ padding: `${px(8)}px 0` }}>+ New Patient</p>\n            </div>\n          </div>\n        );\n      }\n    }\n  };\n\n  const inputChange = (text) => {\n    function isNumber(val) {\n      var regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\n      var regNeg =\n        /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\n      if (regPos.test(val) || regNeg.test(val)) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    //去除前后空格\n    let search = text.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\");\n    setValue(search);\n    if (search.length > 0) {\n      setVisible(true);\n      setLoading(true);\n\n      //搜索分成两种，一种是通过手输入数据搜索，一种是通过RFID扫描过后搜索\n\n      if (search.length === 15 && isNumber(search)) {\n        //这是RFID扫描后的搜索\n        fetchRequest4(\n          `/pet/getPetInfoByRFID/${search}/${storage.lastOrganization}`,\n          \"GET\"\n        )\n          .then((res) => {\n            console.log(\"----RFID搜索结果\", res);\n\n            if (res.flag === true && res.data) {\n              let {\n                createTime,\n                patientId,\n                petName,\n                firstName,\n                lastName,\n                url,\n                speciesId,\n                breedName,\n                gender,\n                birthday,\n                petId,\n                rfid,\n                weight,\n              } = res.data;\n              patientId = patientId || \"unknown\";\n              petName = petName || \"unknown\";\n              breedName = breedName || \"unknown\";\n              weight = weight || \"unknown\";\n              let owner = \"\";\n              if (!firstName) {\n                firstName = \"\";\n              }\n              if (!lastName) {\n                lastName = \"\";\n              }\n              if (lastName === \"\" && firstName === \"\") {\n                owner = \"unknown\";\n              } else {\n                owner = `${lastName} ${firstName}`;\n              }\n              createTime = moment(createTime).format(\"X\");\n              let petGender = \"\";\n              switch (`${gender}`) {\n                case \"1\":\n                  petGender = \"F\";\n\n                  break;\n                case \"0\":\n                  petGender = \"M\";\n                  break;\n                default:\n                  petGender = \"unknown\";\n                  break;\n              }\n              let petAge = \"unknown\";\n              if (birthday) {\n                petAge = moment(new Date()).diff(moment(birthday), \"years\");\n                // console.log('petAge', petAge);\n              }\n              let json = {\n                insertedAt: createTime,\n                patientId,\n                petName,\n                owner,\n                breed: breedName,\n                gender: petGender,\n                age: petAge,\n                petId,\n                id: 0,\n                weight,\n                rfid,\n                url,\n                speciesId,\n              };\n              let searchData = [];\n              searchData.push(json);\n              setLoading(false);\n              setPetList(searchData);\n            } else if (\n              res.flag === true &&\n              res.msg === \"该组织下无此宠物信息\"\n            ) {\n              console.log(\"找到了但是不是在这个组织下\");\n              setLoading(false);\n              setModalVis(true);\n              setIsNotFound(false);\n              setValue(\"\");\n              setVisible(false);\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: false,\n              //   heardSearchText: ''\n              // })\n            } else {\n              console.log(\"没有找到\");\n              setLoading(false);\n              setModalVis(true);\n              setIsNotFound(true);\n              setValue(\"\");\n              setVisible(false);\n\n              // this.setState({\n              //   loading: false,\n              //   modalVis: true,\n              //   isNotFound: true,\n              //   heardSearchText: ''\n              // })\n            }\n          })\n          .catch((err) => {\n            console.log(\"抛出异常:\", err);\n            setLoading(false);\n          });\n        return;\n      }\n\n      /**\n       * 使用indexof方法实现模糊查询\n       *     语法：stringObject.indexOf(searchvalue, fromindex)\n       *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n       *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n       *\n       * list         原数组\n       * keyWord      查询关键词\n       * searchData   查询的结果\n       *\n       * toLowerCase（）方法：将字符串统一转成小写\n       * toUpperCase（）方法：将字符串统一转成大写\n       *\n       */\n      // let list = allPetList\n      let list = petListArr || []\n\n      let searchData = [];\n      let keyWord = search;\n      for (let i = 0; i < list.length; i++) {\n        let petName = list[i].petName ? list[i].petName.toLowerCase() : ''\n        let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : ''\n        let rfid = list[i].rfid || ''\n        if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n          || `${rfid}`.indexOf(keyWord) !== -1\n        ) {\n          searchData.push(list[i]);\n        }\n      }\n      // console.log('找到的宠物', searchData);\n      console.log(\n        \"---搜索词：\",\n        search,\n        \"---搜索数组：\",\n        list,\n        \"----搜索结果：\",\n        searchData\n      );\n      setLoading(false);\n      setPetList(searchData);\n    } else {\n      setVisible(false);\n    }\n  };\n\n  //左侧菜单栏\n  const menuList = () => {\n    let name = electronStore.get(`${storage.userId}-isClical`) ? 'Exit Clinical Study Mode' : 'Enter Clinical Study Mode'\n    let menulistArr = [\n      { name: \"Home\", index: \"1\" },\n      { name: \"All Patients\", index: \"2\" },\n      { name: \"Scheduled Patients\", index: \"3\" },\n      { name: \"My Account\", index: \"4\" },\n      {name:\"Org & Practice Profiles\" ,index:\"10\"},\n      { name: \"Settings\", index: \"5\" },\n      { name: name, index: \"6\" },\n      { name: `Billing & Subscriptions`, index: \"7\" },\n      { name: \"About Mella\", index: \"8\" },\n      { name: \"Log Out\", index: \"9\" },\n    ];\n    let menuOption = menulistArr.map((item, index) => {\n      let pColor = menuMouseOverIndex === item.index ? \"#e1206d\" : \"#1a1a1a\";\n      return (\n        <li\n          key={item.index}\n          style={{ padding: `${px(15)}px ${px(20)}px` }}\n          onClick={() => {\n            menulistClick(item);\n          }}\n          onMouseOver={(e) => {\n            setMenuMouseOverIndex(item.index);\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOver();\n          }}\n          onMouseOut={(e) => {\n            setMenuMouseOverIndex(\"\");\n            e.stopPropagation();\n            e.nativeEvent.stopImmediatePropagation();\n            menuMouseOut();\n          }}\n        >\n          <div className=\"item\">\n            <p style={{ color: pColor }}>{item.name}</p>\n          </div>\n        </li>\n      );\n    });\n\n    return <ul>{menuOption}</ul>;\n  };\n  const menulistClick = (e) => {\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    setMenuVisible(false);\n    setMenuMouseOverIndex(\"\");\n    console.log(\"click \", e);\n\n    switch (e.index) {\n      case \"1\":\n        history.push(\"/MainBody\");\n        setMenuNum(e.index);\n        break;\n      case \"2\":\n        history.push(\"/MainBody\");\n        console.log(\"全部的宠物\");\n        setMenuNum(e.index);\n        break;\n      case \"3\":\n        history.push(\"/MainBody\");\n        console.log(\"预约宠物\");\n        setMenuNum(e.index);\n        break;\n      case \"4\":\n        history.push(\"/MainBody\");\n        setMenuNum(e.index);\n        break;\n      case \"5\":\n        //跳转到设置\n        // menu5Click()\n        history.push(\"/menuOptions/settings\");\n        // setMenuNum(e.index)\n        break;\n      case \"6\":\n        if (e.name === \"Exit Clinical Study Mode\") {\n          setMenuNum('1');\n          electronStore.set(`${storage.userId}-isClical`, false)\n        } else {\n          setMenuNum(e.index);\n          electronStore.set(`${storage.userId}-isClical`, true)\n          setSelectHardwareType(\"mellaPro\");\n        }\n        history.push(\"/MainBody\");\n        console.log(\"临床测试\");\n        break;\n      case \"7\":\n        console.log(\"billing\");\n        break;\n\n      case \"8\":\n        setModalVisible(true);\n        console.log(\"关于\");\n        break;\n      case \"9\":\n        console.log(\"退出登录\");\n        storage.userId = \"\";\n        storage.roleId = \"\";\n        storage.userWorkplace = \"\";\n        storage.lastOrganization = \"\";\n        storage.lastWorkplaceId = \"\";\n        storage.connectionKey = \"\";\n        storage.isClinical = \"false\";\n        setMenuNum(\"1\");\n        history.push(\"/\");\n        break;\n\n      case \"10\":\n        history.push('/menuOptions/ConnectWorkplace');\n        break;\n\n      default:\n        break;\n    }\n  };\n  const menuMouseOut = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    mouseoutTimer = setTimeout(() => {\n      setMenuVisible(false);\n      mouseoutTimer && clearTimeout(mouseoutTimer);\n    }, 1000);\n  };\n  const menuMouseOver = () => {\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    setMenuVisible(true);\n  };\n  const updatePage = () => {\n    switch (updateStatus) {\n      case \"init\":\n        return (\n          <div\n            className=\"updateBtn\"\n            style={{ height: px(40) }}\n            onClick={() => {\n              setDownLoadingNum(0);\n              setUpdateStatus(\"check\");\n\n              ipcRenderer.send(\"clickUpdateBtn\");\n            }}\n          >\n            Check for Updates\n          </div>\n        );\n      case \"check\":\n        return (\n          <div className=\"updateLoading flex\">\n            <div className=\"loadIcon1\">\n              <LoadingOutlined\n                style={{ fontSize: 30, color: \"#e1206d\", marginRight: px(20) }}\n              />\n            </div>\n            <p style={{ color: \"#e1206d\" }}>Checking for updates</p>\n          </div>\n        );\n      case \"lastVersion\":\n        return (\n          <div style={{ fontSize: px(22), }}>\n            already the latest version\n          </div>\n        )\n      case 'error':\n        return (\n          <div style={{ fontSize: px(22), }}>\n            Failed to get the latest version, please try again later\n          </div>\n        )\n\n\n      case \"newVersion\":\n        return (\n          <div style={{ fontSize: px(22) }}>\n            {`Found new version V${lastVersion}`}\n          </div>\n        );\n      case \"downLoading\":\n        return (\n          <div style={{ fontSize: px(22) }}>\n            {`Download progress: ${downLoadNum}%`}\n          </div>\n        );\n\n      default:\n        break;\n    }\n  };\n  //关于界面\n  const modal = () => {\n    return (\n      <div\n        className=\"settingModal\"\n        style={{ height: `${document.documentElement.clientHeight}px` }}\n      >\n        <div className=\"writeBox\" style={{ borderRadius: px(25) }}>\n          <div className=\"modalHeadr\">\n            <div className=\"close\">\n              <div\n                className=\"imgBox\"\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => {\n                  setModalVisible(false);\n                  setUpdateStatus(\"init\");\n                }}\n              >\n                <img src={close} style={{ width: px(23) }} />\n              </div>\n            </div>\n            <div className=\"heaerCenter\">\n              <div className=\"heaerCenterL\">\n                <img src={mellaLogo} style={{ width: \"80%\" }} />\n              </div>\n              <div className=\"heaerCenterR\">\n                <h1 style={{ fontSize: px(45), marginBottom: px(10) }}>\n                  About the System\n                </h1>\n                <div className=\"version\">\n                  <div\n                    className=\"versionL\"\n                    style={{ fontSize: px(22), width: px(180) }}\n                  >\n                    Version\n                  </div>\n                  <div className=\"versionR\" style={{ fontSize: px(24) }}>\n                    {version}\n                  </div>\n                </div>\n                <div className=\"version\">\n                  <div\n                    className=\"versionL\"\n                    style={{ fontSize: px(22), width: px(180) }}\n                  >\n                    Last Checked\n                  </div>\n                  <div className=\"versionR\" style={{ fontSize: px(24) }}>\n                    {updateTime}\n                  </div>\n                </div>\n\n                <div className=\"check\" style={{ marginTop: px(20) }}>\n                  {updatePage()}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"modalfoot\">\n            <div\n              className=\"about\"\n              style={{ marginTop: px(40), fontSize: px(18) }}\n            >\n              Nanjing Jiubian Technology Co., Ltd. was founded in 2019, located\n              in Nanjing Yuhuatai Software Valley Branch City, the company\n              brings together medical sensors, mobile Internet and other\n              industry's top professionals, business areas covering artificial\n              intelligence, smart medical, pet health, sleep monitoring, etc.,\n              is a design, research and development, production, sales, service\n              in one of the high-tech companies. The nine-sided science and\n              technology to \"the number of heavens and earths, starting from\n              one, finally nine\" as the cultural concept, adhering to the\n              essence of Chinese artisans, with an international vision, always\n              standing in the forefront of bio-intelligent medical monitoring\n              technology.\n            </div>\n\n            <div className=\"aLable\">\n              <a\n                href=\"#\"\n                style={{ fontSize: px(18), marginRight: px(50) }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >\n                Terms and Agreements\n              </a>\n              <a\n                href=\"#\"\n                style={{ fontSize: px(18) }}\n                onClick={(e) => {\n                  e.preventDefault();\n                }}\n              >\n                Privacy Policy\n              </a>\n            </div>\n\n            <div className=\"foot\" style={{ marginBottom: px(40) }}>\n              © 2021 Mella Pet Care All RIghts Reserved\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //设备列表界面\n  const devices = () => {\n    let userId = storage.userId;\n    // electronStore.delete(`${userId}-deviceList`)\n    let deviceList = electronStore.get(`${userId}-deviceList`);\n    console.log(\"---\", deviceList);\n    if (!deviceList) {\n      let str = `${getRamNumber()}`;\n      for (let i = 0; i < 5; i++) {\n        str += `:${getRamNumber()}`;\n      }\n      console.log(\"随机生成的mac地址:\", str);\n      deviceList = [{ name: \"MellaPro\", deviceType: \"mellaPro\", macId: str }];\n      electronStore.set(`${userId}-deviceList`, deviceList);\n    }\n\n    function getRamNumber() {\n      var result = \"\";\n      for (var i = 0; i < 2; i++) {\n        result += Math.floor(Math.random() * 16).toString(16); //获取0-15并通过toString转16进制\n      }\n      //默认字母小写，手动转大写\n      return result.toLowerCase(); //另toLowerCase()转小写\n    }\n\n    // deviceList = [\n    //   // { name: 'Add Device', deviceType: 'add', macId: '0' },\n    //   { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\n    //   { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:51:66' },\n    //   { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:35:66' },\n    //   { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:24:33:44:55:66' },\n    //   { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:25:66' },\n    //   { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:56:66' },\n    // ]\n\n    let options = deviceList.map((item, index) => {\n      return (\n        <li\n          className=\"flex\"\n          key={`${index}`}\n          style={{ marginBottom: px(15), marginTop: px(5) }}\n          onClick={() => {\n            console.log(item.macId);\n            setSelectDeviceMac(item.macId);\n          }}\n        >\n          <div className=\"liLeft\" style={{ fontSize: px(16) }}>\n            {item.name}\n          </div>\n          <div className=\"liCenter\" style={{ fontSize: px(16) }}>\n            {item.macId}\n          </div>\n          <div className=\"liRight\">\n            <div\n              className=\"circle flex\"\n              style={{ width: px(18), height: px(18) }}\n            >\n              {selectDeviceMac === item.macId && <div className=\"redCircle\" />}\n            </div>\n          </div>\n        </li>\n      );\n    });\n\n    return (\n      <div\n        className=\"settingModal\"\n        style={{ height: `${document.documentElement.clientHeight}px` }}\n      >\n        <div\n          className=\"writeBox devices\"\n          style={{ borderRadius: px(25), width: px(400) }}\n        >\n          <div className=\"deviceHeadr\">\n            <div className=\"close\">\n              <div\n                className=\"imgBox\"\n                style={{ padding: `0 ${px(30)}px` }}\n                onClick={() => setDeviceModel(false)}\n              >\n                <img src={close} style={{ width: px(23) }} />\n              </div>\n            </div>\n            <div className=\"logo flex\">\n              <img src={mellaLogo} style={{ width: px(60) }} />\n              <div style={{ fontSize: px(22), marginTop: px(30) }}>Devices</div>\n              <div\n                className=\"bodyText\"\n                style={{ fontSize: px(18), marginTop: px(40) }}\n              >\n                Select the device you would\n                <br />\n                like to use or add a new device.\n              </div>\n            </div>\n          </div>\n\n          <div className=\"deviceCenter\">\n            <ul>{options}</ul>\n          </div>\n          <div\n            className=\"deviceFooter flex\"\n            style={{\n              borderBottomLeftRadius: px(25),\n              borderBottomRightRadius: px(25),\n            }}\n          >\n            <div\n              className=\"btn\"\n              style={{ height: px(40) }}\n              onMouseDown={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[0].style.opacity = \"0.5\";\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[0].style.opacity = \"1\";\n              }}\n              onClick={() => {\n                setDeviceModel(false);\n                history.push(\"/menuOptions/AddDevice\");\n              }}\n            >\n              <p className=\"btnText\" style={{ fontSize: px(18) }}>\n                New Device\n              </p>\n            </div>\n            <div\n              className=\"btn\"\n              style={{ height: px(40) }}\n              onMouseDown={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[1].style.opacity = \"0.5\";\n              }}\n              onMouseUp={() => {\n                let button = document.querySelectorAll(\n                  \"#heard .deviceFooter .btn\"\n                );\n                button[1].style.opacity = \"1\";\n              }}\n              onClick={() => {\n                electronStore.set(\n                  `${storage.userId}-selectDevice`,\n                  selectDeviceMac\n                );\n                setDeviceModel(false);\n              }}\n            >\n              <p className=\"btnText\" style={{ fontSize: px(18) }}>\n                Connect\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  //点击蓝牙搜索图标\n  const blueClick = () => {\n    console.log(\"点击了蓝牙图标\");\n    setIsShowBlePetList(false);\n    setSearchMac(true);\n  };\n  //点击取消链接\n  const cencleClick = (e) => {\n    console.log(\"mac列表为空,点击取消\");\n    setBluDevice([]);\n    setSearchMac(false);\n    setIsShowBlePetList(false);\n    setIsMatchPet(false);\n    setMacMatchPetList([]);\n    if (e) {\n      e.preventDefault();\n    }\n    matchingTimer && clearTimeout(matchingTimer);\n  };\n  //搜索狗牌的蓝牙\n  const blusearchBody = () => {\n    console.log(\"搜索狗牌的蓝牙\", searchMac, bluDevice);\n    if (isShowBlePetList) {\n      if (isMatchPet) {\n        return (\n          <div\n            className=\"searchPetLoading\"\n            style={{ padding: `${20}px 0`, width: \"100%\" }}\n          >\n            <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n              <LoadingOutlined\n                style={{ fontSize: 30, color: \"#e1206d\", marginTop: mTop(-30) }}\n              />\n            </div>\n            <p style={{ color: \"#e1206d\", marginTop: px(5), width: \"80%\" }}>\n              matching...\n            </p>\n\n            <a\n              href=\"#\"\n              style={{ color: \"#e1206d\", marginTop: px(30) }}\n              onClick={cencleClick}\n            >\n              Cencle\n            </a>\n          </div>\n        );\n      } else {\n        if (macMatchPetList.length > 0) {\n          let option = macMatchPetList.map((item, index) => {\n            let { speciesId, url } = item;\n\n            let images = `url(${url}?download=0&width=150)`;\n            if (!url) {\n              switch (speciesId) {\n                case 1:\n                  images = `url(${cat})`;\n                  break;\n                case 2:\n                  images = `url(${dog})`;\n                  break;\n                default:\n                  images = `url(${other})`;\n                  break;\n              }\n            }\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  cencleClick();\n                  onSearch(item);\n                }}\n              >\n                <div className=\"item\" style={{ paddingLeft: px(40) }}>\n                  <div\n                    className=\"img\"\n                    style={{\n                      width: px(50),\n                      height: px(50),\n                      marginRight: px(40),\n                      borderRadius: px(60),\n                      backgroundImage: images,\n                    }}\n                  >\n                    {/* <img src={images} style={{ width: px(40) }} /> */}\n                  </div>\n\n                  <div className=\"petInfo\">\n                    <p\n                      style={{\n                        color: \"#141414\",\n                        fontWeight: 600,\n                        fontSize: px(20),\n                        textAlign: \"start\",\n                      }}\n                    >\n                      {item.petName}\n                    </p>\n                    <p\n                      style={{ color: \"#797979\", fontSize: px(18) }}\n                    >{`Patient ID: ${item.patientId}`}</p>\n                    <p\n                      style={{ color: \"#797979\", fontSize: px(18) }}\n                    >{`Owner: ${item.owner}`}</p>\n                  </div>\n                </div>\n              </li>\n            );\n          });\n          let liStyle = { backgroundColor: \"#fff\" };\n          if (petList.length > 4) {\n            liStyle = { height: px(500), overflowY: \"auto\" };\n          }\n\n          return (\n            <div className=\"searchPetList flex\">\n              <ul style={liStyle}>{option}</ul>\n              <a\n                href=\"#\"\n                style={{\n                  color: \"#e1206d\",\n                  marginTop: px(10),\n                  marginBottom: px(21),\n                }}\n                onClick={cencleClick}\n              >\n                Cencle\n              </a>\n            </div>\n          );\n        }\n      }\n    } else {\n      if (noUSB) {\n        return (\n          <div className=\"searchPetLoading\" style={{ padding: `${10}px 0` }}>\n            <p style={{ width: \"80%\", fontSize: px(18) }}>\n              Please insert address and scan\n            </p>\n\n            <a href=\"#\" style={{ color: \"#e1206d\" }} onClick={cencleClick}>\n              Cencle\n            </a>\n          </div>\n        );\n      } else {\n        if (bluDevice.length > 0) {\n          let option = bluDevice.map((item, index) => {\n            return (\n              <li\n                key={`${index}`}\n                style={{ margin: `${px(20)}px 0` }}\n                onClick={() => {\n                  console.log(\"mac列表为空,点击列表内容\");\n                  setBluDevice([]);\n                  // setSearchMac(false)\n                  setIsShowBlePetList(true);\n                  setIsMatchPet(true);\n                  matchingTimer && clearTimeout(matchingTimer);\n                  matchingTimer = setTimeout(() => {\n                    let haveFlog = false,\n                      index = -1;\n                    for (let i = 0; i < testPetList.length; i++) {\n                      if (testPetList[i].macId === item) {\n                        haveFlog = true;\n                        index = i;\n                        break;\n                      }\n                    }\n                    if (haveFlog) {\n                      if (storage.lastOrganization === \"1\") {\n                        matchPet(testPetList[index].petId);\n                      } else {\n                        setModalVis(true);\n                        setIsNotFound(false);\n                        cencleClick();\n                      }\n                    } else {\n                      setModalVis(true);\n                      setIsNotFound(true);\n                      cencleClick();\n                    }\n\n                    setIsMatchPet(false);\n                    matchingTimer && clearTimeout(matchingTimer);\n                  }, 2000);\n                }}\n              >\n                <div className=\"item\" style={{ paddingLeft: px(40) }}>\n                  <div className=\"petInfo\">\n                    <p\n                      style={{\n                        color: \"#141414\",\n                        fontWeight: 600,\n                        fontSize: px(20),\n                      }}\n                    >\n                      mac:{item}\n                    </p>\n                  </div>\n                </div>\n              </li>\n            );\n          });\n          let liStyle = { backgroundColor: \"#fff\" };\n          if (bluDevice.length > 4) {\n            liStyle = { height: px(500), overflowY: \"auto\" };\n          }\n          return (\n            <div className=\"searchPetList\" style={{ flexDirection: \"column\" }}>\n              <ul style={liStyle}>{option}</ul>\n              <a\n                href=\"#\"\n                style={{\n                  color: \"#e1206d\",\n                  marginTop: px(10),\n                  marginBottom: px(21),\n                }}\n                onClick={cencleClick}\n              >\n                Cencle\n              </a>\n            </div>\n          );\n        } else {\n          return (\n            <div\n              className=\"searchPetLoading\"\n              style={{ padding: `${20}px 0`, width: \"100%\" }}\n            >\n              <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\n                <LoadingOutlined\n                  style={{\n                    fontSize: 30,\n                    color: \"#e1206d\",\n                    marginTop: mTop(-30),\n                  }}\n                />\n              </div>\n              <p style={{ color: \"#e1206d\", marginTop: px(5), width: \"80%\" }}>\n                scanning...\n              </p>\n\n              <a\n                href=\"#\"\n                style={{ color: \"#e1206d\", marginTop: px(30) }}\n                onClick={cencleClick}\n              >\n                Cencle\n              </a>\n            </div>\n          );\n        }\n      }\n    }\n  };\n  const matchPet = (searchValue) => {\n    console.log(\"搜索词:\", searchValue);\n    let list = electronStore.get(\"doctorExam\");\n\n    let searchData = [];\n    let keyWord = searchValue;\n    for (let i = 0; i < list.length; i++) {\n      let petName = `${list[i].petId}`;\n      if (keyWord === petName) {\n        searchData.push(list[i]);\n      }\n    }\n\n    setIsMatchPet(false);\n\n    setMacMatchPetList(searchData);\n  };\n  const resize = () => {\n    setSize()\n    // let { offsetWidth, offsetHeight } = heardRef;\n    // console.log(\"resize\", heardRef);\n    // if (offsetHeight !== this.state.bodyHeight) {\n    //   this.setState({\n    //     bodyHeight: offsetHeight - px(50),\n    //   });\n    // }\n  };\n\n  useEffect(() => {\n    console.log(\"mac列表为空,初始化\");\n    mouseoutTimer && clearTimeout(mouseoutTimer);\n    setBluDevice([]);\n    return () => {\n      matchingTimer && clearTimeout(matchingTimer);\n    };\n  }, []);\n  useEffect(() => {\n    ipcRenderer.on(\"uploadMessage\", uploadMessage);\n    return () => {\n      ipcRenderer.removeListener(\"uploadMessage\", uploadMessage);\n    };\n  }, []);\n  useEffect(() => {\n    if (blueSearch) {\n      console.log(\"---渲染时执行----??????\");\n      ipcRenderer.on(\"sned\", _send);\n      ipcRenderer.on(\"noUSB\", _noUSB);\n      return () => {\n        console.log(\"----卸载----?????????/\");\n        ipcRenderer.removeListener(\"sned\", _send);\n        ipcRenderer.removeListener(\"noUSB\", _noUSB);\n      };\n    }\n  }, []);\n  useEffect(() => {\n    //监听屏幕窗口改变\n    // window.addEventListener(\"resize\", resize());\n    console.log('====================================');\n    console.log('window.screen.availWidth', window.screen.availWidth);\n    console.log('====================================');\n    console.log(px(50));\n    setSize({ height: 50 });\n  }, [window.screen.availWidth])\n\n  return (\n    <div id=\"heardUI\">\n      <div id=\"heardUITop\" />\n      <div\n        id=\"heard\"\n        style={size}\n        ref={(val) => {\n          setHeaderRef(val);\n        }}\n      >\n        <div className=\"l\">\n          <div\n            className=\"menuF\"\n            style={{ marginLeft: px(40), marginRight: px(40) }}\n          >\n            <div\n              className=\"menu\"\n              onMouseOver={menuMouseOver}\n              onMouseOut={menuMouseOut}\n            >\n              <img src={menu} style={{ width: px(20) }} />\n              {menuVisible ? (\n                // true\n                <div className=\"manuBody\" style={{ top: px(20), left: px(-40) }}>\n                  <div\n                    className=\"triangle\"\n                    style={{\n                      borderLeft: `${px(10)}px solid transparent`,\n                      borderRight: `${px(10)}px solid transparent`,\n                      borderBottom: `${px(13)}px solid #fff`,\n                      left: px(40),\n                    }}\n                  />\n\n                  <div className=\"manuBodyList\" style={{ marginTop: px(13) }}>\n                    {menuList()}\n                  </div>\n                </div>\n              ) : null}\n            </div>\n          </div>\n\n          <div className=\"search\" style={{ width: px(300) }}>\n            <input\n              placeholder=\"Search Pet    &#xe63f;\"\n              style={{ fontSize: px(16), paddingLeft: px(20) }}\n              value={value}\n              onChange={(text) => {\n                inputChange(text);\n              }}\n              onKeyUp={(e) => {\n                // console.log(e);\n                if (e.keyCode === 13) {\n                  console.log(\"回车,去搜索\");\n                }\n                if (e.keyCode === 27) {\n                  console.log(\"清空\");\n                  setValue(\"\");\n                  setVisible(false);\n                }\n              }}\n            />\n            {blueSearch ? (\n              <div\n                className=\"searchIconFa bluSearch\"\n              // style={{ cursor: 'pointer', backgroundColor: 'pink' }}\n              // onClick={blueClick}\n              >\n                <div onClick={blueClick}>\n                  {/* <img src={blueSearchPng} style={{ width: '50%' }} /> */}\n                  <span\n                    className=\" iconfont icon-sousuo searchIcon\"\n                    style={{ fontSize: px(25) }}\n                  />\n                </div>\n\n                {searchMac ? (\n                  // true ?\n                  <div className=\"searchPet flex\" style={{ width: px(400) }}>\n                    <div\n                      className=\"triangle\"\n                      style={{\n                        borderLeft: `${px(20)}px solid transparent`,\n                        borderRight: `${px(20)}px solid transparent`,\n                        borderBottom: `${px(25)}px solid #fff`,\n                        // marginLeft: px(30),\n                        zIndex: 999,\n                      }}\n                    />\n\n                    <div className=\"searchPetBody\" style={{ width: \"100%\" }}>\n                      {blusearchBody()}\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n            ) : (\n              <div className=\"searchIconFa\">\n                <span\n                  className=\" iconfont icon-sousuo searchIcon\"\n                  style={{ fontSize: px(25) }}\n                />\n              </div>\n            )}\n\n            {visible ? (\n              // true ?\n              <div className=\"searchPet\" style={{ top: px(35), width: px(400) }}>\n                <div\n                  className=\"triangle\"\n                  style={{\n                    borderLeft: `${px(20)}px solid transparent`,\n                    borderRight: `${px(20)}px solid transparent`,\n                    borderBottom: `${px(25)}px solid #fff`,\n                    marginLeft: px(30),\n                    zIndex: 999,\n                  }}\n                />\n\n                <div className=\"searchPetBody\">{searchPetBody()}</div>\n              </div>\n            ) : null}\n          </div>\n        </div>\n\n        <div className=\"r\">\n          <div className=\"heardCenter\">\n            <div\n              className=\"message\"\n              onClick={() => history.push(\"/menuOptions/unassigned\")}\n            >\n              <img\n                src={message}\n                alt=\"\"\n                style={{ height: px(25), width: px(25) }}\n              />\n            </div>\n            <div\n              className=\"help\"\n              style={{ margin: `0 ${px(25)}px` }}\n              onClick={() => history.push(\"/menuOptions/help\")}\n            >\n              <img src={help} alt=\"\" style={{ height: px(25) }} />\n            </div>\n          </div>\n          <div className=\"min_close\" style={{ paddingRight: px(15) }}>\n            <div\n              className=\"min_icon\"\n              onClick={MINCOLOSE.minClock}\n              style={{ backgroundColor: minbgc, height: px(50), width: px(50) }}\n              onMouseEnter={MINCOLOSE.minMouseEnter}\n              onMouseLeave={MINCOLOSE.minMouseLeave}\n            >\n              <img src={rMin} alt=\"\" style={{ width: px(20) }} />\n            </div>\n            <div\n              className=\"min_icon\"\n              onClick={MINCOLOSE.closeClock}\n              style={{ backgroundColor: closebgc, height: px(50), width: px(50) }}\n              onMouseEnter={MINCOLOSE.closeMouseEnter}\n              onMouseLeave={MINCOLOSE.closeMouseLeave}\n            >\n              <img src={rClose} alt=\"\" style={{ width: px(20) }} />\n            </div>\n          </div>\n        </div>\n\n        {modalvisible && modal()}\n        {deviceModel && devices()}\n\n        <MyModal\n          // visible={true}\n          visible={modalVis}\n          element={\n            <div\n              className=\"tip\"\n              style={{ width: px(420), height: px(480), borderRadius: px(20) }}\n            >\n              <div\n                className=\"close\"\n                style={{ height: px(60) }}\n                onClick={() => setModalVis(false)}\n              >\n                <div className=\"flex\" style={{ height: px(60), width: px(60) }}>\n                  <img src={close} alt=\"\" style={{ width: px(20) }} />\n                </div>\n              </div>\n              <div className=\"text\">\n                <h1 style={{ fontSize: px(36), marginTop: px(30) }}>\n                  {\" \"}\n                  {isNotFound ? \"Pet not found!\" : \"Pet found!\"}\n                </h1>\n              </div>\n              <div className=\"flex\" style={{ margin: `${px(20)}px 0` }}>\n                {isNotFound ? (\n                  <img src={redclose} width=\"50px\" />\n                ) : (\n                  <img src={jinggao} width=\"50px\" />\n                )}\n              </div>\n              <div\n                className=\"textbody\"\n                style={{ marginTop: px(30), color: \"#000\" }}\n              >\n                {isNotFound ? (\n                  <p style={{ fontSize: px(22) }}>\n                    {\" \"}\n                    This pet is not on your database\n                  </p>\n                ) : (\n                  <p style={{ fontSize: px(22) }}>\n                    Pet Identified but does not <br /> belong to your\n                    organization.\n                  </p>\n                )}\n              </div>\n\n              <div className=\"flex\" style={{ marginTop: px(30), width: \"100%\" }}>\n                <div\n                  className=\"btn flex\"\n                  style={{ height: px(40) }}\n                  onClick={() => {\n                    setModalVis(false);\n                    cencleClick();\n                  }}\n                >\n                  <p>OK</p>\n                </div>\n              </div>\n            </div>\n          }\n        />\n      </div>\n    </div>\n\n  );\n};\n\nHeard.propTypes = {\n  onReturn: PropTypes.func,\n  onSearch: PropTypes.func,\n  menu1Click: PropTypes.func,\n  menu2Click: PropTypes.func,\n  menu3Click: PropTypes.func,\n  menu4Click: PropTypes.func,\n  menu5Click: PropTypes.func,\n  menu6Click: PropTypes.func,\n  menu7Click: PropTypes.func,\n  menu8Click: PropTypes.func,\n  menu9Click: PropTypes.func,\n  blueSearch: PropTypes.bool,\n};\nHeard.defaultProps = {\n  onSearch: () => { },\n  onReturn: () => { },\n  menu1Click: () => { },\n  menu2Click: () => { },\n  menu3Click: () => { },\n  menu4Click: () => { },\n  menu5Click: () => { },\n  menu6Click: () => { },\n  menu7Click: () => { },\n  menu8Click: () => { },\n  menu9Click: () => { },\n  blueSearch: false,\n};\n\nexport default connect(\n  state => ({\n    menuNum: state.userReduce.menuNum,\n    petListArr: state.petReduce.petListArr,\n  }),\n  { setMenuNum, setSelectHardwareType, petDetailInfoFun }\n)(Heard)\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorAddPet\\DoctorAddPet.jsx",["560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx",["584","585","586","587","588","589","590","591","592","593","594","595","596"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx",["597","598","599","600","601","602","603","604"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\editPetInfo\\EditPetInfo.jsx",["605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\hardWareTypeUI.jsx",["626","627","628"],"import React, { Component, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { px } from \"../../utils/px\";\r\nimport mellaPro from \"./../../assets/img/hardList-mella.png\";\r\nimport biggie from \"./../../assets/img/hardList-biggie.png\";\r\nimport rfid from \"./../../assets/img/hardList-rfid.png\";\r\nimport tape from \"./../../assets/img/hardList-tape.png\";\r\nimport add from \"./../../assets/img/hardList-add.png\";\r\nimport maeBowl from \"./../../assets/img/hardList-maeBowl.png\";\r\nimport otterEQ from \"./../../assets/img/hardList-otterEQ.png\";\r\nimport {\r\n  selectHardwareInfoFun,\r\n  setSelectHardwareType,\r\n  setMenuNum,\r\n} from \"./../../store/actions\";\r\nimport electronStore from \"../../utils/electronStore\";\r\n\r\nlet storage = window.localStorage;\r\n//devicesTypeList是index传过来的硬件种类以及种类下的所有硬件\r\nconst HardWareTypeUI = ({\r\n  bodyHeight,\r\n  devicesTypeList,\r\n  selectHardwareInfoFun,\r\n  setSelectHardwareType,\r\n  selectHardwareType,\r\n  setMenuNum,\r\n  menuNum,\r\n}) => {\r\n  //根据左侧列表的设备类型，获取当前选中的设备类型下选中的硬件,先看本地有没有存,没存就拿第一个展示\r\n\r\n  let options = devicesTypeList.map((item, index) => {\r\n    let img = null;\r\n    switch (item.type) {\r\n      case \"mellaPro\":\r\n        img = mellaPro;\r\n        break;\r\n\r\n      case \"biggie\":\r\n        img = biggie;\r\n        break;\r\n\r\n      case \"rfid\":\r\n        img = rfid;\r\n        break;\r\n\r\n      case \"tape\":\r\n        img = tape;\r\n        break;\r\n      case \"maeBowl\":\r\n        img = maeBowl;\r\n        break;\r\n      case \"add\":\r\n        img = add;\r\n        break;\r\n\r\n      case \"otterEQ\":\r\n        img = otterEQ;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    let borderStyle = ``;\r\n    if (item.type === selectHardwareType) {\r\n      borderStyle = ` 2px solid #3B3A3A`;\r\n    }\r\n\r\n    return (\r\n      <li\r\n        key={`${index}`}\r\n        style={{ padding: `${px(10)}px 0` }}\r\n        onClick={() => {\r\n          console.log(item.type);\r\n          if (menuNum !== \"6\"&&!electronStore.get(`${storage.userId}-isClical`)) {\r\n            setMenuNum(\"1\");\r\n            setSelectHardwareType(item.type);\r\n            if (item.type === \"add\") {\r\n            } else {\r\n              let devicesInfo = electronStore.get(\r\n                `${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`\r\n              );\r\n\r\n              //要做个处理,看保存的数据是否和当前的一致，如果不一致，就把当前的保存下来\r\n\r\n              if (!devicesInfo && item.devices[0]) {\r\n                devicesInfo = item.devices[0];\r\n                electronStore.set(\r\n                  `${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`,\r\n                  devicesInfo\r\n                );\r\n              }\r\n\r\n              selectHardwareInfoFun(devicesInfo);\r\n            }\r\n          } else {\r\n            setSelectHardwareType(\"mellaPro\");\r\n          }\r\n        }}\r\n      >\r\n        <div\r\n          style={{ border: borderStyle, padding: px(2), borderRadius: px(10) }}\r\n        >\r\n          <img src={img} alt=\"\" width={px(55)} />\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  useEffect(() => {\r\n    let Index = null;\r\n    for (let i = 0; i < devicesTypeList.length; i++) {\r\n      const element = devicesTypeList[i];\r\n      if (element.type === selectHardwareType) {\r\n        Index = i;\r\n        break;\r\n      }\r\n    }\r\n    if (Index === null) {\r\n      return;\r\n    }\r\n\r\n    let hard = devicesTypeList[Index];\r\n    if (hard && hard.type !== \"add\") {\r\n      let devicesInfo = electronStore.get(\r\n        `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`\r\n      );\r\n\r\n      if (!devicesInfo) {\r\n        devicesInfo = hard.devices[0];\r\n        electronStore.set(\r\n          `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`,\r\n          devicesInfo\r\n        );\r\n      } else {\r\n        let sameFlag = false;\r\n        console.log(\"============\", hard.devices, devicesInfo);\r\n        for (let i = 0; i < hard.devices.length; i++) {\r\n          const element = hard.devices[i];\r\n          if (\r\n            element.mac === devicesInfo.mac &&\r\n            element.name === devicesInfo.name\r\n          ) {\r\n            sameFlag = true;\r\n            break;\r\n          }\r\n        }\r\n        if (!sameFlag) {\r\n          devicesInfo = hard.devices[0];\r\n          electronStore.set(\r\n            `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`,\r\n            devicesInfo\r\n          );\r\n        }\r\n      }\r\n\r\n      console.log(\"保存的折本信息\", devicesInfo);\r\n\r\n      selectHardwareInfoFun(devicesInfo);\r\n    }\r\n  }, [devicesTypeList]);\r\n\r\n  return (\r\n    <div className=\"hardwareType\" style={{ width: px(80), height: bodyHeight }}>\r\n      <ul>{options}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nHardWareTypeUI.propTypes = {\r\n  bodyHeight: PropTypes.number,\r\n  devicesTypeList: PropTypes.array,\r\n};\r\n//默认值\r\nHardWareTypeUI.defaultProps = {\r\n  bodyHeight: 0,\r\n  devicesTypeList: [],\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    menuNum: state.userReduce.menuNum,\r\n  }),\r\n  { selectHardwareInfoFun, setSelectHardwareType, setMenuNum }\r\n)(HardWareTypeUI);\r\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\mainbody\\index.jsx",["629","630","631","632","633","634","635","636","637","638"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Heard from \"../../utils/heard/Heard\";\nimport { mTop, px, pX, win, timerFun } from \"../../utils/px\";\nimport HardAndPetsUI from \"./HardAndPetsUI\";\nimport HardWareTypeUI from \"./hardWareTypeUI\";\nimport TemperaturePage from \"../../pages/temperaturePage\";\nimport {\n  setHardwareList,\n  selectHardwareModalShowFun,\n  setIsHaveUsbDeviceFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n  setMellaDeviceIdFun,\n  setMellaMeasureNumFun,\n  setBiggieConnectStatusFun,\n  setBiggieBodyFatFun,\n  setBiggieBodyWeightFun,\n  setBiggieUnitFun,\n  setBiggieSameWeightCountFun,\n  setRulerConnectStatusFun,\n  setRulerMeasureValueFun,\n  setRulerUnitFun,\n  setRulerConfirmCountFun,\n  setReceiveBroadcastHardwareInfoFun,\n} from \"../../store/actions\";\nimport \"./mainbody.less\";\nimport { message } from \"antd\";\nimport electronStore from \"../../utils/electronStore\";\nimport AddDevice from \"./AddDevice\";\nimport BiggiePage from \"../../pages/biggiePage\";\nimport ScanPage from \"../../pages/scanPage\";\nimport { compareObject } from \"../../utils/current\";\nimport { compareArray } from \"../../utils/current\";\nimport AllPets from \"../../pages/allPetsPage\";\nimport ScheduledPetPage from \"../../pages/scheduledPetsPage\";\nimport AddScheduledPet from \"../../pages/addScheduledPet\";\nimport ClininalStudy from \"../../pages/clinicalStudyPage\";\nimport CombineScales from \"../../pages/combineScales\";\nimport OtterEQPage from '../../pages/otterEQ';\nimport MyAccount from \"../../pages/myAccount\";\nimport { Modal } from \"antd\";\n\nlet ipcRenderer = window.require(\"electron\").ipcRenderer;\nlet isMeasure = false; //是否正在测量,用于判断是否需要发送指定指令给USB,查看硬件是否连接\nlet initTime = 0; //初始化时间,用来计算底座没有回应温度计的时间差,如果时间差大于6秒代表断开连接\nlet num07 = 0; //接收到07命令行的次数,次数大于3跳出弹框\nlet firstEar = true; //为true代表一组数据测量完成,下组测量数据\nlet is97Time = null; //为了防抖，因为有时候断开连接和连接成功总是连续的跳出来，展示就会一直闪烁，因此引入时间差大于800ms才展示\nlet exchangeNum = 0; //奇数发送查询探头id指令，偶数发送询问配置\nlet time194 = 0\n\n//用于预测的东西\nlet clinicalYuce = [],\n  clinicalIndex = 0;\n\nlet storage = window.localStorage;\n\nclass App extends Component {\n  state = {\n    //body部分窗口高度\n    bodyHeight: 0,\n    //本地保存的硬件类型数组,不包括Add这个类型\n    devicesTypeList: [],\n    //展示硬件类型的数组\n    showHardWareTypeList: [],\n    //是否有USB设备\n    isHaveUsbDevice: true,\n    //mella温度计测量状态\n    mellaMeasureStatus: \"disconnected\", //connected,disconnected,isMeasuring,complete\n\n    //点击菜单的序号\n    clickMenuIndex: \"1\",\n    err07Visible: false,\n    units: '℉'\n  };\n  componentDidMount() {\n    ipcRenderer.send(\"big\", win());\n    timerFun();\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    //获取窗口高度\n    this.resize();\n    //react监听屏幕窗口改变\n    window.addEventListener(\"resize\", this.resize);\n\n    //获取设备类型\n    this.getDevicesType();\n\n    //检测USB设备发来的信息\n    ipcRenderer.on(\"sned\", this._send);\n    //检测是否有USB设备\n    ipcRenderer.on(\"noUSB\", this._noUSB);\n    //定时查看mella温度计是否与底座连接或断开\n    this._whether_to_connect_to_mella();\n\n    //获取本地设置\n    this.getLocalSetting();\n    //获取单位\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`) || {}\n    console.log('----', hardSet);\n    let { isHua, } = hardSet\n    if (isHua === false) {\n      this.setState({\n        units: '℃'\n      })\n    } else {\n      this.setState({\n        units: '℉'\n      })\n    }\n\n\n  }\n  componentWillUnmount() {\n    //组件销毁，取消监听\n    window.removeEventListener(\"resize\", this.resize);\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n    ipcRenderer.removeListener(\"sned\", this._send);\n    ipcRenderer.removeListener(\"noUSB\", this._noUSB);\n    this.detectTimer && clearInterval(this.detectTimer);\n    this.rulerTimer && clearTimeout(this.rulerTimer);\n  }\n  //检测到props里的hardwareList更新\n  UNSAFE_componentWillReceiveProps(prevProps) {\n    //对比props里的hardwareList和state里的hardwareList是否相同\n\n    if (!compareArray(prevProps.hardwareList, this.state.devicesTypeList)) {\n      let showHardWareTypeList = [].concat(prevProps.hardwareList);\n      showHardWareTypeList.push({\n        type: \"add\",\n        devices: [],\n      });\n      this.setState({\n        devicesTypeList: prevProps.hardwareList,\n        showHardWareTypeList,\n      });\n    }\n    if (!compareObject(prevProps.menuNum, this.state.clickMenuIndex)) {\n      this.setState({\n        clickMenuIndex: prevProps.menuNum,\n      });\n    }\n  }\n\n  changeFenBianLv = (e) => {\n    let ipcRenderer = window.electron.ipcRenderer;\n    // ipcRenderer.send('small')\n    ipcRenderer.send(\"big\", win());\n    // this.setState({}, () => {\n    //   if (this.props.test) {\n    //     if (this.props.test.current) {\n    //       this.props.test.current.getEchartsInstance().dispose();\n    //       this.props.test.current.getEchartsInstance().clear();\n    //       setTimeout(() => {\n    //         this.props.test.current.getEchartsInstance().resize();\n    //       }, 500);\n    //     }\n    //   }\n    // });\n\n  };\n  //获取本地设置\n  getLocalSetting = () => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (!hardSet) {\n      let settings = {\n        isHua: true,\n        is15: true,\n        self_tarting: false, //自启动\n        isBacklight: true,\n        isBeep: true,\n        backlightTimer: { length: 140, number: \"45\" },\n        autoOff: { length: 0, number: \"30\" },\n      };\n      electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\n    }\n  };\n  //检测USB设备发来的信息\n  _send = (e, data) => {\n    // console.log('检测USB设备发来的信息', data)\n    //data就是测量的数据，是十进制的数字\n    this.command(data)();\n  };\n  //监听是否有USB设备,true代表没有USB设备，false代表有USB设备\n  _noUSB = (e, data) => {\n    if (data === false) {\n      message.destroy();\n    } else {\n      if (this.state.isHaveUsbDevice) {\n        message.destroy();\n        message.error(\"The base is not detected. Please insert the base\", 0);\n      }\n    }\n    if (data === this.props.isHaveUsbDevice) {\n      this.props.setIsHaveUsbDeviceFun(!data);\n    }\n    if (data === this.state.isHaveUsbDevice) {\n      this.setState({\n        isHaveUsbDevice: !data,\n      });\n    }\n  };\n  //监听mella温度计是否与底座连接或断开\n  _whether_to_connect_to_mella = () => {\n    console.log(\"监听mella温度计是否与底座连接或断开\");\n    message.destroy();\n    this.detectTimer && clearInterval(this.detectTimer);\n    //2秒检测一次\n    this.detectTimer = setInterval(() => {\n      exchangeNum++;\n      //如果正在测量或者没有USB设备，不检测\n      if (isMeasure || !this.state.isHaveUsbDevice) {\n        return;\n      }\n      if (exchangeNum % 2 === 0) {\n        //让底座发送查询温度计信息指令\n        ipcRenderer.send(\"usbdata\", { command: \"07\", arr: [\"5A\"] });\n      } else {\n        ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n      }\n\n      //如果底座没有回应，则计算时间差,时间差大于5秒，则没与温度计连接\n      if (new Date() - initTime > 6000) {\n        this._disconnect_to_mella();\n      } else {\n      }\n    }, 2000);\n  };\n  //底座与温度计断开连接\n  _disconnect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus, setMellaDeviceIdFun } =\n      this.props;\n    if (mellaConnectStatus !== \"disconnected\") {\n      setMellaConnectStatusFun(\"disconnected\");\n    }\n    setMellaDeviceIdFun(\"\");\n  };\n  //底座与温度计连接\n  _connect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus } = this.props;\n    if (mellaConnectStatus !== \"connected\") {\n      setMellaConnectStatusFun(\"connected\");\n    }\n  };\n\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  command = (newArr) => {\n    let dataArr1 = newArr.map((item) => {\n      if (item.toString(16).length < 2) {\n        return \"0\" + item.toString(16);\n      } else {\n        return item.toString(16);\n      }\n    });\n    //除了255,其他都是温度计的数据\n    let {\n      setMellaConnectStatusFun,\n      setMellaMeasureValueFun,\n      setMellaPredictValueFun,\n      setMellaMeasurePartFun,\n      mellaMeasurePart,\n      mellaConnectStatus,\n      setBiggieBodyFatFun,\n      setBiggieBodyWeightFun,\n      setBiggieConnectStatusFun,\n      setBiggieUnitFun,\n      setBiggieSameWeightCountFun,\n    } = this.props;\n    let {\n      biggieConnectStatus,\n      biggieBodyFat,\n      biggieBodyWeight,\n      biggieUnit,\n      biggieSameWeightCount,\n    } = this.props.hardwareReduce;\n\n    const instruction = [\n      209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 194, 7, 99, 255, 182,\n    ];\n\n    if (newArr[2] !== 7 && newArr[2] !== 255 && newArr[2] !== 182) {\n      initTime = new Date();\n      num07 = 0;\n      if (mellaConnectStatus === \"disconnected\") {\n        this._connect_to_mella();\n      }\n    } else {\n      num07++;\n    }\n\n    const commandArr = {\n      209: () => {\n        //腋温\n        //第一次测量去获取探头ID\n        if (firstEar) {\n          firstEar = false;\n          console.log(\"去获取探头id\");\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        let temp1 = parseFloat(`${dataArr1[3]}.${dataArr1[4]}`);\n        let temp0 = parseFloat(`${dataArr1[5]}.${dataArr1[6]}`);\n        let Temp = temp0;\n        if (\n          Temp === 24.7 ||\n          Temp === 0 ||\n          Temp === null ||\n          Temp === undefined\n        ) {\n          return;\n        }\n\n        let dataS = {\n          sample: clinicalIndex++,\n          data0: temp0,\n          data1: temp1,\n        };\n        clinicalYuce.push(dataS);\n        if (clinicalYuce.length >= 30) {\n          setMellaPredictValueFun(clinicalYuce);\n        }\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n\n        if (mellaMeasurePart !== \"腋温\" || mellaMeasurePart !== \"肛温\") {\n          setMellaMeasurePartFun(\"腋温\");\n        }\n        this.props.setMellaMeasureNumFun(this.props.mellaMeasureNum + 1);\n      },\n      208: () => {\n        //耳温\n\n        if (firstEar) {\n          firstEar = false;\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        //现在探头0可能不存在，所以把探头0改为探头1\n        let temp0 = parseFloat(`${dataArr1[7]}.${dataArr1[8]}`);\n        let Temp = temp0;\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n\n        if (mellaMeasurePart !== \"耳温\") {\n          setMellaMeasurePartFun(\"耳温\");\n        }\n      },\n      193: () => {\n        //指令结束\\自动结束后\\温度计收到预测数据后温度计返回值,结束后可能还会粘一组测量中的数据\n        //为了清除黏贴的数据，使用定时器\n        this.time193 && clearTimeout(this.time193);\n        this.time193 = setTimeout(() => {\n          if (new Date() - time194 < 1000) {\n            this.time193 && clearTimeout(this.time193);\n            return;\n          }\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaMeasureValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            console.log('要去写了', units, temp);\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          this.time193 && clearTimeout(this.time193);\n        }, 500);\n      },\n      194: () => {\n        //硬件收到机器学习结果并停止测量，\n        this.time193 && clearTimeout(this.time193);\n        time194 = new Date()\n        console.log(\"---机器学习\", newArr);\n        if (mellaConnectStatus !== \"complete\") {\n          setMellaConnectStatusFun(\"complete\");\n        }\n        const timer = setTimeout(() => {\n          setMellaMeasureValueFun(this.props.mellaPredictReturnValue);\n\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaPredictReturnValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          clearTimeout(timer);\n        }, 80);\n        clinicalYuce = [];\n        clinicalIndex = 0;\n      },\n      192: () => {\n        //温度计收到40开始数据后返回的指令\n        switch (newArr[3]) {\n          case 90:\n            console.log(\"有探头，开始测量的返回指令·\");\n            break;\n          case 11:\n            console.log(\"没有探头，开始测量的返回值\");\n            break;\n        }\n      },\n      129: () => {\n        //返回硬件版本号\n        console.log(`返回的版本号为${newArr[3]}`);\n      },\n      135: () => {\n        //硬件的一些基本信息\n        /**\n         * ______________新版、旧版没法控制温度计__________________\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\n         * newArr[7] 无操作关机时间\n         * newArr[8] 背光时间\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\n         * newArr[10] 测量单位    01代表℃，00代表℉\n         */\n\n        let hardSet = electronStore.get(\n          `${storage.userId}-hardwareConfiguration`\n        );\n        if (!hardSet) {\n          hardSet = {\n            isHua: true,\n            is15: true,\n            self_tarting: false, //自启动\n            isBacklight: true,\n            isBeep: true,\n            backlightTimer: { length: 140, number: \"45\" },\n            autoOff: { length: 0, number: \"30\" },\n          };\n        }\n\n        let beep = hardSet.isBeep ? \"11\" : \"00\";\n        let unit = hardSet.isHua ? \"00\" : \"01\";\n\n        if (\n          dataArr1[7] === hardSet.autoOff.number &&\n          dataArr1[8] === hardSet.backlightTimer.number &&\n          dataArr1[9] === beep &&\n          dataArr1[10] === unit\n        ) {\n        } else {\n          console.log(\"不相同，去发送命令\");\n          let setArr = [\n            \"03\",\n            \"ed\",\n            \"07\",\n            \"dd\",\n            hardSet.autoOff.number,\n            hardSet.isBacklight ? hardSet.backlightTimer.number : \"00\",\n            hardSet.isBeep ? \"11\" : \"00\",\n            hardSet.isHua ? \"00\" : \"01\",\n          ];\n          ipcRenderer.send(\"usbdata\", { command: \"21\", arr: setArr });\n        }\n      },\n      238: () => {\n        //探头松动\n        console.log(\"探头松动\");\n        message.error(\n          \"The probe is loose, please re-install and measure again\",\n          5\n        );\n      },\n\n      98: () => {\n        //蓝牙连接断开\n        console.log(\n          \"断开连接---断开连接---断开连接---断开连接---断开连接---断开连接\"\n        );\n        firstEar = true;\n        // console.log(new Date() - is97Time);\n        if (new Date() - is97Time < 1300) {\n          return;\n        }\n        this._disconnect_to_mella();\n      },\n      97: () => {\n        //蓝牙连接\n        console.log(\n          \"连接成功---连接成功---连接成功---连接成功---连接成功---连接成功\"\n        );\n        this.getIdTimer && clearTimeout(this.getIdTimer);\n        this.getIdTimer = setTimeout(() => {\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n          this.getIdTimer && clearTimeout(this.getIdTimer);\n        }, 50);\n\n\n        is97Time = new Date();\n        this._connect_to_mella();\n      },\n      177: () => {\n        //探头id\n        let dataArr1 = newArr.map((item) => {\n          if (item.toString(16).length < 2) {\n            return \"0\" + item.toString(16);\n          } else {\n            return item.toString(16);\n          }\n        });\n\n        let id = \"\";\n        for (let i = 3; i < dataArr1.length - 2; i++) {\n          id += dataArr1[i];\n        }\n        // console.log(id, dataArr1[7]);\n        setMellaDeviceIdFun(id);\n        // this.setState({\n        //   probeID: id,\n        //   petVitalTypeId: dataArr1[7]\n        // })\n        if (dataArr1[7] === \"01\") {\n          if (mellaMeasurePart !== \"腋温\") {\n            setMellaMeasurePartFun(\"腋温\");\n          }\n        } else if (dataArr1[7] === \"02\") {\n          if (mellaMeasurePart !== \"肛温\") {\n            setMellaMeasurePartFun(\"肛温\");\n          }\n        } else if (dataArr1[7] === \"03\") {\n          if (mellaMeasurePart !== \"耳温\") {\n            setMellaMeasurePartFun(\"耳温\");\n          }\n        }\n      },\n      7: () => {\n        //发什么收什么，需要去重新插拔底座\n        console.log(\"重新插拔底座\");\n        if (num07 === 3 && this.state.err07Visible === false) {\n          this.setState({\n            err07Visible: true,\n          });\n        }\n      },\n      255: () => {\n        let length = newArr.length;\n        let frameLength = newArr[1]; //帧长\n        let itemLength = newArr[3] + 1; //数据位的长度   13\n        let dataIndex = 0;\n        let bluName = \"\";\n        let bluData = [];\n\n        while (itemLength < length && itemLength + 3 <= frameLength) {\n          let itemData = [];\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5]);\n          }\n          // console.log('--剪切的数据---', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              let str = \"\";\n              for (let i = 0; i < itemData.length; i++) {\n                let item = parseInt(itemData[i], 16);\n                str += String.fromCharCode(item);\n              }\n              bluName = str;\n              // console.log('--蓝牙名称:', bluName);\n\n              break;\n\n            case 255:\n              bluData = itemData;\n              break;\n            case 7:\n              console.log(\"---UUID\");\n              break;\n            case 239:\n              // console.log('---mac地址');\n              break;\n\n            case 3:\n              // console.log('----尺子的,不知道什么用');\n              break;\n\n            default:\n              console.log(\"直接跳出循环\");\n              return;\n          }\n          dataIndex = itemLength;\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\n        }\n        // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n        let { setReceiveBroadcastHardwareInfoFun, hardwareReduce } = this.props;\n\n        let { receiveBroadcastHardwareInfo } = hardwareReduce;\n\n        if (bluName.indexOf(\"C19\") !== -1 && bluData.length > 10) {\n          let json = {\n            deviceType: \"biggie\",\n            macId: \"00:00:00:00:00:00\",\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          let weight = `0x${bluData[10]}${bluData[11]}`;\n          let impedance = `0x${bluData[12]}${bluData[13]}`;\n          let sendWeight = null;\n          //C19发送的体重值单位只是KG\n          try {\n            weight = parseInt(weight) / 100;\n            if (impedance) {\n              impedance = parseInt(impedance);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n          if (weight === biggieBodyWeight) {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          } else {\n            setBiggieSameWeightCountFun(0);\n            setBiggieBodyWeightFun(weight);\n          }\n          if (impedance) {\n            setBiggieBodyFatFun(impedance);\n          }\n          if (biggieConnectStatus !== \"isMeasuring\") {\n            setBiggieConnectStatusFun(\"isMeasuring\");\n          }\n          if (biggieUnit !== \"kg\") {\n            setBiggieUnitFun(\"kg\");\n          }\n        } else if (bluName.indexOf(\"Mella Measure\") !== -1) {\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          // console.log('结束循环蓝牙名称', bluData)\n          let confirmBtn = bluData[8]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[11], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[9];\n          let num2 = bluData[10];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n        } else if (bluName.indexOf(\"Biggie\") !== -1 && bluData.length > 10) {\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n\n          let newArr = bluData;\n\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n\n          let json = {\n            deviceType: \"biggie\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n          //定义体重的控制字符\n          let weightControl = newArr[8];\n          //定义体重的值\n          let weight = `${getVal(newArr[9].toString(16))}${getVal(\n            newArr[10].toString(16)\n          )}`;\n          weight = parseInt(weight, 16);\n          //定义体脂值\n          let impedance = `${getVal(newArr[12].toString(16))}${getVal(\n            newArr[13].toString(16)\n          )}`;\n          impedance = parseInt(impedance, 16);\n          let arr11 = getVal(newArr[11].toString(16));\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n\n          let weightUnits = arr11[1] === \"1\" ? \"lb\" : \"kg\";\n          let biggieStatus = \"isMeasuring\";\n          switch (weightControl) {\n            case 1:\n              biggieStatus = \"connected\";\n              break;\n            case 2:\n              biggieStatus = \"isMeasuring\";\n              break;\n            case 3:\n              biggieStatus = \"complete\";\n              break;\n            default:\n              break;\n          }\n          if (biggieStatus !== biggieConnectStatus) {\n            setBiggieConnectStatusFun(biggieStatus);\n          }\n          if (weightUnits !== biggieUnit) {\n            setBiggieUnitFun(weightUnits);\n          }\n          if (weight !== biggieBodyWeight) {\n            setBiggieBodyWeightFun(weight);\n            setBiggieSameWeightCountFun(0);\n          } else {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          }\n          if (impedance !== biggieBodyFat) {\n            setBiggieBodyFatFun(impedance);\n          }\n        } else if (bluName.indexOf(\"MaeBowl\") !== -1 && bluData.length > 10) {\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          //定义硬件版本号\n          let hardwareVersion = bluData[7] + bluData[8];\n          //定义软件版本号\n          let softwareVersion = bluData[9];\n          //定义wifi标志位\n          let wifiFlag = bluData[10];\n          //定义控制字\n          let control = bluData[11];\n          //定义重量\n          let weight = `${getVal(bluData[12].toString(16))}${getVal(\n            bluData[13].toString(16)\n          )}`\n          weight = parseInt(weight, 16);\n          let arr11 = bluData[14]\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n          let weightUnits = null\n          switch (arr11[1]) {\n            case '0':\n              weightUnits = 'kg'\n\n              break;\n            case '1':\n              weightUnits = 'lb'\n\n              break;\n            case '2':\n              weightUnits = 'g'\n\n              break;\n            case '3':\n              weightUnits = 'ml'\n\n              break;\n            case '4':\n              weightUnits = 'oz'\n\n              break;\n\n            default:\n              break;\n          }\n          console.log({\n            // mac,\n            // hardwareVersion,\n            // softwareVersion,\n            wifiFlag,\n            control,\n            weight,\n            weightUnits,\n          });\n\n\n        } else if (bluName.indexOf(\"Tabby\") !== -1 && bluData.length > 10) {\n          // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          let confirmBtn = bluData[10]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[13], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[11];\n          let num2 = bluData[12];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n\n\n\n\n        }\n      },\n      182: () => {\n        console.log(\"打开了底座通信\");\n      },\n    };\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]];\n    } else {\n      return () => {\n        console.log(\"没有控制命令\", commandArr);\n      };\n    }\n  };\n\n  testCheck = (arr) => {\n    if (arr.length < 7) {\n      return false;\n    }\n    let i = 7;\n    let checkFloag = arr[i];\n\n    for (i = 8; i < arr.length - 2; i++) {\n      checkFloag = checkFloag ^ arr[i];\n    }\n    return checkFloag;\n  };\n  getMac = (arr) => {\n    // console.log(arr);\n    let str = arr[1].toString(16);\n    if (str.length === 1) {\n      str = \"0\" + str;\n    }\n    for (let i = 2; i < 7; i++) {\n      let item = arr[i].toString(16);\n      if (item.length === 1) {\n        item = \"0\" + item;\n      }\n      str += `:${item}`;\n      // }\n    }\n\n    return str;\n  };\n\n  //监听屏幕窗口改变\n  resize = () => {\n    let { offsetWidth, offsetHeight } = this.mainbody;\n    // console.log('resize', this.mainbody, { offsetWidth, offsetHeight });\n    if (offsetHeight !== this.state.bodyHeight) {\n      this.setState({\n        bodyHeight: offsetHeight - px(50),\n      });\n    }\n  };\n  //获取设备类型(渲染左侧硬件种类侧边栏)\n  getDevicesType = () => {\n    // let devicesTypeList = [\n    //   {\n    //     type: 'mellaPro',\n    //     devices: [\n    //       {\n    //         name: 'mellaPro',\n    //         mac: '',\n    //         deviceType: 'mellaPro',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'biggie',\n    //     devices: [\n    //       {\n    //         name: 'biggie',\n    //         mac: '',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       },\n    //       {\n    //         name: 'biggie002',\n    //         mac: '1253',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'otterEQ',\n    //     devices: [\n    //       {\n    //         name: 'otterEQ',\n    //         mac: '',\n    //         deviceType: 'otterEQ',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n\n    //   {\n    //     type: 'rfid',\n    //     devices: [\n    //       {\n    //         name: 'rfid',\n    //         mac: '',\n    //         deviceType: 'rfid',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'tape',\n    //     devices: [\n    //       {\n    //         name: 'tape',\n    //         mac: '',\n    //         deviceType: 'tape',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'maeBowl',\n    //     devices: [\n    //       {\n    //         name: 'maeBowl',\n    //         mac: '',\n    //         deviceType: 'maeBowl',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   }\n    // ]\n\n    let devicesTypeList =\n      electronStore.get(\n        `${storage.lastOrganization}-${storage.userId}-devicesTypeList`\n      ) || [];\n    // console.log(\"获取的设22222备列表\", devicesTypeList);\n    if (devicesTypeList.length === 0) {\n      devicesTypeList.push({\n        type: \"mellaPro\",\n        devices: [\n          {\n            name: \"mellaPro\",\n            mac: \"\",\n            deviceType: \"mellaPro\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"biggie\",\n        devices: [\n          {\n            name: \"biggie\",\n            mac: \"\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n          {\n            name: \"biggie002\",\n            mac: \"1253\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"tape\",\n        devices: [\n          {\n            name: \"tape\",\n            mac: \"45264\",\n            deviceType: \"tape\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"otterEQ\",\n        devices: [\n          {\n            name: \"otterEQ\",\n            mac: \"375082\",\n            deviceType: \"otterEQ\",\n            examRoom: \"\",\n          },\n        ],\n      });\n    }\n\n    let hardList = [].concat(devicesTypeList);\n    this.props.setHardwareList(hardList);\n    let showHardWareTypeList = [].concat(devicesTypeList);\n    showHardWareTypeList.push({\n      type: \"add\",\n      devices: [],\n    });\n\n    this.setState({\n      devicesTypeList,\n      showHardWareTypeList,\n    });\n  };\n  body = () => {\n    let { selectHardwareType } = this.props;\n\n    let { bodyHeight, clickMenuIndex } = this.state;\n    let measurePage = null;\n    switch (clickMenuIndex) {\n      case \"1\":\n        if (electronStore.get(`${storage.userId}-isClical`)) {\n          return (\n            <>\n              <HardAndPetsUI bodyHeight={bodyHeight} />\n              <ClininalStudy bodyHeight={bodyHeight} />\n            </>\n          );\n        } else {\n          switch (selectHardwareType) {\n            case \"mellaPro\":\n              measurePage = <TemperaturePage bodyHeight={bodyHeight}/>;\n\n              break;\n            case \"biggie\":\n              measurePage = <BiggiePage bodyHeight={bodyHeight}/>;\n              break;\n\n            case \"tape\":\n              measurePage = <ScanPage bodyHeight={bodyHeight}/>;\n              break;\n            case \"otterEQ\":\n              measurePage = <OtterEQPage bodyHeight={bodyHeight}/>;\n              break;\n\n            default:\n              break;\n          }\n          if (selectHardwareType === \"add\") {\n            return <AddDevice bodyHeight={bodyHeight} />;\n          } else {\n            return (\n              <>\n                <HardAndPetsUI bodyHeight={bodyHeight} />\n                {measurePage}\n              </>\n            );\n          }\n        }\n      case \"2\":\n        return <AllPets bodyHeight={bodyHeight} />;\n      case \"CombineScales\":\n        return <CombineScales bodyHeight={bodyHeight}/>;\n      case \"AddDevice\":\n        return <AddDevice bodyHeight={bodyHeight} />;\n      case \"3\":\n        return <ScheduledPetPage bodyHeight={bodyHeight} />;\n\n      case \"AddScheduledPet\":\n        return <AddScheduledPet bodyHeight={bodyHeight} />;\n      case \"6\":\n        return (\n          <>\n            <HardAndPetsUI bodyHeight={bodyHeight} />\n            <ClininalStudy bodyHeight={bodyHeight} />\n          </>\n        );\n\n      case \"4\":\n        return (\n          <MyAccount bodyHeight={bodyHeight} />\n        );\n\n      default:\n        break;\n    }\n  };\n\n  render() {\n    let { bodyHeight } = this.state;\n\n    return (\n      <div\n        className=\"flex\"\n        id=\"mainbody\"\n        ref={(val) => (this.mainbody = val)}\n        onClick={() => {\n          if (this.props.selectHardwareModalShowFun) {\n            this.props.selectHardwareModalShowFun(false);\n          }\n        }}\n      >\n        <Heard />\n        <div className=\"mainbody-body\">\n          <HardWareTypeUI\n            bodyHeight={bodyHeight}\n            devicesTypeList={this.state.showHardWareTypeList}\n          />\n          {this.body()}\n        </div>\n        <Modal\n          visible={this.state.err07Visible}\n          // visible={true}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          width={330}\n          closable={false}\n          footer={[]}\n          destroyOnClose={true}\n          wrapClassName=\"vetPrifileModal\"\n        >\n          <div id=\"vetPrifileModal\">\n            <div className=\"title\">prompt</div>\n\n            <div className=\"text\">Please re-plug the base device</div>\n\n            <div\n              className=\"btn\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginBottom: \"5px\",\n              }}\n            >\n              <button\n                onClick={() => {\n                  this.setState({\n                    err07Visible: false,\n                  });\n                  num07 = 0;\n                }}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\n    mellaMeasurePart: state.hardwareReduce.mellaMeasurePart,\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    hardwareReduce: state.hardwareReduce,\n    hardwareList: state.hardwareReduce.hardwareList,\n    hardwareInfo: state.hardwareReduce.selectHardwareInfo,\n    menuNum: state.userReduce.menuNum,\n    mellaPredictReturnValue: state.hardwareReduce.mellaPredictReturnValue,\n    test: state.userReduce.test\n  }),\n  {\n    setHardwareList,\n    selectHardwareModalShowFun,\n    setIsHaveUsbDeviceFun,\n\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n    setMellaDeviceIdFun,\n    setBiggieConnectStatusFun,\n    setBiggieBodyFatFun,\n    setBiggieBodyWeightFun,\n    setBiggieUnitFun,\n    setBiggieSameWeightCountFun,\n    setRulerConnectStatusFun,\n    setRulerMeasureValueFun,\n    setRulerUnitFun,\n    setRulerConfirmCountFun,\n    setReceiveBroadcastHardwareInfoFun,\n    setMellaMeasureNumFun,\n  }\n)(App);\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx",["639","640","641","642","643"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectAllExam.jsx",["644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671"],"////这是普通用户的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\nimport React, { Component } from 'react'\nimport {\n  Table,\n  Input,\n  Button,\n  Space,\n  message,\n  Menu,\n  Modal,\n  Select,\n  ConfigProvider\n\n} from 'antd';\nimport Draggable from \"react-draggable\";\nimport Button1 from '../../utils/button/Button'\nimport moment from 'moment'\n//import 'antd/dist/antd.css';\nimport Heard from '../../utils/heard/Heard'\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport './doctorSelectExam.less'\n\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { FetchEszVet } from '../../utils/FetchEszVet'\nimport { fetchRequest } from '../../utils/FetchUtil1'\nimport gender from '../../utils/gender'\nimport temporaryStorage from '../../utils/temporaryStorage';\nimport { MTop, mTop, pX, px, win } from '../../utils/px';\nimport { stopBubble } from '../../utils/current'\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\nimport { fetchRhapsody } from '../../utils/FetchUtil5';\nimport jinggao from './../../assets/img/jinggao.png'\nimport redclose from './../../assets/img/redclose.png'\nimport blackTriangle from './../../assets/img/blackTriangle.png'\nimport refresh from './../../assets/img/Refresh.png'\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\n\nimport electronStore from '../../utils/electronStore';\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\nlet storage = window.localStorage;\n\n\n\nexport default class DoctorSelectAllExam extends Component {\n  state = {\n    loading: false,\n    api: '',\n    id: '',  //选择location的id\n    locations: [],\n    data: [],\n    searchData: [],\n    searchText: '',\n    searchedColumn: '',\n    seleceID: '',  //宠物医生id\n    spin: false,   //刷新按钮是否旋转\n    unixToURI: '',\n    ezyVetToken: '',\n    current: 1,\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    heardSearchText: '',\n\n    isNotFound: true,\n    modalVis: false,\n\n    disabled: true,       //model是否可拖拽\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\n\n    sortBy: 'Time',\n    showsortBy: false\n  }\n  componentWillMount () {\n    // console.log('------------', this.props.location.listDate);\n    try {\n      if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\n        // console.log('------------', this.props.location);\n        let data = JSON.parse(this.props.location.listDate)\n        this.setState({\n          data,\n        })\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount () {\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    // ipcRenderer.send('big')\n    message.destroy()\n\n\n\n    storage.identity = '3'\n\n    if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\n      let data = JSON.parse(this.props.location.listDate)\n      this.setState({\n        data,\n      })\n    } else {\n      this.setState({\n        loading: true,\n      })\n    }\n    this._getExam()\n    temporaryStorage.logupVetInfo = {}\n    temporaryStorage.logupSelectOrganization = {}\n    temporaryStorage.logupSuccessData = {}\n    temporaryStorage.logupOrganization = {}\n    temporaryStorage.logupEmailCode = ''\n\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\n    for (let i = 0; i < items.length; i++) {\n      let style = items[i].style\n      style.padding = \"5px 5px\"\n      style.textAlign = 'center'\n\n\n    }\n\n  }\n  componentWillUnmount () {\n    message.destroy()\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    this.setState({\n\n    })\n  }\n\n  rhapsody = async (patientsArr) => {\n\n    // console.log(patientsArr);\n    let dataArr = []\n    try {\n      for (let i = 0; i < patientsArr.length; i++) {\n        let params = { query: `query { patient (id:\"${patientsArr[i].patientId}\") {  vitals { data{ id, weight{value}, createdAt, updatedAt}}}}` }\n        let item = await fetchRhapsody('', 'POST', params, storage.connectionKey)\n        if (item.data) {\n\n          let { vitals } = item.data.patient\n          let vitalData = vitals.data\n          console.log('-----------', vitalData);\n          let weight = ''\n          if (vitalData.length > 0) {\n            vitalData.sort((a, b) => {\n              return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n            })\n            if (vitalData[0].weight && vitalData[0].weight.value) {\n              patientsArr[i].weight = (vitalData[0].weight.value * 0.45).toFixed(1)\n            }\n          }\n\n        }\n\n      }\n      console.log(patientsArr);\n      patientsArr.sort((a, b) => {\n        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n      })\n      this.setState({\n        data: patientsArr,\n        loading: false\n      })\n\n      electronStore.set('doctorExam', patientsArr)\n    } catch (error) {\n      this.setState({\n        loading: false,\n      })\n      message.destroy()\n      message.error('Medical record acquisition failed')\n    }\n\n\n  }\n\n  _getExam = async () => {\n    console.log('进来了');\n\n\n\n\n\n    //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\n    if (storage.lastOrganization === '34') {\n\n      console.log(storage.connectionKey);\n      //1.获取用户id\n\n      let params = { query: `query { business { id, name, state } }` }\n      fetchRhapsody('', 'POST', params, storage.connectionKey)\n\n        .then(res => {\n          console.log('---', res);\n          if (res.errors) {\n            this.setState({\n              loading: false,\n              spin: false\n            })\n            message.destroy()\n            message.error('Data acquisition failed')\n\n          } else {\n            console.log('获取到了businessId');\n            let businessId = res.data.business.id\n            // let param = {\n            //   query: `query  { patients (businessId:\"${businessId}\") { data{ id, clientId, name,gender, dateOfBirth\n            //   species{id,name},\n            //   breeds{id,name},\n            //   createdAt,owners{owner{firstName,lastName} }}}` }\n            let param = {\n              query: `query {\n                patients (businessId:\"${businessId}\") {\n                    data{\n                         id,\n                         clientId,\n                         businessId,\n                         name\n                         gender,\n                         dateOfBirth,\n                         species{id,name},\n                         breeds{id,name},\n                         createdAt ,\n                         owners{owner{firstName,lastName}}\n                    }\n                }\n            }`\n            }\n\n            console.log('获取病历单的入参', param, JSON.stringify(param));\n            fetchRhapsody('', 'POST', param, storage.connectionKey)\n              .then(res => {\n                console.log(res);\n                if (res.errors) {\n                  this.setState({\n                    loading: false,\n                    spin: false\n                  })\n                  message.destroy()\n                  message.error('Failed to get pet list')\n\n                } else {\n                  let patientsArr = res.data.patients.data\n                  let dataArr = []\n                  for (let i = 0; i < patientsArr.length; i++) {\n                    const patient = patientsArr[i];\n                    let { id, name, gender, dateOfBirth, breeds, owners, createdAt } = patient\n\n                    createdAt = moment(createdAt).format('X')\n                    let owner = 'unknown'\n                    if (owners.length > 0) {\n                      let ownerItem = owners[0]\n                      if (ownerItem && ownerItem.owner) {\n                        let { firstName, lastName } = ownerItem.owner\n                        if (firstName || lastName) {\n                          owner = `${lastName} ${firstName}`\n                        }\n                      }\n\n                    }\n\n                    let breed = 'unknown'\n                    if (breeds.length > 0 && breeds[0].name) {\n                      breed = breeds[0].name\n                    }\n\n                    let petAge = 'unknown'\n                    if (dateOfBirth) {\n                      petAge = moment(new Date()).diff(moment(dateOfBirth), 'years')\n                      // console.log('petAge', petAge);\n                    }\n\n                    let json = {\n                      insertedAt: createdAt,\n                      patientId: id,\n                      petName: name,\n                      owner,\n                      breed,\n                      gender: gender || 'unknown',\n                      age: petAge,\n                      petId: '',\n                      id: `${i}`,\n                      weight: null,\n                      rfid: null,\n                      url: null,\n                      speciesId: null,\n                    }\n                    dataArr.push(json)\n\n\n                  }\n\n                  console.log(dataArr);\n\n\n\n                  this.rhapsody(dataArr)\n                }\n\n              })\n              .catch(err => {\n                console.log(err);\n                this.setState({\n                  loading: false,\n                  spin: false\n                })\n                message.destroy()\n                message.error('Failed to get pet list')\n              })\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false,\n            spin: false\n          })\n          message.destroy()\n          message.error('Data acquisition failed')\n        })\n\n\n\n\n      return\n    }\n\n\n\n\n\n\n\n\n    let params = {\n      doctorId: storage.userId,\n      offset: 0,\n      size: 100,\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n\n\n\n\n\n\n\n\n\n\n\n    console.log('查询宠物的入参', params);\n    const isUnKnow = (val) => {\n      if (val) {\n        return val\n      } else {\n        return 'unknown'\n      }\n    }\n\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\n      // fetchRequest('/new/pet/subscribe/page', 'POST', params)\n\n      .then(res => {\n        console.log('查询到的宠物列表,/user/listAllPetInfo', res);\n\n        if (res.flag === true && res.data) {\n          let data = []\n          let oldList = res.data\n          // let oldList = res.data.list\n          for (let i = 0; i < oldList.length; i++) {\n            let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\n              h2tLength, torsoLength } = oldList[i]\n            let owner = ''\n            patientId = isUnKnow(patientId)\n            petName = isUnKnow(petName)\n            breedName = isUnKnow(breedName)\n            age = isUnKnow(age)\n            weight = isUnKnow(weight)\n            if (!firstName) {\n              firstName = ''\n            }\n            if (!lastName) {\n              lastName = ''\n            }\n            if (lastName === '' && firstName === '') {\n              owner = 'unknown'\n            } else {\n              owner = `${lastName} ${firstName}`\n            }\n            createTime = moment(createTime).format('X')\n            let petGender = ''\n            switch (`${gender}`) {\n              case '1': petGender = 'F'\n\n                break;\n              case '0': petGender = \"M\"\n                break;\n              default: petGender = 'unknown'\n                break;\n            }\n            let petAge = 'unknown'\n            if (birthday) {\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\n            }\n\n            let json = {\n              insertedAt: createTime,\n              patientId,\n              petName,\n              owner,\n              breed: breedName,\n              gender: petGender,\n              age: petAge,\n              petId,\n              id: i,\n              weight,\n              rfid,\n              url,\n              speciesId,\n              l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\n              h2tLength, torsoLength,\n              pethubId, macId,\n\n            }\n            data.push(json)\n\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          console.log('列表的数据：', data);\n          storage.doctorList = JSON.stringify(data)\n          this.setState({\n            data,\n            loading: false,\n            spin: false\n          })\n\n          electronStore.set('doctorExam', data)\n\n\n        } else {\n          this.setState({\n            loading: false,\n            spin: false\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false,\n          spin: false\n        })\n      })\n\n\n\n  }\n\n\n  getColumnSearchProps = dataIndex => ({\n    //dataIndex 是标题名称\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    //自定义Icon\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\n    onFilter: (value, record) => {\n      console.log(value, record, dataIndex);\n      return record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : ''\n    },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n  _refresh = () => {\n    console.log('点击了');\n    this.setState({\n      spin: true\n    })\n    // this._getData()\n    this._getExam()\n  }\n\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n\n  handleClick = e => {\n    console.log('click ', e);\n\n    switch (e.key) {\n      case '1': this.props.history.push('/page11'); break;\n      case '2': this.props.history.push('/'); break;\n      case '3':\n        try {\n\n          let selectNum = document.getElementsByClassName('ant-pagination-item-active')\n          // storage.defaultCurrent = selectNum[0].title\n          storage.doctorList = JSON.stringify(this.state.data)\n        } catch (error) {\n          console.log('错误信息', error);\n        }\n\n\n        this.props.history.push('/page8'); break;\n      case '4': this.props.history.push('/page12'); break;\n\n      default:\n        break;\n    }\n\n  };\n\n  _search1 = (search) => {       //这个是搜索调用后台的函数，现在废弃20210929\n    let params = {\n      doctorId: storage.userId,\n      petName: search,\n    }\n    this.setState({\n      loading: true\n    })\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    const isUnKnow = (val) => {\n      if (val) {\n        return val\n      } else {\n        return 'unknown'\n      }\n    }\n    console.log('搜索的数据', params);\n    fetchRequest('/pet/listPetsLike', \"POST\", params)\n      .then(res => {\n        console.log(res);\n\n        if (res.flag === true) {\n          let data = []\n          for (let i = 0; i < res.data.length; i++) {\n            let { age, createTime, patientId, petName, firstName, birthday, lastName, breedName, gender, petId, weight } = res.data[i]\n            let owner = ''\n            patientId = isUnKnow(patientId)\n            petName = isUnKnow(petName)\n            breedName = isUnKnow(breedName)\n            age = isUnKnow(age)\n            weight = isUnKnow(weight)\n            if (!firstName) {\n              firstName = ''\n            }\n            if (!lastName) {\n              lastName = ''\n            }\n            if (lastName === '' && firstName === '') {\n              owner = 'unknown'\n            } else {\n              owner = `${lastName} ${firstName}`\n            }\n            createTime = moment(createTime).format('X')\n            let petGender = ''\n            switch (`${gender}`) {\n              case '1': petGender = 'F'\n\n                break;\n              case '0': petGender = \"M\"\n                break;\n              default: petGender = 'unknown'\n                break;\n            }\n            let petAge = 'unknown'\n            if (birthday) {\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\n              // console.log('petAge', petAge);\n            }\n\n            let json = {\n              insertedAt: createTime,\n              patientId,\n              petName,\n              owner,\n              breed: breedName,\n              gender: petGender,\n              age: petAge,\n              petId,\n              id: i,\n              weight\n\n            }\n            data.push(json)\n\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          this.setState({\n            searchData: data,\n            loading: false\n          })\n        } else {\n          this.setState({\n            searchData: [],\n            loading: false\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        })\n      })\n  }\n\n  _search = (keyWord) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\n\n    /**\n     * 使用indexof方法实现模糊查询\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n     *\n     * list         原数组\n     * keyWord      查询关键词\n     * searchData   查询的结果\n     *\n     * toLowerCase（）方法：将字符串统一转成小写\n     * toUpperCase（）方法：将字符串统一转成大写\n     *\n     */\n    this.setState({\n      loading: true\n    })\n    let list = this.state.data\n    let searchData = []\n    for (let i = 0; i < list.length; i++) {\n      let petName = list[i].petName.toLowerCase() || ''\n      let patientId = list[i].patientId.toLowerCase() || ''\n      let rfid = list[i].rfid || ''\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${rfid}`.indexOf(keyWord) !== -1\n      ) {\n        searchData.push(list[i])\n      }\n    }\n    console.log(searchData);\n    this.setState({\n      searchData,\n      loading: false\n    })\n\n\n\n\n\n  }\n\n  RFIDSearch = () => {\n    this.setState({\n      loading: true\n    })\n    fetchRequest4(`/pet/getPetInfoByRFID/${this.state.heardSearchText}/${storage.lastOrganization}`, 'GET')\n      .then(res => {\n        console.log('----RFID搜索结果', res);\n\n        if (res.flag === true && res.data) {\n          let { createTime, patientId, petName, firstName, lastName, breedName, gender, birthday, petId, rfid, weight } = res.data\n          patientId = patientId || 'unknown'\n          petName = petName || 'unknown'\n          breedName = breedName || 'unknown'\n          weight = weight || 'unknown'\n          let owner = ''\n          if (!firstName) {\n            firstName = ''\n          }\n          if (!lastName) {\n            lastName = ''\n          }\n          if (lastName === '' && firstName === '') {\n            owner = 'unknown'\n          } else {\n            owner = `${lastName} ${firstName}`\n          }\n          createTime = moment(createTime).format('X')\n          let petGender = ''\n          switch (`${gender}`) {\n            case '1': petGender = 'F'\n\n              break;\n            case '0': petGender = \"M\"\n              break;\n            default: petGender = 'unknown'\n              break;\n          }\n          let petAge = 'unknown'\n          if (birthday) {\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\n            // console.log('petAge', petAge);\n          }\n          let json = {\n            insertedAt: createTime,\n            patientId,\n            petName,\n            owner,\n            breed: breedName,\n            gender: petGender,\n            age: petAge,\n            petId,\n            id: 0,\n            weight,\n            rfid\n          }\n          let searchData = []\n          searchData.push(json)\n          this.setState({\n            searchData,\n            loading: false\n          })\n\n\n\n\n        } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\n          console.log('找到了但是不是在这个组织下');\n          this.setState({\n            loading: false,\n            modalVis: true,\n            isNotFound: false,\n            heardSearchText: ''\n          })\n        } else {\n          console.log('没有找到');\n          this.setState({\n            loading: false,\n            modalVis: true,\n            isNotFound: true,\n            heardSearchText: ''\n          })\n        }\n      })\n      .catch(err => {\n\n        console.log('抛出异常:', err);\n        this.setState({\n          loading: false,\n        })\n      })\n  }\n  draggleRef = React.createRef();\n  onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\n      }\n    });\n  };\n\n\n  render () {\n    const columns = [\n      {\n        title: 'Time',\n        dataIndex: 'insertedAt',\n        key: 'insertedAt',\n        width: '16%',\n        // ...this.getColumnSearchProps('insertedAt'),\n        render: (text, record, index) => {\n          let chazhi = new Date().getTimezoneOffset()\n          // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\n          let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\n          let time = moment(parseInt(text) * 1000).format('hh:mm a');\n          let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\n          // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\n          return (\n            <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\n              <p>{`${year}`}</p>\n              <p>{`${time}`}</p>\n            </div>\n          )\n        },\n\n      },\n      {\n        title: 'Pet ID',\n        dataIndex: 'patientId',\n        key: 'patientId',\n        width: '15%',\n        // ...this.getColumnSearchProps('patientId'),\n      },\n      {\n        title: 'Pet Name',\n        dataIndex: 'petName',\n        key: 'petName',\n        width: '15%',\n        // ...this.getColumnSearchProps('petName'),\n      },\n      {\n        title: 'Owner',\n        dataIndex: 'owner',\n        key: 'owner',\n        width: '15%',\n        // ...this.getColumnSearchProps('owner'),\n      },\n      {\n        title: 'Breed',\n        dataIndex: 'breed',\n        key: 'breed',\n        width: '15%',\n        // ...this.getColumnSearchProps('breed'),\n        render: (text, record, index) => {\n          if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\n            return (\n              <p style={{ textAlign: 'center' }}>{'unknown'}</p>\n            )\n          } else {\n            return (\n              <p style={{ textAlign: 'center' }}>{text}</p>\n            )\n          }\n\n        }\n      },\n\n      {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n        width: '12%',\n        // width: '30%',\n        // ...this.getColumnSearchProps('gender'),\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        width: '12%',\n        // width: '20%',\n        render: (text, record, index) => {\n          // console.log(text);\n\n          if (`${text}` === 'NaN') {\n            return (\n              <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\n            )\n          } else {\n            return (\n              <p style={{ textAlign: 'center' }}>{text}</p>\n            )\n          }\n\n        }\n      },\n\n\n    ];\n    const { loading, data, api, id, seleceID, spin, closeColor, closebgc, minbgc, disabled, bounds, modalVis, sortBy, showsortBy } = this.state\n\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\n    for (let i = 0; i < items.length; i++) {\n      let style = items[i].style\n      style.padding = `5px 5px`\n      style.textAlign = 'center'\n    }\n    const noData = () => {\n      return (\n        <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\n          <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\n          <a style={{ fontSize: px(22) }} href=\"#\"\n            onClick={(e) => {\n              console.log('我要去添加宠物');\n              try {\n\n                storage.doctorList = JSON.stringify(this.state.data)\n              } catch (error) {\n                console.log('错误信息', error);\n              }\n              // /pet/doctorAddPet\n              this.props.history.push({ pathname: '/pet/doctorAddPet' })\n\n              e.preventDefault();\n\n            }}\n\n          >{`go to add`}</a>\n        </div>\n      )\n    }\n\n\n\n\n\n    return (\n\n      <div id=\"doctorSelectExam\" onClick={(e) => {\n        console.log('隐藏');\n        this.setState({\n          showsortBy: false\n        })\n      }}>\n        {/* 关闭缩小 */}\n        <Heard\n          onReturn={() => {\n            this.props.history.push('/page11')\n          }}\n          onSearch={(data) => {\n\n            storage.doctorExam = JSON.stringify(data)\n\n            storage.doctorList = JSON.stringify(this.state.data)\n            if (storage.isClinical === 'true') {\n              this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\n            } else {\n              this.props.history.push({ pathname: '/page10', })\n            }\n          }}\n          menu8Click={() => {\n            this.props.history.push({ pathname: '/uesr/selectExam', })\n          }}\n          blueSearch={true}\n        />\n\n\n        <div className=\"hread flex\">\n          <div className=\"hread1 flex\" style={{ marginTop: px(30) }}>\n            <div className=\"heard1L flex\">\n              <div className=\"title\" style={{ fontSize: px(25) }}>Client Results</div>\n              <div className=\"refresh flex\"\n                style={{ fontSize: px(25), marginLeft: px(10) }}\n              >\n                <SyncOutlined onClick={this._refresh} spin={spin} />\n              </div>\n            </div>\n\n            <div className=\"walkin flex\"\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20) }}\n              onClick={() => {\n                storage.doctorExam = JSON.stringify('')\n                storage.doctorList = JSON.stringify(this.state.data)\n                if (storage.isClinical === 'true') {\n                  this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: null })\n                } else {\n                  this.props.history.push({ pathname: '/page10', })\n                }\n\n              }}\n            >Walk-In</div>\n\n          </div>\n          <div className=\"heard2 flex\" style={{ marginTop: px(8), marginBottom: px(8) }}>\n\n            <div className=\"sort flex\" >\n              <p style={{ fontSize: px(16), marginRight: px(10) }}>sort By:</p>\n\n              <SelectionBox\n                listArr={[\n                  { key: 'time', value: 'Time' },\n                  { key: 'petid', value: 'Pet ID' },\n                  { key: 'owner', value: 'Owner' },\n                  { key: 'breed', value: 'Breed' },\n                  { key: 'petname', value: 'Pet Name' },\n                  { key: 'gender', value: 'Gender' },\n                ]}\n                clickItem={(item) => {\n                  let petList = [].concat(data)\n                  switch (item.key) {\n                    case 'time':\n                      petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n                      break;\n                    case 'petid':\n                      petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n                      break;\n                    case 'owner':\n                      petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n                      break;\n                    case 'breed':\n                      petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n                      break;\n                    case 'petname':\n                      petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n                      break;\n                    case 'gender':\n                      petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n                      break;\n                  }\n\n                  this.setState({\n                    sortBy: item.value,\n                    showsortBy: false,\n                    data: petList\n                  })\n                }}\n              />\n            </div>\n\n          </div>\n        </div>\n\n\n        <div className=\"table\" >\n          <ConfigProvider renderEmpty={noData}>\n            <Table\n              style={{\n                // border: ' #979797 1px solid',\n                padding: 0,\n                margin: 0,\n                width: '95%',\n                // height: px(500)\n              }}\n              rowKey={data => data.id}\n              bordered={false}\n              columns={columns}\n              dataSource={(this.state.heardSearchText.length === 0) ? this.state.data : this.state.searchData}\n              loading={loading}\n              locale={{ filterConfirm: <div>111</div> }}\n              // pagination={{ showSizeChanger: false, showQuickJumper: true, defaultCurrent: this.state.current }}\n              pagination={false}\n              scroll={{\n                y: px(600)\n              }}\n              onRow={(record) => {\n                return {\n                  onClick: (event) => {\n                    storage.doctorExam = JSON.stringify(record)\n                    storage.doctorList = JSON.stringify(this.state.data)\n\n                    if (storage.isClinical === 'true') {\n                      this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.patientId })\n                    } else {\n                      this.props.history.push({ pathname: '/page10', })\n                    }\n\n\n                  }, // 点击行\n\n                };\n              }}\n            />\n          </ConfigProvider>\n        </div>\n\n        <Modal\n\n          // visible={isOrg}\n          visible={modalVis}\n          onCancel={() => this.setState({ modalVis: false })}\n          width={350}\n          footer={[]}\n          modalRender={(modal) => (\n            <Draggable\n              disabled={disabled}\n              bounds={bounds}\n              onStart={(event, uiData) => this.onStart(event, uiData)}\n            >\n              <div ref={this.draggleRef}>{modal}</div>\n            </Draggable>\n          )}\n          destroyOnClose={true}\n          wrapClassName=\"doctorSelectExamModal\"\n        >\n          <div id='doctorSelectExamModal'>\n            <div className=\"text\"\n              onMouseOver={() => {\n                if (disabled) {\n                  this.setState({\n                    disabled: false,\n                  });\n                }\n              }}\n              onMouseOut={() => {\n                this.setState({\n                  disabled: true,\n                });\n              }}\n\n            >{this.state.isNotFound ? 'Pet not found!' : 'Pet found!'}</div>\n            <div className='Img'>\n              {this.state.isNotFound ?\n                <img src={redclose} width=\"50px\" /> :\n                <img src={jinggao} width=\"50px\" />\n              }\n\n            </div>\n\n\n\n\n            {this.state.isNotFound ? <p > This pet is not on your database</p> :\n              <p >Pet Identified but does not <br /> belong to your organization.</p>}\n\n\n            <div style={{ marginTop: px(20) }}>\n              <Button1\n                text={'OK'}\n\n                onClick={() => this.setState({\n                  modalVis: false\n                })}\n              />\n            </div>\n\n\n\n\n\n\n\n\n          </div>\n\n        </Modal>\n\n\n\n      </div>\n    )\n  }\n}\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["672","673","674","675","676","677","678","679","680","681","682","683","684"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx",["719","720","721","722","723"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\Biggie.jsx",["724","725","726","727","728","729","730","731","732"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { px, mTop } from './../../utils/px'\nimport cir from './../../assets/images/cir.png'\nimport xia from './../../assets/img/xia.png'\n\n//import 'antd/dist/antd.css';\nimport './biggie.less'\n\n/**\n *\n * @param {string} weight   体重值\n * @param {string} bodyFat   体脂\n * @param {string} score   健康指数\n * @param {string} impedance   阻抗值\n * @param {boolean} issave   按钮文本，为true展示save，为false展示send to pms\n * @param {function} onPress   点击按钮调用的函数\n *\n * @returns\n */\n\nconst Biggie = ({ weight, bodyFat, score, impedance, issave, onPress, discardOnPress, isIbs, isHaveSaveBtn = true }) => {\n\n  // let { weight, bodyFat, score } = this.props\n\n  let lTColor = bodyFat !== null && bodyFat >= 0 ? '#87C563' : '#D8D9D9'\n  let rTColor = score !== null && score >= 0 ? '#87C563' : '#D8D9D9'\n  let lTtext = bodyFat !== null && bodyFat >= 0 ? `${bodyFat}%` : `Not Available`\n  let lTtextSize = bodyFat !== null && bodyFat >= 0 ? px(16) : px(15)\n  let rTtext = score !== null && score >= 0 ? `${score}` : `Not\\nAvailable`\n  let rTtextSize = score !== null && score >= 0 ? px(16) : px(15)\n\n  return (\n    <div className=\"biggie\" >\n      <div className=\"top\">\n\n        <div style={{ borderRadius: px(150) }} className='biggiel'>\n          <div style={{ backgroundColor: lTColor, borderRadius: px(75), }} className='lT'>\n            <div className='lTText' style={{ fontSize: lTtextSize }}>{lTtext}</div>\n          </div>\n          <div style={{ fontSize: px(14) }}>{`Body Fat\\nPercent`}</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(5) }}\n          />\n        </div>\n\n\n        <div style={{  borderRadius: px(150) }} className='cen'>\n          <div style={{ borderRadius: px(75) }} className='lT'>\n            <img\n              src={cir}\n              width={'100%'}\n            />\n          </div>\n          <div className='cTText' style={{ fontWeight: '800' }}>{weight}</div>\n          <div className='cTTextUnit'>{`${isIbs ? 'lbs' : 'kgs'}`}</div>\n          <div className='cenCText'>Weight</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(6) }}\n          />\n        </div>\n\n\n\n        <div style={{ borderRadius: px(150) }} className='biggiel'>\n          <div style={{ backgroundColor: rTColor, borderRadius: px(75) }} className='lT'>\n            <div className='lTText' style={{ fontSize: rTtextSize }}>{rTtext}</div>\n          </div>\n          <div style={{ fontSize: px(14) }}>{`Body\\nCondition\\nScore`}</div>\n          <img\n            src={xia}\n            style={{ width: px(20), marginBottom: px(5) }}\n          />\n        </div>\n      </div>\n\n\n\n\n      <div className='biggiefoot'>\n        {isHaveSaveBtn &&\n          <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', width: '100%' }}>\n            <div\n              className='biggiefootbtn'\n              // style={{ height: px(36), }}\n              onClick={() => {\n                discardOnPress()\n              }}\n            >\n              <div style={{ color: '#fff', fontSize: px(16) }}>{`Discard`}</div>\n            </div>\n\n\n            <div\n              className='biggiefootbtn'\n              // style={{ height: px(36), }}\n              onClick={() => {\n                onPress()\n              }}\n            >\n              <div style={{ color: '#fff', fontSize: px(16) }}>{issave ? `Save` : `Send to PMS`}</div>\n            </div>\n\n\n          </div>\n        }\n\n\n        {(impedance && impedance > 0) ? <div style={{ color: '#000', fontSize: px(18), marginTop: mTop(10) }}>{`Impedance ${impedance} Ohms`}</div> : null}\n      </div>\n    </div>\n  )\n\n}\n\nBiggie.propTypes = {\n  weight: PropTypes.string || PropTypes.number,\n  bodyFat: PropTypes.number || PropTypes.string,\n  score: PropTypes.number || PropTypes.string,\n  impedance: PropTypes.number || PropTypes.string,\n  issave: PropTypes.bool,\n  onPress: PropTypes.func,\n  isIbs: PropTypes.bool\n}\nexport default Biggie\n","C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx",["733","734","735","736","737","738","739"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\help\\Help.jsx",["740"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\signIn\\SignIn.jsx",["741","742","743","744","745","746","747","748","749","750","751","752","753","754"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\orgAndPractice\\ConnectWorkplace.jsx",["755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\App.js",["772","773"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\choose\\Choose.jsx",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\selectMella\\SelectMella.jsx",["774"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\ezyVetSelectTime\\EzyVetSelectTime.jsx",["775","776","777","778"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\doctorSelectExam\\DoctorSelectScheduledExam.jsx",["779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\vetProfile\\VetPrifile.jsx",["807","808","809","810","811","812","813","814"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\joinOrganizationByOption\\JoinOrganizationByOption.jsx",["815","816","817","818","819","820","821","822"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\newWorkplace\\NewWorkplace.jsx",["823","824","825","826","827"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\inviteTeam\\InviteTeam.jsx",["828","829","830","831","832","833","834","835","836","837"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\createAccount\\verifyEmail\\index.jsx",["838","839"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\components\\menuOptions\\unassigned\\Unassigned.jsx",["840","841","842","843","844","845","846","847"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\FetchUtil2.js",["848","849","850","851"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js",["852","853"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\axios\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actions\\hardwareAction.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx",["854","855"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["856","857","858","859","860","861","862","863","864","865","866","867","868","869"],"C:\\Users\\nonagon\\Desktop\\newPc\\Mella_Desktop_Super_USB\\src\\utils\\Fetch_token.js",["870","871","872","873"],{"ruleId":"874","severity":1,"message":"875","line":2,"column":35,"nodeType":"876","messageId":"877","endLine":2,"endColumn":42},{"ruleId":"874","severity":1,"message":"878","line":13,"column":10,"nodeType":"876","messageId":"877","endLine":13,"endColumn":21},{"ruleId":"874","severity":1,"message":"879","line":43,"column":20,"nodeType":"876","messageId":"877","endLine":43,"endColumn":22},{"ruleId":"874","severity":1,"message":"880","line":50,"column":9,"nodeType":"876","messageId":"877","endLine":50,"endColumn":16},{"ruleId":"874","severity":1,"message":"881","line":52,"column":7,"nodeType":"876","messageId":"877","endLine":52,"endColumn":13},{"ruleId":"874","severity":1,"message":"882","line":79,"column":5,"nodeType":"876","messageId":"877","endLine":79,"endColumn":15},{"ruleId":"874","severity":1,"message":"883","line":212,"column":48,"nodeType":"876","messageId":"877","endLine":212,"endColumn":54},{"ruleId":"884","severity":1,"message":"885","line":331,"column":9,"nodeType":"886","messageId":"887","endLine":344,"endColumn":10},{"ruleId":"884","severity":1,"message":"885","line":744,"column":9,"nodeType":"886","messageId":"887","endLine":748,"endColumn":10},{"ruleId":"874","severity":1,"message":"888","line":752,"column":9,"nodeType":"876","messageId":"877","endLine":752,"endColumn":27},{"ruleId":"884","severity":1,"message":"885","line":1047,"column":11,"nodeType":"886","messageId":"887","endLine":1054,"endColumn":12},{"ruleId":"884","severity":1,"message":"885","line":1270,"column":13,"nodeType":"886","messageId":"887","endLine":1277,"endColumn":14},{"ruleId":"884","severity":1,"message":"885","line":1427,"column":13,"nodeType":"886","messageId":"887","endLine":1434,"endColumn":14},{"ruleId":"874","severity":1,"message":"889","line":1498,"column":15,"nodeType":"876","messageId":"877","endLine":1498,"endColumn":26},{"ruleId":"884","severity":1,"message":"885","line":2017,"column":9,"nodeType":"886","messageId":"887","endLine":2030,"endColumn":10},{"ruleId":"890","severity":1,"message":"891","line":2423,"column":36,"nodeType":"892","messageId":"893","endLine":2423,"endColumn":37,"suggestions":"894"},{"ruleId":"895","severity":1,"message":"896","line":2424,"column":47,"nodeType":"897","messageId":"898","endLine":2424,"endColumn":49},{"ruleId":"874","severity":1,"message":"899","line":2625,"column":107,"nodeType":"876","messageId":"877","endLine":2625,"endColumn":112},{"ruleId":"874","severity":1,"message":"900","line":3042,"column":11,"nodeType":"876","messageId":"877","endLine":3042,"endColumn":14},{"ruleId":"874","severity":1,"message":"901","line":3679,"column":17,"nodeType":"876","messageId":"877","endLine":3679,"endColumn":23},{"ruleId":"874","severity":1,"message":"902","line":4307,"column":13,"nodeType":"876","messageId":"877","endLine":4307,"endColumn":23},{"ruleId":"874","severity":1,"message":"903","line":4307,"column":25,"nodeType":"876","messageId":"877","endLine":4307,"endColumn":33},{"ruleId":"874","severity":1,"message":"904","line":4307,"column":35,"nodeType":"876","messageId":"877","endLine":4307,"endColumn":41},{"ruleId":"884","severity":1,"message":"885","line":4340,"column":17,"nodeType":"886","messageId":"887","endLine":4353,"endColumn":18},{"ruleId":"874","severity":1,"message":"905","line":16,"column":8,"nodeType":"876","messageId":"877","endLine":16,"endColumn":24},{"ruleId":"874","severity":1,"message":"906","line":17,"column":10,"nodeType":"876","messageId":"877","endLine":17,"endColumn":14},{"ruleId":"874","severity":1,"message":"907","line":22,"column":8,"nodeType":"876","messageId":"877","endLine":22,"endColumn":20},{"ruleId":"874","severity":1,"message":"908","line":23,"column":9,"nodeType":"876","messageId":"877","endLine":23,"endColumn":15},{"ruleId":"874","severity":1,"message":"909","line":69,"column":9,"nodeType":"876","messageId":"877","endLine":69,"endColumn":22},{"ruleId":"874","severity":1,"message":"910","line":341,"column":9,"nodeType":"876","messageId":"877","endLine":341,"endColumn":25},{"ruleId":"874","severity":1,"message":"911","line":358,"column":11,"nodeType":"876","messageId":"877","endLine":358,"endColumn":24},{"ruleId":"874","severity":1,"message":"912","line":358,"column":142,"nodeType":"876","messageId":"877","endLine":358,"endColumn":148},{"ruleId":"874","severity":1,"message":"913","line":358,"column":150,"nodeType":"876","messageId":"877","endLine":358,"endColumn":160},{"ruleId":"874","severity":1,"message":"914","line":362,"column":7,"nodeType":"876","messageId":"877","endLine":362,"endColumn":17},{"ruleId":"874","severity":1,"message":"915","line":2,"column":27,"nodeType":"876","messageId":"877","endLine":2,"endColumn":36},{"ruleId":"874","severity":1,"message":"916","line":3,"column":10,"nodeType":"876","messageId":"877","endLine":3,"endColumn":20},{"ruleId":"874","severity":1,"message":"906","line":8,"column":14,"nodeType":"876","messageId":"877","endLine":8,"endColumn":18},{"ruleId":"874","severity":1,"message":"917","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":15},{"ruleId":"874","severity":1,"message":"918","line":4,"column":17,"nodeType":"876","messageId":"877","endLine":4,"endColumn":23},{"ruleId":"874","severity":1,"message":"919","line":4,"column":34,"nodeType":"876","messageId":"877","endLine":4,"endColumn":38},{"ruleId":"874","severity":1,"message":"920","line":4,"column":40,"nodeType":"876","messageId":"877","endLine":4,"endColumn":47},{"ruleId":"874","severity":1,"message":"921","line":5,"column":10,"nodeType":"876","messageId":"877","endLine":5,"endColumn":30},{"ruleId":"874","severity":1,"message":"922","line":5,"column":32,"nodeType":"876","messageId":"877","endLine":5,"endColumn":44},{"ruleId":"874","severity":1,"message":"923","line":7,"column":10,"nodeType":"876","messageId":"877","endLine":7,"endColumn":28},{"ruleId":"874","severity":1,"message":"924","line":9,"column":8,"nodeType":"876","messageId":"877","endLine":9,"endColumn":18},{"ruleId":"874","severity":1,"message":"925","line":18,"column":8,"nodeType":"876","messageId":"877","endLine":18,"endColumn":16},{"ruleId":"874","severity":1,"message":"926","line":19,"column":8,"nodeType":"876","messageId":"877","endLine":19,"endColumn":16},{"ruleId":"874","severity":1,"message":"927","line":20,"column":8,"nodeType":"876","messageId":"877","endLine":20,"endColumn":18},{"ruleId":"874","severity":1,"message":"928","line":21,"column":8,"nodeType":"876","messageId":"877","endLine":21,"endColumn":16},{"ruleId":"874","severity":1,"message":"929","line":23,"column":8,"nodeType":"876","messageId":"877","endLine":23,"endColumn":15},{"ruleId":"874","severity":1,"message":"879","line":24,"column":26,"nodeType":"876","messageId":"877","endLine":24,"endColumn":28},{"ruleId":"930","severity":1,"message":"931","line":60,"column":8,"nodeType":"932","endLine":60,"endColumn":10,"suggestions":"933"},{"ruleId":"930","severity":1,"message":"934","line":102,"column":8,"nodeType":"932","endLine":102,"endColumn":38,"suggestions":"935"},{"ruleId":"936","replacedBy":"937"},{"ruleId":"938","replacedBy":"939"},{"ruleId":"874","severity":1,"message":"915","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"940","line":1,"column":28,"nodeType":"876","messageId":"877","endLine":1,"endColumn":36},{"ruleId":"874","severity":1,"message":"915","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"940","line":1,"column":28,"nodeType":"876","messageId":"877","endLine":1,"endColumn":36},{"ruleId":"874","severity":1,"message":"941","line":3,"column":18,"nodeType":"876","messageId":"877","endLine":3,"endColumn":22},{"ruleId":"874","severity":1,"message":"942","line":3,"column":24,"nodeType":"876","messageId":"877","endLine":3,"endColumn":34},{"ruleId":"874","severity":1,"message":"943","line":2,"column":8,"nodeType":"876","messageId":"877","endLine":2,"endColumn":17},{"ruleId":"874","severity":1,"message":"917","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":15},{"ruleId":"874","severity":1,"message":"918","line":4,"column":17,"nodeType":"876","messageId":"877","endLine":4,"endColumn":23},{"ruleId":"874","severity":1,"message":"944","line":4,"column":25,"nodeType":"876","messageId":"877","endLine":4,"endColumn":32},{"ruleId":"874","severity":1,"message":"919","line":4,"column":34,"nodeType":"876","messageId":"877","endLine":4,"endColumn":38},{"ruleId":"874","severity":1,"message":"920","line":4,"column":40,"nodeType":"876","messageId":"877","endLine":4,"endColumn":47},{"ruleId":"874","severity":1,"message":"921","line":5,"column":10,"nodeType":"876","messageId":"877","endLine":5,"endColumn":30},{"ruleId":"874","severity":1,"message":"945","line":5,"column":46,"nodeType":"876","messageId":"877","endLine":5,"endColumn":61},{"ruleId":"874","severity":1,"message":"923","line":7,"column":10,"nodeType":"876","messageId":"877","endLine":7,"endColumn":28},{"ruleId":"874","severity":1,"message":"906","line":9,"column":10,"nodeType":"876","messageId":"877","endLine":9,"endColumn":14},{"ruleId":"874","severity":1,"message":"946","line":9,"column":20,"nodeType":"876","messageId":"877","endLine":9,"endColumn":24},{"ruleId":"874","severity":1,"message":"879","line":9,"column":26,"nodeType":"876","messageId":"877","endLine":9,"endColumn":28},{"ruleId":"874","severity":1,"message":"915","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"947","line":19,"column":18,"nodeType":"876","messageId":"877","endLine":19,"endColumn":24},{"ruleId":"874","severity":1,"message":"940","line":2,"column":17,"nodeType":"876","messageId":"877","endLine":2,"endColumn":25},{"ruleId":"936","replacedBy":"948"},{"ruleId":"938","replacedBy":"949"},{"ruleId":"930","severity":1,"message":"950","line":231,"column":6,"nodeType":"932","endLine":231,"endColumn":26,"suggestions":"951"},{"ruleId":"874","severity":1,"message":"918","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":16},{"ruleId":"874","severity":1,"message":"952","line":2,"column":36,"nodeType":"876","messageId":"877","endLine":2,"endColumn":44},{"ruleId":"874","severity":1,"message":"953","line":3,"column":10,"nodeType":"876","messageId":"877","endLine":3,"endColumn":22},{"ruleId":"874","severity":1,"message":"947","line":24,"column":18,"nodeType":"876","messageId":"877","endLine":24,"endColumn":24},{"ruleId":"874","severity":1,"message":"954","line":28,"column":10,"nodeType":"876","messageId":"877","endLine":28,"endColumn":17},{"ruleId":"874","severity":1,"message":"955","line":28,"column":19,"nodeType":"876","messageId":"877","endLine":28,"endColumn":29},{"ruleId":"956","severity":1,"message":"957","line":63,"column":16,"nodeType":"958","endLine":63,"endColumn":41},{"ruleId":"956","severity":1,"message":"957","line":65,"column":16,"nodeType":"958","endLine":65,"endColumn":41},{"ruleId":"956","severity":1,"message":"957","line":67,"column":16,"nodeType":"958","endLine":67,"endColumn":41},{"ruleId":"956","severity":1,"message":"957","line":69,"column":16,"nodeType":"958","endLine":69,"endColumn":41},{"ruleId":"930","severity":1,"message":"959","line":75,"column":3,"nodeType":"876","endLine":75,"endColumn":12,"suggestions":"960"},{"ruleId":"874","severity":1,"message":"961","line":4,"column":3,"nodeType":"876","messageId":"877","endLine":4,"endColumn":8},{"ruleId":"874","severity":1,"message":"962","line":10,"column":3,"nodeType":"876","messageId":"877","endLine":10,"endColumn":8},{"ruleId":"874","severity":1,"message":"963","line":11,"column":3,"nodeType":"876","messageId":"877","endLine":11,"endColumn":7},{"ruleId":"874","severity":1,"message":"964","line":16,"column":8,"nodeType":"876","messageId":"877","endLine":16,"endColumn":15},{"ruleId":"874","severity":1,"message":"923","line":27,"column":10,"nodeType":"876","messageId":"877","endLine":27,"endColumn":28},{"ruleId":"874","severity":1,"message":"965","line":42,"column":10,"nodeType":"876","messageId":"877","endLine":42,"endColumn":12},{"ruleId":"874","severity":1,"message":"966","line":70,"column":5,"nodeType":"876","messageId":"877","endLine":70,"endColumn":22},{"ruleId":"874","severity":1,"message":"967","line":74,"column":5,"nodeType":"876","messageId":"877","endLine":74,"endColumn":23},{"ruleId":"968","severity":1,"message":"969","line":132,"column":61,"nodeType":"897","messageId":"970","endLine":132,"endColumn":62},{"ruleId":"968","severity":1,"message":"969","line":140,"column":45,"nodeType":"897","messageId":"970","endLine":140,"endColumn":46},{"ruleId":"930","severity":1,"message":"971","line":284,"column":6,"nodeType":"932","endLine":284,"endColumn":13,"suggestions":"972"},{"ruleId":"930","severity":1,"message":"973","line":306,"column":6,"nodeType":"932","endLine":306,"endColumn":26,"suggestions":"974"},{"ruleId":"874","severity":1,"message":"915","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"961","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":15},{"ruleId":"874","severity":1,"message":"975","line":4,"column":8,"nodeType":"876","messageId":"877","endLine":4,"endColumn":23},{"ruleId":"874","severity":1,"message":"976","line":15,"column":8,"nodeType":"876","messageId":"877","endLine":15,"endColumn":9},{"ruleId":"874","severity":1,"message":"977","line":19,"column":9,"nodeType":"876","messageId":"877","endLine":19,"endColumn":16},{"ruleId":"874","severity":1,"message":"947","line":19,"column":18,"nodeType":"876","messageId":"877","endLine":19,"endColumn":24},{"ruleId":"874","severity":1,"message":"978","line":22,"column":9,"nodeType":"876","messageId":"877","endLine":22,"endColumn":27},{"ruleId":"874","severity":1,"message":"979","line":23,"column":19,"nodeType":"876","messageId":"877","endLine":23,"endColumn":29},{"ruleId":"956","severity":1,"message":"957","line":28,"column":11,"nodeType":"958","endLine":28,"endColumn":36},{"ruleId":"874","severity":1,"message":"915","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"980","line":1,"column":38,"nodeType":"876","messageId":"877","endLine":1,"endColumn":44},{"ruleId":"874","severity":1,"message":"981","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":16},{"ruleId":"874","severity":1,"message":"917","line":2,"column":26,"nodeType":"876","messageId":"877","endLine":2,"endColumn":31},{"ruleId":"874","severity":1,"message":"982","line":17,"column":8,"nodeType":"876","messageId":"877","endLine":17,"endColumn":14},{"ruleId":"874","severity":1,"message":"915","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"980","line":1,"column":38,"nodeType":"876","messageId":"877","endLine":1,"endColumn":44},{"ruleId":"874","severity":1,"message":"981","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":16},{"ruleId":"874","severity":1,"message":"917","line":2,"column":26,"nodeType":"876","messageId":"877","endLine":2,"endColumn":31},{"ruleId":"874","severity":1,"message":"983","line":2,"column":33,"nodeType":"876","messageId":"877","endLine":2,"endColumn":38},{"ruleId":"874","severity":1,"message":"982","line":17,"column":8,"nodeType":"876","messageId":"877","endLine":17,"endColumn":14},{"ruleId":"874","severity":1,"message":"976","line":18,"column":8,"nodeType":"876","messageId":"877","endLine":18,"endColumn":9},{"ruleId":"874","severity":1,"message":"923","line":5,"column":10,"nodeType":"876","messageId":"877","endLine":5,"endColumn":28},{"ruleId":"874","severity":1,"message":"984","line":9,"column":8,"nodeType":"876","messageId":"877","endLine":9,"endColumn":21},{"ruleId":"874","severity":1,"message":"985","line":14,"column":5,"nodeType":"876","messageId":"877","endLine":14,"endColumn":12},{"ruleId":"930","severity":1,"message":"986","line":53,"column":6,"nodeType":"932","endLine":53,"endColumn":41,"suggestions":"987"},{"ruleId":"874","severity":1,"message":"915","line":1,"column":27,"nodeType":"876","messageId":"877","endLine":1,"endColumn":36},{"ruleId":"874","severity":1,"message":"943","line":2,"column":8,"nodeType":"876","messageId":"877","endLine":2,"endColumn":17},{"ruleId":"874","severity":1,"message":"917","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":15},{"ruleId":"874","severity":1,"message":"918","line":4,"column":17,"nodeType":"876","messageId":"877","endLine":4,"endColumn":23},{"ruleId":"874","severity":1,"message":"919","line":4,"column":34,"nodeType":"876","messageId":"877","endLine":4,"endColumn":38},{"ruleId":"874","severity":1,"message":"920","line":4,"column":40,"nodeType":"876","messageId":"877","endLine":4,"endColumn":47},{"ruleId":"874","severity":1,"message":"922","line":5,"column":32,"nodeType":"876","messageId":"877","endLine":5,"endColumn":44},{"ruleId":"874","severity":1,"message":"945","line":5,"column":46,"nodeType":"876","messageId":"877","endLine":5,"endColumn":61},{"ruleId":"874","severity":1,"message":"923","line":7,"column":10,"nodeType":"876","messageId":"877","endLine":7,"endColumn":28},{"ruleId":"874","severity":1,"message":"984","line":8,"column":8,"nodeType":"876","messageId":"877","endLine":8,"endColumn":21},{"ruleId":"874","severity":1,"message":"906","line":18,"column":10,"nodeType":"876","messageId":"877","endLine":18,"endColumn":14},{"ruleId":"874","severity":1,"message":"946","line":18,"column":20,"nodeType":"876","messageId":"877","endLine":18,"endColumn":24},{"ruleId":"874","severity":1,"message":"879","line":18,"column":26,"nodeType":"876","messageId":"877","endLine":18,"endColumn":28},{"ruleId":"874","severity":1,"message":"961","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":15},{"ruleId":"874","severity":1,"message":"965","line":15,"column":10,"nodeType":"876","messageId":"877","endLine":15,"endColumn":12},{"ruleId":"874","severity":1,"message":"982","line":28,"column":8,"nodeType":"876","messageId":"877","endLine":28,"endColumn":14},{"ruleId":"874","severity":1,"message":"947","line":31,"column":18,"nodeType":"876","messageId":"877","endLine":31,"endColumn":24},{"ruleId":"930","severity":1,"message":"988","line":76,"column":6,"nodeType":"932","endLine":76,"endColumn":21,"suggestions":"989"},{"ruleId":"956","severity":1,"message":"957","line":120,"column":17,"nodeType":"958","endLine":120,"endColumn":74},{"ruleId":"956","severity":1,"message":"957","line":138,"column":21,"nodeType":"958","endLine":138,"endColumn":69},{"ruleId":"956","severity":1,"message":"957","line":158,"column":25,"nodeType":"958","endLine":165,"endColumn":27},{"ruleId":"874","severity":1,"message":"984","line":12,"column":8,"nodeType":"876","messageId":"877","endLine":12,"endColumn":21},{"ruleId":"874","severity":1,"message":"923","line":18,"column":10,"nodeType":"876","messageId":"877","endLine":18,"endColumn":28},{"ruleId":"930","severity":1,"message":"990","line":48,"column":6,"nodeType":"932","endLine":48,"endColumn":8,"suggestions":"991"},{"ruleId":"884","severity":1,"message":"885","line":88,"column":5,"nodeType":"886","messageId":"887","endLine":107,"endColumn":6},{"ruleId":"874","severity":1,"message":"915","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"940","line":1,"column":28,"nodeType":"876","messageId":"877","endLine":1,"endColumn":36},{"ruleId":"874","severity":1,"message":"980","line":1,"column":38,"nodeType":"876","messageId":"877","endLine":1,"endColumn":44},{"ruleId":"874","severity":1,"message":"982","line":11,"column":8,"nodeType":"876","messageId":"877","endLine":11,"endColumn":14},{"ruleId":"874","severity":1,"message":"976","line":12,"column":8,"nodeType":"876","messageId":"877","endLine":12,"endColumn":9},{"ruleId":"874","severity":1,"message":"915","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"980","line":1,"column":38,"nodeType":"876","messageId":"877","endLine":1,"endColumn":44},{"ruleId":"874","severity":1,"message":"981","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":16},{"ruleId":"874","severity":1,"message":"982","line":13,"column":8,"nodeType":"876","messageId":"877","endLine":13,"endColumn":14},{"ruleId":"874","severity":1,"message":"976","line":14,"column":8,"nodeType":"876","messageId":"877","endLine":14,"endColumn":9},{"ruleId":"874","severity":1,"message":"915","line":2,"column":5,"nodeType":"876","messageId":"877","endLine":2,"endColumn":14},{"ruleId":"874","severity":1,"message":"940","line":3,"column":5,"nodeType":"876","messageId":"877","endLine":3,"endColumn":13},{"ruleId":"874","severity":1,"message":"961","line":5,"column":10,"nodeType":"876","messageId":"877","endLine":5,"endColumn":15},{"ruleId":"874","severity":1,"message":"976","line":16,"column":8,"nodeType":"876","messageId":"877","endLine":16,"endColumn":9},{"ruleId":"874","severity":1,"message":"947","line":19,"column":18,"nodeType":"876","messageId":"877","endLine":19,"endColumn":24},{"ruleId":"874","severity":1,"message":"978","line":22,"column":11,"nodeType":"876","messageId":"877","endLine":22,"endColumn":29},{"ruleId":"874","severity":1,"message":"918","line":3,"column":3,"nodeType":"876","messageId":"877","endLine":3,"endColumn":9},{"ruleId":"874","severity":1,"message":"992","line":4,"column":3,"nodeType":"876","messageId":"877","endLine":4,"endColumn":11},{"ruleId":"874","severity":1,"message":"962","line":5,"column":3,"nodeType":"876","messageId":"877","endLine":5,"endColumn":8},{"ruleId":"874","severity":1,"message":"993","line":7,"column":3,"nodeType":"876","messageId":"877","endLine":7,"endColumn":6},{"ruleId":"874","severity":1,"message":"965","line":31,"column":10,"nodeType":"876","messageId":"877","endLine":31,"endColumn":12},{"ruleId":"874","severity":1,"message":"966","line":43,"column":9,"nodeType":"876","messageId":"877","endLine":43,"endColumn":26},{"ruleId":"874","severity":1,"message":"978","line":43,"column":28,"nodeType":"876","messageId":"877","endLine":43,"endColumn":46},{"ruleId":"874","severity":1,"message":"994","line":43,"column":48,"nodeType":"876","messageId":"877","endLine":43,"endColumn":64},{"ruleId":"874","severity":1,"message":"995","line":45,"column":16,"nodeType":"876","messageId":"877","endLine":45,"endColumn":20},{"ruleId":"874","severity":1,"message":"996","line":51,"column":5,"nodeType":"876","messageId":"877","endLine":51,"endColumn":10},{"ruleId":"874","severity":1,"message":"997","line":58,"column":10,"nodeType":"876","messageId":"877","endLine":58,"endColumn":18},{"ruleId":"874","severity":1,"message":"998","line":58,"column":20,"nodeType":"876","messageId":"877","endLine":58,"endColumn":31},{"ruleId":"956","severity":1,"message":"957","line":136,"column":11,"nodeType":"958","endLine":143,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":148,"column":13,"nodeType":"958","endLine":148,"endColumn":33},{"ruleId":"956","severity":1,"message":"957","line":196,"column":18,"nodeType":"958","endLine":196,"endColumn":47},{"ruleId":"956","severity":1,"message":"957","line":198,"column":18,"nodeType":"958","endLine":198,"endColumn":47},{"ruleId":"956","severity":1,"message":"957","line":200,"column":18,"nodeType":"958","endLine":200,"endColumn":47},{"ruleId":"956","severity":1,"message":"957","line":202,"column":18,"nodeType":"958","endLine":202,"endColumn":47},{"ruleId":"956","severity":1,"message":"957","line":226,"column":11,"nodeType":"958","endLine":233,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":238,"column":13,"nodeType":"958","endLine":238,"endColumn":63},{"ruleId":"930","severity":1,"message":"999","line":345,"column":6,"nodeType":"932","endLine":345,"endColumn":18,"suggestions":"1000"},{"ruleId":"930","severity":1,"message":"1001","line":353,"column":6,"nodeType":"932","endLine":353,"endColumn":15,"suggestions":"1002"},{"ruleId":"930","severity":1,"message":"1003","line":361,"column":6,"nodeType":"932","endLine":361,"endColumn":8,"suggestions":"1004"},{"ruleId":"874","severity":1,"message":"944","line":4,"column":3,"nodeType":"876","messageId":"877","endLine":4,"endColumn":10},{"ruleId":"874","severity":1,"message":"984","line":13,"column":8,"nodeType":"876","messageId":"877","endLine":13,"endColumn":21},{"ruleId":"874","severity":1,"message":"907","line":14,"column":8,"nodeType":"876","messageId":"877","endLine":14,"endColumn":20},{"ruleId":"874","severity":1,"message":"1005","line":15,"column":10,"nodeType":"876","messageId":"877","endLine":15,"endColumn":19},{"ruleId":"874","severity":1,"message":"1006","line":16,"column":10,"nodeType":"876","messageId":"877","endLine":16,"endColumn":23},{"ruleId":"874","severity":1,"message":"1007","line":3,"column":16,"nodeType":"876","messageId":"877","endLine":3,"endColumn":23},{"ruleId":"874","severity":1,"message":"918","line":3,"column":25,"nodeType":"876","messageId":"877","endLine":3,"endColumn":31},{"ruleId":"874","severity":1,"message":"1008","line":3,"column":33,"nodeType":"876","messageId":"877","endLine":3,"endColumn":38},{"ruleId":"874","severity":1,"message":"922","line":5,"column":10,"nodeType":"876","messageId":"877","endLine":5,"endColumn":22},{"ruleId":"874","severity":1,"message":"1009","line":6,"column":10,"nodeType":"876","messageId":"877","endLine":6,"endColumn":24},{"ruleId":"874","severity":1,"message":"1010","line":16,"column":8,"nodeType":"876","messageId":"877","endLine":16,"endColumn":16},{"ruleId":"874","severity":1,"message":"1011","line":23,"column":8,"nodeType":"876","messageId":"877","endLine":23,"endColumn":17},{"ruleId":"874","severity":1,"message":"1012","line":24,"column":8,"nodeType":"876","messageId":"877","endLine":24,"endColumn":21},{"ruleId":"874","severity":1,"message":"925","line":26,"column":8,"nodeType":"876","messageId":"877","endLine":26,"endColumn":16},{"ruleId":"874","severity":1,"message":"1013","line":38,"column":8,"nodeType":"876","messageId":"877","endLine":38,"endColumn":15},{"ruleId":"874","severity":1,"message":"880","line":40,"column":9,"nodeType":"876","messageId":"877","endLine":40,"endColumn":16},{"ruleId":"874","severity":1,"message":"881","line":41,"column":7,"nodeType":"876","messageId":"877","endLine":41,"endColumn":13},{"ruleId":"874","severity":1,"message":"1014","line":45,"column":7,"nodeType":"876","messageId":"877","endLine":45,"endColumn":17},{"ruleId":"874","severity":1,"message":"1015","line":106,"column":10,"nodeType":"876","messageId":"877","endLine":106,"endColumn":19},{"ruleId":"874","severity":1,"message":"1016","line":106,"column":21,"nodeType":"876","messageId":"877","endLine":106,"endColumn":33},{"ruleId":"874","severity":1,"message":"1017","line":138,"column":10,"nodeType":"876","messageId":"877","endLine":138,"endColumn":19},{"ruleId":"874","severity":1,"message":"1018","line":221,"column":13,"nodeType":"876","messageId":"877","endLine":221,"endColumn":20},{"ruleId":"956","severity":1,"message":"957","line":825,"column":17,"nodeType":"958","endLine":825,"endColumn":62},{"ruleId":"956","severity":1,"message":"957","line":830,"column":17,"nodeType":"958","endLine":830,"endColumn":65},{"ruleId":"1019","severity":1,"message":"1020","line":885,"column":15,"nodeType":"958","endLine":891,"endColumn":16},{"ruleId":"1019","severity":1,"message":"1020","line":894,"column":15,"nodeType":"958","endLine":900,"endColumn":16},{"ruleId":"956","severity":1,"message":"957","line":994,"column":17,"nodeType":"958","endLine":994,"endColumn":62},{"ruleId":"956","severity":1,"message":"957","line":998,"column":15,"nodeType":"958","endLine":998,"endColumn":64},{"ruleId":"1019","severity":1,"message":"1020","line":1116,"column":13,"nodeType":"958","endLine":1120,"endColumn":14},{"ruleId":"1019","severity":1,"message":"1020","line":1197,"column":15,"nodeType":"958","endLine":1205,"endColumn":16},{"ruleId":"1019","severity":1,"message":"1020","line":1220,"column":13,"nodeType":"958","endLine":1220,"endColumn":76},{"ruleId":"1019","severity":1,"message":"1020","line":1291,"column":15,"nodeType":"958","endLine":1299,"endColumn":16},{"ruleId":"1019","severity":1,"message":"1020","line":1323,"column":15,"nodeType":"958","endLine":1327,"endColumn":16},{"ruleId":"874","severity":1,"message":"1021","line":1353,"column":9,"nodeType":"876","messageId":"877","endLine":1353,"endColumn":15},{"ruleId":"930","severity":1,"message":"1022","line":1389,"column":6,"nodeType":"932","endLine":1389,"endColumn":8,"suggestions":"1023"},{"ruleId":"930","severity":1,"message":"1024","line":1398,"column":6,"nodeType":"932","endLine":1398,"endColumn":32,"suggestions":"1025"},{"ruleId":"956","severity":1,"message":"957","line":1420,"column":15,"nodeType":"958","endLine":1420,"endColumn":59},{"ruleId":"956","severity":1,"message":"957","line":1595,"column":19,"nodeType":"958","endLine":1595,"endColumn":54},{"ruleId":"956","severity":1,"message":"957","line":1597,"column":19,"nodeType":"958","endLine":1597,"endColumn":53},{"ruleId":"874","severity":1,"message":"1026","line":63,"column":17,"nodeType":"876","messageId":"877","endLine":63,"endColumn":25},{"ruleId":"874","severity":1,"message":"1027","line":74,"column":10,"nodeType":"876","messageId":"877","endLine":74,"endColumn":18},{"ruleId":"874","severity":1,"message":"1028","line":78,"column":10,"nodeType":"876","messageId":"877","endLine":78,"endColumn":13},{"ruleId":"874","severity":1,"message":"1029","line":81,"column":18,"nodeType":"876","messageId":"877","endLine":81,"endColumn":27},{"ruleId":"930","severity":1,"message":"1030","line":100,"column":6,"nodeType":"932","endLine":100,"endColumn":32,"suggestions":"1031"},{"ruleId":"874","severity":1,"message":"1032","line":110,"column":11,"nodeType":"876","messageId":"877","endLine":110,"endColumn":14},{"ruleId":"874","severity":1,"message":"1033","line":445,"column":24,"nodeType":"876","messageId":"877","endLine":445,"endColumn":28},{"ruleId":"895","severity":1,"message":"1034","line":460,"column":49,"nodeType":"897","messageId":"898","endLine":460,"endColumn":51},{"ruleId":"890","severity":1,"message":"1035","line":724,"column":34,"nodeType":"892","messageId":"893","endLine":724,"endColumn":35,"suggestions":"1036"},{"ruleId":"890","severity":1,"message":"891","line":729,"column":31,"nodeType":"892","messageId":"893","endLine":729,"endColumn":32,"suggestions":"1037"},{"ruleId":"890","severity":1,"message":"1035","line":753,"column":34,"nodeType":"892","messageId":"893","endLine":753,"endColumn":35,"suggestions":"1038"},{"ruleId":"890","severity":1,"message":"891","line":758,"column":31,"nodeType":"892","messageId":"893","endLine":758,"endColumn":32,"suggestions":"1039"},{"ruleId":"890","severity":1,"message":"1035","line":782,"column":34,"nodeType":"892","messageId":"893","endLine":782,"endColumn":35,"suggestions":"1040"},{"ruleId":"890","severity":1,"message":"891","line":787,"column":31,"nodeType":"892","messageId":"893","endLine":787,"endColumn":32,"suggestions":"1041"},{"ruleId":"890","severity":1,"message":"1035","line":831,"column":34,"nodeType":"892","messageId":"893","endLine":831,"endColumn":35,"suggestions":"1042"},{"ruleId":"890","severity":1,"message":"891","line":836,"column":31,"nodeType":"892","messageId":"893","endLine":836,"endColumn":32,"suggestions":"1043"},{"ruleId":"890","severity":1,"message":"1035","line":859,"column":34,"nodeType":"892","messageId":"893","endLine":859,"endColumn":35,"suggestions":"1044"},{"ruleId":"890","severity":1,"message":"891","line":864,"column":31,"nodeType":"892","messageId":"893","endLine":864,"endColumn":32,"suggestions":"1045"},{"ruleId":"890","severity":1,"message":"1035","line":889,"column":34,"nodeType":"892","messageId":"893","endLine":889,"endColumn":35,"suggestions":"1046"},{"ruleId":"890","severity":1,"message":"891","line":894,"column":31,"nodeType":"892","messageId":"893","endLine":894,"endColumn":32,"suggestions":"1047"},{"ruleId":"890","severity":1,"message":"1035","line":908,"column":59,"nodeType":"892","messageId":"893","endLine":908,"endColumn":60,"suggestions":"1048"},{"ruleId":"890","severity":1,"message":"891","line":908,"column":165,"nodeType":"892","messageId":"893","endLine":908,"endColumn":166,"suggestions":"1049"},{"ruleId":"1050","severity":1,"message":"1051","line":1256,"column":9,"nodeType":"1052","messageId":"898","endLine":1256,"endColumn":14},{"ruleId":"890","severity":1,"message":"1035","line":1452,"column":34,"nodeType":"892","messageId":"893","endLine":1452,"endColumn":35,"suggestions":"1053"},{"ruleId":"890","severity":1,"message":"891","line":1457,"column":31,"nodeType":"892","messageId":"893","endLine":1457,"endColumn":32,"suggestions":"1054"},{"ruleId":"890","severity":1,"message":"1035","line":1473,"column":34,"nodeType":"892","messageId":"893","endLine":1473,"endColumn":35,"suggestions":"1055"},{"ruleId":"890","severity":1,"message":"891","line":1478,"column":31,"nodeType":"892","messageId":"893","endLine":1478,"endColumn":32,"suggestions":"1056"},{"ruleId":"930","severity":1,"message":"1057","line":1676,"column":6,"nodeType":"932","endLine":1676,"endColumn":8,"suggestions":"1058"},{"ruleId":"930","severity":1,"message":"1059","line":1723,"column":6,"nodeType":"932","endLine":1723,"endColumn":23,"suggestions":"1060"},{"ruleId":"930","severity":1,"message":"1061","line":1752,"column":6,"nodeType":"932","endLine":1752,"endColumn":26,"suggestions":"1062"},{"ruleId":"874","severity":1,"message":"921","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":30},{"ruleId":"874","severity":1,"message":"945","line":4,"column":32,"nodeType":"876","messageId":"877","endLine":4,"endColumn":47},{"ruleId":"884","severity":1,"message":"885","line":105,"column":5,"nodeType":"886","messageId":"887","endLine":111,"endColumn":6},{"ruleId":"1063","severity":1,"message":"1064","line":118,"column":41,"nodeType":"1065","messageId":"1066","endLine":118,"endColumn":43},{"ruleId":"1063","severity":1,"message":"1064","line":156,"column":41,"nodeType":"1065","messageId":"1066","endLine":156,"endColumn":43},{"ruleId":"874","severity":1,"message":"1067","line":263,"column":11,"nodeType":"876","messageId":"877","endLine":263,"endColumn":21},{"ruleId":"874","severity":1,"message":"1068","line":263,"column":49,"nodeType":"876","messageId":"877","endLine":263,"endColumn":55},{"ruleId":"874","severity":1,"message":"1069","line":336,"column":11,"nodeType":"876","messageId":"877","endLine":336,"endColumn":24},{"ruleId":"1070","severity":2,"message":"1071","line":512,"column":23,"nodeType":"1072","messageId":"1073","endLine":513,"endColumn":64},{"ruleId":"1074","severity":1,"message":"1075","line":512,"column":40,"nodeType":"1076","messageId":"1077","endLine":512,"endColumn":41},{"ruleId":"956","severity":1,"message":"957","line":540,"column":15,"nodeType":"958","endLine":540,"endColumn":63},{"ruleId":"874","severity":1,"message":"1078","line":556,"column":5,"nodeType":"876","messageId":"877","endLine":556,"endColumn":12},{"ruleId":"874","severity":1,"message":"1079","line":557,"column":11,"nodeType":"876","messageId":"877","endLine":557,"endColumn":20},{"ruleId":"956","severity":1,"message":"957","line":572,"column":15,"nodeType":"958","endLine":572,"endColumn":63},{"ruleId":"884","severity":1,"message":"885","line":596,"column":5,"nodeType":"886","messageId":"887","endLine":599,"endColumn":6},{"ruleId":"884","severity":1,"message":"885","line":600,"column":5,"nodeType":"886","messageId":"887","endLine":603,"endColumn":6},{"ruleId":"874","severity":1,"message":"1080","line":716,"column":34,"nodeType":"876","messageId":"877","endLine":716,"endColumn":43},{"ruleId":"874","severity":1,"message":"1081","line":719,"column":28,"nodeType":"876","messageId":"877","endLine":719,"endColumn":31},{"ruleId":"874","severity":1,"message":"902","line":787,"column":13,"nodeType":"876","messageId":"877","endLine":787,"endColumn":23},{"ruleId":"874","severity":1,"message":"903","line":787,"column":25,"nodeType":"876","messageId":"877","endLine":787,"endColumn":33},{"ruleId":"874","severity":1,"message":"904","line":787,"column":35,"nodeType":"876","messageId":"877","endLine":787,"endColumn":41},{"ruleId":"874","severity":1,"message":"1082","line":787,"column":43,"nodeType":"876","messageId":"877","endLine":787,"endColumn":51},{"ruleId":"874","severity":1,"message":"1083","line":840,"column":79,"nodeType":"876","messageId":"877","endLine":840,"endColumn":84},{"ruleId":"874","severity":1,"message":"1084","line":840,"column":117,"nodeType":"876","messageId":"877","endLine":840,"endColumn":139},{"ruleId":"874","severity":1,"message":"943","line":2,"column":8,"nodeType":"876","messageId":"877","endLine":2,"endColumn":17},{"ruleId":"874","severity":1,"message":"917","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":15},{"ruleId":"874","severity":1,"message":"918","line":4,"column":17,"nodeType":"876","messageId":"877","endLine":4,"endColumn":23},{"ruleId":"874","severity":1,"message":"944","line":4,"column":25,"nodeType":"876","messageId":"877","endLine":4,"endColumn":32},{"ruleId":"874","severity":1,"message":"919","line":4,"column":34,"nodeType":"876","messageId":"877","endLine":4,"endColumn":38},{"ruleId":"874","severity":1,"message":"920","line":4,"column":40,"nodeType":"876","messageId":"877","endLine":4,"endColumn":47},{"ruleId":"874","severity":1,"message":"921","line":5,"column":10,"nodeType":"876","messageId":"877","endLine":5,"endColumn":30},{"ruleId":"874","severity":1,"message":"945","line":5,"column":46,"nodeType":"876","messageId":"877","endLine":5,"endColumn":61},{"ruleId":"874","severity":1,"message":"923","line":7,"column":10,"nodeType":"876","messageId":"877","endLine":7,"endColumn":28},{"ruleId":"874","severity":1,"message":"906","line":9,"column":10,"nodeType":"876","messageId":"877","endLine":9,"endColumn":14},{"ruleId":"874","severity":1,"message":"946","line":9,"column":20,"nodeType":"876","messageId":"877","endLine":9,"endColumn":24},{"ruleId":"874","severity":1,"message":"879","line":9,"column":26,"nodeType":"876","messageId":"877","endLine":9,"endColumn":28},{"ruleId":"930","severity":1,"message":"1085","line":142,"column":6,"nodeType":"932","endLine":142,"endColumn":8,"suggestions":"1086"},{"ruleId":"874","severity":1,"message":"915","line":1,"column":27,"nodeType":"876","messageId":"877","endLine":1,"endColumn":36},{"ruleId":"874","severity":1,"message":"906","line":8,"column":10,"nodeType":"876","messageId":"877","endLine":8,"endColumn":14},{"ruleId":"874","severity":1,"message":"946","line":8,"column":20,"nodeType":"876","messageId":"877","endLine":8,"endColumn":24},{"ruleId":"874","severity":1,"message":"1087","line":18,"column":7,"nodeType":"876","messageId":"877","endLine":18,"endColumn":14},{"ruleId":"874","severity":1,"message":"1088","line":63,"column":13,"nodeType":"876","messageId":"877","endLine":63,"endColumn":19},{"ruleId":"874","severity":1,"message":"1089","line":67,"column":13,"nodeType":"876","messageId":"877","endLine":67,"endColumn":20},{"ruleId":"1019","severity":1,"message":"1020","line":155,"column":9,"nodeType":"958","endLine":171,"endColumn":10},{"ruleId":"884","severity":1,"message":"885","line":219,"column":15,"nodeType":"886","messageId":"887","endLine":238,"endColumn":16},{"ruleId":"874","severity":1,"message":"919","line":2,"column":60,"nodeType":"876","messageId":"877","endLine":2,"endColumn":64},{"ruleId":"874","severity":1,"message":"1090","line":3,"column":8,"nodeType":"876","messageId":"877","endLine":3,"endColumn":17},{"ruleId":"874","severity":1,"message":"922","line":6,"column":32,"nodeType":"876","messageId":"877","endLine":6,"endColumn":44},{"ruleId":"874","severity":1,"message":"945","line":6,"column":46,"nodeType":"876","messageId":"877","endLine":6,"endColumn":61},{"ruleId":"874","severity":1,"message":"880","line":31,"column":9,"nodeType":"876","messageId":"877","endLine":31,"endColumn":16},{"ruleId":"874","severity":1,"message":"1091","line":38,"column":5,"nodeType":"876","messageId":"877","endLine":38,"endColumn":8},{"ruleId":"874","severity":1,"message":"1092","line":114,"column":29,"nodeType":"876","messageId":"877","endLine":114,"endColumn":36},{"ruleId":"874","severity":1,"message":"1093","line":114,"column":38,"nodeType":"876","messageId":"877","endLine":114,"endColumn":46},{"ruleId":"874","severity":1,"message":"1094","line":114,"column":48,"nodeType":"876","messageId":"877","endLine":114,"endColumn":57},{"ruleId":"884","severity":1,"message":"885","line":158,"column":5,"nodeType":"886","messageId":"887","endLine":164,"endColumn":6},{"ruleId":"1063","severity":1,"message":"1064","line":171,"column":41,"nodeType":"1065","messageId":"1066","endLine":171,"endColumn":43},{"ruleId":"874","severity":1,"message":"1067","line":447,"column":11,"nodeType":"876","messageId":"877","endLine":447,"endColumn":21},{"ruleId":"956","severity":1,"message":"957","line":707,"column":15,"nodeType":"958","endLine":707,"endColumn":63},{"ruleId":"874","severity":1,"message":"1078","line":723,"column":5,"nodeType":"876","messageId":"877","endLine":723,"endColumn":12},{"ruleId":"874","severity":1,"message":"1079","line":724,"column":11,"nodeType":"876","messageId":"877","endLine":724,"endColumn":20},{"ruleId":"956","severity":1,"message":"957","line":742,"column":15,"nodeType":"958","endLine":742,"endColumn":63},{"ruleId":"884","severity":1,"message":"885","line":764,"column":5,"nodeType":"886","messageId":"887","endLine":767,"endColumn":6},{"ruleId":"884","severity":1,"message":"885","line":768,"column":5,"nodeType":"886","messageId":"887","endLine":771,"endColumn":6},{"ruleId":"874","severity":1,"message":"1095","line":894,"column":61,"nodeType":"876","messageId":"877","endLine":894,"endColumn":78},{"ruleId":"874","severity":1,"message":"1083","line":894,"column":80,"nodeType":"876","messageId":"877","endLine":894,"endColumn":85},{"ruleId":"874","severity":1,"message":"1079","line":894,"column":118,"nodeType":"876","messageId":"877","endLine":894,"endColumn":127},{"ruleId":"874","severity":1,"message":"1096","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":26},{"ruleId":"874","severity":1,"message":"940","line":1,"column":39,"nodeType":"876","messageId":"877","endLine":1,"endColumn":47},{"ruleId":"930","severity":1,"message":"1097","line":161,"column":6,"nodeType":"932","endLine":161,"endColumn":23,"suggestions":"1098"},{"ruleId":"874","severity":1,"message":"906","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":14},{"ruleId":"874","severity":1,"message":"879","line":4,"column":20,"nodeType":"876","messageId":"877","endLine":4,"endColumn":22},{"ruleId":"884","severity":1,"message":"885","line":417,"column":9,"nodeType":"886","messageId":"887","endLine":424,"endColumn":10},{"ruleId":"874","severity":1,"message":"1099","line":624,"column":15,"nodeType":"876","messageId":"877","endLine":624,"endColumn":25},{"ruleId":"874","severity":1,"message":"1100","line":668,"column":17,"nodeType":"876","messageId":"877","endLine":668,"endColumn":26},{"ruleId":"874","severity":1,"message":"1101","line":805,"column":13,"nodeType":"876","messageId":"877","endLine":805,"endColumn":16},{"ruleId":"874","severity":1,"message":"1102","line":808,"column":15,"nodeType":"876","messageId":"877","endLine":808,"endColumn":30},{"ruleId":"874","severity":1,"message":"1103","line":810,"column":15,"nodeType":"876","messageId":"877","endLine":810,"endColumn":30},{"ruleId":"874","severity":1,"message":"1100","line":878,"column":17,"nodeType":"876","messageId":"877","endLine":878,"endColumn":26},{"ruleId":"874","severity":1,"message":"1104","line":987,"column":11,"nodeType":"876","messageId":"877","endLine":987,"endColumn":22},{"ruleId":"874","severity":1,"message":"947","line":18,"column":9,"nodeType":"876","messageId":"877","endLine":18,"endColumn":15},{"ruleId":"874","severity":1,"message":"1105","line":18,"column":26,"nodeType":"876","messageId":"877","endLine":18,"endColumn":32},{"ruleId":"874","severity":1,"message":"1106","line":18,"column":34,"nodeType":"876","messageId":"877","endLine":18,"endColumn":39},{"ruleId":"930","severity":1,"message":"1107","line":221,"column":6,"nodeType":"932","endLine":221,"endColumn":22,"suggestions":"1108"},{"ruleId":"930","severity":1,"message":"1109","line":230,"column":6,"nodeType":"932","endLine":230,"endColumn":21,"suggestions":"1110"},{"ruleId":"874","severity":1,"message":"1111","line":11,"column":3,"nodeType":"876","messageId":"877","endLine":11,"endColumn":9},{"ruleId":"874","severity":1,"message":"1112","line":21,"column":8,"nodeType":"876","messageId":"877","endLine":21,"endColumn":14},{"ruleId":"874","severity":1,"message":"878","line":26,"column":10,"nodeType":"876","messageId":"877","endLine":26,"endColumn":21},{"ruleId":"874","severity":1,"message":"1113","line":28,"column":8,"nodeType":"876","messageId":"877","endLine":28,"endColumn":14},{"ruleId":"874","severity":1,"message":"946","line":30,"column":10,"nodeType":"876","messageId":"877","endLine":30,"endColumn":14},{"ruleId":"874","severity":1,"message":"906","line":30,"column":16,"nodeType":"876","messageId":"877","endLine":30,"endColumn":20},{"ruleId":"874","severity":1,"message":"1114","line":31,"column":10,"nodeType":"876","messageId":"877","endLine":31,"endColumn":20},{"ruleId":"874","severity":1,"message":"1115","line":36,"column":8,"nodeType":"876","messageId":"877","endLine":36,"endColumn":21},{"ruleId":"874","severity":1,"message":"1116","line":37,"column":8,"nodeType":"876","messageId":"877","endLine":37,"endColumn":15},{"ruleId":"874","severity":1,"message":"880","line":42,"column":9,"nodeType":"876","messageId":"877","endLine":42,"endColumn":16},{"ruleId":"874","severity":1,"message":"881","line":43,"column":7,"nodeType":"876","messageId":"877","endLine":43,"endColumn":13},{"ruleId":"874","severity":1,"message":"1117","line":166,"column":9,"nodeType":"876","messageId":"877","endLine":166,"endColumn":16},{"ruleId":"874","severity":1,"message":"1118","line":176,"column":15,"nodeType":"876","messageId":"877","endLine":176,"endColumn":21},{"ruleId":"874","severity":1,"message":"1119","line":626,"column":15,"nodeType":"876","messageId":"877","endLine":626,"endColumn":24},{"ruleId":"874","severity":1,"message":"1088","line":901,"column":15,"nodeType":"876","messageId":"877","endLine":901,"endColumn":21},{"ruleId":"874","severity":1,"message":"1089","line":905,"column":15,"nodeType":"876","messageId":"877","endLine":905,"endColumn":22},{"ruleId":"874","severity":1,"message":"1120","line":989,"column":28,"nodeType":"876","messageId":"877","endLine":989,"endColumn":31},{"ruleId":"874","severity":1,"message":"1121","line":989,"column":33,"nodeType":"876","messageId":"877","endLine":989,"endColumn":35},{"ruleId":"874","severity":1,"message":"1122","line":989,"column":37,"nodeType":"876","messageId":"877","endLine":989,"endColumn":45},{"ruleId":"874","severity":1,"message":"902","line":989,"column":53,"nodeType":"876","messageId":"877","endLine":989,"endColumn":63},{"ruleId":"874","severity":1,"message":"903","line":989,"column":65,"nodeType":"876","messageId":"877","endLine":989,"endColumn":73},{"ruleId":"874","severity":1,"message":"904","line":989,"column":75,"nodeType":"876","messageId":"877","endLine":989,"endColumn":81},{"ruleId":"874","severity":1,"message":"912","line":989,"column":111,"nodeType":"876","messageId":"877","endLine":989,"endColumn":117},{"ruleId":"874","severity":1,"message":"913","line":989,"column":119,"nodeType":"876","messageId":"877","endLine":989,"endColumn":129},{"ruleId":"1019","severity":1,"message":"1020","line":1001,"column":11,"nodeType":"958","endLine":1017,"endColumn":12},{"ruleId":"884","severity":1,"message":"885","line":1099,"column":19,"nodeType":"886","messageId":"887","endLine":1118,"endColumn":20},{"ruleId":"956","severity":1,"message":"957","line":1212,"column":17,"nodeType":"958","endLine":1212,"endColumn":52},{"ruleId":"956","severity":1,"message":"957","line":1213,"column":17,"nodeType":"958","endLine":1213,"endColumn":51},{"ruleId":"874","severity":1,"message":"962","line":5,"column":3,"nodeType":"876","messageId":"877","endLine":5,"endColumn":8},{"ruleId":"874","severity":1,"message":"993","line":7,"column":3,"nodeType":"876","messageId":"877","endLine":7,"endColumn":6},{"ruleId":"874","severity":1,"message":"995","line":47,"column":16,"nodeType":"876","messageId":"877","endLine":47,"endColumn":20},{"ruleId":"874","severity":1,"message":"996","line":52,"column":5,"nodeType":"876","messageId":"877","endLine":52,"endColumn":10},{"ruleId":"956","severity":1,"message":"957","line":106,"column":18,"nodeType":"958","endLine":106,"endColumn":47},{"ruleId":"956","severity":1,"message":"957","line":108,"column":18,"nodeType":"958","endLine":108,"endColumn":47},{"ruleId":"956","severity":1,"message":"957","line":110,"column":18,"nodeType":"958","endLine":110,"endColumn":47},{"ruleId":"956","severity":1,"message":"957","line":112,"column":18,"nodeType":"958","endLine":112,"endColumn":47},{"ruleId":"956","severity":1,"message":"957","line":135,"column":11,"nodeType":"958","endLine":143,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":148,"column":13,"nodeType":"958","endLine":148,"endColumn":63},{"ruleId":"895","severity":1,"message":"896","line":211,"column":28,"nodeType":"897","messageId":"898","endLine":211,"endColumn":30},{"ruleId":"930","severity":1,"message":"999","line":444,"column":6,"nodeType":"932","endLine":444,"endColumn":18,"suggestions":"1123"},{"ruleId":"930","severity":1,"message":"1003","line":452,"column":6,"nodeType":"932","endLine":452,"endColumn":8,"suggestions":"1124"},{"ruleId":"874","severity":1,"message":"980","line":1,"column":38,"nodeType":"876","messageId":"877","endLine":1,"endColumn":44},{"ruleId":"874","severity":1,"message":"941","line":5,"column":3,"nodeType":"876","messageId":"877","endLine":5,"endColumn":7},{"ruleId":"874","severity":1,"message":"942","line":6,"column":3,"nodeType":"876","messageId":"877","endLine":6,"endColumn":13},{"ruleId":"874","severity":1,"message":"952","line":13,"column":3,"nodeType":"876","messageId":"877","endLine":13,"endColumn":11},{"ruleId":"874","severity":1,"message":"1125","line":40,"column":8,"nodeType":"876","messageId":"877","endLine":40,"endColumn":18},{"ruleId":"874","severity":1,"message":"929","line":43,"column":8,"nodeType":"876","messageId":"877","endLine":43,"endColumn":15},{"ruleId":"874","severity":1,"message":"947","line":45,"column":18,"nodeType":"876","messageId":"877","endLine":45,"endColumn":24},{"ruleId":"874","severity":1,"message":"1080","line":55,"column":28,"nodeType":"876","messageId":"877","endLine":55,"endColumn":37},{"ruleId":"874","severity":1,"message":"1126","line":56,"column":58,"nodeType":"876","messageId":"877","endLine":56,"endColumn":76},{"ruleId":"874","severity":1,"message":"1127","line":60,"column":10,"nodeType":"876","messageId":"877","endLine":60,"endColumn":17},{"ruleId":"874","severity":1,"message":"1128","line":60,"column":19,"nodeType":"876","messageId":"877","endLine":60,"endColumn":29},{"ruleId":"874","severity":1,"message":"1129","line":68,"column":10,"nodeType":"876","messageId":"877","endLine":68,"endColumn":19},{"ruleId":"874","severity":1,"message":"1130","line":69,"column":10,"nodeType":"876","messageId":"877","endLine":69,"endColumn":25},{"ruleId":"874","severity":1,"message":"1131","line":69,"column":27,"nodeType":"876","messageId":"877","endLine":69,"endColumn":45},{"ruleId":"956","severity":1,"message":"957","line":159,"column":11,"nodeType":"958","endLine":159,"endColumn":29},{"ruleId":"956","severity":1,"message":"957","line":161,"column":11,"nodeType":"958","endLine":161,"endColumn":32},{"ruleId":"956","severity":1,"message":"957","line":165,"column":11,"nodeType":"958","endLine":165,"endColumn":29},{"ruleId":"956","severity":1,"message":"957","line":167,"column":11,"nodeType":"958","endLine":167,"endColumn":32},{"ruleId":"956","severity":1,"message":"957","line":171,"column":11,"nodeType":"958","endLine":171,"endColumn":30},{"ruleId":"956","severity":1,"message":"957","line":173,"column":11,"nodeType":"958","endLine":173,"endColumn":33},{"ruleId":"956","severity":1,"message":"957","line":177,"column":11,"nodeType":"958","endLine":177,"endColumn":30},{"ruleId":"956","severity":1,"message":"957","line":179,"column":11,"nodeType":"958","endLine":179,"endColumn":33},{"ruleId":"956","severity":1,"message":"957","line":183,"column":11,"nodeType":"958","endLine":183,"endColumn":29},{"ruleId":"956","severity":1,"message":"957","line":185,"column":11,"nodeType":"958","endLine":185,"endColumn":32},{"ruleId":"956","severity":1,"message":"957","line":189,"column":11,"nodeType":"958","endLine":189,"endColumn":29},{"ruleId":"956","severity":1,"message":"957","line":191,"column":11,"nodeType":"958","endLine":191,"endColumn":32},{"ruleId":"956","severity":1,"message":"957","line":195,"column":11,"nodeType":"958","endLine":195,"endColumn":29},{"ruleId":"956","severity":1,"message":"957","line":197,"column":11,"nodeType":"958","endLine":197,"endColumn":32},{"ruleId":"874","severity":1,"message":"1132","line":244,"column":9,"nodeType":"876","messageId":"877","endLine":244,"endColumn":21},{"ruleId":"930","severity":1,"message":"1133","line":278,"column":6,"nodeType":"932","endLine":278,"endColumn":18,"suggestions":"1134"},{"ruleId":"930","severity":1,"message":"1135","line":300,"column":6,"nodeType":"932","endLine":300,"endColumn":25,"suggestions":"1136"},{"ruleId":"930","severity":1,"message":"1137","line":331,"column":6,"nodeType":"932","endLine":331,"endColumn":13,"suggestions":"1138"},{"ruleId":"930","severity":1,"message":"1139","line":358,"column":6,"nodeType":"932","endLine":358,"endColumn":44,"suggestions":"1140"},{"ruleId":"930","severity":1,"message":"1141","line":369,"column":6,"nodeType":"932","endLine":369,"endColumn":17,"suggestions":"1142"},{"ruleId":"874","severity":1,"message":"923","line":23,"column":10,"nodeType":"876","messageId":"877","endLine":23,"endColumn":28},{"ruleId":"874","severity":1,"message":"1105","line":29,"column":26,"nodeType":"876","messageId":"877","endLine":29,"endColumn":32},{"ruleId":"874","severity":1,"message":"1106","line":29,"column":34,"nodeType":"876","messageId":"877","endLine":29,"endColumn":39},{"ruleId":"930","severity":1,"message":"1143","line":116,"column":6,"nodeType":"932","endLine":116,"endColumn":8,"suggestions":"1144"},{"ruleId":"956","severity":1,"message":"957","line":168,"column":19,"nodeType":"958","endLine":168,"endColumn":47},{"ruleId":"874","severity":1,"message":"940","line":1,"column":17,"nodeType":"876","messageId":"877","endLine":1,"endColumn":25},{"ruleId":"874","severity":1,"message":"915","line":1,"column":27,"nodeType":"876","messageId":"877","endLine":1,"endColumn":36},{"ruleId":"874","severity":1,"message":"922","line":3,"column":10,"nodeType":"876","messageId":"877","endLine":3,"endColumn":22},{"ruleId":"874","severity":1,"message":"921","line":3,"column":24,"nodeType":"876","messageId":"877","endLine":3,"endColumn":44},{"ruleId":"874","severity":1,"message":"1009","line":4,"column":10,"nodeType":"876","messageId":"877","endLine":4,"endColumn":24},{"ruleId":"956","severity":1,"message":"957","line":44,"column":11,"nodeType":"958","endLine":47,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":53,"column":13,"nodeType":"958","endLine":56,"endColumn":15},{"ruleId":"956","severity":1,"message":"957","line":61,"column":11,"nodeType":"958","endLine":64,"endColumn":13},{"ruleId":"956","severity":1,"message":"957","line":74,"column":11,"nodeType":"958","endLine":77,"endColumn":13},{"ruleId":"874","severity":1,"message":"983","line":9,"column":3,"nodeType":"876","messageId":"877","endLine":9,"endColumn":8},{"ruleId":"874","severity":1,"message":"1145","line":13,"column":3,"nodeType":"876","messageId":"877","endLine":13,"endColumn":9},{"ruleId":"874","severity":1,"message":"1146","line":17,"column":10,"nodeType":"876","messageId":"877","endLine":17,"endColumn":22},{"ruleId":"874","severity":1,"message":"1147","line":33,"column":10,"nodeType":"876","messageId":"877","endLine":33,"endColumn":16},{"ruleId":"874","severity":1,"message":"1148","line":35,"column":10,"nodeType":"876","messageId":"877","endLine":35,"endColumn":17},{"ruleId":"874","severity":1,"message":"1149","line":37,"column":10,"nodeType":"876","messageId":"877","endLine":37,"endColumn":18},{"ruleId":"930","severity":1,"message":"1150","line":91,"column":6,"nodeType":"932","endLine":91,"endColumn":8,"suggestions":"1151"},{"ruleId":"874","severity":1,"message":"1152","line":58,"column":9,"nodeType":"876","messageId":"877","endLine":58,"endColumn":12},{"ruleId":"874","severity":1,"message":"918","line":2,"column":17,"nodeType":"876","messageId":"877","endLine":2,"endColumn":23},{"ruleId":"874","severity":1,"message":"920","line":2,"column":40,"nodeType":"876","messageId":"877","endLine":2,"endColumn":47},{"ruleId":"874","severity":1,"message":"922","line":5,"column":3,"nodeType":"876","messageId":"877","endLine":5,"endColumn":15},{"ruleId":"874","severity":1,"message":"1153","line":14,"column":10,"nodeType":"876","messageId":"877","endLine":14,"endColumn":22},{"ruleId":"874","severity":1,"message":"1154","line":17,"column":10,"nodeType":"876","messageId":"877","endLine":17,"endColumn":23},{"ruleId":"874","severity":1,"message":"906","line":18,"column":10,"nodeType":"876","messageId":"877","endLine":18,"endColumn":14},{"ruleId":"874","severity":1,"message":"946","line":18,"column":20,"nodeType":"876","messageId":"877","endLine":18,"endColumn":24},{"ruleId":"874","severity":1,"message":"879","line":18,"column":26,"nodeType":"876","messageId":"877","endLine":18,"endColumn":28},{"ruleId":"874","severity":1,"message":"1005","line":21,"column":20,"nodeType":"876","messageId":"877","endLine":21,"endColumn":29},{"ruleId":"874","severity":1,"message":"881","line":23,"column":7,"nodeType":"876","messageId":"877","endLine":23,"endColumn":13},{"ruleId":"874","severity":1,"message":"1155","line":346,"column":11,"nodeType":"876","messageId":"877","endLine":346,"endColumn":17},{"ruleId":"874","severity":1,"message":"1156","line":414,"column":19,"nodeType":"876","messageId":"877","endLine":414,"endColumn":26},{"ruleId":"874","severity":1,"message":"1157","line":415,"column":9,"nodeType":"876","messageId":"877","endLine":415,"endColumn":13},{"ruleId":"1019","severity":1,"message":"1020","line":580,"column":15,"nodeType":"958","endLine":580,"endColumn":50},{"ruleId":"874","severity":1,"message":"1158","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":16},{"ruleId":"874","severity":1,"message":"1159","line":5,"column":8,"nodeType":"876","messageId":"877","endLine":5,"endColumn":14},{"ruleId":"874","severity":1,"message":"918","line":6,"column":8,"nodeType":"876","messageId":"877","endLine":6,"endColumn":14},{"ruleId":"874","severity":1,"message":"984","line":7,"column":8,"nodeType":"876","messageId":"877","endLine":7,"endColumn":21},{"ruleId":"874","severity":1,"message":"905","line":8,"column":8,"nodeType":"876","messageId":"877","endLine":8,"endColumn":24},{"ruleId":"874","severity":1,"message":"906","line":9,"column":10,"nodeType":"876","messageId":"877","endLine":9,"endColumn":14},{"ruleId":"874","severity":1,"message":"929","line":10,"column":8,"nodeType":"876","messageId":"877","endLine":10,"endColumn":15},{"ruleId":"874","severity":1,"message":"1160","line":11,"column":8,"nodeType":"876","messageId":"877","endLine":11,"endColumn":14},{"ruleId":"874","severity":1,"message":"1161","line":12,"column":8,"nodeType":"876","messageId":"877","endLine":12,"endColumn":11},{"ruleId":"874","severity":1,"message":"1162","line":13,"column":8,"nodeType":"876","messageId":"877","endLine":13,"endColumn":11},{"ruleId":"874","severity":1,"message":"1163","line":14,"column":8,"nodeType":"876","messageId":"877","endLine":14,"endColumn":13},{"ruleId":"874","severity":1,"message":"1153","line":15,"column":10,"nodeType":"876","messageId":"877","endLine":15,"endColumn":22},{"ruleId":"874","severity":1,"message":"982","line":16,"column":8,"nodeType":"876","messageId":"877","endLine":16,"endColumn":14},{"ruleId":"874","severity":1,"message":"908","line":19,"column":9,"nodeType":"876","messageId":"877","endLine":19,"endColumn":15},{"ruleId":"874","severity":1,"message":"1164","line":32,"column":11,"nodeType":"876","messageId":"877","endLine":32,"endColumn":17},{"ruleId":"874","severity":1,"message":"1165","line":32,"column":19,"nodeType":"876","messageId":"877","endLine":32,"endColumn":24},{"ruleId":"874","severity":1,"message":"909","line":134,"column":9,"nodeType":"876","messageId":"877","endLine":134,"endColumn":22},{"ruleId":"874","severity":1,"message":"1166","line":3,"column":10,"nodeType":"876","messageId":"877","endLine":3,"endColumn":23},{"ruleId":"874","severity":1,"message":"1167","line":16,"column":8,"nodeType":"876","messageId":"877","endLine":16,"endColumn":17},{"ruleId":"874","severity":1,"message":"1168","line":60,"column":13,"nodeType":"876","messageId":"877","endLine":60,"endColumn":22},{"ruleId":"874","severity":1,"message":"1111","line":4,"column":3,"nodeType":"876","messageId":"877","endLine":4,"endColumn":9},{"ruleId":"874","severity":1,"message":"921","line":10,"column":10,"nodeType":"876","messageId":"877","endLine":10,"endColumn":30},{"ruleId":"874","severity":1,"message":"1169","line":15,"column":8,"nodeType":"876","messageId":"877","endLine":15,"endColumn":11},{"ruleId":"874","severity":1,"message":"878","line":17,"column":10,"nodeType":"876","messageId":"877","endLine":17,"endColumn":21},{"ruleId":"874","severity":1,"message":"1111","line":11,"column":3,"nodeType":"876","messageId":"877","endLine":11,"endColumn":9},{"ruleId":"874","severity":1,"message":"1112","line":21,"column":8,"nodeType":"876","messageId":"877","endLine":21,"endColumn":14},{"ruleId":"874","severity":1,"message":"878","line":26,"column":10,"nodeType":"876","messageId":"877","endLine":26,"endColumn":21},{"ruleId":"874","severity":1,"message":"1113","line":28,"column":8,"nodeType":"876","messageId":"877","endLine":28,"endColumn":14},{"ruleId":"874","severity":1,"message":"946","line":30,"column":10,"nodeType":"876","messageId":"877","endLine":30,"endColumn":14},{"ruleId":"874","severity":1,"message":"906","line":30,"column":16,"nodeType":"876","messageId":"877","endLine":30,"endColumn":20},{"ruleId":"874","severity":1,"message":"1114","line":31,"column":10,"nodeType":"876","messageId":"877","endLine":31,"endColumn":20},{"ruleId":"874","severity":1,"message":"1115","line":36,"column":8,"nodeType":"876","messageId":"877","endLine":36,"endColumn":21},{"ruleId":"874","severity":1,"message":"1116","line":37,"column":8,"nodeType":"876","messageId":"877","endLine":37,"endColumn":15},{"ruleId":"874","severity":1,"message":"880","line":42,"column":9,"nodeType":"876","messageId":"877","endLine":42,"endColumn":16},{"ruleId":"874","severity":1,"message":"881","line":43,"column":7,"nodeType":"876","messageId":"877","endLine":43,"endColumn":13},{"ruleId":"874","severity":1,"message":"1117","line":166,"column":9,"nodeType":"876","messageId":"877","endLine":166,"endColumn":16},{"ruleId":"874","severity":1,"message":"1118","line":176,"column":15,"nodeType":"876","messageId":"877","endLine":176,"endColumn":21},{"ruleId":"874","severity":1,"message":"1119","line":630,"column":15,"nodeType":"876","messageId":"877","endLine":630,"endColumn":24},{"ruleId":"874","severity":1,"message":"1088","line":905,"column":15,"nodeType":"876","messageId":"877","endLine":905,"endColumn":21},{"ruleId":"874","severity":1,"message":"1089","line":909,"column":15,"nodeType":"876","messageId":"877","endLine":909,"endColumn":22},{"ruleId":"874","severity":1,"message":"1120","line":993,"column":28,"nodeType":"876","messageId":"877","endLine":993,"endColumn":31},{"ruleId":"874","severity":1,"message":"1121","line":993,"column":33,"nodeType":"876","messageId":"877","endLine":993,"endColumn":35},{"ruleId":"874","severity":1,"message":"1122","line":993,"column":37,"nodeType":"876","messageId":"877","endLine":993,"endColumn":45},{"ruleId":"874","severity":1,"message":"902","line":993,"column":53,"nodeType":"876","messageId":"877","endLine":993,"endColumn":63},{"ruleId":"874","severity":1,"message":"903","line":993,"column":65,"nodeType":"876","messageId":"877","endLine":993,"endColumn":73},{"ruleId":"874","severity":1,"message":"904","line":993,"column":75,"nodeType":"876","messageId":"877","endLine":993,"endColumn":81},{"ruleId":"874","severity":1,"message":"912","line":993,"column":111,"nodeType":"876","messageId":"877","endLine":993,"endColumn":117},{"ruleId":"874","severity":1,"message":"913","line":993,"column":119,"nodeType":"876","messageId":"877","endLine":993,"endColumn":129},{"ruleId":"1019","severity":1,"message":"1020","line":1005,"column":11,"nodeType":"958","endLine":1021,"endColumn":12},{"ruleId":"884","severity":1,"message":"885","line":1104,"column":19,"nodeType":"886","messageId":"887","endLine":1123,"endColumn":20},{"ruleId":"956","severity":1,"message":"957","line":1233,"column":17,"nodeType":"958","endLine":1233,"endColumn":52},{"ruleId":"956","severity":1,"message":"957","line":1234,"column":17,"nodeType":"958","endLine":1234,"endColumn":51},{"ruleId":"874","severity":1,"message":"1090","line":8,"column":8,"nodeType":"876","messageId":"877","endLine":8,"endColumn":17},{"ruleId":"874","severity":1,"message":"921","line":9,"column":10,"nodeType":"876","messageId":"877","endLine":9,"endColumn":30},{"ruleId":"874","severity":1,"message":"906","line":20,"column":10,"nodeType":"876","messageId":"877","endLine":20,"endColumn":14},{"ruleId":"874","severity":1,"message":"879","line":20,"column":16,"nodeType":"876","messageId":"877","endLine":20,"endColumn":18},{"ruleId":"874","severity":1,"message":"1078","line":24,"column":7,"nodeType":"876","messageId":"877","endLine":24,"endColumn":14},{"ruleId":"874","severity":1,"message":"1082","line":321,"column":21,"nodeType":"876","messageId":"877","endLine":321,"endColumn":29},{"ruleId":"874","severity":1,"message":"1170","line":321,"column":31,"nodeType":"876","messageId":"877","endLine":321,"endColumn":37},{"ruleId":"1019","severity":1,"message":"1020","line":481,"column":36,"nodeType":"958","endLine":481,"endColumn":71},{"ruleId":"874","severity":1,"message":"1008","line":5,"column":3,"nodeType":"876","messageId":"877","endLine":5,"endColumn":8},{"ruleId":"874","severity":1,"message":"1090","line":8,"column":8,"nodeType":"876","messageId":"877","endLine":8,"endColumn":17},{"ruleId":"874","severity":1,"message":"922","line":11,"column":32,"nodeType":"876","messageId":"877","endLine":11,"endColumn":44},{"ruleId":"874","severity":1,"message":"1171","line":129,"column":32,"nodeType":"876","messageId":"877","endLine":129,"endColumn":48},{"ruleId":"874","severity":1,"message":"1172","line":151,"column":15,"nodeType":"876","messageId":"877","endLine":151,"endColumn":28},{"ruleId":"874","severity":1,"message":"1170","line":350,"column":21,"nodeType":"876","messageId":"877","endLine":350,"endColumn":27},{"ruleId":"1019","severity":1,"message":"1020","line":516,"column":17,"nodeType":"958","endLine":516,"endColumn":54},{"ruleId":"1019","severity":1,"message":"1020","line":574,"column":17,"nodeType":"958","endLine":574,"endColumn":60},{"ruleId":"874","severity":1,"message":"917","line":4,"column":3,"nodeType":"876","messageId":"877","endLine":4,"endColumn":8},{"ruleId":"874","severity":1,"message":"1173","line":5,"column":3,"nodeType":"876","messageId":"877","endLine":5,"endColumn":7},{"ruleId":"874","severity":1,"message":"962","line":7,"column":3,"nodeType":"876","messageId":"877","endLine":7,"endColumn":8},{"ruleId":"874","severity":1,"message":"921","line":13,"column":10,"nodeType":"876","messageId":"877","endLine":13,"endColumn":30},{"ruleId":"874","severity":1,"message":"1006","line":19,"column":10,"nodeType":"876","messageId":"877","endLine":19,"endColumn":23},{"ruleId":"874","severity":1,"message":"1090","line":9,"column":8,"nodeType":"876","messageId":"877","endLine":9,"endColumn":17},{"ruleId":"874","severity":1,"message":"921","line":10,"column":10,"nodeType":"876","messageId":"877","endLine":10,"endColumn":30},{"ruleId":"874","severity":1,"message":"1174","line":10,"column":32,"nodeType":"876","messageId":"877","endLine":10,"endColumn":47},{"ruleId":"874","severity":1,"message":"1175","line":14,"column":8,"nodeType":"876","messageId":"877","endLine":14,"endColumn":16},{"ruleId":"874","severity":1,"message":"906","line":19,"column":10,"nodeType":"876","messageId":"877","endLine":19,"endColumn":14},{"ruleId":"884","severity":1,"message":"885","line":85,"column":25,"nodeType":"886","messageId":"887","endLine":114,"endColumn":26},{"ruleId":"874","severity":1,"message":"1171","line":214,"column":42,"nodeType":"876","messageId":"877","endLine":214,"endColumn":58},{"ruleId":"874","severity":1,"message":"1172","line":235,"column":29,"nodeType":"876","messageId":"877","endLine":235,"endColumn":42},{"ruleId":"874","severity":1,"message":"1176","line":270,"column":49,"nodeType":"876","messageId":"877","endLine":270,"endColumn":63},{"ruleId":"874","severity":1,"message":"1177","line":270,"column":65,"nodeType":"876","messageId":"877","endLine":270,"endColumn":79},{"ruleId":"874","severity":1,"message":"906","line":10,"column":10,"nodeType":"876","messageId":"877","endLine":10,"endColumn":14},{"ruleId":"874","severity":1,"message":"1178","line":30,"column":9,"nodeType":"876","messageId":"877","endLine":30,"endColumn":16},{"ruleId":"874","severity":1,"message":"906","line":14,"column":10,"nodeType":"876","messageId":"877","endLine":14,"endColumn":14},{"ruleId":"874","severity":1,"message":"918","line":17,"column":8,"nodeType":"876","messageId":"877","endLine":17,"endColumn":14},{"ruleId":"874","severity":1,"message":"909","line":58,"column":9,"nodeType":"876","messageId":"877","endLine":58,"endColumn":22},{"ruleId":"874","severity":1,"message":"909","line":94,"column":9,"nodeType":"876","messageId":"877","endLine":94,"endColumn":22},{"ruleId":"1063","severity":1,"message":"1064","line":212,"column":41,"nodeType":"1065","messageId":"1066","endLine":212,"endColumn":43},{"ruleId":"1063","severity":1,"message":"1064","line":225,"column":47,"nodeType":"1065","messageId":"1066","endLine":225,"endColumn":49},{"ruleId":"874","severity":1,"message":"899","line":396,"column":23,"nodeType":"876","messageId":"877","endLine":396,"endColumn":28},{"ruleId":"874","severity":1,"message":"1179","line":449,"column":21,"nodeType":"876","messageId":"877","endLine":449,"endColumn":36},{"ruleId":"874","severity":1,"message":"1180","line":4,"column":5,"nodeType":"876","messageId":"877","endLine":4,"endColumn":10},{"ruleId":"874","severity":1,"message":"1181","line":10,"column":9,"nodeType":"876","messageId":"877","endLine":10,"endColumn":15},{"ruleId":"895","severity":1,"message":"1034","line":13,"column":16,"nodeType":"897","messageId":"898","endLine":13,"endColumn":18},{"ruleId":"895","severity":1,"message":"1034","line":58,"column":16,"nodeType":"897","messageId":"898","endLine":58,"endColumn":18},{"ruleId":"874","severity":1,"message":"915","line":2,"column":27,"nodeType":"876","messageId":"877","endLine":2,"endColumn":36},{"ruleId":"874","severity":1,"message":"906","line":7,"column":14,"nodeType":"876","messageId":"877","endLine":7,"endColumn":18},{"ruleId":"874","severity":1,"message":"976","line":4,"column":8,"nodeType":"876","messageId":"877","endLine":4,"endColumn":9},{"ruleId":"874","severity":1,"message":"915","line":6,"column":10,"nodeType":"876","messageId":"877","endLine":6,"endColumn":19},{"ruleId":"874","severity":1,"message":"916","line":2,"column":10,"nodeType":"876","messageId":"877","endLine":2,"endColumn":20},{"ruleId":"874","severity":1,"message":"941","line":4,"column":5,"nodeType":"876","messageId":"877","endLine":4,"endColumn":9},{"ruleId":"874","severity":1,"message":"1007","line":5,"column":5,"nodeType":"876","messageId":"877","endLine":5,"endColumn":12},{"ruleId":"874","severity":1,"message":"918","line":6,"column":5,"nodeType":"876","messageId":"877","endLine":6,"endColumn":11},{"ruleId":"874","severity":1,"message":"1008","line":7,"column":5,"nodeType":"876","messageId":"877","endLine":7,"endColumn":10},{"ruleId":"874","severity":1,"message":"906","line":15,"column":10,"nodeType":"876","messageId":"877","endLine":15,"endColumn":14},{"ruleId":"874","severity":1,"message":"946","line":15,"column":20,"nodeType":"876","messageId":"877","endLine":15,"endColumn":24},{"ruleId":"874","severity":1,"message":"984","line":16,"column":8,"nodeType":"876","messageId":"877","endLine":16,"endColumn":21},{"ruleId":"895","severity":1,"message":"1034","line":86,"column":32,"nodeType":"897","messageId":"898","endLine":86,"endColumn":34},{"ruleId":"930","severity":1,"message":"1182","line":104,"column":8,"nodeType":"932","endLine":104,"endColumn":10,"suggestions":"1183"},{"ruleId":"1063","severity":1,"message":"1064","line":114,"column":39,"nodeType":"1065","messageId":"1066","endLine":114,"endColumn":41},{"ruleId":"895","severity":1,"message":"896","line":124,"column":39,"nodeType":"897","messageId":"898","endLine":124,"endColumn":41},{"ruleId":"930","severity":1,"message":"1184","line":152,"column":8,"nodeType":"932","endLine":152,"endColumn":20,"suggestions":"1185"},{"ruleId":"1019","severity":1,"message":"1186","line":202,"column":21,"nodeType":"958","endLine":207,"endColumn":22},{"ruleId":"874","severity":1,"message":"1180","line":6,"column":5,"nodeType":"876","messageId":"877","endLine":6,"endColumn":10},{"ruleId":"895","severity":1,"message":"1034","line":18,"column":16,"nodeType":"897","messageId":"898","endLine":18,"endColumn":18},{"ruleId":"895","severity":1,"message":"1034","line":61,"column":16,"nodeType":"897","messageId":"898","endLine":61,"endColumn":18},{"ruleId":"895","severity":1,"message":"1034","line":95,"column":16,"nodeType":"897","messageId":"898","endLine":95,"endColumn":18},"no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar","'FetchEszVet' is defined but never used.","'pX' is defined but never used.","'SubMenu' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'biggieSave' is assigned a value but never used.","'gender' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'lastConnectionTime' is assigned a value but never used.","'weightUnits' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["1187","1188"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'petId' is assigned a value but never used.","'pas' is assigned a value but never used.","'temp15' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'temporaryStorage' is defined but never used.","'mTop' is defined but never used.","'SelectionBox' is defined but never used.","'Option' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'selectDeviceName' is assigned a value but never used.","'isClicleStudy' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Spin' is defined but never used.","'BackTop' is defined but never used.","'createFromIconfontCN' is defined but never used.","'SyncOutlined' is defined but never used.","'devicesTitleHeight' is defined but never used.","'blueSearch' is defined but never used.","'MinClose' is defined but never used.","'MouseDiv' is defined but never used.","'back_white' is defined but never used.","'back_hui' is defined but never used.","'MyModal' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["1189"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["1190"],"no-native-reassign",["1191"],"no-negated-in-lhs",["1192"],"'useState' is defined but never used.","'Menu' is defined but never used.","'PageHeader' is defined but never used.","'PropTypes' is defined but never used.","'message' is defined but never used.","'LoadingOutlined' is defined but never used.","'MTop' is defined but never used.","'Header' is assigned a value but never used.",["1191"],["1192"],"React Hook useEffect has missing dependencies: 'hardwareList' and 'selectHardwareInfo'. Either include them or remove the dependency array.",["1193"],"'Carousel' is defined but never used.","'PlusOutlined' is defined but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["1194"],"'Image' is defined but never used.","'Space' is defined but never used.","'Card' is defined but never used.","'Charlie' is defined but never used.","'px' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["1195"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["1196"],"'PressButton_Pro' is defined but never used.","'_' is defined but never used.","'Content' is assigned a value but never used.","'mellaConnectStatus' is assigned a value but never used.","'setSaveNum' is assigned a value but never used.","'useRef' is defined but never used.","'Layout' is defined but never used.","'moment' is defined but never used.","'Radio' is defined but never used.","'electronStore' is defined but never used.","'storage' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareInfo'. Either include it or remove the dependency array.",["1197"],"React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["1198"],"React Hook useEffect has missing dependencies: '_getExam' and 'petList'. Either include them or remove the dependency array. You can also do a functional update 'setPetList(p => ...)' if you only need 'petList' in the 'setPetList' call.",["1199"],"'Progress' is defined but never used.","'Tag' is defined but never used.","'mellaMeasurePart' is assigned a value but never used.","'memo' is assigned a value but never used.","'hisHe' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["1200"],"React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["1201"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["1202"],"'addQRCode' is defined but never used.","'fetchRequest2' is defined but never used.","'Popover' is defined but never used.","'Modal' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'Button1' is defined but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","'bluData' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'resize' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["1203"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1204"],"'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1205"],"'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","Expected '===' and instead saw '=='.","Unnecessary escape character: \\..",["1206","1207"],["1208","1209"],["1210","1211"],["1212","1213"],["1214","1215"],["1216","1217"],["1218","1219"],["1220","1221"],["1222","1223"],["1224","1225"],["1226","1227"],["1228","1229"],["1230","1231"],["1232","1233"],"no-dupe-keys","Duplicate key 'align'.","ObjectExpression",["1234","1235"],["1236","1237"],["1238","1239"],["1240","1241"],"React Hook useEffect has a missing dependency: 'mellaMeasureNum'. Either include it or remove the dependency array.",["1242"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["1243"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["1244"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.","'patientId' is assigned a value but never used.","'age' is assigned a value but never used.","'disabled' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["1245"],"'history' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'Draggable' is defined but never used.","'url' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'Component' is defined but never used.","React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1246"],"'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'mac' is assigned a value but never used.","'hardwareVersion' is assigned a value but never used.","'softwareVersion' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["1247"],"React Hook useEffect has a missing dependency: 'setBiggieConnectStatusFun'. Either include it or remove the dependency array. If 'setBiggieConnectStatusFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1248"],"'Select' is defined but never used.","'MaxMin' is defined but never used.","'gender' is defined but never used.","'stopBubble' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.",["1249"],["1250"],"'redjinggao' is defined but never used.","'rulerConnectStatus' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'selectPetDetail' is assigned a value but never used.","'setSelectPetDetail' is assigned a value but never used.","'onClickModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["1251"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1252"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["1253"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["1254"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1255"],"React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["1256"],"'Upload' is defined but never used.","'UserOutlined' is defined but never used.","'petUrl' is assigned a value but never used.","'country' is assigned a value but never used.","'infoData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'storage.userId'. Either include them or remove the dependency array.",["1257"],"'mar' is assigned a value but never used.","'fetchRequest' is defined but never used.","'fetchRequest1' is defined but never used.","'isCode' is assigned a value but never used.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","'Switch' is defined but never used.","'Slider' is defined but never used.","'parent' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Praviders' is defined but never used.","'chooseNum' is assigned a value but never used.","'dui' is defined but never used.","'bounds' is assigned a value but never used.","'lastOrganization' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'Form' is defined but never used.","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'_resend' is assigned a value but never used.","'assignOwnerName' is assigned a value but never used.","'token' is assigned a value but never used.","'header' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["1258"],"React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["1259"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"messageId":"1260","fix":"1261","desc":"1262"},{"messageId":"1263","fix":"1264","desc":"1265"},{"desc":"1266","fix":"1267"},{"desc":"1268","fix":"1269"},"no-global-assign","no-unsafe-negation",{"desc":"1270","fix":"1271"},{"desc":"1272","fix":"1273"},{"desc":"1274","fix":"1275"},{"desc":"1276","fix":"1277"},{"desc":"1278","fix":"1279"},{"desc":"1280","fix":"1281"},{"desc":"1282","fix":"1283"},{"desc":"1284","fix":"1285"},{"desc":"1286","fix":"1287"},{"desc":"1288","fix":"1289"},{"desc":"1290","fix":"1291"},{"desc":"1292","fix":"1293"},{"desc":"1292","fix":"1294"},{"messageId":"1260","fix":"1295","desc":"1262"},{"messageId":"1263","fix":"1296","desc":"1265"},{"messageId":"1260","fix":"1297","desc":"1262"},{"messageId":"1263","fix":"1298","desc":"1265"},{"messageId":"1260","fix":"1299","desc":"1262"},{"messageId":"1263","fix":"1300","desc":"1265"},{"messageId":"1260","fix":"1301","desc":"1262"},{"messageId":"1263","fix":"1302","desc":"1265"},{"messageId":"1260","fix":"1303","desc":"1262"},{"messageId":"1263","fix":"1304","desc":"1265"},{"messageId":"1260","fix":"1305","desc":"1262"},{"messageId":"1263","fix":"1306","desc":"1265"},{"messageId":"1260","fix":"1307","desc":"1262"},{"messageId":"1263","fix":"1308","desc":"1265"},{"messageId":"1260","fix":"1309","desc":"1262"},{"messageId":"1263","fix":"1310","desc":"1265"},{"messageId":"1260","fix":"1311","desc":"1262"},{"messageId":"1263","fix":"1312","desc":"1265"},{"messageId":"1260","fix":"1313","desc":"1262"},{"messageId":"1263","fix":"1314","desc":"1265"},{"messageId":"1260","fix":"1315","desc":"1262"},{"messageId":"1263","fix":"1316","desc":"1265"},{"messageId":"1260","fix":"1317","desc":"1262"},{"messageId":"1263","fix":"1318","desc":"1265"},{"messageId":"1260","fix":"1319","desc":"1262"},{"messageId":"1263","fix":"1320","desc":"1265"},{"messageId":"1260","fix":"1321","desc":"1262"},{"messageId":"1263","fix":"1322","desc":"1265"},{"messageId":"1260","fix":"1323","desc":"1262"},{"messageId":"1263","fix":"1324","desc":"1265"},{"messageId":"1260","fix":"1325","desc":"1262"},{"messageId":"1263","fix":"1326","desc":"1265"},{"messageId":"1260","fix":"1327","desc":"1262"},{"messageId":"1263","fix":"1328","desc":"1265"},{"messageId":"1260","fix":"1329","desc":"1262"},{"messageId":"1263","fix":"1330","desc":"1265"},{"desc":"1331","fix":"1332"},{"desc":"1333","fix":"1334"},{"desc":"1335","fix":"1336"},{"desc":"1337","fix":"1338"},{"desc":"1339","fix":"1340"},{"desc":"1341","fix":"1342"},{"desc":"1343","fix":"1344"},{"desc":"1284","fix":"1345"},{"desc":"1288","fix":"1346"},{"desc":"1347","fix":"1348"},{"desc":"1349","fix":"1350"},{"desc":"1351","fix":"1352"},{"desc":"1353","fix":"1354"},{"desc":"1355","fix":"1356"},{"desc":"1357","fix":"1358"},{"desc":"1359","fix":"1360"},{"desc":"1361","fix":"1362"},{"desc":"1363","fix":"1364"},"removeEscape",{"range":"1365","text":"1366"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1367","text":"1368"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1369","text":"1370"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1371","text":"1372"},"Update the dependencies array to be: [hardwareList, selectHardwareInfo, selectHardwareType]",{"range":"1373","text":"1374"},"Add dependencies array: [callBack, timers]",{"range":"1375","text":"1376"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"1377","text":"1378"},"Update the dependencies array to be: [mellaConnectStatus, value]",{"range":"1379","text":"1380"},"Update the dependencies array to be: [selectHardwareType, hardwareList, hardwareInfo]",{"range":"1381","text":"1382"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1383","text":"1384"},"Update the dependencies array to be: [_getExam, petList]",{"range":"1385","text":"1386"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1387","text":"1388"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1389","text":"1390"},"Update the dependencies array to be: [storage.userId]",{"range":"1391","text":"1392"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1393","text":"1394"},"Update the dependencies array to be: []",{"range":"1395","text":"1396"},{"range":"1397","text":"1396"},{"range":"1398","text":"1366"},{"range":"1399","text":"1368"},{"range":"1400","text":"1366"},{"range":"1401","text":"1368"},{"range":"1402","text":"1366"},{"range":"1403","text":"1368"},{"range":"1404","text":"1366"},{"range":"1405","text":"1368"},{"range":"1406","text":"1366"},{"range":"1407","text":"1368"},{"range":"1408","text":"1366"},{"range":"1409","text":"1368"},{"range":"1410","text":"1366"},{"range":"1411","text":"1368"},{"range":"1412","text":"1366"},{"range":"1413","text":"1368"},{"range":"1414","text":"1366"},{"range":"1415","text":"1368"},{"range":"1416","text":"1366"},{"range":"1417","text":"1368"},{"range":"1418","text":"1366"},{"range":"1419","text":"1368"},{"range":"1420","text":"1366"},{"range":"1421","text":"1368"},{"range":"1422","text":"1366"},{"range":"1423","text":"1368"},{"range":"1424","text":"1366"},{"range":"1425","text":"1368"},{"range":"1426","text":"1366"},{"range":"1427","text":"1368"},{"range":"1428","text":"1366"},{"range":"1429","text":"1368"},{"range":"1430","text":"1366"},{"range":"1431","text":"1368"},{"range":"1432","text":"1366"},{"range":"1433","text":"1368"},"Update the dependencies array to be: [mellaMeasureNum]",{"range":"1434","text":"1435"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"1436","text":"1437"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"1438","text":"1439"},"Update the dependencies array to be: [_getExam]",{"range":"1440","text":"1441"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"1442","text":"1443"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"1444","text":"1445"},"Update the dependencies array to be: [petDetailInfo, setBiggieConnectStatusFun]",{"range":"1446","text":"1447"},{"range":"1448","text":"1388"},{"range":"1449","text":"1392"},"Update the dependencies array to be: [finishScan, inputIndex, newData]",{"range":"1450","text":"1451"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1452","text":"1453"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1454","text":"1455"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"1456","text":"1457"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"1458","text":"1459"},"Update the dependencies array to be: [hardwareList]",{"range":"1460","text":"1461"},"Update the dependencies array to be: [form, storage.userId]",{"range":"1462","text":"1463"},"Update the dependencies array to be: [listDate]",{"range":"1464","text":"1465"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1466","text":"1467"},[75098,75099],"",[75098,75098],"\\",[2680,2682],"[setReceiveBroadcastHardwareInfoFun]",[3991,4021],"[devicesList, receiveBroadcastHardwareInfo]",[7225,7245],"[hardwareList, selectHardwareInfo, selectHardwareType]",[2257,2257],", [callBack, timers]",[8222,8229],"[callBack, prediction, timeNum, value]",[8851,8871],"[mellaConnectStatus, value]",[1961,1996],"[selectHardwareType, hardwareList, hardwareInfo]",[2356,2371],"[callBack, carouselIndex]",[1467,1469],"[_getExam, petList]",[9098,9110],"[getPetTemperatureData, petMessage]",[9258,9267],"[getPetTemperatureData, reRender, saveNum]",[9455,9457],"[storage.userId]",[42748,42750],"[_noUSB, _send, blueSearch]",[43084,43110],"[]",[4003,4029],[21714,21715],[21714,21714],[21915,21916],[21915,21915],[22689,22690],[22689,22689],[22890,22891],[22890,22890],[23661,23662],[23661,23661],[23862,23863],[23862,23862],[25284,25285],[25284,25284],[25485,25486],[25485,25485],[26219,26220],[26219,26219],[26420,26421],[26420,26420],[27213,27214],[27213,27213],[27414,27415],[27414,27414],[28020,28021],[28020,28020],[28126,28127],[28126,28126],[43475,43476],[43475,43475],[43676,43677],[43676,43676],[44206,44207],[44206,44206],[44407,44408],[44407,44407],[49972,49974],"[mellaMeasureNum]",[51215,51232],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[51903,51923],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[5413,5415],"[_getExam]",[4562,4579],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[7310,7326],"[hardwareReduce, weight]",[7514,7529],"[petDetailInfo, setBiggieConnectStatusFun]",[13097,13109],[13297,13299],[7329,7341],"[finishScan, inputIndex, newData]",[7792,7811],"[inputIndex, rulerConfirmCount]",[8670,8677],"[petId, petLengthDataConvert, petMessage]",[9292,9330],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[9754,9765],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[3213,3215],"[hardwareList]",[2619,2621],"[form, storage.userId]",[3386,3388],"[listDate]",[5141,5153],"[letterListCopy, phoneListCopy, searchText]"]