[{"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signIn\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx":"2","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"3","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\AddDevice.jsx":"4","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.jsx":"5","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"6","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\VetSpire.js":"7","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx":"8","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx":"9","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\index.js":"10","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js":"11","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\advancedSettings\\index.jsx":"12","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addDevice\\index.jsx":"13","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx":"14","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"15","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"16","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js":"17","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\App.js":"18","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js":"19","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\doctorAddPet\\index.jsx":"20","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx":"21","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\pet.js":"22","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js":"23","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js":"24","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx":"25","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\UnassignModal\\UnassignModal.jsx":"26","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx":"27","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js":"28","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\unassigned\\index.jsx":"29","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx":"30","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js":"31","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\user.js":"32","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx":"33","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\Biggie.jsx":"34","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"35","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\home\\index.jsx":"36","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\connectWorkplace\\index.jsx":"37","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\hardWareTypeUI.jsx":"38","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js":"39","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js":"40","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\swabPetEar\\index.jsx":"41","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\editParent\\index.jsx":"42","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js":"43","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js":"44","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\EzyVet.js":"45","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\experimental\\index.jsx":"46","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx":"47","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\help\\index.jsx":"48","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js":"49","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\mellarecord.js":"50","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\config\\config.js":"51","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx":"52","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\PetsUI.jsx":"53","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\petAndParents\\index.jsx":"54","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\px.jsx":"55","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\enrolledPlan\\index.jsx":"56","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js":"57","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\timer\\index.jsx":"58","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx":"59","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\pet.js":"60","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\components\\linkEquipment\\index.jsx":"61","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\settings\\index.jsx":"62","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\current.js":"63","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\index.js":"64","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js":"65","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\workplace.js":"66","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js":"67","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\organization.js":"68","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\user.js":"69","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"70","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\linkEquipment\\index.jsx":"71","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardAndPetsUI.jsx":"72","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\commonFun.js":"73","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\user.js":"74","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\index.jsx":"75","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx":"76","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx":"77","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx":"78","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js":"79","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\index.jsx":"80","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js":"81","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetModal\\index.jsx":"82","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js":"83","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardListModal.jsx":"84","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\vetSpire.js":"85","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\VetSpire.js":"86","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrganization\\index.jsx":"87","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js":"88","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\petall.js":"89","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\api.js":"90","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrg\\index.jsx":"91","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx":"92","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\ezyvetApi.js":"93","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\team\\index.jsx":"94","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signUpVerifyEmail\\index.jsx":"95","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\index.js":"96","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx":"97","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx":"98","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\joinOrganizationByOption\\index.jsx":"99","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx":"100","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\userfeedback.js":"101","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx":"102","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\index.js":"103","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx":"104","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\index.js":"105","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx":"106","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\editPetInfo\\index.jsx":"107","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanCodeLogin\\index.jsx":"108"},{"size":18148,"mtime":1661509757437,"results":"109","hashOfConfig":"110"},{"size":15395,"mtime":1661509757340,"results":"111","hashOfConfig":"110"},{"size":51847,"mtime":1662620636568,"results":"112","hashOfConfig":"110"},{"size":11526,"mtime":1661913557011,"results":"113","hashOfConfig":"110"},{"size":6919,"mtime":1661509757429,"results":"114","hashOfConfig":"110"},{"size":11186,"mtime":1662348058987,"results":"115","hashOfConfig":"110"},{"size":664,"mtime":1661509757283,"results":"116","hashOfConfig":"110"},{"size":8711,"mtime":1661509757311,"results":"117","hashOfConfig":"110"},{"size":3836,"mtime":1661509757322,"results":"118","hashOfConfig":"110"},{"size":349,"mtime":1661943267097,"results":"119","hashOfConfig":"110"},{"size":577,"mtime":1657680900931,"results":"120","hashOfConfig":"110"},{"size":13516,"mtime":1661941929746,"results":"121","hashOfConfig":"110"},{"size":13514,"mtime":1661509757333,"results":"122","hashOfConfig":"110"},{"size":8628,"mtime":1660703894009,"results":"123","hashOfConfig":"110"},{"size":846,"mtime":1655168677772,"results":"124","hashOfConfig":"110"},{"size":12501,"mtime":1662632942284,"results":"125","hashOfConfig":"110"},{"size":4641,"mtime":1656498255379,"results":"126","hashOfConfig":"110"},{"size":3706,"mtime":1661943474634,"results":"127","hashOfConfig":"110"},{"size":74,"mtime":1662373312543,"results":"128","hashOfConfig":"110"},{"size":29637,"mtime":1661509757364,"results":"129","hashOfConfig":"110"},{"size":2500,"mtime":1661509757469,"results":"130","hashOfConfig":"110"},{"size":3757,"mtime":1662357327062,"results":"131","hashOfConfig":"110"},{"size":249,"mtime":1655467295885,"results":"132","hashOfConfig":"110"},{"size":697,"mtime":1655467295909,"results":"133","hashOfConfig":"110"},{"size":5626,"mtime":1662631196513,"results":"134","hashOfConfig":"110"},{"size":31725,"mtime":1661509757309,"results":"135","hashOfConfig":"110"},{"size":3569,"mtime":1660200016614,"results":"136","hashOfConfig":"110"},{"size":1451,"mtime":1655168677805,"results":"137","hashOfConfig":"110"},{"size":35789,"mtime":1661509757459,"results":"138","hashOfConfig":"110"},{"size":9228,"mtime":1662631488080,"results":"139","hashOfConfig":"110"},{"size":88,"mtime":1657709847680,"results":"140","hashOfConfig":"110"},{"size":2855,"mtime":1662620045686,"results":"141","hashOfConfig":"110"},{"size":10678,"mtime":1662100192866,"results":"142","hashOfConfig":"110"},{"size":3907,"mtime":1662111155827,"results":"143","hashOfConfig":"110"},{"size":6751,"mtime":1662629707140,"results":"144","hashOfConfig":"110"},{"size":3942,"mtime":1661941929749,"results":"145","hashOfConfig":"110"},{"size":6565,"mtime":1661509757361,"results":"146","hashOfConfig":"110"},{"size":5448,"mtime":1662347472561,"results":"147","hashOfConfig":"110"},{"size":1041,"mtime":1655168677775,"results":"148","hashOfConfig":"110"},{"size":224,"mtime":1655467295875,"results":"149","hashOfConfig":"110"},{"size":2695,"mtime":1658483746593,"results":"150","hashOfConfig":"110"},{"size":9948,"mtime":1662628349640,"results":"151","hashOfConfig":"110"},{"size":343,"mtime":1655168677793,"results":"152","hashOfConfig":"110"},{"size":17788,"mtime":1659945946500,"results":"153","hashOfConfig":"110"},{"size":664,"mtime":1661509757282,"results":"154","hashOfConfig":"110"},{"size":2508,"mtime":1658483803920,"results":"155","hashOfConfig":"110"},{"size":1365,"mtime":1655880805276,"results":"156","hashOfConfig":"110"},{"size":9521,"mtime":1661509757378,"results":"157","hashOfConfig":"110"},{"size":91,"mtime":1655467295880,"results":"158","hashOfConfig":"110"},{"size":951,"mtime":1661849271242,"results":"159","hashOfConfig":"110"},{"size":651,"mtime":1662626973175,"results":"160","hashOfConfig":"110"},{"size":1390,"mtime":1662107565694,"results":"161","hashOfConfig":"110"},{"size":14247,"mtime":1662606012930,"results":"162","hashOfConfig":"110"},{"size":9678,"mtime":1662629106501,"results":"163","hashOfConfig":"110"},{"size":3056,"mtime":1661509757473,"results":"164","hashOfConfig":"110"},{"size":8498,"mtime":1662112526381,"results":"165","hashOfConfig":"110"},{"size":2103,"mtime":1656498255375,"results":"166","hashOfConfig":"110"},{"size":1201,"mtime":1658485132416,"results":"167","hashOfConfig":"110"},{"size":1573,"mtime":1661509757427,"results":"168","hashOfConfig":"110"},{"size":574,"mtime":1661509757286,"results":"169","hashOfConfig":"110"},{"size":4215,"mtime":1662026321474,"results":"170","hashOfConfig":"110"},{"size":19732,"mtime":1661509757433,"results":"171","hashOfConfig":"110"},{"size":1150,"mtime":1655427981745,"results":"172","hashOfConfig":"110"},{"size":89,"mtime":1661509757280,"results":"173","hashOfConfig":"110"},{"size":532,"mtime":1655467295881,"results":"174","hashOfConfig":"110"},{"size":899,"mtime":1661509757306,"results":"175","hashOfConfig":"110"},{"size":1275,"mtime":1655168677817,"results":"176","hashOfConfig":"110"},{"size":1077,"mtime":1661509757299,"results":"177","hashOfConfig":"110"},{"size":574,"mtime":1661509757287,"results":"178","hashOfConfig":"110"},{"size":17158,"mtime":1661509757425,"results":"179","hashOfConfig":"110"},{"size":1722,"mtime":1662111938187,"results":"180","hashOfConfig":"110"},{"size":3165,"mtime":1662343099968,"results":"181","hashOfConfig":"110"},{"size":4618,"mtime":1662343061423,"results":"182","hashOfConfig":"110"},{"size":1323,"mtime":1661509757292,"results":"183","hashOfConfig":"110"},{"size":40805,"mtime":1662348681506,"results":"184","hashOfConfig":"110"},{"size":12702,"mtime":1661509757337,"results":"185","hashOfConfig":"110"},{"size":2811,"mtime":1659944507368,"results":"186","hashOfConfig":"110"},{"size":1410,"mtime":1655168677807,"results":"187","hashOfConfig":"110"},{"size":4449,"mtime":1655168677816,"results":"188","hashOfConfig":"110"},{"size":1438,"mtime":1661928703627,"results":"189","hashOfConfig":"110"},{"size":3044,"mtime":1655168677819,"results":"190","hashOfConfig":"110"},{"size":7942,"mtime":1662001546798,"results":"191","hashOfConfig":"110"},{"size":89,"mtime":1655467295873,"results":"192","hashOfConfig":"110"},{"size":8354,"mtime":1661509757395,"results":"193","hashOfConfig":"110"},{"size":611,"mtime":1661509757305,"results":"194","hashOfConfig":"110"},{"size":944,"mtime":1661509757290,"results":"195","hashOfConfig":"110"},{"size":15670,"mtime":1661509757409,"results":"196","hashOfConfig":"110"},{"size":465,"mtime":1657709941429,"results":"197","hashOfConfig":"110"},{"size":842,"mtime":1662627139597,"results":"198","hashOfConfig":"110"},{"size":2206,"mtime":1661509757278,"results":"199","hashOfConfig":"110"},{"size":16072,"mtime":1661509757405,"results":"200","hashOfConfig":"110"},{"size":2338,"mtime":1662111740792,"results":"201","hashOfConfig":"110"},{"size":2242,"mtime":1661509757279,"results":"202","hashOfConfig":"110"},{"size":10243,"mtime":1661509757448,"results":"203","hashOfConfig":"110"},{"size":4485,"mtime":1661509757441,"results":"204","hashOfConfig":"110"},{"size":267,"mtime":1661849271240,"results":"205","hashOfConfig":"110"},{"size":59015,"mtime":1662356162939,"results":"206","hashOfConfig":"110"},{"size":9262,"mtime":1662110396773,"results":"207","hashOfConfig":"110"},{"size":17567,"mtime":1662113861027,"results":"208","hashOfConfig":"110"},{"size":17744,"mtime":1662633032873,"results":"209","hashOfConfig":"110"},{"size":583,"mtime":1661509757304,"results":"210","hashOfConfig":"110"},{"size":2312,"mtime":1661509757457,"results":"211","hashOfConfig":"110"},{"size":431,"mtime":1655168677773,"results":"212","hashOfConfig":"110"},{"size":3371,"mtime":1655168677813,"results":"213","hashOfConfig":"110"},{"size":76,"mtime":1661509757291,"results":"214","hashOfConfig":"110"},{"size":5765,"mtime":1661509757472,"results":"215","hashOfConfig":"110"},{"size":33650,"mtime":1662628611220,"results":"216","hashOfConfig":"110"},{"size":5219,"mtime":1661509757421,"results":"217","hashOfConfig":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fb2hrx",{"filePath":"220","messages":"221","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"223"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"229"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"241"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"257"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"264","messages":"265","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"229"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"276"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"286","messages":"287","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"292"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"296"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"283"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"313","messages":"314","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"315","messages":"316","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"241"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"321"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"331"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"283"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"232"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"344"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"321"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"232"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"253"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"360","messages":"361","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"362","messages":"363","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"364","messages":"365","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"366","usedDeprecatedRules":"321"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"371","messages":"372","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"375"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"381","messages":"382","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"375"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"241"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"403","usedDeprecatedRules":"321"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"406","messages":"407","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"321"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"304"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"249"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"421"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"375"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"429","usedDeprecatedRules":"331"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"304"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"441","messages":"442","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"443","usedDeprecatedRules":"249"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"389"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"452","messages":"453","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"241"},{"filePath":"454","messages":"455","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"456","usedDeprecatedRules":"304"},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"461","messages":"462","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"465","messages":"466","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"321"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"232"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"249"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"478","messages":"479","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"249"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"321"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"488","messages":"489","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signIn\\index.jsx",["492","493","494","495","496","497"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx",["498","499","500","501","502","503","504","505"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Select,\r\n  message\r\n} from 'antd'\r\n\r\nimport parent from '../../assets/img/parent.png'\r\nimport selectphoto from '../../assets/images/sel.png'\r\nimport close from '../../assets/img/close.png'\r\nimport dui from '../../assets/images/dui.png'\r\n\r\nimport Heart from '../../utils/heard/Heard'\r\nimport { mTop, px } from '../../utils/px';\r\nimport MyModal from '../../utils/myModal/MyModal'\r\nimport Avatar from '../../components/avatar/Avatar'\r\nimport moment from 'moment'\r\nimport './index.less';\r\nimport { listDoctorsByAdmin } from '../../api/mellaserver/organization'\r\nimport { admin_users } from '../../api/mellaserver/new'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class Veterinarians extends Component {\r\n\r\n  state = {\r\n    parentList: [],\r\n    petList: [],\r\n    loading: false,\r\n    parentSearchArr: [],\r\n    petSearchArr: [],\r\n    searchText: '',\r\n    clickVet: false,\r\n    userList: [],\r\n    clickUserItem: {},\r\n    isAdmin: false,\r\n    imageId: null,\r\n    imgUrl: '',\r\n    doctorArr: [],\r\n    dockerSearchArr: []\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    this._getExam()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true,\r\n      spin: false\r\n    })\r\n    let params = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    listDoctorsByAdmin(storage.lastOrganization, params)\r\n      .then(res => {\r\n        console.log('人员列表', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true && res.code === 20000) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              name: `${lastName} ${firstName}`,\r\n              userId,\r\n              email,\r\n              birthday,\r\n              isLimit,\r\n              isDeleted,\r\n              phone,\r\n              url,\r\n              firstName, lastName, roleId\r\n            }\r\n            data.push(json)\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            doctorArr: data,\r\n            // parentList: data //这里只是测试，后期删除\r\n\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  list = () => {\r\n    let { doctorArr, dockerSearchArr, searchText } = this.state\r\n    let data = searchText.length > 0 ? dockerSearchArr : doctorArr\r\n\r\n\r\n\r\n\r\n    let options = data.map((item, index) => {\r\n      let { url, firstName, lastName } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n      if (!url) {\r\n        images = `url(${parent})`\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20), float: `${index % 2 === 0 ? 'left' : 'right'}` }}\r\n          onClick={() => {\r\n            console.log(item);\r\n            let { name, email, phone, roleId } = item\r\n            let isAdmin = roleId === '3' ? true : false\r\n\r\n            this.setState({\r\n              clickVet: true,\r\n              clickUserItem: item,\r\n              name,\r\n              email,\r\n              phone,\r\n              isAdmin,\r\n              imgUrl: ''\r\n            })\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div\r\n              className='img'\r\n              style={{\r\n                width: px(50),\r\n                height: px(50),\r\n                marginRight: px(20),\r\n                borderRadius: px(60),\r\n                backgroundImage: images,\r\n              }}>\r\n\r\n              <div\r\n                className=\"green\"\r\n                style={{\r\n                  width: px(8),\r\n                  height: px(8),\r\n                  borderRadius: px(8),\r\n                  backgroundColor: '#7ED266',\r\n                  right: px(-5),\r\n                  top: px(-3)\r\n\r\n                }}\r\n\r\n              />\r\n\r\n            </div>\r\n\r\n            <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    let liStyle = { backgroundColor: '#fff', }\r\n    if (this.state.petList.length > 16) {\r\n      liStyle = { height: px(750), overflowY: 'auto', }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='petList'>\r\n        <ul style={liStyle}>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  inputChange = (text) => {\r\n    let search = text.target.value\r\n    this.setState({\r\n      searchText: search\r\n    })\r\n\r\n    let { doctorArr } = this.state\r\n\r\n    let keyWord = search\r\n\r\n    let parentSearchData = []\r\n\r\n    for (let i = 0; i < doctorArr.length; i++) {\r\n      let { email, phone, name, } = doctorArr[i]\r\n      email = email ? email.toLowerCase() : ''\r\n      phone = phone ? phone.toLowerCase() : ''\r\n      name = name ? name.toLowerCase() : ''\r\n      let keyLower = keyWord.toLowerCase()\r\n      if (`${email}`.indexOf(keyLower) !== -1 || `${phone}`.indexOf(keyLower) !== -1 || `${name}`.indexOf(keyLower) !== -1) {\r\n        parentSearchData.push(doctorArr[i])\r\n      }\r\n    }\r\n\r\n\r\n    this.setState({\r\n\r\n      dockerSearchArr: parentSearchData\r\n    })\r\n\r\n\r\n  }\r\n  _petSpecies = () => {\r\n\r\n\r\n    let { clickUserItem, isAdmin } = this.state\r\n    let { url } = clickUserItem\r\n    this.avatar = url ? url : selectphoto\r\n    return (\r\n      <div className=\"petSpecies\">\r\n\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" style={{ height: px(100) }} />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n              getAllInfo={(val) => {\r\n                console.log('图片信息', val);\r\n                this.setState({\r\n                  imgUrl: val.url\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Set Role:</p>\r\n\r\n            <div className=\"ones\" style={{ marginTop: px(8) }}>\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>User</p>\r\n              </div> */}\r\n              <div className=\"one\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isAdmin: !this.state.isAdmin\r\n                  })\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"chect\"\r\n                  style={{ width: px(18), height: px(18), marginRight: px(15) }}\r\n\r\n                >\r\n                  {isAdmin && <img src={dui} alt=\"\" />}\r\n\r\n                </div>\r\n                <p>Admin</p>\r\n              </div>\r\n\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>Owner</p>\r\n              </div> */}\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  _petName = () => {\r\n    let { name, email } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\" style={{ marginTop: px(60) }}>\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50), }}>\r\n            <p>Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  name: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _phone = () => {\r\n    let { areas, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Areas of Expertise</p>\r\n            <input\r\n              type=\"text\"\r\n              value={areas}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  areas: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  changeUserInfo = () => {\r\n    let { name, email, phone, clickUserItem, imageId, isAdmin, petList, imgUrl } = this.state\r\n    let { userId } = clickUserItem\r\n    let roleId = isAdmin ? '3' : '2'\r\n    let params = {\r\n      firstName: '',\r\n      lastName: name,\r\n      email,\r\n      phone,\r\n\r\n      roleId\r\n    }\r\n    if (imageId) {\r\n      params.imageId = imageId\r\n    }\r\n    message.destroy()\r\n    this.setState({\r\n      clickVet: false,\r\n      loading: true\r\n    })\r\n    console.log('入参', params);\r\n    admin_users(userId, params)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.flag && res.code === 20000) {\r\n          for (let i = 0; i < petList.length; i++) {\r\n            const element = petList[i];\r\n            if (clickUserItem.userId === element.userId) {\r\n              element.name = name\r\n              element.email = email\r\n              element.phone = phone\r\n              if (imageId) {\r\n                element.url = imgUrl\r\n              }\r\n\r\n              break\r\n            }\r\n\r\n          }\r\n          this.setState({\r\n            loading: false,\r\n            petList\r\n          })\r\n          message.success('User information changed successfully')\r\n        } else {\r\n          this.setState({\r\n            loading: false\r\n          })\r\n          message.error('User information change failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        message.error('User information change failed')\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let bodyHeight = '92%'\r\n    try {\r\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\r\n    } catch (error) {\r\n\r\n    }\r\n    return (\r\n      <div id=\"veterinarians\">\r\n        <div className=\"heard\">\r\n          <Heart />\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\r\n          <div className=\"title\">\r\n            <h1 style={{ fontSize: px(38) }}>{`Veterinarians`}</h1>\r\n            <div className=\"btn\" style={{ fontSize: px(24), height: px(45) }}>+ New Vet</div>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <div className=\"searchL\">\r\n              <input\r\n                type=\"text\"\r\n                style={{ paddingLeft: px(25), height: px(34) }}\r\n                placeholder=\"&#xe62c; Search \"\r\n                value={this.state.searchText}\r\n                onChange={(text) => {\r\n                  this.inputChange(text)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\r\n              Search\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"lists\">\r\n            {/* <div className=\"listsL\"> */}\r\n            {this.list()}\r\n            {/* </div> */}\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <MyModal visible={this.state.loading} />\r\n\r\n        <MyModal\r\n          visible={this.state.clickVet}\r\n          element={\r\n            <div className='vetInfo'>\r\n\r\n              <div className=\"info\" >\r\n                <div className=\"close\" style={{ height: px(50) }}>\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    src={close} style={{ width: px(20) }} />\r\n                </div>\r\n                {this._petSpecies()}\r\n                {this._petName()}\r\n                {this._phone()}\r\n              </div>\r\n              <div className=\"fotBtn\">\r\n                <div className=\"text\">\r\n                  <a\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    href=\"#\">Delete </a>\r\n                  &nbsp;<p>{` ${this.state.name} from Workplace`}</p>\r\n                </div>\r\n                <div className=\"btn\"\r\n                  style={{ marginTop: px(10) }}\r\n                  onClick={this.changeUserInfo}\r\n\r\n                >Save </div>\r\n\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",["506","507"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\AddDevice.jsx",["534","535"],"import React, { useState, useEffect } from 'react'\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport biggieHome from './../../assets/img/searchType-biggieHome.png'\nimport biggiePro from './../../assets/img/searchType-biggiePro.png'\nimport mellaHome from './../../assets/img/searchType-home.png'\nimport mellaPro from './../../assets/img/searchType-mellaPro.png'\nimport maeBowl from './../../assets/img/searchType-maeBowl.png'\nimport other from './../../assets/img/searchType-other.png'\nimport possum from './../../assets/img/searchType-possum.png'\nimport rfid from './../../assets/img/searchType-rfid.png'\nimport redclose from '../../assets/img/redclose.png'\n\nimport electronStore from '../../utils/electronStore';\nimport { mTop, px, MTop } from '../../utils/px';\n\nimport { connect } from 'react-redux'\nimport { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList } from '../../store/actions';\nimport PropTypes from 'prop-types';\n\nimport './mainbody.less';\n\nlet storage = window.localStorage;\nconst AddDevice = ({ bodyHeight, hardwareReducer, isHaveUsbDevice, receiveBroadcastHardwareInfo, hardwareList, setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }) => {\n  //是否有底座设备\n  const [noUSB, setNoUSB] = useState(false)\n  //设备列表\n  const [devicesList, setDevicesList] = useState([])\n  //选择的设备\n  const [selectDevice, setSelectDevice] = useState(null)\n  //重命名\n  const [reName, setReName] = useState('')\n  //房间号\n  const [examRoom, setExamRoom] = useState('')\n  //已经保存过的设备的macid\n  const [saveDeviceMac, setSaveDeviceMac] = useState([])\n  //顶部文本\n  const [topText, setTopText] = useState(' Pair Device')\n\n\n\n  const addDevice = () => {\n    //从redux拿到列表中的所有硬件设备 hardwareList\n    console.log('hardwareList', hardwareList);\n    //拿到硬件的macid 类型 名称 房间号\n    console.log('selectDevice', selectDevice);\n    let sameFlog = hardwareList.some((item, index) => {\n      return item.type === selectDevice.deviceType\n    })\n    let hardwareArr = [].concat(hardwareList)\n    let { deviceType, macId, name } = selectDevice\n    let newDevice = {\n      name: reName || name,\n      mac: macId,\n      deviceType,\n      examRoom: examRoom || '',\n    }\n    console.log('newDevice', newDevice);\n    if (sameFlog) {\n      //相同就代表有这个硬件类型,可以直接去push\n\n      for (let i = 0; i < hardwareArr.length; i++) {\n        if (hardwareArr[i].type === selectDevice.deviceType) {\n          hardwareArr[i].devices.push(newDevice)\n          break\n        }\n      }\n\n    } else {\n      //没有就要新建一个硬件类型\n      let json = {\n        type: selectDevice.deviceType,\n        devices: [newDevice]\n      }\n      hardwareArr.push(json)\n    }\n    setReName('')\n    setExamRoom('')\n    setHardwareList(hardwareArr)\n\n    return newDevice\n\n\n  }\n\n  const body = () => {\n\n    if (selectDevice) {\n      return <div className=\"addDevice1 flex\">\n        <div className=\"addDeviceTop flex\">\n          <div className=\"title\" style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(20) }}>Would you like to name<br />\n            {`this ${selectDevice.name} device?`}</div>\n\n          <div className=\"title\" style={{ fontSize: px(24), marginBottom: px(40), }}>\n            {`SN: ${selectDevice.macId}`}</div>\n\n\n          <div className=\"input flex\" style={{ marginBottom: px(20), width: px(400) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={reName}\n              onChange={(value) => {\n                setReName(value.target.value)\n\n              }}\n              placeholder={`${selectDevice.name} Device Name`}\n            />\n          </div>\n          <div className=\"input flex\" style={{ marginBottom: px(60), width: px(400) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={examRoom}\n              onChange={(value) => {\n                setExamRoom(value.target.value)\n\n              }}\n              placeholder={`Exam Room Name`}\n            />\n          </div>\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\n            on the Exam Room. Write<br /> the name\n            on the sticker provided so it is easy\n            to select<br /> your device in the future.</div>\n        </div>\n        <div className=\"addDeviceFoot flex\">\n          <div className=\"btn\"\n            onClick={() => {\n              addDevice()\n              setSelectDevice(null)\n              setSelectHardwareType('add')\n\n            }}\n          >\n            <p className='btnText'>Add Another Device</p>\n          </div>\n          <div className=\"btn\"\n            onClick={() => {\n              let newDevice = addDevice()\n              setSelectHardwareType(selectDevice.deviceType)\n\n\n              electronStore.set(`${storage.lastOrganization}-${storage.userId}-${selectDevice.deviceType}-selectDeviceInfo`, newDevice)\n              setSelectDevice(null)\n            }}\n          >\n            <p className='btnText'>Finish</p>\n          </div>\n        </div>\n\n\n      </div>\n    } else {\n      if (noUSB) {\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\n\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\n        </div>\n      } else {\n        if (devicesList.length === 0) {\n          let options = (val) => {\n            let arr = []\n            if (val === 1) {\n              arr = [mellaPro, mellaHome, biggiePro, biggieHome, rfid]\n            } else {\n              arr = [possum, maeBowl, other]\n            }\n            let option = arr.map((item, index) => {\n              let imgWidth = px(80)\n              imgWidth = index === 2 ? px(65) : imgWidth\n              return (<li key={index.toString()} style={{ margin: `${px(20)}px` }}>\n                <div className=\"searchType-item\" key={index} >\n                  <img src={item} alt=\"\" width={imgWidth} />\n                </div>\n              </li>)\n            })\n            return (\n              <ul>\n                {option}\n              </ul>\n            )\n          }\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n\n\n            <div className=\"addDeviceContent\">\n              <div className=\"blueAnimal\" style={{ marginTop: px(50) }}>\n                {/* <img src={blueSearch} alt=\"\" width={px(150)} /> */}\n                <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                  <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\n                </div>\n              </div>\n              <div className=\"openText\" style={{ margin: `${px(15)}px 0` }}>\n                Make sure your bluetooth and wifi is<br /> activated and turn on your device.\n              </div>\n              <div className=\"btn\" style={{ width: px(350), height: px(40) }}>\n                <div className=\"btnText\">\n                  Scan For Devices\n                </div>\n              </div>\n              <div className=\"or\" style={{ marginTop: px(10), marginBottom: px(15) }}>\n                Or\n              </div>\n              <div className=\"select\">\n                Select device type to\n              </div>\n              <div className=\"add\">\n                add manually\n              </div>\n\n              <div className=\"item\">\n                {options(1)}\n                {options(2)}\n              </div>\n            </div>\n\n            {/* <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\n\n                            <p>\n                                {'searching...'}\n                            </p>\n                        </div> */}\n          </div>\n        } else {\n          let options = devicesList.map((item, index) => {\n\n            let flog = saveDeviceMac.some((device, index) => {\n              return device === item.macId\n            })\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\n            return <li\n              className='flex'\n              style={{ marginBottom: px(20) }}\n              key={`${index}`}\n              onClick={() => {\n                if (!flog) {\n                  setSelectDevice(item)\n\n                } else {\n                  message.destroy();\n                  message.error('This device has already been added')\n                }\n\n              }}\n            >\n\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\n\n            </li>\n          })\n          return <div className='deviceList ' >\n            <ul>\n              {options}\n            </ul>\n          </div>\n        }\n      }\n    }\n\n  }\n\n  //初始化\n  useEffect(() => {\n    setNoUSB(false)\n    setDevicesList([])\n    setSelectDevice(null)\n    setReName('')\n    setSaveDeviceMac([])\n    setTopText(' Pair Device')\n    //组件渲染完毕后要先清空广播的硬件信息\n    setReceiveBroadcastHardwareInfoFun({\n      deviceType: '',\n      macId: '',\n      name: ''\n    })\n  }, [])\n  useEffect(() => {\n\n    if (hardwareList.length > 0) {\n      let saveDeviceMac = []\n      for (let i = 0; i < hardwareList.length; i++) {\n        const element = hardwareList[i];\n        for (let j = 0; j < element.devices.length; j++) {\n          const device = element.devices[j];\n          saveDeviceMac.push(device.mac)\n        }\n      }\n      setSaveDeviceMac(saveDeviceMac)\n\n    }\n  }, [hardwareList])\n  useEffect(() => {\n    if (!selectDevice) {\n      setTopText(' Pair Device')\n    } else {\n      setTopText('Device Connected')\n    }\n\n  }, [selectDevice])\n  useEffect(() => {\n    setNoUSB(!isHaveUsbDevice)\n  }, [isHaveUsbDevice])\n  useEffect(() => {\n    let sameFlog = devicesList.some((device, index) => {\n      return device.macId === receiveBroadcastHardwareInfo.macId\n    })\n    if (sameFlog || !receiveBroadcastHardwareInfo.macId) {   //重复直接退出\n      return\n    }\n    console.log('receiveBroadcastHardwareInfo', devicesList, receiveBroadcastHardwareInfo);\n    let deviceArr = [].concat(devicesList)\n    deviceArr.push(receiveBroadcastHardwareInfo)\n    setDevicesList(deviceArr)\n\n\n\n  }, [receiveBroadcastHardwareInfo])\n\n  return (\n    <div className='addDevice' style={{ height: bodyHeight }}>\n      <div className=\"addDeviceTitle\" style={{ height: px(100), fontSize: 26, paddingLeft: px(20) }}>\n        {topText}\n      </div>\n\n      {body()}\n    </div >\n  )\n}\n\n\nAddDevice.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n//默认值\nAddDevice.defaultProps = {\n  bodyHeight: 0,\n  devicesTypeList: []\n}\nexport default connect(\n  state => ({\n    hardwareReducer: state.hardwareReduce,\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n    receiveBroadcastHardwareInfo: state.hardwareReduce.receiveBroadcastHardwareInfo,\n    hardwareList: state.hardwareReduce.hardwareList,\n  }),\n  { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }\n)(AddDevice)\n",["536","537"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.jsx",[],["538","539"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["540","541","542","543","544","545","546","547","548","549"],"import React, { useEffect, useState, useRef } from \"react\";\nimport {\n  Image,\n  Layout,\n  Dropdown,\n  Col,\n  Row,\n  Avatar,\n  Space,\n  Card,\n  Menu,\n  Progress,\n} from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\n\nimport BluetoothNotConnected from \"./../../../assets/img/BluetoothNotConnected.png\";\nimport AxillaryBluetooth from \"./../../../assets/img/AxillaryBluetooth.png\"; //腋温图片\nimport RectalBluetoothIcon from \"./../../../assets/img/RectalBluetoothIcon.png\"; //肛温图片\nimport EarBluetoothIcon from \"./../../../assets/img/EarBluetoothIcon.png\"; //耳温图片\nimport connectBle from \"./../../../assets/img/connectBle.png\";\nimport redcat from \"./../../../assets/images/redcat.png\";\nimport reddog from \"./../../../assets/images/reddog.png\";\nimport redother from \"./../../../assets/images/redother.png\";\n\nimport electronStore from \"../../../utils/electronStore\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n  setMellaPredictReturnValueFun,\n} from \"../../../store/actions\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\n\nimport \"./headerItem.less\";\nimport { catv12Predict } from \"../../../api\";\n\nconst { Header } = Layout;\nconst HeaderItem = ({\n  petMessage,\n  hardwareMessage,\n  timeNum = 15,\n  setMellaPredictReturnValueFun,\n}) => {\n  let history = useHistory();\n  let storage = window.localStorage;\n  let {\n    petName,\n    patientId,\n    firstName,\n    lastName,\n    gender,\n    breedName,\n    birthday,\n    weight,\n    url,\n    petSpeciesBreedId,\n    petId,\n    isWalkIn,\n  } = petMessage;\n  let {\n    mellaConnectStatus,\n    mellaPredictValue,\n    mellaMeasureValue,\n    mellaMeasurePart,\n    rulerConnectStatus,\n    biggieConnectStatus,\n    selectHardwareInfo,\n    selectHardwareType,\n  } = hardwareMessage;\n  const [value, setValue] = useState(0);\n  const saveCallBack = useRef();\n  const callBack = () => {\n    let random = null;\n    if (timeNum === 15) {\n      random = 7;\n    } else if (timeNum === 30) {\n      random = 3.5;\n    } else {\n      random = 1.75;\n    }\n    setValue(value + random);\n  };\n  //展示宠物照片方法\n  const petPicture = (size) => {\n    if (_.isEmpty(url)) {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <Avatar src={redcat} size={size} />;\n      } else if (\n        petSpeciesBreedId === 12001 ||\n        _.inRange(petSpeciesBreedId, 136, 456)\n      ) {\n        return <Avatar src={reddog} size={size} />;\n      } else if (petSpeciesBreedId === 13001) {\n        return <Avatar src={redother} size={size} />;\n      } else {\n        return <Avatar src={redother} size={size} />;\n      }\n    } else {\n      return <Avatar src={url} size={size} />;\n    }\n  };\n  //展示名字或id方法\n  const showNameOrId = () => {\n    if (_.isEmpty(petName) && _.isEmpty(patientId)) {\n      return \"unknown\";\n    } else if (!_.isEmpty(petName)) {\n      return petName;\n    } else {\n      return patientId;\n    }\n  };\n  //展示主人名字方法\n  const ownerName = () => {\n    if (_.isEmpty(firstName) && _.isEmpty(lastName)) {\n      return \"unknown\";\n    } else {\n      return firstName + \" \" + lastName;\n    }\n  };\n  //计算宠物年龄\n  const calculateAge = () => {\n    if (_.isEmpty(birthday)) {\n      return \"unknown\";\n    } else {\n      return moment().diff(moment(birthday), \"years\") + \" \" + \"Years Old\";\n    }\n  };\n  //计算宠物体重\n  const calculateWeight = () => {\n    if (_.isEmpty(weight)) {\n      return \"unknown\";\n    } else {\n      return _.floor(weight * 2.2, 1) + \" \" + \"lbs\";\n    }\n  };\n  //头部弹出卡片\n  const cardItem = () => {\n    return (\n      <Menu onClick={(item) => clilkMenu(item)} className=\"popBox\">\n        <Menu.Item className=\"topItem\">\n          <div className=\"cardTopBox\">\n            <div className=\"topLeftBox\">\n              {petPicture(91)}\n              <p className=\"cardTitle\">{showNameOrId()}</p>\n              <p className=\"cardTitle\">{ownerName()}</p>\n            </div>\n            <div className=\"topRightBox\">\n              <p className=\"cardTitle\">{calculateAge()}</p>\n              <p className=\"cardTitle\">{calculateWeight()}</p>\n              <p className=\"cardTitle\">{gender === 0 ? \"Male\" : \"Venter\"}</p>\n              <p className=\"cardTitle\">{breedName}</p>\n            </div>\n          </div>\n        </Menu.Item>\n        <Menu.Item key={\"editPetInfo\"} style={{ paddingLeft: '8px' }}>\n          <p className=\"itemList\">Edit Pet Profile</p>\n        </Menu.Item>\n        <Menu.Item style={{ paddingLeft: '8px' }}>\n          <p className=\"itemList\">Export Temperature History</p>\n        </Menu.Item>\n        <Menu.Item style={{ paddingLeft: '8px' }}>\n          <p className=\"itemList\">Export All Vitals History</p>\n        </Menu.Item>\n      </Menu>\n    );\n  };\n  const clilkMenu = (item) => {\n    console.log(\"---item\", item);\n    if (item.key === \"editPetInfo\" && !petMessage.isWalkIn) {\n      //跳转到编辑宠物信息页面\n      history.push(\"/page9\");\n    }\n  };\n  //超过15s后调用接口\n  const prediction = () => {\n    let parame = {\n      ambient_temperature: 17,\n      data: mellaPredictValue,\n      deviceId: \"11111\",\n      sampling_rate: \"135ms\",\n    };\n    let url = \"/clinical/catv12Predict\";\n    catv12Predict(parame)\n      .then((res) => {\n        console.log(\"res\", res);\n        let ipcRenderer = window.electron.ipcRenderer;\n        if (res.message === \"Success\") {\n          let prediction = res.result.prediction.toFixed(2);\n          let num = parseFloat(parseFloat(prediction).toFixed(1));\n          setMellaPredictReturnValueFun(num);\n          let tempArr = prediction.split(\".\");\n          let intNum = tempArr[0];\n          let flotNum = tempArr[1];\n          if (intNum.length < 2) {\n            intNum = \"0\" + intNum;\n          }\n          if (flotNum.length < 2) {\n            flotNum = \"0\" + flotNum;\n          }\n          const timeID = setTimeout(() => {\n            ipcRenderer.send(\"usbdata\", {\n              command: \"42\",\n              arr: [intNum, flotNum],\n            });\n\n            timeID && clearTimeout(timeID);\n          }, 10);\n        } else {\n          const timeID = setTimeout(() => {\n            ipcRenderer.send(\"usbdata\", { command: \"41\", arr: [] });\n            clearTimeout(timeID);\n          }, 10);\n        }\n      })\n      .catch((err) => {\n        console.log(\"err\", err);\n      });\n  };\n  //判断仪器是否连接从而判断选择什么图片\n  const isConnect = () => {\n    const checkImage = () => {\n      if (mellaMeasurePart === \"腋温\") {\n        return AxillaryBluetooth;\n      } else if (mellaMeasurePart === \"耳温\") {\n        return EarBluetoothIcon;\n      } else {\n        return RectalBluetoothIcon;\n      }\n    };\n\n    if (electronStore.get(`${storage.userId}-isClical`)) {\n      return _.isEqual(mellaConnectStatus, \"disconnected\") ? (\n        <Avatar size={40} src={BluetoothNotConnected} />\n      ) : (\n        <Progress\n          width={48}\n          type=\"circle\"\n          percent={value}\n          format={() => <Avatar size={40} src={checkImage()} />}\n        />\n      );\n    } else {\n      switch (selectHardwareType) {\n        case \"mellaPro\":\n          return _.isEqual(mellaConnectStatus, \"disconnected\") ? (\n            <Avatar size={40} src={BluetoothNotConnected} />\n          ) : (\n            <Progress\n              width={48}\n              type=\"circle\"\n              percent={value}\n              format={() => <Avatar size={40} src={checkImage()} />}\n            />\n          );\n        case \"biggie\":\n          return _.isEqual(biggieConnectStatus, \"disconnected\") ? (\n            <Avatar size={40} src={BluetoothNotConnected} />\n          ) : (\n            <Avatar size={40} src={connectBle} />\n          );\n        case \"tape\":\n          return _.isEqual(rulerConnectStatus, \"disconnected\") ? (\n            <Avatar size={40} src={BluetoothNotConnected} />\n          ) : (\n            <Avatar size={40} src={connectBle} />\n          );\n        default:\n          break;\n      }\n    }\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (value === 105 && timeNum !== 60) {\n      prediction();\n    } else if (value === 105 && timeNum === 60) {\n      let ipcRenderer = window.electron.ipcRenderer;\n      const timeID = setTimeout(() => {\n        ipcRenderer.send(\"usbdata\", { command: \"41\", arr: [] });\n        clearTimeout(timeID);\n      }, 10);\n    }\n    return () => { };\n  }, [value]);\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    let timer = null;\n    if (mellaConnectStatus === \"isMeasuring\") {\n      setValue(0);\n      timer = setInterval(tick, 1000);\n    } else if (value > 100 || mellaConnectStatus === \"complete\") {\n      clearInterval(timer);\n    } else if (mellaConnectStatus === \"disconnected\") {\n      setValue(0);\n    };\n    if (mellaConnectStatus === \"complete\") {\n      // let ipcRenderer = window.electron.ipcRenderer;\n      // ipcRenderer.send(\"keyboardWriting\", mellaMeasureValue);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [mellaConnectStatus]);\n\n  return (\n    <div className=\"headerBox\">\n      <Header style={{ background: \"#fff\", height: '100%' }}>\n        {_.isEmpty(petId) && !isWalkIn ? (\n          <></>\n        ) : (\n          <Row className=\"heardRow\" >\n            {/*头部左侧 */}\n            <Col flex={10}>\n              {isWalkIn ? (\n                <span className=\"walkInTitle\">Walk-In</span>\n              ) : (\n                <Dropdown overlay={cardItem} trigger={[\"click\"]}>\n                  <div\n                    className=\"petMessageBox\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    {petPicture(40)}\n                    <div className=\"petMessageBox\">\n                      <p className=\"petName\">\n                        {!_.isEmpty(petMessage.patientId)\n                          ? petMessage.patientId\n                          : \"unknown\"}\n                        ,{\" \"}\n                        {!_.isEmpty(petMessage.petName)\n                          ? petMessage.petName\n                          : \"unknown\"}\n                      </p>\n                      <DownOutlined\n                        style={{ fontSize: \"22px\", marginLeft: \"10px\" }}\n                      />\n                    </div>\n                  </div>\n                </Dropdown>\n              )}\n            </Col>\n            {/*头部右侧 */}\n            <Col flex={1}>\n              <div className=\"linkStateImageBox\">{isConnect()}</div>\n            </Col>\n          </Row>\n        )}\n      </Header>\n    </div>\n  );\n};\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n    setMellaPredictReturnValueFun,\n  }\n)(HeaderItem);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\VetSpire.js",["550","551","552"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx",["553"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Input,\r\n  message,\r\n  Spin,\r\n  Button,\r\n  Select,\r\n} from \"antd\";\r\n\r\nimport UploadImg from \"../../utils/uploadImg/UploadImg\";\r\n\r\nimport {\r\n  checkPatientId,\r\n  selectBreedBySpeciesId,\r\n} from '../../api';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport './index.less';\r\n\r\nconst AddPetModal = ({ visible, width, title, destroyOnClose, value, onConfirm, onCancel, onLoading }) => {\r\n  const { Option } = Select;\r\n  let storage = window.localStorage;\r\n  const [isModalVisible, setIsModalVisible] = useState(false);//控制弹窗的显隐\r\n  const [isdestroyOnClose, setIsdestroyOnClose] = useState(false);//是否清除弹窗里面的内容\r\n  const [isWidth, setIsWidth] = useState(520);//弹窗的宽度\r\n  const [loading, setLoading] = useState(false);//加载\r\n  const [breedList,  setBreedList] = useState([]);//\r\n  const [imageId, setImageId] = useState('');//上传后图片id\r\n  const [patientId, setPatientId] = useState('');//用户输入的病人id\r\n  const [petName, setPetName] = useState('');//用户输入的宠物名字\r\n  const [ownerName, setOwnerName] = useState('');//用户输入的主人名字\r\n  const [breedId, setBreedId] = useState('');//用户选择的宠物品种id\r\n  const [petAge, setPetAge] = useState('');//用户输入的宠物年龄\r\n  const [petWeight, setPetWeight] = useState('');//用户输入的宠物体重\r\n  const [btnLoading, setBtnLoading] = useState(false);//按钮加载\r\n\r\n\r\n  //确认选择\r\n  const handleOk = () => {\r\n    if (patientId === '') {\r\n      message.error('Please enter the patientId!');\r\n    } else {\r\n      setIsModalVisible(visible);\r\n      onConfirm({\r\n        imageId: imageId,\r\n        patientId: patientId,\r\n        petName: petName,\r\n        petSpeciesBreedId: breedId,\r\n        age: petAge,\r\n        weight: petWeight,\r\n        owner: ownerName,\r\n      })\r\n    }\r\n  };\r\n  //关闭弹窗\r\n  const handleCancel = () => {\r\n    onCancel(false);\r\n    setIsModalVisible(visible);\r\n  };\r\n  //判断用户输入的patientId是否存在\r\n  const getPetInfoByPatientId = () => {\r\n    setLoading(true);\r\n    let datas = {\r\n      patientId: patientId,\r\n      doctorId: storage.userId\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      datas.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      datas.organizationId = storage.lastOrganization\r\n    }\r\n    checkPatientId(datas)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.flag === false) {\r\n          message.error('The patient ID already exists, please replace it !');\r\n        } else {\r\n          message.success('The patientId can be used ~')\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        message.error('Abnormal interface');\r\n      })\r\n\r\n  }\r\n  //获取宠物品种\r\n  const selectBreed = () => {\r\n    setLoading(true);\r\n    selectBreedBySpeciesId({ speciesId: null })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.msg === 'success') {\r\n          let arr = [];\r\n          _.map(res.petlist, (item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n            };\r\n            arr.push(data);\r\n          });\r\n          setBreedList(arr);\r\n        } else {\r\n          message.error('Failed to obtain pet breed information!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true || visible === false) {\r\n      setIsModalVisible(visible);\r\n    } else {\r\n      setIsModalVisible(false);\r\n    }\r\n    return (() => { })\r\n  }, [visible]);\r\n\r\n  useEffect(() => {\r\n    if (destroyOnClose === true) {\r\n      setIsdestroyOnClose(destroyOnClose);\r\n    }\r\n    if (_.isNumber(width)) {\r\n      setIsWidth(width)\r\n    }\r\n    return (() => { })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    selectBreed();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onLoading === true || onLoading === false) {\r\n      setBtnLoading(onLoading);\r\n    } else {\r\n      setBtnLoading(false);\r\n    }\r\n    return (() => { })\r\n  }, [onLoading]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Add a Pet\"\r\n        visible={isModalVisible}\r\n        onCancel={handleCancel}\r\n        centered\r\n        maskClosable={false}\r\n        footer={null}\r\n        width={isWidth}\r\n        destroyOnClose={isdestroyOnClose}\r\n        className=\"addPetModal\"\r\n      >\r\n        <Spin spinning={loading}>\r\n          <div className='modalContentBox'>\r\n            <div className='petMsgBox'>\r\n              <div className='addPhoto'>\r\n                <UploadImg\r\n                  getImg={(val) => {\r\n                    setImageId(val.imageId);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Patient ID:</p>\r\n                <Input\r\n                  value={patientId}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPatientId(e.target.value)\r\n                  }}\r\n                  onBlur={() => {\r\n                    if (patientId.length > 0) {\r\n                      getPetInfoByPatientId();\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Pet Name:</p>\r\n                <Input\r\n                  value={petName}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPetName(e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Owner Name:</p>\r\n                <Input\r\n                  value={ownerName}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setOwnerName(e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <p>Breed:</p>\r\n                <div className='selectBox'>\r\n                  <Select\r\n                    showSearch\r\n                    style={{ width: \"100%\" }}\r\n                    bordered={false}\r\n                    value={breedId}\r\n                    placeholder=\"Search to Select\"\r\n                    optionFilterProp=\"children\"\r\n                    listHeight={256}\r\n                    onSelect={(value, data) => setBreedId(value)}\r\n                    filterOption={(input, option) =>\r\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                      0\r\n                    }\r\n                    filterSort={(optionA, optionB) =>\r\n                      optionA.children\r\n                        .toLowerCase()\r\n                        .localeCompare(optionB.children.toLowerCase())\r\n                    }\r\n                  >\r\n                    {\r\n                      _.map(breedList, (item, index) => (\r\n                        <Option key={item.petSpeciesBreedId}>{item.breedName}</Option>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <p>Pet Age:</p>\r\n                <Input\r\n                  value={petAge}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPetAge(e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Pet Weight:</p>\r\n                <Input\r\n                  value={petWeight}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPetWeight(e.target.value)\r\n                  }}\r\n                />\r\n                <div className=\"unit\">{`kg`}</div>\r\n              </div>\r\n            </div>\r\n            <div className='foot'>\r\n              <div className=\"btnBox\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size=\"large\"\r\n                  block\r\n                  onClick={handleCancel}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size=\"large\"\r\n                  block\r\n                  onClick={handleOk}\r\n                  loading={btnLoading}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default AddPetModal;\r\n",["554","555"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx",["556"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Input,\r\n  message,\r\n  Spin,\r\n  Button,\r\n} from \"antd\";\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\nimport PhoneBook from '../../utils/phoneBook/PhoneBook';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport './index.less';\r\nimport { selectBreedBySpeciesId } from '../../api';\r\n\r\nconst SelectPetBreed = ({ visible, width, title, destroyOnClose, value, onSelect, onCancel }) => {\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);//控制弹窗的显隐\r\n  const [isdestroyOnClose, setIsdestroyOnClose] = useState(false);//是否清除弹窗里面的内容\r\n  const [isWidth, setIsWidth] = useState(520);//弹窗的宽度\r\n  const [breedList, setBreedList] = useState([]);//所有宠物品种\r\n  const [searchValue, setSearchValue] = useState();//搜索框的值\r\n  const [selePetBreedValue, setSelePetBreedValue] = useState();//选择的宠物品种\r\n  const [loading, setLoading] = useState(false);//加载\r\n\r\n  //获取所有宠物品种\r\n  const getAllPetBreed = () => {\r\n    let data = {\r\n      speciesId: null,//null是获取所有宠物品种不分猫和狗\r\n    }\r\n    setLoading(true);\r\n\r\n    selectBreedBySpeciesId(data)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.msg === 'success') {\r\n          setBreedList(res.petlist);\r\n        } else {\r\n          message.error('Failed to obtain pet breed')\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n      })\r\n  }\r\n  //确认选择\r\n  const handleOk = () => {\r\n    onSelect(selePetBreedValue);\r\n    setIsModalVisible(visible);\r\n  };\r\n  //关闭弹窗\r\n  const handleCancel = () => {\r\n    onCancel(false);\r\n    setIsModalVisible(visible);\r\n  };\r\n  //输入框输入内容\r\n  const onChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true || visible === false) {\r\n      setIsModalVisible(visible);\r\n    } else {\r\n      setIsModalVisible(false);\r\n    }\r\n    return (() => { });\r\n  }, [visible]);\r\n\r\n  useEffect(() => {\r\n    getAllPetBreed();\r\n    return (() => { });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (destroyOnClose === true) {\r\n      setIsdestroyOnClose(destroyOnClose);\r\n    }\r\n    if (_.isNumber(width)) {\r\n      setIsWidth(width)\r\n    }\r\n    return (() => { })\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Choose Breed\"\r\n        visible={isModalVisible}\r\n        onCancel={handleCancel}\r\n        centered\r\n        maskClosable={false}\r\n        footer={null}\r\n        width={isWidth}\r\n        destroyOnClose={isdestroyOnClose}\r\n        className=\"selectPetBreedModal\"\r\n      >\r\n        <Spin spinning={loading}>\r\n          <div className='modalContentBox'>\r\n            <div className=\"searchBox\">\r\n              <Input\r\n                placeholder=\"Search Name\"\r\n                bordered={false}\r\n                allowClear={true}\r\n                prefix={<SearchOutlined />}\r\n                onChange={onChange}\r\n              />\r\n            </div>\r\n            <div className='list'>\r\n              <PhoneBook\r\n                listDate={breedList}\r\n                confirmSelectBreed={value}\r\n                selectFun={(val) => {\r\n                  setSelePetBreedValue(val);\r\n                }}\r\n                searchText={searchValue}\r\n              />\r\n            </div>\r\n            <div className='foot'>\r\n              <div className=\"btnBox\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size=\"large\"\r\n                  block\r\n                  onClick={handleOk}\r\n                >\r\n                  Select\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectPetBreed;\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\index.js",["557"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js",[],["558","559"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\advancedSettings\\index.jsx",["560","561"],"\r\nimport React, { Component } from 'react'\r\nimport { message } from 'antd';\r\nimport Heart from '../../utils/heard/Heard'\r\nimport { px, win } from '../../utils/px'\r\nimport MyModal from '../../utils/myModal/MyModal.jsx'\r\nimport './index.less';\r\nimport { getOta } from '../../api/mellaserver/backend';\r\nimport { versionComarision } from '../../utils/commonFun';\r\nimport { getInfoOfLatestDevice } from '../../api/mellaserver/mellarecord';\r\n\r\nlet ipcRenderer = window.electron.ipcRenderer\r\nlet storage = window.localStorage;\r\nlet uploadType = ''\r\nexport default class AdvancedSettings extends Component {\r\n\r\n  state = {\r\n    isHaveBase: true,\r\n    uploadText: '',\r\n    isUpload: false,\r\n    updateModal: false,\r\n    progress: 0,\r\n\r\n\r\n    localVersion: '',\r\n    cloudVersion: '',\r\n    filePath: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    ipcRenderer.send(\"big\", win());\r\n    //检测是否有usb设备\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    //升级过程中发送的过程信息\r\n    ipcRenderer.on('uploadBaseInfo', this._uploadBaseInfo)\r\n    //底座发过来的指令信息\r\n    ipcRenderer.on('sned', this._send)\r\n    //发送结束升级指令,相当于初始化\r\n    ipcRenderer.send('reUpload', {})\r\n  }\r\n  componentWillUnmount() {\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('uploadBaseInfo', this._uploadBaseInfo)\r\n    ipcRenderer.removeListener('sned', this._send)\r\n\r\n    this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n    console.log(data);\r\n    let { isUpload } = this.state\r\n\r\n    if (data[2] === 54) {\r\n      if (isUpload) {\r\n        if (data[3] === 0) {\r\n          console.log('这是已经在升级状态下的, 要他重新插拔底座然后再去发送指令');\r\n          this.setState({\r\n            uploadText: 'Start the upgrade after re-plugging the base'\r\n          })\r\n          ipcRenderer.send('startUpload', {})\r\n        }\r\n      }\r\n\r\n    } else if (data[2] === 182) {\r\n      //为0代表底座通讯关闭成功了\r\n      if (data[3] === 0) {\r\n        if (isUpload) {\r\n          console.log('发送指令让底座进入升级状态');\r\n          ipcRenderer.send('enterUpgrade', { command: '38', arr: ['5A'] })\r\n        }\r\n\r\n      }\r\n    } else if (data[2] === 136) {\r\n      //获取到了版本信息,把定时器关闭,此底座不是很老版本\r\n      console.log('版本信息:', data);\r\n      this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n      let localVersion = `${data[6]}.${data[7]}.${data[8]}`\r\n      this.setState({\r\n        localVersion,\r\n        uploadText: `The current version number is v${localVersion}, getting the latest version`\r\n      }, () => {\r\n        this.cloudVersion()\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  //是否插上底座设备，为true则代表插上了底座设备，反之为拔掉了底座设备\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    let { isUpload, progress } = this.state\r\n    if (data === false) {\r\n\r\n      this.setState({\r\n        isHaveBase: true\r\n      })\r\n      if (isUpload) {\r\n        if (progress === 0) {\r\n          console.log('正在升级过程中检测到了拔插 前去发送升级文件', uploadType);\r\n          if (uploadType === 'base') {\r\n            console.log('底座升级');\r\n            ipcRenderer.send('updateBase', { state: 'base', url: this.state.filePath, fileName: `mellabase${this.state.cloudVersion}` })\r\n          } else if (uploadType === 'reset') {\r\n            console.log('底座出厂设置');\r\n            ipcRenderer.send('updateBase', { state: 'reset', })\r\n          }\r\n        } else if (progress === 100) {\r\n          this.failTimer && clearTimeout(this.failTimer)\r\n          this.setState({\r\n            isUpload: false,\r\n            updateModal: false,\r\n            progress: 0,\r\n            localVersion: '',\r\n            cloudVersion: '',\r\n          })\r\n          message.destroy()\r\n          message.success('Update Successful');\r\n          ipcRenderer.send('reUpload', {})\r\n        } else {\r\n          this.setState({\r\n            isUpload: false,\r\n            updateModal: false,\r\n            progress: 0,\r\n            localVersion: '',\r\n            cloudVersion: '',\r\n          })\r\n          message.destroy()\r\n          message.error('Upgrade failed')\r\n          ipcRenderer.send('reUpload', {})\r\n        }\r\n\r\n\r\n      }\r\n\r\n    } else {\r\n      if (this.state.isHaveBase) {\r\n        this.setState({\r\n          isHaveBase: false\r\n        })\r\n      }\r\n      if (isUpload) {\r\n        if (progress > 0 && progress < 100) {\r\n          this.setState({\r\n            isUpload: false,\r\n            updateModal: false,\r\n            progress: 0,\r\n            localVersion: '',\r\n            cloudVersion: '',\r\n          })\r\n          message.destroy()\r\n          message.error('Upgrade failed')\r\n          ipcRenderer.send('reUpload', {})\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n  _uploadBaseInfo = (e, data) => {\r\n    console.log('升级过程中的信息：', data);\r\n    switch (data.status) {\r\n      case 'error':\r\n        this.setState({\r\n          isUpload: false,\r\n          updateModal: false,\r\n          progress: 0,\r\n          localVersion: '',\r\n          cloudVersion: '',\r\n        })\r\n        message.destroy()\r\n        message.error(data.data)\r\n        ipcRenderer.send('reUpload', {})\r\n        break;\r\n      case 'error1':\r\n        this.setState({\r\n          isUpload: false,\r\n          updateModal: false,\r\n          progress: 0,\r\n          localVersion: '',\r\n          cloudVersion: '',\r\n        })\r\n        message.destroy()\r\n        message.error('Upgrade failed, please try again')\r\n        ipcRenderer.send('reUpload', {})\r\n        break;\r\n\r\n\r\n      case 'normal':\r\n        this.setState({\r\n          uploadText: data.data,\r\n          progress: data.progress\r\n        })\r\n        if (data.progress === 100) {\r\n          console.log('进度到达100了');\r\n          this.failTimer && clearTimeout(this.failTimer)\r\n          this.failTimer = setTimeout(() => {\r\n\r\n            this.setState({\r\n              isUpload: false,\r\n              updateModal: false,\r\n              progress: 0,\r\n              localVersion: '',\r\n              cloudVersion: '',\r\n            })\r\n            message.destroy()\r\n            message.error('Upgrade failed')\r\n            ipcRenderer.send('reUpload', {})\r\n          }, 5000);\r\n        }\r\n        break;\r\n\r\n      case 'success':\r\n        this.setState({\r\n          isUpload: false,\r\n          updateModal: false,\r\n        })\r\n        message.destroy()\r\n        message.success(data.data)\r\n        ipcRenderer.send('reUpload', {})\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n\r\n  }\r\n  _upload = (val) => {\r\n\r\n    let { isHaveBase } = this.state\r\n    if (!isHaveBase) {\r\n      this.setState({\r\n        isUpload: false,\r\n        updateModal: false,\r\n      })\r\n      message.destroy()\r\n      message.error('No base device found, please plug it in and try again')\r\n    } else {\r\n      console.log('---我插入底座了，准备去升级, 这里就可以打开modal框了');\r\n      this.setState({\r\n        uploadText: 'Detect upgrade environment',\r\n        isUpload: true,\r\n        updateModal: true,\r\n        progress: 0\r\n      })\r\n      uploadType = val\r\n      //第一步，发送一个关闭通信的指令，看是否能够收到，如果收不到则判定底座已经在升级状态下，直接去发送文件\r\n      const timer = setTimeout(() => {\r\n        console.log('发送指令查看底座是否已经在升级状态');\r\n        ipcRenderer.send('usbdata', { command: '36', arr: ['00'] })\r\n        clearTimeout(timer)\r\n      }, 100);\r\n\r\n      //2.如果能收到关闭指令，则发送开始升级指令\r\n\r\n      //3.如果如果测试检测到usb插拔，则去发送文件\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n  _upload1 = (val) => {\r\n\r\n    let { isHaveBase } = this.state\r\n    message.destroy()\r\n    if (!isHaveBase) {\r\n      this.setState({\r\n        isUpload: false,\r\n        updateModal: false,\r\n        localVersion: '',\r\n        cloudVersion: '',\r\n      })\r\n\r\n      message.error('No base device found, please plug it in and try again')\r\n    } else {\r\n      console.log('---我插入底座了，准备去升级, 这里就可以打开modal框了');\r\n      this.setState({\r\n        uploadText: 'Detect upgrade environment',\r\n        updateModal: true,\r\n        progress: 0,\r\n        localVersion: '',\r\n        cloudVersion: '',\r\n      }, () => {\r\n        this.localVersion()\r\n      })\r\n      uploadType = val\r\n      //第一步,查询本地版本号\r\n\r\n\r\n\r\n      //2.如果能收到关闭指令，则发送开始升级指令\r\n\r\n      //3.如果如果测试检测到usb插拔，则去发送文件\r\n\r\n\r\n\r\n    }\r\n  }\r\n  //询问本地的版本号\r\n  localVersion = () => {\r\n    this.setState({\r\n      uploadText: 'Query the local version number',\r\n    })\r\n    ipcRenderer.send('usbdata', { command: '08', arr: [''] })\r\n    this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n    this.localVersionTimer = setTimeout(() => {\r\n      //如果3秒后还没有收到桌面返回的版本号,则代表这是很老的底座程序,直接去下载文件升级\r\n      this.cloudVersion()\r\n      this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n    }, 3000);\r\n  }\r\n  //询问网端最新的版本号\r\n  cloudVersion = () => {\r\n    console.log('-----进入获取网端版本时间了');\r\n    getInfoOfLatestDevice('mellabase')\r\n      .then(res => {\r\n        console.log('获取到了网端的版本号', res);\r\n        if (res.flag) {\r\n          let { firmwareVersion, updateUrl } = res.data\r\n          let cloudBigtolocal = versionComarision(firmwareVersion, this.state.localVersion)\r\n          console.log('比较信息:', firmwareVersion, this.state.localVersion, cloudBigtolocal);\r\n          if (cloudBigtolocal || !this.state.localVersion) {\r\n            this.setState({\r\n              cloudVersion: firmwareVersion,\r\n              filePath: updateUrl,\r\n              isUpload: true,\r\n              uploadText: 'Start getting upgrade files'\r\n\r\n            })\r\n\r\n            //第一步，发送一个关闭通信的指令，看是否能够收到，如果收不到则判定底座已经在升级状态下，直接去发送文件\r\n            const timer = setTimeout(() => {\r\n              console.log('发送指令查看底座是否已经在升级状态');\r\n              ipcRenderer.send('usbdata', { command: '36', arr: ['00'] })\r\n              clearTimeout(timer)\r\n            }, 100);\r\n          } else {\r\n            this.setState({\r\n              updateModal: false\r\n            })\r\n            message.success(`The hardware version is v${firmwareVersion}, which is the latest version`)\r\n          }\r\n\r\n\r\n\r\n        } else {\r\n          console.log('没有获取到版本的文件');\r\n          message.error('Failed to get the latest version')\r\n          this.setState({\r\n            updateModal: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('获取版本失败,停止升级', err);\r\n        message.error('Failed to get the latest version')\r\n        this.setState({\r\n          updateModal: false\r\n        })\r\n\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id='advancedsettings'>\r\n        <div className=\"heard\">\r\n          <Heart />\r\n          <div className=\"title\">\r\n            <h2>Advanced Settings</h2>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"item\">\r\n            <div className=\"ltext\">\r\n              <p style={{ fontSize: px(18) }}>\r\n                Factory Reset<br /><br />\r\n\r\n                This will erase all data from your Mella<br /> device, including:<br />\r\n                - All installed updates<br />\r\n                - User preferences and Settings<br />\r\n              </p>\r\n            </div>\r\n            <div className=\"rbtn\"\r\n              // onClick={this._reset}\r\n              onClick={() => this._upload('reset')}\r\n            >\r\n              <div className=\"btn\">Erase all data and reset device</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"ltext\">\r\n              <p style={{ fontSize: px(18) }}>\r\n                Mella Base\r\n              </p>\r\n            </div>\r\n            <div className=\"rbtn\"\r\n\r\n              onClick={() => this._upload1('base')}\r\n            >\r\n              <div className=\"btn\">Update Mella Charging Base</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"ltext\">\r\n              <p style={{ fontSize: px(18) }}>\r\n                MellaPro Thermometer\r\n              </p>\r\n            </div>\r\n            <div className=\"rbtn\"\r\n              onClick={() => {\r\n                // ipcRenderer.send('usbdata', { command: '01', arr: ['11'] })\r\n              }}\r\n            >\r\n              <div className=\"btn\">Connect Bluetooth and Update</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <MyModal\r\n          visible={this.state.updateModal}\r\n          // visible={true}\r\n          element={\r\n            <div style={{ height: px(200), borderRadius: px(20) }} className=\"upload\">\r\n\r\n              {/* <p>{this.state.uploadText} </p> */}\r\n              <p style={{ color: '#000', padding: 0, margin: 0 }}>{this.state.uploadText}</p>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",["562","563"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addDevice\\index.jsx",["564","565"],"import React, { Component } from 'react'\r\nimport { message } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport MinClose from '../../utils/minClose/MinClose'\r\nimport MouseDiv from '../../utils/mouseDiv/MouseDiv'\r\nimport { mTop, px, MTop, } from '../../utils/px';\r\nimport electronStore from '../../utils/electronStore';\r\n\r\nimport back_white from '../../assets/img/back-white.png';\r\nimport back_hui from '../../assets/img/back-hui.png';\r\nimport redclose from '../../assets/img/redclose.png';\r\n\r\nimport './index.less';\r\n\r\nlet storage = window.localStorage;\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\nlet num07 = 0       //接收到07命令行的次数\r\n\r\n\r\nexport default class AddDevice extends Component {\r\n\r\n  state = {\r\n    noUSB: false,\r\n    devicesList: [],\r\n    selectDevice: null,\r\n    // selectDevice: true,\r\n    reName: '',\r\n    saveDeviceMac: []  //这是已经保存过的设备的macid\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    message.destroy()\r\n\r\n    ipcRenderer.send('small')\r\n    // 监听分辨率是否改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    //这里做了个监听，当有数据发过来的时候直接在这里接收\r\n    ipcRenderer.on('sned', this._send)\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    let devicesList = electronStore.get(`${storage.userId}-deviceList`)\r\n    if (devicesList) {\r\n      let saveDeviceMac = []\r\n      for (let i = 0; i < devicesList.length; i++) {\r\n        const element = devicesList[i];\r\n        saveDeviceMac.push(element.macId)\r\n      }\r\n      this.setState({\r\n        saveDeviceMac\r\n      })\r\n    }\r\n\r\n\r\n\r\n    // const timer = setTimeout(() => {\r\n    //   let deviceList = [\r\n    //     // { name: 'Add Device', deviceType: 'add', macId: '0' },\r\n    //     { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:55:66' },\r\n    //   ]\r\n    //   this.setState({\r\n    //     devicesList: deviceList\r\n    //   })\r\n    //   clearTimeout(timer)\r\n    // }, 500);\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    ipcRenderer.removeListener('sned', this._send)\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      message.destroy()\r\n      this.setState({\r\n        noUSB: false\r\n      })\r\n    } else {\r\n      if (!this.state.noUSB) {\r\n        // message.error('The base is not detected. Please insert the base', 0)\r\n        this.setState({\r\n          noUSB: true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n    // console.log(data);\r\n    this.command(data)()\r\n  }\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  command = (newArr) => {\r\n    const instruction = [255]\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    // console.log(dataArr1);\r\n    const commandArr = {\r\n      255: () => {//蓝牙软尺广播的数据\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n\r\n        let bluName = ''\r\n        let bluData = []\r\n        //[\"aa\", \"25\", \"ff\", |\"03\", \"03\", \"b0\", \"ff\",| \"0f\", \"ff\", \"ac\", \"d2\", \"0b\", \"72\", \"c1\", \"7d\", \"3e\", \"d0\", \"a0\", \"00\", \"05\", \"09\", \"00\", \"2e\",| \"05\", \"09\", \"54\", \"61\", \"70\", \"65\", |\"06\", \"ef\", \"d0\", \"3e\", \"7d\", \"c1\", \"72\", |\"0b\", \"5c\", \"55\"]\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5])\r\n          }\r\n          // console.log('--剪切的数据---', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              let str = ''\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                let item = parseInt(itemData[i], 16)\r\n                str += String.fromCharCode(item)\r\n              }\r\n              bluName = str\r\n              break;\r\n            case 255:\r\n              bluData = itemData\r\n              break;\r\n            case 7: console.log('---UUID'); break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              break;\r\n            case 3: console.log('----尺子的,不知道什么用'); break;\r\n            default: console.log('直接跳出循环'); return;\r\n          }\r\n          dataIndex = itemLength\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\r\n        }\r\n        console.log('硬件名称', bluName, '-----硬件数据', bluData);\r\n        let macId = ''\r\n        if (bluData.length > 7) {\r\n          macId = this.getMac(bluName, bluData)\r\n        }\r\n\r\n\r\n        let sameFlog = this.state.devicesList.some((device, index) => {\r\n          return device.macId === macId\r\n        })\r\n        if (sameFlog || !macId) {   //重复直接退出\r\n          return\r\n        }\r\n        let deviceType = ''\r\n        switch (bluName) {\r\n          case 'Biggie':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n          case 'C19':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n\r\n          case 'MaeBowl':   //这是称量碗\r\n            deviceType = 'maeBowl'\r\n            break;\r\n\r\n          case 'Mella Measure': //这是蓝牙尺\r\n            deviceType = 'tape'\r\n            break;\r\n\r\n        }\r\n        if (macId && deviceType && bluName) {\r\n          let json = {\r\n            name: bluName,\r\n            deviceType,\r\n            macId\r\n          }\r\n          let deviceArr = [].concat(this.state.devicesList)\r\n          deviceArr.push(json)\r\n          this.setState({\r\n            devicesList: deviceArr\r\n          })\r\n        }\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n  }\r\n  getMac = (bluName, bluData) => {\r\n    switch (bluName) {\r\n      case 'Biggie':\r\n      case 'MaeBowl':\r\n      case 'Mella Measure':\r\n      case 'C19':\r\n        let str = bluData[1]\r\n        for (let i = 2; i < 7; i++) {\r\n          str += `:${bluData[i]}`\r\n        }\r\n        return str\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  changeFenBianLv = (e) => {\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n    })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  body = () => {\r\n    let { noUSB, devicesList, selectDevice, reName } = this.state\r\n    if (selectDevice) {\r\n      return <div className=\"addDevice flex\">\r\n        <div className=\"addDeviceTop flex\">\r\n          <div className=\"title\" style={{ fontSize: px(30), marginBottom: px(40) }}>Would you like to name<br />\r\n            this Mella device?</div>\r\n\r\n          <div className=\"input flex\" style={{ marginBottom: px(60) }}>\r\n            <input type=\"text\" style={{ height: px(45) }}\r\n              value={reName}\r\n              onChange={(value) => {\r\n                this.setState({\r\n                  reName: value.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\r\n            on the Exam Room. Write the name\r\n            on the sticker provided so it is easy\r\n            to select your device in the future.</div>\r\n        </div>\r\n        <div className=\"addDeviceFoot flex\">\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              console.log('---', deviceList);\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              let { saveDeviceMac } = this.state\r\n              saveDeviceMac.push(selectDevice.macId)\r\n              this.setState({\r\n                saveDeviceMac,\r\n                selectDevice: null,\r\n                reName: ''\r\n              })\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Add Another</p>\r\n          </div>\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              this.props.history.goBack()\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Finish</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    } else {\r\n      if (noUSB) {\r\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\r\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\r\n\r\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\r\n        </div>\r\n      } else {\r\n        if (devicesList.length === 0) {\r\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n            {/* < MyModal\r\n              visible={true}\r\n              element={\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n                  <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n                  </div>\r\n                  <p>\r\n                    {'searching...'}\r\n                  </p>\r\n                </div>\r\n              }\r\n            /> */}\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\r\n              <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\r\n              </div>\r\n              <p>\r\n                {'searching...'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        } else {\r\n          let options = devicesList.map((item, index) => {\r\n            let { saveDeviceMac } = this.state\r\n            let flog = saveDeviceMac.some((device, index) => {\r\n              return device === item.macId\r\n            })\r\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\r\n            return <li\r\n              className='flex'\r\n              style={{ marginBottom: px(20) }}\r\n              key={`${index}`}\r\n              onClick={() => {\r\n                if (!flog) {\r\n                  this.setState({\r\n                    selectDevice: item\r\n                  })\r\n                } else {\r\n                  message.destroy();\r\n                  message.error('This device has already been added')\r\n                }\r\n\r\n              }}\r\n            >\r\n\r\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\r\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\r\n\r\n            </li>\r\n          })\r\n          return <div className='deviceList'>\r\n            <ul>\r\n              {options}\r\n            </ul>\r\n          </div>\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"addDevice\">\r\n        <div className=\"heaed\">\r\n          <div className=\"l\"\r\n          >\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                let { selectDevice } = this.state\r\n                if (selectDevice) {\r\n                  this.setState({\r\n                    selectDevice: null\r\n                  })\r\n                } else {\r\n                  this.props.history.goBack()\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body flex\">\r\n          {this.body()}\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",["566","567"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx",["568","569","570","571","572","573"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Layout,\n  Avatar,\n  Button,\n  Card,\n  Space,\n  message,\n  Input,\n  Modal,\n} from \"antd\";\nimport {\n  CheckCircleFilled,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport {\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n} from \"../../store/actions\";\nimport _ from \"lodash\";\nimport { devicesTitleHeight } from \"../../utils/InitDate\";\nimport scaleImage from \"./../../assets/img/scaleImage.png\";\nimport combinedscales from \"./../../assets/img/combinedscales.png\";\nimport { px } from \"../../utils/px\";\nimport \"./index.less\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Meta } = Card;\nconst { confirm } = Modal;\nconst CombineScales = ({\n  petMessage,\n  hardwareMessage,\n  userMessage,\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n}) => {\n  let { hardwareList } = hardwareMessage;\n  const [biggieList, setBiggieList] = useState([]); //体重秤仪器列表\n  const [confirmType, setConfirmType] = useState(false); //确认选择\n  const [checkHardwareList, setcheckHardwareList] = useState([]); //存储用户点击选择的体重秤信息\n  const [saveName, setSaveName] = useState(\"\"); //保存用户的更改的名字\n\n  //点击卡片选择效果\n  const onClick = (index, data) => {\n    console.log(data);\n    let changeClassName = document.getElementById(index).classList;\n    let iconClassName = document.getElementById(`${\"icon\" + index}`);\n    let cardClassNametype = document\n      .getElementById(index)\n      .classList.contains(\"cardBoxClick\");\n    cardClassNametype\n      ? changeClassName.remove(\"cardBoxClick\")\n      : changeClassName.add(\"cardBoxClick\");\n    cardClassNametype\n      ? (iconClassName.style.display = \"none\")\n      : (iconClassName.style.display = \"\");\n    let oldData = checkHardwareList;\n    setcheckHardwareList(_.xorWith([data], oldData, _.isEqual));\n  };\n  //确认选择两个体重秤\n  const onChangeScales = () => {\n    if (_.size(checkHardwareList) > 1) {\n      setConfirmType(true);\n    } else {\n      message.error({\n        content: \"Please choose more than two scales\",\n        style: {\n          marginTop: \"20vh\",\n        },\n      });\n    }\n  };\n  //保存用户更改的名字\n  const saveChangeName = (e) => {\n    setSaveName(e.target.value);\n  };\n\n  //跳转准备测量\n  const startMeasuring = () => {\n    confirm({\n      title: \"Are you sure to incorporate the body fat scale?\",\n      icon: <ExclamationCircleOutlined />,\n      style: {\n        marginTop: \"20vh\",\n      },\n      width: 480,\n      onOk() {\n        let mac = _.join(_.map(checkHardwareList, \"mac\"), \"/\");\n        let newData = {\n          name: _.isEmpty(saveName) ? \"CompositeScale\" : saveName,\n          mac: mac,\n          deviceType: \"biggie\",\n          examRoom: \"\",\n        };\n        let newHardwareList = hardwareList;\n        newHardwareList[1].devices.push({ ...newData });\n        selectHardwareList(newHardwareList);\n        selectHardwareInfoFun(newData);\n        setMenuNum(\"1\");\n      },\n    });\n  };\n\n  useEffect(() => {\n    let newData = [];\n    _.forIn(_.find(hardwareList, [\"type\", \"biggie\"]).devices, (item) => {\n      if (item.mac.indexOf(\"/\") === -1) {\n        newData.push(item);\n      }\n    });\n    setBiggieList(newData);\n    return () => { };\n  }, []);\n\n  return (\n    <>\n      <Layout className=\"mergePage\">\n        <Header className=\"mergeHeaderBox\">\n          <span className=\"headerTitle\">\n            {confirmType ? \"Scales Combined As One\" : \"Combine Scales\"}\n          </span>\n        </Header>\n        <Content className=\"combineContentBox\">\n          <div>\n            <div className=\"tipTitleBox\">\n              {!confirmType ? (\n                <span>\n                  Select the scales you'd\n                  <br />\n                  like to combine\n                </span>\n              ) : (\n                <span>\n                  These two scales are now combined.\n                  <br />\n                  Please give this combination a name\n                </span>\n              )}\n            </div>\n            {confirmType ? (\n              <div className=\"asOneCardBox\">\n                <Space>\n                  {_.map(checkHardwareList, (item, index) => {\n                    return (\n                      <Card className=\"asOneCard\">\n                        <Meta\n                          avatar={<Avatar src={scaleImage} size={53} />}\n                          description={\n                            <div style={{ display: \"grid\" }}>\n                              <span>Device Name:{item.name}</span>\n                              <span>\n                                {item.deviceType === \"biggie\"\n                                  ? \"Biggie Pro Scale\"\n                                  : \"Biggie Home Scale\"}\n                              </span>\n                              <span>SN:{item.mac}</span>\n                            </div>\n                          }\n                        />\n                      </Card>\n                    );\n                  })}\n                </Space>\n                <div className=\"acOneImageBox\">\n                  <img src={combinedscales} />\n                </div>\n              </div>\n            ) : (\n              <div className=\"selectScalesBox\">\n                <div>\n                  {_.map(biggieList, (item, index) => {\n                    return (\n                      <Card\n                        className=\"cardBox\"\n                        hoverable\n                        onClick={() => onClick(`${index}`, item)}\n                        id={`${index}`}\n                        key={index}\n                      >\n                        <div className=\"cardBodyBox\">\n                          <Meta\n                            avatar={<Avatar src={scaleImage} size={53} />}\n                            description={\n                              <div style={{ display: \"grid\" }}>\n                                <span>Device Name:{item.name}</span>\n                                <span>\n                                  {item.deviceType === \"biggie\"\n                                    ? \"Biggie Pro Scale\"\n                                    : \"Biggie Home Scale\"}\n                                </span>\n                                <span>SN:{item.mac}</span>\n                              </div>\n                            }\n                          />\n                          <CheckCircleFilled\n                            id={`${\"icon\" + index}`}\n                            style={{\n                              color: \"#5cbbe0\",\n                              fontSize: \"20px\",\n                              display: \"none\",\n                            }}\n                          />\n                        </div>\n                      </Card>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {confirmType ? (\n              <>\n                <div className=\"inputBox\">\n                  <Input\n                    placeholder=\"Combined Scale Name\"\n                    className=\"inputName\"\n                    maxLength={25}\n                    onChange={saveChangeName}\n                  />\n                </div>\n                <div className=\"scalesBtnBox\">\n                  <Button\n                    type=\"primary\"\n                    className=\"scalesBtn\"\n                    shape=\"round\"\n                    onClick={() => startMeasuring()}\n                  >\n                    Save & Start Measuring\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <Space className=\"scalesBtnBox\">\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => setMenuNum(\"AddDevice\")}\n                >\n                  Add New Scale\n                </Button>\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => onChangeScales()}\n                >\n                  Combine Scales\n                </Button>\n              </Space>\n            )}\n          </div>\n        </Content>\n      </Layout>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n    userMessage: state.userReduce,\n  }),\n  {\n    setMenuNum,\n    selectHardwareInfoFun,\n    selectHardwareList,\n  }\n)(CombineScales);\n",["574","575"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\App.js",["593"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\doctorAddPet\\index.jsx",["594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx",[],["614","615"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\pet.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js",[],["616","617"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx",["618"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\UnassignModal\\UnassignModal.jsx",["619","620","621","622","623","624","625","626","627","628"],"import React, { Component } from 'react'\r\nimport { Table, Popconfirm, Modal, Input, message, Select, Spin } from \"antd\";\r\nimport './unassignModal.less'\r\nimport Draggable from \"react-draggable\";\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport {\r\n  getPetExamByDoctorId,\r\n  selectBreedBySpeciesId,\r\n  checkPatientId,\r\n  addDeskPet,\r\n  addAndSavePetExam,\r\n  deletePetExamByExamId,\r\n  listAllPetInfo\r\n} from './../../api';\r\n\r\nimport Close from \"./../../assets/img/close.png\";\r\n\r\nimport UploadImg from \"./../../utils/uploadImg/UploadImg\";\r\nimport { mTop, px, MTop } from \"../../utils/px\";\r\nimport electronStore from \"../../utils/electronStore\";\r\nimport MyModal from \"../../utils/myModal/MyModal\";\r\nimport Button from \"./../../utils/button/Button\";\r\n\r\nimport moment from \"moment\";\r\n\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\n\r\n\r\n\r\n\r\nexport default class UnassignModal extends Component {\r\n  state = {\r\n    historyData: [], //列表的数据集合\r\n    units: \"℉\",\r\n    searchText: \"\", //搜索测试记录框输入的内容\r\n    serchExamData: [], //搜索到的测量记录\r\n    seleceEmergencies: {}, //分配的这条记录里的所有内容，比如温度、id、时间等\r\n    visible: false, //nodel框是否显示\r\n    imgId: -1, //上传后返回的图像id号\r\n\r\n    assignPatientId: \"\",\r\n    assignPetName: \"\",\r\n    assignOwnerName: \"\",\r\n    assignBreed: \"\",\r\n    assignBreedId: \"\",\r\n    assignPetAge: \"\",\r\n    assignPetWeight: \"\",\r\n    assignPetId: \"\",\r\n    assignPetImgUrl: \"\",\r\n    inputDisabled: false,\r\n    breedArr: [], //猫、狗品种集合\r\n    loading: false,\r\n    disabled: true, //model是否可拖拽\r\n    search: \"\", //分配宠物搜索框\r\n    petListData: [],\r\n    searchPetList: [],\r\n    assignVisible: false, //点击assign按钮后跳出的选择宠物的弹框\r\n    selectPetId: \"\",\r\n    modalLoading: false,//控制弹窗加载\r\n    workplaceId: storage.lastWorkplaceId,\r\n    loadingPets: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n\r\n    if (this.props.assignVisible) {\r\n      this.setState({\r\n        assignVisible: this.props.assignVisible\r\n      })\r\n    }\r\n\r\n    let getBreed = electronStore.get(\"getBreed\");\r\n    if (getBreed) {\r\n      this.setState({\r\n        breedArr: getBreed,\r\n      });\r\n    }\r\n\r\n\r\n    const timer = setTimeout(() => {\r\n      this._getBreed();\r\n      clearTimeout(timer);\r\n    }, 3000);\r\n    this.gerAllPetMsg();\r\n\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log('prevProps', prevProps, prevState);\r\n    if (this.props.assignVisible !== this.state.assignVisible) {\r\n      this.setState({\r\n        assignVisible: this.props.assignVisible\r\n      })\r\n    }\r\n    if (this.props.lastWorkplaceId !== this.state.workplaceId) {\r\n      this.setState({\r\n        petListData: [],\r\n        workplaceId: this.props.lastWorkplaceId\r\n      })\r\n\r\n      this.gerAllPetMsg();\r\n\r\n    }\r\n    if (this.props.seleceEmergencies !== this.state.seleceEmergencies) {\r\n      this.setState({\r\n        seleceEmergencies: this.props.seleceEmergencies\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  //获取通过walk-In测量的信息，通过判断获取的数据中petId是否为空来展示数据\r\n  _getEmergencyHistory = () => {\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate(data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = [];\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n\r\n    getPetExamByDoctorId(storage.userId)\r\n      .then((res) => {\r\n        console.log(\"---res\", res);\r\n        if (res.flag === true) {\r\n          let datas = res.data;\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let {\r\n                petId,\r\n                examId,\r\n                userId,\r\n                petVitalTypeId,\r\n                temperature,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                memo,\r\n                clinicalDatagroupId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                createTime,\r\n                clinicalDataEntity,\r\n              } = datas[i];\r\n              let day = moment().diff(moment(createTime), \"day\");\r\n              // console.log(day);\r\n              if (day > 3) {\r\n                continue;\r\n              }\r\n\r\n              let Tem = temperature;\r\n              try {\r\n                if (clinicalDataEntity) {\r\n                  Tem = temperature || clinicalDataEntity.data0;\r\n                }\r\n              } catch (error) {\r\n                console.log(\"抛出的异常\", error);\r\n              }\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format(\"MMM DD\"),\r\n                time: moment(createTime).format(\"hh:mm A\"),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                petId,\r\n                userId,\r\n                day,\r\n              };\r\n\r\n              historys.push(str);\r\n            }\r\n          }\r\n          //把所有数据拿完后做个排序\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log(\"historyData:\", historyData);\r\n          this.setState({\r\n            historyData,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  //获取宠物类别\r\n  _getBreed = () => {\r\n    selectBreedBySpeciesId({ speciesId: 1 })\r\n      .then((res) => {\r\n        if (res.code === 0) {\r\n          let arr = [];\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n              speciesId: 1,\r\n            };\r\n\r\n            arr.push(data);\r\n          });\r\n          selectBreedBySpeciesId({ speciesId: 2 })\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                res.petlist.map((item, index) => {\r\n                  let data = {\r\n                    petSpeciesBreedId: item.petSpeciesBreedId,\r\n                    breedName: item.breedName,\r\n                    speciesId: 2,\r\n                  };\r\n                  arr.push(data);\r\n                });\r\n\r\n                console.log(\"----品种集合：\", arr);\r\n                electronStore.set(\"getBreed\", arr);\r\n                this.setState({\r\n                  breedArr: arr,\r\n                });\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  //获取所有宠物详情信息\r\n  gerAllPetMsg = () => {\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n    console.log('获取列表');\r\n    this.setState({\r\n      loadingPets: true,\r\n    })\r\n    listAllPetInfo(params)\r\n      .then((res) => {\r\n        console.log('res33: ', res);\r\n        this.setState({\r\n          loadingPets: false,\r\n        })\r\n        if (res.flag === true && res.data) {\r\n          this.setState({\r\n            petListData: res.data,\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loadingPets: false,\r\n        })\r\n        console.log(err);\r\n      })\r\n  }\r\n  _search = (value = \"\") => {\r\n    let list = this.state.historyData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let note = list[i].note ? list[i].note.toLowerCase() : \"\";\r\n      if (`${note}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      serchExamData: searchData,\r\n    });\r\n  };\r\n  _searchPet = (value = \"\") => {\r\n    let list = this.state.petListData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let name = list[i].petName ? list[i].petName.toLowerCase() : \"\";\r\n      let rfid = list[i].rfid ? list[i].rfid.toLowerCase() : \"\";\r\n      let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : \"\";\r\n\r\n      if (\r\n        `${name}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${rfid}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n      ) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchPetList: searchData,\r\n    });\r\n  };\r\n  draggleRef = React.createRef();\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n    });\r\n  };\r\n  //新增宠物取消新增事件\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignVisible: true,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      imgId: -1,\r\n    });\r\n  };\r\n  //新增宠物弹窗关闭事件\r\n  closeHandleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      search: '',\r\n      selectPetId: '',\r\n      imgId: -1,\r\n    });\r\n  }\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n      },\r\n    });\r\n  };\r\n  _select = (value, data) => {\r\n    console.log(value, data); //value的值为id\r\n    this.setState({\r\n      assignBreedId: value,\r\n      assignBreed: data.children,\r\n    });\r\n  };\r\n  _modal = () => {\r\n    let that = this;\r\n    function getPetInfoByPatientId() {\r\n      switch (storage.identity) {\r\n        case \"1\":\r\n          console.log(\"我是vetspire查找\");\r\n          break;\r\n        case \"2\":\r\n          console.log(\"我是ezyVet查找\");\r\n          let params = {\r\n            animalId: that.state.assignPatientId,\r\n            organizationId: 4,\r\n          };\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach((key) =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url =\r\n            \"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId\";\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              authorization: `Bearer ${storage.ezyVetToken}`,\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n              console.log(\"res\", res);\r\n              this.setState({\r\n                spin: false,\r\n              });\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data;\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? 1 : -1;\r\n                  });\r\n                }\r\n                console.log(petArr);\r\n\r\n                let { petId } = petArr;\r\n                // assign(petId)\r\n              } else {\r\n                //没有宠物\r\n                message.error(\"There are no pets under this patientID\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error(\"There are no pets under this patientID\");\r\n            });\r\n\r\n          break;\r\n        case \"3\":\r\n          console.log(\"我是一般医生查找\");\r\n          let datas = {\r\n            patientId: that.state.assignPatientId,\r\n            doctorId: storage.userId\r\n          }\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId\r\n          }\r\n          if (storage.lastOrganization) {\r\n            datas.organizationId = storage.lastOrganization\r\n          }\r\n          checkPatientId(datas)\r\n            .then((res) => {\r\n              if (res.flag === true) {\r\n                that.setState({\r\n                  assignPetId: that.state.assignPatientId,\r\n                });\r\n                message.success(\"This patientID will work\");\r\n              } else {\r\n                that.setState({\r\n                  assignPetId: '',\r\n                });\r\n                message.error(\"The patientID already exists\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              that.setState({\r\n                inputDisabled: false,\r\n                assignPetName: \"\",\r\n                assignOwnerName: \"\",\r\n                assignBreed: \"\",\r\n                assignBreedId: \"\",\r\n                assignPetAge: \"\",\r\n                assignPetWeight: \"\",\r\n                assignPetId: \"\",\r\n                assignPetImgUrl: \"\",\r\n              });\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    //将测量信息给分配宠物\r\n    const assignPet = () => {\r\n      let petMsg = {\r\n        petName: this.state.assignPetName,\r\n        age: this.state.assignPetAge,\r\n        petSpeciesBreedId: this.state.assignBreedId,\r\n        owner: this.state.assignOwnerName,\r\n        doctorId: storage.userId\r\n      }\r\n      if (this.state.imgId !== -1 && this.state.imgId) {\r\n        petMsg.imageId = this.state.imgId\r\n      }\r\n      if (this.state.assignPetWeight) {\r\n        petMsg.weight = parseFloat(this.state.assignPetWeight).toFixed(2)\r\n      }\r\n      if (storage.lastWorkplaceId) {\r\n        petMsg.workplaceId = storage.lastWorkplaceId\r\n      }\r\n      if (storage.lastOrganization) {\r\n        petMsg.organizationId = storage.lastOrganization\r\n      }\r\n      this.setState({\r\n        modalLoading: true,\r\n      })\r\n\r\n      addDeskPet(this.state.assignPatientId, petMsg)\r\n        .then((res) => {\r\n          if (res.flag === true) {\r\n            let parmes = {\r\n              petId: res.data.petId,\r\n              clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId,\r\n            };\r\n\r\n            addAndSavePetExam(that.state.seleceEmergencies.historyId, parmes)\r\n              .then((res) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                if (res.flag === true) {\r\n                  message.success(\"Assigned successfully\");\r\n                  this.props.success(true)\r\n\r\n                  that.setState({\r\n                    visible: false,\r\n                    assignPatientId: \"\",\r\n                    assignPetName: \"\",\r\n                    assignOwnerName: \"\",\r\n                    assignBreed: \"\",\r\n                    assignBreedId: \"\",\r\n                    assignPetAge: \"\",\r\n                    assignPetWeight: \"\",\r\n                    assignPetId: \"\",\r\n                    assignPetImgUrl: \"\",\r\n                    imgId: -1,\r\n                  });\r\n                } else {\r\n                  message.error(\"Assignment failed\");\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                console.log(err);\r\n                message.error(\"Assignment failed\");\r\n              });\r\n          } else {\r\n            this.setState({\r\n              modalLoading: false,\r\n            })\r\n            message.error('Failed to create a pet')\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            modalLoading: false,\r\n          })\r\n          console.log('err: ', err);\r\n          message.error('Failed to create a pet')\r\n        })\r\n    };\r\n    let { disabled, bounds, visible } = this.state;\r\n    let options = this.state.breedArr.map((d) => (\r\n      <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>\r\n    ));\r\n    return (\r\n\r\n      <Modal\r\n        maskClosable={false}\r\n        wrapClassName={\"web\"} //对话框外部的类名，主要是用来修改这个modal的样式的\r\n        destroyOnClose={true}\r\n        title={\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              cursor: \"move\",\r\n              height: \"30px\",\r\n              textAlign: \"center\",\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          ></div>\r\n        }\r\n        visible={visible}\r\n        onOk={this.handleOk}\r\n        onCancel={this.closeHandleCancel}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\r\n      >\r\n        <Spin spinning={this.state.modalLoading}>\r\n          <div id=\"unassignedModal\">\r\n            <div className=\"title\">\r\n              Assign <br />\r\n              Measurement to\r\n            </div>\r\n\r\n            <div className=\"addPhoto\">\r\n              <UploadImg\r\n                getImg={(val) => {\r\n                  this.setState({\r\n                    imgId: val.imageId,\r\n                  });\r\n                }}\r\n                imgUrl={this.state.assignPetImgUrl}\r\n                disable={this.state.inputDisabled}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Patient ID:</p>\r\n              <Input\r\n                value={this.state.assignPatientId}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPatientId: item.target.value,\r\n                  });\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.keyCode === 13) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                  if (e.keyCode === 27) {\r\n                    this.setState({\r\n                      assignPatientId: \"\",\r\n                    });\r\n                  }\r\n                }}\r\n                onBlur={() => {\r\n                  if (this.state.assignPatientId.length > 0) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Pet Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Owner Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignOwnerName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignOwnerName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Breed:</p>\r\n              <div className=\"infoInput\">\r\n                <Select\r\n                  disabled={this.state.inputDisabled}\r\n                  showSearch\r\n                  style={{ width: \"100%\" }}\r\n                  bordered={false}\r\n                  value={this.state.assignBreed}\r\n                  placeholder=\"Search to Select\"\r\n                  optionFilterProp=\"children\"\r\n                  listHeight={256}\r\n                  onSelect={(value, data) => this._select(value, data)}\r\n                  filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                    0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  {options}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Age:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetAge}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetAge: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Weight:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetWeight}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetWeight: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <div className=\"unit\">{`kg`}</div>\r\n            </div>\r\n\r\n            <div className=\"btnF\">\r\n              <div className=\"btn\" onClick={this.handleCancel}>\r\n                Cancel\r\n              </div>\r\n              <div\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  if (this.state.assignPatientId === '') {\r\n                    message.error('patientID can not be empty!');\r\n                  } else if (this.state.assignPetId === '') {\r\n                    message.error(\"The patientID already exists\");\r\n                  } else if (this.state.assignPatientId !== '' && this.state.assignPetId !== '') {\r\n                    assignPet();\r\n                  }\r\n                }}\r\n              >\r\n                Apportion\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    );\r\n  };\r\n  //获取当前组织所有宠物信息\r\n  _list = () => {\r\n    const { search, petListData, searchPetList } = this.state;\r\n    let data = search.length > 0 ? searchPetList : petListData;\r\n    let option = data.map((item, index) => {\r\n      let male = item.gender === 0 ? \"Female\" : \"Male\";\r\n      return (\r\n        <li\r\n          key={item.petId}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectPetId: item.petId,\r\n            });\r\n          }}\r\n        >\r\n          <div className=\"item\">\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {item.petName ? item.petName : 'unknown'}\r\n            </span>\r\n            <span\r\n              className=\"petName\"\r\n              style={{ margin: `${px(5)}px 0` }}\r\n            >{`,${item.age} yrs,`}</span>\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {male}\r\n            </span>\r\n          </div>\r\n          {this.state.selectPetId === item.petId ? (\r\n            <span className=\"search\">&#xe614;</span>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    });\r\n    return <ul>{option}</ul>;\r\n  };\r\n\r\n  render() {\r\n    let { loading, disabled, historyData, searchText, serchExamData } =\r\n      this.state;\r\n    const _del = (key, record) => {\r\n      deletePetExamByExamId(key, '')\r\n        .then(\r\n          (res) => {\r\n            if (res.flag === true) {\r\n              console.log(\"删除成功\");\r\n              const historyData = [...this.state.historyData];\r\n              console.log(historyData);\r\n              this.setState({\r\n                historyData: historyData.filter((item) => item.historyId !== key),\r\n              });\r\n            } else {\r\n              console.log(\"删除失败\");\r\n            }\r\n          }\r\n        );\r\n    };\r\n\r\n    let tableData = searchText.length > 0 ? serchExamData : historyData;\r\n\r\n    return (\r\n      <div id='unassignedModal111'>\r\n        {\r\n          this.state.assignVisible && (\r\n            <MyModal\r\n              visible={this.state.assignVisible}\r\n              element={\r\n                <div className=\"myfindOrg\">\r\n                  <div className=\"orgHeard\">\r\n                    <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                      <div\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            assignVisible: false,\r\n                            search: '',\r\n                            selectPetId: '',\r\n                          });\r\n                          this.props.onChangeVisible(false)\r\n                        }}\r\n                      >\r\n                        <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"text\"\r\n                      onMouseOver={() => {\r\n                        if (disabled) {\r\n                          this.setState({\r\n                            disabled: false,\r\n                          });\r\n                        }\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        this.setState({\r\n                          disabled: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      Assign Measurement\r\n                    </div>\r\n                    <div className=\"searchBox\">\r\n                      <Input\r\n                        placeholder=\" &#xe61b; Search Pet\"\r\n                        bordered={false}\r\n                        allowClear={true}\r\n                        value={this.state.search}\r\n                        onChange={(item) => {\r\n                          this.setState({\r\n                            search: item.target.value,\r\n                          });\r\n                          this._searchPet(item.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"list\">{this.state.loadingPets ?\r\n                    <div style={{ display: 'flex', width: '100%', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n                      <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                        <LoadingOutlined style={{ fontSize: 30, color: '#000', marginTop: mTop(-30), }} />\r\n                      </div>\r\n                      <p style={{ color: '#000' }}>\r\n                        {'loading...'}\r\n                      </p>\r\n                    </div> :\r\n                    this._list()}</div>\r\n                  <div className=\"foot\">\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          assignVisible: false,\r\n                          visible: true,\r\n                        });\r\n                        this.props.onChangeVisible(false)\r\n                      }}\r\n                    >\r\n                      <p>+Add New Pet</p>\r\n                    </div>\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        if (!this.state.selectPetId) {\r\n                          message.error(\"Please select a pet to assign\");\r\n                        } else {\r\n                          let { selectPetId, seleceEmergencies, historyData } =\r\n                            this.state;\r\n                          let parmes = {\r\n                            petId: selectPetId,\r\n                            clinicalDatagroupId:\r\n                              seleceEmergencies.clinicalDatagroupId,\r\n                          };\r\n                          console.log(\"分配的数据信息\", parmes);\r\n\r\n                          addAndSavePetExam(seleceEmergencies.historyId, parmes)\r\n                            .then((res) => {\r\n                              console.log(\"----------\", res);\r\n                              if (res.flag === true) {\r\n                                console.log(\"分配成功\");\r\n                                message.success(\"Assigned successfully\");\r\n                                this.props.success(true)\r\n\r\n                                this.setState({\r\n                                  assignVisible: false,\r\n                                });\r\n                                this.props.onChangeVisible(false)\r\n                              } else {\r\n                                message.error(\"Assignment failed\");\r\n                              }\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                              message.error(\"Assignment failed\");\r\n                            });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <p>Confirm</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                // </Spin>\r\n              }\r\n            />\r\n          )\r\n        }\r\n        {this._modal()}\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx",["629","630","631","632","633","634","635","636","637","638","639"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Button, Progress, Layout, Carousel } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport Animation_1 from \"./../../../assets/img/Animation_1.png\";\nimport Animation_2 from \"./../../../assets/img/Animation_2.png\";\nimport Animation_3 from \"./../../../assets/img/Animation_3.png\";\n// import HeaderItem from './headerItem';\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../../store/actions\";\nimport _ from \"lodash\";\nimport \"./measurement.less\";\nimport { px } from \"../../../utils/px\";\nimport electronStore from \"../../../utils/electronStore\";\n\nlet storage = window.localStorage;\nconst { Content, Header } = Layout;\n\nconst Measurement = ({ petMessage, hardwareMessage }) => {\n  let { mellaMeasureValue, mellaMeasurePart } = hardwareMessage;\n  const [percent, setPercent] = useState(0);\n  const [value, setValue] = useState(0);\n  const [timers, setTimers] = useState(0);\n  const [isHua, setIsHua] = useState(true);\n  const saveCallBack = useRef();\n  const callBack = () => {\n    const random = 1;\n    setValue(value + random);\n    setTimers(timers + random);\n  };\n\n  //圆滑里面的文字\n  const ProgressTitle = (percent) => {\n    let num = parseFloat(percent);\n    if (isHua) {\n      num = (num * 1.8 + 32).toFixed(1);\n    }\n    return (\n      <>\n        {mellaMeasurePart !== \"耳温\" ? (\n          <p className=\"ProgressTitle\">\n            {num}\n            <span className=\"symbol\">{`${isHua ? \"℉\" : \"℃\"}`}</span>\n          </p>\n        ) : (\n          <></>\n        )}\n        <p className=\"ProgressTitle\">Measuring</p>\n      </>\n    );\n  };\n  //图片切换\n  const checkImage = () => {\n    switch (timers) {\n      case 0:\n        return <img src={Animation_1} />;\n      case 1:\n        return <img src={Animation_2} />;\n      case 2:\n        return <img src={Animation_3} />;\n      case 3:\n        return <img src={Animation_3} />;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (timers > 2) {\n      setTimers(0);\n    }\n    return () => { };\n  });\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    const timer = setInterval(tick, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  useEffect(() => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (hardSet) {\n      let { isHua } = hardSet;\n      setIsHua(isHua);\n    }\n  }, []);\n\n  return (\n    <>\n      {/* <HeaderItem /> */}\n      <Content className={\"measureContentBox\"}>\n        <div style={{ marginTop: px(33) }}>\n          <Progress\n            type=\"dashboard\"\n            percent={_.round(mellaMeasureValue, 1)}\n            gapDegree={30}\n            // width={px(260)}\n            strokeWidth={\"8\"}\n            format={(percent) => ProgressTitle(percent)}\n            strokeColor={'#4C595E'}\n            className='measuringProgress'\n          />\n        </div>\n\n        {checkImage()}\n      </Content>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(Measurement);\n",["640","641"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js",["642","643"],"\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { px, mTop } from './../px'\r\nimport './mouseDiv.less'\r\n\r\n/**\r\n * \r\n * @param {string} minHeight 最小化、最大化方块的宽高 \r\n * @param {number} imgWidth 最小化、最大化图片的高度 \r\n * @returns  封装了最小化和关闭按钮，有鼠标移入、移出的动画\r\n */\r\nconst MinClose = ({ minHeight, beforeDiv, afterDiv, divClick }) => {\r\n  const [minbgc, setMinbgc] = useState('')\r\n  const [rMin, setRMin] = useState(beforeDiv)\r\n\r\n  const minMouseEnter = () => {\r\n    setMinbgc('rgba(70, 70, 70, 0.5)')\r\n    setRMin(afterDiv)\r\n  }\r\n  const minMouseLeave = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n  }\r\n  const minClock = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n    divClick()\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div id='mouseDiv'>\r\n      <div\r\n        className='min_icon'\r\n        onClick={minClock}\r\n        style={{ backgroundColor: minbgc, height: minHeight, width: minHeight }}\r\n        onMouseEnter={minMouseEnter}\r\n        onMouseLeave={minMouseLeave}\r\n      >\r\n        {rMin}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nMinClose.propTypes = {\r\n  minHeight: PropTypes.string,\r\n  imgWidth: PropTypes.number,\r\n  divClick: PropTypes.func,\r\n  afterDiv: PropTypes.func,\r\n  beforeDiv: PropTypes.func,\r\n\r\n\r\n}\r\nMinClose.defaultProps = {\r\n  minHeight: '40px',\r\n  imgWidth: px(20)\r\n\r\n}\r\n\r\nexport default MinClose",["644","645"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\unassigned\\index.jsx",["646","647","648","649","650"],"import React, { Component } from \"react\";\r\nimport { Table, Popconfirm, Modal, Input, message, Select, Spin } from \"antd\";\r\n\r\nimport Heard from \"./../../utils/heard/Heard\";\r\nimport del from \"./../../assets/images/del.png\";\r\nimport Close from \"./../../assets/img/close.png\";\r\nimport UploadImg from \"./../../utils/uploadImg/UploadImg\";\r\nimport { px, MTop } from \"./../../utils/px\";\r\nimport electronStore from \"./../../utils/electronStore\";\r\nimport MyModal from \"./../../utils/myModal/MyModal\";\r\n\r\nimport moment from \"moment\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport \"./index.less\";\r\nimport {\r\n  getPetExamByDoctorId, selectBreedBySpeciesId, listAllPetInfo, checkPatientId, addDeskPet, addAndSavePetExam, deletePetExamByExamId\r\n} from './../../api'\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\n\r\nexport default class Unassigned extends Component {\r\n  state = {\r\n    historyData: [], //列表的数据集合\r\n    units: \"℉\",\r\n    searchText: \"\", //搜索测试记录框输入的内容\r\n    serchExamData: [], //搜索到的测量记录\r\n    seleceEmergencies: {}, //分配的这条记录里的所有内容，比如温度、id、时间等\r\n    visible: false, //nodel框是否显示\r\n    imgId: -1, //上传后返回的图像id号\r\n\r\n    assignPatientId: \"\",\r\n    assignPetName: \"\",\r\n    assignOwnerName: \"\",\r\n    assignBreed: \"\",\r\n    assignBreedId: \"\",\r\n    assignPetAge: \"\",\r\n    assignPetWeight: \"\",\r\n    assignPetId: \"\",\r\n    assignPetImgUrl: \"\",\r\n    inputDisabled: false,\r\n    breedArr: [], //猫、狗品种集合\r\n    loading: false,\r\n    disabled: true, //model是否可拖拽\r\n    search: \"\", //分配宠物搜索框\r\n    petListData: [],\r\n    searchPetList: [],\r\n    assignVisible: false, //点击assign按钮后跳出的选择宠物的弹框\r\n    selectPetId: \"\",\r\n    modalLoading: false,//控制弹窗加载\r\n  };\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"big\");\r\n    let getBreed = electronStore.get(\"getBreed\");\r\n    if (getBreed) {\r\n      this.setState({\r\n        breedArr: getBreed,\r\n      });\r\n    }\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n    this._getEmergencyHistory();\r\n    const timer = setTimeout(() => {\r\n      this._getBreed();\r\n      clearTimeout(timer);\r\n    }, 3000);\r\n    this.gerAllPetMsg();\r\n    // let list = electronStore.get(\"doctorExam\");\r\n    // this.setState({\r\n    //   petListData: list || [],\r\n    // });\r\n  }\r\n  componentWillUnmount() {\r\n    message.destroy();\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    this.setState({});\r\n  };\r\n  //获取通过walk-In测量的信息，通过判断获取的数据中petId是否为空来展示数据\r\n  _getEmergencyHistory = () => {\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate(data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = [];\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    getPetExamByDoctorId(storage.userId)\r\n      .then((res) => {\r\n        console.log(\"---res\", res);\r\n        if (res.flag === true) {\r\n          let datas = res.data;\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let {\r\n                petId,\r\n                examId,\r\n                userId,\r\n                petVitalTypeId,\r\n                temperature,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                memo,\r\n                clinicalDatagroupId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                createTime,\r\n                clinicalDataEntity,\r\n              } = datas[i];\r\n              let day = moment().diff(moment(createTime), \"day\");\r\n              // console.log(day);\r\n              if (day > 3) {\r\n                continue;\r\n              }\r\n\r\n              let Tem = temperature;\r\n              try {\r\n                if (clinicalDataEntity) {\r\n                  Tem = temperature || clinicalDataEntity.data0;\r\n                }\r\n              } catch (error) {\r\n                console.log(\"抛出的异常\", error);\r\n              }\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format(\"MMM DD\"),\r\n                time: moment(createTime).format(\"hh:mm A\"),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                petId,\r\n                userId,\r\n                day,\r\n              };\r\n\r\n              historys.push(str);\r\n            }\r\n          }\r\n          //把所有数据拿完后做个排序\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log(\"historyData:\", historyData);\r\n          this.setState({\r\n            historyData,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  //获取宠物类别\r\n  _getBreed = () => {\r\n    selectBreedBySpeciesId({ speciesId: 1 })\r\n      .then((res) => {\r\n        if (res.code === 0) {\r\n          let arr = [];\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n              speciesId: 1,\r\n            };\r\n\r\n            arr.push(data);\r\n          });\r\n\r\n          selectBreedBySpeciesId({ speciesId: 2 })\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                res.petlist.map((item, index) => {\r\n                  let data = {\r\n                    petSpeciesBreedId: item.petSpeciesBreedId,\r\n                    breedName: item.breedName,\r\n                    speciesId: 2,\r\n                  };\r\n                  arr.push(data);\r\n                });\r\n\r\n                console.log(\"----品种集合：\", arr);\r\n                electronStore.set(\"getBreed\", arr);\r\n                this.setState({\r\n                  breedArr: arr,\r\n                });\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  //获取所有宠物详情信息\r\n  gerAllPetMsg = () => {\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n    listAllPetInfo(params)\r\n      .then((res) => {\r\n        console.log('res: ', res);\r\n        if (res.flag === true && res.data) {\r\n          this.setState({\r\n            petListData: res.data,\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  _search = (value = \"\") => {\r\n    let list = this.state.historyData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let note = list[i].note ? list[i].note.toLowerCase() : \"\";\r\n      if (`${note}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      serchExamData: searchData,\r\n    });\r\n  };\r\n  //搜索宠物\r\n  _searchPet = (value = \"\") => {\r\n    let list = this.state.petListData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let name = list[i].petName ? list[i].petName.toLowerCase() : \"\";\r\n      let rfid = list[i].rfid ? list[i].rfid.toLowerCase() : \"\";\r\n      let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : \"\";\r\n\r\n      if (\r\n        `${name}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${rfid}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n      ) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchPetList: searchData,\r\n    });\r\n  };\r\n  draggleRef = React.createRef();\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n    });\r\n  };\r\n  //新增宠物取消新增事件\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignVisible: true,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      imgId: -1,\r\n    });\r\n  };\r\n  //新增宠物弹窗关闭事件\r\n  closeHandleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      search: '',\r\n      selectPetId: '',\r\n      imgId: -1,\r\n    });\r\n  }\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n      },\r\n    });\r\n  };\r\n  _select = (value, data) => {\r\n    console.log(value, data); //value的值为id\r\n    this.setState({\r\n      assignBreedId: value,\r\n      assignBreed: data.children,\r\n    });\r\n  };\r\n  _modal = () => {\r\n    let that = this;\r\n    function getPetInfoByPatientId() {\r\n      switch (storage.identity) {\r\n        case \"1\":\r\n          console.log(\"我是vetspire查找\");\r\n          break;\r\n        case \"2\":\r\n          console.log(\"我是ezyVet查找\");\r\n          let params = {\r\n            animalId: that.state.assignPatientId,\r\n            organizationId: 4,\r\n          };\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach((key) =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url =\r\n            \"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId\";\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              authorization: `Bearer ${storage.ezyVetToken}`,\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n              console.log(\"res\", res);\r\n              this.setState({\r\n                spin: false,\r\n              });\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data;\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? 1 : -1;\r\n                  });\r\n                }\r\n                console.log(petArr);\r\n\r\n                let { petId } = petArr;\r\n                // assign(petId)\r\n              } else {\r\n                //没有宠物\r\n                message.error(\"There are no pets under this patientID\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error(\"There are no pets under this patientID\");\r\n            });\r\n\r\n          break;\r\n\r\n        case \"3\":\r\n          console.log(\"我是一般医生查找\");\r\n          let datas = {\r\n            patientId: that.state.assignPatientId,\r\n            doctorId: storage.userId\r\n          }\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId\r\n          }\r\n          if (storage.lastOrganization) {\r\n            datas.organizationId = storage.lastOrganization\r\n          }\r\n\r\n          checkPatientId(datas)\r\n            .then((res) => {\r\n              if (res.flag === true) {\r\n                that.setState({\r\n                  assignPetId: that.state.assignPatientId,\r\n                });\r\n                message.success(\"This patientID will work\");\r\n              } else {\r\n                that.setState({\r\n                  assignPetId: '',\r\n                });\r\n                message.error(\"The patientID already exists\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              that.setState({\r\n                inputDisabled: false,\r\n                assignPetName: \"\",\r\n                assignOwnerName: \"\",\r\n                assignBreed: \"\",\r\n                assignBreedId: \"\",\r\n                assignPetAge: \"\",\r\n                assignPetWeight: \"\",\r\n                assignPetId: \"\",\r\n                assignPetImgUrl: \"\",\r\n              });\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    //将测量信息给分配宠物\r\n    const assignPet = () => {\r\n      let petMsg = {\r\n        petName: this.state.assignPetName,\r\n        age: this.state.assignPetAge,\r\n        petSpeciesBreedId: this.state.assignBreedId,\r\n        owner: this.state.assignOwnerName,\r\n        doctorId: storage.userId\r\n      }\r\n      if (this.state.imgId !== -1 && this.state.imgId) {\r\n        petMsg.imageId = this.state.imgId\r\n      }\r\n      if (this.state.assignPetWeight) {\r\n        petMsg.weight = parseFloat(this.state.assignPetWeight).toFixed(2)\r\n      }\r\n      if (storage.lastWorkplaceId) {\r\n        petMsg.workplaceId = storage.lastWorkplaceId\r\n      }\r\n      if (storage.lastOrganization) {\r\n        petMsg.organizationId = storage.lastOrganization\r\n      }\r\n      this.setState({\r\n        modalLoading: true,\r\n      })\r\n      addDeskPet(this.state.assignPatientId, petMsg)\r\n        .then((res) => {\r\n          if (res.flag === true) {\r\n            let parmes = {\r\n              petId: res.data.petId,\r\n              clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId,\r\n            };\r\n            addAndSavePetExam(that.state.seleceEmergencies.historyId, parmes)\r\n              .then((res) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                if (res.flag === true) {\r\n                  message.success(\"Assigned successfully\");\r\n                  that._getEmergencyHistory();\r\n                  that.setState({\r\n                    visible: false,\r\n                    assignPatientId: \"\",\r\n                    assignPetName: \"\",\r\n                    assignOwnerName: \"\",\r\n                    assignBreed: \"\",\r\n                    assignBreedId: \"\",\r\n                    assignPetAge: \"\",\r\n                    assignPetWeight: \"\",\r\n                    assignPetId: \"\",\r\n                    assignPetImgUrl: \"\",\r\n                    imgId: -1,\r\n                  });\r\n                } else {\r\n                  message.error(\"Assignment failed\");\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                console.log(err);\r\n                message.error(\"Assignment failed\");\r\n              });\r\n          } else {\r\n            this.setState({\r\n              modalLoading: false,\r\n            })\r\n            message.error('Failed to create a pet')\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            modalLoading: false,\r\n          })\r\n          console.log('err: ', err);\r\n          message.error('Failed to create a pet')\r\n        })\r\n    };\r\n    let { disabled, bounds, visible } = this.state;\r\n    let options = this.state.breedArr.map((d) => (\r\n      <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>\r\n    ));\r\n    return (\r\n\r\n      <Modal\r\n        maskClosable={false}\r\n        wrapClassName={\"web1\"} //对话框外部的类名，主要是用来修改这个modal的样式的\r\n        destroyOnClose={true}\r\n        title={\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              cursor: \"move\",\r\n              height: \"30px\",\r\n              textAlign: \"center\",\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          ></div>\r\n        }\r\n        visible={visible}\r\n        onOk={this.handleOk}\r\n        onCancel={this.closeHandleCancel}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\r\n      >\r\n        <Spin spinning={this.state.modalLoading}>\r\n          <div id=\"unassignedModal\">\r\n            <div className=\"title\">\r\n              Assign <br />\r\n              Measurement to\r\n            </div>\r\n\r\n            <div className=\"addPhoto\">\r\n              <UploadImg\r\n                getImg={(val) => {\r\n                  this.setState({\r\n                    imgId: val.imageId,\r\n                  });\r\n                }}\r\n                imgUrl={this.state.assignPetImgUrl}\r\n                disable={this.state.inputDisabled}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Patient ID:</p>\r\n              <Input\r\n                value={this.state.assignPatientId}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPatientId: item.target.value,\r\n                  });\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.keyCode === 13) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                  if (e.keyCode === 27) {\r\n                    this.setState({\r\n                      assignPatientId: \"\",\r\n                    });\r\n                  }\r\n                }}\r\n                onBlur={() => {\r\n                  if (this.state.assignPatientId.length > 0) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Pet Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Owner Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignOwnerName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignOwnerName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Breed:</p>\r\n              <div className=\"infoInput\">\r\n                <Select\r\n                  disabled={this.state.inputDisabled}\r\n                  showSearch\r\n                  style={{ width: \"100%\" }}\r\n                  bordered={false}\r\n                  value={this.state.assignBreed}\r\n                  placeholder=\"Search to Select\"\r\n                  optionFilterProp=\"children\"\r\n                  listHeight={256}\r\n                  onSelect={(value, data) => this._select(value, data)}\r\n                  filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                    0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  {options}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Age:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetAge}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetAge: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Weight:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetWeight}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetWeight: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <div className=\"unit\">{`kg`}</div>\r\n            </div>\r\n\r\n            <div className=\"btnF\">\r\n              <div className=\"btn\" onClick={this.handleCancel}>\r\n                Cancel\r\n              </div>\r\n              <div\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  if (this.state.assignPatientId === '') {\r\n                    message.error('patientID can not be empty!');\r\n                  } else if (this.state.assignPetId === '') {\r\n                    message.error(\"The patientID already exists\");\r\n                  } else if (this.state.assignPatientId !== '' && this.state.assignPetId !== '') {\r\n                    assignPet();\r\n                  }\r\n                }}\r\n              >\r\n                Apportion\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    );\r\n  };\r\n  //获取当前组织所有宠物信息\r\n  _list = () => {\r\n    const { search, petListData, searchPetList } = this.state;\r\n    let data = search.length > 0 ? searchPetList : petListData;\r\n    let option = data.map((item, index) => {\r\n      let male = item.gender === 0 ? \"Female\" : \"Male\";\r\n      return (\r\n        <li\r\n          key={item.petId}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectPetId: item.petId,\r\n            });\r\n          }}\r\n        >\r\n          <div className=\"item\">\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {item.petName ? item.petName : 'unknown'}\r\n            </span>\r\n            <span\r\n              className=\"petName\"\r\n              style={{ margin: `${px(5)}px 0` }}\r\n            >{`,${item.age} yrs,`}</span>\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {male}\r\n            </span>\r\n          </div>\r\n          {this.state.selectPetId === item.petId ? (\r\n            <span className=\"search\">&#xe614;</span>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    });\r\n    return <ul>{option}</ul>;\r\n  };\r\n\r\n  render() {\r\n    let { loading, disabled, historyData, searchText, serchExamData } =\r\n      this.state;\r\n    const _del = (key, record) => {\r\n      deletePetExamByExamId(key, '')\r\n        .then(\r\n          (res) => {\r\n            if (res.flag === true) {\r\n              console.log(\"删除成功\");\r\n              const historyData = [...this.state.historyData];\r\n              console.log(historyData);\r\n              this.setState({\r\n                historyData: historyData.filter((item) => item.historyId !== key),\r\n              });\r\n            } else {\r\n              console.log(\"删除失败\");\r\n            }\r\n          }\r\n        );\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        key: \"operation\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: `${px(8)}px 0`,\r\n              }}\r\n            >\r\n              <Popconfirm\r\n                title=\"Sure to delete?\"\r\n                onConfirm={() => _del(record.historyId, record)}\r\n              >\r\n                <img src={del} alt=\"\" width={25} style={{ marginRight: \"8px\" }} />\r\n              </Popconfirm>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Time\",\r\n        dataIndex: \"time\",\r\n        key: \"time\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \" Pet Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Species\",\r\n        dataIndex: \"species\",\r\n        key: \"species\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Note\",\r\n        dataIndex: \"note\",\r\n        key: \"note\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"assign\",\r\n        key: \"assign\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div\r\n              className=\"assign\"\r\n              style={{\r\n                fontSize: px(16),\r\n                paddingTop: px(5),\r\n                paddingBottom: px(5),\r\n              }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  assignVisible: true,\r\n                  seleceEmergencies: record,\r\n                });\r\n              }}\r\n            >\r\n              Assign\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    let tableData = searchText.length > 0 ? serchExamData : historyData;\r\n    return (\r\n      <div id=\"unassigned\">\r\n        <Heard />\r\n        <div className=\"body\">\r\n          <div\r\n            className=\"title\"\r\n            style={{\r\n              marginTop: px(30),\r\n              fontSize: px(30),\r\n              marginBottom: px(40),\r\n            }}\r\n          >\r\n            Unassigned Measurements\r\n          </div>\r\n          <div className=\"input\" style={{ marginBottom: px(10) }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"&#xe628; Search Pet Name or Description\"\r\n              value={this.state.searchText}\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  searchText: e.target.value,\r\n                });\r\n                this._search(e.target.value);\r\n              }}\r\n              onKeyUp={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  this._search();\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  this.setState({\r\n                    searchText: \"\",\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <div\r\n              className=\"searchBtn\"\r\n              style={{ height: px(35), fontSize: px(18) }}\r\n              onClick={this._search}\r\n            >\r\n              <p>Search</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table\">\r\n            <Table\r\n              style={{\r\n                width: \"95%\",\r\n                height: MTop(550),\r\n              }}\r\n              loading={loading}\r\n              columns={columns}\r\n              dataSource={tableData}\r\n              rowKey={(columns) => columns.historyId}\r\n              pagination={false}\r\n              scroll={{\r\n                y: MTop(500),\r\n              }}\r\n            />\r\n          </div>\r\n          {this._modal()}\r\n        </div>\r\n        {\r\n          this.state.assignVisible && (\r\n            <MyModal\r\n              visible={this.state.assignVisible}\r\n              element={\r\n                <div className=\"myfindOrg\">\r\n                  <div className=\"orgHeard\">\r\n                    <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                      <div\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            assignVisible: false,\r\n                            search: '',\r\n                            selectPetId: '',\r\n                          });\r\n                        }}\r\n                      >\r\n                        <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"text\"\r\n                      onMouseOver={() => {\r\n                        if (disabled) {\r\n                          this.setState({\r\n                            disabled: false,\r\n                          });\r\n                        }\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        this.setState({\r\n                          disabled: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      Assign Measurement\r\n                    </div>\r\n                    <div className=\"searchBox\">\r\n                      <Input\r\n                        placeholder=\" &#xe61b; Search Pet\"\r\n                        bordered={false}\r\n                        allowClear={true}\r\n                        value={this.state.search}\r\n                        onChange={(item) => {\r\n                          this.setState({\r\n                            search: item.target.value,\r\n                          });\r\n                          this._searchPet(item.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"list\">{this._list()}</div>\r\n                  <div className=\"foot\">\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          assignVisible: false,\r\n                          visible: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <p>+Add New Pet</p>\r\n                    </div>\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        if (!this.state.selectPetId) {\r\n                          message.error(\"Please select a pet to assign\");\r\n                        } else {\r\n                          let { selectPetId, seleceEmergencies, historyData } =\r\n                            this.state;\r\n                          let parmes = {\r\n                            petId: selectPetId,\r\n                            clinicalDatagroupId:\r\n                              seleceEmergencies.clinicalDatagroupId,\r\n                          };\r\n                          console.log(\"分配的数据信息\", parmes);\r\n                          addAndSavePetExam(seleceEmergencies.historyId, parmes)\r\n                            .then((res) => {\r\n                              console.log(\"----------\", res);\r\n                              if (res.flag === true) {\r\n                                console.log(\"分配成功\");\r\n                                message.success(\"Assigned successfully\");\r\n                                let arr = [];\r\n                                for (let i = 0; i < historyData.length; i++) {\r\n                                  const element = historyData[i];\r\n                                  if (\r\n                                    seleceEmergencies.clinicalDatagroupId !==\r\n                                    element.clinicalDatagroupId\r\n                                  ) {\r\n                                    arr.push(element);\r\n                                  }\r\n                                }\r\n\r\n                                this.setState({\r\n                                  assignVisible: false,\r\n                                  historyData: arr,\r\n                                });\r\n                              } else {\r\n                                message.error(\"Assignment failed\");\r\n                              }\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                              message.error(\"Assignment failed\");\r\n                            });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <p>Confirm</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                // </Spin>\r\n              }\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx",["651","652","653","654","655","656","657","658","659"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js",[],["660","661"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\user.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx",["662","663","664","665","666"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { } from \"../../store/actions\";\nimport {\n  Layout,\n  Button,\n  Form,\n  Input,\n  Radio,\n  Col,\n  Row,\n  Checkbox,\n  Select,\n  message,\n} from \"antd\";\n\nimport changePhoto from '../../assets/images/changePhoto.png';\n\nimport { px, mTop } from \"../../utils/px\";\nimport countryList from '../../utils/areaCode/country';\nimport Avatar from '../../components/avatar/Avatar'\nimport { getUserInfoByUserId, update } from '../../api'\n\nimport PropTypes from 'prop-types';\nimport _ from \"lodash\";\n\nimport \"./index.less\";\n\nconst MyAccount = ({ bodyHeight }) => {\n  let storage = window.localStorage;\n  const [form] = Form.useForm();\n  const { Option } = Select;\n  const [imageId, setImageId] = useState();\n  const [petUrl, setPetUrl] = useState();\n  const [imgUrl, setImgUrl] = useState();\n  const [country, setCountry] = useState('US');\n  const [countryArr, setCountryArr] = useState();\n  const [infoData, setInfoDate] = useState();\n\n  const onFinish = (values) => {\n    let array = ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'];\n    for (let index = 0; index < _.size(values.domain); index++) {\n      array[_.toNumber(values.domain[index])] = '1';\n    }\n    let reg = new RegExp(',', \"g\");\n    let res = _.toString(array).replace(reg, '');\n    let data = {\n      ...values,\n      imageId: imageId,\n      domain: res,\n      userId: storage.userId\n    };\n    update(data)\n      .then((res) => {\n        if (res.msg === 'success') {\n          message.success('The user information is updated successfully');\n        } else {\n          message.error('Description Failed to update user information');\n        }\n      })\n  };\n\n  useEffect(() => {\n    let arr = countryList.map(item => item.locale)\n    arr.sort(function (a, b) {\n      return a.localeCompare(b)\n    })\n    setCountryArr(arr);\n  }, []);\n\n  useEffect(() => {\n    getUserInfoByUserId(storage.userId)\n      .then((res) => {\n        if (res.flag === true) {\n          let newData = {\n            ...res.data,\n            domain: _.toArray(res.data.domain)\n\n          }\n          let arr = [];\n          for (let index = 0; index < _.size(newData.domain); index++) {\n            if (newData.domain[index] === '1') {\n              arr.push(_.toString(index));\n            }\n          }\n          newData.domain = arr;\n          form.setFieldsValue(newData);\n          setInfoDate(newData);\n          setImgUrl(res.data?.userImage?.url);\n        }\n      })\n  }, [])\n\n  return (\n    <Layout className=\"myAccountBox\" style={{ height: bodyHeight }}>\n      <div className=\"headerContentBox\" style={{ background: \"#fff\", position: 'relative' }}>\n        <div style={{\n          height: '100%',\n          backgroundColor: '#FFFFFF',\n          borderBottom: '2px solid #979797',\n          display: 'flex'\n        }}>\n          <span className=\"headerTitle\">My Account</span>\n        </div>\n      </div>\n      <div>\n        <Form\n          form={form}\n          layout=\"vertical\"\n          onFinish={onFinish}\n          className=\"accountForm\"\n        >\n          <Row>\n            <Col flex={1} className=\"leftColBox\">\n              <Form.Item valuePropName=\"fileList\" name=\"imageId\" className=\"imageFormItem\">\n                <div style={{ display: 'grid', justifyItems: 'center', alignItems: 'center' }}>\n                  <Avatar\n                    init={\n                      <div className=\"ciral\">\n                        <img src={imgUrl ? imgUrl : changePhoto} alt=\"\" id=\"touxiang\" height=\"300px\" />\n                        <p style={{ fontSize: px(14), height: mTop(35) }}>Change Photo</p>\n                      </div>\n                    }\n                    getinfo={(val) => {\n                      if (val) {\n                        setImageId(val);\n                      }\n\n                    }}\n                    getAllInfo={(val) => {\n                      if (val.url) {\n                        setPetUrl(val.url);\n                      }\n                    }}\n                  />\n                </div>\n              </Form.Item>\n              <Form.Item label=\"Email\" name=\"email\">\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n            </Col>\n            <Col flex={1} className=\"rightColBox\">\n              <Form.Item label=\"FirstName\" name=\"firstName\">\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item label=\"LastName\" name=\"lastName\">\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item label=\"Phone\" name=\"phone\">\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n            </Col>\n          </Row>\n          <Form.Item className=\"addressFormItem\" label=\"Address\">\n            <div style={{ display: 'flex' }}>\n              <Form.Item name=\"address1\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"address1\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"address2\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"address2\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"city\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"city\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"state\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"state\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"zipcode\" style={{ marginRight: px(16) }}>\n                <Input placeholder=\"zipcode\" bordered={false} className=\"accountInput\" />\n              </Form.Item>\n              <Form.Item name=\"country\">\n                <Select\n                  showSearch\n                  style={{ width: 100, borderBottom: '1px solid rgba(216,216,216,1)' }}\n                  bordered={false}\n                  optionFilterProp=\"children\"\n                  defaultValue=\"US\"\n                  // onChange={onChange}\n                  onSelect={(val) => { setCountry(val) }}\n                  filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\n                // open\n                // dropdownClassName=\"addressSelectBox\"\n                >\n                  {_.map(countryArr, (item, index) => (\n                    <Option key={index} value={item}>{item}</Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </div>\n          </Form.Item>\n          <Form.Item className=\"expertiseFormItem\" label=\"Areas of Expertise\" name=\"domain\">\n            <Checkbox.Group>\n              <Row>\n                <Col span={6}>\n                  <Checkbox\n                    value='0'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Dogs\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='1'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Cats\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='2'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Small Pets\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='3'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Nutrition\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='4'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Surgery\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='5'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Zoo\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='6'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Wildlife\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='7'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Cardiology\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='8'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Neurology\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='9'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Anaesthesia\n                  </Checkbox>\n                </Col>\n                <Col span={6}>\n                  <Checkbox\n                    value='10'\n                    style={{\n                      lineHeight: '32px',\n                    }}\n                  >\n                    Other\n                  </Checkbox>\n                </Col>\n              </Row>\n            </Checkbox.Group>\n          </Form.Item>\n          <Form.Item className=\"btnFormItem\">\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n              <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" size=\"large\" style={{ width: px(260) }}>Save Changes</Button>\n            </div>\n          </Form.Item>\n        </Form>\n      </div>\n    </Layout>\n  );\n}\n\nMyAccount.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n\nexport default connect(\n  (state) => ({}),\n)(MyAccount);\n",["667","668"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\Biggie.jsx",["669","670","671","672"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["673","674","675","676","677","678","679","680"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\home\\index.jsx",["681","682"],"import React, { Component, } from 'react'\r\nimport {\r\n  Button,\r\n  message\r\n} from 'antd';\r\n\r\nimport temporaryStorage from '../../utils/temporaryStorage'\r\nimport { px, mTop, win, timerFun } from '../../utils/px'\r\nimport MinClose from '../../utils/minClose/MinClose';\r\nimport { version } from '../../utils/appversion';\r\n\r\nimport logo from '../../assets/images/mella.png'\r\n\r\nimport './index.less';\r\n\r\nlet storage = window.localStorage;\r\n//定义变量:连续点击了几次logo\r\nlet logoClick = 0;\r\n//定义变量:点击logo的时间\r\nlet logoTime = 0;\r\nexport default class Home extends Component {\r\n  state = {\r\n    imgurl: '',\r\n    size: { width: 0, height: 0 }\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    timerFun()\r\n    ipcRenderer.send('close-loading-window', 1)\r\n    ipcRenderer.send('small', win())\r\n    storage.measurepatientId = '';\r\n    temporaryStorage.logupVetInfo = {}\r\n    this.test()\r\n  }\r\n  resize = (e) => {\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    window.removeEventListener('resize', this.resize);\r\n\r\n  }\r\n  test = async () => {\r\n    console.log('---', window.navigator.serial);\r\n    // const port = await navigator.serial.requestPort();\r\n  }\r\n\r\n\r\n  _createAccount = () => {\r\n    this.props.history.push('/uesr/logUp/VetPrifile')\r\n\r\n    // this.props.history.push('/uesr/logUp/JoinOrganizationByOption')\r\n\r\n  }\r\n  _test = () => {\r\n    console.log('点击');\r\n    console.log(navigator);\r\n    console.log(navigator.userAgent);\r\n    console.log('---------------------------');\r\n  }\r\n  _openUtils = () => {\r\n    console.log('点击来了', logoClick);\r\n    if (new Date() - logoTime > 500) {\r\n      logoClick = 0;\r\n      logoTime = new Date();\r\n\r\n    } else {\r\n      logoClick++;\r\n      logoTime = new Date();\r\n      if (logoClick >= 8) {\r\n        logoClick = 0;\r\n\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('openDevTools', true)\r\n      }\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <div id=\"home\">\r\n        {/* <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                /> */}\r\n        <div className=\"daohang\" style={{ paddingTop: px(10), paddingRight: px(20) }}>\r\n          <MinClose />\r\n        </div>\r\n        <div className='flex refresh' style={{ alignItems: 'flex-end', paddingRight: px(20) }}>\r\n          <div className='flex' style={{ flexDirection: 'row', paddingTop: px(20), paddingRight: px(18), color: '#700B33', cursor: 'pointer' }}>\r\n\r\n            V{version}\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"heard\" >\r\n          <div\r\n\r\n            onClick={this._openUtils}\r\n            className=\"logo\"\r\n\r\n          >\r\n            <img\r\n              src={logo}\r\n              alt=\"\"\r\n            // style={{ marginTop: mTop(100), marginBottom: mTop(100), width: px(300) }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"button\" style={{ marginBottom: px(25) }}>\r\n          <Button\r\n            // style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={() => { this.props.history.push('/page11') }}\r\n            className=\"siginInBtn\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n        </div>\r\n        <p className=\"text\" style={{ marginTop: mTop(5), marginBottom: mTop(5) }}>New to Mella?</p>\r\n        <div className=\"create\" style={{ marginBottom: mTop(20), marginTop: px(25) }}>\r\n          <Button\r\n            // style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._createAccount}\r\n            className=\"createBtn\"\r\n          >\r\n            Create an Account\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\connectWorkplace\\index.jsx",["683","684","685","686"],"import React, { Component } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport Heart from \"../../utils/heard/Heard\";\r\nimport { px } from \"../../utils/px\";\r\nimport \"./index.less\";\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class ConnectWorkplace extends Component {\r\n  state = {\r\n    orgArr: [],\r\n    workplaceJson: {},\r\n    connectionKey: \"\",\r\n    selectOrgId: -1,\r\n    selectRoleId: \"\",\r\n  };\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    ipcRenderer.send(\"big\");\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n\r\n    let userWorkplace = [];\r\n    try {\r\n      userWorkplace = JSON.parse(storage.userWorkplace) || [];\r\n    } catch (error) {\r\n      console.log(\"字符串转对象失败\", error);\r\n    }\r\n    let orgArr = [],\r\n      workplaceJson = {};\r\n    // console.log('存储的工作场所和组织id', storage.lastWorkplaceId, storage.lastOrganization);\r\n    for (let i = 0; i < userWorkplace.length; i++) {\r\n      let element = userWorkplace[i];\r\n      // console.log('每一项的值：', element);\r\n      if (element.organizationEntity && element.workplaceEntity) {\r\n        let { organizationEntity, workplaceEntity, roleId } = element;\r\n        const { name, organizationId, connectionKey } = organizationEntity;\r\n        const { workplaceName, workplaceId } = workplaceEntity;\r\n\r\n        if (`${workplaceId}` === storage.lastWorkplaceId) {\r\n          this.setState({\r\n            workplaceName,\r\n            workplaceId: storage.lastWorkplaceId,\r\n          });\r\n        }\r\n\r\n        if (`${organizationId}` === storage.lastOrganization) {\r\n          this.setState({\r\n            organizationName: name,\r\n            organizationId: storage.lastOrganization,\r\n            selectOrgId: storage.lastOrganization,\r\n          });\r\n        }\r\n\r\n        let orgRepeatFlog = false,\r\n          repeatFlogNum = -1;\r\n        for (let j = 0; j < orgArr.length; j++) {\r\n          if (orgArr[j].organizationId === organizationId) {\r\n            orgRepeatFlog = true;\r\n            repeatFlogNum = j;\r\n            break;\r\n          }\r\n        }\r\n        if (orgRepeatFlog) {\r\n          let workplace = {\r\n            workplaceName,\r\n            workplaceId,\r\n          };\r\n          let id = orgArr[repeatFlogNum].organizationId;\r\n          workplaceJson[`${id}`] = workplace;\r\n        } else {\r\n          let connectKey = connectionKey || \"\";\r\n          let json = {\r\n            organizationId,\r\n            organizationName: name,\r\n            connectionKey: connectKey,\r\n            roleId,\r\n          };\r\n          let workplace = [\r\n            {\r\n              workplaceName,\r\n              workplaceId,\r\n            },\r\n          ];\r\n          workplaceJson[`${organizationId}`] = workplace;\r\n\r\n          orgArr.push(json);\r\n        }\r\n      }\r\n    }\r\n    // console.log('-----转换后的组织信息--', orgArr, workplaceJson);\r\n    this.setState({\r\n      orgArr,\r\n      workplaceJson,\r\n      connectionKey: storage.connectionKey,\r\n      selectRoleId: storage.roleId,\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    // console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    this.setState({});\r\n  };\r\n\r\n  render() {\r\n    let { orgArr, selectOrgId } = this.state;\r\n    let option = orgArr.map((item, index) => {\r\n      let bac =\r\n        `${selectOrgId}` === `${item.organizationId}` ? \"#e1206d\" : \"#fff\";\r\n      let col = `${selectOrgId}` === `${item.organizationId}` ? \"#fff\" : \"#000\";\r\n      return (\r\n        <li\r\n          key={`${item.organizationId}`}\r\n          style={{ background: bac, color: col }}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectOrgId: item.organizationId,\r\n              connectionKey: item.connectionKey,\r\n              selectRoleId: item.roleId,\r\n            });\r\n            // storage.roleId = item.roleId\r\n          }}\r\n        >\r\n          <div className=\"org\" style={{ fontSize: px(16) }}>\r\n            {item.organizationName}\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div id=\"connectworkplace\">\r\n        <div className=\"heard\">\r\n          <Heart />\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"top\">\r\n            <div className=\"title flex\">\r\n              <p style={{ fontSize: px(24), fontWeight: \"800\" }}>\r\n                Connected Workplaces\r\n              </p>\r\n              <div\r\n                className=\"addbtn flex\"\r\n                style={{ height: px(45) }}\r\n                onClick={() => this.props.history.push(\"/menuOptions/NewOrg\")}\r\n              >\r\n                <p>+ Add Workplace</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"tablebox\">\r\n              <div className=\"table\" style={{ height: px(220) }}>\r\n                <ul>{option}</ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"center\"></div>\r\n          <div className=\"footer flex\">\r\n            <div\r\n              className=\"saveBtn flex\"\r\n              style={{ height: px(45) }}\r\n              onClick={() => {\r\n                let {\r\n                  selectOrgId,\r\n                  selectRoleId,\r\n                  connectionKey,\r\n                  workplaceJson,\r\n                } = this.state;\r\n                // console.log({ selectOrgId, selectRoleId, connectionKey, workplaceJson });\r\n                storage.roleId = selectRoleId;\r\n                storage.lastOrganization = selectOrgId;\r\n                try {\r\n                  let key = parseInt(selectOrgId);\r\n                  let lastWorkplaceId = workplaceJson[key][0].workplaceId;\r\n                  // console.log(lastWorkplaceId);\r\n                  storage.lastWorkplaceId = lastWorkplaceId;\r\n                } catch (error) { }\r\n                storage.connectionKey = connectionKey;\r\n                // this.props.history.replace(\"/menuOptions/settings\");\r\n                this.props.history.goBack();\r\n              }}\r\n            >\r\n              <p style={{ fontSize: px(18) }}>Save Changes</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <MyModal visible={this.state.loading} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",["687","688"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\hardWareTypeUI.jsx",["689"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\swabPetEar\\index.jsx",["690","691","692","693","694"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport DogLeftEar from \"../../../../assets/img/DogLeftEar.png\";\nimport DogRightEar from \"../../../../assets/img/DogRightEar.png\";\nimport CatLeftEar from \"../../../../assets/img/CatLeftEar.png\";\nimport CatRightEar from \"../../../../assets/img/CatRightEar.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\n\nconst SwabPetEar = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  let {\n    petSpeciesBreedId,\n  } = petMessage;\n  const [value, setValue] = useState(1);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const imagetypeEvent = () => {\n    if (value === 1) {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatRightEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogRightEar} alt=\"\" />;\n      } else {\n        return <img src={DogRightEar} alt=\"\" />;\n      }\n    } else {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatLeftEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogLeftEar} alt=\"\" />;\n      } else {\n        return <img src={DogLeftEar} alt=\"\" />;\n      }\n    }\n  }\n\n  const onClick = () => {\n    if (value === 1) {\n      setValue(2);\n    } else {\n      cutPageType('experimentalPage');\n    }\n  }\n\n  // useEffect(() => {\n  //   imagetypeEvent();\n  // },[value])\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          Swab Pet's Ear\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {imagetypeEvent()}\n      </div>\n      <div className=\"radioBox\">\n        <Radio.Group onChange={onChange} value={value}>\n          <Radio value={1}>Right Ear</Radio>\n          <Radio value={2}>Left Ear</Radio>\n        </Radio.Group>\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>Next</Button>\n      </div>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(SwabPetEar);\n",["695","696"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\editParent\\index.jsx",["697","698","699","700","701","702"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\EzyVet.js",["703","704"],"/**\r\n * @file EzyVet.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/EzyVet 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del, patch } from '../ezyvetApi'\r\nimport { biggieBaseUrl } from '../../config/config'\r\nconst baseURL = `${biggieBaseUrl}/EzyVet`\r\n\r\n\r\n\r\n\r\nexport const ezyvetGetPetLatestExam = (params) => {\r\n    return get(`${baseURL}/ezyvetGetPetLatestExam`, params)\r\n}\r\n\r\n\r\nexport const ezyvetUpdateWeight = (paramId, params) => {\r\n    return patch(`${baseURL}/ezyvetUpdateWeight/${paramId}`, params)\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\experimental\\index.jsx",["705","706","707","708","709","710","711"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport swirl from \"../../../../assets/img/swirl.png\";\nimport BreakSeal from \"../../../../assets/img/Break-Seal.png\";\nimport label from \"../../../../assets/img/label.png\";\nimport Incubator from \"../../../../assets/img/Incubator.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\nconst ExperimentalPage = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  const [value, setValue] = useState(1);\n\n  const cutTitle = () => {\n    switch (value) {\n      case 1:\n        return (<>{`${'Swirl sample in'}`}<br />{`${'solution'}`}</>);\n      case 2:\n        return (<>{`${'Break off stem and'}`}<br />{`${'seal collection tube'}`} </>);\n      case 3:\n        return (<>{`${'Affix label to'}`}<br />{`${'collection tube'}`} </>);\n      case 4:\n        return (<>{`${'Place tube in'}`}<br />{`${'incubator'}`} </>);\n      default:\n        break;\n    }\n  }\n\n  const cutImage = () => {\n    switch (value) {\n      case 1:\n        return <img src={swirl} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 2:\n        return <img src={BreakSeal} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 3:\n        return <img src={label} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 4:\n        return <img src={Incubator} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      default:\n        break;\n    }\n  }\n\n  const onClick = () => {\n    if (value !== 4) {\n      setValue(value + 1)\n    } else {\n      cutPageType('timerPage');\n    }\n  }\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          {cutTitle()}\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {cutImage()}\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>{value !== 4 ? 'Next' : 'Start Timer'}</Button>\n      </div>\n    </>\n  );\n\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(ExperimentalPage);\n",["712","713"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx",["714","715"],"import React, {\r\n} from 'react';\r\nimport { Input } from 'antd';\r\nimport _ from 'lodash';\r\nimport './numericInput.less'\r\nimport { useEffect } from 'react';\r\n\r\nconst NumericInput = (props) => {\r\n    const { value, onChange, getInput, onClick,onKey,index } = props;\r\n\r\n    //输入框输入\r\n    const handleChange = (e) => {\r\n        const { value: inputValue } = e.target;\r\n        const reg = /^-?\\d*(\\.\\d*)?$/;\r\n\r\n        if (reg.test(inputValue) || inputValue === '' || inputValue === '-') {\r\n            onChange(inputValue);\r\n        }\r\n    }\r\n    //失去焦点\r\n    const handleBlur = () => {\r\n        let valueTemp = value;\r\n        if (`${value}`.charAt(`${value}`.length - 1) === '.' || value === '-') {\r\n            valueTemp = value.slice(0, -1);\r\n        }\r\n        onChange(`${valueTemp}`.replace(/0*(\\d+)/, '$1'));\r\n    };\r\n    //输入框点击事件\r\n    const handleClick = () => {\r\n        onClick();\r\n    }\r\n    //修改样式\r\n    let bordercolor = onKey ===index ?'#e1206d':'#d9d9d9';\r\n\r\n\r\n    return (\r\n        <Input\r\n            {...props}\r\n            className='inputNum'\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            maxLength={25}\r\n            ref={getInput}\r\n            onClick={handleClick}\r\n            style={{borderColor:bordercolor}}\r\n        />\r\n    );\r\n\r\n};\r\n\r\nexport default NumericInput;\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\help\\index.jsx",["716","717","718","719","720","721"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  message,\r\n  Button,\r\n  Upload,\r\n} from \"antd\";\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nimport { px } from '../../utils/px';\r\nimport Heard from '../../utils/heard/Heard'\r\n\r\nimport using from '../../assets/images/using.png'\r\nimport measuring from '../../assets/images/measuring.png'\r\nimport unassigned from '../../assets/images/unassigned.png'\r\nimport adding from '../../assets/images/adding.png'\r\nimport email from '../../assets/images/email.png'\r\nimport phone from '../../assets/images/phone.png'\r\nimport complaint from '../../assets/images/complaint.png'\r\n\r\nimport { useHistory } from 'react-router-dom';\r\nimport _ from 'lodash';\r\n\r\nimport './index.less';\r\nimport { savefeedback } from '../../api';\r\n\r\nlet storage = window.localStorage;\r\nconst Help = () => {\r\n  const [form] = Form.useForm();\r\n  const { TextArea } = Input;\r\n  let list = [\r\n    {\r\n      img: using,\r\n      title: 'Using the app'\r\n    }, {\r\n      img: measuring,\r\n      title: 'Measuring with Mella'\r\n    }, {\r\n      img: unassigned,\r\n      title: 'Unassigned Readings'\r\n    },\r\n    {\r\n      img: adding,\r\n      title: 'Adding New Users'\r\n    },\r\n  ];\r\n  let num = 150 / list.length;\r\n  let mar = num + 'px';\r\n  let history = useHistory();\r\n  const [opinionsVisible, setOpinionsVisible] = useState(false);//弹窗显隐\r\n  const [loading, setLoading] = useState(false);\r\n  const [imageUrl, setImageUrl] = useState();\r\n  const [fileList, setFileList] = useState([]);//图片组\r\n\r\n  const changeFenBianLv = (e) => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big');\r\n  }\r\n  //关闭弹窗\r\n  const handleCancel = () => {\r\n    setOpinionsVisible(false);\r\n    setFileList([]);\r\n  };\r\n  //提交bug优化信息\r\n  const onFinish = (e) => {\r\n    setLoading(true);\r\n    let imageIds = []\r\n    _.map(fileList, (item) => {\r\n      imageIds.push(item.response.data.imageId)\r\n    })\r\n    let data = {\r\n      ...e,\r\n      imageIds: _.toString(imageIds),\r\n      userId: storage.userId\r\n    };\r\n    savefeedback(data)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.msg === 'success') {\r\n          setOpinionsVisible(false);\r\n          message.success('Submit Successfully~');\r\n        } else {\r\n          message.success('submit Failure!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.success('submit Failure!');\r\n      })\r\n\r\n\r\n  };\r\n  //提交异常\r\n  const onFinishFailed = (e) => {\r\n    message.error('Please fill in the correct information!');\r\n  };\r\n  /**\r\n * 上传文件前校验\r\n */\r\n  const beforeNormFile = (e) => {\r\n    // 检查图片类型\r\n    const isJPG = e.type === 'image/jpeg';\r\n    const isPNG = e.type === 'image/png';\r\n    const isBMP = e.type === 'image/bmp';\r\n    const isGIF = e.type === 'image/gif';\r\n    const isWEBP = e.type === 'image/webp';\r\n    const isPic = isJPG || isPNG || isBMP || isGIF || isWEBP;\r\n    //文件大小校验\r\n    const isLt2M = e.size / 1024 / 1024 < 4;\r\n    if (!isPic) {\r\n      message.error(`${e.name} not a picture file`);\r\n    } else if (!isLt2M && isPic) {\r\n      message.error(`${e.name}Upload is not allowed if the limit exceeds 4M~`);\r\n    }\r\n    return isPic && isLt2M ? true : Upload.LIST_IGNORE;\r\n  };\r\n  /**\r\n   * Base64\r\n   */\r\n  const getBase64 = (img, callback) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result));\r\n    reader.readAsDataURL(img);\r\n  };\r\n  /**\r\n * 文件上传后处理\r\n */\r\n  const handleChange = async (info) => {\r\n    console.log('info: ', info);\r\n    if (info.file.status === 'done') {\r\n      setFileList(info.fileList);\r\n    }\r\n    if (info.file.status === 'removed') {\r\n      setFileList(info.fileList);\r\n    }\r\n\r\n    // getBase64(info.file.originFileObj, (imageUrl) => {\r\n    //   setLoading(false);\r\n    //   setImageUrl(imageUrl);\r\n    // });\r\n  };\r\n  //添加图片按钮\r\n  const uploadButton = (\r\n    <div>\r\n      <PlusOutlined />\r\n      <div\r\n        style={{\r\n          marginTop: 8,\r\n        }}\r\n      >\r\n        Upload\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('big')\r\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\r\n    ipcRenderer.on('changeFenBianLv', changeFenBianLv)\r\n    return (() => {\r\n      let ipcRenderer = window.electron.ipcRenderer\r\n      ipcRenderer.removeListener('changeFenBianLv', changeFenBianLv)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    console.log('fileList', fileList);\r\n  }, [fileList])\r\n\r\n  return (\r\n    <>\r\n      <div id=\"help\">\r\n        <div className=\"heard\">\r\n          <Heard />\r\n        </div>\r\n        <div className=\"body\">\r\n          <div className=\"title\">How can we help you?</div>\r\n          <div className=\"input\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Describe you issue     &#xe63f;\"\r\n            />\r\n          </div>\r\n          <div className=\"list\">\r\n            <ul>\r\n              {list.map((data, index) => (\r\n                <li key={index}>\r\n                  <>\r\n                    <img src={data.img} alt=\"\" />\r\n                    <p>{data.title}</p>\r\n                  </>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"popularArticles\">\r\n            <div className=\"text\">Popular Articles</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n          <div className=\"popularArticles tutorials\">\r\n            <div className=\"text\">Tutorials</div>\r\n            <span className=\" iconfont  icon-jiantou3 dropDown\" />\r\n          </div>\r\n          <div className=\"time\">\r\n            <p style={{ fontSize: px(24) }}>Still need help?</p>\r\n            <div className=\"line\" style={{ height: px(6) }}></div>\r\n            <p style={{ fontSize: px(24) }}>Monday - Friday: 9am - 5pm (ET)</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"foot\">\r\n          <div className=\"l\">\r\n            <img src={complaint} alt=\"\" />\r\n            <div className=\"text\">Make a Suggestion</div>\r\n            <p\r\n              onClick={() => { setOpinionsVisible(true) }}\r\n            >\r\n              Submit Opinions\r\n            </p>\r\n          </div>\r\n          <div className=\"l\">\r\n            <img src={email} alt=\"\" />\r\n            <div className=\"text\">Drop us a line</div>\r\n            <a href=\"mailto:support@mella.ai\"\r\n              onClick={(e) => { }}\r\n            >support@mella.ai</a>\r\n          </div>\r\n          <div className=\"l r\">\r\n            <img src={phone} alt=\"\" />\r\n            <div className=\"text\">Bark at Us!</div>\r\n            <div className=\"text\">201.977.6411</div>\r\n          </div>\r\n        </div>\r\n        <Modal\r\n          visible={opinionsVisible}\r\n          destroyOnClose={true}\r\n          centered\r\n          maskClosable={false}\r\n          width={700}\r\n          onCancel={handleCancel}\r\n          className=\"opinionsModal\"\r\n          footer={[]}\r\n        >\r\n          <Form\r\n            form={form}\r\n            layout=\"vertical\"\r\n            onFinish={onFinish}\r\n            onFinishFailed={onFinishFailed}\r\n            autoComplete=\"off\"\r\n          >\r\n            <Form.Item\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input title!',\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"Clear titles can be verified more quickly\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"description\"\r\n              label=\"Description\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: 'Please input description!',\r\n\r\n                },\r\n                {\r\n                  min: 15,\r\n                  message: 'No less than 15 words'\r\n                }\r\n              ]}\r\n            >\r\n              <TextArea\r\n                showCount\r\n                maxLength={500}\r\n                autoSize={{\r\n                  minRows: 3,\r\n                  maxRows: 5,\r\n                }}\r\n                placeholder=\"Please describe your proposed use scenario and your optimization/improvement plan in detail (no less than 15 words)\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"imageIds\"\r\n              label={`${'Related pictures or screenshots' + '(' + fileList.length + '/' + 5 + ')'}`}\r\n            // valuePropName=\"fileList\"\r\n            >\r\n              <Upload\r\n                accept=\"image/*\"\r\n                name=\"img\"\r\n                action=\"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/image/uploadImage\"\r\n                beforeUpload={beforeNormFile}\r\n                onChange={handleChange}\r\n                withCredentials={true}\r\n                listType=\"picture-card\"\r\n              >\r\n                {fileList.length >= 5 ? null : uploadButton}\r\n              </Upload>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <div className='bugSubmitBox'>\r\n                <Button type=\"primary\" htmlType=\"submit\" size='large' loading={loading} block>\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default Help;\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\mellarecord.js",["722"],"/**\r\n * @file mellarecord.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/mellarecord 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del } from '../api'\r\nimport { mellaserverBaseUrl } from '../../config/config'\r\nconst baseURL = `${mellaserverBaseUrl}/mellarecord`\r\n\r\n\r\n/**\r\n * @dec 增加硬件记录并更新ota硬件版本\r\n * @param {*} params \r\n * @returns \r\n */\r\nexport const saveRecord = (params) => {\r\n    return postJson(`${baseURL}/saveRecord`, params)\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dec 获取硬件的最新版本信息\r\n * @param {str} hardWareType 硬件类型 <br/>\r\n * 硬件种类:分成mellahome1,mellahome2,mellapro1(6针机器),mellapro(7针机器)\r\n * @returns \r\n */\r\nexport const getInfoOfLatestDevice = (hardWareType) => {\r\n    return get(`${baseURL}/getInfoOfLatestDevice?type=${hardWareType}`)\r\n}","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\config\\config.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx",["723","724","725","726","727","728","729","730","731","732","733"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\PetsUI.jsx",["734","735","736","737","738","739","740","741","742","743"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\petAndParents\\index.jsx",["744","745","746","747","748","749"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\px.jsx",["750","751","752","753","754","755"],"/**\r\n *\r\n * 获取屏幕分辨率宽高\r\n * let width = parseInt(window.screen.width)\r\n * let height = parseInt(window.screen.height)\r\n *\r\n * 获取应用窗口大小\r\n * document.documentElement.clientHeight\r\n * document.documentElement.clientWidth\r\n */\r\n//\r\n\r\n//\r\n\r\nconst devWidth = 1920;\r\nconst devHeight = 1040;\r\n\r\nlet size = window.screen\r\n// console.log('-------------------------分辨率的大小-----------------', size);\r\nlet width = parseInt(window.screen.availWidth);\r\nlet height = parseInt(window.screen.availHeight);\r\nif (width < height) {\r\n  let a = width;\r\n  width = height;\r\n  height = a;\r\n}\r\n\r\nexport const px = (val) => {\r\n  return val\r\n  // let width = parseInt(window.screen.availWidth);\r\n  // let height = parseInt(window.screen.availHeight);\r\n\r\n\r\n\r\n  // if (width < height) {\r\n  //   let a = width;\r\n  //   width = height;\r\n  //   height = a;\r\n  // }\r\n\r\n  // return parseInt((val / devWidth) * width);\r\n};\r\n\r\nexport const mTop = (val) => {\r\n  return val\r\n  let width = parseInt(window.screen.availWidth);\r\n  let height = parseInt(window.screen.availHeight);\r\n  if (width < height) {\r\n    let a = width;\r\n    width = height;\r\n    height = a;\r\n  }\r\n\r\n  // console.log('mTop',val, parseInt(val / devHeight * height))\r\n  return parseInt((val / devHeight) * height);\r\n};\r\n\r\nexport const fs = (val) => {\r\n  let width = parseInt(window.screen.availWidth);\r\n  let height = parseInt(window.screen.availHeight);\r\n  if (width < height) {\r\n    let a = width;\r\n    width = height;\r\n    height = a;\r\n  }\r\n};\r\nexport const pX = (val) => {\r\n  let windowWidth = document.documentElement.clientWidth;\r\n  // console.log('px', window.screen,)\r\n  return parseInt((windowWidth / 650) * val);\r\n};\r\nexport const MTop = (val) => {\r\n  return val\r\n  let windowWidth = document.documentElement.clientHeight;\r\n  console.log(\"px\", windowWidth);\r\n  return parseInt((windowWidth / 375) * val);\r\n};\r\n\r\nlet windowssize = {\r\n  width: 0,\r\n  height: 0,\r\n};\r\n\r\nexport const win = () => {\r\n  let width = parseInt(window.screen.availWidth);\r\n  let height = parseInt(window.screen.availHeight);\r\n  if (width < height) {\r\n    let a = width;\r\n    width = height;\r\n    height = a;\r\n  }\r\n  // let win1 = JSON.stringify({\r\n  //   width, height\r\n  // })\r\n\r\n  return {\r\n    width: 1920,\r\n    height: 1080,\r\n  };\r\n};\r\n\r\nlet timer = null;\r\nexport const timerFun = () => {\r\n  // console.log(\"jianting1------------\");\r\n  // timer && clearInterval(timer);\r\n  // timer = setInterval(() => {\r\n  //   let width = parseInt(window.screen.availWidth);\r\n  //   let height = parseInt(window.screen.availHeight);\r\n  //   if (width < height) {\r\n  //     let a = width;\r\n  //     width = height;\r\n  //     height = a;\r\n  //   }\r\n  //   // console.log('jianting1', windowssize, { width, height });\r\n  //   if (width !== windowssize.width || height !== windowssize.height) {\r\n  //     windowssize.width = width;\r\n  //     windowssize.height = height;\r\n  //     let ipcRenderer = window.electron.ipcRenderer;\r\n  //     ipcRenderer.send(\"changeFenBianLv\", windowssize);\r\n  //   }\r\n  // }, 2000);\r\n};\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\enrolledPlan\\index.jsx",["756","757","758","759","760"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\timer\\index.jsx",["761","762","763","764","765"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx",[],["766","767"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\pet.js",["768","769","770"],"/**\r\n * @file pet.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/pet 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del, patch } from '../ezyvetApi'\r\nimport { biggieBaseUrl } from '../../config/config'\r\nconst baseURL = `${biggieBaseUrl}/pet`\r\n\r\n\r\n\r\n\r\n\r\nexport const getPetInfoByRFID = (heardSearchText, lastOrganization) => {\r\n    return get(`${baseURL}/getPetInfoByRFID/${heardSearchText}/${lastOrganization}`, '')\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\components\\linkEquipment\\index.jsx",["771","772","773","774","775","776"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\settings\\index.jsx",["777","778","779","780"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\current.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js",[],["781","782"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\workplace.js",["783"],"/**\r\n * @file pet.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/workplace 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del } from '../api'\r\nimport { mellaserverBaseUrl } from '../../config/config'\r\nconst baseURL = `${mellaserverBaseUrl}/workplace`\r\n\r\n\r\n/**\r\n * \r\n * @dec 根据组织id获取工作场所\r\n * @param {string} organizationId \r\n * @returns \r\n */\r\nexport const listAllWorkplaceByOrganizationId = (organizationId) => {\r\n    return get(`${baseURL}/listAllWorkplaceByOrganizationId/${organizationId}`, '')\r\n}\r\n\r\n\r\n/**\r\n * @dec 添加工作场所\r\n * @param {str} userId 用户id\r\n * @param {*} params \r\n * @returns \r\n */\r\n\r\nexport const addWorkplace = (userId, params) => {\r\n    return postJson(`${baseURL}/addWorkplace${userId}`, params)\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js",[],["784","785"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\organization.js",["786"],"/**\r\n * @file organization.js\r\n * @authoe 胡邵杰\r\n * @dec https://www.mellaserver.com/api/mellaserver/organization 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n *\r\n */\r\nimport { get, postJson, del } from '../api'\r\nimport { mellaserverBaseUrl } from '../../config/config'\r\nconst baseURL = `${mellaserverBaseUrl}/organization`\r\n\r\n\r\n\r\n/**\r\n * @dec  管理员获取组织下的所有医生\r\n * @param {string} lastOrganization 组织id\r\n * @param {*} params\r\n * @returns\r\n */\r\n\r\nexport const listDoctorsByAdmin = (lastOrganization, params) => {\r\n    return get(`${baseURL}/listDoctorsByAdmin/${lastOrganization}`, params)\r\n}\r\n\r\n/**\r\n * @dec 获取所有组织\r\n * @returns\r\n *\r\n */\r\nexport const listAll = () => {\r\n    return get(`${baseURL}/listAll`, '')\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dec 创建一个组织\r\n * @param {str} userId 用户id\r\n * @param {*} params\r\n * @returns\r\n */\r\nexport const addOrganization = (userId, params) => {\r\n    return postJson(`${baseURL}/addOrganization/${userId}`, params)\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\user.js",["787","788","789"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["790","791","792","793","794","795","796","797","798","799","800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  PageHeader,\r\n  Radio,\r\n  Input,\r\n  Space,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setRulerConnectStatusFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConfirmCountFun,\r\n} from \"../../../store/actions\";\r\nimport _ from \"lodash\";\r\nimport NumericInput from \"./numericInput\";\r\nimport head from \"./../../../assets/img/head.png\";\r\nimport neck from \"./../../../assets/img/neck.png\";\r\nimport upper from \"./../../../assets/img/upper.png\";\r\nimport lower from \"./../../../assets/img/lower.png\";\r\nimport Full from \"./../../../assets/img/Full.png\";\r\nimport body from \"./../../../assets/img/body.png\";\r\nimport catHead from \"./../../../assets/img/catHead.png\";\r\nimport catNeck from \"./../../../assets/img/catNeck.png\";\r\nimport catUpper from \"./../../../assets/img/catUpper.png\";\r\nimport catLower from \"./../../../assets/img/catLower.png\";\r\nimport catFull from \"./../../../assets/img/catFull.png\";\r\nimport catBody from \"./../../../assets/img/catBody.png\";\r\nimport redjinggao from './../../../assets/img/redjinggao.png'\r\nimport \"./scanPet.less\";\r\nimport { px } from \"../../../utils/px\";\r\nimport MyModal from '../../../utils/myModal/MyModal'\r\nimport { updatePetInfo1 } from \"../../../api\";\r\n\r\nconst { Content, Header } = Layout;\r\nconst ScanPet = ({\r\n  petMessage,\r\n  petDetailInfoFun,\r\n  ruleMessage,\r\n  setRulerConfirmCountFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConnectStatusFun\r\n}) => {\r\n  let { petSpeciesBreedId, patientId, petId } = petMessage;\r\n  let { rulerMeasureValue, rulerConfirmCount, rulerUnit, rulerConnectStatus, selectHardwareInfo, receiveBroadcastHardwareInfo } = ruleMessage;\r\n  let storage = window.localStorage;\r\n  const [radioValue, setRadioValue] = useState(\"in\");\r\n  const [inputIndex, setInputIndex] = useState(-1);\r\n  const [visible, setVisible] = useState(false);\r\n  const [carouselIndex, setCarouselIndex] = useState(1);\r\n  const [headValue, setHeadValue] = useState(\"\"); //接收输入框的值\r\n  const [neckValue, setNeckValue] = useState(\"\"); //接收输入框的值\r\n  const [upperValue, setUpperValue] = useState(\"\"); //接收输入框的值\r\n  const [lowerValue, setLowerValue] = useState(\"\"); //接收输入框的值\r\n  const [torsoValue, setTorsoValue] = useState(\"\"); //接收输入框的值\r\n  const [bodyValue, setBodyValue] = useState(\"\"); //接收输入框的值\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectPetDetail, setSelectPetDetail] = useState({})\r\n  let newData = [];\r\n\r\n\r\n  //保存input组\r\n  const inputEl = (data) => {\r\n    newData.push(data);\r\n  };\r\n\r\n  //切换聚焦事件\r\n  const switchFocus = () => {\r\n    let num = inputIndex;\r\n    if (num === 3) {\r\n      setCarouselIndex(2);\r\n    }\r\n    if (num < 5) {\r\n      setInputIndex(num + 1);\r\n    }\r\n  };\r\n\r\n  //结束事件\r\n  const finishScan = () => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Whether To Save Data\",\r\n      top: \"40vh\",\r\n      onOk: saveData,\r\n    });\r\n  };\r\n  //保存数据\r\n  const saveData = () => {\r\n    const newNum = (val) => {\r\n      if (val) {\r\n        if (rulerUnit === \"in\") {\r\n          return parseFloat((parseFloat(val) * 2.54).toFixed(1));\r\n        } else {\r\n          return parseFloat(val);\r\n        }\r\n      } else {\r\n        return \"\";\r\n      }\r\n    };\r\n    let prams = {\r\n      l2rarmDistance: newNum(bodyValue) || null,\r\n      lowerTorsoCircumference: newNum(lowerValue) || null,\r\n      upperTorsoCircumference: newNum(upperValue) || null,\r\n      neckCircumference: newNum(neckValue) || null,\r\n      h2tLength: newNum(headValue) || null,\r\n      torsoLength: newNum(torsoValue) || null,\r\n    };\r\n\r\n    updatePetInfo1(storage.userId, petId, prams)\r\n\r\n      .then((res) => {\r\n        if (res.flag) {\r\n          petDetailInfoFun({\r\n            ...petMessage,\r\n            ...prams,\r\n          });\r\n          message.success(\"Uploaded successfully\");\r\n        } else {\r\n          message.error(\"upload failed\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"update failed\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //判断是猫还是狗还是其他\r\n  const checkPetType = () => {\r\n    //0是猫，1是狗，或者petSpeciesBreedId为空判断图片为狗\r\n    if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\r\n      return 0;\r\n    } else if (\r\n      petSpeciesBreedId === 12001 ||\r\n      _.inRange(petSpeciesBreedId, 136, 456)\r\n    ) {\r\n      return 1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  //切换图片\r\n  const changeImage = () => {\r\n    switch (inputIndex) {\r\n      case 0:\r\n        return checkPetType() === 1 ? (\r\n          <img src={head} />\r\n        ) : (\r\n          <img src={catHead} />\r\n        );\r\n      case 1:\r\n        return checkPetType() === 1 ? (\r\n          <img src={neck} />\r\n        ) : (\r\n          <img src={catNeck} />\r\n        );\r\n      case 2:\r\n        return checkPetType() === 1 ? (\r\n          <img src={upper} />\r\n        ) : (\r\n          <img src={catUpper} />\r\n        );\r\n      case 3:\r\n        return checkPetType() === 1 ? (\r\n          <img src={lower} />\r\n        ) : (\r\n          <img src={catLower} />\r\n        );\r\n      case 4:\r\n        return checkPetType() === 1 ? (\r\n          <img src={Full} />\r\n        ) : (\r\n          <img src={catFull} />\r\n        );\r\n      case 5:\r\n        return checkPetType() === 1 ? (\r\n          <img src={body} />\r\n        ) : (\r\n          <img src={catBody} />\r\n        );\r\n      default:\r\n        return checkPetType() === 1 ? (\r\n          <img src={body} />\r\n        ) : (\r\n          <img src={catBody} />\r\n        );\r\n    }\r\n  };\r\n\r\n  //点击输入框事件\r\n  const clickInput = (index) => {\r\n    setInputIndex(index);\r\n  };\r\n\r\n  //单位转化\r\n  const changeUnit = (value) => {\r\n    if (rulerUnit === \"cm\") {\r\n      return _.round(value * 2.54, 1);\r\n    } else if (rulerUnit === \"in\") {\r\n      return _.floor(_.divide(value, 2.54), 2);\r\n    }\r\n  };\r\n\r\n  //单选框改变事件\r\n  const changeRadio = (e) => {\r\n    setRadioValue(e.target.value);\r\n    setRulerUnitFun(e.target.value);\r\n  };\r\n\r\n  //小圆点点击事件\r\n  const clickPoint = (index) => {\r\n    if (index === 1) {\r\n      setCarouselIndex(1);\r\n    } else {\r\n      setCarouselIndex(2);\r\n    }\r\n  };\r\n  //切换宠物获取到长度信息,对数据根据界面单位进行换算\r\n  const petLengthDataConvert = (val) => {\r\n    if (!val) {\r\n      return \"\";\r\n    } else {\r\n      if (rulerUnit === \"cm\") {\r\n        return val.toFixed(1);\r\n      } else {\r\n        return _.floor(_.divide(val, 2.54), 2);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //监听点击界面中下一步按钮\r\n  useEffect(() => {\r\n    console.log(\"inputIndex\", inputIndex);\r\n\r\n    if (inputIndex < 6 && inputIndex !== -1) {\r\n      newData[inputIndex].focus();\r\n    }\r\n    if (inputIndex === 6) {\r\n      finishScan();\r\n    }\r\n\r\n    return () => { };\r\n  }, [inputIndex]);\r\n\r\n  useEffect(() => {\r\n    if (carouselIndex === 2) {\r\n      setInputIndex(4);\r\n    } else if (carouselIndex === 1) {\r\n      setInputIndex(0);\r\n    }\r\n    return () => { };\r\n  }, [carouselIndex]);\r\n\r\n  //监听用户点击了硬件中的下一步按钮\r\n  useEffect(() => {\r\n    if (inputIndex === -1) {\r\n      setInputIndex(0);\r\n    } else if (inputIndex < 6) {\r\n      setInputIndex(inputIndex + 1);\r\n    }\r\n    if (inputIndex === 3) {\r\n      setCarouselIndex(2);\r\n    }\r\n    return () => { };\r\n  }, [rulerConfirmCount]);\r\n\r\n  // useEffect(() => {\r\n  //   setRulerConnectStatusFun('disconnected')\r\n  // },[])\r\n\r\n\r\n  //监听切换了宠物\r\n  useEffect(() => {\r\n    // if (rulerConnectStatus === 'isMeasuring') {\r\n    //   setShowModal(true);\r\n    // } else {\r\n    setInputIndex(0);\r\n    setCarouselIndex(1);\r\n    let {\r\n      torsoLength,\r\n      l2rarmDistance,\r\n      upperTorsoCircumference,\r\n      lowerTorsoCircumference,\r\n      h2tLength,\r\n      neckCircumference,\r\n    } = petMessage;\r\n\r\n    setBodyValue(petLengthDataConvert(l2rarmDistance));\r\n    setLowerValue(petLengthDataConvert(lowerTorsoCircumference));\r\n    setUpperValue(petLengthDataConvert(upperTorsoCircumference));\r\n    setNeckValue(petLengthDataConvert(neckCircumference));\r\n    setHeadValue(petLengthDataConvert(h2tLength));\r\n    setTorsoValue(petLengthDataConvert(torsoLength));\r\n    // }\r\n    return () => { };\r\n  }, [petId]);\r\n  //监听用户点击了硬件中的下一步按钮和拉动皮尺\r\n  useEffect(() => {\r\n    if (inputIndex < 6) {\r\n      let { deviceType, mac } = selectHardwareInfo\r\n\r\n      if (deviceType === 'tape') {\r\n        if (mac === '45264' || (mac && receiveBroadcastHardwareInfo.deviceType === 'tape' && receiveBroadcastHardwareInfo.macId === mac)) {\r\n\r\n          switch (inputIndex) {\r\n            case 0:\r\n              setHeadValue(rulerMeasureValue);\r\n              break;\r\n            case 1:\r\n              setNeckValue(rulerMeasureValue);\r\n              break;\r\n            case 2:\r\n              setUpperValue(rulerMeasureValue);\r\n              break;\r\n            case 3:\r\n              setLowerValue(rulerMeasureValue);\r\n              break;\r\n            case 4:\r\n              setTorsoValue(rulerMeasureValue);\r\n              break;\r\n            case 5:\r\n              setBodyValue(rulerMeasureValue);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          if (rulerUnit !== radioValue) {\r\n            setRadioValue(rulerUnit);\r\n            setHeadValue(headValue && changeUnit(headValue));\r\n            setNeckValue(neckValue && changeUnit(neckValue));\r\n            setUpperValue(upperValue && changeUnit(upperValue));\r\n            setLowerValue(lowerValue && changeUnit(lowerValue));\r\n            setTorsoValue(torsoValue && changeUnit(torsoValue));\r\n            setBodyValue(bodyValue && changeUnit(bodyValue));\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n  }, [rulerConfirmCount, rulerMeasureValue]);\r\n  // //监听单位改变\r\n  // useEffect(() => {\r\n  //   let { deviceType, mac } = selectHardwareInfo\r\n\r\n  //   console.log('=====', receiveBroadcastHardwareInfo.macId);\r\n  //   if (deviceType === 'tape') {\r\n  //     if (mac === '45264' || (mac && receiveBroadcastHardwareInfo.deviceType === 'tape' && receiveBroadcastHardwareInfo.macId === mac)) {\r\n  //       console.log('初始化====', rulerUnit, radioValue);\r\n\r\n  //       setRadioValue(rulerUnit);\r\n  //       setHeadValue(headValue && changeUnit(headValue));\r\n  //       setNeckValue(neckValue && changeUnit(neckValue));\r\n  //       setUpperValue(upperValue && changeUnit(upperValue));\r\n  //       setLowerValue(lowerValue && changeUnit(lowerValue));\r\n  //       setTorsoValue(torsoValue && changeUnit(torsoValue));\r\n  //       setBodyValue(bodyValue && changeUnit(bodyValue));\r\n\r\n  //     }\r\n  //   }\r\n\r\n  // }, [rulerUnit]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Content className=\"scanContentBox\">\r\n        <div className=\"scanImageBox\">{changeImage()}</div>\r\n        {/*选择单位框*/}\r\n        <Radio.Group\r\n          value={radioValue}\r\n          onChange={changeRadio}\r\n          buttonStyle=\"solid\"\r\n          className=\"selectLengthUnit\"\r\n        >\r\n          <Radio.Button\r\n            value=\"in\"\r\n            style={{\r\n              background: radioValue === \"in\" ? \"#e1206d\" : \"#fff\",\r\n              borderColorRight: radioValue === \"in\" ? \"#e1206d\" : \"#fff\",\r\n              borderRadius: \"20px\",\r\n              borderTopRightRadius: \"0px\",\r\n              borderBottomRightRadius: \"0px\",\r\n            }}\r\n          >\r\n            in\r\n          </Radio.Button>\r\n          <Radio.Button\r\n            value=\"cm\"\r\n            className=\"cmButton\"\r\n            style={{\r\n              background: radioValue === \"cm\" ? \"#e1206d\" : \"#fff\",\r\n              borderColorRight: radioValue === \"cm\" ? \"#e1206d\" : \"#fff\",\r\n              borderRadius: \"20px\",\r\n              borderTopLeftRadius: \"0px\",\r\n              borderBottomLeftRadius: \"0px\",\r\n            }}\r\n          >\r\n            cm\r\n          </Radio.Button>\r\n        </Radio.Group>\r\n        <div className=\"slideshowBox\" style={{ height: px(100) }}>\r\n          <div className=\"scollInputGroup\">\r\n            {/*第一列输入框*/}\r\n            <Input.Group\r\n              className=\"inputGroupItem\"\r\n              style={{ display: carouselIndex === 1 ? \"\" : \"none\" }}\r\n            >\r\n              <Space className=\"inputItemBox\">\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Head Circumference</p>\r\n                  <NumericInput\r\n                    value={headValue}\r\n                    onChange={setHeadValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(0)}\r\n                    index={inputIndex}\r\n                    onKey={0}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Neck Circumference</p>\r\n                  <NumericInput\r\n                    value={neckValue}\r\n                    onChange={setNeckValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(1)}\r\n                    index={inputIndex}\r\n                    onKey={1}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Upper Torso Circumference</p>\r\n                  <NumericInput\r\n                    value={upperValue}\r\n                    onChange={setUpperValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(2)}\r\n                    index={inputIndex}\r\n                    onKey={2}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Lower Torso Circumference</p>\r\n                  <NumericInput\r\n                    value={lowerValue}\r\n                    onChange={setLowerValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(3)}\r\n                    index={inputIndex}\r\n                    onKey={3}\r\n                  />\r\n                </div>\r\n              </Space>\r\n            </Input.Group>\r\n            {/*第二列输入框*/}\r\n            <Input.Group\r\n              className=\"inputGroupItem\"\r\n              style={{ display: carouselIndex === 2 ? \"\" : \"none\" }}\r\n            >\r\n              <Space className=\"inputItemBox\">\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Full Torso Length</p>\r\n                  <NumericInput\r\n                    value={torsoValue}\r\n                    onChange={setTorsoValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(4)}\r\n                    index={inputIndex}\r\n                    onKey={4}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Full Body Length</p>\r\n                  <NumericInput\r\n                    value={bodyValue}\r\n                    onChange={setBodyValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(5)}\r\n                    index={inputIndex}\r\n                    onKey={5}\r\n                  />\r\n                </div>\r\n              </Space>\r\n            </Input.Group>\r\n          </div>\r\n        </div>\r\n\r\n        {/*小圆点 */}\r\n        <div className=\"dotBox\">\r\n          <ul className=\"dotList\">\r\n            <li>\r\n              <Button\r\n                className=\"dotItem\"\r\n                onClick={() => clickPoint(1)}\r\n                style={{\r\n                  background: carouselIndex === 1 ? \"#0a0a0a\" : \"#bdbaba\",\r\n                }}\r\n              >\r\n                1\r\n              </Button>\r\n            </li>\r\n            <li>\r\n              <Button\r\n                className=\"dotItem\"\r\n                onClick={() => clickPoint(2)}\r\n                style={{\r\n                  background: carouselIndex === 2 ? \"#0a0a0a\" : \"#bdbaba\",\r\n                }}\r\n              >\r\n                2\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        {/*下一步 */}\r\n        <div className=\"nextBtnBox\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            className=\"nextBtn\"\r\n            onClick={inputIndex > 4 ? finishScan : switchFocus}\r\n          >\r\n            {inputIndex > 4 ? \"Finish\" : \"Next\"}\r\n          </Button>\r\n        </div>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    ruleMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setRulerConnectStatusFun,\r\n    setRulerMeasureValueFun,\r\n    setRulerUnitFun,\r\n    setRulerConfirmCountFun,\r\n  }\r\n)(ScanPet);\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\linkEquipment\\index.jsx",["823","824","825","826","827"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardAndPetsUI.jsx",["828","829"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\commonFun.js",["830","831","832","833","834","835","836","837","838","839"],"import _ from 'lodash';\nimport moment from 'moment';\n\n/**\n * description: 摄氏度转华氏度,根据入参来保留小数点位数\n * @param {Number} celsius 摄氏度\n * @param {Number} decimal 小数点位数\n * @return {Number} 华氏度\n */\nfunction CtoF(celsius, decimal = 1) {\n  let fahrenheit = (celsius * 1.8) + 32;\n  return parseFloat(fahrenheit.toFixed(decimal));\n}\n/**\n * description: 华氏度转摄氏度,根据入参来保留小数点位数\n * @param {Number} fahrenheit 华氏度\n * @param {Number} decimal 小数点位数\n * @return {Number} 摄氏度\n */\nfunction FtoC(fahrenheit, decimal = 1) {\n  let celsius = (fahrenheit - 32) / 1.8;\n  return parseFloat(celsius.toFixed(decimal));\n}\n/**\n * description: 千克转磅,根据入参来保留小数点位数\n * @param {Number} kg 千克\n * @param {Number} decimal 小数点位数\n * @return {Number} 磅\n */\nfunction KgtoLb(kg, decimal = 2) {\n  let pound = kg * 2.2046;\n  return parseFloat(pound.toFixed(decimal));\n}\n/**\n * description: 磅转千克,根据入参来保留小数点位数\n * @param {Number} lb 磅\n * @param {Number} decimal 小数点位数\n * @return {Number} 千克\n *\n */\nfunction LbtoKg(lb, decimal = 2) {\n  let kilogram = lb / 2.2046;\n  return parseFloat(kilogram.toFixed(decimal));\n}\n/**\n * description: 克转毫升,根据入参来保留小数点位数\n * @param {Number} gram 克\n * @param {Number} decimal 小数点位数\n * @return {Number} 毫升\n */\nfunction GToMl(gram, decimal = 2) {\n  let milliliter = gram\n  return parseFloat(milliliter.toFixed(decimal));\n}\n/**\n * description: 毫升转克,根据入参来保留小数点位数\n * @param {Number} ml 毫升\n * @param {Number} decimal 小数点位数\n * @return {Number} 克\n */\nfunction MltoG(ml, decimal = 2) {\n  let gram = ml;\n  return parseFloat(gram.toFixed(decimal));\n}\n/**\n * @description: 克转盎司,根据入参来保留小数点位数\n * @param {Number} gram 克\n * @param {Number} decimal 小数点位数\n * @return {Number} 盎司\n */\nfunction GToOz(gram, decimal = 2) {\n  let ounce = gram / 28.3495;\n  return parseFloat(ounce.toFixed(decimal));\n}\n/**\n * @description: 盎司转克,根据入参来保留小数点位数\n * @param {Number} ounce 盎司\n * @param {Number} decimal 小数点位数\n * @return {Number} 克\n */\nfunction OztoG(ounce, decimal = 2) {\n  let gram = ounce * 28.3495;\n  return parseFloat(gram.toFixed(decimal));\n}\n/**\n * description: 厘米转英寸,根据入参来保留小数点位数\n * @param {Number} cm 厘米\n * @param {Number} decimal 小数点位数\n * @return {Number} 英寸\n */\nfunction CmtoIn(cm, decimal = 2) {\n  let inch = cm / 2.54;\n  return parseFloat(inch.toFixed(decimal));\n}\n/**\n * description: 英寸转厘米,根据入参来保留小数点位数\n * @param {Number} inch 英寸\n * @param {Number} decimal 小数点位数\n * @return {Number} 厘米\n */\nfunction IntoCm(inch, decimal = 2) {\n  let cm = inch * 2.54;\n  return parseFloat(cm.toFixed(decimal));\n}\n/**\n * @description: 计算宠物年龄\n * @param {string} birthday 宠物生日\n * @return {number | string} age | ‘unknown’\n */\nexport const calculateAge = (birthday) => {\n  if (_.isEmpty(birthday)) {\n    return \"unknown\";\n  } else {\n    return moment().diff(moment(birthday), \"years\");\n  }\n};\n/**\n * @description: 没有上传照片的宠物头像展示\n * @param {Number} petSpeciesBreedId 宠物品种id\n * @return {string} 'cat' 'dog' 'other'\n */\nexport const petPicture = (petSpeciesBreedId) => {\n  if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n    return 'cat';\n  } else if (\n    petSpeciesBreedId === 12001 ||\n    _.inRange(petSpeciesBreedId, 136, 456)\n  ) {\n    return 'dog';\n  } else if (petSpeciesBreedId === 13001) {\n    return 'other';\n  } else {\n    return 'other';\n  }\n}\n/**\n * @dec 判断版本1是否大于版本2\n * @param {str} version1 版本号1,格式必须为1.0.0\n * @param {*} version2 版本号2,格式必须为1.0.0\n * @returns 版本1是否大于版本2\n */\nexport const versionComarision = (version1, version2) => {\n  let version1Arr = version1.split('.')\n  let version2Arr = version2.split('.')\n  function num(params) {\n    return parseInt(params)\n  }\n  if (num(version1Arr[0]) >= num(version2Arr[0])\n    && num(version1Arr[1]) >= num(version2Arr[1])\n    && num(version1Arr[2]) > num(version2Arr[2])\n  ) {\n    return true\n  } else {\n    return false\n  }\n}\n/**\n *\n * @param {*} time\n * @returns\n */\n\nexport const transitionTime = (time) => {\n\n  let timeDifference = new Date().getTimezoneOffset();\n  let newTime = moment(time).subtract(timeDifference, 'm').format();\n  return newTime;\n\n}\n\n\n\n\n\n\n\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\user.js",["840","841"],"/**\r\n * @file user.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/user 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del, patch } from '../ezyvetApi'\r\nimport { melladeskBaseUrl } from '../../config/config'\r\nconst baseURL = `${melladeskBaseUrl}/user`\r\n\r\n\r\n/**\r\n * @dec 邀请别人加入组织\r\n * @param {*} userId 用户id\r\n * @param {*} organizationId 组织id\r\n * @param {*} parames \r\n * @returns \r\n */\r\nexport const inviteUserByEmail = (userId, organizationId, parames) => {\r\n    return postJson(`${baseURL}/inviteUserByEmail/${userId}/${organizationId}`, parames)\r\n}\r\n\r\nexport const updateUserInfo = (parames) => {\r\n    return postJson(`${baseURL}/updateUserInfo`, parames)\r\n}\r\n\r\n\r\n\r\n\r\nexport const loginWithQRcode = (QRToken) => {\r\n    return get(`${baseURL}/loginWithQRcode/${QRToken}`, '')\r\n}\r\n\r\n\r\nexport const getLoginQRcode = () => {\r\n    return get(`${baseURL}/getLoginQRcode`, '')\r\n}\r\n\r\n\r\n\r\nexport const resendDeskRegistEmail = (logupEmailCode, params) => {\r\n    return get(`${baseURL}/resendDeskRegistEmail/${logupEmailCode}`, params)\r\n}\r\n\r\n\r\nexport const deskRegistAWSSNS = (params) => {\r\n    return postJson(`${baseURL}/deskRegistAWSSNS`, params)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\index.jsx",["842","843","844","845","846","847","848","849"],"import React, { Component } from \"react\";\nimport { Modal, message } from \"antd\";\n\nimport Heard from \"../../utils/heard/Heard\";\nimport { px, win, timerFun } from \"../../utils/px\";\nimport electronStore from \"../../utils/electronStore\";\nimport { compareObject } from \"../../utils/current\";\nimport { compareArray } from \"../../utils/current\";\n\nimport HardAndPetsUI from \"./HardAndPetsUI\";\nimport HardWareTypeUI from \"./hardWareTypeUI\";\nimport AddDevice from \"./AddDevice\";\n\nimport BiggiePage from \"../../pages/biggiePage\";\nimport ScanPage from \"../../pages/scanPage\";\nimport AllPets from \"../../pages/allPetsPage\";\nimport ScheduledPetPage from \"../../pages/scheduledPetsPage\";\nimport AddScheduledPet from \"../../pages/addScheduledPet\";\nimport ClininalStudy from \"../../pages/clinicalStudyPage\";\nimport CombineScales from \"../../pages/combineScales\";\nimport OtterEQPage from '../../pages/otterEQ';\nimport MyAccount from \"../../pages/myAccount\";\nimport TemperaturePage from \"../../pages/temperaturePage\";\nimport MabelPage from \"../mabelPage\";\nimport EnrolledPlan from '../enrolledPlan';\n\n\n\nimport { connect } from \"react-redux\";\nimport {\n  setHardwareList,\n  selectHardwareModalShowFun,\n  setIsHaveUsbDeviceFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n  setMellaDeviceIdFun,\n  setMellaMeasureNumFun,\n  setBiggieConnectStatusFun,\n  setBiggieBodyFatFun,\n  setBiggieBodyWeightFun,\n  setBiggieUnitFun,\n  setBiggieSameWeightCountFun,\n  setRulerConnectStatusFun,\n  setRulerMeasureValueFun,\n  setRulerUnitFun,\n  setRulerConfirmCountFun,\n  setReceiveBroadcastHardwareInfoFun,\n} from \"../../store/actions\";\n\nimport \"./mainbody.less\";\n\n\nlet ipcRenderer = window.require(\"electron\").ipcRenderer;\nlet isMeasure = false; //是否正在测量,用于判断是否需要发送指定指令给USB,查看硬件是否连接\nlet initTime = 0; //初始化时间,用来计算底座没有回应温度计的时间差,如果时间差大于6秒代表断开连接\nlet num07 = 0; //接收到07命令行的次数,次数大于3跳出弹框\nlet firstEar = true; //为true代表一组数据测量完成,下组测量数据\nlet is97Time = null; //为了防抖，因为有时候断开连接和连接成功总是连续的跳出来，展示就会一直闪烁，因此引入时间差大于800ms才展示\nlet exchangeNum = 0; //奇数发送查询探头id指令，偶数发送询问配置\nlet time194 = 0\n\n//用于预测的东西\nlet clinicalYuce = [],\n  clinicalIndex = 0;\n\nlet storage = window.localStorage;\n\nclass App extends Component {\n  state = {\n    //body部分窗口高度\n    bodyHeight: 0,\n    //本地保存的硬件类型数组,不包括Add这个类型\n    devicesTypeList: [],\n    //展示硬件类型的数组\n    showHardWareTypeList: [],\n    //是否有USB设备\n    isHaveUsbDevice: true,\n    //mella温度计测量状态\n    mellaMeasureStatus: \"disconnected\", //connected,disconnected,isMeasuring,complete\n\n    //点击菜单的序号\n    clickMenuIndex: \"1\",\n    err07Visible: false,\n    units: '℉'\n  };\n  componentDidMount() {\n    ipcRenderer.send(\"big\", win());\n    timerFun();\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    //获取窗口高度\n    this.resize();\n    //react监听屏幕窗口改变\n    window.addEventListener(\"resize\", this.resize);\n\n    //获取设备类型\n    this.getDevicesType();\n\n    //检测USB设备发来的信息\n    ipcRenderer.on(\"sned\", this._send);\n    //检测是否有USB设备\n    ipcRenderer.on(\"noUSB\", this._noUSB);\n    //定时查看mella温度计是否与底座连接或断开\n    this._whether_to_connect_to_mella();\n\n    //获取本地设置\n    this.getLocalSetting();\n    //获取单位\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`) || {}\n    console.log('----', hardSet);\n    let { isHua, } = hardSet\n    if (isHua === false) {\n      this.setState({\n        units: '℃'\n      })\n    } else {\n      this.setState({\n        units: '℉'\n      })\n    }\n\n\n  }\n  componentWillUnmount() {\n    //组件销毁，取消监听\n    window.removeEventListener(\"resize\", this.resize);\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n    ipcRenderer.removeListener(\"sned\", this._send);\n    ipcRenderer.removeListener(\"noUSB\", this._noUSB);\n    this.detectTimer && clearInterval(this.detectTimer);\n    this.rulerTimer && clearTimeout(this.rulerTimer);\n    message.destroy();\n  }\n  //检测到props里的hardwareList更新\n  UNSAFE_componentWillReceiveProps(prevProps) {\n    //对比props里的hardwareList和state里的hardwareList是否相同\n\n    if (!compareArray(prevProps.hardwareList, this.state.devicesTypeList)) {\n      let showHardWareTypeList = [].concat(prevProps.hardwareList);\n      showHardWareTypeList.push({\n        type: \"add\",\n        devices: [],\n      });\n      this.setState({\n        devicesTypeList: prevProps.hardwareList,\n        showHardWareTypeList,\n      });\n    }\n    if (!compareObject(prevProps.menuNum, this.state.clickMenuIndex)) {\n      this.setState({\n        clickMenuIndex: prevProps.menuNum,\n      });\n    }\n  }\n\n  changeFenBianLv = (e) => {\n    let ipcRenderer = window.electron.ipcRenderer;\n    // ipcRenderer.send('small')\n    ipcRenderer.send(\"big\", win());\n    // this.setState({}, () => {\n    //   if (this.props.test) {\n    //     if (this.props.test.current) {\n    //       this.props.test.current.getEchartsInstance().dispose();\n    //       this.props.test.current.getEchartsInstance().clear();\n    //       setTimeout(() => {\n    //         this.props.test.current.getEchartsInstance().resize();\n    //       }, 500);\n    //     }\n    //   }\n    // });\n\n  };\n  //获取本地设置\n  getLocalSetting = () => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (!hardSet) {\n      let settings = {\n        isHua: true,\n        is15: true,\n        self_tarting: false, //自启动\n        isBacklight: true,\n        isBeep: true,\n        backlightTimer: { length: 140, number: \"45\" },\n        autoOff: { length: 0, number: \"30\" },\n      };\n      electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\n    }\n  };\n  //检测USB设备发来的信息\n  _send = (e, data) => {\n    // console.log('检测USB设备发来的信息', data)\n    //data就是测量的数据，是十进制的数字\n    this.command(data)();\n  };\n  //监听是否有USB设备,true代表没有USB设备，false代表有USB设备\n  _noUSB = (e, data) => {\n    if (data === false) {\n      message.destroy();\n    } else {\n      if (this.state.isHaveUsbDevice) {\n        message.destroy();\n        message.error(\"The base is not detected. Please insert the base\", 0);\n      }\n    }\n    if (data === this.props.isHaveUsbDevice) {\n      this.props.setIsHaveUsbDeviceFun(!data);\n    }\n    if (data === this.state.isHaveUsbDevice) {\n      this.setState({\n        isHaveUsbDevice: !data,\n      });\n    }\n  };\n  //监听mella温度计是否与底座连接或断开\n  _whether_to_connect_to_mella = () => {\n    console.log(\"监听mella温度计是否与底座连接或断开\");\n    message.destroy();\n    this.detectTimer && clearInterval(this.detectTimer);\n    //2秒检测一次\n    this.detectTimer = setInterval(() => {\n      exchangeNum++;\n      //如果正在测量或者没有USB设备，不检测\n      if (isMeasure || !this.state.isHaveUsbDevice) {\n        return;\n      }\n      if (exchangeNum % 2 === 0) {\n        //让底座发送查询温度计信息指令\n        ipcRenderer.send(\"usbdata\", { command: \"07\", arr: [\"5A\"] });\n      } else {\n        ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n      }\n\n      //如果底座没有回应，则计算时间差,时间差大于5秒，则没与温度计连接\n      if (new Date() - initTime > 6000) {\n        this._disconnect_to_mella();\n      } else {\n      }\n    }, 2000);\n  };\n  //底座与温度计断开连接\n  _disconnect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus, setMellaDeviceIdFun } =\n      this.props;\n    if (mellaConnectStatus !== \"disconnected\") {\n      setMellaConnectStatusFun(\"disconnected\");\n    }\n    setMellaDeviceIdFun(\"\");\n  };\n  //底座与温度计连接\n  _connect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus } = this.props;\n    if (mellaConnectStatus !== \"connected\") {\n      setMellaConnectStatusFun(\"connected\");\n    }\n  };\n\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  command = (newArr) => {\n    let dataArr1 = newArr.map((item) => {\n      if (item.toString(16).length < 2) {\n        return \"0\" + item.toString(16);\n      } else {\n        return item.toString(16);\n      }\n    });\n    //除了255,其他都是温度计的数据\n    let {\n      setMellaConnectStatusFun,\n      setMellaMeasureValueFun,\n      setMellaPredictValueFun,\n      setMellaMeasurePartFun,\n      mellaMeasurePart,\n      mellaConnectStatus,\n      setBiggieBodyFatFun,\n      setBiggieBodyWeightFun,\n      setBiggieConnectStatusFun,\n      setBiggieUnitFun,\n      setBiggieSameWeightCountFun,\n    } = this.props;\n    let {\n      biggieConnectStatus,\n      biggieBodyFat,\n      biggieBodyWeight,\n      biggieUnit,\n      biggieSameWeightCount,\n    } = this.props.hardwareReduce;\n\n    const instruction = [\n      209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 194, 7, 99, 255, 182,\n    ];\n\n    if (newArr[2] !== 7 && newArr[2] !== 255 && newArr[2] !== 182) {\n      initTime = new Date();\n      num07 = 0;\n      if (mellaConnectStatus === \"disconnected\") {\n        this._connect_to_mella();\n      }\n    } else {\n      num07++;\n    }\n\n    const commandArr = {\n      209: () => {\n        //腋温\n        //第一次测量去获取探头ID\n        if (firstEar) {\n          firstEar = false;\n          console.log(\"去获取探头id\");\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        let temp1 = parseFloat(`${dataArr1[3]}.${dataArr1[4]}`);\n        let temp0 = parseFloat(`${dataArr1[5]}.${dataArr1[6]}`);\n        let Temp = temp0;\n        if (\n          Temp === 24.7 ||\n          Temp === 0 ||\n          Temp === null ||\n          Temp === undefined\n        ) {\n          return;\n        }\n\n        let dataS = {\n          sample: clinicalIndex++,\n          data0: temp0,\n          data1: temp1,\n        };\n        clinicalYuce.push(dataS);\n        if (clinicalYuce.length >= 30) {\n          setMellaPredictValueFun(clinicalYuce);\n        }\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n        console.log('mellaMeasurePart: ', mellaMeasurePart);\n        if (mellaMeasurePart !== \"腋温\" && mellaMeasurePart !== \"肛温\") {\n\n          setMellaMeasurePartFun(\"腋温\");\n        }\n        this.props.setMellaMeasureNumFun(this.props.mellaMeasureNum + 1);\n      },\n      208: () => {\n        //耳温\n\n        if (firstEar) {\n          firstEar = false;\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        //现在探头0可能不存在，所以把探头0改为探头1\n        let temp0 = parseFloat(`${dataArr1[7]}.${dataArr1[4.18]}`);\n        let Temp = temp0;\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n\n        if (mellaMeasurePart !== \"耳温\") {\n          setMellaMeasurePartFun(\"耳温\");\n        }\n      },\n      193: () => {\n        //指令结束\\自动结束后\\温度计收到预测数据后温度计返回值,结束后可能还会粘一组测量中的数据\n        //为了清除黏贴的数据，使用定时器\n        this.time193 && clearTimeout(this.time193);\n        this.time193 = setTimeout(() => {\n          if (new Date() - time194 < 1000) {\n            this.time193 && clearTimeout(this.time193);\n            return;\n          }\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaMeasureValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            console.log('要去写了', units, temp);\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          this.time193 && clearTimeout(this.time193);\n        }, 500);\n      },\n      194: () => {\n        //硬件收到机器学习结果并停止测量，\n        this.time193 && clearTimeout(this.time193);\n        time194 = new Date()\n        console.log(\"---机器学习\", newArr);\n        if (mellaConnectStatus !== \"complete\") {\n          setMellaConnectStatusFun(\"complete\");\n        }\n        const timer = setTimeout(() => {\n          setMellaMeasureValueFun(this.props.mellaPredictReturnValue);\n\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaPredictReturnValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          clearTimeout(timer);\n        }, 80);\n        clinicalYuce = [];\n        clinicalIndex = 0;\n      },\n      192: () => {\n        //温度计收到40开始数据后返回的指令\n        switch (newArr[3]) {\n          case 90:\n            console.log(\"有探头，开始测量的返回指令·\");\n            break;\n          case 11:\n            console.log(\"没有探头，开始测量的返回值\");\n            break;\n        }\n      },\n      129: () => {\n        //返回硬件版本号\n        console.log(`返回的版本号为${newArr[3]}`);\n      },\n      135: () => {\n        //硬件的一些基本信息\n        /**\n         * ______________新版、旧版没法控制温度计__________________\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\n         * newArr[7] 无操作关机时间\n         * newArr[8] 背光时间\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\n         * newArr[10] 测量单位    01代表℃，00代表℉\n         */\n\n        let hardSet = electronStore.get(\n          `${storage.userId}-hardwareConfiguration`\n        );\n        if (!hardSet) {\n          hardSet = {\n            isHua: true,\n            is15: true,\n            self_tarting: false, //自启动\n            isBacklight: true,\n            isBeep: true,\n            backlightTimer: { length: 140, number: \"45\" },\n            autoOff: { length: 0, number: \"30\" },\n          };\n        }\n\n        let beep = hardSet.isBeep ? \"11\" : \"00\";\n        let unit = hardSet.isHua ? \"00\" : \"01\";\n\n        if (\n          dataArr1[7] === hardSet.autoOff.number &&\n          dataArr1[8] === hardSet.backlightTimer.number &&\n          dataArr1[9] === beep &&\n          dataArr1[10] === unit\n        ) {\n        } else {\n          console.log(\"不相同，去发送命令\");\n          let setArr = [\n            \"03\",\n            \"ed\",\n            \"07\",\n            \"dd\",\n            hardSet.autoOff.number,\n            hardSet.isBacklight ? hardSet.backlightTimer.number : \"00\",\n            hardSet.isBeep ? \"11\" : \"00\",\n            hardSet.isHua ? \"00\" : \"01\",\n          ];\n          ipcRenderer.send(\"usbdata\", { command: \"21\", arr: setArr });\n        }\n      },\n      238: () => {\n        //探头松动\n        console.log(\"探头松动\");\n        message.error(\n          \"The probe is loose, please re-install and measure again\",\n          5\n        );\n      },\n\n      98: () => {\n        //蓝牙连接断开\n        console.log(\n          \"断开连接---断开连接---断开连接---断开连接---断开连接---断开连接\"\n        );\n        firstEar = true;\n        // console.log(new Date() - is97Time);\n        if (new Date() - is97Time < 1300) {\n          return;\n        }\n        this._disconnect_to_mella();\n      },\n      97: () => {\n        //蓝牙连接\n        console.log(\n          \"连接成功---连接成功---连接成功---连接成功---连接成功---连接成功\"\n        );\n        this.getIdTimer && clearTimeout(this.getIdTimer);\n        this.getIdTimer = setTimeout(() => {\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n          this.getIdTimer && clearTimeout(this.getIdTimer);\n        }, 50);\n\n\n        is97Time = new Date();\n        this._connect_to_mella();\n      },\n      177: () => {\n        //探头id\n        let dataArr1 = newArr.map((item) => {\n          if (item.toString(16).length < 2) {\n            return \"0\" + item.toString(16);\n          } else {\n            return item.toString(16);\n          }\n        });\n\n        let id = \"\";\n        for (let i = 3; i < dataArr1.length - 2; i++) {\n          id += dataArr1[i];\n        }\n        // console.log(id, dataArr1[7]);\n        setMellaDeviceIdFun(id);\n        // this.setState({\n        //   probeID: id,\n        //   petVitalTypeId: dataArr1[7]\n        // })\n        if (dataArr1[7] === \"01\") {\n          if (mellaMeasurePart !== \"腋温\") {\n            setMellaMeasurePartFun(\"腋温\");\n          }\n        } else if (dataArr1[7] === \"02\") {\n          if (mellaMeasurePart !== \"肛温\") {\n            setMellaMeasurePartFun(\"肛温\");\n          }\n        } else if (dataArr1[7] === \"03\") {\n          if (mellaMeasurePart !== \"耳温\") {\n            setMellaMeasurePartFun(\"耳温\");\n          }\n        }\n      },\n      7: () => {\n        //发什么收什么，需要去重新插拔底座\n        console.log(\"重新插拔底座\");\n        if (num07 === 3 && this.state.err07Visible === false) {\n          this.setState({\n            err07Visible: true,\n          });\n        }\n      },\n      255: () => {\n        let length = newArr.length;\n        let frameLength = newArr[1]; //帧长\n        let itemLength = newArr[3] + 1; //数据位的长度   13\n        let dataIndex = 0;\n        let bluName = \"\";\n        let bluData = [];\n\n        while (itemLength < length && itemLength + 3 <= frameLength) {\n          let itemData = [];\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5]);\n          }\n          // console.log('--剪切的数据---', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              let str = \"\";\n              for (let i = 0; i < itemData.length; i++) {\n                let item = parseInt(itemData[i], 16);\n                str += String.fromCharCode(item);\n              }\n              bluName = str;\n              // console.log('--蓝牙名称:', bluName);\n\n              break;\n\n            case 255:\n              bluData = itemData;\n              break;\n            case 7:\n              console.log(\"---UUID\");\n              break;\n            case 239:\n              // console.log('---mac地址');\n              break;\n\n            case 3:\n              // console.log('----尺子的,不知道什么用');\n              break;\n\n            default:\n              console.log(\"直接跳出循环\");\n              return;\n          }\n          dataIndex = itemLength;\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\n        }\n        // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n        let { setReceiveBroadcastHardwareInfoFun, hardwareReduce } = this.props;\n\n        let { receiveBroadcastHardwareInfo } = hardwareReduce;\n\n        if (bluName.indexOf(\"C19\") !== -1 && bluData.length > 10) {\n          let json = {\n            deviceType: \"biggie\",\n            macId: \"00:00:00:00:00:00\",\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          let weight = `0x${bluData[10]}${bluData[11]}`;\n          let impedance = `0x${bluData[12]}${bluData[13]}`;\n          let sendWeight = null;\n          //C19发送的体重值单位只是KG\n          try {\n            weight = parseInt(weight) / 100;\n            if (impedance) {\n              impedance = parseInt(impedance);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n          if (weight === biggieBodyWeight) {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          } else {\n            setBiggieSameWeightCountFun(0);\n            setBiggieBodyWeightFun(weight);\n          }\n          if (impedance) {\n            setBiggieBodyFatFun(impedance);\n          }\n          if (biggieConnectStatus !== \"isMeasuring\") {\n            setBiggieConnectStatusFun(\"isMeasuring\");\n          }\n          if (biggieUnit !== \"kg\") {\n            setBiggieUnitFun(\"kg\");\n          }\n        } else if (bluName.indexOf(\"Mella Measure\") !== -1) {\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          // console.log('结束循环蓝牙名称', bluData)\n          let confirmBtn = bluData[8]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[11], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[9];\n          let num2 = bluData[10];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n        } else if (bluName.indexOf(\"Biggie\") !== -1 && bluData.length > 13) {\n          // console.log(\"biggie\", bluData);\n          if (bluData[0] !== \"aa\") {\n            return;\n          }\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n\n          let newArr = bluData;\n\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n\n          let json = {\n            deviceType: \"biggie\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n          //定义体重的控制字符\n          let weightControl = newArr[8];\n          //定义体重的值\n          let weight = `${getVal(newArr[9].toString(16))}${getVal(\n            newArr[10].toString(16)\n          )}`;\n          weight = parseInt(weight, 16);\n          //定义体脂值\n          let impedance = `${getVal(newArr[12].toString(16))}${getVal(\n            newArr[13].toString(16)\n          )}`;\n          impedance = parseInt(impedance, 16);\n          let arr11 = getVal(newArr[11].toString(16));\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n\n          let weightUnits = arr11[1] === \"1\" ? \"lb\" : \"kg\";\n          let biggieStatus = \"isMeasuring\";\n          switch (weightControl) {\n            case 1:\n              biggieStatus = \"connected\";\n              break;\n            case 2:\n              biggieStatus = \"isMeasuring\";\n              break;\n            case 3:\n              biggieStatus = \"complete\";\n              break;\n            default:\n              break;\n          }\n          if (biggieStatus !== biggieConnectStatus) {\n            setBiggieConnectStatusFun(biggieStatus);\n          }\n          if (weightUnits !== biggieUnit) {\n            setBiggieUnitFun(weightUnits);\n          }\n          if (weight !== biggieBodyWeight) {\n            setBiggieBodyWeightFun(weight);\n            setBiggieSameWeightCountFun(0);\n          } else {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          }\n          if (impedance !== biggieBodyFat) {\n            setBiggieBodyFatFun(impedance);\n          }\n        } else if (bluName.indexOf(\"MaeBowl\") !== -1 && bluData.length > 10) {\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          //定义硬件版本号\n          let hardwareVersion = bluData[7] + bluData[8];\n          //定义软件版本号\n          let softwareVersion = bluData[9];\n          //定义wifi标志位\n          let wifiFlag = bluData[10];\n          //定义控制字\n          let control = bluData[11];\n          //定义重量\n          let weight = `${getVal(bluData[12].toString(16))}${getVal(\n            bluData[13].toString(16)\n          )}`\n          weight = parseInt(weight, 16);\n          let arr11 = bluData[14]\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n          let weightUnits = null\n          switch (arr11[1]) {\n            case '0':\n              weightUnits = 'kg'\n\n              break;\n            case '1':\n              weightUnits = 'lb'\n\n              break;\n            case '2':\n              weightUnits = 'g'\n\n              break;\n            case '3':\n              weightUnits = 'ml'\n\n              break;\n            case '4':\n              weightUnits = 'oz'\n\n              break;\n\n            default:\n              break;\n          }\n          console.log({\n            // mac,\n            // hardwareVersion,\n            // softwareVersion,\n            wifiFlag,\n            control,\n            weight,\n            weightUnits,\n          });\n\n\n        } else if (bluName.indexOf(\"Tabby\") !== -1 && bluData.length > 10) {\n          // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          let confirmBtn = bluData[10]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[13], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[11];\n          let num2 = bluData[12];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n\n\n\n\n        }\n      },\n      182: () => {\n        console.log(\"打开了底座通信\");\n      },\n    };\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]];\n    } else {\n      return () => {\n        console.log(\"没有控制命令\", commandArr);\n      };\n    }\n  };\n\n  testCheck = (arr) => {\n    if (arr.length < 7) {\n      return false;\n    }\n    let i = 7;\n    let checkFloag = arr[i];\n\n    for (i = 8; i < arr.length - 2; i++) {\n      checkFloag = checkFloag ^ arr[i];\n    }\n    return checkFloag;\n  };\n  getMac = (arr) => {\n    // console.log(arr);\n    let str = arr[1].toString(16);\n    if (str.length === 1) {\n      str = \"0\" + str;\n    }\n    for (let i = 2; i < 7; i++) {\n      let item = arr[i].toString(16);\n      if (item.length === 1) {\n        item = \"0\" + item;\n      }\n      str += `:${item}`;\n      // }\n    }\n\n    return str;\n  };\n\n  //监听屏幕窗口改变\n  resize = () => {\n    let { offsetWidth, offsetHeight } = this.mainbody;\n    // console.log('resize', this.mainbody, { offsetWidth, offsetHeight });\n    if (offsetHeight !== this.state.bodyHeight) {\n      this.setState({\n        bodyHeight: offsetHeight - px(50),\n      });\n    }\n  };\n  //获取设备类型(渲染左侧硬件种类侧边栏)\n  getDevicesType = () => {\n    // let devicesTypeList = [\n    //   {\n    //     type: 'mellaPro',\n    //     devices: [\n    //       {\n    //         name: 'mellaPro',\n    //         mac: '',\n    //         deviceType: 'mellaPro',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'biggie',\n    //     devices: [\n    //       {\n    //         name: 'biggie',\n    //         mac: '',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       },\n    //       {\n    //         name: 'biggie002',\n    //         mac: '1253',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'otterEQ',\n    //     devices: [\n    //       {\n    //         name: 'otterEQ',\n    //         mac: '',\n    //         deviceType: 'otterEQ',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n\n    //   {\n    //     type: 'rfid',\n    //     devices: [\n    //       {\n    //         name: 'rfid',\n    //         mac: '',\n    //         deviceType: 'rfid',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'tape',\n    //     devices: [\n    //       {\n    //         name: 'tape',\n    //         mac: '',\n    //         deviceType: 'tape',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'maeBowl',\n    //     devices: [\n    //       {\n    //         name: 'maeBowl',\n    //         mac: '',\n    //         deviceType: 'maeBowl',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   }\n    // ]\n\n    let devicesTypeList =\n      electronStore.get(\n        `${storage.lastOrganization}-${storage.userId}-devicesTypeList`\n      ) || [];\n    // console.log(\"获取的设22222备列表\", devicesTypeList);\n    if (devicesTypeList.length === 0) {\n      devicesTypeList.push({\n        type: \"mellaPro\",\n        devices: [\n          {\n            name: \"mellaPro\",\n            mac: \"\",\n            deviceType: \"mellaPro\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"biggie\",\n        devices: [\n          {\n            name: \"biggie\",\n            mac: \"\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n          {\n            name: \"biggie002\",\n            mac: \"1253\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"tape\",\n        devices: [\n          // {\n          //   name: \"tape\",\n          //   mac: \"45264\",\n          //   deviceType: \"tape\",\n          //   examRoom: \"\",\n          // },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"otterEQ\",\n        devices: [\n          {\n            name: \"otterEQ\",\n            mac: \"375082\",\n            deviceType: \"otterEQ\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"mabel\",\n        devices: [\n          {\n            name: \"mabel\",\n            mac: \"2.1.5.123.5\",\n            deviceType: \"mabel\",\n            examRoom: \"\",\n          },\n        ],\n      });\n    }\n\n    let hardList = [].concat(devicesTypeList);\n    this.props.setHardwareList(hardList);\n    let showHardWareTypeList = [].concat(devicesTypeList);\n    showHardWareTypeList.push({\n      type: \"add\",\n      devices: [],\n    });\n\n    this.setState({\n      devicesTypeList,\n      showHardWareTypeList,\n    });\n  };\n  body = () => {\n    let { selectHardwareType } = this.props;\n\n    let { bodyHeight, clickMenuIndex } = this.state;\n    let measurePage = null;\n    switch (clickMenuIndex) {\n      case \"1\":\n        if (electronStore.get(`${storage.userId}-isClical`)) {\n          return (\n            <>\n              <HardAndPetsUI bodyHeight={bodyHeight} />\n              <ClininalStudy bodyHeight={bodyHeight} />\n            </>\n          );\n        } else {\n          switch (selectHardwareType) {\n            case \"mellaPro\":\n              measurePage = <TemperaturePage bodyHeight={bodyHeight} />;\n\n              break;\n            case \"biggie\":\n              measurePage = <BiggiePage bodyHeight={bodyHeight} />;\n              break;\n\n            case \"tape\":\n              measurePage = <ScanPage bodyHeight={bodyHeight} />;\n              break;\n            case \"otterEQ\":\n              measurePage = <OtterEQPage bodyHeight={bodyHeight} />;\n              break;\n            case \"mabel\":\n              measurePage = <MabelPage bodyHeight={bodyHeight} />;\n              break;\n\n            default:\n              break;\n          }\n          if (selectHardwareType === \"add\") {\n            return <AddDevice bodyHeight={bodyHeight} />;\n          } else if (selectHardwareType === 'prescribePlan') {\n            return <EnrolledPlan bodyHeight={bodyHeight} />;\n          }\n          else {\n            return (\n              <>\n                <HardAndPetsUI bodyHeight={bodyHeight} />\n                {measurePage}\n              </>\n            );\n          }\n        }\n      case \"2\":\n        return <AllPets bodyHeight={bodyHeight} />;\n      case \"CombineScales\":\n        return <CombineScales bodyHeight={bodyHeight} />;\n      case \"AddDevice\":\n        return <AddDevice bodyHeight={bodyHeight} />;\n      case \"3\":\n        return <ScheduledPetPage bodyHeight={bodyHeight} />;\n\n      case \"AddScheduledPet\":\n        return <AddScheduledPet bodyHeight={bodyHeight} />;\n      case \"6\":\n        return (\n          <>\n            <HardAndPetsUI bodyHeight={bodyHeight} />\n            <ClininalStudy bodyHeight={bodyHeight} />\n          </>\n        );\n      case \"4\":\n        return (\n          <MyAccount bodyHeight={bodyHeight} />\n        );\n      default:\n        break;\n    }\n  };\n\n  render() {\n    let { bodyHeight } = this.state;\n\n    return (\n      <div\n        className=\"flex\"\n        id=\"mainbody\"\n        ref={(val) => (this.mainbody = val)}\n        onClick={() => {\n          if (this.props.selectHardwareModalShowFun) {\n            this.props.selectHardwareModalShowFun(false);\n          }\n        }}\n      >\n        <Heard />\n        <div className=\"mainbody-body\">\n          <HardWareTypeUI\n            bodyHeight={bodyHeight}\n            devicesTypeList={this.state.showHardWareTypeList}\n          />\n          {this.body()}\n        </div>\n        <Modal\n          visible={this.state.err07Visible}\n          // visible={true}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          width={330}\n          closable={false}\n          footer={[]}\n          destroyOnClose={true}\n          wrapClassName=\"vetPrifileModal\"\n        >\n          <div id=\"vetPrifileModal\">\n            <div className=\"title\">prompt</div>\n\n            <div className=\"text\">Please re-plug the base device</div>\n\n            <div\n              className=\"btn\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginBottom: \"5px\",\n              }}\n            >\n              <button\n                onClick={() => {\n                  this.setState({\n                    err07Visible: false,\n                  });\n                  num07 = 0;\n                }}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\n    mellaMeasurePart: state.hardwareReduce.mellaMeasurePart,\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    hardwareReduce: state.hardwareReduce,\n    hardwareList: state.hardwareReduce.hardwareList,\n    hardwareInfo: state.hardwareReduce.selectHardwareInfo,\n    menuNum: state.userReduce.menuNum,\n    mellaPredictReturnValue: state.hardwareReduce.mellaPredictReturnValue,\n    test: state.userReduce.test\n  }),\n  {\n    setHardwareList,\n    selectHardwareModalShowFun,\n    setIsHaveUsbDeviceFun,\n\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n    setMellaDeviceIdFun,\n    setBiggieConnectStatusFun,\n    setBiggieBodyFatFun,\n    setBiggieBodyWeightFun,\n    setBiggieUnitFun,\n    setBiggieSameWeightCountFun,\n    setRulerConnectStatusFun,\n    setRulerMeasureValueFun,\n    setRulerUnitFun,\n    setRulerConfirmCountFun,\n    setReceiveBroadcastHardwareInfoFun,\n    setMellaMeasureNumFun,\n  }\n)(App);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx",[],["850","851"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx",["852","853"],"\r\n/**\r\n * \r\n * @param {boolean} visible 控制modal框是否显示\r\n * @param {element} element 自定义modal框里面的内容，默认是组件是加载中。。。\r\n * @returns {element} 这是自己写的一个modal框\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport './myModal.less'\r\nimport { px, pX, MTop, mTop } from '../px'\r\n\r\nclass MyModal extends Component {\r\n\r\n  render () {\r\n    let { visible, element, text } = this.props\r\n    // console.log('---上层组件传来的值---', this.props);\r\n\r\n    if (visible) {\r\n      let body = element ? element :\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n          <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n            <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n          </div>\r\n          <p>\r\n            {text ? text : 'loading...'}\r\n          </p>\r\n        </div>\r\n      return (\r\n        <div className=\"myModal\">\r\n          {body}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (null)\r\n    }\r\n\r\n  }\r\n}\r\n\r\nMyModal.propTypes = {\r\n  visible: PropTypes.bool,\r\n  element: PropTypes.element,\r\n  text: PropTypes.string\r\n\r\n}\r\nMyModal.defaultProps = {\r\n  visible: false,\r\n  text: 'loading...'\r\n}\r\n\r\nexport default MyModal","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\index.jsx",["854","855","856"],"import React, { useEffect, useState } from \"react\";\nimport { Layout } from \"antd\";\n\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\nimport LinkEquipment from \"./components/linkEquipment\";\n\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../store/actions\";\nimport PropTypes from 'prop-types';\n\nimport \"./index.less\";\n\nconst { Content, Header } = Layout;\nconst MabelPage = ({ petMessage, hardwareMessage, bodyHeight }) => {\n\n  return (\n    <Layout className=\"mabelPageBox\" style={{ height: bodyHeight }}>\n      <div className=\"headerContentBox\" style={{ background: \"#fff\", position: 'relative' }}>\n        <div style={{ height: '100%' }}>\n          <HeaderItem />\n        </div>\n      </div>\n      {_.isEmpty(petMessage) ? (\n        <div className=\"chackPatientBox\">\n          <p className=\"chackPatientTitle\">Select a patient</p>\n        </div>\n      ) : (\n        <Content className={\"mabelPagecontentBox\"}>\n          <LinkEquipment />\n        </Content>\n      )}\n    </Layout>\n  );\n};\n\nMabelPage.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(MabelPage);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js",["857"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetModal\\index.jsx",["858","859","860","861"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardListModal.jsx",["862"],"import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nimport deviceBiggie from \"./../../assets/img/deviceIcon-biggie.png\";\r\nimport nextImg from \"./../../assets/img/nextImg.png\";\r\nimport dui from \"./../../assets/img/dui.png\";\r\nimport deviceMella from \"./../../assets/img/deviceIcon-mella.png\";\r\nimport deviceRfid from \"./../../assets/img/deviceIcon-rfid.png\";\r\nimport deviceMaeBowl from \"./../../assets/img/deviceIcon-maeBowl.png\";\r\nimport deviceTape from \"./../../assets/img/deviceIcon-tape.png\";\r\nimport deivceAdd from \"./../../assets/img/hardList-add.png\";\r\nimport scales from \"./../../assets/img/scales.png\";\r\n\r\nimport { px } from \"../../utils/px\";\r\nimport { compareObject } from \"../../utils/current\";\r\nimport electronStore from \"../../utils/electronStore\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectHardwareInfoFun,\r\n  selectHardwareModalShowFun,\r\n  setMenuNum,\r\n  setSelectHardwareType\r\n} from \"./../../store/actions\";\r\n\r\nimport \"./mainbody.less\";\r\n\r\nlet storage = window.localStorage;\r\nconst HardAndPetsUI = ({\r\n  hardwareList,\r\n  selectHardwareType,\r\n  selectHardwareInfoFun,\r\n  selectHardwareModalShowFun,\r\n  setInfo,\r\n  setMenuNum,\r\n  hardwareMessage,\r\n  setSelectHardwareType\r\n}) => {\r\n  let { selectHardwareInfo } = hardwareMessage;\r\n  //定义数组hardwareList\r\n  const [hardwareListArr, setHardwareList] = useState([]);\r\n  //定义选择的硬件详细信息\r\n  const [selectHardwareDetail, setSelectHardwareDetail] = useState({});\r\n\r\n  let options = hardwareListArr.map((item, index) => {\r\n    let { name, mac, deviceType } = item;\r\n    let deviceTypeStr = \"\",\r\n      img = null;\r\n    switch (deviceType) {\r\n      case \"biggie\":\r\n        deviceTypeStr = \"Biggie Pro Scale\";\r\n        img = <img src={deviceBiggie} alt=\"\" width={px(75)} />;\r\n        break;\r\n      case \"rfid\":\r\n        deviceTypeStr = \"RFID\";\r\n        img = <img src={deviceRfid} alt=\"\" width={px(40)} />;\r\n        break;\r\n      case \"tape\":\r\n        deviceTypeStr = \"Tabby\";\r\n        img = <img src={deviceTape} alt=\"\" width={px(50)} />;\r\n        break;\r\n      case \"maeBowl\":\r\n        deviceTypeStr = \"MaeBowl\";\r\n        img = <img src={deviceMaeBowl} alt=\"\" width={px(40)} />;\r\n\r\n        break;\r\n      case \"otterEQ\":\r\n        deviceTypeStr = \"Otter EQ\";\r\n\r\n        break;\r\n      case \"mellaPro\":\r\n        deviceTypeStr = \"Mella Pro\";\r\n        img = <img src={deviceMella} alt=\"\" width={px(20)} />;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    //判断对象是否相等\r\n\r\n    let isEqual = compareObject(item, selectHardwareDetail);\r\n    // console.log(\"判断两个对象是否相同\", isEqual, item, selectHardwareDetail);\r\n    return (\r\n      <li\r\n        key={`${index}`}\r\n        onClick={() => {\r\n          setSelectHardwareDetail(item);\r\n          electronStore.set(\r\n            `${storage.lastOrganization}-${storage.userId}-${deviceType}-selectDeviceInfo`,\r\n            item\r\n          );\r\n          selectHardwareInfoFun(item);\r\n          setInfo && setInfo(item);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"hardListInfo\"\r\n          style={{ paddingTop: px(15), paddingBottom: px(15) }}\r\n        >\r\n          <div className=\"deviceL\">\r\n            <div\r\n              className=\"hardIcon\"\r\n              style={{ marginLeft: px(3), marginRight: px(3), width: px(75) }}\r\n            >\r\n              {img}\r\n            </div>\r\n            <div className=\"deviceInfo\">\r\n              <div className=\"deviceName\">{`Device Name: ${name}`}</div>\r\n              <div className=\"deviceName\">{deviceTypeStr}</div>\r\n              <div className=\"deviceName\">{`SN: ${mac}`}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"deviceR\" style={{ marginRight: px(20) }}>\r\n            <img src={nextImg} alt=\"\" width={px(13)} />\r\n            {isEqual && (\r\n              <div\r\n                className=\"seleIcon\"\r\n                style={{ width: px(18), height: px(18), top: px(-30) }}\r\n              >\r\n                <img src={dui} alt=\"\" width={px(12)} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  const otherItems = () => {\r\n    let deviceType = selectHardwareDetail.deviceType;\r\n    let isBiggie = deviceType === \"biggie\",\r\n      deviceTypeStr = \"\";\r\n    switch (deviceType) {\r\n      case \"biggie\":\r\n        deviceTypeStr = \"Biggie\";\r\n        break;\r\n      case \"rfid\":\r\n        deviceTypeStr = \"RFID\";\r\n        break;\r\n      case \"tape\":\r\n        deviceTypeStr = \"Tabby\";\r\n\r\n        break;\r\n      case \"maeBowl\":\r\n        deviceTypeStr = \"MaeBowl\";\r\n\r\n        break;\r\n      case \"otterEQ\":\r\n        deviceTypeStr = \"Otter EQ\";\r\n        break;\r\n      case \"mellaPro\":\r\n        deviceTypeStr = \"Mella\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // console.log(\"selectHardwareDetail\", selectHardwareDetail);\r\n    return (\r\n      <div>\r\n        {isBiggie && (\r\n          <div\r\n            className=\"addNewDevice\"\r\n            style={{ paddingTop: px(10), paddingBottom: px(10) }}\r\n            onClick={() => setMenuNum(\"CombineScales\")}\r\n          >\r\n            <div\r\n              className=\"addNewDeviceText\"\r\n              style={{ paddingLeft: px(25) }}\r\n            >{`Combine Scales`}</div>\r\n            <div className=\"addNewDeviceImg\">\r\n              <img\r\n                src={scales}\r\n                alt=\"\"\r\n                width={px(30)}\r\n                style={{ marginRight: px(20) }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div\r\n          className=\"addNewDevice\"\r\n          style={{ paddingTop: px(10), paddingBottom: px(10) }}\r\n          onClick={() => {\r\n            setMenuNum(\"1\");\r\n            setSelectHardwareType('add');\r\n          }}\r\n        >\r\n          <div\r\n            className=\"addNewDeviceText\"\r\n            style={{ paddingLeft: px(25), }}\r\n\r\n\r\n          >{`Add New ${deviceTypeStr}`}</div>\r\n          <div className=\"addNewDeviceImg\">\r\n            <img\r\n              src={deivceAdd}\r\n              alt=\"\"\r\n              width={px(30)}\r\n              style={{ marginRight: px(20) }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //根据设备类型获取到此类型下的所有硬件,并用来展示\r\n    for (let i = 0; i < hardwareList.length; i++) {\r\n      const element = hardwareList[i];\r\n      if (element.type === selectHardwareType) {\r\n        let list = element.devices || [];\r\n        setHardwareList(list);\r\n        //获取被选中的硬件的详细信息\r\n        let selectHardwareInfoData = selectHardwareInfo || {};\r\n        if (selectHardwareInfoData === {}) {\r\n          let selectHardwareInfoData = list[0] || {};\r\n          setSelectHardwareDetail(selectHardwareInfoData);\r\n        } else {\r\n          let sameFlag = false;\r\n          for (let i = 0; i < list.length; i++) {\r\n            const element = list[i];\r\n            if (\r\n              element.name === selectHardwareInfoData.name &&\r\n              element.mac === selectHardwareInfoData.mac\r\n            ) {\r\n              setSelectHardwareDetail(selectHardwareInfoData);\r\n              sameFlag = true;\r\n              break;\r\n            }\r\n          }\r\n          console.log(\"sameFlag\", sameFlag);\r\n          if (!sameFlag) {\r\n            console.log(\"设置了默认值\");\r\n            let selectHardwareInfoData = list[0] || {};\r\n            setSelectHardwareDetail(selectHardwareInfoData);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }, [selectHardwareType]);\r\n\r\n  return (\r\n    <div\r\n      className=\"hardList\"\r\n      style={{ top: px(90), zIndex: 999 }}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        selectHardwareModalShowFun(false);\r\n      }}\r\n    >\r\n      <ul>{options}</ul>\r\n      {otherItems()}\r\n    </div>\r\n  );\r\n};\r\n\r\nHardAndPetsUI.propTypes = {\r\n  setInfo: PropTypes.func,\r\n};\r\n//默认值\r\nHardAndPetsUI.defaultProps = {\r\n  setInfo: () => { },\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    hardwareList: state.hardwareReduce.hardwareList,\r\n    userMessage: state.userReduce,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  { selectHardwareInfoFun, selectHardwareModalShowFun, setMenuNum, setSelectHardwareType }\r\n)(HardAndPetsUI);\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\vetSpire.js",["863","864"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\VetSpire.js",["865","866","867"],"/**\r\n * @file VetSpire.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/VetSpire 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del, patch } from '../ezyvetApi'\r\nimport { melladeskBaseUrl } from '../../config/config'\r\nconst baseURL = `${melladeskBaseUrl}/VetSpire`\r\n\r\n\r\n\r\nexport const selectExamByPatientId = (parames) => {\r\n    return postJson(`${baseURL}/selectExamByPatientId`, parames)\r\n}\r\n\r\n\r\nexport const updateVitalsTemperatureByVitalId = (parames) => {\r\n    return postJson(`${baseURL}/updateVitalsTemperatureByVitalId`, parames)\r\n}\r\n\r\n\r\nexport const selectLocations = (parames) => {\r\n    return postJson(`${baseURL}/selectLocations`, parames)\r\n}\r\n\r\n\r\nexport const selectProvidersByLocationId = (parames) => {\r\n    return postJson(`${baseURL}/selectProvidersByLocationId`, parames)\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrganization\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\petall.js",["868"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\api.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrg\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx",["869"],"import React, { useEffect, useState } from \"react\";\nimport { Layout } from \"antd\";\n\nimport LinkEquipment from \"./components/linkEquipment\";\nimport SwabPetEar from \"./components/swabPetEar\";\nimport ExperimentalPage from \"./components/experimental\";\nimport TimerPage from \"./components/timer\";\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\n\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../store/actions\";\nimport PropTypes from 'prop-types';\n\nimport \"./index.less\";\n\nconst { Content, Header } = Layout;\nconst OtterEQPage = ({ petMessage, hardwareMessage, bodyHeight }) => {\n  const [cutPageType, setCutPageType] = useState('linkPage');\n  const changePage = () => {\n    switch (cutPageType) {\n      case \"linkPage\":\n        return <LinkEquipment cutPageType={getCutPageType} />;\n      case \"swabPetEarPage\":\n        return <SwabPetEar cutPageType={getCutPageType} />;\n      case \"experimentalPage\":\n        return <ExperimentalPage cutPageType={getCutPageType} />;\n      case \"timerPage\":\n        return <TimerPage cutPageType={getCutPageType} />;\n      default:\n        break;\n    }\n  };\n\n  const getCutPageType = (type) => {\n    console.log('type: ', type);\n    if (!_.isEmpty(type)) {\n      setCutPageType(type);\n    }\n  }\n\n  useEffect(() => {\n    setCutPageType('linkPage');\n    return (() => { })\n\n  }, [petMessage.petId])\n\n  return (\n    <Layout className=\"ottterEQBox\" style={{ height: bodyHeight }}>\n      <div className=\"headerContentBox\" style={{ background: \"#fff\", position: 'relative' }}>\n        <div style={{ height: '100%' }}>\n          <HeaderItem />\n        </div>\n      </div>\n      {_.isEmpty(petMessage) ? (\n        <div className=\"chackPatientBox\">\n          <p className=\"chackPatientTitle\">Select a patient</p>\n        </div>\n      ) : (\n        <Content className=\"otterEQcontent\">\n          {changePage()}\n        </Content>\n      )}\n    </Layout>\n  );\n};\n\nOtterEQPage.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(OtterEQPage);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\ezyvetApi.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\team\\index.jsx",["870","871","872"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signUpVerifyEmail\\index.jsx",["873"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\clinicalStudyPage\\index.jsx",["874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909"],"import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport { Layout, message, Input, Modal, Table, Popconfirm, Select } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nimport edit from \"./../../assets/images/edit.png\";\nimport del from \"./../../assets/images/del.png\";\nimport start from \"./../../assets/img/start.png\";\nimport placement_gang from \"./../../assets/images/placement_gang.png\";\nimport placement_er from \"./../../assets/images/placement_er.png\";\nimport palcement_ye from \"./../../assets/images/palcement_ye.png\";\n\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\nimport { px, mTop } from \"../../utils/px\";\nimport electronStore from \"../../utils/electronStore\";\nimport UnassignModal from './../../components/UnassignModal/UnassignModal';\nimport SelectPet from \"../../components/selectPetModal\";\nimport AddPetModal from \"../../components/addPetModal\";\nimport {\n  addAllClinical,\n  deletePetExamByExamId,\n  getClinicalDataByExamId,\n  getPetExamAndClinicalByPetId,\n  getPetExamByDoctorId,\n  updatePetExam,\n  updatePetInfo,\n  addAndSavePetExam,\n  addDeskPet,\n} from \"../../api\";\n\nimport { connect } from \"react-redux\";\nimport { setTest } from \"../../store/actions\";\nimport ReactECharts from \"echarts-for-react\";\nimport propTypes from \"prop-types\";\nimport moment from \"moment\";\nimport Draggable from \"react-draggable\";\nimport _ from \"lodash\";\n\nimport \"./index.less\";\n\n\nlet resyncDeviceIsClick = true; //用于控制多次点击重新配对按钮\nlet storage = window.localStorage;\n\nlet mellaMeasureNumCopy = 0;\n\n//定义echarts的数据个数\nconst { Option } = Select;\nlet saveHistoryTime = null;\nconst ClinicalStudy = ({\n  bodyHeight,\n  mellaConnectStatus,\n  mellaMeasureValue,\n  mellaMeasureNum,\n  petDetailInfo,\n  setTest,\n  biggieBodyWeight,\n  biggieUnit,\n}) => {\n  const [units, setUnits] = useState(\"\");\n  const [temperature, setTemp] = useState(0);\n  const [showHistoryEchart, setShowHistoryEchart] = useState(false);\n  const [echarsData, setEcharsData] = useState({\n    Eci: [],\n    wen0: [],\n    wen1: [],\n  });\n  const [echarsData1, setEcharsData1] = useState({\n    Eci: [],\n    wen0: [],\n    wen1: [],\n  });\n  const [mellaStatus, setMellaStatus] = useState(\"disconnected\");\n  const [roomTemperature, setRoomTemperature] = useState(\"\");\n  const [referenceRectalTemperature, setReferenceRectalTemperature] =\n    useState(\"\");\n  const [bodyConditionScore, setBodyConditionScore] = useState(\"\");\n  const [furLength, setFurLength] = useState(\"\");\n  const [heartRate, setHeartRate] = useState(\"\");\n  const [bloodPressure, setBloodPressure] = useState(\"\");\n  const [respiratoryRate, setRespiratoryRate] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const [isPetCharacteristics, setIsPetCharacteristics] = useState(false);\n  const [historyData, setHistoryData] = useState([]);\n  const [editRectal, setEditRectal] = useState(\"\");\n  const [editRoomTemperature, setEditRoomTemperature] = useState(\"\");\n  const [editHeartRate, setEditHeartRate] = useState(\"\");\n  //定义变量 editBloodPressure,  editRespiratoryRate, editVisible: true, editId: key, memo: record.note, editBodyConditionScore, editFurLength\n  const [editBloodPressure, setEditBloodPressure] = useState(\"\");\n  const [editRespiratoryRate, setEditRespiratoryRate] = useState(\"\");\n  const [editVisible, setEditVisible] = useState(false);\n  const [editId, setEditId] = useState(\"\");\n  const [editMemo, setEditMemo] = useState(\"\");\n  const [editBodyConditionScore, setEditBodyConditionScore] = useState(\"\");\n  const [editFurLength, setEditFurLength] = useState(\"\");\n  const [tipSpin, setTipSpin] = useState(false);\n  const [tip, setTip] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [bounds, setBounds] = useState({\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  });\n  const [memo, setMemo] = useState(\"\");\n  const [windowWidth, setWindowWidth] = useState(px(500));\n  const [WeightValue, setWeightValue] = useState('');\n  const echartsElement = useRef(null);\n  const clinicalRef = useRef(null);\n  const [assignVisible, setAssignVisible] = useState(false);\n  const [seleceEmergencies, setSeleceEmergencies] = useState({});\n  const [lastWorkplaceId, setLastLastWorkplaceId] = useState('');\n  const [selectPetVisible, setSelectPetVisible] = useState(false);//选择宠物弹窗显隐\n  const [addPetVisible, setAddPetVisible] = useState(false);//添加新宠物弹窗显隐\n  const [selectPetModalLoading, setSelectPetModalLoading] = useState(false);//分配宠物后调用接口加载\n  const [addPetModalLoading, setAddPetModalLoading] = useState(false);//添加新宠物调用接口加载\n  const [addPetId, setAddPetId] = useState('');//添加宠物成功后返回的宠物id\n\n  //分辨率变化\n  const chartsBox = useCallback((node) => {\n    if (node !== null && echartsElement.current) {\n      setTimeout(() => {\n        echartsElement.current.getEchartsInstance().resize({ height: px(380) });\n      }, 1000)\n    }\n  }, [window.screen.availWidth]);\n  //窗口宽高变化\n  const resize = () => {\n    if (clinicalRef.current && clinicalRef.current.offsetWidth) {\n      setWindowWidth(clinicalRef.current.offsetWidth);\n    }\n  };\n  const addClinical = () => {\n    console.log(\"调用接口进行保存数据\");\n    let emerData = [];\n    let { Eci, wen0, wen1 } = echarsData;\n    for (let i = 0; i < wen0.length; i++) {\n      const element = wen0[i];\n      let str = {\n        data0: element,\n        data1: wen1[i],\n      };\n      emerData.push(str);\n    }\n\n    saveHistoryTime && clearTimeout(saveHistoryTime);\n    saveHistoryTime = setTimeout(() => {\n      let BCS =\n        bodyConditionScore === \"\" ? null : parseFloat(bodyConditionScore);\n      let hrartR = heartRate === \"\" ? null : parseFloat(heartRate);\n      let respireatoryR =\n        respiratoryRate === \"\" ? null : parseFloat(respiratoryRate);\n\n      let roomT =\n        roomTemperature === \"\"\n          ? null\n          : ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2);\n\n      let referenceT =\n        referenceRectalTemperature === \"\"\n          ? null\n          : ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2);\n\n      let furL = furLength === \"\" ? null : parseFloat(furLength);\n\n      let petVitalId = 1;\n\n      let datas = {\n        temperature: parseFloat(temperature), //测量温度\n        roomTemperature: roomT, //室温\n        bodyConditionScore: BCS, //身体状况评分\n        heartRate: hrartR, //心率\n        respiratoryRate: respireatoryR, //呼吸率\n        referenceRectalTemperature: referenceT, //参考腹部温度\n        furLength: furL, //毛发长度\n        bloodPressure: bloodPressure, //血压\n        memo: notes,\n        petVitalTypeId: petVitalId,\n        clinicalDataEntityList: emerData,\n        anusTemperature: referenceT\n      };\n      if (storage.roleId === `1`) {\n        datas.userId = storage.userId;\n      } else {\n        datas.doctorId = storage.userId;\n        datas.userId = storage.userId;\n      }\n      console.log('----====---', WeightValue);\n      let ubdateWeight = units === \"℉\" ? (parseFloat(WeightValue / 2)).toFixed(2) : parseFloat(WeightValue).toFixed(2);\n      let updatePetInfoData = {\n        weight: ubdateWeight\n      }\n      if (storage.lastOrganization) {\n        updatePetInfoData.organizationId = storage.lastOrganization\n      }\n\n      let { petId, isWalkIn } = petDetailInfo;\n      if (petId && !isWalkIn) {\n        datas.petId = petId;\n        console.log(\"入参数据:\", datas);\n        addAllClinical(datas)\n          .then((res) => {\n            console.log(res);\n\n            if (res.flag === true) {\n              console.log(\"上传成功\");\n              message.success(\"Uploaded successfully\");\n              _getHistory11(petDetailInfo.petId);\n            } else {\n              console.log(\"上传失败\");\n\n              message.error(\"upload failed\");\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            message.error(\"upload failed\");\n          });\n      } else if (isWalkIn) {\n        console.log(\"温度数据保存入参：\", datas);\n\n        addAllClinical(datas)\n          .then((res) => {\n            if (res.flag === true) {\n              message.success(\"Uploaded successfully\");\n\n              _getEmergencyHistory();\n            } else {\n              console.log(\"上传失败\");\n              message.error(\"upload failed\");\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n            message.error(err);\n          });\n      }\n      if (WeightValue !== '') {\n\n        updatePetInfo(petId, updatePetInfoData)\n          .then((res) => {\n            if (res.flag === true) {\n\n            } else {\n              message.error('Failed to update pet weight');\n            }\n          })\n          .catch(err => {\n            console.log(err);\n          })\n      }\n    }, 500);\n  };\n  const _getHistory11 = (petId) => {\n    let historys = [];\n    setLoading(true);\n    getPetExamAndClinicalByPetId(petId)\n      .then((res) => {\n        setLoading(false);\n        if (res.flag === true) {\n          let datas = res.data;\n          for (let i = datas.length - 1; i >= 0; i--) {\n            let data = datas[i];\n\n            let {\n              petId,\n              examId,\n              clinicalDatagroupId,\n              userId,\n              petVitalTypeId,\n              temperature,\n              roomTemperature,\n              bloodPressure,\n              memo,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              createTime,\n              clinicalDataEntity,\n              modifiedTime,\n            } = data;\n\n            if (!clinicalDatagroupId) {\n              continue;\n            }\n            let Tem = temperature;\n            if (clinicalDataEntity) {\n              Tem = Tem || clinicalDataEntity.data0;\n            }\n            Tem = Tem ? Tem : 0;\n\n            let time = null;\n            if (\n              modifiedTime &&\n              `${modifiedTime}` !== \"\" &&\n              `${modifiedTime}` !== `undefined`\n            ) {\n              time = modifiedTime;\n            } else {\n              time = createTime;\n            }\n            let json = {\n              time,\n              Temp: Tem,\n              placement: petVitalTypeId,\n              note: memo,\n              historyId: examId,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n            };\n            historys.push(json);\n          }\n          let historyData = [];\n          for (let i = 0; i < historys.length; i++) {\n            let history = historys[i];\n            let {\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n              examId,\n            } = history;\n            // console.log('--------', history.placement);\n            let placement = history.placement;\n            if (placement === null || placement === \"\") {\n              placement = 1;\n            }\n            let str = {\n              date: moment(history.time).format(\"MMM DD\"),\n              time: moment(history.time).format(\"hh:mm A\"),\n              temp: history.Temp,\n              placement,\n              note: history.note,\n              historyId: history.historyId,\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              roomTemperature,\n              bloodPressure,\n              petId,\n              userId,\n              key: examId,\n            };\n            historyData.push(str);\n          }\n          // this.setState({\n          //     historyData\n          // })\n          setHistoryData(historyData);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  };\n  const _getEmergencyHistory = () => {\n    //封装的日期排序方法\n    function ForwardRankingDate(data, p) {\n      for (let i = 0; i < data.length - 1; i++) {\n        for (let j = 0; j < data.length - 1 - i; j++) {\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\n            var temp = data[j];\n            data[j] = data[j + 1];\n            data[j + 1] = temp;\n          }\n        }\n      }\n      return data;\n    }\n    let historys = [];\n    setLoading(true);\n\n    getPetExamByDoctorId(storage.userId)\n      .then((res) => {\n        setLoading(false);\n        if (res.flag === true) {\n          let datas = res.data;\n          for (let i = datas.length - 1; i >= 0; i--) {\n            if (datas[i].petId === null && datas[i].clinicalDatagroupId !== null && datas[i].temperature !== null) {\n              let {\n                petId,\n                examId,\n                userId,\n                petVitalTypeId,\n                temperature,\n                roomTemperature,\n                bloodPressure,\n                memo,\n                clinicalDatagroupId,\n                bodyConditionScore,\n                heartRate,\n                respiratoryRate,\n                referenceRectalTemperature,\n                furLength,\n                createTime,\n                clinicalDataEntity,\n              } = datas[i];\n              let Tem = temperature;\n              try {\n                Tem = temperature || clinicalDataEntity.data0;\n              } catch (error) {\n                console.log(\"抛出的异常\", error);\n              }\n\n              let str = {\n                clinicalDatagroupId,\n                createTime,\n                date: moment(createTime).format(\"MMM DD\"),\n                time: moment(createTime).format(\"hh:mm A\"),\n                temp: parseInt(Tem * 10) / 10,\n                placement: petVitalTypeId,\n                note: memo,\n                historyId: examId,\n                bodyConditionScore,\n                heartRate,\n                respiratoryRate,\n                referenceRectalTemperature,\n                furLength,\n                roomTemperature,\n                bloodPressure,\n                petId,\n                userId,\n              };\n\n              historys.push(str);\n            }\n          }\n\n          //把所有数据拿完后做个排序\n\n          let historyData = ForwardRankingDate(historys, \"createTime\");\n          setHistoryData(historyData);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  };\n  const getOption = () => {\n    let option = {};\n    try {\n      let min, max;\n      if (units === \"℃\") {\n        min = 25;\n        max = 45;\n      } else {\n        min = 75;\n        max = 115;\n      }\n      let { Eci, wen0, wen1 } = _.isEmpty(echarsData1.Eci)\n        ? echarsData\n        : echarsData1;\n      option = {\n        color: [\"#81b22f\"],\n        tooltip: {\n          /*返回需要的信息*/\n          trigger: \"axis\",\n          triggerOn: \"mousemove\",\n          enterable: true,\n          formatter: function (param) {\n            var value = param[0].value;\n            // console.log('---valuez值', value, units);\n            if (\n              (units === \"℉\" && parseInt(value) <= 32) ||\n              (units === \"℃\" && parseInt(value) == 0)\n            ) {\n              return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:--</div>`;\n            }\n            return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(\n              1\n            )}${units}</div>`;\n          },\n        },\n        xAxis: {\n          name: \"SPL\",\n          nameLocation: \"end\",\n          nameTextStyle: {\n            align: \"left\",\n          },\n          type: \"category\",\n          data: Eci,\n          axisLine: {\n            lineStyle: {\n              // 设置x轴颜色\n              color: \"#A0A0A0\",\n              show: true,\n            },\n          },\n          // 设置X轴数据旋转倾斜\n          axisLabel: {\n            rotate: 0, // 旋转角度\n            interval: 29, //设置X轴数据间隔几个显示一个，为0表示都显示\n          },\n        },\n        yAxis: {\n          name: \"temperature\",\n          type: \"value\",\n          min, // 设置y轴刻度的最小值\n          max, // 设置y轴刻度的最大值\n          splitNumber: 0, // 设置y轴刻度间隔个数\n          nameTextStyle: {\n            padding: [0, 0, 0, 8],\n            // backgroundColor: 'pink',\n            width: \"1200px\",\n            // fontSize: 20,\n            align: \"left\",\n          },\n\n          axisLine: {\n            lineStyle: {\n              // 设置x轴颜色\n              color: \"#A0A0A0\",\n              show: true,\n            },\n          },\n          splitLine: {\n            show: false,\n          },\n        },\n        series: [\n          {\n            name: \"模拟数据\",\n            type: \"line\",\n            showSymbol: false,\n            hoverAnimation: false,\n            // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\n            data: wen0,\n            smooth: 0.5,\n            symbol: \"none\",\n            // itemStyle: {\n            //     normal: {\n\n            //     }\n            // }\n            lineStyle: {\n              // 系列级个性化折线样式\n              width: 2,\n              type: \"solid\",\n              color: {\n                type: \"linear\",\n                x: 0,\n                y: 1,\n                x2: 0,\n                y2: 0,\n                colorStops: [\n                  {\n                    offset: 0.5,\n                    color: \"#47C2ED\", // 0% 处的颜色  蓝\n                  },\n                  {\n                    offset: 1,\n                    color: \"#78D35D\", // 50% 处的颜色  绿\n                  },\n                  // {\n                  //   offset: 1, color: 'red' // 100% 处的颜色   红\n                  // }\n                ],\n                globalCoord: false, // 缺省为 false\n              },\n            },\n          },\n        ],\n      };\n    } catch (error) { }\n\n    return option;\n  };\n  const _status = () => {\n    let text = \"\",\n      unit = \"\",\n      temColor = \"\";\n    let Temp = parseFloat(temperature);\n    if (mellaConnectStatus === \"disconnected\") {\n      if (!showHistoryEchart) {\n        Temp = \"\";\n        text = \"disconnected\";\n        temColor = \"#3B3A3A\";\n      } else {\n        text = \"disconnected\";\n        temColor = \"#3B3A3A\";\n      }\n    } else if (mellaConnectStatus === \"connected\") {\n      Temp = \"\";\n      text = \"connected\";\n      temColor = \"#3B3A3A\";\n    } else {\n      text = \"connected\";\n      temColor = \"#3B3A3A\";\n      if (Temp > 15) {\n        unit = units;\n        if (Temp > 39) {\n          text = \"High\";\n          temColor = \"#E1206D\";\n        } else if (Temp < 31) {\n          text = \"Low\";\n          temColor = \"#47C2ED\";\n        } else {\n          text = \"Normal\";\n          temColor = \"#78D35D\";\n        }\n      }\n    }\n    let temp = null;\n\n    if (`${Temp}` !== \"NaN\" && Temp) {\n      temp =\n        units === \"℉\" ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1);\n    }\n    let lowFlog = false;\n    if (unit === \"℃\") {\n      if (temp < 24.8) {\n        lowFlog = true;\n      }\n    } else {\n      if (temp < 76.6) {\n        lowFlog = true;\n      }\n    }\n\n    return (\n      <div\n        className=\"Tem\"\n        style={{\n          color: temColor,\n          right: px(100),\n          bottom: mTop(120),\n          pointerEvents: \"none\",\n        }}\n      >\n        {mellaConnectStatus !== \"isMeasuring\" ? (\n          showHistoryEchart ? (\n            <>\n              <span style={{ fontSize: px(46), fontWeight: \"bold\" }}>\n                {temp}{\" \"}\n                <sup style={{ fontSize: px(28), fontWeight: \"bold\" }}>\n                  {units}\n                </sup>\n              </span>\n              <br />\n              {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\n\n              <span\n                style={{\n                  fontSize: px(32),\n                  color: \"#8a8a8a\",\n                  fontWeight: \"bold\",\n                }}\n              >{`History`}</span>\n            </>\n          ) : (\n            <>\n              <span style={{ fontSize: px(46), fontWeight: \"bold\" }}>\n                {temp < 3 && !temp ? null : temp}{\" \"}\n                <sup style={{ fontSize: px(28), fontWeight: \"bold\" }}>\n                  {unit}\n                </sup>\n              </span>\n              <br />\n              <span style={{ fontSize: px(32), fontWeight: \"bold\" }}>\n                {text}\n              </span>\n            </>\n          )\n        ) : lowFlog ? (\n          <>\n            <span style={{ fontSize: px(46), fontWeight: \"bold\" }}>\n              {\"Low\"}\n            </span>\n            <br />\n          </>\n        ) : (\n          <>\n            <span style={{ fontSize: px(46), fontWeight: \"bold\" }}>\n              {temp}{\" \"}\n              <sup style={{ fontSize: px(28), fontWeight: \"bold\" }}>{unit}</sup>\n            </span>\n            <br />\n          </>\n        )}\n      </div>\n    );\n  };\n  const handleChange = (index) => {\n    console.log(\"---------\", index);\n    setFurLength(index);\n  };\n  //Exam Details内容\n  const _petCharacteristics = () => {\n    let placeholder = \"\";\n    switch (`${furLength}`) {\n      case \"1\":\n        placeholder = \"smooth\";\n        break;\n      case \"2\":\n        placeholder = \"short\";\n        break;\n      case \"3\":\n        placeholder = \"medium\";\n        break;\n      case \"4\":\n        placeholder = \"long\";\n        break;\n      default:\n        break;\n    }\n    return (\n      <div\n        className=\"petChaeacteristics\"\n        style={{ paddingLeft: px(10), paddingRight: px(10), height: \"100%\" }}\n      >\n        <div className=\"child\">\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Room Temperature: </p>\n            <Input\n              className=\"inp\"\n              value={roomTemperature}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setRoomTemperature(str);\n              }}\n              suffix={'℉'}\n              maxLength={8}\n            />\n          </div>\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Reference Rectal Temperature: </p>\n            <Input\n              className=\"inp\"\n              value={`${referenceRectalTemperature}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setReferenceRectalTemperature(str);\n              }}\n              suffix={'℉'}\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <div className=\"child\">\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Body Condition Score: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={bodyConditionScore}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setBodyConditionScore(str);\n              }}\n              maxLength={8}\n            />\n          </div>\n          <div className=\"item\">\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Fur Length: </p>\n            <Select\n              className=\"inpSelect\"\n              placeholder\n              onChange={handleChange}\n              value={placeholder}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n        </div>\n        <div className=\"child\">\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Heart Rate: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={`${heartRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setHeartRate(str);\n              }}\n              suffix={'bpm'}\n              maxLength={8}\n            />\n          </div>\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Blood Pressure: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={bloodPressure}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setBloodPressure(str);\n              }}\n              suffix={'mm'}\n              maxLength={8}\n            />\n          </div>\n        </div>\n        <div className=\"child\">\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: \"140px\" }}>Respiratory Rate: </p>\n            <Input\n              className=\"inp\"\n              style={{ border: \"none\", outline: \"medium\" }}\n              value={`${respiratoryRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setRespiratoryRate(str);\n              }}\n              suffix={'bpm'}\n              maxLength={8}\n            />\n          </div>\n          <div\n            className=\"item\"\n          >\n            <p className=\"labelTitle\" style={{ width: '140px' }}>Weight:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n              value={WeightValue}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                setWeightValue(str);\n              }}\n              suffix={units === '℉' ? 'lb' : 'kg'}\n              maxLength={8}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  };\n  const _history = () => {\n    const _del = (key, record) => {\n      deletePetExamByExamId(key)\n        .then(\n          (res) => {\n            if (res.flag === true) {\n              const historyData1 = [...historyData];\n              setHistoryData(\n                historyData1.filter((item) => item.historyId !== key)\n              );\n            } else {\n              message.error('fail to delete!');\n            }\n          }\n        );\n    };\n    const _edit = (key, record) => {\n      let {\n        heartRate,\n        bloodPressure,\n        respiratoryRate,\n        referenceRectalTemperature,\n        roomTemperature,\n        bodyConditionScore,\n        furLength,\n        note,\n      } = record;\n      let editHeartRate =\n        heartRate !== null && heartRate !== undefined ? heartRate : \"\";\n      let editBloodPressure =\n        bloodPressure !== null && bloodPressure !== undefined\n          ? bloodPressure\n          : \"\";\n      let editRespiratoryRate =\n        respiratoryRate !== null && respiratoryRate !== undefined\n          ? respiratoryRate\n          : \"\";\n      let editRectal =\n        referenceRectalTemperature !== null &&\n          referenceRectalTemperature !== undefined\n          ? (referenceRectalTemperature * 1.8 + 32).toFixed(1)\n          : \"\";\n      let editRoomTemperature =\n        roomTemperature !== null && roomTemperature !== undefined\n          ? (roomTemperature * 1.8 + 32).toFixed(1)\n          : \"\";\n      let editBodyConditionScore =\n        bodyConditionScore !== null && bodyConditionScore !== undefined\n          ? bodyConditionScore\n          : \"\";\n      let editFurLength = furLength;\n      let mome = note ? note : \"\";\n\n      console.log(\n        editRectal,\n        editRoomTemperature,\n        editHeartRate,\n        editBloodPressure,\n        editRespiratoryRate\n      );\n\n      //更新editRectal,editRoomTemperature,editHeartRate,editBloodPressure,editRespiratoryRate,editVisible: true,editId: key,memo: record.note,editBodyConditionScore,editFurLength\n      setEditRectal(editRectal);\n      setEditRoomTemperature(editRoomTemperature);\n      setEditHeartRate(editHeartRate);\n      setEditBloodPressure(editBloodPressure);\n      setEditRespiratoryRate(editRespiratoryRate);\n      setEditVisible(true);\n      setEditId(key);\n      setEditMemo(record.note);\n      setEditBodyConditionScore(editBodyConditionScore);\n      setEditFurLength(editFurLength);\n      setMemo(mome);\n    };\n    const see = (id, record) => {\n      setEcharsData1({\n        Eci: [],\n        wen0: [],\n        wen1: [],\n      });\n      console.log(id, record);\n      setTip(\"data is loading\");\n      setTipSpin(true);\n      getClinicalDataByExamId(id)\n        .then((res) => {\n          setTip(\"\");\n          setTipSpin(false);\n          if (res.flag) {\n            let datas = res.data.clinicalDataEntityList;\n            if (datas) {\n              let echarsData = {\n                Eci: [],\n                wen0: [],\n                wen1: [],\n              };\n              let { wen0, wen1, Eci } = echarsData;\n              for (let i = 0; i < datas.length; i++) {\n                let { data0, data1 } = datas[i];\n\n                Eci.push(i);\n                if (units === \"℃\") {\n                  wen0.push(data0);\n                  wen1.push(data1);\n                } else {\n                  wen0.push(data0 * 1.8 + 32);\n                  wen1.push(data1 * 1.8 + 32);\n                }\n              }\n              let Temp = datas[datas.length - 1].data0 || \"\";\n              setEcharsData(echarsData);\n              setTemp(Temp);\n              setShowHistoryEchart(true);\n            }\n          }\n        })\n        .catch((err) => {\n          setTip(\"\");\n          setTipSpin(false);\n          console.log(err);\n        });\n    };\n    const isflog = window.screen.height < 1000 ? true : false;\n    const columns = [\n      {\n        title: \"\",\n        dataIndex: \"operation\",\n        key: \"operation\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n\n        render: (text, record, index) => {\n          return (\n            <div\n              className=\"activeImageBox\"\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <Popconfirm\n                title=\"Sure to delete?\"\n                onConfirm={() => _del(record.historyId, record)}\n              >\n                <img src={del} alt=\"\" className=\"activeImages\" />\n              </Popconfirm>\n              {petDetailInfo.isWalkIn ? (\n                <div\n                  className=\"assign\"\n                  style={{\n                    fontSize: px(14),\n                  }}\n                  onClick={() => {\n                    setSelectPetVisible(true);\n                    setSeleceEmergencies(record);\n                    setLastLastWorkplaceId(storage.lastOrganization);\n                  }}\n                >\n                  Assign\n                </div>\n              ) : (\n                <>\n                  <img\n                    src={edit}\n                    alt=\"\"\n                    // style={{ width: px(25) }}\n                    onClick={() => _edit(record.historyId, record)}\n                    className=\"activeImages\"\n                  />\n\n                  <img\n                    src={start}\n                    alt=\"\"\n                    // style={{ width: px(25) }}\n                    onClick={() => see(record.historyId, record)}\n                    className=\"activeImages\"\n                  />\n                </>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        title: \"Date\",\n        dataIndex: \"date\",\n        key: \"date\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      {\n        title: \"Time\",\n        dataIndex: \"time\",\n        key: \"time\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\n        },\n      },\n      {\n        title: `Temp(${units})`,\n        // title: `Temp(℉)`,\n        key: \"temp\",\n        dataIndex: \"temp\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          // console.log(text, record);\n\n          /**\n           * bag：温度数值前的圆圈的背景颜色\n           * tem：展示的温度\n           * endvalue:将从后台得到的数据全部转化成华氏度\n           * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n           * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n           *\n           */\n\n          let bag = \"\",\n            tem = \"\";\n\n          let endValue =\n            text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10;\n          let min = 100.4,\n            max = 102.56;\n\n          if (endValue > max) {\n            bag = \"#E1206D\";\n          } else if (endValue < min) {\n            bag = \"#98DA86\";\n          } else {\n            bag = \"#58BDE6\";\n          }\n\n          if (units === \"℃\") {\n            if (text) {\n              tem = `${text}${units}`;\n              if (text > 55) {\n                tem = `${((text - 32) / 1.8).toFixed(1)}${units}`;\n              } else {\n                tem = `${text.toFixed(1)}${units}`;\n              }\n            }\n          } else {\n            if (text) {\n              if (text > 55) {\n                tem = `${text}${units}`;\n              } else {\n                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${units}`;\n              }\n            }\n          }\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {tem ? (\n                <div\n                  style={{\n                    width: \"8px\",\n                    height: \"8px\",\n                    borderRadius: \"8px\",\n                    backgroundColor: bag,\n                    marginRight: \"3px\",\n                  }}\n                />\n              ) : null}\n              <p style={{ margin: 0, padding: 0 }}>{tem}</p>\n            </div>\n          );\n        },\n      },\n      {\n        title: `Rectal Temperature`,\n        key: \"referenceRectalTemperature\",\n        dataIndex: \"referenceRectalTemperature\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          // console.log('肛温的值：', text);\n          let num = text;\n          if (text !== null) {\n            num = (text * 1.8 + 32).toFixed(1);\n          }\n\n          return (\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              {text !== null && (\n                <p style={{ margin: 0, padding: 0 }}>\n                  {num} <span>{\"℉\"}</span>\n                </p>\n              )}\n            </div>\n          );\n        },\n      },\n      {\n        title: \"Placement\",\n        dataIndex: \"placement\",\n        key: \"placement\",\n        align: \"center\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          switch (record.placement) {\n            case 1:\n              return (\n                //腋温\n                <div>\n                  <img src={palcement_ye} alt=\"\" />\n                </div>\n              );\n            case 3:\n              return (\n                //肛温\n                <div>\n                  <img src={placement_gang} alt=\"\" />\n                </div>\n              );\n            case 2:\n              return (\n                //肛温\n                <div>\n                  <img src={placement_gang} alt=\"\" />\n                </div>\n              );\n            case 4:\n              return (\n                //耳温\n                <div>\n                  <img src={placement_er} alt=\"\" />\n                </div>\n              );\n            default:\n              return null;\n          }\n        },\n      },\n      {\n        title: \"Note\",\n        dataIndex: \"note\",\n        key: \"note\",\n        className: `${isflog ? \"operation\" : \"\"}`,\n        ellipsis: true,\n        align: \"center\",\n        render: (text, record, index) => {\n          return <p style={{ width: \"100%\" }}>{text}</p>;\n        },\n      },\n    ];\n\n    let hisHe = mTop(200);\n    try {\n      let historyElement = document.querySelectorAll(\n        \"#clinicalMeasure11 .historyTable\"\n      );\n      hisHe = historyElement[0].clientHeight - mTop(100);\n    } catch (error) { }\n\n    return (\n      <div className=\"historyTable\">\n        <Table\n          columns={columns}\n          loading={loading}\n          dataSource={historyData}\n          rowKey={(columns) => columns.historyId}\n          // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\n          pagination={false}\n          scroll={{\n            // y: hisHe,\n            y: '80%'\n          }}\n        />\n      </div>\n    );\n  };\n  const _editModal = () => {\n    function save() {\n      let datas = {\n        memo: memo,\n        bodyConditionScore: parseInt(editBodyConditionScore),\n        furLength: parseInt(editFurLength),\n        heartRate: editHeartRate,\n        bloodPressure: editBloodPressure,\n        respiratoryRate: editRespiratoryRate,\n      };\n      if (editRoomTemperature) {\n        datas.roomTemperature = (\n          (parseFloat(editRoomTemperature) - 32) /\n          1.8\n        ).toFixed(2);\n      }\n      if (editRectal) {\n        datas.referenceRectalTemperature = (\n          (parseFloat(editRectal) - 32) /\n          1.8\n        ).toFixed(2);\n      }\n\n      setEditVisible(false);\n      setTip(\"Data is being modified\");\n      setTipSpin(true);\n\n\n      updatePetExam(editId, datas)\n        .then((res) => {\n          console.log(res);\n          setTipSpin(false);\n          setTip(\"\");\n          message.success(\"Data modified successfully\");\n\n          _getHistory11(petDetailInfo.petId);\n        })\n        .catch((err) => {\n          setTipSpin(false);\n          setTip(\"\");\n\n          message.success(\" Data modification failed\");\n\n          console.log(err);\n        });\n    }\n\n    let furLength = \"\";\n    if (editFurLength !== null && editFurLength !== undefined) {\n      switch (`${editFurLength}`) {\n        case \"1\":\n          furLength = \"smooth\";\n          break;\n        case \"2\":\n          furLength = \"short\";\n          break;\n        case \"3\":\n          furLength = \"medium\";\n          break;\n        case \"4\":\n          furLength = \"long\";\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    return (\n      <Modal\n        title={\n          <div\n            style={{\n              width: \"100%\",\n              cursor: \"move\",\n              height: \"20px\",\n              textAlign: \"center\",\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                setDisabled(false);\n              }\n            }}\n            onMouseOut={() => {\n              setDisabled(true);\n            }}\n            onFocus={() => { }}\n            onBlur={() => { }}\n          // end\n          >\n            Modification history information\n          </div>\n        }\n        visible={editVisible}\n        // visible={true}\n        onCancel={() => {\n          setEditVisible(false);\n        }}\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n          // onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div>{modal}</div>\n          </Draggable>\n        )}\n        footer={\n          [] // 设置footer为空，去掉 取消 确定默认按钮\n        }\n        destroyOnClose={true}\n        className=\"editModalBox\"\n      >\n        <div id=\"selectEmergenciesModal\">\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Room Temperature </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editRoomTemperature}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n\n                setEditRoomTemperature(str);\n              }}\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Rectal Temperature</p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editRectal}\n              onChange={(item) => {\n                let str = item.target.value\n                  .replace(/[^\\d^\\.]+/g, \"\")\n                  .replace(/\\.{2,}/g, \".\")\n                  .replace(\".\", \"$#$\")\n                  .replace(/\\./g, \"\")\n                  .replace(\"$#$\", \".\")\n                  .replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, \"$1$2.$3\");\n                setEditRectal(str);\n              }}\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Body Condition Score</p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editBodyConditionScore}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, \"\");\n\n                setEditBodyConditionScore(str);\n              }}\n            />\n          </div>\n\n          <div className=\"bodyType11\">\n            <p style={{ width: \"140px\" }}>Fur Length: </p>\n            <Select\n              placeholder\n              onChange={(index) => {\n                console.log(index);\n                setEditFurLength(index);\n              }}\n              style={{\n                borderRadius: \"40px\",\n                height: \"33px\",\n                outline: \"none\",\n                borderWidth: 0,\n              }}\n              value={furLength}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Heart Rate: </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editHeartRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, \"\");\n                setEditHeartRate(str);\n              }}\n            />\n            <span>bpm</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Blood Pressure </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editBloodPressure}\n              onChange={(item) => {\n                setEditBloodPressure(item.target.value);\n              }}\n            />\n            <span>mm</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"140px\" }}>Respiratory Rate: </p>\n            <Input\n              style={{ border: \"none\", outline: \"medium\" }}\n              bordered={false}\n              value={editRespiratoryRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, \"\");\n                setEditRespiratoryRate(str);\n              }}\n            />\n            <span>bpm</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: \"80px\" }}>Notes</p>\n            <textarea\n              rows=\"2\"\n              cols=\"40\"\n              style={{ textIndent: \"10px\" }}\n              value={memo}\n              onChange={(val) => {\n                setMemo(val.target.value);\n              }}\n            ></textarea>\n          </div>\n\n          <div className=\"btn\" onClick={save}>\n            Save\n          </div>\n        </div>\n      </Modal>\n    );\n  };\n  const _foot = () => {\n    let lbgc = \"\",\n      rbgc = \"\";\n    if (isPetCharacteristics) {\n      lbgc = \"rgba(25,173,228,0.5)\";\n      rbgc = \"rgba(105,201,237,1)\";\n    } else {\n      lbgc = \"rgba(105,201,237,1)\";\n      rbgc = \"rgba(25,173,228,0.5)\";\n    }\n    return (\n      <div className=\"clinical_foot\">\n        <div className=\"top\">\n          <div\n            className=\"foot_l\"\n            style={{ backgroundColor: lbgc }}\n            onClick={() => setIsPetCharacteristics(true)}\n          >\n            Exam Details\n          </div>\n          <div\n            className=\"foot_l\"\n            style={{ backgroundColor: rbgc }}\n            onClick={() => setIsPetCharacteristics(false)}\n          >\n            History\n          </div>\n        </div>\n        {isPetCharacteristics ? _petCharacteristics() : _history()}\n      </div>\n    );\n  };\n  //获取本地数据\n  const getLocalSetting = () => {\n    let settings = {\n      isHua: true,\n      is15: true,\n      self_tarting: false, //自启动\n      isBacklight: true,\n      isBeep: true,\n      backlightTimer: { length: 140, number: \"45\" },\n      autoOff: { length: 0, number: \"30\" },\n    };\n    electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\n  };\n  //echars渲染\n  const echars = () => {\n    return (\n      <div id=\"myCharts\"\n        style={{ width: windowWidth }}\n        ref={chartsBox}\n      >\n        <ReactECharts\n          option={getOption()}\n          theme=\"Imooc\"\n          style={{ height: 'auto', width: 'auto' }}\n          notMerge={true}\n          lazyUpdate={true}\n          ref={echartsElement}\n          className=\"charts\"\n        />\n        {_status()}\n      </div>\n    );\n  };\n  //分配宠物walk-in信息\n  const assignPet = (value) => {\n    setSelectPetModalLoading(true);\n    let parmes = {\n      petId: value.petId,\n      clinicalDatagroupId: seleceEmergencies.clinicalDatagroupId,\n    };\n    addAndSavePetExam(seleceEmergencies.historyId, parmes)\n      .then((res) => {\n        setSelectPetModalLoading(false);\n        if (res.flag === true) {\n          message.success(\"Assigned successfully\");\n          setSelectPetVisible(false);\n          setAddPetId('');\n          _getEmergencyHistory();\n        } else {\n          message.error(\"Assignment failed\");\n        }\n      })\n      .catch((err) => {\n        setSelectPetModalLoading(false);\n        message.error(\"Assignment failed\");\n      });\n  }\n  //添加宠物弹窗显示\n  const onAddPet = () => {\n    setAddPetId('');\n    setSelectPetVisible(false);\n    setAddPetVisible(true);\n  }\n  //添加宠物\n  const addNewPet = (value) => {\n    let data = {\n      ...value,\n      weight: value.weight === '' ? '' : parseFloat(value.weight).toFixed(2),\n    };\n    if (storage.lastWorkplaceId) {\n      data.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      data.organizationId = storage.lastOrganization\n    }\n    if (storage.userId) {\n      data.doctorId = storage.userId\n    }\n    setAddPetModalLoading(true);\n    addDeskPet(value.patientId, data)\n      .then((res) => {\n        setAddPetModalLoading(false);\n        if (res.flag === true) {\n          message.success('Adding pets successfully');\n          setAddPetId(res.data.petId);\n          setAddPetVisible(false);\n          setSelectPetVisible(true);\n        } else {\n          message.error('patientId already exists');\n        }\n      })\n      .catch((err) => {\n        setAddPetModalLoading(false);\n      })\n  }\n\n  useEffect(() => {\n    if (petDetailInfo.petId) {\n      _getHistory11(petDetailInfo.petId);\n    } else if (petDetailInfo.isWalkIn) {\n      _getEmergencyHistory();\n    }\n    return () => { };\n  }, [petDetailInfo]);\n\n  useEffect(() => {\n    return () => {\n      saveHistoryTime && clearTimeout(saveHistoryTime);\n    };\n  }, []);\n\n  useEffect(() => {\n    //react监听屏幕窗口改变\n    window.addEventListener(\"resize\", resize);\n\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    mellaMeasureNumCopy = mellaMeasureNum;\n    // setTest(echartsElement);\n    return (() => { })\n  }, []);\n\n  useEffect(() => {\n    if (mellaMeasureNumCopy === mellaMeasureNum) {\n      return;\n    }\n    mellaMeasureNumCopy = mellaMeasureNum;\n    // console.log('监听', mellaMeasureValue);\n    setTemp(mellaMeasureValue);\n    let { Eci, wen0, wen1 } = echarsData;\n    //两个数组合并成一个数组\n    let EciCopy = [...Eci];\n\n    let win0Copy = [...wen0];\n    let wen1Copy = [...wen1];\n    EciCopy.push(EciCopy.length + 1);\n    win0Copy.push(mellaMeasureValue);\n    wen1Copy.push(mellaMeasureValue);\n    let json = {\n      Eci: EciCopy,\n      wen0: win0Copy,\n      wen1: wen1Copy,\n    };\n    setEcharsData(json);\n    let Eci1 = echarsData1.Eci;\n    let wen01 = echarsData1.wen0;\n    let wen11 = echarsData1.wen1;\n    let EciCopy1 = [...Eci1];\n\n    let win0Copy1 = [...wen01];\n    let wen1Copy1 = [...wen11];\n    EciCopy1.push(EciCopy1.length + 1);\n    let num =\n      units === \"℃\"\n        ? mellaMeasureValue\n        : _.floor(mellaMeasureValue * 1.8 + 32, 2);\n    win0Copy1.push(num);\n    wen1Copy1.push(num);\n    let json1 = {\n      Eci: EciCopy1,\n      wen0: win0Copy1,\n      wen1: wen1Copy1,\n    };\n    setEcharsData1(json1);\n    // const option = getOption();\n    // echartsElement.current.getEchartsInstance().setOption(option);\n    return () => { };\n  }, [mellaMeasureNum]);\n\n  useEffect(() => {\n    if (mellaConnectStatus === \"complete\" && echarsData.Eci.length > 10) {\n      addClinical();\n    }\n    if (mellaConnectStatus === \"isMeasuring\" && mellaStatus !== \"isMeasuring\") {\n      setEcharsData({\n        Eci: [],\n        wen0: [],\n        wen1: [],\n      });\n      setEcharsData1({\n        Eci: [],\n        wen0: [],\n        wen1: [],\n      });\n    }\n    if (mellaConnectStatus === \"isMeasuring\") {\n      setShowHistoryEchart(false);\n    }\n\n    setMellaStatus(mellaConnectStatus);\n    return () => { };\n  }, [mellaConnectStatus]);\n\n  useEffect(() => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (!hardSet) {\n      getLocalSetting();\n    } else {\n      setUnits(hardSet.isHua ? \"℉\" : \"℃\");\n    }\n    return () => { };\n  }, []);\n\n  useEffect(() => {\n    let bufferData = electronStore.get(`${petDetailInfo.petId}`);\n    // console.log('bufferData: ', bufferData);\n    setRoomTemperature(bufferData ? bufferData?.roomTemperature : '');\n    setReferenceRectalTemperature(bufferData ? bufferData?.referenceRectalTemperature : '');\n    setBodyConditionScore(bufferData ? bufferData?.bodyConditionScore : '');\n    setFurLength(bufferData ? bufferData?.furLength : '');\n    setHeartRate(bufferData ? bufferData?.heartRate : '');\n    setBloodPressure(bufferData ? bufferData?.bloodPressure : '');\n    setRespiratoryRate(bufferData ? bufferData?.respiratoryRate : '');\n    setWeightValue(bufferData ? bufferData?.WeightValue : '');\n    return (() => { })\n  }, [petDetailInfo.petId]);\n\n  useEffect(() => {\n    return () => {\n      let newData = {\n        roomTemperature: roomTemperature,\n        referenceRectalTemperature: referenceRectalTemperature,\n        bodyConditionScore: bodyConditionScore,\n        furLength: furLength,\n        heartRate: heartRate,\n        bloodPressure: bloodPressure,\n        respiratoryRate: respiratoryRate,\n        WeightValue: WeightValue\n      }\n      electronStore.set(`${petDetailInfo.petId}`, newData);\n    }\n  }, [roomTemperature, referenceRectalTemperature, bodyConditionScore, furLength, heartRate, bloodPressure, respiratoryRate, WeightValue, petDetailInfo.petId])\n\n  useEffect(() => {\n    if (biggieBodyWeight !== 0) {\n      if (units === '℉') {\n        setWeightValue((biggieBodyWeight * 2).toFixed(2));\n      } else {\n        setWeightValue(biggieBodyWeight.toFixed(2));\n      }\n    }\n    return (() => { })\n  }, [biggieBodyWeight])\n\n\n  return (\n    <>\n      <div\n        id=\"clinical\"\n        style={{\n          height: bodyHeight,\n          minWidth: px(200),\n          minHeight: bodyHeight,\n          overflow: \"hidden\",\n        }}\n        ref={clinicalRef}\n      >\n        <div\n          className=\"headerContentBox\"\n          style={{ background: \"#fff\", position: \"relative\" }}\n        >\n          <Layout style={{ height: \"100%\" }}>\n            <HeaderItem timeNum={60} />\n          </Layout>\n        </div>\n        <div\n          className=\"clinicalBody\"\n          style={{ width: \"100%\", height: bodyHeight - px(100) }}\n        >\n          <div className=\"clinical_top\">\n            <div className=\"r\">\n              {/*顶部按钮Re-sync Base*/}\n              {mellaConnectStatus === \"disconnected\" && (\n                <div className=\"bb1\">\n                  <div\n                    className=\"btn78\"\n                    onClick={() => {\n                      if (resyncDeviceIsClick === true) {\n                        resyncDeviceIsClick = false;\n                        let ipcRenderer = window.electron.ipcRenderer;\n                        ipcRenderer.send(\"qiehuan\");\n                        const time = setTimeout(() => {\n                          resyncDeviceIsClick = true;\n                          clearTimeout(time);\n                        }, 2500);\n                      }\n                    }}\n                  >\n                    Re-sync Base\n                  </div>\n                </div>\n              )}\n              {echars()}\n              {/* 底部宠物信息 */}\n              {_foot()}\n              {_editModal()}\n              {tipSpin && (\n                <div className=\"modal\">\n                  <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\n                    <LoadingOutlined\n                      style={{\n                        fontSize: 30,\n                        color: \"#fff\",\n                        marginTop: mTop(-30),\n                      }}\n                    />\n                  </div>\n                  <p>data is loading...</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {\n          selectPetVisible && (\n            <SelectPet\n              visible={selectPetVisible}\n              destroyOnClose\n              width={400}\n              value={addPetId}\n              onCancel={() => {\n                setAddPetId('');\n                setSelectPetVisible(false);\n              }}\n              onSelect={(value) => {\n                assignPet(value);\n              }}\n              onAddPet={() => onAddPet()}\n              onLoading={selectPetModalLoading}\n            />\n          )\n        }\n        {\n          addPetVisible && (\n            <AddPetModal\n              visible={addPetVisible}\n              destroyOnClose\n              width={400}\n              onCancel={() => {\n                setAddPetVisible(false);\n                setSelectPetVisible(true);\n              }}\n              onConfirm={(value) => {\n                addNewPet(value);\n              }}\n              onLoading={addPetModalLoading}\n            />\n          )\n        }\n      </div>\n    </>\n  );\n};\n\nClinicalStudy.propTypes = {\n  bodyHeight: propTypes.number,\n};\nClinicalStudy.defaultProps = {\n  bodyHeight: 0,\n};\nexport default connect(\n  (state) => ({\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\n    biggieBodyWeight: state.hardwareReduce.biggieBodyWeight,\n    biggieUnit: state.hardwareReduce.biggieUnit,\n    petDetailInfo: state.petReduce.petDetailInfo,\n  }),\n  { setTest }\n)(ClinicalStudy);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\index.jsx",["910","911","912","913","914","915"],"import React, { useEffect, useState } from \"react\";\nimport { Layout, message } from \"antd\";\n\nimport { connect } from \"react-redux\";\nimport { setBiggieConnectStatusFun } from \"../../store/actions\";\n\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\nimport HistoryTable from \"../../components/historyTable\";\nimport LinkEquipment from \"./components/linkEquipment\";\nimport Biggie from \"./components/Biggie\";\n\nimport { px } from \"../../utils/px\";\nimport MyModal from \"../../utils/myModal/MyModal\";\n\nimport PropTypes from 'prop-types';\nimport _ from \"lodash\";\n\nimport \"./index.less\";\nimport { ezyvetGetPetLatestExam, ezyvetUpdateWeight, vetspireGetPetLatestExam, vetspireUpdateWeight } from \"../../api\";\nimport { addClamantPetExam } from '../../api/mellaserver/exam'\n\n\nconst { Header, Content, Footer, Sider } = Layout;\nlet storage = window.localStorage;\n\nconst BiggirPage = ({\n  hardwareReduce,\n  setBiggieConnectStatusFun,\n  petReduce,\n  bodyHeight,\n}) => {\n  let { petDetailInfo } = petReduce;\n  let { biggieBodyWeight } = hardwareReduce;\n  //定义体重值 体脂值 体重单位 连接状态\n  const [weight, setWeight] = useState(0);\n  const [saveNum, setSaveNum] = useState(0);\n  const [fat, setFat] = useState(0);\n  const [unit, setUnit] = useState(\"kg\");\n  const [connectStatus, setConnectStatus] = useState(\"disconnected\");\n  const [isSavePMS, setIsSavePMS] = useState(false);\n  const [saveLoad, setSaveLoad] = useState(false);\n  const [isHaveSaveBtn, setIsHaveSaveBtn] = useState(true);\n\n  const _saveWeight = () => {\n    let params = {\n      petId: petDetailInfo.petId,\n      doctorId: storage.userId,\n      weight: weight,\n      memo: \"\",\n      fat,\n      bodyConditionScore: null,\n    };\n    setSaveLoad(true);\n    console.log(\"---体重保存入参--：\", params);\n    addClamantPetExam(params)\n      .then((res) => {\n        setSaveLoad(false);\n        if (res.flag === true) {\n          switch (storage.lastOrganization) {\n            case '3'://vetspire\n              updataWeightVetspire()\n              break;\n            case '4'://ezyVet\n              updataWeightEzyvet()\n              break;\n            default:\n              message.success(\"Data successfully saved in Mella\");\n              break;\n          }\n          setSaveNum(saveNum + 1);\n          setIsHaveSaveBtn(false);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setSaveLoad(false);\n      });\n  };\n  const updataWeightVetspire = () => {\n    let datas = {\n      APIkey: storage.connectionKey,\n      patientId: petDetailInfo.patientId,\n    }\n    vetspireGetPetLatestExam(datas)\n      .then(res => {\n        if (res.flag) {\n          let data = res.data.encounters[0].vitals\n          let encountersId = data.id\n          let params = {\n            vitalId: encountersId,\n            APIkey: storage.connectionKey,\n            weight: unit === 'kg' ? (weight * 2.2046).toFixed(1) : weight\n          }\n          vetspireUpdateWeight(params)\n            .then(res => {\n              if (res.flag) {\n                message.success('Data successfully saved in Vetspire')\n              } else {\n                message.error('Data failed saved in Vetspire')\n              }\n            })\n            .catch(err => {\n              message.error('Data failed saved in Vetspire')\n            })\n        } else {\n          message.error('Failed to obtain the latest medical record')\n        }\n      })\n      .catch(err => {\n        message.error('Failed to obtain the latest medical record')\n      })\n\n  }\n  const updataWeightEzyvet = () => {\n    let params = {\n      id: petDetailInfo.patientId\n    }\n\n\n    ezyvetGetPetLatestExam(params)\n      .then(res => {\n        if (res.code === 10004 && res.msg === 'ezyvet token失效') {\n          storage.connectionKey = res.newToken;\n          reUpdataWeightEzyvet();\n          return\n        }\n        if (res.flag && res.data && res.data.items.length > 0) {\n          let data = res.data.items[0]\n          let { consult_id } = data\n          if (!consult_id) {\n            message.error('Failed to obtain the latest medical record, the data is saved in Mella')\n            return\n          }\n          let paramId = data.id\n          let parames1 = {\n            consult_id,\n            weight: unit === 'kg' ? weight : (weight / 2.2046).toFixed(2)\n          }\n\n          ezyvetUpdateWeight(paramId, parames1)\n            .then(res => {\n              if (res.code === 10004 && res.msg === 'ezyvet token失效') {\n                storage.connectionKey = res.newToken;\n                reUpdataWeightEzyvet();\n                return\n              }\n              if (res.flag) {\n                message.success('Data successfully saved in EzyVet')\n              } else {\n                message.error('Data failed saved in EzyVet')\n              }\n            })\n            .catch(err => {\n              message.error('Data failed saved in EzyVet')\n            })\n        } else {\n          message.error('Failed to obtain the latest medical record')\n        }\n      })\n      .catch(err => {\n        message.error('Failed to obtain the latest medical record')\n      })\n  }\n\n  const reUpdataWeightEzyvet = () => {\n    let params = {\n      id: petDetailInfo.patientId\n    }\n\n    ezyvetGetPetLatestExam(params)\n      .then(res => {\n        if (res.flag && res.data && res.data.items.length > 0) {\n          let data = res.data.items[0]\n          let { consult_id } = data\n          if (!consult_id) {\n            message.error('Failed to obtain the latest medical record, the data is saved in Mella')\n            return\n          }\n          let paramId = data.id\n          let parames1 = {\n            consult_id,\n            weight: unit === 'kg' ? weight : (weight / 2.2046).toFixed(2)\n          }\n          ezyvetUpdateWeight(paramId, parames1)\n            .then(res => {\n              if (res.flag) {\n                message.success('Data successfully saved in EzyVet')\n              } else {\n                message.error('Data failed saved in EzyVet')\n              }\n            })\n            .catch(err => {\n              message.error('Data failed saved in EzyVet')\n            })\n        } else {\n          message.error('Failed to obtain the latest medical record')\n        }\n      })\n      .catch(err => {\n        message.error('Failed to obtain the latest medical record')\n      })\n  }\n\n  useEffect(() => {\n    let isSave = storage.connectionKey ? false : true;\n    setIsSavePMS(isSave);\n    return () => { };\n  }, []);\n  useEffect(() => {\n    let {\n      biggieConnectStatus,\n      biggieBodyFat,\n      biggieBodyWeight,\n      biggieUnit,\n      biggieSameWeightCount,\n    } = hardwareReduce;\n    setConnectStatus(biggieConnectStatus);\n    setFat(biggieBodyFat);\n    setUnit(biggieUnit);\n    if (biggieUnit === \"lb\") {\n      biggieBodyWeight = biggieBodyWeight * 2;\n    }\n    setWeight(biggieBodyWeight);\n    if (biggieSameWeightCount === 6) {\n      let ipcRenderer = window.require(\"electron\").ipcRenderer;\n      ipcRenderer.send(\"keyboardWriting\", weight);\n    }\n\n    return () => { };\n  }, [hardwareReduce]);\n\n  useEffect(() => {\n    setIsHaveSaveBtn(true);\n    return () => { };\n  }, [biggieBodyWeight]);\n  //宠物变了,要设置为未连接\n  useEffect(() => {\n    setBiggieConnectStatusFun(\"disconnected\")\n  }, [petDetailInfo]);\n\n  return (\n    <>\n      <Layout className=\"biggiePage\" style={{ height: bodyHeight }}>\n        <div className=\"headerContentBox\" style={{ background: \"#fff\", position: 'relative' }}>\n          <div style={{ height: '100%' }}>\n            <HeaderItem />\n          </div>\n        </div>\n        <Content className=\"biggieContentBox\">\n          {_.isEmpty(petDetailInfo) ? (\n            <>\n              <div className=\"chackPatientBox\">\n                <p className=\"chackPatientTitle\">Select a patient</p>\n              </div>\n            </>\n          ) : connectStatus === \"isMeasuring\" ? (\n            <div className=\"biggbody\">\n              <div className=\"biggieTopBox\">\n                <Biggie\n                  weight={weight}\n                  bodyFat={fat}\n                  score={5}\n                  impedance={fat}\n                  isIbs={unit === \"lb\"}\n                  onPress={_saveWeight}\n                  discardOnPress={() =>\n                    setBiggieConnectStatusFun(\"disconnected\")\n                  }\n                  issave={isSavePMS}\n                  isHaveSaveBtn={isHaveSaveBtn}\n                />\n              </div>\n            </div>\n          ) : (\n            <LinkEquipment />\n          )}\n          {\n            !_.isEmpty(petDetailInfo) && (\n              <div className=\"bottomContent\">\n                <div className=\"biggeTitleBox\">\n                  <p className=\"biggeTitle\">History</p>\n                </div>\n                <HistoryTable saveNum={saveNum} tableColumnType='weight' />\n              </div>\n            )\n          }\n        </Content>\n      </Layout>\n      <MyModal visible={saveLoad} />\n    </>\n  );\n};\n\nBiggirPage.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n\nexport default connect(\n  (state) => ({\n    hardwareReduce: state.hardwareReduce,\n    petReduce: state.petReduce,\n  }),\n  {\n    setBiggieConnectStatusFun,\n  }\n)(BiggirPage);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\joinOrganizationByOption\\index.jsx",["916","917","918","919","920"],"import React, { Component } from 'react'\nimport {\n  message,\n  Modal,\n  Input,\n  Spin\n} from 'antd';\nimport { createFromIconfontCN } from '@ant-design/icons';\n\nimport Close from '../../assets/img/close.png'\nimport left1 from '../../assets/img/left1.png'\n\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport Button from '../../utils/button/Button'\nimport temporaryStorage from '../../utils/temporaryStorage';\nimport { px } from '../../utils/px'\nimport MyModal from '../../utils/myModal/MyModal';\n\nimport './index.less';\nimport { listAll, mellaLogin, } from '../../api';\nimport { listAllWorkplaceByOrganizationId } from '../../api/mellaserver/workplace';\nimport { updateUserInfo } from '../../api/mellaserver'\n\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\nlet storage = window.localStorage;\nexport default class FindWorkplace extends Component {\n\n  state = {\n    search: '',\n    listData: [],\n    searchData: [],\n    selectId: {},\n    isOrg: false,       //nodel框是否显示\n    isWorkplace: false,\n    workplaceList: [],\n    disabled: true,       //model是否可拖拽\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\n    selectworkplace: {}\n  }\n  componentDidMount() {\n\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n    listAll()\n      .then((res) => {\n        console.log(res);\n        if (res.msg === 'success') {\n          this.setState({\n            listData: res.data\n          })\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n    this.setState({\n      selectId: temporaryStorage.logupSelectOrganization\n    })\n    temporaryStorage.logupSelectOrganization = {}\n\n    //监听屏幕分辩率是否变化，变化就去更改界面内容距离大小\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n\n  }\n  componentWillUnmount() {\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('big')\n    this.setState({\n\n    })\n  }\n  onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\n      }\n    });\n  };\n\n  _logIn = () => {\n\n    let storage = window.localStorage;\n    let { email, hash } = temporaryStorage.logupVetInfo\n    let params = {\n      email: email.replace(/(^\\s*)/g, \"\"),\n      hash,\n      identityTypeId: '1'\n    }\n    console.log('---登录入参', params);\n    mellaLogin(params)\n      .then(res => {\n        console.log(res);\n        this.setState({\n          isLoading: false\n        })\n        if (res.status && res.status === 404) {\n          message.error('system error');\n          return\n        }\n        if (res.status && res.status === 500) {\n          message.error('Internal Server Error');\n          return\n        }\n        if (res.code === 10001 && res.msg === '账号错误') {\n          message.error('Account error');\n          return\n        }\n        if (res.code === 10002 && res.msg === '密码错误') {\n          message.error('wrong password')\n          return;\n        }\n        if (res.code === 0 && res.msg === 'success' && res.success.roleId === 1) {\n          message.error('You do not have the authority of a doctor, please contact the administrator or customer service', 10)\n          return\n        }\n        if (res.code === 10000 && res.msg === '系统内部错误') {\n          message.error('system error')\n          return\n        }\n\n        if (res.code === 0 && res.msg === 'success') {\n          console.log('账号密码正确，登录进去了');\n          let { userWorkplace, lastOrganization, token } = res.success\n          storage.token = token\n          storage.userId = ''\n\n          let data = {\n            email: email.replace(/(^\\s*)/g, \"\"),\n            hash,\n          };\n          data = JSON.stringify(data);\n          storage.saveSign = data;\n\n          storage.userId = res.success.userId\n          storage.roleId = res.success.roleId\n\n          this.setState({\n            isOrg: false,\n            isWorkplace: false\n          })\n          //由于后台接口原因，导致这里的最后工作场所可能不是自己的，因此下面全注释掉。改成如果有多个工作场所则跳转到选择工作场所界面，不是多个则跳转到选择宠物界面\n          if (res.success.lastWorkplaceId) {\n            storage.lastWorkplaceId = res.success.lastWorkplaceId;\n          } else {\n            storage.lastWorkplaceId = \"\";\n          }\n\n          if (res.success.lastOrganization) {\n            storage.lastOrganization = res.success.lastOrganization;\n          } else {\n            storage.lastOrganization = \"\";\n          }\n\n\n          if (userWorkplace) {\n            storage.userWorkplace = JSON.stringify(userWorkplace)\n            let connectionKey = ''\n\n            for (let i = 0; i < userWorkplace.length; i++) {\n              const element = userWorkplace[i];\n              if (element.organizationEntity) {\n                if (\n                  element.organizationEntity.organizationId === lastOrganization\n                ) {\n                  if (element.organizationEntity.connectionKey) {\n                    connectionKey = element.organizationEntity.connectionKey;\n                  }\n                  if (element.roleId) {\n                    console.log(element.roleId);\n                    storage.roleId = element.roleId;\n                  }\n\n                  break;\n                }\n              }\n            }\n            console.log(\"----------key值为：\", connectionKey);\n            storage.connectionKey = connectionKey;\n\n          } else {\n            storage.userWorkplace = ''\n            storage.connectionKey = ''\n\n          }\n          this.props.history.push(\"/MainBody\");\n        }\n\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false\n        })\n        message.error('Login failed')\n      })\n  }\n  _search = (val) => {\n    let search = val.target.value\n    let { listData } = this.state\n    let searchData = []\n    for (let i = 0; i < listData.length; i++) {\n      if (listData[i].name.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\n        searchData.push(listData[i])\n      }\n    }\n    this.setState({\n      search,\n      searchData\n    })\n\n  }\n  _searchworkPlace = (val) => {\n    let search = val.target.value\n    let listData = this.state.workplaceList\n    console.log('----------------', listData);\n    let searchData = []\n    for (let i = 0; i < listData.length; i++) {\n      if (listData[i].workplaceName.toLowerCase().indexOf(search.toLowerCase()) !== -1) {\n        searchData.push(listData[i])\n      }\n    }\n    this.setState({\n      search,\n      searchData\n    })\n\n  }\n\n  _list = () => {\n    const { search, listData, searchData } = this.state\n    let data = (search.length > 0) ? searchData : listData\n    let option = data.map((item, index) => {\n      return <li key={item.organizationId}\n        onClick={() => {\n          this.setState({\n            selectId: item\n          })\n          console.log(item);\n          temporaryStorage.logupSelectOrganization = item\n\n\n        }}\n\n      >\n        <div className=\"item\"> {item.name}</div>\n\n        {(this.state.selectId.organizationId === item.organizationId ? <span className=\"search\">&#xe614;</span> : null)}\n      </li>\n    })\n    return (\n      <ul>\n        {option}\n      </ul>\n    )\n  }\n  _updateUserInfo = (params) => {\n    updateUserInfo(params)\n      .then(res => {\n        console.log(res);\n\n        if (res.flag === true) {\n          message.success('Join successfully', 3)\n\n          console.log('成功',);\n          if (!this.props.location.isSettingIn) {\n            this._logIn()\n          } else {\n            this.setState({\n              isLoading: false\n            })\n            this.props.history.goBack()\n          }\n\n        } else {\n          this.setState({\n            isLoading: false\n          })\n          message.error('Identity update failed', 3)\n        }\n      })\n      .catch(err => {\n        this.setState({\n          isLoading: false\n        })\n        console.log(err);\n        message.error(err.message, 3)\n      })\n  }\n\n  _list1 = () => {\n    const { search, workplaceList, searchData } = this.state\n    let data = (search.length > 0) ? searchData : workplaceList\n    let option = data.map((item, index) => {\n      return <li key={item.workplaceId}\n        onClick={() => {\n          this.setState({\n            selectworkplace: item\n          })\n          console.log(item);\n\n        }}\n\n      >\n\n        {item.workplaceName}\n        {(this.state.selectworkplace === item ? <span className=\"search\">&#xe614;</span> : null)}\n      </li>\n\n    })\n    return (\n      <ul>\n        {option}\n      </ul>\n    )\n  }\n\n  _goNewOrg = (e) => {\n    e.preventDefault();\n    this.setState({\n      isOrg: false,\n      isWorkplace: false\n    })\n    this.props.history.push('/uesr/logUp/NewOrganization')\n  }\n  _goNewWorkplace = (e) => {\n    e.preventDefault();\n    this.setState({\n      isOrg: false,\n      isWorkplace: false\n    })\n    this.props.history.push('/uesr/logUp/NewOrganization')\n  }\n  _goWorkplace = () => {\n    listAllWorkplaceByOrganizationId(temporaryStorage.logupSelectOrganization.organizationId)\n\n      .then((res) => {\n        console.log(res);\n        if (res.msg === 'success') {\n          this.setState({\n            workplaceList: res.data,\n            isOrg: false,\n\n          }, () => {\n            this.setState({\n              isWorkplace: true\n            })\n          })\n        } else {\n          console.log('请求错误');\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  }\n  _addworkplaced = () => {\n    let userId = this.props.location.isSettingIn ? storage.userId : temporaryStorage.logupSuccessData.userId\n    let params = {\n      userId,\n      roleId: 2,\n      workplaceId: this.state.selectworkplace.workplaceId,\n      organizationId: this.state.selectworkplace.organizationId\n    }\n    console.log('入参：', params);\n    this.setState({\n      isLoading: true,\n      isWorkplace: false,\n      isOrg: false\n    })\n    this._updateUserInfo(params)\n\n\n  }\n\n  render() {\n    let { disabled, bounds, isOrg, isWorkplace } = this.state\n    return (\n      <div id=\"joinOrganizationByOption\">\n        <div className=\"heard\">\n          {/* 关闭缩小 */}\n          <MaxMin\n            onClick={() => { this.props.history.push('/') }}\n            // onClick1={() => this.props.history.push('/uesr/logUp/VetPrifile')}\n            onClick1={() => this.props.history.goBack()}\n\n          />\n        </div>\n\n        <div className=\"body\">\n          <div className=\"text\">Join an Organization</div>\n\n          <div className=\"way\" style={{ marginTop: px(20), marginBottom: px(60) }}>\n            <div className=\"item\" style={{ paddingTop: px(60) }}\n              onClick={() => {\n\n                this.setState({\n                  isOrg: true\n                })\n                console.log('搜索名称加入');\n              }}\n            >\n              <div className=\"iconBox\">\n                <MyIcon type='icon-search' className=\"icon\" />\n              </div>\n              <div className=\"r\">\n\n                <div className=\"title\">Search organization</div>\n\n                <div className=\"arrow\">\n                  <MyIcon type='icon-jiantou2' className=\"icon\" />\n                </div>\n              </div>\n            </div>\n\n\n\n            <div className=\"item\" style={{ paddingTop: px(60) }}\n              onClick={() => {\n                console.log('创建');\n                this.props.history.push('/uesr/logUp/NewOrganization')\n              }}>\n              <div className=\"iconBox\">\n                <MyIcon type='icon-tianjia4' className=\"icon\" />\n              </div>\n              <div className=\"r\">\n                <div className=\"listtext\">\n                  <div className=\"title\">Create an organization</div>\n                </div>\n                <div className=\"arrow\">\n                  <MyIcon type='icon-jiantou2' className=\"icon\" />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"item\" style={{ paddingTop: px(60) }}\n              onClick={() => {\n                if (this.props.location.isSettingIn) {\n                  this.props.history.goBack()\n                } else {\n                  let params = {\n                    userId: temporaryStorage.logupSuccessData.userId,\n                    roleId: 2,\n                  }\n                  message.destroy()\n                  this.setState({\n                    isLoading: true\n                  })\n                  console.log('搜索id加入', params);\n                  this._updateUserInfo(params)\n                }\n\n\n\n\n              }}>\n              <div className=\"iconBox\">\n                <MyIcon type='icon-guanbi2' className=\"icon\" />\n              </div>\n              <div className=\"r\">\n                <div className=\"listtext\">\n                  <div className=\"title\">Continue without organization</div>\n                </div>\n                <div className=\"arrow\">\n                  <MyIcon type='icon-jiantou2' className=\"icon\" />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <MyModal\n          visible={isOrg}\n          element={\n              <div className='myfindOrg' >\n                <div className=\"orgHeard\">\n                  <div className=\"titleicon\" style={{ marginTop: px(5) }}>\n                    <div></div>\n                    <div\n                      onClick={() => { this.setState({ isWorkplace: false, isOrg: false }) }}\n                    >\n                      <img src={Close} alt=\"\" style={{ width: px(16) }} />\n                    </div>\n                  </div>\n                  <div className=\"text\"\n                    onMouseOver={() => {\n                      if (disabled) {\n                        this.setState({\n                          disabled: false,\n                        });\n                      }\n                    }}\n                    onMouseOut={() => {\n                      this.setState({\n                        disabled: true,\n                      });\n                    }}\n\n                  >Find my organization</div>\n                  <div className=\"searchBox\">\n                    <Input\n                      placeholder=\" &#xe61b; Search organization\"\n                      bordered={false}\n                      allowClear={true}\n                      value={this.state.search}\n                      onChange={this._search}\n                    />\n                  </div>\n                </div>\n                <div className=\"list\">\n                  {this._list()}\n                </div>\n                <div className=\"foot\">\n                  <Button\n                    text={'Join Organization'}\n                    onClick={this._goWorkplace}\n                  />\n                  <span style={{ marginTop: px(20) }}>{`Don’t see your organization? `}</span>\n                  <a href=\"#\" onClick={this._goNewOrg}>Create a new organization</a>\n                </div>\n              </div>\n          }\n        />\n        <MyModal\n          visible={isWorkplace}\n          element={\n            <div className='myfindOrg' >\n              <div className=\"orgHeard\">\n                <div className=\"titleicon\" style={{ marginTop: px(5) }}>\n                  <div\n                    // className=\" iconfont icon-left return\"\n                    onClick={() => { this.setState({ isWorkplace: false, isOrg: true }) }}\n                  >\n                    <img src={left1} alt=\"\" style={{ height: px(16) }} />\n                  </div>\n                  <div\n                    onClick={() => { this.setState({ isWorkplace: false, isOrg: false }) }}\n                  >\n                    <img src={Close} alt=\"\" style={{ width: px(16) }} />\n                  </div>\n                </div>\n\n\n                <div className=\"text\" style={{ fontSize: px(35) }}>Find my workplace</div>\n\n                <div className=\"searchBox\" style={{ borderRadius: px(15) }} >\n                  <Input\n                    placeholder=\" &#xe61b; Search workplace\"\n                    bordered={false}\n                    allowClear={true}\n                    value={this.state.search}\n                    onChange={this._searchworkPlace}\n                  />\n\n                </div>\n              </div>\n\n\n              <div className=\"list\"\n\n              >\n                {this._list1()}\n              </div>\n\n              <div className=\"foot\">\n                <Button\n                  text={'Join Workplace'}\n                  onClick={this._addworkplaced}\n                />\n                <span style={{ marginTop: px(20) }}>{`Don’t see your workplace? `}</span>\n                <a href=\"#\" onClick={this._goNewWorkplace}>Create a new workplace</a>\n              </div>\n\n            </div>\n          }\n        />\n        <MyModal\n          visible={this.state.isLoading}\n        />\n\n      </div>\n    )\n  }\n}\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measuredData.jsx",["921","922","923","924","925","926","927","928","929","930","931","932","933","934"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\userfeedback.js",["935","936"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\index.jsx",["937","938","939","940"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\selectionBox\\SelectionBox.jsx",["941"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\phoneBook\\PhoneBook.jsx",["942","943","944","945","946","947","948","949","950"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\editPetInfo\\index.jsx",["951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanCodeLogin\\index.jsx",[],{"ruleId":"968","severity":1,"message":"969","line":19,"column":10,"nodeType":"970","messageId":"971","endLine":19,"endColumn":18},{"ruleId":"968","severity":1,"message":"972","line":24,"column":7,"nodeType":"970","messageId":"971","endLine":24,"endColumn":13},{"ruleId":"968","severity":1,"message":"973","line":348,"column":11,"nodeType":"970","messageId":"971","endLine":348,"endColumn":17},{"ruleId":"968","severity":1,"message":"974","line":416,"column":19,"nodeType":"970","messageId":"971","endLine":416,"endColumn":26},{"ruleId":"968","severity":1,"message":"975","line":417,"column":9,"nodeType":"970","messageId":"971","endLine":417,"endColumn":13},{"ruleId":"976","severity":1,"message":"977","line":582,"column":15,"nodeType":"978","endLine":582,"endColumn":50},{"ruleId":"968","severity":1,"message":"979","line":22,"column":9,"nodeType":"970","messageId":"971","endLine":22,"endColumn":15},{"ruleId":"968","severity":1,"message":"980","line":45,"column":11,"nodeType":"970","messageId":"971","endLine":45,"endColumn":17},{"ruleId":"968","severity":1,"message":"981","line":45,"column":19,"nodeType":"970","messageId":"971","endLine":45,"endColumn":24},{"ruleId":"968","severity":1,"message":"982","line":61,"column":9,"nodeType":"970","messageId":"971","endLine":61,"endColumn":22},{"ruleId":"968","severity":1,"message":"983","line":144,"column":18,"nodeType":"970","messageId":"971","endLine":144,"endColumn":27},{"ruleId":"968","severity":1,"message":"984","line":144,"column":29,"nodeType":"970","messageId":"971","endLine":144,"endColumn":37},{"ruleId":"985","severity":1,"message":"986","line":544,"column":19,"nodeType":"978","endLine":551,"endColumn":61},{"ruleId":"976","severity":1,"message":"977","line":559,"column":19,"nodeType":"978","endLine":567,"endColumn":30},{"ruleId":"987","replacedBy":"988"},{"ruleId":"989","replacedBy":"990"},{"ruleId":"968","severity":1,"message":"991","line":2,"column":16,"nodeType":"970","messageId":"971","endLine":2,"endColumn":23},{"ruleId":"968","severity":1,"message":"992","line":2,"column":25,"nodeType":"970","messageId":"971","endLine":2,"endColumn":31},{"ruleId":"968","severity":1,"message":"993","line":2,"column":33,"nodeType":"970","messageId":"971","endLine":2,"endColumn":38},{"ruleId":"968","severity":1,"message":"994","line":35,"column":9,"nodeType":"970","messageId":"971","endLine":35,"endColumn":16},{"ruleId":"968","severity":1,"message":"972","line":36,"column":7,"nodeType":"970","messageId":"971","endLine":36,"endColumn":13},{"ruleId":"968","severity":1,"message":"995","line":40,"column":7,"nodeType":"970","messageId":"971","endLine":40,"endColumn":17},{"ruleId":"968","severity":1,"message":"996","line":92,"column":10,"nodeType":"970","messageId":"971","endLine":92,"endColumn":19},{"ruleId":"968","severity":1,"message":"997","line":92,"column":21,"nodeType":"970","messageId":"971","endLine":92,"endColumn":33},{"ruleId":"968","severity":1,"message":"998","line":124,"column":10,"nodeType":"970","messageId":"971","endLine":124,"endColumn":19},{"ruleId":"968","severity":1,"message":"999","line":206,"column":13,"nodeType":"970","messageId":"971","endLine":206,"endColumn":20},{"ruleId":"985","severity":1,"message":"986","line":799,"column":17,"nodeType":"978","endLine":799,"endColumn":62},{"ruleId":"985","severity":1,"message":"986","line":804,"column":17,"nodeType":"978","endLine":804,"endColumn":65},{"ruleId":"976","severity":1,"message":"977","line":859,"column":15,"nodeType":"978","endLine":865,"endColumn":16},{"ruleId":"976","severity":1,"message":"977","line":868,"column":15,"nodeType":"978","endLine":874,"endColumn":16},{"ruleId":"985","severity":1,"message":"986","line":967,"column":17,"nodeType":"978","endLine":967,"endColumn":62},{"ruleId":"985","severity":1,"message":"986","line":971,"column":15,"nodeType":"978","endLine":971,"endColumn":64},{"ruleId":"976","severity":1,"message":"977","line":1088,"column":13,"nodeType":"978","endLine":1092,"endColumn":14},{"ruleId":"976","severity":1,"message":"977","line":1169,"column":15,"nodeType":"978","endLine":1177,"endColumn":16},{"ruleId":"976","severity":1,"message":"977","line":1192,"column":13,"nodeType":"978","endLine":1192,"endColumn":76},{"ruleId":"976","severity":1,"message":"977","line":1263,"column":15,"nodeType":"978","endLine":1271,"endColumn":16},{"ruleId":"976","severity":1,"message":"977","line":1295,"column":15,"nodeType":"978","endLine":1299,"endColumn":16},{"ruleId":"1000","severity":1,"message":"1001","line":1351,"column":6,"nodeType":"1002","endLine":1351,"endColumn":8,"suggestions":"1003"},{"ruleId":"1000","severity":1,"message":"1004","line":1355,"column":6,"nodeType":"1002","endLine":1355,"endColumn":32,"suggestions":"1005"},{"ruleId":"985","severity":1,"message":"986","line":1377,"column":15,"nodeType":"978","endLine":1377,"endColumn":59},{"ruleId":"985","severity":1,"message":"986","line":1552,"column":19,"nodeType":"978","endLine":1552,"endColumn":54},{"ruleId":"985","severity":1,"message":"986","line":1554,"column":19,"nodeType":"978","endLine":1554,"endColumn":53},{"ruleId":"1000","severity":1,"message":"1006","line":276,"column":6,"nodeType":"1002","endLine":276,"endColumn":8,"suggestions":"1007"},{"ruleId":"1000","severity":1,"message":"1008","line":317,"column":6,"nodeType":"1002","endLine":317,"endColumn":36,"suggestions":"1009"},{"ruleId":"987","replacedBy":"1010"},{"ruleId":"989","replacedBy":"1011"},{"ruleId":"987","replacedBy":"1012"},{"ruleId":"989","replacedBy":"1013"},{"ruleId":"968","severity":1,"message":"1014","line":3,"column":3,"nodeType":"970","messageId":"971","endLine":3,"endColumn":8},{"ruleId":"968","severity":1,"message":"1015","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":8},{"ruleId":"968","severity":1,"message":"1016","line":10,"column":3,"nodeType":"970","messageId":"971","endLine":10,"endColumn":7},{"ruleId":"968","severity":1,"message":"1017","line":71,"column":5,"nodeType":"970","messageId":"971","endLine":71,"endColumn":22},{"ruleId":"968","severity":1,"message":"1018","line":75,"column":5,"nodeType":"970","messageId":"971","endLine":75,"endColumn":23},{"ruleId":"1019","severity":1,"message":"1020","line":133,"column":61,"nodeType":"1021","messageId":"1022","endLine":133,"endColumn":62},{"ruleId":"1019","severity":1,"message":"1020","line":141,"column":45,"nodeType":"1021","messageId":"1022","endLine":141,"endColumn":46},{"ruleId":"968","severity":1,"message":"1023","line":190,"column":9,"nodeType":"970","messageId":"971","endLine":190,"endColumn":12},{"ruleId":"1000","severity":1,"message":"1024","line":294,"column":6,"nodeType":"1002","endLine":294,"endColumn":13,"suggestions":"1025"},{"ruleId":"1000","severity":1,"message":"1026","line":316,"column":6,"nodeType":"1002","endLine":316,"endColumn":26,"suggestions":"1027"},{"ruleId":"968","severity":1,"message":"1028","line":9,"column":10,"nodeType":"970","messageId":"971","endLine":9,"endColumn":13},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1030","line":9,"column":30,"nodeType":"970","messageId":"971","endLine":9,"endColumn":35},{"ruleId":"1000","severity":1,"message":"1031","line":133,"column":6,"nodeType":"1002","endLine":133,"endColumn":8,"suggestions":"1032"},{"ruleId":"987","replacedBy":"1033"},{"ruleId":"989","replacedBy":"1034"},{"ruleId":"1000","severity":1,"message":"1031","line":85,"column":6,"nodeType":"1002","endLine":85,"endColumn":8,"suggestions":"1035"},{"ruleId":"968","severity":1,"message":"1036","line":3,"column":10,"nodeType":"970","messageId":"971","endLine":3,"endColumn":24},{"ruleId":"987","replacedBy":"1037"},{"ruleId":"989","replacedBy":"1038"},{"ruleId":"968","severity":1,"message":"1039","line":8,"column":10,"nodeType":"970","messageId":"971","endLine":8,"endColumn":16},{"ruleId":"968","severity":1,"message":"1040","line":13,"column":5,"nodeType":"970","messageId":"971","endLine":13,"endColumn":12},{"ruleId":"987","replacedBy":"1041"},{"ruleId":"989","replacedBy":"1042"},{"ruleId":"968","severity":1,"message":"1043","line":19,"column":5,"nodeType":"970","messageId":"971","endLine":19,"endColumn":10},{"ruleId":"1044","severity":1,"message":"1045","line":165,"column":9,"nodeType":"1046","messageId":"1047","endLine":183,"endColumn":10},{"ruleId":"987","replacedBy":"1048"},{"ruleId":"989","replacedBy":"1049"},{"ruleId":"968","severity":1,"message":"1050","line":23,"column":10,"nodeType":"970","messageId":"971","endLine":23,"endColumn":28},{"ruleId":"968","severity":1,"message":"1051","line":26,"column":10,"nodeType":"970","messageId":"971","endLine":26,"endColumn":12},{"ruleId":"968","severity":1,"message":"1052","line":29,"column":26,"nodeType":"970","messageId":"971","endLine":29,"endColumn":32},{"ruleId":"968","severity":1,"message":"1053","line":29,"column":34,"nodeType":"970","messageId":"971","endLine":29,"endColumn":39},{"ruleId":"1000","severity":1,"message":"1054","line":116,"column":6,"nodeType":"1002","endLine":116,"endColumn":8,"suggestions":"1055"},{"ruleId":"985","severity":1,"message":"986","line":168,"column":19,"nodeType":"978","endLine":168,"endColumn":47},{"ruleId":"987","replacedBy":"1056"},{"ruleId":"989","replacedBy":"1057"},{"ruleId":"968","severity":1,"message":"1058","line":16,"column":10,"nodeType":"970","messageId":"971","endLine":16,"endColumn":14},{"ruleId":"968","severity":1,"message":"1059","line":33,"column":10,"nodeType":"970","messageId":"971","endLine":33,"endColumn":23},{"ruleId":"968","severity":1,"message":"1060","line":51,"column":10,"nodeType":"970","messageId":"971","endLine":51,"endColumn":18},{"ruleId":"968","severity":1,"message":"1061","line":51,"column":20,"nodeType":"970","messageId":"971","endLine":51,"endColumn":31},{"ruleId":"968","severity":1,"message":"1062","line":62,"column":20,"nodeType":"970","messageId":"971","endLine":62,"endColumn":31},{"ruleId":"968","severity":1,"message":"1063","line":65,"column":10,"nodeType":"970","messageId":"971","endLine":65,"endColumn":16},{"ruleId":"968","severity":1,"message":"1064","line":65,"column":18,"nodeType":"970","messageId":"971","endLine":65,"endColumn":27},{"ruleId":"985","severity":1,"message":"986","line":133,"column":11,"nodeType":"978","endLine":140,"endColumn":13},{"ruleId":"985","severity":1,"message":"986","line":145,"column":13,"nodeType":"978","endLine":145,"endColumn":33},{"ruleId":"985","severity":1,"message":"986","line":194,"column":18,"nodeType":"978","endLine":194,"endColumn":47},{"ruleId":"985","severity":1,"message":"986","line":196,"column":18,"nodeType":"978","endLine":196,"endColumn":47},{"ruleId":"985","severity":1,"message":"986","line":198,"column":18,"nodeType":"978","endLine":198,"endColumn":47},{"ruleId":"985","severity":1,"message":"986","line":200,"column":18,"nodeType":"978","endLine":200,"endColumn":47},{"ruleId":"985","severity":1,"message":"986","line":224,"column":11,"nodeType":"978","endLine":231,"endColumn":13},{"ruleId":"985","severity":1,"message":"986","line":236,"column":13,"nodeType":"978","endLine":236,"endColumn":63},{"ruleId":"1000","severity":1,"message":"1065","line":367,"column":6,"nodeType":"1002","endLine":367,"endColumn":15,"suggestions":"1066"},{"ruleId":"1000","severity":1,"message":"1067","line":376,"column":6,"nodeType":"1002","endLine":376,"endColumn":8,"suggestions":"1068"},{"ruleId":"968","severity":1,"message":"1069","line":2,"column":10,"nodeType":"970","messageId":"971","endLine":2,"endColumn":23},{"ruleId":"968","severity":1,"message":"979","line":29,"column":9,"nodeType":"970","messageId":"971","endLine":29,"endColumn":15},{"ruleId":"1044","severity":1,"message":"1045","line":99,"column":5,"nodeType":"1046","messageId":"1047","endLine":105,"endColumn":6},{"ruleId":"1070","severity":1,"message":"1071","line":112,"column":41,"nodeType":"1072","messageId":"1073","endLine":112,"endColumn":43},{"ruleId":"1070","severity":1,"message":"1071","line":150,"column":41,"nodeType":"1072","messageId":"1073","endLine":150,"endColumn":43},{"ruleId":"968","severity":1,"message":"1074","line":257,"column":11,"nodeType":"970","messageId":"971","endLine":257,"endColumn":21},{"ruleId":"968","severity":1,"message":"1075","line":257,"column":49,"nodeType":"970","messageId":"971","endLine":257,"endColumn":55},{"ruleId":"985","severity":1,"message":"986","line":507,"column":15,"nodeType":"978","endLine":507,"endColumn":63},{"ruleId":"985","severity":1,"message":"986","line":537,"column":15,"nodeType":"978","endLine":537,"endColumn":63},{"ruleId":"1044","severity":1,"message":"1045","line":558,"column":5,"nodeType":"1046","messageId":"1047","endLine":561,"endColumn":6},{"ruleId":"1044","severity":1,"message":"1045","line":562,"column":5,"nodeType":"1046","messageId":"1047","endLine":565,"endColumn":6},{"ruleId":"968","severity":1,"message":"1076","line":678,"column":32,"nodeType":"970","messageId":"971","endLine":678,"endColumn":41},{"ruleId":"968","severity":1,"message":"1077","line":681,"column":26,"nodeType":"970","messageId":"971","endLine":681,"endColumn":29},{"ruleId":"968","severity":1,"message":"1078","line":749,"column":13,"nodeType":"970","messageId":"971","endLine":749,"endColumn":23},{"ruleId":"968","severity":1,"message":"1079","line":749,"column":25,"nodeType":"970","messageId":"971","endLine":749,"endColumn":33},{"ruleId":"968","severity":1,"message":"1080","line":749,"column":35,"nodeType":"970","messageId":"971","endLine":749,"endColumn":41},{"ruleId":"968","severity":1,"message":"1081","line":749,"column":43,"nodeType":"970","messageId":"971","endLine":749,"endColumn":51},{"ruleId":"968","severity":1,"message":"1082","line":749,"column":53,"nodeType":"970","messageId":"971","endLine":749,"endColumn":70},{"ruleId":"968","severity":1,"message":"1074","line":796,"column":29,"nodeType":"970","messageId":"971","endLine":796,"endColumn":39},{"ruleId":"968","severity":1,"message":"1083","line":796,"column":79,"nodeType":"970","messageId":"971","endLine":796,"endColumn":84},{"ruleId":"968","severity":1,"message":"1084","line":796,"column":117,"nodeType":"970","messageId":"971","endLine":796,"endColumn":139},{"ruleId":"987","replacedBy":"1085"},{"ruleId":"989","replacedBy":"1086"},{"ruleId":"987","replacedBy":"1087"},{"ruleId":"989","replacedBy":"1088"},{"ruleId":"1000","severity":1,"message":"1089","line":136,"column":6,"nodeType":"1002","endLine":136,"endColumn":8,"suggestions":"1090"},{"ruleId":"968","severity":1,"message":"1091","line":2,"column":10,"nodeType":"970","messageId":"971","endLine":2,"endColumn":15},{"ruleId":"968","severity":1,"message":"1092","line":2,"column":17,"nodeType":"970","messageId":"971","endLine":2,"endColumn":27},{"ruleId":"968","severity":1,"message":"992","line":23,"column":8,"nodeType":"970","messageId":"971","endLine":23,"endColumn":14},{"ruleId":"1070","severity":1,"message":"1071","line":225,"column":41,"nodeType":"1072","messageId":"1073","endLine":225,"endColumn":43},{"ruleId":"1070","severity":1,"message":"1071","line":237,"column":47,"nodeType":"1072","messageId":"1073","endLine":237,"endColumn":49},{"ruleId":"968","severity":1,"message":"1093","line":451,"column":23,"nodeType":"970","messageId":"971","endLine":451,"endColumn":28},{"ruleId":"968","severity":1,"message":"1094","line":830,"column":11,"nodeType":"970","messageId":"971","endLine":830,"endColumn":18},{"ruleId":"968","severity":1,"message":"1095","line":832,"column":11,"nodeType":"970","messageId":"971","endLine":832,"endColumn":15},{"ruleId":"968","severity":1,"message":"1096","line":850,"column":9,"nodeType":"970","messageId":"971","endLine":850,"endColumn":18},{"ruleId":"968","severity":1,"message":"1097","line":938,"column":65,"nodeType":"970","messageId":"971","endLine":938,"endColumn":76},{"ruleId":"968","severity":1,"message":"992","line":2,"column":10,"nodeType":"970","messageId":"971","endLine":2,"endColumn":16},{"ruleId":"968","severity":1,"message":"1098","line":2,"column":36,"nodeType":"970","messageId":"971","endLine":2,"endColumn":44},{"ruleId":"968","severity":1,"message":"1099","line":3,"column":10,"nodeType":"970","messageId":"971","endLine":3,"endColumn":22},{"ruleId":"968","severity":1,"message":"1100","line":24,"column":18,"nodeType":"970","messageId":"971","endLine":24,"endColumn":24},{"ruleId":"968","severity":1,"message":"1101","line":28,"column":10,"nodeType":"970","messageId":"971","endLine":28,"endColumn":17},{"ruleId":"968","severity":1,"message":"1102","line":28,"column":19,"nodeType":"970","messageId":"971","endLine":28,"endColumn":29},{"ruleId":"985","severity":1,"message":"986","line":63,"column":16,"nodeType":"978","endLine":63,"endColumn":41},{"ruleId":"985","severity":1,"message":"986","line":65,"column":16,"nodeType":"978","endLine":65,"endColumn":41},{"ruleId":"985","severity":1,"message":"986","line":67,"column":16,"nodeType":"978","endLine":67,"endColumn":41},{"ruleId":"985","severity":1,"message":"986","line":69,"column":16,"nodeType":"978","endLine":69,"endColumn":41},{"ruleId":"1000","severity":1,"message":"1103","line":75,"column":3,"nodeType":"970","endLine":75,"endColumn":12,"suggestions":"1104"},{"ruleId":"987","replacedBy":"1105"},{"ruleId":"989","replacedBy":"1106"},{"ruleId":"968","severity":1,"message":"1107","line":2,"column":27,"nodeType":"970","messageId":"971","endLine":2,"endColumn":36},{"ruleId":"968","severity":1,"message":"1058","line":7,"column":14,"nodeType":"970","messageId":"971","endLine":7,"endColumn":18},{"ruleId":"987","replacedBy":"1108"},{"ruleId":"989","replacedBy":"1109"},{"ruleId":"968","severity":1,"message":"982","line":57,"column":9,"nodeType":"970","messageId":"971","endLine":57,"endColumn":22},{"ruleId":"968","severity":1,"message":"982","line":87,"column":9,"nodeType":"970","messageId":"971","endLine":87,"endColumn":22},{"ruleId":"1070","severity":1,"message":"1071","line":199,"column":41,"nodeType":"1072","messageId":"1073","endLine":199,"endColumn":43},{"ruleId":"1070","severity":1,"message":"1071","line":212,"column":47,"nodeType":"1072","messageId":"1073","endLine":212,"endColumn":49},{"ruleId":"968","severity":1,"message":"1093","line":417,"column":23,"nodeType":"970","messageId":"971","endLine":417,"endColumn":28},{"ruleId":"968","severity":1,"message":"1107","line":1,"column":27,"nodeType":"970","messageId":"971","endLine":1,"endColumn":36},{"ruleId":"968","severity":1,"message":"1058","line":8,"column":10,"nodeType":"970","messageId":"971","endLine":8,"endColumn":14},{"ruleId":"968","severity":1,"message":"1110","line":8,"column":20,"nodeType":"970","messageId":"971","endLine":8,"endColumn":24},{"ruleId":"968","severity":1,"message":"1111","line":18,"column":7,"nodeType":"970","messageId":"971","endLine":18,"endColumn":14},{"ruleId":"968","severity":1,"message":"1112","line":62,"column":13,"nodeType":"970","messageId":"971","endLine":62,"endColumn":19},{"ruleId":"968","severity":1,"message":"1113","line":64,"column":13,"nodeType":"970","messageId":"971","endLine":64,"endColumn":17},{"ruleId":"968","severity":1,"message":"1114","line":65,"column":13,"nodeType":"970","messageId":"971","endLine":65,"endColumn":20},{"ruleId":"976","severity":1,"message":"977","line":152,"column":9,"nodeType":"978","endLine":168,"endColumn":10},{"ruleId":"1044","severity":1,"message":"1045","line":216,"column":15,"nodeType":"1046","messageId":"1047","endLine":235,"endColumn":16},{"ruleId":"987","replacedBy":"1115"},{"ruleId":"989","replacedBy":"1116"},{"ruleId":"968","severity":1,"message":"1117","line":9,"column":3,"nodeType":"970","messageId":"971","endLine":9,"endColumn":8},{"ruleId":"968","severity":1,"message":"1118","line":34,"column":10,"nodeType":"970","messageId":"971","endLine":34,"endColumn":16},{"ruleId":"968","severity":1,"message":"1119","line":36,"column":10,"nodeType":"970","messageId":"971","endLine":36,"endColumn":17},{"ruleId":"968","severity":1,"message":"1120","line":38,"column":10,"nodeType":"970","messageId":"971","endLine":38,"endColumn":18},{"ruleId":"1000","severity":1,"message":"1121","line":92,"column":6,"nodeType":"1002","endLine":92,"endColumn":8,"suggestions":"1122"},{"ruleId":"987","replacedBy":"1123"},{"ruleId":"989","replacedBy":"1124"},{"ruleId":"985","severity":1,"message":"986","line":34,"column":11,"nodeType":"978","endLine":37,"endColumn":13},{"ruleId":"985","severity":1,"message":"986","line":41,"column":13,"nodeType":"978","endLine":44,"endColumn":15},{"ruleId":"985","severity":1,"message":"986","line":49,"column":11,"nodeType":"978","endLine":52,"endColumn":13},{"ruleId":"985","severity":1,"message":"986","line":59,"column":11,"nodeType":"978","endLine":62,"endColumn":13},{"ruleId":"968","severity":1,"message":"1014","line":2,"column":10,"nodeType":"970","messageId":"971","endLine":2,"endColumn":15},{"ruleId":"968","severity":1,"message":"1051","line":15,"column":10,"nodeType":"970","messageId":"971","endLine":15,"endColumn":12},{"ruleId":"968","severity":1,"message":"1125","line":28,"column":8,"nodeType":"970","messageId":"971","endLine":28,"endColumn":14},{"ruleId":"968","severity":1,"message":"1100","line":31,"column":18,"nodeType":"970","messageId":"971","endLine":31,"endColumn":24},{"ruleId":"1000","severity":1,"message":"1126","line":76,"column":6,"nodeType":"1002","endLine":76,"endColumn":21,"suggestions":"1127"},{"ruleId":"985","severity":1,"message":"986","line":120,"column":17,"nodeType":"978","endLine":120,"endColumn":74},{"ruleId":"985","severity":1,"message":"986","line":138,"column":21,"nodeType":"978","endLine":138,"endColumn":69},{"ruleId":"985","severity":1,"message":"986","line":158,"column":25,"nodeType":"978","endLine":165,"endColumn":27},{"ruleId":"968","severity":1,"message":"1128","line":4,"column":3,"nodeType":"970","messageId":"971","endLine":4,"endColumn":10},{"ruleId":"968","severity":1,"message":"1129","line":39,"column":9,"nodeType":"970","messageId":"971","endLine":39,"endColumn":20},{"ruleId":"968","severity":1,"message":"979","line":7,"column":9,"nodeType":"970","messageId":"971","endLine":7,"endColumn":15},{"ruleId":"968","severity":1,"message":"980","line":20,"column":11,"nodeType":"970","messageId":"971","endLine":20,"endColumn":17},{"ruleId":"968","severity":1,"message":"981","line":20,"column":19,"nodeType":"970","messageId":"971","endLine":20,"endColumn":24},{"ruleId":"968","severity":1,"message":"982","line":109,"column":9,"nodeType":"970","messageId":"971","endLine":109,"endColumn":22},{"ruleId":"987","replacedBy":"1130"},{"ruleId":"989","replacedBy":"1131"},{"ruleId":"1000","severity":1,"message":"1132","line":170,"column":6,"nodeType":"1002","endLine":170,"endColumn":23,"suggestions":"1133"},{"ruleId":"968","severity":1,"message":"1107","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1134","line":1,"column":38,"nodeType":"970","messageId":"971","endLine":1,"endColumn":44},{"ruleId":"968","severity":1,"message":"1135","line":2,"column":10,"nodeType":"970","messageId":"971","endLine":2,"endColumn":16},{"ruleId":"968","severity":1,"message":"1136","line":2,"column":26,"nodeType":"970","messageId":"971","endLine":2,"endColumn":31},{"ruleId":"968","severity":1,"message":"1125","line":17,"column":8,"nodeType":"970","messageId":"971","endLine":17,"endColumn":14},{"ruleId":"987","replacedBy":"1137"},{"ruleId":"989","replacedBy":"1138"},{"ruleId":"968","severity":1,"message":"1139","line":2,"column":10,"nodeType":"970","messageId":"971","endLine":2,"endColumn":14},{"ruleId":"968","severity":1,"message":"1140","line":2,"column":25,"nodeType":"970","messageId":"971","endLine":2,"endColumn":31},{"ruleId":"968","severity":1,"message":"1141","line":3,"column":10,"nodeType":"970","messageId":"971","endLine":3,"endColumn":30},{"ruleId":"968","severity":1,"message":"1040","line":24,"column":5,"nodeType":"970","messageId":"971","endLine":24,"endColumn":12},{"ruleId":"968","severity":1,"message":"1023","line":80,"column":61,"nodeType":"970","messageId":"971","endLine":80,"endColumn":64},{"ruleId":"968","severity":1,"message":"1142","line":80,"column":66,"nodeType":"970","messageId":"971","endLine":80,"endColumn":75},{"ruleId":"968","severity":1,"message":"1143","line":9,"column":15,"nodeType":"970","messageId":"971","endLine":9,"endColumn":23},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1107","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1134","line":1,"column":38,"nodeType":"970","messageId":"971","endLine":1,"endColumn":44},{"ruleId":"968","severity":1,"message":"1135","line":2,"column":10,"nodeType":"970","messageId":"971","endLine":2,"endColumn":16},{"ruleId":"968","severity":1,"message":"1136","line":2,"column":26,"nodeType":"970","messageId":"971","endLine":2,"endColumn":31},{"ruleId":"968","severity":1,"message":"1117","line":2,"column":33,"nodeType":"970","messageId":"971","endLine":2,"endColumn":38},{"ruleId":"968","severity":1,"message":"1125","line":17,"column":8,"nodeType":"970","messageId":"971","endLine":17,"endColumn":14},{"ruleId":"968","severity":1,"message":"1144","line":18,"column":8,"nodeType":"970","messageId":"971","endLine":18,"endColumn":9},{"ruleId":"987","replacedBy":"1145"},{"ruleId":"989","replacedBy":"1146"},{"ruleId":"968","severity":1,"message":"1144","line":4,"column":8,"nodeType":"970","messageId":"971","endLine":4,"endColumn":9},{"ruleId":"968","severity":1,"message":"1107","line":6,"column":10,"nodeType":"970","messageId":"971","endLine":6,"endColumn":19},{"ruleId":"968","severity":1,"message":"1147","line":50,"column":7,"nodeType":"970","messageId":"971","endLine":50,"endColumn":10},{"ruleId":"968","severity":1,"message":"1111","line":51,"column":7,"nodeType":"970","messageId":"971","endLine":51,"endColumn":14},{"ruleId":"968","severity":1,"message":"1148","line":54,"column":10,"nodeType":"970","messageId":"971","endLine":54,"endColumn":18},{"ruleId":"968","severity":1,"message":"1149","line":54,"column":20,"nodeType":"970","messageId":"971","endLine":54,"endColumn":31},{"ruleId":"968","severity":1,"message":"1150","line":121,"column":9,"nodeType":"970","messageId":"971","endLine":121,"endColumn":18},{"ruleId":"1019","severity":1,"message":"1020","line":291,"column":59,"nodeType":"1021","messageId":"1022","endLine":291,"endColumn":60},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1107","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1014","line":2,"column":10,"nodeType":"970","messageId":"971","endLine":2,"endColumn":15},{"ruleId":"968","severity":1,"message":"1151","line":4,"column":8,"nodeType":"970","messageId":"971","endLine":4,"endColumn":23},{"ruleId":"968","severity":1,"message":"1144","line":15,"column":8,"nodeType":"970","messageId":"971","endLine":15,"endColumn":9},{"ruleId":"968","severity":1,"message":"1152","line":16,"column":8,"nodeType":"970","messageId":"971","endLine":16,"endColumn":20},{"ruleId":"968","severity":1,"message":"1153","line":19,"column":9,"nodeType":"970","messageId":"971","endLine":19,"endColumn":16},{"ruleId":"968","severity":1,"message":"1100","line":19,"column":18,"nodeType":"970","messageId":"971","endLine":19,"endColumn":24},{"ruleId":"968","severity":1,"message":"1154","line":22,"column":9,"nodeType":"970","messageId":"971","endLine":22,"endColumn":27},{"ruleId":"968","severity":1,"message":"1155","line":23,"column":10,"nodeType":"970","messageId":"971","endLine":23,"endColumn":17},{"ruleId":"968","severity":1,"message":"1156","line":23,"column":19,"nodeType":"970","messageId":"971","endLine":23,"endColumn":29},{"ruleId":"985","severity":1,"message":"986","line":28,"column":11,"nodeType":"978","endLine":28,"endColumn":36},{"ruleId":"968","severity":1,"message":"1125","line":23,"column":8,"nodeType":"970","messageId":"971","endLine":23,"endColumn":14},{"ruleId":"968","severity":1,"message":"1157","line":46,"column":10,"nodeType":"970","messageId":"971","endLine":46,"endColumn":23},{"ruleId":"968","severity":1,"message":"1158","line":48,"column":10,"nodeType":"970","messageId":"971","endLine":48,"endColumn":22},{"ruleId":"968","severity":1,"message":"1159","line":49,"column":10,"nodeType":"970","messageId":"971","endLine":49,"endColumn":23},{"ruleId":"968","severity":1,"message":"1160","line":50,"column":10,"nodeType":"970","messageId":"971","endLine":50,"endColumn":21},{"ruleId":"968","severity":1,"message":"1161","line":52,"column":10,"nodeType":"970","messageId":"971","endLine":52,"endColumn":24},{"ruleId":"968","severity":1,"message":"1162","line":52,"column":26,"nodeType":"970","messageId":"971","endLine":52,"endColumn":43},{"ruleId":"1044","severity":1,"message":"1045","line":166,"column":5,"nodeType":"1046","messageId":"1047","endLine":187,"endColumn":6},{"ruleId":"968","severity":1,"message":"1163","line":243,"column":21,"nodeType":"970","messageId":"971","endLine":243,"endColumn":31},{"ruleId":"1000","severity":1,"message":"1089","line":342,"column":6,"nodeType":"1002","endLine":342,"endColumn":8,"suggestions":"1164"},{"ruleId":"968","severity":1,"message":"979","line":24,"column":9,"nodeType":"970","messageId":"971","endLine":24,"endColumn":15},{"ruleId":"968","severity":1,"message":"980","line":40,"column":11,"nodeType":"970","messageId":"971","endLine":40,"endColumn":17},{"ruleId":"968","severity":1,"message":"981","line":40,"column":19,"nodeType":"970","messageId":"971","endLine":40,"endColumn":24},{"ruleId":"968","severity":1,"message":"982","line":56,"column":9,"nodeType":"970","messageId":"971","endLine":56,"endColumn":22},{"ruleId":"968","severity":1,"message":"1076","line":162,"column":43,"nodeType":"970","messageId":"971","endLine":162,"endColumn":52},{"ruleId":"968","severity":1,"message":"1093","line":162,"column":54,"nodeType":"970","messageId":"971","endLine":162,"endColumn":59},{"ruleId":"968","severity":1,"message":"1165","line":15,"column":7,"nodeType":"970","messageId":"971","endLine":15,"endColumn":15},{"ruleId":"968","severity":1,"message":"1166","line":18,"column":5,"nodeType":"970","messageId":"971","endLine":18,"endColumn":9},{"ruleId":"1167","severity":1,"message":"1168","line":46,"column":3,"nodeType":"1169","messageId":"1170","endLine":55,"endColumn":47},{"ruleId":"1167","severity":1,"message":"1168","line":74,"column":3,"nodeType":"1169","messageId":"1170","endLine":76,"endColumn":46},{"ruleId":"968","severity":1,"message":"1171","line":79,"column":5,"nodeType":"970","messageId":"971","endLine":79,"endColumn":16},{"ruleId":"968","severity":1,"message":"1172","line":102,"column":5,"nodeType":"970","messageId":"971","endLine":102,"endColumn":10},{"ruleId":"968","severity":1,"message":"1107","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1134","line":1,"column":38,"nodeType":"970","messageId":"971","endLine":1,"endColumn":44},{"ruleId":"968","severity":1,"message":"1153","line":26,"column":11,"nodeType":"970","messageId":"971","endLine":26,"endColumn":18},{"ruleId":"968","severity":1,"message":"1100","line":26,"column":20,"nodeType":"970","messageId":"971","endLine":26,"endColumn":26},{"ruleId":"968","severity":1,"message":"1111","line":27,"column":7,"nodeType":"970","messageId":"971","endLine":27,"endColumn":14},{"ruleId":"968","severity":1,"message":"1107","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1173","line":1,"column":28,"nodeType":"970","messageId":"971","endLine":1,"endColumn":36},{"ruleId":"968","severity":1,"message":"1134","line":1,"column":38,"nodeType":"970","messageId":"971","endLine":1,"endColumn":44},{"ruleId":"968","severity":1,"message":"1125","line":11,"column":8,"nodeType":"970","messageId":"971","endLine":11,"endColumn":14},{"ruleId":"968","severity":1,"message":"1144","line":12,"column":8,"nodeType":"970","messageId":"971","endLine":12,"endColumn":9},{"ruleId":"987","replacedBy":"1174"},{"ruleId":"989","replacedBy":"1175"},{"ruleId":"968","severity":1,"message":"1143","line":9,"column":15,"nodeType":"970","messageId":"971","endLine":9,"endColumn":23},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1030","line":9,"column":30,"nodeType":"970","messageId":"971","endLine":9,"endColumn":35},{"ruleId":"968","severity":1,"message":"1134","line":1,"column":38,"nodeType":"970","messageId":"971","endLine":1,"endColumn":44},{"ruleId":"968","severity":1,"message":"1136","line":2,"column":18,"nodeType":"970","messageId":"971","endLine":2,"endColumn":23},{"ruleId":"968","severity":1,"message":"1016","line":2,"column":25,"nodeType":"970","messageId":"971","endLine":2,"endColumn":29},{"ruleId":"968","severity":1,"message":"1144","line":17,"column":8,"nodeType":"970","messageId":"971","endLine":17,"endColumn":9},{"ruleId":"968","severity":1,"message":"1111","line":22,"column":7,"nodeType":"970","messageId":"971","endLine":22,"endColumn":14},{"ruleId":"1176","severity":1,"message":"1177","line":44,"column":17,"nodeType":"1178","messageId":"1179","endLine":44,"endColumn":70},{"ruleId":"968","severity":1,"message":"979","line":20,"column":9,"nodeType":"970","messageId":"971","endLine":20,"endColumn":15},{"ruleId":"968","severity":1,"message":"982","line":64,"column":9,"nodeType":"970","messageId":"971","endLine":64,"endColumn":22},{"ruleId":"968","severity":1,"message":"1180","line":336,"column":9,"nodeType":"970","messageId":"971","endLine":336,"endColumn":25},{"ruleId":"968","severity":1,"message":"1181","line":357,"column":7,"nodeType":"970","messageId":"971","endLine":357,"endColumn":17},{"ruleId":"987","replacedBy":"1182"},{"ruleId":"989","replacedBy":"1183"},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"987","replacedBy":"1184"},{"ruleId":"989","replacedBy":"1185"},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1143","line":9,"column":15,"nodeType":"970","messageId":"971","endLine":9,"endColumn":23},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1030","line":9,"column":30,"nodeType":"970","messageId":"971","endLine":9,"endColumn":35},{"ruleId":"968","severity":1,"message":"1134","line":1,"column":38,"nodeType":"970","messageId":"971","endLine":1,"endColumn":44},{"ruleId":"968","severity":1,"message":"1139","line":5,"column":3,"nodeType":"970","messageId":"971","endLine":5,"endColumn":7},{"ruleId":"968","severity":1,"message":"1186","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":13},{"ruleId":"968","severity":1,"message":"1098","line":13,"column":3,"nodeType":"970","messageId":"971","endLine":13,"endColumn":11},{"ruleId":"968","severity":1,"message":"1187","line":39,"column":8,"nodeType":"970","messageId":"971","endLine":39,"endColumn":18},{"ruleId":"968","severity":1,"message":"1188","line":42,"column":8,"nodeType":"970","messageId":"971","endLine":42,"endColumn":15},{"ruleId":"968","severity":1,"message":"1100","line":45,"column":18,"nodeType":"970","messageId":"971","endLine":45,"endColumn":24},{"ruleId":"968","severity":1,"message":"1076","line":55,"column":28,"nodeType":"970","messageId":"971","endLine":55,"endColumn":37},{"ruleId":"968","severity":1,"message":"1189","line":56,"column":58,"nodeType":"970","messageId":"971","endLine":56,"endColumn":76},{"ruleId":"968","severity":1,"message":"1190","line":60,"column":10,"nodeType":"970","messageId":"971","endLine":60,"endColumn":17},{"ruleId":"968","severity":1,"message":"1191","line":60,"column":19,"nodeType":"970","messageId":"971","endLine":60,"endColumn":29},{"ruleId":"968","severity":1,"message":"1192","line":68,"column":10,"nodeType":"970","messageId":"971","endLine":68,"endColumn":19},{"ruleId":"968","severity":1,"message":"1193","line":68,"column":21,"nodeType":"970","messageId":"971","endLine":68,"endColumn":33},{"ruleId":"968","severity":1,"message":"1194","line":69,"column":10,"nodeType":"970","messageId":"971","endLine":69,"endColumn":25},{"ruleId":"968","severity":1,"message":"1195","line":69,"column":27,"nodeType":"970","messageId":"971","endLine":69,"endColumn":45},{"ruleId":"985","severity":1,"message":"986","line":160,"column":11,"nodeType":"978","endLine":160,"endColumn":29},{"ruleId":"985","severity":1,"message":"986","line":162,"column":11,"nodeType":"978","endLine":162,"endColumn":32},{"ruleId":"985","severity":1,"message":"986","line":166,"column":11,"nodeType":"978","endLine":166,"endColumn":29},{"ruleId":"985","severity":1,"message":"986","line":168,"column":11,"nodeType":"978","endLine":168,"endColumn":32},{"ruleId":"985","severity":1,"message":"986","line":172,"column":11,"nodeType":"978","endLine":172,"endColumn":30},{"ruleId":"985","severity":1,"message":"986","line":174,"column":11,"nodeType":"978","endLine":174,"endColumn":33},{"ruleId":"985","severity":1,"message":"986","line":178,"column":11,"nodeType":"978","endLine":178,"endColumn":30},{"ruleId":"985","severity":1,"message":"986","line":180,"column":11,"nodeType":"978","endLine":180,"endColumn":33},{"ruleId":"985","severity":1,"message":"986","line":184,"column":11,"nodeType":"978","endLine":184,"endColumn":29},{"ruleId":"985","severity":1,"message":"986","line":186,"column":11,"nodeType":"978","endLine":186,"endColumn":32},{"ruleId":"985","severity":1,"message":"986","line":190,"column":11,"nodeType":"978","endLine":190,"endColumn":29},{"ruleId":"985","severity":1,"message":"986","line":192,"column":11,"nodeType":"978","endLine":192,"endColumn":32},{"ruleId":"985","severity":1,"message":"986","line":196,"column":11,"nodeType":"978","endLine":196,"endColumn":29},{"ruleId":"985","severity":1,"message":"986","line":198,"column":11,"nodeType":"978","endLine":198,"endColumn":32},{"ruleId":"1000","severity":1,"message":"1196","line":258,"column":6,"nodeType":"1002","endLine":258,"endColumn":18,"suggestions":"1197"},{"ruleId":"1000","severity":1,"message":"1198","line":280,"column":6,"nodeType":"1002","endLine":280,"endColumn":25,"suggestions":"1199"},{"ruleId":"1000","severity":1,"message":"1200","line":311,"column":6,"nodeType":"1002","endLine":311,"endColumn":13,"suggestions":"1201"},{"ruleId":"1000","severity":1,"message":"1202","line":355,"column":6,"nodeType":"1002","endLine":355,"endColumn":44,"suggestions":"1203"},{"ruleId":"968","severity":1,"message":"1107","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1134","line":1,"column":38,"nodeType":"970","messageId":"971","endLine":1,"endColumn":44},{"ruleId":"968","severity":1,"message":"1135","line":2,"column":10,"nodeType":"970","messageId":"971","endLine":2,"endColumn":16},{"ruleId":"968","severity":1,"message":"1125","line":13,"column":8,"nodeType":"970","messageId":"971","endLine":13,"endColumn":14},{"ruleId":"968","severity":1,"message":"1144","line":14,"column":8,"nodeType":"970","messageId":"971","endLine":14,"endColumn":9},{"ruleId":"968","severity":1,"message":"1040","line":16,"column":5,"nodeType":"970","messageId":"971","endLine":16,"endColumn":12},{"ruleId":"1000","severity":1,"message":"1204","line":49,"column":6,"nodeType":"1002","endLine":49,"endColumn":41,"suggestions":"1205"},{"ruleId":"968","severity":1,"message":"1206","line":10,"column":10,"nodeType":"970","messageId":"971","endLine":10,"endColumn":14},{"ruleId":"968","severity":1,"message":"1207","line":20,"column":10,"nodeType":"970","messageId":"971","endLine":20,"endColumn":14},{"ruleId":"968","severity":1,"message":"1208","line":30,"column":10,"nodeType":"970","messageId":"971","endLine":30,"endColumn":16},{"ruleId":"968","severity":1,"message":"1209","line":41,"column":10,"nodeType":"970","messageId":"971","endLine":41,"endColumn":16},{"ruleId":"968","severity":1,"message":"1210","line":51,"column":10,"nodeType":"970","messageId":"971","endLine":51,"endColumn":15},{"ruleId":"968","severity":1,"message":"1211","line":61,"column":10,"nodeType":"970","messageId":"971","endLine":61,"endColumn":15},{"ruleId":"968","severity":1,"message":"1212","line":71,"column":10,"nodeType":"970","messageId":"971","endLine":71,"endColumn":15},{"ruleId":"968","severity":1,"message":"1213","line":81,"column":10,"nodeType":"970","messageId":"971","endLine":81,"endColumn":15},{"ruleId":"968","severity":1,"message":"1214","line":91,"column":10,"nodeType":"970","messageId":"971","endLine":91,"endColumn":16},{"ruleId":"968","severity":1,"message":"1215","line":101,"column":10,"nodeType":"970","messageId":"971","endLine":101,"endColumn":16},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1030","line":9,"column":30,"nodeType":"970","messageId":"971","endLine":9,"endColumn":35},{"ruleId":"1044","severity":1,"message":"1045","line":428,"column":9,"nodeType":"1046","messageId":"1047","endLine":435,"endColumn":10},{"ruleId":"968","severity":1,"message":"1216","line":635,"column":15,"nodeType":"970","messageId":"971","endLine":635,"endColumn":25},{"ruleId":"968","severity":1,"message":"1217","line":679,"column":17,"nodeType":"970","messageId":"971","endLine":679,"endColumn":26},{"ruleId":"968","severity":1,"message":"1218","line":820,"column":13,"nodeType":"970","messageId":"971","endLine":820,"endColumn":16},{"ruleId":"968","severity":1,"message":"1219","line":823,"column":15,"nodeType":"970","messageId":"971","endLine":823,"endColumn":30},{"ruleId":"968","severity":1,"message":"1220","line":825,"column":15,"nodeType":"970","messageId":"971","endLine":825,"endColumn":30},{"ruleId":"968","severity":1,"message":"1217","line":893,"column":17,"nodeType":"970","messageId":"971","endLine":893,"endColumn":26},{"ruleId":"968","severity":1,"message":"1221","line":1002,"column":11,"nodeType":"970","messageId":"971","endLine":1002,"endColumn":22},{"ruleId":"987","replacedBy":"1222"},{"ruleId":"989","replacedBy":"1223"},{"ruleId":"968","severity":1,"message":"1051","line":13,"column":10,"nodeType":"970","messageId":"971","endLine":13,"endColumn":12},{"ruleId":"968","severity":1,"message":"1224","line":13,"column":14,"nodeType":"970","messageId":"971","endLine":13,"endColumn":16},{"ruleId":"968","severity":1,"message":"1107","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1173","line":1,"column":28,"nodeType":"970","messageId":"971","endLine":1,"endColumn":36},{"ruleId":"968","severity":1,"message":"1100","line":18,"column":18,"nodeType":"970","messageId":"971","endLine":18,"endColumn":24},{"ruleId":"968","severity":1,"message":"1173","line":2,"column":17,"nodeType":"970","messageId":"971","endLine":2,"endColumn":25},{"ruleId":"968","severity":1,"message":"1125","line":21,"column":8,"nodeType":"970","messageId":"971","endLine":21,"endColumn":14},{"ruleId":"1000","severity":1,"message":"1225","line":153,"column":6,"nodeType":"1002","endLine":153,"endColumn":8,"suggestions":"1226"},{"ruleId":"1000","severity":1,"message":"1227","line":160,"column":6,"nodeType":"1002","endLine":160,"endColumn":19,"suggestions":"1228"},{"ruleId":"1000","severity":1,"message":"1031","line":170,"column":6,"nodeType":"1002","endLine":170,"endColumn":8,"suggestions":"1229"},{"ruleId":"1000","severity":1,"message":"1230","line":243,"column":6,"nodeType":"1002","endLine":243,"endColumn":26,"suggestions":"1231"},{"ruleId":"968","severity":1,"message":"1028","line":9,"column":10,"nodeType":"970","messageId":"971","endLine":9,"endColumn":13},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1028","line":9,"column":10,"nodeType":"970","messageId":"971","endLine":9,"endColumn":13},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1030","line":9,"column":30,"nodeType":"970","messageId":"971","endLine":9,"endColumn":35},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1100","line":21,"column":18,"nodeType":"970","messageId":"971","endLine":21,"endColumn":24},{"ruleId":"1044","severity":1,"message":"1045","line":81,"column":13,"nodeType":"1046","messageId":"1047","endLine":110,"endColumn":14},{"ruleId":"968","severity":1,"message":"1232","line":286,"column":45,"nodeType":"970","messageId":"971","endLine":286,"endColumn":59},{"ruleId":"968","severity":1,"message":"1233","line":286,"column":61,"nodeType":"970","messageId":"971","endLine":286,"endColumn":75},{"ruleId":"968","severity":1,"message":"1234","line":30,"column":9,"nodeType":"970","messageId":"971","endLine":30,"endColumn":16},{"ruleId":"968","severity":1,"message":"1235","line":15,"column":8,"nodeType":"970","messageId":"971","endLine":15,"endColumn":21},{"ruleId":"968","severity":1,"message":"1236","line":81,"column":17,"nodeType":"970","messageId":"971","endLine":81,"endColumn":25},{"ruleId":"968","severity":1,"message":"1237","line":92,"column":10,"nodeType":"970","messageId":"971","endLine":92,"endColumn":18},{"ruleId":"968","severity":1,"message":"1238","line":96,"column":10,"nodeType":"970","messageId":"971","endLine":96,"endColumn":13},{"ruleId":"968","severity":1,"message":"1239","line":99,"column":18,"nodeType":"970","messageId":"971","endLine":99,"endColumn":27},{"ruleId":"968","severity":1,"message":"1240","line":110,"column":10,"nodeType":"970","messageId":"971","endLine":110,"endColumn":23},{"ruleId":"968","severity":1,"message":"1241","line":110,"column":25,"nodeType":"970","messageId":"971","endLine":110,"endColumn":41},{"ruleId":"968","severity":1,"message":"1242","line":112,"column":10,"nodeType":"970","messageId":"971","endLine":112,"endColumn":25},{"ruleId":"1000","severity":1,"message":"1243","line":126,"column":6,"nodeType":"1002","endLine":126,"endColumn":32,"suggestions":"1244"},{"ruleId":"968","severity":1,"message":"1245","line":136,"column":11,"nodeType":"970","messageId":"971","endLine":136,"endColumn":14},{"ruleId":"968","severity":1,"message":"1246","line":468,"column":24,"nodeType":"970","messageId":"971","endLine":468,"endColumn":28},{"ruleId":"1247","severity":1,"message":"1248","line":483,"column":49,"nodeType":"1021","messageId":"1249","endLine":483,"endColumn":51},{"ruleId":"1250","severity":1,"message":"1251","line":740,"column":34,"nodeType":"1178","messageId":"1252","endLine":740,"endColumn":35,"suggestions":"1253"},{"ruleId":"1250","severity":1,"message":"1254","line":745,"column":31,"nodeType":"1178","messageId":"1252","endLine":745,"endColumn":32,"suggestions":"1255"},{"ruleId":"1250","severity":1,"message":"1251","line":762,"column":34,"nodeType":"1178","messageId":"1252","endLine":762,"endColumn":35,"suggestions":"1256"},{"ruleId":"1250","severity":1,"message":"1254","line":767,"column":31,"nodeType":"1178","messageId":"1252","endLine":767,"endColumn":32,"suggestions":"1257"},{"ruleId":"1250","severity":1,"message":"1251","line":787,"column":34,"nodeType":"1178","messageId":"1252","endLine":787,"endColumn":35,"suggestions":"1258"},{"ruleId":"1250","severity":1,"message":"1254","line":792,"column":31,"nodeType":"1178","messageId":"1252","endLine":792,"endColumn":32,"suggestions":"1259"},{"ruleId":"1250","severity":1,"message":"1251","line":825,"column":34,"nodeType":"1178","messageId":"1252","endLine":825,"endColumn":35,"suggestions":"1260"},{"ruleId":"1250","severity":1,"message":"1254","line":830,"column":31,"nodeType":"1178","messageId":"1252","endLine":830,"endColumn":32,"suggestions":"1261"},{"ruleId":"1250","severity":1,"message":"1251","line":848,"column":34,"nodeType":"1178","messageId":"1252","endLine":848,"endColumn":35,"suggestions":"1262"},{"ruleId":"1250","severity":1,"message":"1254","line":853,"column":31,"nodeType":"1178","messageId":"1252","endLine":853,"endColumn":32,"suggestions":"1263"},{"ruleId":"1250","severity":1,"message":"1251","line":873,"column":34,"nodeType":"1178","messageId":"1252","endLine":873,"endColumn":35,"suggestions":"1264"},{"ruleId":"1250","severity":1,"message":"1254","line":878,"column":31,"nodeType":"1178","messageId":"1252","endLine":878,"endColumn":32,"suggestions":"1265"},{"ruleId":"1250","severity":1,"message":"1251","line":894,"column":59,"nodeType":"1178","messageId":"1252","endLine":894,"endColumn":60,"suggestions":"1266"},{"ruleId":"1250","severity":1,"message":"1254","line":894,"column":165,"nodeType":"1178","messageId":"1252","endLine":894,"endColumn":166,"suggestions":"1267"},{"ruleId":"1268","severity":1,"message":"1269","line":1223,"column":9,"nodeType":"1270","messageId":"1249","endLine":1223,"endColumn":14},{"ruleId":"968","severity":1,"message":"1271","line":1277,"column":7,"nodeType":"970","messageId":"971","endLine":1277,"endColumn":12},{"ruleId":"1250","severity":1,"message":"1251","line":1419,"column":34,"nodeType":"1178","messageId":"1252","endLine":1419,"endColumn":35,"suggestions":"1272"},{"ruleId":"1250","severity":1,"message":"1254","line":1424,"column":31,"nodeType":"1178","messageId":"1252","endLine":1424,"endColumn":32,"suggestions":"1273"},{"ruleId":"1250","severity":1,"message":"1251","line":1440,"column":34,"nodeType":"1178","messageId":"1252","endLine":1440,"endColumn":35,"suggestions":"1274"},{"ruleId":"1250","severity":1,"message":"1254","line":1445,"column":31,"nodeType":"1178","messageId":"1252","endLine":1445,"endColumn":32,"suggestions":"1275"},{"ruleId":"1000","severity":1,"message":"1276","line":1706,"column":6,"nodeType":"1002","endLine":1706,"endColumn":8,"suggestions":"1277"},{"ruleId":"1000","severity":1,"message":"1278","line":1753,"column":6,"nodeType":"1002","endLine":1753,"endColumn":23,"suggestions":"1279"},{"ruleId":"1000","severity":1,"message":"1280","line":1777,"column":6,"nodeType":"1002","endLine":1777,"endColumn":26,"suggestions":"1281"},{"ruleId":"1000","severity":1,"message":"1282","line":1828,"column":6,"nodeType":"1002","endLine":1828,"endColumn":24,"suggestions":"1283"},{"ruleId":"968","severity":1,"message":"1051","line":12,"column":10,"nodeType":"970","messageId":"971","endLine":12,"endColumn":12},{"ruleId":"968","severity":1,"message":"1100","line":23,"column":9,"nodeType":"970","messageId":"971","endLine":23,"endColumn":15},{"ruleId":"968","severity":1,"message":"1052","line":23,"column":26,"nodeType":"970","messageId":"971","endLine":23,"endColumn":32},{"ruleId":"968","severity":1,"message":"1053","line":23,"column":34,"nodeType":"970","messageId":"971","endLine":23,"endColumn":39},{"ruleId":"1000","severity":1,"message":"1284","line":230,"column":6,"nodeType":"1002","endLine":230,"endColumn":22,"suggestions":"1285"},{"ruleId":"1000","severity":1,"message":"1286","line":239,"column":6,"nodeType":"1002","endLine":239,"endColumn":21,"suggestions":"1287"},{"ruleId":"968","severity":1,"message":"993","line":4,"column":3,"nodeType":"970","messageId":"971","endLine":4,"endColumn":8},{"ruleId":"968","severity":1,"message":"1288","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":7},{"ruleId":"968","severity":1,"message":"1289","line":390,"column":21,"nodeType":"970","messageId":"971","endLine":390,"endColumn":27},{"ruleId":"976","severity":1,"message":"977","line":532,"column":19,"nodeType":"978","endLine":532,"endColumn":56},{"ruleId":"976","severity":1,"message":"977","line":584,"column":17,"nodeType":"978","endLine":584,"endColumn":60},{"ruleId":"968","severity":1,"message":"1015","line":5,"column":3,"nodeType":"970","messageId":"971","endLine":5,"endColumn":8},{"ruleId":"968","severity":1,"message":"1290","line":7,"column":3,"nodeType":"970","messageId":"971","endLine":7,"endColumn":6},{"ruleId":"968","severity":1,"message":"1291","line":55,"column":16,"nodeType":"970","messageId":"971","endLine":55,"endColumn":20},{"ruleId":"968","severity":1,"message":"1271","line":60,"column":5,"nodeType":"970","messageId":"971","endLine":60,"endColumn":10},{"ruleId":"968","severity":1,"message":"1062","line":75,"column":20,"nodeType":"970","messageId":"971","endLine":75,"endColumn":31},{"ruleId":"985","severity":1,"message":"986","line":118,"column":18,"nodeType":"978","endLine":118,"endColumn":47},{"ruleId":"985","severity":1,"message":"986","line":120,"column":18,"nodeType":"978","endLine":120,"endColumn":47},{"ruleId":"985","severity":1,"message":"986","line":122,"column":18,"nodeType":"978","endLine":122,"endColumn":47},{"ruleId":"985","severity":1,"message":"986","line":124,"column":18,"nodeType":"978","endLine":124,"endColumn":47},{"ruleId":"985","severity":1,"message":"986","line":147,"column":11,"nodeType":"978","endLine":155,"endColumn":13},{"ruleId":"985","severity":1,"message":"986","line":160,"column":13,"nodeType":"978","endLine":160,"endColumn":63},{"ruleId":"1247","severity":1,"message":"1292","line":228,"column":28,"nodeType":"1021","messageId":"1249","endLine":228,"endColumn":30},{"ruleId":"1000","severity":1,"message":"1293","line":481,"column":6,"nodeType":"1002","endLine":481,"endColumn":13,"suggestions":"1294"},{"ruleId":"1000","severity":1,"message":"1067","line":490,"column":6,"nodeType":"1002","endLine":490,"endColumn":8,"suggestions":"1295"},{"ruleId":"968","severity":1,"message":"1028","line":9,"column":10,"nodeType":"970","messageId":"971","endLine":9,"endColumn":13},{"ruleId":"968","severity":1,"message":"1029","line":9,"column":25,"nodeType":"970","messageId":"971","endLine":9,"endColumn":28},{"ruleId":"968","severity":1,"message":"1107","line":1,"column":17,"nodeType":"970","messageId":"971","endLine":1,"endColumn":26},{"ruleId":"968","severity":1,"message":"1051","line":19,"column":10,"nodeType":"970","messageId":"971","endLine":19,"endColumn":12},{"ruleId":"968","severity":1,"message":"1296","line":27,"column":10,"nodeType":"970","messageId":"971","endLine":27,"endColumn":17},{"ruleId":"968","severity":1,"message":"1297","line":27,"column":19,"nodeType":"970","messageId":"971","endLine":27,"endColumn":29},{"ruleId":"1000","severity":1,"message":"1298","line":27,"column":8,"nodeType":"1002","endLine":27,"endColumn":10,"suggestions":"1299"},{"ruleId":"968","severity":1,"message":"1139","line":3,"column":3,"nodeType":"970","messageId":"971","endLine":3,"endColumn":7},{"ruleId":"968","severity":1,"message":"991","line":4,"column":3,"nodeType":"970","messageId":"971","endLine":4,"endColumn":10},{"ruleId":"968","severity":1,"message":"992","line":5,"column":3,"nodeType":"970","messageId":"971","endLine":5,"endColumn":9},{"ruleId":"968","severity":1,"message":"993","line":6,"column":3,"nodeType":"970","messageId":"971","endLine":6,"endColumn":8},{"ruleId":"976","severity":1,"message":"1300","line":67,"column":11,"nodeType":"978","endLine":72,"endColumn":12},{"ruleId":"1247","severity":1,"message":"1248","line":135,"column":24,"nodeType":"1021","messageId":"1249","endLine":135,"endColumn":26},{"ruleId":"1070","severity":1,"message":"1071","line":157,"column":31,"nodeType":"1072","messageId":"1073","endLine":157,"endColumn":33},{"ruleId":"1247","severity":1,"message":"1292","line":165,"column":29,"nodeType":"1021","messageId":"1249","endLine":165,"endColumn":31},{"ruleId":"1000","severity":1,"message":"1301","line":185,"column":6,"nodeType":"1002","endLine":185,"endColumn":18,"suggestions":"1302"},{"ruleId":"968","severity":1,"message":"1288","line":2,"column":60,"nodeType":"970","messageId":"971","endLine":2,"endColumn":64},{"ruleId":"968","severity":1,"message":"994","line":44,"column":9,"nodeType":"970","messageId":"971","endLine":44,"endColumn":16},{"ruleId":"968","severity":1,"message":"1303","line":110,"column":29,"nodeType":"970","messageId":"971","endLine":110,"endColumn":36},{"ruleId":"968","severity":1,"message":"984","line":110,"column":38,"nodeType":"970","messageId":"971","endLine":110,"endColumn":46},{"ruleId":"968","severity":1,"message":"983","line":110,"column":48,"nodeType":"970","messageId":"971","endLine":110,"endColumn":57},{"ruleId":"1044","severity":1,"message":"1045","line":150,"column":5,"nodeType":"1046","messageId":"1047","endLine":156,"endColumn":6},{"ruleId":"1070","severity":1,"message":"1071","line":162,"column":41,"nodeType":"1072","messageId":"1073","endLine":162,"endColumn":43},{"ruleId":"968","severity":1,"message":"1074","line":429,"column":11,"nodeType":"970","messageId":"971","endLine":429,"endColumn":21},{"ruleId":"985","severity":1,"message":"986","line":687,"column":15,"nodeType":"978","endLine":687,"endColumn":63},{"ruleId":"968","severity":1,"message":"1304","line":704,"column":5,"nodeType":"970","messageId":"971","endLine":704,"endColumn":12},{"ruleId":"968","severity":1,"message":"1305","line":705,"column":11,"nodeType":"970","messageId":"971","endLine":705,"endColumn":20},{"ruleId":"985","severity":1,"message":"986","line":724,"column":15,"nodeType":"978","endLine":724,"endColumn":63},{"ruleId":"1044","severity":1,"message":"1045","line":746,"column":5,"nodeType":"1046","messageId":"1047","endLine":749,"endColumn":6},{"ruleId":"1044","severity":1,"message":"1045","line":750,"column":5,"nodeType":"1046","messageId":"1047","endLine":753,"endColumn":6},{"ruleId":"968","severity":1,"message":"1082","line":855,"column":51,"nodeType":"970","messageId":"971","endLine":855,"endColumn":68},{"ruleId":"968","severity":1,"message":"1083","line":855,"column":70,"nodeType":"970","messageId":"971","endLine":855,"endColumn":75},{"ruleId":"968","severity":1,"message":"1305","line":855,"column":108,"nodeType":"970","messageId":"971","endLine":855,"endColumn":117},"no-unused-vars","'addLogin' is defined but never used.","Identifier","unusedVar","'MyIcon' is assigned a value but never used.","'isCode' is assigned a value but never used.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Option' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["1306"],"no-negated-in-lhs",["1307"],"'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SubMenu' is assigned a value but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","'bluData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.","ArrayExpression",["1308"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1309"],"React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1310"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["1311"],["1306"],["1307"],["1306"],["1307"],"'Image' is defined but never used.","'Space' is defined but never used.","'Card' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["1312"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["1313"],"'get' is defined but never used.","'del' is defined but never used.","'patch' is defined but never used.","React Hook useEffect has missing dependencies: 'destroyOnClose' and 'width'. Either include them or remove the dependency array. If 'setIsdestroyOnClose' needs the current value of 'destroyOnClose', you can also switch to useReducer instead of useState and read 'destroyOnClose' in the reducer.",["1314"],["1306"],["1307"],["1315"],"'ConfigProvider' is defined but never used.",["1306"],["1307"],"'getOta' is defined but never used.","'storage' is assigned a value but never used.",["1306"],["1307"],"'num07' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["1306"],["1307"],"'devicesTitleHeight' is defined but never used.","'px' is defined but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["1316"],["1306"],["1307"],"'mTop' is defined but never used.","'useThrottleFn' is defined but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'isMore' is assigned a value but never used.","'setIsMore' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["1317"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["1318"],"'BrowserRouter' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'patientId' is assigned a value but never used.","'age' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'disabled' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.",["1306"],["1307"],["1306"],["1307"],"React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["1319"],"'Table' is defined but never used.","'Popconfirm' is defined but never used.","'petId' is assigned a value but never used.","'loading' is assigned a value but never used.","'_del' is assigned a value but never used.","'tableData' is assigned a value but never used.","'historyData' is assigned a value but never used.","'Carousel' is defined but never used.","'PlusOutlined' is defined but never used.","'Header' is assigned a value but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["1320"],["1306"],["1307"],"'useEffect' is defined but never used.",["1306"],["1307"],"'MTop' is defined but never used.","'history' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'time' is assigned a value but never used.","'newTime' is assigned a value but never used.",["1306"],["1307"],"'Radio' is defined but never used.","'petUrl' is assigned a value but never used.","'country' is assigned a value but never used.","'infoData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'storage.userId'. Either include them or remove the dependency array.",["1321"],["1306"],["1307"],"'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["1322"],"'message' is defined but never used.","'ipcRenderer' is assigned a value but never used.",["1306"],["1307"],"React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1323"],"'useRef' is defined but never used.","'Layout' is defined but never used.","'Input' is defined but never used.",["1306"],["1307"],"'Menu' is defined but never used.","'Select' is defined but never used.","'createFromIconfontCN' is defined but never used.","'userImage' is assigned a value but never used.","'postJson' is defined but never used.","'_' is defined but never used.",["1306"],["1307"],"'mar' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'getBase64' is assigned a value but never used.","'PressButton_Pro' is defined but never used.","'HistoryTable' is defined but never used.","'Content' is assigned a value but never used.","'mellaConnectStatus' is assigned a value but never used.","'saveNum' is assigned a value but never used.","'setSaveNum' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'selectRoleId' is assigned a value but never used.","'workplaceName' is assigned a value but never used.","'workplaceId' is assigned a value but never used.","'organizationId' is assigned a value but never used.","'setOrganizationId' is assigned a value but never used.","'deviceType' is assigned a value but never used.",["1324"],"'devWidth' is assigned a value but never used.","'size' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'windowssize' is assigned a value but never used.","'timer' is assigned a value but never used.","'useState' is defined but never used.",["1306"],["1307"],"no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'selectDeviceName' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.",["1306"],["1307"],["1306"],["1307"],"'PageHeader' is defined but never used.","'redjinggao' is defined but never used.","'MyModal' is defined but never used.","'rulerConnectStatus' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'selectPetDetail' is assigned a value but never used.","'setSelectPetDetail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["1325"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1326"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["1327"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'inputIndex', 'lowerValue', 'neckValue', 'radioValue', 'receiveBroadcastHardwareInfo.deviceType', 'receiveBroadcastHardwareInfo.macId', 'rulerUnit', 'selectHardwareInfo', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1328"],"React Hook useEffect has a missing dependency: 'hardwareInfo'. Either include it or remove the dependency array.",["1329"],"'CtoF' is defined but never used.","'FtoC' is defined but never used.","'KgtoLb' is defined but never used.","'LbtoKg' is defined but never used.","'GToMl' is defined but never used.","'MltoG' is defined but never used.","'GToOz' is defined but never used.","'OztoG' is defined but never used.","'CmtoIn' is defined but never used.","'IntoCm' is defined but never used.","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'mac' is assigned a value but never used.","'hardwareVersion' is assigned a value but never used.","'softwareVersion' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.",["1306"],["1307"],"'pX' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllPet'. Either include it or remove the dependency array.",["1330"],"React Hook useEffect has a missing dependency: 'searchPetByPetNameOrPatientId'. Either include it or remove the dependency array.",["1331"],["1332"],"React Hook useEffect has missing dependencies: 'hardwareList' and 'selectHardwareInfo'. Either include them or remove the dependency array.",["1333"],"'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'_resend' is assigned a value but never used.","'UnassignModal' is defined but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","'assignVisible' is assigned a value but never used.","'setAssignVisible' is assigned a value but never used.","'lastWorkplaceId' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1334"],"'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","unexpected","no-useless-escape","Unnecessary escape character: \\..","unnecessaryEscape",["1335","1336"],"Unnecessary escape character: \\-.",["1337","1338"],["1339","1340"],["1341","1342"],["1343","1344"],["1345","1346"],["1347","1348"],["1349","1350"],["1351","1352"],["1353","1354"],["1355","1356"],["1357","1358"],["1359","1360"],["1361","1362"],"no-dupe-keys","Duplicate key 'align'.","ObjectExpression","'hisHe' is assigned a value but never used.",["1363","1364"],["1365","1366"],["1367","1368"],["1369","1370"],"React Hook useEffect has a missing dependency: 'mellaMeasureNum'. Either include it or remove the dependency array.",["1371"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["1372"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["1373"],"React Hook useEffect has a missing dependency: 'units'. Either include it or remove the dependency array.",["1374"],"React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["1375"],"React Hook useEffect has a missing dependency: 'setBiggieConnectStatusFun'. Either include it or remove the dependency array. If 'setBiggieConnectStatusFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1376"],"'Spin' is defined but never used.","'bounds' is assigned a value but never used.","'Tag' is defined but never used.","'memo' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["1377"],["1378"],"'vibible' is assigned a value but never used.","'setVibible' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["1379"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["1380"],"'petName' is assigned a value but never used.","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1381","fix":"1382"},{"desc":"1383","fix":"1384"},{"desc":"1385","fix":"1386"},{"desc":"1387","fix":"1388"},{"desc":"1389","fix":"1390"},{"desc":"1391","fix":"1392"},{"desc":"1393","fix":"1394"},{"desc":"1393","fix":"1395"},{"desc":"1396","fix":"1397"},{"desc":"1398","fix":"1399"},{"desc":"1400","fix":"1401"},{"desc":"1402","fix":"1403"},{"desc":"1404","fix":"1405"},{"desc":"1406","fix":"1407"},{"desc":"1408","fix":"1409"},{"desc":"1410","fix":"1411"},{"desc":"1402","fix":"1412"},{"desc":"1413","fix":"1414"},{"desc":"1415","fix":"1416"},{"desc":"1417","fix":"1418"},{"desc":"1419","fix":"1420"},{"desc":"1421","fix":"1422"},{"desc":"1423","fix":"1424"},{"desc":"1425","fix":"1426"},{"desc":"1393","fix":"1427"},{"desc":"1428","fix":"1429"},{"desc":"1383","fix":"1430"},{"messageId":"1431","fix":"1432","desc":"1433"},{"messageId":"1434","fix":"1435","desc":"1436"},{"messageId":"1431","fix":"1437","desc":"1433"},{"messageId":"1434","fix":"1438","desc":"1436"},{"messageId":"1431","fix":"1439","desc":"1433"},{"messageId":"1434","fix":"1440","desc":"1436"},{"messageId":"1431","fix":"1441","desc":"1433"},{"messageId":"1434","fix":"1442","desc":"1436"},{"messageId":"1431","fix":"1443","desc":"1433"},{"messageId":"1434","fix":"1444","desc":"1436"},{"messageId":"1431","fix":"1445","desc":"1433"},{"messageId":"1434","fix":"1446","desc":"1436"},{"messageId":"1431","fix":"1447","desc":"1433"},{"messageId":"1434","fix":"1448","desc":"1436"},{"messageId":"1431","fix":"1449","desc":"1433"},{"messageId":"1434","fix":"1450","desc":"1436"},{"messageId":"1431","fix":"1451","desc":"1433"},{"messageId":"1434","fix":"1452","desc":"1436"},{"messageId":"1431","fix":"1453","desc":"1433"},{"messageId":"1434","fix":"1454","desc":"1436"},{"messageId":"1431","fix":"1455","desc":"1433"},{"messageId":"1434","fix":"1456","desc":"1436"},{"messageId":"1431","fix":"1457","desc":"1433"},{"messageId":"1434","fix":"1458","desc":"1436"},{"messageId":"1431","fix":"1459","desc":"1433"},{"messageId":"1434","fix":"1460","desc":"1436"},{"messageId":"1431","fix":"1461","desc":"1433"},{"messageId":"1434","fix":"1462","desc":"1436"},{"messageId":"1431","fix":"1463","desc":"1433"},{"messageId":"1434","fix":"1464","desc":"1436"},{"messageId":"1431","fix":"1465","desc":"1433"},{"messageId":"1434","fix":"1466","desc":"1436"},{"messageId":"1431","fix":"1467","desc":"1433"},{"messageId":"1434","fix":"1468","desc":"1436"},{"messageId":"1431","fix":"1469","desc":"1433"},{"messageId":"1434","fix":"1470","desc":"1436"},{"desc":"1471","fix":"1472"},{"desc":"1473","fix":"1474"},{"desc":"1475","fix":"1476"},{"desc":"1477","fix":"1478"},{"desc":"1479","fix":"1480"},{"desc":"1481","fix":"1482"},{"desc":"1483","fix":"1484"},{"desc":"1400","fix":"1485"},{"desc":"1486","fix":"1487"},{"desc":"1488","fix":"1489"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1490","text":"1491"},"Update the dependencies array to be: []",{"range":"1492","text":"1493"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1494","text":"1495"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1496","text":"1497"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"1498","text":"1499"},"Update the dependencies array to be: [mellaConnectStatus, value]",{"range":"1500","text":"1501"},"Update the dependencies array to be: [destroyOnClose, width]",{"range":"1502","text":"1503"},{"range":"1504","text":"1503"},"Update the dependencies array to be: [hardwareList]",{"range":"1505","text":"1506"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1507","text":"1508"},"Update the dependencies array to be: [storage.userId]",{"range":"1509","text":"1510"},"Update the dependencies array to be: [_getExam]",{"range":"1511","text":"1512"},"Add dependencies array: [callBack, timers]",{"range":"1513","text":"1514"},"Update the dependencies array to be: [form, storage.userId]",{"range":"1515","text":"1516"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1517","text":"1518"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"1519","text":"1520"},{"range":"1521","text":"1512"},"Update the dependencies array to be: [finishScan, inputIndex, newData]",{"range":"1522","text":"1523"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1524","text":"1525"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1526","text":"1527"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, inputIndex, lowerValue, neckValue, radioValue, receiveBroadcastHardwareInfo.deviceType, receiveBroadcastHardwareInfo.macId, rulerConfirmCount, rulerMeasureValue, rulerUnit, selectHardwareInfo, torsoValue, upperValue]",{"range":"1528","text":"1529"},"Update the dependencies array to be: [selectHardwareType, hardwareList, hardwareInfo]",{"range":"1530","text":"1531"},"Update the dependencies array to be: [getAllPet]",{"range":"1532","text":"1533"},"Update the dependencies array to be: [searchPetByPetNameOrPatientId, searchValue]",{"range":"1534","text":"1535"},{"range":"1536","text":"1503"},"Update the dependencies array to be: [hardwareList, selectHardwareInfo, selectHardwareType]",{"range":"1537","text":"1538"},{"range":"1539","text":"1493"},"removeEscape",{"range":"1540","text":"1541"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1542","text":"1543"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1544","text":"1541"},{"range":"1545","text":"1543"},{"range":"1546","text":"1541"},{"range":"1547","text":"1543"},{"range":"1548","text":"1541"},{"range":"1549","text":"1543"},{"range":"1550","text":"1541"},{"range":"1551","text":"1543"},{"range":"1552","text":"1541"},{"range":"1553","text":"1543"},{"range":"1554","text":"1541"},{"range":"1555","text":"1543"},{"range":"1556","text":"1541"},{"range":"1557","text":"1543"},{"range":"1558","text":"1541"},{"range":"1559","text":"1543"},{"range":"1560","text":"1541"},{"range":"1561","text":"1543"},{"range":"1562","text":"1541"},{"range":"1563","text":"1543"},{"range":"1564","text":"1541"},{"range":"1565","text":"1543"},{"range":"1566","text":"1541"},{"range":"1567","text":"1543"},{"range":"1568","text":"1541"},{"range":"1569","text":"1543"},{"range":"1570","text":"1541"},{"range":"1571","text":"1543"},{"range":"1572","text":"1541"},{"range":"1573","text":"1543"},{"range":"1574","text":"1541"},{"range":"1575","text":"1543"},{"range":"1576","text":"1541"},{"range":"1577","text":"1543"},"Update the dependencies array to be: [mellaMeasureNum]",{"range":"1578","text":"1579"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"1580","text":"1581"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"1582","text":"1583"},"Update the dependencies array to be: [biggieBodyWeight, units]",{"range":"1584","text":"1585"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"1586","text":"1587"},"Update the dependencies array to be: [petDetailInfo, setBiggieConnectStatusFun]",{"range":"1588","text":"1589"},"Update the dependencies array to be: [getPetTemperatureData, petId]",{"range":"1590","text":"1591"},{"range":"1592","text":"1510"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"1593","text":"1594"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"1595","text":"1596"},[41714,41716],"[_noUSB, _send, blueSearch]",[41788,41814],"[]",[9316,9318],"[setReceiveBroadcastHardwareInfoFun]",[10420,10450],"[devicesList, receiveBroadcastHardwareInfo]",[8427,8434],"[callBack, prediction, timeNum, value]",[9056,9076],"[mellaConnectStatus, value]",[3705,3707],"[destroyOnClose, width]",[2163,2165],[3213,3215],"[hardwareList]",[9712,9721],"[getPetTemperatureData, reRender, saveNum]",[9933,9935],"[storage.userId]",[4098,4100],"[_getExam]",[2257,2257],", [callBack, timers]",[2508,2510],"[form, storage.userId]",[2356,2371],"[callBack, carouselIndex]",[4656,4673],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[9945,9947],[6880,6892],"[finishScan, inputIndex, newData]",[7365,7384],"[inputIndex, rulerConfirmCount]",[8242,8249],"[petId, petLengthDataConvert, petMessage]",[9716,9754],"[bodyValue, changeUnit, headValue, inputIndex, lowerValue, neckValue, radioValue, receiveBroadcastHardwareInfo.deviceType, receiveBroadcastHardwareInfo.macId, rulerConfirmCount, rulerMeasureValue, rulerUnit, selectHardwareInfo, torsoValue, upperValue]",[1662,1697],"[selectHardwareType, hardwareList, hardwareInfo]",[4201,4203],"[getAllPet]",[4334,4347],"[searchPetByPetNameOrPatientId, searchValue]",[4542,4544],[7403,7423],"[hardwareList, selectHardwareInfo, selectHardwareType]",[4888,4914],[22131,22132],"",[22131,22131],"\\",[22332,22333],[22332,22332],[22915,22916],[22915,22915],[23116,23117],[23116,23116],[23796,23797],[23796,23796],[23997,23998],[23997,23997],[25139,25140],[25139,25139],[25340,25341],[25340,25340],[25947,25948],[25947,25947],[26148,26149],[26148,26148],[26814,26815],[26814,26814],[27015,27016],[27015,27015],[27586,27587],[27586,27586],[27692,27693],[27692,27692],[42336,42337],[42336,42336],[42537,42538],[42537,42537],[43067,43068],[43067,43067],[43268,43269],[43268,43268],[50569,50571],"[mellaMeasureNum]",[51812,51829],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[52370,52390],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[54254,54272],"[biggieBodyWeight, units]",[7021,7037],"[hardwareReduce, weight]",[7225,7240],"[petDetailInfo, setBiggieConnectStatusFun]",[13607,13614],"[getPetTemperatureData, petId]",[13803,13805],[885,887],"[initSelectVale, listArr]",[5018,5030],"[letterListCopy, phoneListCopy, searchText]"]