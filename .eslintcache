[{"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signIn\\index.jsx":"1","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx":"2","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js":"3","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\AddDevice.jsx":"4","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.jsx":"5","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx":"6","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\VetSpire.js":"7","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx":"8","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx":"9","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\index.js":"10","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js":"11","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\advancedSettings\\index.jsx":"12","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addDevice\\index.jsx":"13","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx":"14","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js":"15","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx":"16","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js":"17","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\App.js":"18","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js":"19","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\doctorAddPet\\index.jsx":"20","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx":"21","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\pet.js":"22","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js":"23","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js":"24","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx":"25","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\UnassignModal\\UnassignModal.jsx":"26","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx":"27","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js":"28","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\unassigned\\index.jsx":"29","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx":"30","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js":"31","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\user.js":"32","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx":"33","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\Biggie.jsx":"34","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx":"35","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\home\\index.jsx":"36","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\connectWorkplace\\index.jsx":"37","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\hardWareTypeUI.jsx":"38","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js":"39","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js":"40","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\swabPetEar\\index.jsx":"41","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\editParent\\index.jsx":"42","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js":"43","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js":"44","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\EzyVet.js":"45","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\experimental\\index.jsx":"46","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx":"47","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\help\\index.jsx":"48","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js":"49","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\mellarecord.js":"50","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\config\\config.js":"51","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx":"52","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\PetsUI.jsx":"53","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\petAndParents\\index.jsx":"54","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\px.jsx":"55","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\enrolledPlan\\index.jsx":"56","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js":"57","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\timer\\index.jsx":"58","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx":"59","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\pet.js":"60","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\components\\linkEquipment\\index.jsx":"61","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\settings\\index.jsx":"62","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\current.js":"63","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\index.js":"64","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js":"65","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\workplace.js":"66","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js":"67","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\organization.js":"68","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\user.js":"69","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx":"70","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\linkEquipment\\index.jsx":"71","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardAndPetsUI.jsx":"72","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\commonFun.js":"73","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\user.js":"74","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\index.jsx":"75","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx":"76","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx":"77","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx":"78","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js":"79","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\index.jsx":"80","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js":"81","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetModal\\index.jsx":"82","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js":"83","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardListModal.jsx":"84","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\vetSpire.js":"85","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\VetSpire.js":"86","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrganization\\index.jsx":"87","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js":"88","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\petall.js":"89","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\api.js":"90","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrg\\index.jsx":"91","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx":"92","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\ezyvetApi.js":"93","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\team\\index.jsx":"94","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signUpVerifyEmail\\index.jsx":"95","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\index.js":"96"},{"size":18148,"mtime":1661509757437,"results":"97","hashOfConfig":"98"},{"size":15395,"mtime":1661509757340,"results":"99","hashOfConfig":"98"},{"size":54280,"mtime":1661509757467,"results":"100","hashOfConfig":"98"},{"size":11526,"mtime":1661913557011,"results":"101","hashOfConfig":"98"},{"size":6919,"mtime":1661509757429,"results":"102","hashOfConfig":"98"},{"size":11108,"mtime":1661509757452,"results":"103","hashOfConfig":"98"},{"size":664,"mtime":1661509757283,"results":"104","hashOfConfig":"98"},{"size":8711,"mtime":1661509757311,"results":"105","hashOfConfig":"98"},{"size":3836,"mtime":1661509757322,"results":"106","hashOfConfig":"98"},{"size":346,"mtime":1661943244274,"results":"107","hashOfConfig":"98"},{"size":577,"mtime":1657680900931,"results":"108","hashOfConfig":"98"},{"size":13516,"mtime":1661941929746,"results":"109","hashOfConfig":"98"},{"size":13514,"mtime":1661509757333,"results":"110","hashOfConfig":"98"},{"size":8628,"mtime":1660703894009,"results":"111","hashOfConfig":"98"},{"size":846,"mtime":1655168677772,"results":"112","hashOfConfig":"98"},{"size":12319,"mtime":1661509757318,"results":"113","hashOfConfig":"98"},{"size":4641,"mtime":1656498255379,"results":"114","hashOfConfig":"98"},{"size":3706,"mtime":1661943474634,"results":"115","hashOfConfig":"98"},{"size":75,"mtime":1661944149159,"results":"116","hashOfConfig":"98"},{"size":29637,"mtime":1661509757364,"results":"117","hashOfConfig":"98"},{"size":2500,"mtime":1661509757469,"results":"118","hashOfConfig":"98"},{"size":3931,"mtime":1661509757301,"results":"119","hashOfConfig":"98"},{"size":249,"mtime":1655467295885,"results":"120","hashOfConfig":"98"},{"size":697,"mtime":1655467295909,"results":"121","hashOfConfig":"98"},{"size":7320,"mtime":1661509757347,"results":"122","hashOfConfig":"98"},{"size":31725,"mtime":1661509757309,"results":"123","hashOfConfig":"98"},{"size":3569,"mtime":1660200016614,"results":"124","hashOfConfig":"98"},{"size":1451,"mtime":1655168677805,"results":"125","hashOfConfig":"98"},{"size":35789,"mtime":1661509757459,"results":"126","hashOfConfig":"98"},{"size":9487,"mtime":1660272886460,"results":"127","hashOfConfig":"98"},{"size":88,"mtime":1657709847680,"results":"128","hashOfConfig":"98"},{"size":2834,"mtime":1661509757303,"results":"129","hashOfConfig":"98"},{"size":11003,"mtime":1661509757403,"results":"130","hashOfConfig":"98"},{"size":4120,"mtime":1661509757349,"results":"131","hashOfConfig":"98"},{"size":6751,"mtime":1660196282287,"results":"132","hashOfConfig":"98"},{"size":3942,"mtime":1661941929749,"results":"133","hashOfConfig":"98"},{"size":6565,"mtime":1661509757361,"results":"134","hashOfConfig":"98"},{"size":5169,"mtime":1661941880340,"results":"135","hashOfConfig":"98"},{"size":1041,"mtime":1655168677775,"results":"136","hashOfConfig":"98"},{"size":224,"mtime":1655467295875,"results":"137","hashOfConfig":"98"},{"size":2695,"mtime":1658483746593,"results":"138","hashOfConfig":"98"},{"size":10819,"mtime":1661509757368,"results":"139","hashOfConfig":"98"},{"size":343,"mtime":1655168677793,"results":"140","hashOfConfig":"98"},{"size":17788,"mtime":1659945946500,"results":"141","hashOfConfig":"98"},{"size":664,"mtime":1661509757282,"results":"142","hashOfConfig":"98"},{"size":2508,"mtime":1658483803920,"results":"143","hashOfConfig":"98"},{"size":1365,"mtime":1655880805276,"results":"144","hashOfConfig":"98"},{"size":9521,"mtime":1661509757378,"results":"145","hashOfConfig":"98"},{"size":91,"mtime":1655467295880,"results":"146","hashOfConfig":"98"},{"size":951,"mtime":1661849271242,"results":"147","hashOfConfig":"98"},{"size":648,"mtime":1661913217507,"results":"148","hashOfConfig":"98"},{"size":1562,"mtime":1657271071421,"results":"149","hashOfConfig":"98"},{"size":15044,"mtime":1661942957289,"results":"150","hashOfConfig":"98"},{"size":10992,"mtime":1661509757414,"results":"151","hashOfConfig":"98"},{"size":3056,"mtime":1661509757473,"results":"152","hashOfConfig":"98"},{"size":8389,"mtime":1662026124398,"results":"153","hashOfConfig":"98"},{"size":2103,"mtime":1656498255375,"results":"154","hashOfConfig":"98"},{"size":1201,"mtime":1658485132416,"results":"155","hashOfConfig":"98"},{"size":1573,"mtime":1661509757427,"results":"156","hashOfConfig":"98"},{"size":574,"mtime":1661509757286,"results":"157","hashOfConfig":"98"},{"size":4215,"mtime":1662026321474,"results":"158","hashOfConfig":"98"},{"size":19732,"mtime":1661509757433,"results":"159","hashOfConfig":"98"},{"size":1150,"mtime":1655427981745,"results":"160","hashOfConfig":"98"},{"size":89,"mtime":1661509757280,"results":"161","hashOfConfig":"98"},{"size":532,"mtime":1655467295881,"results":"162","hashOfConfig":"98"},{"size":899,"mtime":1661509757306,"results":"163","hashOfConfig":"98"},{"size":1275,"mtime":1655168677817,"results":"164","hashOfConfig":"98"},{"size":1077,"mtime":1661509757299,"results":"165","hashOfConfig":"98"},{"size":574,"mtime":1661509757287,"results":"166","hashOfConfig":"98"},{"size":17158,"mtime":1661509757425,"results":"167","hashOfConfig":"98"},{"size":1738,"mtime":1658479581468,"results":"168","hashOfConfig":"98"},{"size":3390,"mtime":1662024472825,"results":"169","hashOfConfig":"98"},{"size":4552,"mtime":1661849271250,"results":"170","hashOfConfig":"98"},{"size":1323,"mtime":1661509757292,"results":"171","hashOfConfig":"98"},{"size":40741,"mtime":1661995924195,"results":"172","hashOfConfig":"98"},{"size":12702,"mtime":1661509757337,"results":"173","hashOfConfig":"98"},{"size":2811,"mtime":1659944507368,"results":"174","hashOfConfig":"98"},{"size":1410,"mtime":1655168677807,"results":"175","hashOfConfig":"98"},{"size":4449,"mtime":1655168677816,"results":"176","hashOfConfig":"98"},{"size":1438,"mtime":1661928703627,"results":"177","hashOfConfig":"98"},{"size":3044,"mtime":1655168677819,"results":"178","hashOfConfig":"98"},{"size":7942,"mtime":1662001546798,"results":"179","hashOfConfig":"98"},{"size":89,"mtime":1655467295873,"results":"180","hashOfConfig":"98"},{"size":8354,"mtime":1661509757395,"results":"181","hashOfConfig":"98"},{"size":611,"mtime":1661509757305,"results":"182","hashOfConfig":"98"},{"size":944,"mtime":1661509757290,"results":"183","hashOfConfig":"98"},{"size":15670,"mtime":1661509757409,"results":"184","hashOfConfig":"98"},{"size":465,"mtime":1657709941429,"results":"185","hashOfConfig":"98"},{"size":669,"mtime":1661509757302,"results":"186","hashOfConfig":"98"},{"size":2206,"mtime":1661509757278,"results":"187","hashOfConfig":"98"},{"size":16072,"mtime":1661509757405,"results":"188","hashOfConfig":"98"},{"size":2318,"mtime":1661509757413,"results":"189","hashOfConfig":"98"},{"size":2242,"mtime":1661509757279,"results":"190","hashOfConfig":"98"},{"size":10243,"mtime":1661509757448,"results":"191","hashOfConfig":"98"},{"size":4485,"mtime":1661509757441,"results":"192","hashOfConfig":"98"},{"size":267,"mtime":1661849271240,"results":"193","hashOfConfig":"98"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fb2hrx",{"filePath":"196","messages":"197","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"214"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"220"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"227"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"234"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"241","messages":"242","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"253"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"260"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"264"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"210"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"273"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"281"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"290"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"234"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"281"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"284"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"290"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"311","usedDeprecatedRules":"281"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"314","usedDeprecatedRules":"277"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"319","messages":"320","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"290"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"325"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"227"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"227"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"340","messages":"341","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"227"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"347","messages":"348","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"351","messages":"352","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"357","messages":"358","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"284"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"372"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"227"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"277"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"383","messages":"384","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"385","messages":"386","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"264"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"281"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"220"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"214"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"284"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"281"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"227"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"417","messages":"418","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"290"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signIn\\index.jsx",["439","440","441","442","443","444"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\admin_VetProfile\\index.jsx",["445","446","447","448","449","450","451","452"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Select,\r\n  message\r\n} from 'antd'\r\n\r\nimport parent from '../../assets/img/parent.png'\r\nimport selectphoto from '../../assets/images/sel.png'\r\nimport close from '../../assets/img/close.png'\r\nimport dui from '../../assets/images/dui.png'\r\n\r\nimport Heart from '../../utils/heard/Heard'\r\nimport { mTop, px } from '../../utils/px';\r\nimport MyModal from '../../utils/myModal/MyModal'\r\nimport Avatar from '../../components/avatar/Avatar'\r\nimport moment from 'moment'\r\nimport './index.less';\r\nimport { listDoctorsByAdmin } from '../../api/mellaserver/organization'\r\nimport { admin_users } from '../../api/mellaserver/new'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class Veterinarians extends Component {\r\n\r\n  state = {\r\n    parentList: [],\r\n    petList: [],\r\n    loading: false,\r\n    parentSearchArr: [],\r\n    petSearchArr: [],\r\n    searchText: '',\r\n    clickVet: false,\r\n    userList: [],\r\n    clickUserItem: {},\r\n    isAdmin: false,\r\n    imageId: null,\r\n    imgUrl: '',\r\n    doctorArr: [],\r\n    dockerSearchArr: []\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    this._getExam()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true,\r\n      spin: false\r\n    })\r\n    let params = {\r\n      doctorId: storage.userId,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n\r\n\r\n    listDoctorsByAdmin(storage.lastOrganization, params)\r\n      .then(res => {\r\n        console.log('人员列表', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true && res.code === 20000) {\r\n          let data = []\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            let { birthday, email, firstName, lastName, isLimit, isDeleted, phone, url, userId, createTime, roleId } = res.data[i]\r\n\r\n            let json = {\r\n              insertedAt: createTime,\r\n              name: `${lastName} ${firstName}`,\r\n              userId,\r\n              email,\r\n              birthday,\r\n              isLimit,\r\n              isDeleted,\r\n              phone,\r\n              url,\r\n              firstName, lastName, roleId\r\n            }\r\n            data.push(json)\r\n          }\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            doctorArr: data,\r\n            // parentList: data //这里只是测试，后期删除\r\n\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  list = () => {\r\n    let { doctorArr, dockerSearchArr, searchText } = this.state\r\n    let data = searchText.length > 0 ? dockerSearchArr : doctorArr\r\n\r\n\r\n\r\n\r\n    let options = data.map((item, index) => {\r\n      let { url, firstName, lastName } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n      if (!url) {\r\n        images = `url(${parent})`\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20), float: `${index % 2 === 0 ? 'left' : 'right'}` }}\r\n          onClick={() => {\r\n            console.log(item);\r\n            let { name, email, phone, roleId } = item\r\n            let isAdmin = roleId === '3' ? true : false\r\n\r\n            this.setState({\r\n              clickVet: true,\r\n              clickUserItem: item,\r\n              name,\r\n              email,\r\n              phone,\r\n              isAdmin,\r\n              imgUrl: ''\r\n            })\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div\r\n              className='img'\r\n              style={{\r\n                width: px(50),\r\n                height: px(50),\r\n                marginRight: px(20),\r\n                borderRadius: px(60),\r\n                backgroundImage: images,\r\n              }}>\r\n\r\n              <div\r\n                className=\"green\"\r\n                style={{\r\n                  width: px(8),\r\n                  height: px(8),\r\n                  borderRadius: px(8),\r\n                  backgroundColor: '#7ED266',\r\n                  right: px(-5),\r\n                  top: px(-3)\r\n\r\n                }}\r\n\r\n              />\r\n\r\n            </div>\r\n\r\n            <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    let liStyle = { backgroundColor: '#fff', }\r\n    if (this.state.petList.length > 16) {\r\n      liStyle = { height: px(750), overflowY: 'auto', }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='petList'>\r\n        <ul style={liStyle}>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  inputChange = (text) => {\r\n    let search = text.target.value\r\n    this.setState({\r\n      searchText: search\r\n    })\r\n\r\n    let { doctorArr } = this.state\r\n\r\n    let keyWord = search\r\n\r\n    let parentSearchData = []\r\n\r\n    for (let i = 0; i < doctorArr.length; i++) {\r\n      let { email, phone, name, } = doctorArr[i]\r\n      email = email ? email.toLowerCase() : ''\r\n      phone = phone ? phone.toLowerCase() : ''\r\n      name = name ? name.toLowerCase() : ''\r\n      let keyLower = keyWord.toLowerCase()\r\n      if (`${email}`.indexOf(keyLower) !== -1 || `${phone}`.indexOf(keyLower) !== -1 || `${name}`.indexOf(keyLower) !== -1) {\r\n        parentSearchData.push(doctorArr[i])\r\n      }\r\n    }\r\n\r\n\r\n    this.setState({\r\n\r\n      dockerSearchArr: parentSearchData\r\n    })\r\n\r\n\r\n  }\r\n  _petSpecies = () => {\r\n\r\n\r\n    let { clickUserItem, isAdmin } = this.state\r\n    let { url } = clickUserItem\r\n    this.avatar = url ? url : selectphoto\r\n    return (\r\n      <div className=\"petSpecies\">\r\n\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" style={{ height: px(100) }} />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n              getAllInfo={(val) => {\r\n                console.log('图片信息', val);\r\n                this.setState({\r\n                  imgUrl: val.url\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Set Role:</p>\r\n\r\n            <div className=\"ones\" style={{ marginTop: px(8) }}>\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>User</p>\r\n              </div> */}\r\n              <div className=\"one\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isAdmin: !this.state.isAdmin\r\n                  })\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"chect\"\r\n                  style={{ width: px(18), height: px(18), marginRight: px(15) }}\r\n\r\n                >\r\n                  {isAdmin && <img src={dui} alt=\"\" />}\r\n\r\n                </div>\r\n                <p>Admin</p>\r\n              </div>\r\n\r\n              {/* <div className=\"one\">\r\n                <div className=\"chect\" style={{ width: px(18), height: px(18), marginRight: px(15) }}>\r\n                  <img src={dui} alt=\"\" />\r\n                </div>\r\n                <p>Owner</p>\r\n              </div> */}\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  _petName = () => {\r\n    let { name, email } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\" style={{ marginTop: px(60) }}>\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50), }}>\r\n            <p>Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  name: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(50) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _phone = () => {\r\n    let { areas, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Areas of Expertise</p>\r\n            <input\r\n              type=\"text\"\r\n              value={areas}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  areas: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  changeUserInfo = () => {\r\n    let { name, email, phone, clickUserItem, imageId, isAdmin, petList, imgUrl } = this.state\r\n    let { userId } = clickUserItem\r\n    let roleId = isAdmin ? '3' : '2'\r\n    let params = {\r\n      firstName: '',\r\n      lastName: name,\r\n      email,\r\n      phone,\r\n\r\n      roleId\r\n    }\r\n    if (imageId) {\r\n      params.imageId = imageId\r\n    }\r\n    message.destroy()\r\n    this.setState({\r\n      clickVet: false,\r\n      loading: true\r\n    })\r\n    console.log('入参', params);\r\n    admin_users(userId, params)\r\n      .then(res => {\r\n        console.log(res);\r\n        if (res.flag && res.code === 20000) {\r\n          for (let i = 0; i < petList.length; i++) {\r\n            const element = petList[i];\r\n            if (clickUserItem.userId === element.userId) {\r\n              element.name = name\r\n              element.email = email\r\n              element.phone = phone\r\n              if (imageId) {\r\n                element.url = imgUrl\r\n              }\r\n\r\n              break\r\n            }\r\n\r\n          }\r\n          this.setState({\r\n            loading: false,\r\n            petList\r\n          })\r\n          message.success('User information changed successfully')\r\n        } else {\r\n          this.setState({\r\n            loading: false\r\n          })\r\n          message.error('User information change failed')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        message.error('User information change failed')\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    let bodyHeight = '92%'\r\n    try {\r\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\r\n    } catch (error) {\r\n\r\n    }\r\n    return (\r\n      <div id=\"veterinarians\">\r\n        <div className=\"heard\">\r\n          <Heart />\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\r\n          <div className=\"title\">\r\n            <h1 style={{ fontSize: px(38) }}>{`Veterinarians`}</h1>\r\n            <div className=\"btn\" style={{ fontSize: px(24), height: px(45) }}>+ New Vet</div>\r\n          </div>\r\n\r\n          <div className=\"search\">\r\n            <div className=\"searchL\">\r\n              <input\r\n                type=\"text\"\r\n                style={{ paddingLeft: px(25), height: px(34) }}\r\n                placeholder=\"&#xe62c; Search \"\r\n                value={this.state.searchText}\r\n                onChange={(text) => {\r\n                  this.inputChange(text)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\r\n              Search\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"lists\">\r\n            {/* <div className=\"listsL\"> */}\r\n            {this.list()}\r\n            {/* </div> */}\r\n\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <MyModal visible={this.state.loading} />\r\n\r\n        <MyModal\r\n          visible={this.state.clickVet}\r\n          element={\r\n            <div className='vetInfo'>\r\n\r\n              <div className=\"info\" >\r\n                <div className=\"close\" style={{ height: px(50) }}>\r\n                  <img\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    src={close} style={{ width: px(20) }} />\r\n                </div>\r\n                {this._petSpecies()}\r\n                {this._petName()}\r\n                {this._phone()}\r\n              </div>\r\n              <div className=\"fotBtn\">\r\n                <div className=\"text\">\r\n                  <a\r\n                    onClick={(e) => {\r\n                      e.preventDefault();\r\n                      this.setState({\r\n                        clickVet: false\r\n                      })\r\n                    }}\r\n\r\n                    href=\"#\">Delete </a>\r\n                  &nbsp;<p>{` ${this.state.name} from Workplace`}</p>\r\n                </div>\r\n                <div className=\"btn\"\r\n                  style={{ marginTop: px(10) }}\r\n                  onClick={this.changeUserInfo}\r\n\r\n                >Save </div>\r\n\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",["453","454"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\heard\\Heard.js",["455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Menu, Popover, Button, Modal } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SyncOutlined, createFromIconfontCN, LoadingOutlined } from '@ant-design/icons';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport moment from 'moment'\r\nimport MyModal from './../myModal/MyModal'\r\nimport { connect } from 'react-redux'\r\nimport { setMenuNum, setSelectHardwareType, petDetailInfoFun } from '../../store/actions';\r\n\r\n//import 'antd/dist/antd.css';\r\nimport \"./heard.less\";\r\nimport help from \"./../../assets/images/help.png\";\r\nimport message from \"./../../assets/images/message.png\";\r\nimport triangle from \"./../../assets/img/triangle.png\";\r\nimport { mTop, px, MTop } from \"../px\";\r\nimport electronStore from \"../electronStore\";\r\nimport dog from \"./../../assets/images/reddog.png\";\r\nimport cat from \"./../../assets/images/redcat.png\";\r\nimport other from \"./../../assets/images/redother.png\";\r\nimport menu from \"./../../assets/img/menu.png\";\r\nimport heardLeft from \"./../../assets/img/heardLeft.png\";\r\nimport blueSearchPng from \"./../../assets/img/blueSearch.png\";\r\nimport close from \"./../../assets/img/close.png\";\r\nimport MinClose from \"../../utils/minClose/MinClose\";\r\nimport jinggao from \"./../../assets/img/jinggao.png\";\r\nimport redclose from \"./../../assets/img/redclose.png\";\r\n\r\nimport rMin_red from \"./../../assets/img/min-red.png\";\r\nimport rClose_red from \"./../../assets/img/close-red.png\";\r\n\r\nimport rMin_white from \"./../../assets/img/min-white.png\";\r\nimport rClose_white from \"./../../assets/img/close-white.png\";\r\nimport mellaLogo from \"./../../assets/images/mellaLogo.png\";\r\nimport { version, updateTime } from \"./../appversion\";\r\nimport Button1 from \"../button/Button\";\r\nimport { getPetInfoByRFID } from \"../../api\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: \"//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js\",\r\n});\r\n\r\nconst allPetList = electronStore.get(\"doctorExam\");\r\nlet storage = window.localStorage;\r\nlet ipcRenderer = window.electron.ipcRenderer;\r\n\r\nlet mouseoutTimer = null;\r\nlet matchingTimer = null;\r\n\r\n/**\r\n *\r\n * @param {function} onReturn  点击返回按钮后调用的函数\r\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\r\n * @returns\r\n */\r\n\r\nconst Heard = ({\r\n  onReturn,\r\n  onSearch,\r\n\r\n  blueSearch,\r\n  setMenuNum,\r\n  menuNum,\r\n  setSelectHardwareType,\r\n  petListArr,\r\n  petDetailInfoFun\r\n}) => {\r\n  const [minbgc, setMinbgc] = useState('')        //最小化的背景颜色\r\n  const [closebgc, setClosebgc] = useState('')    //关闭按钮的背景色\r\n  const [rMin, setRMin] = useState(rMin_red)      //最小化的图标\r\n  const [rClose, setRClose] = useState(rClose_red) //关闭按钮图标\r\n  const [value, setValue] = useState('')          //搜索框输入的内容\r\n  const [visible, setVisible] = useState(false)   //搜索框下面的搜索model\r\n  const [loading, setLoading] = useState(false)     //搜索宠物过程中的加载图标\r\n  const [petList, setPetList] = useState([])        //搜索到的宠物列表\r\n  const [menuVisible, setMenuVisible] = useState(false)//菜单图标下面的菜单内容图标\r\n  const [menuMouseOverIndex, setMenuMouseOverIndex] = useState('')//用来定位鼠标滑到哪个菜单选项\r\n\r\n\r\n  const [modalvisible, setModalVisible] = useState(false)       //关于的弹窗\r\n  const [modalVis, setModalVis] = useState(false)               //RFID搜索是否有宠物的弹窗\r\n  const [isNotFound, setIsNotFound] = useState(false)           //是否找到RFID对应的图标\r\n  const [deviceModel, setDeviceModel] = useState(false)         //我的设备弹窗\r\n\r\n  const [noUSB, setNoUSB] = useState(false)                 //没有底座设备\r\n  const [searchMac, setSearchMac] = useState(false)         //是否展示狗牌mac搜索图标下面的Modal框\r\n  const [bluDevice, setBluDevice] = useState([])            //搜索到的狗牌设备mac地址\r\n\r\n  const [isShowBlePetList, setIsShowBlePetList] = useState(false)  //是否展示狗牌对应宠物\r\n  const [isMatchPet, setIsMatchPet] = useState(false)      //正在匹配狗牌对应的宠物\r\n  const [macMatchPetList, setMacMatchPetList] = useState([])\r\n  const [updateStatus, setUpdateStatus] = useState('init')\r\n  const [lastVersion, setLastVersion] = useState(version)\r\n  const [downLoadNum, setDownLoadingNum] = useState(0)\r\n  const [selectDeviceMac, setSelectDeviceMac] = useState('')\r\n  const [clickType, setClickType] = useState(false);\r\n\r\n  //这里是为了模拟数据所做出来的,后期要改成接口\r\n  const testPetList = [\r\n    {\r\n      macId: \"E0:7C:62:30:08:08\",\r\n      petName: \"Mella\",\r\n      petId: \"b9de0868-9202-4fc9-9f1b-325220ceeccf\",\r\n    },\r\n    {\r\n      macId: \"E0:7C:62:03:75:32\",\r\n      petName: \"Possum\",\r\n      petId: \"e4b11580-1277-4b10-bd64-46b097f6f882\",\r\n    },\r\n    {\r\n      macId: \"E0:7D:EA:A8:8D:7E\",\r\n      petName: \"Charlie\",\r\n      petId: \"b4e7a185-1c7e-4885-ab95-4a7d2d2ada83\",\r\n    },\r\n    {\r\n      macId: \"E0:7C:62:32:76:8C\",\r\n      petName: \"Noah\",\r\n      petId: \"01b34bf2-47e6-4036-884f-47299447cb6a\",\r\n    },\r\n\r\n    {\r\n      macId: \"84:C2:E4:03:C3:06\",\r\n      petName: \"Whitey\",\r\n      petId: \"f713a238-f5df-4c85-8c4f-5766b0770c07\",\r\n    },\r\n  ];\r\n  const [size, setSize] = useState({ height: px(47) });\r\n  const [headerRef, setHeaderRef] = useState();\r\n\r\n  const uploadMessage = (e, data) => {\r\n    switch (data.payload.status) {\r\n      case -1:\r\n        console.log('查询异常');\r\n        setUpdateStatus('error')\r\n        break;\r\n\r\n      case 0:\r\n        console.log(\"正在检查应用程序更新\");\r\n        setUpdateStatus(\"check\");\r\n        break;\r\n\r\n      case 2:\r\n        console.log(\"正在检查应用程序更新\");\r\n        setUpdateStatus(\"lastVersion\");\r\n        break;\r\n\r\n      case 1:\r\n        console.log(\"检测到新版本\");\r\n        let version = data.output.version;\r\n        setLastVersion(version);\r\n\r\n        setUpdateStatus(\"newVersion\");\r\n        break;\r\n\r\n      // case 3:\r\n      //   console.log(\"下载新版成功\");\r\n      // case 4:\r\n      //   console.log(\"取消背景下载\");\r\n      case 5:\r\n        console.log(\"取消安装\");\r\n        setUpdateStatus(\"init\");\r\n        break;\r\n      case 6:\r\n        console.log(\"正在下载\");\r\n        setUpdateStatus(\"downLoading\");\r\n        let loadNum = data.output.percent\r\n          ? (data.output.percent / 100).toFixed(1)\r\n          : 0;\r\n        setDownLoadingNum(loadNum);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const _noUSB = (e, data) => {\r\n    console.log(\"没有USB设备：\", data);\r\n    if (data === false) {\r\n      setNoUSB(false);\r\n    } else {\r\n      if (!noUSB) {\r\n        setNoUSB(true);\r\n      }\r\n    }\r\n  };\r\n  const _send = (event, data) => {\r\n    command(data)();\r\n  };\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  const command = (newArr) => {\r\n    let dataArr1 = newArr.map((item) => {\r\n      if (item.toString(16).length < 2) {\r\n        return \"0\" + item.toString(16);\r\n      } else {\r\n        return item.toString(16);\r\n      }\r\n    });\r\n    console.log(dataArr1);\r\n    const instruction = [255];\r\n    const commandArr = {\r\n      255: () => {\r\n        // console.log(dataArr1);\r\n        // console.log(bluDevice);\r\n        let length = newArr.length;\r\n        let frameLength = newArr[1]; //帧长\r\n        let itemLength = newArr[3] + 1; //数据位的长度   13\r\n        let dataIndex = 0;\r\n\r\n        let MAC = \"\";\r\n        let bluData = [];\r\n        let UUID = \"\";\r\n        while (itemLength < length && itemLength + 3 <= frameLength) {\r\n          let itemData = [];\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5]);\r\n          }\r\n          // console.log('循环得到的数据', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              break;\r\n            case 255:\r\n              break;\r\n            case 3:\r\n              break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              let str = itemData[0];\r\n              for (let i = 1; i < itemData.length; i++) {\r\n                str += `:${itemData[i]}`;\r\n              }\r\n              MAC = str.toUpperCase();\r\n\r\n              break;\r\n            case 7:\r\n              console.log(\"uuid\");\r\n              let uuid = \"\";\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                uuid += `${itemData[i]}`;\r\n              }\r\n              UUID = uuid;\r\n              break;\r\n            default:\r\n              return;\r\n          }\r\n          dataIndex = itemLength;\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\r\n\r\n          // console.log(itemLength, itemLength < length && (itemLength + 3 <= frameLength));\r\n        }\r\n        console.log(\"----mac\", MAC, \"-----uuid\", UUID);\r\n        if (UUID === \"d7895ab1acc74de3b9919e825c24c809\") {\r\n          // console.log('uuid相等', bluDevice, bluDevice.indexOf(MAC) === -1,);\r\n          if (bluDevice.indexOf(MAC) === -1) {\r\n            let dataArr = [].concat(bluDevice);\r\n            dataArr.push(MAC);\r\n            setBluDevice(dataArr);\r\n          }\r\n        }\r\n      },\r\n    };\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]];\r\n    } else {\r\n      return () => {\r\n        console.log(\"没有控制命令\", commandArr);\r\n      };\r\n    }\r\n  };\r\n\r\n  let history = useHistory();\r\n  //最小化，关闭的\r\n  const MINCOLOSE = {\r\n    minMouseEnter: () => {\r\n      setMinbgc(\"rgba(70, 70, 70, 0.5)\");\r\n      setRMin(rMin_white);\r\n    },\r\n    minMouseLeave: () => {\r\n      setMinbgc(\"\");\r\n      setRMin(rMin_red);\r\n    },\r\n    minClock: () => {\r\n      setMinbgc(\"\");\r\n      setRMin(rMin_red);\r\n      let ipcRenderer = window.electron.ipcRenderer;\r\n      ipcRenderer.send(\"window-min\");\r\n    },\r\n    closeMouseEnter: () => {\r\n      setClosebgc(\"rgba(232,17,35)\");\r\n      setRClose(rClose_white);\r\n    },\r\n    closeMouseLeave: () => {\r\n      setClosebgc(\"\");\r\n      setRClose(rClose_red);\r\n    },\r\n    closeClock: () => {\r\n      let ipcRenderer = window.electron.ipcRenderer;\r\n      ipcRenderer.send(\"window-close\");\r\n    },\r\n  };\r\n\r\n  //搜索框内容\r\n  const searchPetBody = () => {\r\n    if (loading) {\r\n      //加载中\r\n      return (\r\n        <div className=\"searchPetLoading\" style={{ padding: `${20}px 0` }}>\r\n          <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n            <LoadingOutlined\r\n              style={{ fontSize: 30, color: \"#e1206d\", marginTop: mTop(-30) }}\r\n            />\r\n          </div>\r\n          <p style={{ color: \"#e1206d\", marginTop: px(5) }}>loading...</p>\r\n        </div>\r\n      );\r\n    } else {\r\n      // console.log('-----展示', petList.length);\r\n      if (petList.length > 0) {\r\n        //找到了宠物，展示出来\r\n\r\n        // let petList = electronStore.get('doctorExam')\r\n        // console.log(petList);\r\n\r\n        let option = petList.map((item, index) => {\r\n          let { speciesId, url } = item;\r\n\r\n          let images = `url(${url}?download=0&width=150)`;\r\n          if (!url) {\r\n            switch (speciesId) {\r\n              case 1:\r\n                images = `url(${cat})`;\r\n\r\n                break;\r\n              case 2:\r\n                images = `url(${dog})`;\r\n                break;\r\n              default:\r\n                images = `url(${other})`;\r\n                break;\r\n            }\r\n          }\r\n          return (\r\n            <li\r\n              key={`${index}`}\r\n              style={{ margin: `${px(20)}px 0` }}\r\n              onClick={() => {\r\n                setValue('')\r\n                setVisible(false)\r\n                setPetList([])\r\n                petDetailInfoFun(item)\r\n                // onSearch(item)\r\n                history.push('/MainBody')\r\n              }}\r\n            >\r\n              <div className=\"item\" style={{ paddingLeft: px(40) }}>\r\n                <div\r\n                  className=\"img\"\r\n                  style={{\r\n                    width: px(50),\r\n                    height: px(50),\r\n                    marginRight: px(40),\r\n                    borderRadius: px(60),\r\n                    backgroundImage: images,\r\n                  }}\r\n                >\r\n\r\n                </div>\r\n\r\n                <div className=\"petInfo\">\r\n                  <p\r\n                    style={{\r\n                      color: \"#141414\",\r\n                      fontWeight: 600,\r\n                      fontSize: px(20),\r\n                    }}\r\n                  >\r\n                    {item.petName}\r\n                  </p>\r\n                  <p\r\n                    style={{ color: \"#797979\", fontSize: px(18) }}\r\n                  >{`Patient ID: ${item.patientId}`}</p>\r\n                  <p\r\n                    style={{ color: \"#797979\", fontSize: px(18) }}\r\n                  >{`Owner: ${item.owner}`}</p>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          );\r\n        });\r\n        let liStyle = { backgroundColor: \"#fff\" };\r\n        if (petList.length > 4) {\r\n          liStyle = { height: px(500), overflowY: \"auto\" };\r\n        }\r\n\r\n        return (\r\n          <div className=\"searchPetList\">\r\n            <ul style={liStyle}>{option}</ul>\r\n          </div>\r\n        );\r\n      } else {\r\n        //没有发现这个宠物\r\n        return (\r\n          <div className=\"searchPetLoading\" style={{ padding: `${10}px 0` }}>\r\n            <p style={{ width: \"80%\", fontSize: px(18) }}>\r\n              Pet not found. Would you like to add a new patient?\r\n            </p>\r\n\r\n            <div\r\n              className=\"searchPetBtn\"\r\n              style={{ fontSize: px(18) }}\r\n              onClick={() => {\r\n                history.push(\"/pet/doctorAddPet\");\r\n              }}\r\n            >\r\n              <p style={{ padding: `${px(8)}px 0` }}>+ New Patient</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const inputChange = (text) => {\r\n    function isNumber(val) {\r\n      var regPos = /^\\d+(\\.\\d+)?$/; //非负浮点数\r\n      var regNeg =\r\n        /^(-(([0-9]+\\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\\.[0-9]+)|([0-9]*[1-9][0-9]*)))$/; //负浮点数\r\n      if (regPos.test(val) || regNeg.test(val)) {\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n    //去除前后空格\r\n    let search = text.target.value.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n    setValue(search);\r\n    if (search.length > 0) {\r\n      setVisible(true);\r\n      setLoading(true);\r\n\r\n      //搜索分成两种，一种是通过手输入数据搜索，一种是通过RFID扫描过后搜索\r\n\r\n      if (search.length === 15 && isNumber(search)) {\r\n        //这是RFID扫描后的搜索\r\n\r\n        getPetInfoByRFID(search, storage.lastOrganization)\r\n          .then((res) => {\r\n            console.log(\"----RFID搜索结果\", res);\r\n\r\n            if (res.flag === true && res.data) {\r\n              let {\r\n                createTime,\r\n                patientId,\r\n                petName,\r\n                firstName,\r\n                lastName,\r\n                url,\r\n                speciesId,\r\n                breedName,\r\n                gender,\r\n                birthday,\r\n                petId,\r\n                rfid,\r\n                weight,\r\n              } = res.data;\r\n              patientId = patientId || \"unknown\";\r\n              petName = petName || \"unknown\";\r\n              breedName = breedName || \"unknown\";\r\n              weight = weight || \"unknown\";\r\n              let owner = \"\";\r\n              if (!firstName) {\r\n                firstName = \"\";\r\n              }\r\n              if (!lastName) {\r\n                lastName = \"\";\r\n              }\r\n              if (lastName === \"\" && firstName === \"\") {\r\n                owner = \"unknown\";\r\n              } else {\r\n                owner = `${lastName} ${firstName}`;\r\n              }\r\n              createTime = moment(createTime).format(\"X\");\r\n              let petGender = \"\";\r\n              switch (`${gender}`) {\r\n                case \"1\":\r\n                  petGender = \"F\";\r\n\r\n                  break;\r\n                case \"0\":\r\n                  petGender = \"M\";\r\n                  break;\r\n                default:\r\n                  petGender = \"unknown\";\r\n                  break;\r\n              }\r\n              let petAge = \"unknown\";\r\n              if (birthday) {\r\n                petAge = moment(new Date()).diff(moment(birthday), \"years\");\r\n                // console.log('petAge', petAge);\r\n              }\r\n              let json = {\r\n                insertedAt: createTime,\r\n                patientId,\r\n                petName,\r\n                owner,\r\n                breed: breedName,\r\n                gender: petGender,\r\n                age: petAge,\r\n                petId,\r\n                id: 0,\r\n                weight,\r\n                rfid,\r\n                url,\r\n                speciesId,\r\n              };\r\n              let searchData = [];\r\n              searchData.push(json);\r\n              setLoading(false);\r\n              setPetList(searchData);\r\n            } else if (\r\n              res.flag === true &&\r\n              res.msg === \"该组织下无此宠物信息\"\r\n            ) {\r\n              console.log(\"找到了但是不是在这个组织下\");\r\n              setLoading(false);\r\n              setModalVis(true);\r\n              setIsNotFound(false);\r\n              setValue(\"\");\r\n              setVisible(false);\r\n\r\n              // this.setState({\r\n              //   loading: false,\r\n              //   modalVis: true,\r\n              //   isNotFound: false,\r\n              //   heardSearchText: ''\r\n              // })\r\n            } else {\r\n              console.log(\"没有找到\");\r\n              setLoading(false);\r\n              setModalVis(true);\r\n              setIsNotFound(true);\r\n              setValue(\"\");\r\n              setVisible(false);\r\n\r\n              // this.setState({\r\n              //   loading: false,\r\n              //   modalVis: true,\r\n              //   isNotFound: true,\r\n              //   heardSearchText: ''\r\n              // })\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(\"抛出异常:\", err);\r\n            setLoading(false);\r\n          });\r\n        return;\r\n      }\r\n\r\n      /**\r\n       * 使用indexof方法实现模糊查询\r\n       *     语法：stringObject.indexOf(searchvalue, fromindex)\r\n       *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\r\n       *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\r\n       *\r\n       * list         原数组\r\n       * keyWord      查询关键词\r\n       * searchData   查询的结果\r\n       *\r\n       * toLowerCase（）方法：将字符串统一转成小写\r\n       * toUpperCase（）方法：将字符串统一转成大写\r\n       *\r\n       */\r\n      // let list = allPetList\r\n      let list = petListArr || []\r\n\r\n      let searchData = [];\r\n      let keyWord = search;\r\n      for (let i = 0; i < list.length; i++) {\r\n        let petName = list[i].petName ? list[i].petName.toLowerCase() : ''\r\n        let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : ''\r\n        let rfid = list[i].rfid || ''\r\n        if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n          || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n          || `${rfid}`.indexOf(keyWord) !== -1\r\n        ) {\r\n          searchData.push(list[i]);\r\n        }\r\n      }\r\n      // console.log('找到的宠物', searchData);\r\n      console.log(\r\n        \"---搜索词：\",\r\n        search,\r\n        \"---搜索数组：\",\r\n        list,\r\n        \"----搜索结果：\",\r\n        searchData\r\n      );\r\n      setLoading(false);\r\n      setPetList(searchData);\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  //左侧菜单栏\r\n  const menuList = () => {\r\n    let name = electronStore.get(`${storage.userId}-isClical`) ? 'Exit Clinical Study Mode' : 'Enter Clinical Study Mode'\r\n    let menulistArr = [\r\n      { name: \"Home\", index: \"1\" },\r\n      { name: \"All Patients\", index: \"2\" },\r\n      { name: \"Scheduled Patients\", index: \"3\" },\r\n      { name: \"My Account\", index: \"4\" },\r\n      { name: \"Org & Practice Profiles\", index: \"10\" },\r\n      { name: \"Settings\", index: \"5\" },\r\n      { name: name, index: \"6\" },\r\n      { name: `Billing & Subscriptions`, index: \"7\" },\r\n      { name: \"About Mella\", index: \"8\" },\r\n      { name: \"Log Out\", index: \"9\" },\r\n    ];\r\n    let menuOption = menulistArr.map((item, index) => {\r\n      let pColor = menuMouseOverIndex === item.index ? \"#e1206d\" : \"#1a1a1a\";\r\n      return (\r\n        <li\r\n          key={item.index}\r\n          style={{ padding: `${px(15)}px ${px(20)}px` }}\r\n          onClick={() => {\r\n            menulistClick(item);\r\n          }}\r\n          onMouseOver={(e) => {\r\n            setMenuMouseOverIndex(item.index);\r\n            e.stopPropagation();\r\n            e.nativeEvent.stopImmediatePropagation();\r\n            menuMouseOver();\r\n          }}\r\n          onMouseOut={(e) => {\r\n            setMenuMouseOverIndex(\"\");\r\n            e.stopPropagation();\r\n            e.nativeEvent.stopImmediatePropagation();\r\n            menuMouseOut();\r\n          }}\r\n        >\r\n          <div className=\"item\">\r\n            <p style={{ color: pColor }}>{item.name}</p>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return <ul>{menuOption}</ul>;\r\n  };\r\n  const menulistClick = (e) => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer);\r\n    setMenuVisible(false);\r\n    setMenuMouseOverIndex(\"\");\r\n    console.log(\"click \", e);\r\n\r\n    switch (e.index) {\r\n      case \"1\":\r\n        history.push(\"/MainBody\");\r\n        setMenuNum(e.index);\r\n        break;\r\n      case \"2\":\r\n        history.push(\"/MainBody\");\r\n        console.log(\"全部的宠物\");\r\n        setMenuNum(e.index);\r\n        break;\r\n      case \"3\":\r\n        history.push(\"/MainBody\");\r\n        console.log(\"预约宠物\");\r\n        setMenuNum(e.index);\r\n        break;\r\n      case \"4\":\r\n        history.push(\"/MainBody\");\r\n        setMenuNum(e.index);\r\n        break;\r\n      case \"5\":\r\n        //跳转到设置\r\n        // menu5Click()\r\n        history.push(\"/menuOptions/settings\");\r\n        // setMenuNum(e.index)\r\n        break;\r\n      case \"6\":\r\n        if (e.name === \"Exit Clinical Study Mode\") {\r\n          setMenuNum('1');\r\n          electronStore.set(`${storage.userId}-isClical`, false)\r\n        } else {\r\n          setMenuNum(e.index);\r\n          electronStore.set(`${storage.userId}-isClical`, true)\r\n          setSelectHardwareType(\"mellaPro\");\r\n        }\r\n        history.push(\"/MainBody\");\r\n        console.log(\"临床测试\");\r\n        break;\r\n      case \"7\":\r\n        console.log(\"billing\");\r\n        break;\r\n\r\n      case \"8\":\r\n        setModalVisible(true);\r\n        console.log(\"关于\");\r\n        break;\r\n      case \"9\":\r\n        console.log(\"退出登录\");\r\n        storage.userId = \"\";\r\n        storage.roleId = \"\";\r\n        storage.userWorkplace = \"\";\r\n        storage.lastOrganization = \"\";\r\n        storage.lastWorkplaceId = \"\";\r\n        storage.connectionKey = \"\";\r\n        storage.isClinical = \"false\";\r\n        setMenuNum(\"1\");\r\n        history.push(\"/\");\r\n        break;\r\n\r\n      case \"10\":\r\n        history.push('/menuOptions/ConnectWorkplace');\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  const menuMouseOut = () => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer);\r\n    mouseoutTimer = setTimeout(() => {\r\n      setMenuVisible(false);\r\n      mouseoutTimer && clearTimeout(mouseoutTimer);\r\n    }, 1000);\r\n  };\r\n  const menuMouseOver = () => {\r\n    mouseoutTimer && clearTimeout(mouseoutTimer);\r\n    setMenuVisible(true);\r\n  };\r\n  const updatePage = () => {\r\n    switch (updateStatus) {\r\n      case \"init\":\r\n        return (\r\n          <div\r\n            className=\"updateBtn\"\r\n            style={{ height: px(40) }}\r\n            onClick={() => {\r\n              setDownLoadingNum(0);\r\n              setUpdateStatus(\"check\");\r\n\r\n              ipcRenderer.send(\"clickUpdateBtn\");\r\n            }}\r\n          >\r\n            Check for Updates\r\n          </div>\r\n        );\r\n      case \"check\":\r\n        return (\r\n          <div className=\"updateLoading flex\">\r\n            <div className=\"loadIcon1\">\r\n              <LoadingOutlined\r\n                style={{ fontSize: 30, color: \"#e1206d\", marginRight: px(20) }}\r\n              />\r\n            </div>\r\n            <p style={{ color: \"#e1206d\" }}>Checking for updates</p>\r\n          </div>\r\n        );\r\n      case \"lastVersion\":\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            already the latest version\r\n          </div>\r\n        )\r\n      case 'error':\r\n        return (\r\n          <div style={{ fontSize: px(22), }}>\r\n            Failed to get the latest version, please try again later\r\n          </div>\r\n        )\r\n\r\n\r\n      case \"newVersion\":\r\n        return (\r\n          <div style={{ fontSize: px(22) }}>\r\n            {`Found new version V${lastVersion}`}\r\n          </div>\r\n        );\r\n      case \"downLoading\":\r\n        return (\r\n          <div style={{ fontSize: px(22) }}>\r\n            {`Download progress: ${downLoadNum}%`}\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  //关于界面\r\n  const modal = () => {\r\n    return (\r\n      <div\r\n        className=\"settingModal\"\r\n        style={{ height: `${document.documentElement.clientHeight}px` }}\r\n      >\r\n        <div className=\"writeBox\" style={{ borderRadius: px(25) }}>\r\n          <div className=\"modalHeadr\">\r\n            <div className=\"close\">\r\n              <div\r\n                className=\"imgBox\"\r\n                style={{ padding: `0 ${px(30)}px` }}\r\n                onClick={() => {\r\n                  setModalVisible(false);\r\n                  setUpdateStatus(\"init\");\r\n                }}\r\n              >\r\n                <img src={close} style={{ width: px(23) }} />\r\n              </div>\r\n            </div>\r\n            <div className=\"heaerCenter\">\r\n              <div className=\"heaerCenterL\">\r\n                <img src={mellaLogo} style={{ width: \"80%\" }} />\r\n              </div>\r\n              <div className=\"heaerCenterR\">\r\n                <h1 style={{ fontSize: px(45), marginBottom: px(10) }}>\r\n                  About the System\r\n                </h1>\r\n                <div className=\"version\">\r\n                  <div\r\n                    className=\"versionL\"\r\n                    style={{ fontSize: px(22), width: px(180) }}\r\n                  >\r\n                    Version\r\n                  </div>\r\n                  <div className=\"versionR\" style={{ fontSize: px(24) }}>\r\n                    {version}\r\n                  </div>\r\n                </div>\r\n                <div className=\"version\">\r\n                  <div\r\n                    className=\"versionL\"\r\n                    style={{ fontSize: px(22), width: px(180) }}\r\n                  >\r\n                    Last Checked\r\n                  </div>\r\n                  <div className=\"versionR\" style={{ fontSize: px(24) }}>\r\n                    {updateTime}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"check\" style={{ marginTop: px(20) }}>\r\n                  {updatePage()}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"modalfoot\">\r\n            <div\r\n              className=\"about\"\r\n              style={{ marginTop: px(40), fontSize: px(18) }}\r\n            >\r\n              Nanjing Jiubian Technology Co., Ltd. was founded in 2019, located\r\n              in Nanjing Yuhuatai Software Valley Branch City, the company\r\n              brings together medical sensors, mobile Internet and other\r\n              industry's top professionals, business areas covering artificial\r\n              intelligence, smart medical, pet health, sleep monitoring, etc.,\r\n              is a design, research and development, production, sales, service\r\n              in one of the high-tech companies. The nine-sided science and\r\n              technology to \"the number of heavens and earths, starting from\r\n              one, finally nine\" as the cultural concept, adhering to the\r\n              essence of Chinese artisans, with an international vision, always\r\n              standing in the forefront of bio-intelligent medical monitoring\r\n              technology.\r\n            </div>\r\n\r\n            <div className=\"aLable\">\r\n              <a\r\n                href=\"#\"\r\n                style={{ fontSize: px(18), marginRight: px(50) }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                Terms and Agreements\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                style={{ fontSize: px(18) }}\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                }}\r\n              >\r\n                Privacy Policy\r\n              </a>\r\n            </div>\r\n\r\n            <div className=\"foot\" style={{ marginBottom: px(40) }}>\r\n              © 2021 Mella Pet Care All RIghts Reserved\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //设备列表界面\r\n  const devices = () => {\r\n    let userId = storage.userId;\r\n    // electronStore.delete(`${userId}-deviceList`)\r\n    let deviceList = electronStore.get(`${userId}-deviceList`);\r\n    console.log(\"---\", deviceList);\r\n    if (!deviceList) {\r\n      let str = `${getRamNumber()}`;\r\n      for (let i = 0; i < 5; i++) {\r\n        str += `:${getRamNumber()}`;\r\n      }\r\n      console.log(\"随机生成的mac地址:\", str);\r\n      deviceList = [{ name: \"MellaPro\", deviceType: \"mellaPro\", macId: str }];\r\n      electronStore.set(`${userId}-deviceList`, deviceList);\r\n    }\r\n\r\n    function getRamNumber() {\r\n      var result = \"\";\r\n      for (var i = 0; i < 2; i++) {\r\n        result += Math.floor(Math.random() * 16).toString(16); //获取0-15并通过toString转16进制\r\n      }\r\n      //默认字母小写，手动转大写\r\n      return result.toLowerCase(); //另toLowerCase()转小写\r\n    }\r\n\r\n    // deviceList = [\r\n    //   // { name: 'Add Device', deviceType: 'add', macId: '0' },\r\n    //   { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //   { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:51:66' },\r\n    //   { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:35:66' },\r\n    //   { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:24:33:44:55:66' },\r\n    //   { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:25:66' },\r\n    //   { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:56:66' },\r\n    // ]\r\n\r\n    let options = deviceList.map((item, index) => {\r\n      return (\r\n        <li\r\n          className=\"flex\"\r\n          key={`${index}`}\r\n          style={{ marginBottom: px(15), marginTop: px(5) }}\r\n          onClick={() => {\r\n            console.log(item.macId);\r\n            setSelectDeviceMac(item.macId);\r\n          }}\r\n        >\r\n          <div className=\"liLeft\" style={{ fontSize: px(16) }}>\r\n            {item.name}\r\n          </div>\r\n          <div className=\"liCenter\" style={{ fontSize: px(16) }}>\r\n            {item.macId}\r\n          </div>\r\n          <div className=\"liRight\">\r\n            <div\r\n              className=\"circle flex\"\r\n              style={{ width: px(18), height: px(18) }}\r\n            >\r\n              {selectDeviceMac === item.macId && <div className=\"redCircle\" />}\r\n            </div>\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div\r\n        className=\"settingModal\"\r\n        style={{ height: `${document.documentElement.clientHeight}px` }}\r\n      >\r\n        <div\r\n          className=\"writeBox devices\"\r\n          style={{ borderRadius: px(25), width: px(400) }}\r\n        >\r\n          <div className=\"deviceHeadr\">\r\n            <div className=\"close\">\r\n              <div\r\n                className=\"imgBox\"\r\n                style={{ padding: `0 ${px(30)}px` }}\r\n                onClick={() => setDeviceModel(false)}\r\n              >\r\n                <img src={close} style={{ width: px(23) }} />\r\n              </div>\r\n            </div>\r\n            <div className=\"logo flex\">\r\n              <img src={mellaLogo} style={{ width: px(60) }} />\r\n              <div style={{ fontSize: px(22), marginTop: px(30) }}>Devices</div>\r\n              <div\r\n                className=\"bodyText\"\r\n                style={{ fontSize: px(18), marginTop: px(40) }}\r\n              >\r\n                Select the device you would\r\n                <br />\r\n                like to use or add a new device.\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"deviceCenter\">\r\n            <ul>{options}</ul>\r\n          </div>\r\n          <div\r\n            className=\"deviceFooter flex\"\r\n            style={{\r\n              borderBottomLeftRadius: px(25),\r\n              borderBottomRightRadius: px(25),\r\n            }}\r\n          >\r\n            <div\r\n              className=\"btn\"\r\n              style={{ height: px(40) }}\r\n              onMouseDown={() => {\r\n                let button = document.querySelectorAll(\r\n                  \"#heard .deviceFooter .btn\"\r\n                );\r\n                button[0].style.opacity = \"0.5\";\r\n              }}\r\n              onMouseUp={() => {\r\n                let button = document.querySelectorAll(\r\n                  \"#heard .deviceFooter .btn\"\r\n                );\r\n                button[0].style.opacity = \"1\";\r\n              }}\r\n              onClick={() => {\r\n                setDeviceModel(false);\r\n                history.push(\"/menuOptions/AddDevice\");\r\n              }}\r\n            >\r\n              <p className=\"btnText\" style={{ fontSize: px(18) }}>\r\n                New Device\r\n              </p>\r\n            </div>\r\n            <div\r\n              className=\"btn\"\r\n              style={{ height: px(40) }}\r\n              onMouseDown={() => {\r\n                let button = document.querySelectorAll(\r\n                  \"#heard .deviceFooter .btn\"\r\n                );\r\n                button[1].style.opacity = \"0.5\";\r\n              }}\r\n              onMouseUp={() => {\r\n                let button = document.querySelectorAll(\r\n                  \"#heard .deviceFooter .btn\"\r\n                );\r\n                button[1].style.opacity = \"1\";\r\n              }}\r\n              onClick={() => {\r\n                electronStore.set(\r\n                  `${storage.userId}-selectDevice`,\r\n                  selectDeviceMac\r\n                );\r\n                setDeviceModel(false);\r\n              }}\r\n            >\r\n              <p className=\"btnText\" style={{ fontSize: px(18) }}>\r\n                Connect\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //点击蓝牙搜索图标\r\n  const blueClick = () => {\r\n    console.log(\"点击了蓝牙图标\");\r\n    setIsShowBlePetList(false);\r\n    setSearchMac(true);\r\n  };\r\n  //点击取消链接\r\n  const cencleClick = (e) => {\r\n    console.log(\"mac列表为空,点击取消\");\r\n    setBluDevice([]);\r\n    setSearchMac(false);\r\n    setIsShowBlePetList(false);\r\n    setIsMatchPet(false);\r\n    setMacMatchPetList([]);\r\n    if (e) {\r\n      e.preventDefault();\r\n    }\r\n    matchingTimer && clearTimeout(matchingTimer);\r\n  };\r\n  //搜索狗牌的蓝牙\r\n  const blusearchBody = () => {\r\n    console.log(\"搜索狗牌的蓝牙\", searchMac, bluDevice);\r\n    if (isShowBlePetList) {\r\n      if (isMatchPet) {\r\n        return (\r\n          <div\r\n            className=\"searchPetLoading\"\r\n            style={{ padding: `${20}px 0`, width: \"100%\" }}\r\n          >\r\n            <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n              <LoadingOutlined\r\n                style={{ fontSize: 30, color: \"#e1206d\", marginTop: mTop(-30) }}\r\n              />\r\n            </div>\r\n            <p style={{ color: \"#e1206d\", marginTop: px(5), width: \"80%\" }}>\r\n              matching...\r\n            </p>\r\n\r\n            <a\r\n              href=\"#\"\r\n              style={{ color: \"#e1206d\", marginTop: px(30) }}\r\n              onClick={cencleClick}\r\n            >\r\n              Cencle\r\n            </a>\r\n          </div>\r\n        );\r\n      } else {\r\n        if (macMatchPetList.length > 0) {\r\n          let option = macMatchPetList.map((item, index) => {\r\n            let { speciesId, url } = item;\r\n\r\n            let images = `url(${url}?download=0&width=150)`;\r\n            if (!url) {\r\n              switch (speciesId) {\r\n                case 1:\r\n                  images = `url(${cat})`;\r\n                  break;\r\n                case 2:\r\n                  images = `url(${dog})`;\r\n                  break;\r\n                default:\r\n                  images = `url(${other})`;\r\n                  break;\r\n              }\r\n            }\r\n            return (\r\n              <li\r\n                key={`${index}`}\r\n                style={{ margin: `${px(20)}px 0` }}\r\n                onClick={() => {\r\n                  cencleClick();\r\n                  onSearch(item);\r\n                }}\r\n              >\r\n                <div className=\"item\" style={{ paddingLeft: px(40) }}>\r\n                  <div\r\n                    className=\"img\"\r\n                    style={{\r\n                      width: px(50),\r\n                      height: px(50),\r\n                      marginRight: px(40),\r\n                      borderRadius: px(60),\r\n                      backgroundImage: images,\r\n                    }}\r\n                  >\r\n                    {/* <img src={images} style={{ width: px(40) }} /> */}\r\n                  </div>\r\n\r\n                  <div className=\"petInfo\">\r\n                    <p\r\n                      style={{\r\n                        color: \"#141414\",\r\n                        fontWeight: 600,\r\n                        fontSize: px(20),\r\n                        textAlign: \"start\",\r\n                      }}\r\n                    >\r\n                      {item.petName}\r\n                    </p>\r\n                    <p\r\n                      style={{ color: \"#797979\", fontSize: px(18) }}\r\n                    >{`Patient ID: ${item.patientId}`}</p>\r\n                    <p\r\n                      style={{ color: \"#797979\", fontSize: px(18) }}\r\n                    >{`Owner: ${item.owner}`}</p>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            );\r\n          });\r\n          let liStyle = { backgroundColor: \"#fff\" };\r\n          if (petList.length > 4) {\r\n            liStyle = { height: px(500), overflowY: \"auto\" };\r\n          }\r\n\r\n          return (\r\n            <div className=\"searchPetList flex\">\r\n              <ul style={liStyle}>{option}</ul>\r\n              <a\r\n                href=\"#\"\r\n                style={{\r\n                  color: \"#e1206d\",\r\n                  marginTop: px(10),\r\n                  marginBottom: px(21),\r\n                }}\r\n                onClick={cencleClick}\r\n              >\r\n                Cencle\r\n              </a>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      if (noUSB) {\r\n        return (\r\n          <div className=\"searchPetLoading\" style={{ padding: `${10}px 0` }}>\r\n            <p style={{ width: \"80%\", fontSize: px(18) }}>\r\n              Please insert address and scan\r\n            </p>\r\n\r\n            <a href=\"#\" style={{ color: \"#e1206d\" }} onClick={cencleClick}>\r\n              Cencle\r\n            </a>\r\n          </div>\r\n        );\r\n      } else {\r\n        if (bluDevice.length > 0) {\r\n          let option = bluDevice.map((item, index) => {\r\n            return (\r\n              <li\r\n                key={`${index}`}\r\n                style={{ margin: `${px(20)}px 0` }}\r\n                onClick={() => {\r\n                  console.log(\"mac列表为空,点击列表内容\");\r\n                  setBluDevice([]);\r\n                  // setSearchMac(false)\r\n                  setIsShowBlePetList(true);\r\n                  setIsMatchPet(true);\r\n                  matchingTimer && clearTimeout(matchingTimer);\r\n                  matchingTimer = setTimeout(() => {\r\n                    let haveFlog = false,\r\n                      index = -1;\r\n                    for (let i = 0; i < testPetList.length; i++) {\r\n                      if (testPetList[i].macId === item) {\r\n                        haveFlog = true;\r\n                        index = i;\r\n                        break;\r\n                      }\r\n                    }\r\n                    if (haveFlog) {\r\n                      if (storage.lastOrganization === \"1\") {\r\n                        matchPet(testPetList[index].petId);\r\n                      } else {\r\n                        setModalVis(true);\r\n                        setIsNotFound(false);\r\n                        cencleClick();\r\n                      }\r\n                    } else {\r\n                      setModalVis(true);\r\n                      setIsNotFound(true);\r\n                      cencleClick();\r\n                    }\r\n\r\n                    setIsMatchPet(false);\r\n                    matchingTimer && clearTimeout(matchingTimer);\r\n                  }, 2000);\r\n                }}\r\n              >\r\n                <div className=\"item\" style={{ paddingLeft: px(40) }}>\r\n                  <div className=\"petInfo\">\r\n                    <p\r\n                      style={{\r\n                        color: \"#141414\",\r\n                        fontWeight: 600,\r\n                        fontSize: px(20),\r\n                      }}\r\n                    >\r\n                      mac:{item}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            );\r\n          });\r\n          let liStyle = { backgroundColor: \"#fff\" };\r\n          if (bluDevice.length > 4) {\r\n            liStyle = { height: px(500), overflowY: \"auto\" };\r\n          }\r\n          return (\r\n            <div className=\"searchPetList\" style={{ flexDirection: \"column\" }}>\r\n              <ul style={liStyle}>{option}</ul>\r\n              <a\r\n                href=\"#\"\r\n                style={{\r\n                  color: \"#e1206d\",\r\n                  marginTop: px(10),\r\n                  marginBottom: px(21),\r\n                }}\r\n                onClick={cencleClick}\r\n              >\r\n                Cencle\r\n              </a>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div\r\n              className=\"searchPetLoading\"\r\n              style={{ padding: `${20}px 0`, width: \"100%\" }}\r\n            >\r\n              <div className=\"loadIcon\" style={{ paddingTop: MTop(15) }}>\r\n                <LoadingOutlined\r\n                  style={{\r\n                    fontSize: 30,\r\n                    color: \"#e1206d\",\r\n                    marginTop: mTop(-30),\r\n                  }}\r\n                />\r\n              </div>\r\n              <p style={{ color: \"#e1206d\", marginTop: px(5), width: \"80%\" }}>\r\n                scanning...\r\n              </p>\r\n\r\n              <a\r\n                href=\"#\"\r\n                style={{ color: \"#e1206d\", marginTop: px(30) }}\r\n                onClick={cencleClick}\r\n              >\r\n                Cencle\r\n              </a>\r\n            </div>\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const matchPet = (searchValue) => {\r\n    console.log(\"搜索词:\", searchValue);\r\n    let list = electronStore.get(\"doctorExam\");\r\n\r\n    let searchData = [];\r\n    let keyWord = searchValue;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let petName = `${list[i].petId}`;\r\n      if (keyWord === petName) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    setIsMatchPet(false);\r\n\r\n    setMacMatchPetList(searchData);\r\n  };\r\n  const resize = () => {\r\n    setSize()\r\n    // let { offsetWidth, offsetHeight } = heardRef;\r\n    // console.log(\"resize\", heardRef);\r\n    // if (offsetHeight !== this.state.bodyHeight) {\r\n    //   this.setState({\r\n    //     bodyHeight: offsetHeight - px(50),\r\n    //   });\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"mac列表为空,初始化\");\r\n    mouseoutTimer && clearTimeout(mouseoutTimer);\r\n    setBluDevice([]);\r\n    return () => {\r\n      matchingTimer && clearTimeout(matchingTimer);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    ipcRenderer.on(\"uploadMessage\", uploadMessage);\r\n    return () => {\r\n      ipcRenderer.removeListener(\"uploadMessage\", uploadMessage);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    if (blueSearch) {\r\n      console.log(\"---渲染时执行----??????\");\r\n      ipcRenderer.on(\"sned\", _send);\r\n      ipcRenderer.on(\"noUSB\", _noUSB);\r\n      return () => {\r\n        console.log(\"----卸载----?????????/\");\r\n        ipcRenderer.removeListener(\"sned\", _send);\r\n        ipcRenderer.removeListener(\"noUSB\", _noUSB);\r\n      };\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    //监听屏幕窗口改变\r\n    setSize({ height: 47 });\r\n  }, [window.screen.availWidth])\r\n\r\n  return (\r\n    <div id=\"heardUI\">\r\n      <div id=\"heardUITop\" />\r\n      <div\r\n        id=\"heard\"\r\n        style={size}\r\n        ref={(val) => {\r\n          setHeaderRef(val);\r\n        }}\r\n      >\r\n        <div className=\"l\">\r\n          <div\r\n            className=\"menuF\"\r\n            style={{ marginLeft: px(40), marginRight: px(40) }}\r\n          >\r\n            <div\r\n              className=\"menu\"\r\n              onMouseOver={menuMouseOver}\r\n              onMouseOut={menuMouseOut}\r\n            >\r\n              <img src={menu} style={{ width: px(20) }} />\r\n              {menuVisible ? (\r\n                // true\r\n                <div className=\"manuBody\" style={{ top: px(20), left: px(-40) }}>\r\n                  <div\r\n                    className=\"triangle\"\r\n                    style={{\r\n                      borderLeft: `${px(10)}px solid transparent`,\r\n                      borderRight: `${px(10)}px solid transparent`,\r\n                      borderBottom: `${px(13)}px solid #fff`,\r\n                      left: px(40),\r\n                    }}\r\n                  />\r\n\r\n                  <div className=\"manuBodyList\" style={{ marginTop: px(13) }}>\r\n                    {menuList()}\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"search\" style={{ width: px(300) }}>\r\n            <input\r\n              placeholder=\"Search Pet    &#xe63f;\"\r\n              style={{ fontSize: px(16), paddingLeft: px(20) }}\r\n              value={value}\r\n              onChange={(text) => {\r\n                inputChange(text);\r\n              }}\r\n              onKeyUp={(e) => {\r\n                // console.log(e);\r\n                if (e.keyCode === 13) {\r\n                  console.log(\"回车,去搜索\");\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  console.log(\"清空\");\r\n                  setValue(\"\");\r\n                  setVisible(false);\r\n                }\r\n              }}\r\n            />\r\n            {blueSearch ? (\r\n              <div\r\n                className=\"searchIconFa bluSearch\"\r\n              // style={{ cursor: 'pointer', backgroundColor: 'pink' }}\r\n              // onClick={blueClick}\r\n              >\r\n                <div onClick={blueClick}>\r\n                  {/* <img src={blueSearchPng} style={{ width: '50%' }} /> */}\r\n                  <span\r\n                    className=\" iconfont icon-sousuo searchIcon\"\r\n                    style={{ fontSize: px(25) }}\r\n                  />\r\n                </div>\r\n\r\n                {searchMac ? (\r\n                  // true ?\r\n                  <div className=\"searchPet flex\" style={{ width: px(400) }}>\r\n                    <div\r\n                      className=\"triangle\"\r\n                      style={{\r\n                        borderLeft: `${px(20)}px solid transparent`,\r\n                        borderRight: `${px(20)}px solid transparent`,\r\n                        borderBottom: `${px(25)}px solid #fff`,\r\n                        // marginLeft: px(30),\r\n                        zIndex: 999,\r\n                      }}\r\n                    />\r\n\r\n                    <div className=\"searchPetBody\" style={{ width: \"100%\" }}>\r\n                      {blusearchBody()}\r\n                    </div>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            ) : (\r\n              <div className=\"searchIconFa\">\r\n                <span\r\n                  className=\" iconfont icon-sousuo searchIcon\"\r\n                  style={{ fontSize: px(25) }}\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {visible ? (\r\n              // true ?\r\n              <div className=\"searchPet\" style={{ top: px(35), width: px(400) }}>\r\n                <div\r\n                  className=\"triangle\"\r\n                  style={{\r\n                    borderLeft: `${px(20)}px solid transparent`,\r\n                    borderRight: `${px(20)}px solid transparent`,\r\n                    borderBottom: `${px(25)}px solid #fff`,\r\n                    marginLeft: px(30),\r\n                    zIndex: 999,\r\n                  }}\r\n                />\r\n\r\n                <div className=\"searchPetBody\">{searchPetBody()}</div>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"r\">\r\n          <div className=\"heardCenter\">\r\n            <div\r\n              className=\"message\"\r\n              onClick={() => history.push(\"/menuOptions/unassigned\")}\r\n            >\r\n              <img\r\n                src={message}\r\n                alt=\"\"\r\n                style={{ height: px(25), width: px(25) }}\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"help\"\r\n              style={{ margin: `0 ${px(25)}px` }}\r\n              onClick={() => history.push(\"/menuOptions/help\")}\r\n            >\r\n              <img src={help} alt=\"\" style={{ height: px(25) }} />\r\n            </div>\r\n          </div>\r\n          <div className=\"min_close\" style={{ paddingRight: px(15) }}>\r\n            <div\r\n              className=\"min_icon\"\r\n              onClick={MINCOLOSE.minClock}\r\n              style={{ backgroundColor: minbgc, height: px(50), width: px(50) }}\r\n              onMouseEnter={MINCOLOSE.minMouseEnter}\r\n              onMouseLeave={MINCOLOSE.minMouseLeave}\r\n            >\r\n              <img src={rMin} alt=\"\" style={{ width: px(20) }} />\r\n            </div>\r\n            <div\r\n              className=\"min_icon\"\r\n              onClick={MINCOLOSE.closeClock}\r\n              style={{ backgroundColor: closebgc, height: px(50), width: px(50) }}\r\n              onMouseEnter={MINCOLOSE.closeMouseEnter}\r\n              onMouseLeave={MINCOLOSE.closeMouseLeave}\r\n            >\r\n              <img src={rClose} alt=\"\" style={{ width: px(20) }} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {modalvisible && modal()}\r\n        {deviceModel && devices()}\r\n\r\n        <MyModal\r\n          // visible={true}\r\n          visible={modalVis}\r\n          element={\r\n            <div\r\n              className=\"tip\"\r\n              style={{ width: px(420), height: px(480), borderRadius: px(20) }}\r\n            >\r\n              <div\r\n                className=\"close\"\r\n                style={{ height: px(60) }}\r\n                onClick={() => setModalVis(false)}\r\n              >\r\n                <div className=\"flex\" style={{ height: px(60), width: px(60) }}>\r\n                  <img src={close} alt=\"\" style={{ width: px(20) }} />\r\n                </div>\r\n              </div>\r\n              <div className=\"text\">\r\n                <h1 style={{ fontSize: px(36), marginTop: px(30) }}>\r\n                  {\" \"}\r\n                  {isNotFound ? \"Pet not found!\" : \"Pet found!\"}\r\n                </h1>\r\n              </div>\r\n              <div className=\"flex\" style={{ margin: `${px(20)}px 0` }}>\r\n                {isNotFound ? (\r\n                  <img src={redclose} width=\"50px\" />\r\n                ) : (\r\n                  <img src={jinggao} width=\"50px\" />\r\n                )}\r\n              </div>\r\n              <div\r\n                className=\"textbody\"\r\n                style={{ marginTop: px(30), color: \"#000\" }}\r\n              >\r\n                {isNotFound ? (\r\n                  <p style={{ fontSize: px(22) }}>\r\n                    {\" \"}\r\n                    This pet is not on your database\r\n                  </p>\r\n                ) : (\r\n                  <p style={{ fontSize: px(22) }}>\r\n                    Pet Identified but does not <br /> belong to your\r\n                    organization.\r\n                  </p>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"flex\" style={{ marginTop: px(30), width: \"100%\" }}>\r\n                <div\r\n                  className=\"btn flex\"\r\n                  style={{ height: px(40) }}\r\n                  onClick={() => {\r\n                    setModalVis(false);\r\n                    cencleClick();\r\n                  }}\r\n                >\r\n                  <p>OK</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nHeard.propTypes = {\r\n  onReturn: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n\r\n  blueSearch: PropTypes.bool,\r\n};\r\n// let userHistory = useHistory()\r\nHeard.defaultProps = {\r\n  onSearch: () => { },\r\n  onReturn: () => { },\r\n\r\n  blueSearch: false,\r\n};\r\n\r\nexport default connect(\r\n  state => ({\r\n    menuNum: state.userReduce.menuNum,\r\n    petListArr: state.petReduce.petListArr,\r\n  }),\r\n  { setMenuNum, setSelectHardwareType, petDetailInfoFun }\r\n)(Heard)\r\n",["489","490"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\AddDevice.jsx",["491","492"],"import React, { useState, useEffect } from 'react'\nimport { message } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nimport biggieHome from './../../assets/img/searchType-biggieHome.png'\nimport biggiePro from './../../assets/img/searchType-biggiePro.png'\nimport mellaHome from './../../assets/img/searchType-home.png'\nimport mellaPro from './../../assets/img/searchType-mellaPro.png'\nimport maeBowl from './../../assets/img/searchType-maeBowl.png'\nimport other from './../../assets/img/searchType-other.png'\nimport possum from './../../assets/img/searchType-possum.png'\nimport rfid from './../../assets/img/searchType-rfid.png'\nimport redclose from '../../assets/img/redclose.png'\n\nimport electronStore from '../../utils/electronStore';\nimport { mTop, px, MTop } from '../../utils/px';\n\nimport { connect } from 'react-redux'\nimport { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList } from '../../store/actions';\nimport PropTypes from 'prop-types';\n\nimport './mainbody.less';\n\nlet storage = window.localStorage;\nconst AddDevice = ({ bodyHeight, hardwareReducer, isHaveUsbDevice, receiveBroadcastHardwareInfo, hardwareList, setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }) => {\n  //是否有底座设备\n  const [noUSB, setNoUSB] = useState(false)\n  //设备列表\n  const [devicesList, setDevicesList] = useState([])\n  //选择的设备\n  const [selectDevice, setSelectDevice] = useState(null)\n  //重命名\n  const [reName, setReName] = useState('')\n  //房间号\n  const [examRoom, setExamRoom] = useState('')\n  //已经保存过的设备的macid\n  const [saveDeviceMac, setSaveDeviceMac] = useState([])\n  //顶部文本\n  const [topText, setTopText] = useState(' Pair Device')\n\n\n\n  const addDevice = () => {\n    //从redux拿到列表中的所有硬件设备 hardwareList\n    console.log('hardwareList', hardwareList);\n    //拿到硬件的macid 类型 名称 房间号\n    console.log('selectDevice', selectDevice);\n    let sameFlog = hardwareList.some((item, index) => {\n      return item.type === selectDevice.deviceType\n    })\n    let hardwareArr = [].concat(hardwareList)\n    let { deviceType, macId, name } = selectDevice\n    let newDevice = {\n      name: reName || name,\n      mac: macId,\n      deviceType,\n      examRoom: examRoom || '',\n    }\n    console.log('newDevice', newDevice);\n    if (sameFlog) {\n      //相同就代表有这个硬件类型,可以直接去push\n\n      for (let i = 0; i < hardwareArr.length; i++) {\n        if (hardwareArr[i].type === selectDevice.deviceType) {\n          hardwareArr[i].devices.push(newDevice)\n          break\n        }\n      }\n\n    } else {\n      //没有就要新建一个硬件类型\n      let json = {\n        type: selectDevice.deviceType,\n        devices: [newDevice]\n      }\n      hardwareArr.push(json)\n    }\n    setReName('')\n    setExamRoom('')\n    setHardwareList(hardwareArr)\n\n    return newDevice\n\n\n  }\n\n  const body = () => {\n\n    if (selectDevice) {\n      return <div className=\"addDevice1 flex\">\n        <div className=\"addDeviceTop flex\">\n          <div className=\"title\" style={{ fontSize: px(28), marginBottom: px(20), marginTop: px(20) }}>Would you like to name<br />\n            {`this ${selectDevice.name} device?`}</div>\n\n          <div className=\"title\" style={{ fontSize: px(24), marginBottom: px(40), }}>\n            {`SN: ${selectDevice.macId}`}</div>\n\n\n          <div className=\"input flex\" style={{ marginBottom: px(20), width: px(400) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={reName}\n              onChange={(value) => {\n                setReName(value.target.value)\n\n              }}\n              placeholder={`${selectDevice.name} Device Name`}\n            />\n          </div>\n          <div className=\"input flex\" style={{ marginBottom: px(60), width: px(400) }}>\n            <input type=\"text\" style={{ height: px(45) }}\n              value={examRoom}\n              onChange={(value) => {\n                setExamRoom(value.target.value)\n\n              }}\n              placeholder={`Exam Room Name`}\n            />\n          </div>\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\n            on the Exam Room. Write<br /> the name\n            on the sticker provided so it is easy\n            to select<br /> your device in the future.</div>\n        </div>\n        <div className=\"addDeviceFoot flex\">\n          <div className=\"btn\"\n            onClick={() => {\n              addDevice()\n              setSelectDevice(null)\n              setSelectHardwareType('add')\n\n            }}\n          >\n            <p className='btnText'>Add Another Device</p>\n          </div>\n          <div className=\"btn\"\n            onClick={() => {\n              let newDevice = addDevice()\n              setSelectHardwareType(selectDevice.deviceType)\n\n\n              electronStore.set(`${storage.lastOrganization}-${storage.userId}-${selectDevice.deviceType}-selectDeviceInfo`, newDevice)\n              setSelectDevice(null)\n            }}\n          >\n            <p className='btnText'>Finish</p>\n          </div>\n        </div>\n\n\n      </div>\n    } else {\n      if (noUSB) {\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\n\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\n        </div>\n      } else {\n        if (devicesList.length === 0) {\n          let options = (val) => {\n            let arr = []\n            if (val === 1) {\n              arr = [mellaPro, mellaHome, biggiePro, biggieHome, rfid]\n            } else {\n              arr = [possum, maeBowl, other]\n            }\n            let option = arr.map((item, index) => {\n              let imgWidth = px(80)\n              imgWidth = index === 2 ? px(65) : imgWidth\n              return (<li key={index.toString()} style={{ margin: `${px(20)}px` }}>\n                <div className=\"searchType-item\" key={index} >\n                  <img src={item} alt=\"\" width={imgWidth} />\n                </div>\n              </li>)\n            })\n            return (\n              <ul>\n                {option}\n              </ul>\n            )\n          }\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\n\n\n            <div className=\"addDeviceContent\">\n              <div className=\"blueAnimal\" style={{ marginTop: px(50) }}>\n                {/* <img src={blueSearch} alt=\"\" width={px(150)} /> */}\n                <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n                  <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\n                </div>\n              </div>\n              <div className=\"openText\" style={{ margin: `${px(15)}px 0` }}>\n                Make sure your bluetooth and wifi is<br /> activated and turn on your device.\n              </div>\n              <div className=\"btn\" style={{ width: px(350), height: px(40) }}>\n                <div className=\"btnText\">\n                  Scan For Devices\n                </div>\n              </div>\n              <div className=\"or\" style={{ marginTop: px(10), marginBottom: px(15) }}>\n                Or\n              </div>\n              <div className=\"select\">\n                Select device type to\n              </div>\n              <div className=\"add\">\n                add manually\n              </div>\n\n              <div className=\"item\">\n                {options(1)}\n                {options(2)}\n              </div>\n            </div>\n\n            {/* <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\n\n                            <p>\n                                {'searching...'}\n                            </p>\n                        </div> */}\n          </div>\n        } else {\n          let options = devicesList.map((item, index) => {\n\n            let flog = saveDeviceMac.some((device, index) => {\n              return device === item.macId\n            })\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\n            return <li\n              className='flex'\n              style={{ marginBottom: px(20) }}\n              key={`${index}`}\n              onClick={() => {\n                if (!flog) {\n                  setSelectDevice(item)\n\n                } else {\n                  message.destroy();\n                  message.error('This device has already been added')\n                }\n\n              }}\n            >\n\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\n\n            </li>\n          })\n          return <div className='deviceList ' >\n            <ul>\n              {options}\n            </ul>\n          </div>\n        }\n      }\n    }\n\n  }\n\n  //初始化\n  useEffect(() => {\n    setNoUSB(false)\n    setDevicesList([])\n    setSelectDevice(null)\n    setReName('')\n    setSaveDeviceMac([])\n    setTopText(' Pair Device')\n    //组件渲染完毕后要先清空广播的硬件信息\n    setReceiveBroadcastHardwareInfoFun({\n      deviceType: '',\n      macId: '',\n      name: ''\n    })\n  }, [])\n  useEffect(() => {\n\n    if (hardwareList.length > 0) {\n      let saveDeviceMac = []\n      for (let i = 0; i < hardwareList.length; i++) {\n        const element = hardwareList[i];\n        for (let j = 0; j < element.devices.length; j++) {\n          const device = element.devices[j];\n          saveDeviceMac.push(device.mac)\n        }\n      }\n      setSaveDeviceMac(saveDeviceMac)\n\n    }\n  }, [hardwareList])\n  useEffect(() => {\n    if (!selectDevice) {\n      setTopText(' Pair Device')\n    } else {\n      setTopText('Device Connected')\n    }\n\n  }, [selectDevice])\n  useEffect(() => {\n    setNoUSB(!isHaveUsbDevice)\n  }, [isHaveUsbDevice])\n  useEffect(() => {\n    let sameFlog = devicesList.some((device, index) => {\n      return device.macId === receiveBroadcastHardwareInfo.macId\n    })\n    if (sameFlog || !receiveBroadcastHardwareInfo.macId) {   //重复直接退出\n      return\n    }\n    console.log('receiveBroadcastHardwareInfo', devicesList, receiveBroadcastHardwareInfo);\n    let deviceArr = [].concat(devicesList)\n    deviceArr.push(receiveBroadcastHardwareInfo)\n    setDevicesList(deviceArr)\n\n\n\n  }, [receiveBroadcastHardwareInfo])\n\n  return (\n    <div className='addDevice' style={{ height: bodyHeight }}>\n      <div className=\"addDeviceTitle\" style={{ height: px(100), fontSize: 26, paddingLeft: px(20) }}>\n        {topText}\n      </div>\n\n      {body()}\n    </div >\n  )\n}\n\n\nAddDevice.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n//默认值\nAddDevice.defaultProps = {\n  bodyHeight: 0,\n  devicesTypeList: []\n}\nexport default connect(\n  state => ({\n    hardwareReducer: state.hardwareReduce,\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n    receiveBroadcastHardwareInfo: state.hardwareReduce.receiveBroadcastHardwareInfo,\n    hardwareList: state.hardwareReduce.hardwareList,\n  }),\n  { setReceiveBroadcastHardwareInfoFun, setHardwareList, changeselectHardwareIndex, setSelectHardwareType, selectHardwareList }\n)(AddDevice)\n",["493","494"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scheduledPetsPage\\index.jsx",[],["495","496"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\headerItem.jsx",["497","498","499","500","501","502","503","504","505","506"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Image,\r\n  Layout,\r\n  Dropdown,\r\n  Col,\r\n  Row,\r\n  Avatar,\r\n  Space,\r\n  Card,\r\n  Menu,\r\n  Progress,\r\n} from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nimport BluetoothNotConnected from \"./../../../assets/img/BluetoothNotConnected.png\";\r\nimport AxillaryBluetooth from \"./../../../assets/img/AxillaryBluetooth.png\"; //腋温图片\r\nimport RectalBluetoothIcon from \"./../../../assets/img/RectalBluetoothIcon.png\"; //肛温图片\r\nimport EarBluetoothIcon from \"./../../../assets/img/EarBluetoothIcon.png\"; //耳温图片\r\nimport connectBle from \"./../../../assets/img/connectBle.png\";\r\nimport redcat from \"./../../../assets/images/redcat.png\";\r\nimport reddog from \"./../../../assets/images/reddog.png\";\r\nimport redother from \"./../../../assets/images/redother.png\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setMellaConnectStatusFun,\r\n  setMellaMeasureValueFun,\r\n  setMellaPredictValueFun,\r\n  setMellaMeasurePartFun,\r\n  setMellaPredictReturnValueFun,\r\n} from \"../../../store/actions\";\r\nimport moment from \"moment\";\r\nimport _ from \"lodash\";\r\n\r\nimport \"./headerItem.less\";\r\nimport { catv12Predict } from \"../../../api\";\r\n\r\nconst { Header } = Layout;\r\nconst HeaderItem = ({\r\n  petMessage,\r\n  hardwareMessage,\r\n  timeNum = 15,\r\n  setMellaPredictReturnValueFun,\r\n}) => {\r\n  let history = useHistory();\r\n  let {\r\n    petName,\r\n    patientId,\r\n    firstName,\r\n    lastName,\r\n    gender,\r\n    breedName,\r\n    birthday,\r\n    weight,\r\n    url,\r\n    petSpeciesBreedId,\r\n    petId,\r\n    isWalkIn,\r\n  } = petMessage;\r\n  let {\r\n    mellaConnectStatus,\r\n    mellaPredictValue,\r\n    mellaMeasureValue,\r\n    mellaMeasurePart,\r\n    rulerConnectStatus,\r\n    biggieConnectStatus,\r\n    selectHardwareInfo,\r\n    selectHardwareType,\r\n  } = hardwareMessage;\r\n  const [value, setValue] = useState(0);\r\n  const saveCallBack = useRef();\r\n  const callBack = () => {\r\n    let random = null;\r\n    if (timeNum === 15) {\r\n      random = 7;\r\n    } else if (timeNum === 30) {\r\n      random = 3.5;\r\n    } else {\r\n      random = 1.75;\r\n    }\r\n    setValue(value + random);\r\n  };\r\n  //展示宠物照片方法\r\n  const petPicture = (size) => {\r\n    if (_.isEmpty(url)) {\r\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\r\n        return <Avatar src={redcat} size={size} />;\r\n      } else if (\r\n        petSpeciesBreedId === 12001 ||\r\n        _.inRange(petSpeciesBreedId, 136, 456)\r\n      ) {\r\n        return <Avatar src={reddog} size={size} />;\r\n      } else if (petSpeciesBreedId === 13001) {\r\n        return <Avatar src={redother} size={size} />;\r\n      } else {\r\n        return <Avatar src={redother} size={size} />;\r\n      }\r\n    } else {\r\n      return <Avatar src={url} size={size} />;\r\n    }\r\n  };\r\n  //展示名字或id方法\r\n  const showNameOrId = () => {\r\n    if (_.isEmpty(petName) && _.isEmpty(patientId)) {\r\n      return \"unknown\";\r\n    } else if (!_.isEmpty(petName)) {\r\n      return petName;\r\n    } else {\r\n      return patientId;\r\n    }\r\n  };\r\n  //展示主人名字方法\r\n  const ownerName = () => {\r\n    if (_.isEmpty(firstName) && _.isEmpty(lastName)) {\r\n      return \"unknown\";\r\n    } else {\r\n      return firstName + \" \" + lastName;\r\n    }\r\n  };\r\n  //计算宠物年龄\r\n  const calculateAge = () => {\r\n    if (_.isEmpty(birthday)) {\r\n      return \"unknown\";\r\n    } else {\r\n      return moment().diff(moment(birthday), \"years\") + \" \" + \"Years Old\";\r\n    }\r\n  };\r\n  //计算宠物体重\r\n  const calculateWeight = () => {\r\n    if (_.isEmpty(weight)) {\r\n      return \"unknown\";\r\n    } else {\r\n      return _.floor(weight * 2.2, 1) + \" \" + \"lbs\";\r\n    }\r\n  };\r\n  //头部弹出卡片\r\n  const cardItem = () => {\r\n    return (\r\n      <Menu onClick={(item) => clilkMenu(item)} className=\"popBox\">\r\n        <Menu.Item className=\"topItem\">\r\n          <div className=\"cardTopBox\">\r\n            <div className=\"topLeftBox\">\r\n              {petPicture(91)}\r\n              <p className=\"cardTitle\">{showNameOrId()}</p>\r\n              <p className=\"cardTitle\">{ownerName()}</p>\r\n            </div>\r\n            <div className=\"topRightBox\">\r\n              <p className=\"cardTitle\">{calculateAge()}</p>\r\n              <p className=\"cardTitle\">{calculateWeight()}</p>\r\n              <p className=\"cardTitle\">{gender === 0 ? \"Male\" : \"Venter\"}</p>\r\n              <p className=\"cardTitle\">{breedName}</p>\r\n            </div>\r\n          </div>\r\n        </Menu.Item>\r\n        <Menu.Item key={\"editPetInfo\"} style={{ paddingLeft: '8px' }}>\r\n          <p className=\"itemList\">Edit Pet Profile</p>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ paddingLeft: '8px' }}>\r\n          <p className=\"itemList\">Export Temperature History</p>\r\n        </Menu.Item>\r\n        <Menu.Item style={{ paddingLeft: '8px' }}>\r\n          <p className=\"itemList\">Export All Vitals History</p>\r\n        </Menu.Item>\r\n      </Menu>\r\n    );\r\n  };\r\n  const clilkMenu = (item) => {\r\n    console.log(\"---item\", item);\r\n    if (item.key === \"editPetInfo\" && !petMessage.isWalkIn) {\r\n      //跳转到编辑宠物信息页面\r\n      history.push(\"/page9\");\r\n    }\r\n  };\r\n  //超过15s后调用接口\r\n  const prediction = () => {\r\n    let parame = {\r\n      ambient_temperature: 17,\r\n      data: mellaPredictValue,\r\n      deviceId: \"11111\",\r\n      sampling_rate: \"135ms\",\r\n    };\r\n    let url = \"/clinical/catv12Predict\";\r\n    catv12Predict(parame)\r\n      .then((res) => {\r\n        console.log(\"res\", res);\r\n        let ipcRenderer = window.electron.ipcRenderer;\r\n        if (res.message === \"Success\") {\r\n          let prediction = res.result.prediction.toFixed(2);\r\n          console.log(\"------yuce\", prediction);\r\n\r\n          let num = parseFloat(parseFloat(prediction).toFixed(1));\r\n          setMellaPredictReturnValueFun(num);\r\n\r\n          let tempArr = prediction.split(\".\");\r\n          let intNum = tempArr[0];\r\n          let flotNum = tempArr[1];\r\n          if (intNum.length < 2) {\r\n            intNum = \"0\" + intNum;\r\n          }\r\n          if (flotNum.length < 2) {\r\n            flotNum = \"0\" + flotNum;\r\n          }\r\n          const timeID = setTimeout(() => {\r\n            ipcRenderer.send(\"usbdata\", {\r\n              command: \"42\",\r\n              arr: [intNum, flotNum],\r\n            });\r\n\r\n            timeID && clearTimeout(timeID);\r\n          }, 10);\r\n        } else {\r\n          const timeID = setTimeout(() => {\r\n            // this.sendData('41', [])\r\n            ipcRenderer.send(\"usbdata\", { command: \"41\", arr: [] });\r\n\r\n            clearTimeout(timeID);\r\n          }, 10);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n      });\r\n  };\r\n  //判断仪器是否连接从而判断选择什么图片\r\n  const isConnect = () => {\r\n    const checkImage = () => {\r\n      if (mellaMeasurePart === \"腋温\") {\r\n        return AxillaryBluetooth;\r\n      } else if (mellaMeasurePart === \"耳温\") {\r\n        return EarBluetoothIcon;\r\n      } else {\r\n        return RectalBluetoothIcon;\r\n      }\r\n    };\r\n    switch (selectHardwareType) {\r\n      case \"mellaPro\":\r\n        return _.isEqual(mellaConnectStatus, \"disconnected\") ? (\r\n          <Avatar size={40} src={BluetoothNotConnected} />\r\n        ) : (\r\n          <Progress\r\n            width={48}\r\n            type=\"circle\"\r\n            percent={value}\r\n            format={() => <Avatar size={40} src={checkImage()} />}\r\n          />\r\n        );\r\n      case \"biggie\":\r\n        return _.isEqual(biggieConnectStatus, \"disconnected\") ? (\r\n          <Avatar size={40} src={BluetoothNotConnected} />\r\n        ) : (\r\n          <Avatar size={40} src={connectBle} />\r\n        );\r\n      case \"tape\":\r\n        return _.isEqual(rulerConnectStatus, \"disconnected\") ? (\r\n          <Avatar size={40} src={BluetoothNotConnected} />\r\n        ) : (\r\n          <Avatar size={40} src={connectBle} />\r\n        );\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    saveCallBack.current = callBack;\r\n    if (value === 105 && timeNum !== 60) {\r\n      prediction();\r\n    } else if (value === 105 && timeNum === 60) {\r\n      let ipcRenderer = window.electron.ipcRenderer;\r\n      const timeID = setTimeout(() => {\r\n        ipcRenderer.send(\"usbdata\", { command: \"41\", arr: [] });\r\n        clearTimeout(timeID);\r\n      }, 10);\r\n    }\r\n    return () => { };\r\n  }, [value]);\r\n\r\n  useEffect(() => {\r\n    const tick = () => {\r\n      saveCallBack.current();\r\n    };\r\n    let timer = null;\r\n    if (mellaConnectStatus === \"isMeasuring\") {\r\n      setValue(0);\r\n      timer = setInterval(tick, 1000);\r\n    } else if (value > 100 || mellaConnectStatus === \"complete\") {\r\n      clearInterval(timer);\r\n    } else if (mellaConnectStatus === \"disconnected\") {\r\n      setValue(0);\r\n    };\r\n    if (mellaConnectStatus === \"complete\") {\r\n      // let ipcRenderer = window.electron.ipcRenderer;\r\n      // ipcRenderer.send(\"keyboardWriting\", mellaMeasureValue);\r\n    }\r\n    return () => {\r\n      clearInterval(timer);\r\n    };\r\n  }, [mellaConnectStatus]);\r\n\r\n  return (\r\n    <div className=\"headerBox\">\r\n      <Header style={{ background: \"#fff\", height: '100%' }}>\r\n        {_.isEmpty(petId) && !isWalkIn ? (\r\n          <></>\r\n        ) : (\r\n          <Row className=\"heardRow\" >\r\n            {/*头部左侧 */}\r\n            <Col flex={10}>\r\n              {isWalkIn ? (\r\n                <span className=\"walkInTitle\">Walk-In</span>\r\n              ) : (\r\n                <Dropdown overlay={cardItem} trigger={[\"click\"]}>\r\n                  <div\r\n                    className=\"petMessageBox\"\r\n                    onClick={(e) => e.preventDefault()}\r\n                  >\r\n                    {petPicture(40)}\r\n                    <div className=\"petMessageBox\">\r\n                      <p className=\"petName\">\r\n                        {!_.isEmpty(petMessage.patientId)\r\n                          ? petMessage.patientId\r\n                          : \"unknown\"}\r\n                        ,{\" \"}\r\n                        {!_.isEmpty(petMessage.petName)\r\n                          ? petMessage.petName\r\n                          : \"unknown\"}\r\n                      </p>\r\n                      <DownOutlined\r\n                        style={{ fontSize: \"22px\", marginLeft: \"10px\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </Dropdown>\r\n              )}\r\n            </Col>\r\n            {/*头部右侧 */}\r\n            <Col flex={1}>\r\n              <div className=\"linkStateImageBox\">{isConnect()}</div>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Header>\r\n    </div>\r\n  );\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setMellaConnectStatusFun,\r\n    setMellaMeasureValueFun,\r\n    setMellaPredictValueFun,\r\n    setMellaMeasurePartFun,\r\n    setMellaPredictReturnValueFun,\r\n  }\r\n)(HeaderItem);\r\n",["507","508"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\VetSpire.js",["509","510","511"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\addPetModal\\index.jsx",["512"],"import React, { useEffect, useState } from 'react'\r\nimport {\r\n  Modal,\r\n  Input,\r\n  message,\r\n  Spin,\r\n  Button,\r\n  Select,\r\n} from \"antd\";\r\n\r\nimport UploadImg from \"../../utils/uploadImg/UploadImg\";\r\n\r\nimport {\r\n  checkPatientId,\r\n  selectBreedBySpeciesId,\r\n} from '../../api';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport './index.less';\r\n\r\nconst AddPetModal = ({ visible, width, title, destroyOnClose, value, onConfirm, onCancel, onLoading }) => {\r\n  const { Option } = Select;\r\n  let storage = window.localStorage;\r\n  const [isModalVisible, setIsModalVisible] = useState(false);//控制弹窗的显隐\r\n  const [isdestroyOnClose, setIsdestroyOnClose] = useState(false);//是否清除弹窗里面的内容\r\n  const [isWidth, setIsWidth] = useState(520);//弹窗的宽度\r\n  const [loading, setLoading] = useState(false);//加载\r\n  const [breedList,  setBreedList] = useState([]);//\r\n  const [imageId, setImageId] = useState('');//上传后图片id\r\n  const [patientId, setPatientId] = useState('');//用户输入的病人id\r\n  const [petName, setPetName] = useState('');//用户输入的宠物名字\r\n  const [ownerName, setOwnerName] = useState('');//用户输入的主人名字\r\n  const [breedId, setBreedId] = useState('');//用户选择的宠物品种id\r\n  const [petAge, setPetAge] = useState('');//用户输入的宠物年龄\r\n  const [petWeight, setPetWeight] = useState('');//用户输入的宠物体重\r\n  const [btnLoading, setBtnLoading] = useState(false);//按钮加载\r\n\r\n\r\n  //确认选择\r\n  const handleOk = () => {\r\n    if (patientId === '') {\r\n      message.error('Please enter the patientId!');\r\n    } else {\r\n      setIsModalVisible(visible);\r\n      onConfirm({\r\n        imageId: imageId,\r\n        patientId: patientId,\r\n        petName: petName,\r\n        petSpeciesBreedId: breedId,\r\n        age: petAge,\r\n        weight: petWeight,\r\n        owner: ownerName,\r\n      })\r\n    }\r\n  };\r\n  //关闭弹窗\r\n  const handleCancel = () => {\r\n    onCancel(false);\r\n    setIsModalVisible(visible);\r\n  };\r\n  //判断用户输入的patientId是否存在\r\n  const getPetInfoByPatientId = () => {\r\n    setLoading(true);\r\n    let datas = {\r\n      patientId: patientId,\r\n      doctorId: storage.userId\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      datas.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      datas.organizationId = storage.lastOrganization\r\n    }\r\n    checkPatientId(datas)\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.flag === false) {\r\n          message.error('The patient ID already exists, please replace it !');\r\n        } else {\r\n          message.success('The patientId can be used ~')\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        message.error('Abnormal interface');\r\n      })\r\n\r\n  }\r\n  //获取宠物品种\r\n  const selectBreed = () => {\r\n    setLoading(true);\r\n    selectBreedBySpeciesId({ speciesId: null })\r\n      .then((res) => {\r\n        setLoading(false);\r\n        if (res.msg === 'success') {\r\n          let arr = [];\r\n          _.map(res.petlist, (item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n            };\r\n            arr.push(data);\r\n          });\r\n          setBreedList(arr);\r\n        } else {\r\n          message.error('Failed to obtain pet breed information!');\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (visible === true || visible === false) {\r\n      setIsModalVisible(visible);\r\n    } else {\r\n      setIsModalVisible(false);\r\n    }\r\n    return (() => { })\r\n  }, [visible]);\r\n\r\n  useEffect(() => {\r\n    if (destroyOnClose === true) {\r\n      setIsdestroyOnClose(destroyOnClose);\r\n    }\r\n    if (_.isNumber(width)) {\r\n      setIsWidth(width)\r\n    }\r\n    return (() => { })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    selectBreed();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (onLoading === true || onLoading === false) {\r\n      setBtnLoading(onLoading);\r\n    } else {\r\n      setBtnLoading(false);\r\n    }\r\n    return (() => { })\r\n  }, [onLoading]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Add a Pet\"\r\n        visible={isModalVisible}\r\n        onCancel={handleCancel}\r\n        centered\r\n        maskClosable={false}\r\n        footer={null}\r\n        width={isWidth}\r\n        destroyOnClose={isdestroyOnClose}\r\n        className=\"addPetModal\"\r\n      >\r\n        <Spin spinning={loading}>\r\n          <div className='modalContentBox'>\r\n            <div className='petMsgBox'>\r\n              <div className='addPhoto'>\r\n                <UploadImg\r\n                  getImg={(val) => {\r\n                    setImageId(val.imageId);\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Patient ID:</p>\r\n                <Input\r\n                  value={patientId}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPatientId(e.target.value)\r\n                  }}\r\n                  onBlur={() => {\r\n                    if (patientId.length > 0) {\r\n                      getPetInfoByPatientId();\r\n                    }\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Pet Name:</p>\r\n                <Input\r\n                  value={petName}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPetName(e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Owner Name:</p>\r\n                <Input\r\n                  value={ownerName}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setOwnerName(e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <p>Breed:</p>\r\n                <div className='selectBox'>\r\n                  <Select\r\n                    showSearch\r\n                    style={{ width: \"100%\" }}\r\n                    bordered={false}\r\n                    value={breedId}\r\n                    placeholder=\"Search to Select\"\r\n                    optionFilterProp=\"children\"\r\n                    listHeight={256}\r\n                    onSelect={(value, data) => setBreedId(value)}\r\n                    filterOption={(input, option) =>\r\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                      0\r\n                    }\r\n                    filterSort={(optionA, optionB) =>\r\n                      optionA.children\r\n                        .toLowerCase()\r\n                        .localeCompare(optionB.children.toLowerCase())\r\n                    }\r\n                  >\r\n                    {\r\n                      _.map(breedList, (item, index) => (\r\n                        <Option key={item.petSpeciesBreedId}>{item.breedName}</Option>\r\n                      ))\r\n                    }\r\n                  </Select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"item\">\r\n                <p>Pet Age:</p>\r\n                <Input\r\n                  value={petAge}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPetAge(e.target.value)\r\n                  }}\r\n                />\r\n              </div>\r\n              <div className=\"item\">\r\n                <p>Pet Weight:</p>\r\n                <Input\r\n                  value={petWeight}\r\n                  bordered={false}\r\n                  onChange={(e) => {\r\n                    setPetWeight(e.target.value)\r\n                  }}\r\n                />\r\n                <div className=\"unit\">{`kg`}</div>\r\n              </div>\r\n            </div>\r\n            <div className='foot'>\r\n              <div className=\"btnBox\">\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size=\"large\"\r\n                  block\r\n                  onClick={handleCancel}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  size=\"large\"\r\n                  block\r\n                  onClick={handleOk}\r\n                  loading={btnLoading}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n\r\n};\r\n\r\nexport default AddPetModal;\r\n",["513","514"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetBreedModal\\index.jsx",["515"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\index.js",["516"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\index.js",[],["517","518"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\advancedSettings\\index.jsx",["519","520"],"\r\nimport React, { Component } from 'react'\r\nimport { message } from 'antd';\r\nimport Heart from '../../utils/heard/Heard'\r\nimport { px, win } from '../../utils/px'\r\nimport MyModal from '../../utils/myModal/MyModal.jsx'\r\nimport './index.less';\r\nimport { getOta } from '../../api/mellaserver/backend';\r\nimport { versionComarision } from '../../utils/commonFun';\r\nimport { getInfoOfLatestDevice } from '../../api/mellaserver/mellarecord';\r\n\r\nlet ipcRenderer = window.electron.ipcRenderer\r\nlet storage = window.localStorage;\r\nlet uploadType = ''\r\nexport default class AdvancedSettings extends Component {\r\n\r\n  state = {\r\n    isHaveBase: true,\r\n    uploadText: '',\r\n    isUpload: false,\r\n    updateModal: false,\r\n    progress: 0,\r\n\r\n\r\n    localVersion: '',\r\n    cloudVersion: '',\r\n    filePath: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    ipcRenderer.send(\"big\", win());\r\n    //检测是否有usb设备\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    //升级过程中发送的过程信息\r\n    ipcRenderer.on('uploadBaseInfo', this._uploadBaseInfo)\r\n    //底座发过来的指令信息\r\n    ipcRenderer.on('sned', this._send)\r\n    //发送结束升级指令,相当于初始化\r\n    ipcRenderer.send('reUpload', {})\r\n  }\r\n  componentWillUnmount() {\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('uploadBaseInfo', this._uploadBaseInfo)\r\n    ipcRenderer.removeListener('sned', this._send)\r\n\r\n    this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n    console.log(data);\r\n    let { isUpload } = this.state\r\n\r\n    if (data[2] === 54) {\r\n      if (isUpload) {\r\n        if (data[3] === 0) {\r\n          console.log('这是已经在升级状态下的, 要他重新插拔底座然后再去发送指令');\r\n          this.setState({\r\n            uploadText: 'Start the upgrade after re-plugging the base'\r\n          })\r\n          ipcRenderer.send('startUpload', {})\r\n        }\r\n      }\r\n\r\n    } else if (data[2] === 182) {\r\n      //为0代表底座通讯关闭成功了\r\n      if (data[3] === 0) {\r\n        if (isUpload) {\r\n          console.log('发送指令让底座进入升级状态');\r\n          ipcRenderer.send('enterUpgrade', { command: '38', arr: ['5A'] })\r\n        }\r\n\r\n      }\r\n    } else if (data[2] === 136) {\r\n      //获取到了版本信息,把定时器关闭,此底座不是很老版本\r\n      console.log('版本信息:', data);\r\n      this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n      let localVersion = `${data[6]}.${data[7]}.${data[8]}`\r\n      this.setState({\r\n        localVersion,\r\n        uploadText: `The current version number is v${localVersion}, getting the latest version`\r\n      }, () => {\r\n        this.cloudVersion()\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  //是否插上底座设备，为true则代表插上了底座设备，反之为拔掉了底座设备\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    let { isUpload, progress } = this.state\r\n    if (data === false) {\r\n\r\n      this.setState({\r\n        isHaveBase: true\r\n      })\r\n      if (isUpload) {\r\n        if (progress === 0) {\r\n          console.log('正在升级过程中检测到了拔插 前去发送升级文件', uploadType);\r\n          if (uploadType === 'base') {\r\n            console.log('底座升级');\r\n            ipcRenderer.send('updateBase', { state: 'base', url: this.state.filePath, fileName: `mellabase${this.state.cloudVersion}` })\r\n          } else if (uploadType === 'reset') {\r\n            console.log('底座出厂设置');\r\n            ipcRenderer.send('updateBase', { state: 'reset', })\r\n          }\r\n        } else if (progress === 100) {\r\n          this.failTimer && clearTimeout(this.failTimer)\r\n          this.setState({\r\n            isUpload: false,\r\n            updateModal: false,\r\n            progress: 0,\r\n            localVersion: '',\r\n            cloudVersion: '',\r\n          })\r\n          message.destroy()\r\n          message.success('Update Successful');\r\n          ipcRenderer.send('reUpload', {})\r\n        } else {\r\n          this.setState({\r\n            isUpload: false,\r\n            updateModal: false,\r\n            progress: 0,\r\n            localVersion: '',\r\n            cloudVersion: '',\r\n          })\r\n          message.destroy()\r\n          message.error('Upgrade failed')\r\n          ipcRenderer.send('reUpload', {})\r\n        }\r\n\r\n\r\n      }\r\n\r\n    } else {\r\n      if (this.state.isHaveBase) {\r\n        this.setState({\r\n          isHaveBase: false\r\n        })\r\n      }\r\n      if (isUpload) {\r\n        if (progress > 0 && progress < 100) {\r\n          this.setState({\r\n            isUpload: false,\r\n            updateModal: false,\r\n            progress: 0,\r\n            localVersion: '',\r\n            cloudVersion: '',\r\n          })\r\n          message.destroy()\r\n          message.error('Upgrade failed')\r\n          ipcRenderer.send('reUpload', {})\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n  _uploadBaseInfo = (e, data) => {\r\n    console.log('升级过程中的信息：', data);\r\n    switch (data.status) {\r\n      case 'error':\r\n        this.setState({\r\n          isUpload: false,\r\n          updateModal: false,\r\n          progress: 0,\r\n          localVersion: '',\r\n          cloudVersion: '',\r\n        })\r\n        message.destroy()\r\n        message.error(data.data)\r\n        ipcRenderer.send('reUpload', {})\r\n        break;\r\n      case 'error1':\r\n        this.setState({\r\n          isUpload: false,\r\n          updateModal: false,\r\n          progress: 0,\r\n          localVersion: '',\r\n          cloudVersion: '',\r\n        })\r\n        message.destroy()\r\n        message.error('Upgrade failed, please try again')\r\n        ipcRenderer.send('reUpload', {})\r\n        break;\r\n\r\n\r\n      case 'normal':\r\n        this.setState({\r\n          uploadText: data.data,\r\n          progress: data.progress\r\n        })\r\n        if (data.progress === 100) {\r\n          console.log('进度到达100了');\r\n          this.failTimer && clearTimeout(this.failTimer)\r\n          this.failTimer = setTimeout(() => {\r\n\r\n            this.setState({\r\n              isUpload: false,\r\n              updateModal: false,\r\n              progress: 0,\r\n              localVersion: '',\r\n              cloudVersion: '',\r\n            })\r\n            message.destroy()\r\n            message.error('Upgrade failed')\r\n            ipcRenderer.send('reUpload', {})\r\n          }, 5000);\r\n        }\r\n        break;\r\n\r\n      case 'success':\r\n        this.setState({\r\n          isUpload: false,\r\n          updateModal: false,\r\n        })\r\n        message.destroy()\r\n        message.success(data.data)\r\n        ipcRenderer.send('reUpload', {})\r\n\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n\r\n\r\n  }\r\n  _upload = (val) => {\r\n\r\n    let { isHaveBase } = this.state\r\n    if (!isHaveBase) {\r\n      this.setState({\r\n        isUpload: false,\r\n        updateModal: false,\r\n      })\r\n      message.destroy()\r\n      message.error('No base device found, please plug it in and try again')\r\n    } else {\r\n      console.log('---我插入底座了，准备去升级, 这里就可以打开modal框了');\r\n      this.setState({\r\n        uploadText: 'Detect upgrade environment',\r\n        isUpload: true,\r\n        updateModal: true,\r\n        progress: 0\r\n      })\r\n      uploadType = val\r\n      //第一步，发送一个关闭通信的指令，看是否能够收到，如果收不到则判定底座已经在升级状态下，直接去发送文件\r\n      const timer = setTimeout(() => {\r\n        console.log('发送指令查看底座是否已经在升级状态');\r\n        ipcRenderer.send('usbdata', { command: '36', arr: ['00'] })\r\n        clearTimeout(timer)\r\n      }, 100);\r\n\r\n      //2.如果能收到关闭指令，则发送开始升级指令\r\n\r\n      //3.如果如果测试检测到usb插拔，则去发送文件\r\n\r\n\r\n\r\n    }\r\n  }\r\n\r\n  _upload1 = (val) => {\r\n\r\n    let { isHaveBase } = this.state\r\n    message.destroy()\r\n    if (!isHaveBase) {\r\n      this.setState({\r\n        isUpload: false,\r\n        updateModal: false,\r\n        localVersion: '',\r\n        cloudVersion: '',\r\n      })\r\n\r\n      message.error('No base device found, please plug it in and try again')\r\n    } else {\r\n      console.log('---我插入底座了，准备去升级, 这里就可以打开modal框了');\r\n      this.setState({\r\n        uploadText: 'Detect upgrade environment',\r\n        updateModal: true,\r\n        progress: 0,\r\n        localVersion: '',\r\n        cloudVersion: '',\r\n      }, () => {\r\n        this.localVersion()\r\n      })\r\n      uploadType = val\r\n      //第一步,查询本地版本号\r\n\r\n\r\n\r\n      //2.如果能收到关闭指令，则发送开始升级指令\r\n\r\n      //3.如果如果测试检测到usb插拔，则去发送文件\r\n\r\n\r\n\r\n    }\r\n  }\r\n  //询问本地的版本号\r\n  localVersion = () => {\r\n    this.setState({\r\n      uploadText: 'Query the local version number',\r\n    })\r\n    ipcRenderer.send('usbdata', { command: '08', arr: [''] })\r\n    this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n    this.localVersionTimer = setTimeout(() => {\r\n      //如果3秒后还没有收到桌面返回的版本号,则代表这是很老的底座程序,直接去下载文件升级\r\n      this.cloudVersion()\r\n      this.localVersionTimer && clearTimeout(this.localVersionTimer)\r\n    }, 3000);\r\n  }\r\n  //询问网端最新的版本号\r\n  cloudVersion = () => {\r\n    console.log('-----进入获取网端版本时间了');\r\n    getInfoOfLatestDevice('mellabase')\r\n      .then(res => {\r\n        console.log('获取到了网端的版本号', res);\r\n        if (res.flag) {\r\n          let { firmwareVersion, updateUrl } = res.data\r\n          let cloudBigtolocal = versionComarision(firmwareVersion, this.state.localVersion)\r\n          console.log('比较信息:', firmwareVersion, this.state.localVersion, cloudBigtolocal);\r\n          if (cloudBigtolocal || !this.state.localVersion) {\r\n            this.setState({\r\n              cloudVersion: firmwareVersion,\r\n              filePath: updateUrl,\r\n              isUpload: true,\r\n              uploadText: 'Start getting upgrade files'\r\n\r\n            })\r\n\r\n            //第一步，发送一个关闭通信的指令，看是否能够收到，如果收不到则判定底座已经在升级状态下，直接去发送文件\r\n            const timer = setTimeout(() => {\r\n              console.log('发送指令查看底座是否已经在升级状态');\r\n              ipcRenderer.send('usbdata', { command: '36', arr: ['00'] })\r\n              clearTimeout(timer)\r\n            }, 100);\r\n          } else {\r\n            this.setState({\r\n              updateModal: false\r\n            })\r\n            message.success(`The hardware version is v${firmwareVersion}, which is the latest version`)\r\n          }\r\n\r\n\r\n\r\n        } else {\r\n          console.log('没有获取到版本的文件');\r\n          message.error('Failed to get the latest version')\r\n          this.setState({\r\n            updateModal: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log('获取版本失败,停止升级', err);\r\n        message.error('Failed to get the latest version')\r\n        this.setState({\r\n          updateModal: false\r\n        })\r\n\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id='advancedsettings'>\r\n        <div className=\"heard\">\r\n          <Heart />\r\n          <div className=\"title\">\r\n            <h2>Advanced Settings</h2>\r\n          </div>\r\n\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"item\">\r\n            <div className=\"ltext\">\r\n              <p style={{ fontSize: px(18) }}>\r\n                Factory Reset<br /><br />\r\n\r\n                This will erase all data from your Mella<br /> device, including:<br />\r\n                - All installed updates<br />\r\n                - User preferences and Settings<br />\r\n              </p>\r\n            </div>\r\n            <div className=\"rbtn\"\r\n              // onClick={this._reset}\r\n              onClick={() => this._upload('reset')}\r\n            >\r\n              <div className=\"btn\">Erase all data and reset device</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"ltext\">\r\n              <p style={{ fontSize: px(18) }}>\r\n                Mella Base\r\n              </p>\r\n            </div>\r\n            <div className=\"rbtn\"\r\n\r\n              onClick={() => this._upload1('base')}\r\n            >\r\n              <div className=\"btn\">Update Mella Charging Base</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"item\">\r\n            <div className=\"ltext\">\r\n              <p style={{ fontSize: px(18) }}>\r\n                MellaPro Thermometer\r\n              </p>\r\n            </div>\r\n            <div className=\"rbtn\"\r\n              onClick={() => {\r\n                // ipcRenderer.send('usbdata', { command: '01', arr: ['11'] })\r\n              }}\r\n            >\r\n              <div className=\"btn\">Connect Bluetooth and Update</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <MyModal\r\n          visible={this.state.updateModal}\r\n          // visible={true}\r\n          element={\r\n            <div style={{ height: px(200), borderRadius: px(20) }} className=\"upload\">\r\n\r\n              {/* <p>{this.state.uploadText} </p> */}\r\n              <p style={{ color: '#000', padding: 0, margin: 0 }}>{this.state.uploadText}</p>\r\n            </div>\r\n          }\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addDevice\\index.jsx",["521","522"],"import React, { Component } from 'react'\r\nimport { message } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\n\r\nimport MinClose from '../../utils/minClose/MinClose'\r\nimport MouseDiv from '../../utils/mouseDiv/MouseDiv'\r\nimport { mTop, px, MTop, } from '../../utils/px';\r\nimport electronStore from '../../utils/electronStore';\r\n\r\nimport back_white from '../../assets/img/back-white.png';\r\nimport back_hui from '../../assets/img/back-hui.png';\r\nimport redclose from '../../assets/img/redclose.png';\r\n\r\nimport './index.less';\r\n\r\nlet storage = window.localStorage;\r\nlet ipcRenderer = window.electron.ipcRenderer\r\n\r\nlet num07 = 0       //接收到07命令行的次数\r\n\r\n\r\nexport default class AddDevice extends Component {\r\n\r\n  state = {\r\n    noUSB: false,\r\n    devicesList: [],\r\n    selectDevice: null,\r\n    // selectDevice: true,\r\n    reName: '',\r\n    saveDeviceMac: []  //这是已经保存过的设备的macid\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    message.destroy()\r\n\r\n    ipcRenderer.send('small')\r\n    // 监听分辨率是否改变\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    //这里做了个监听，当有数据发过来的时候直接在这里接收\r\n    ipcRenderer.on('sned', this._send)\r\n    ipcRenderer.on('noUSB', this._noUSB)\r\n    let devicesList = electronStore.get(`${storage.userId}-deviceList`)\r\n    if (devicesList) {\r\n      let saveDeviceMac = []\r\n      for (let i = 0; i < devicesList.length; i++) {\r\n        const element = devicesList[i];\r\n        saveDeviceMac.push(element.macId)\r\n      }\r\n      this.setState({\r\n        saveDeviceMac\r\n      })\r\n    }\r\n\r\n\r\n\r\n    // const timer = setTimeout(() => {\r\n    //   let deviceList = [\r\n    //     // { name: 'Add Device', deviceType: 'add', macId: '0' },\r\n    //     { name: 'malla001', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla002', deviceType: 'mellaPro', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla003', deviceType: 'mellaHome', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'biggie00222222222222221', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'malla001', deviceType: 'biggie', macId: '11:22:33:44:55:66' },\r\n    //     { name: 'Charlie001', deviceType: 'rfid', macId: '11:22:33:44:55:66' },\r\n    //   ]\r\n    //   this.setState({\r\n    //     devicesList: deviceList\r\n    //   })\r\n    //   clearTimeout(timer)\r\n    // }, 500);\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    ipcRenderer.removeListener('sned', this._send)\r\n    ipcRenderer.removeListener('noUSB', this._noUSB)\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  _noUSB = (e, data) => {\r\n    console.log('没有USB设备：', data);\r\n    if (data === false) {\r\n      message.destroy()\r\n      this.setState({\r\n        noUSB: false\r\n      })\r\n    } else {\r\n      if (!this.state.noUSB) {\r\n        // message.error('The base is not detected. Please insert the base', 0)\r\n        this.setState({\r\n          noUSB: true\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  _send = (event, data) => {\r\n    //data就是测量的数据，是十进制的数字\r\n    // console.log(data);\r\n    this.command(data)()\r\n  }\r\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\r\n  command = (newArr) => {\r\n    const instruction = [255]\r\n    let dataArr1 = newArr.map(item => {\r\n      if (item.toString(16).length < 2) {\r\n        return '0' + item.toString(16)\r\n      } else {\r\n        return item.toString(16)\r\n      }\r\n    })\r\n    // console.log(dataArr1);\r\n    const commandArr = {\r\n      255: () => {//蓝牙软尺广播的数据\r\n        let length = newArr.length\r\n        let frameLength = newArr[1]   //帧长\r\n        let itemLength = newArr[3] + 1  //数据位的长度   13\r\n        let dataIndex = 0\r\n\r\n        let bluName = ''\r\n        let bluData = []\r\n        //[\"aa\", \"25\", \"ff\", |\"03\", \"03\", \"b0\", \"ff\",| \"0f\", \"ff\", \"ac\", \"d2\", \"0b\", \"72\", \"c1\", \"7d\", \"3e\", \"d0\", \"a0\", \"00\", \"05\", \"09\", \"00\", \"2e\",| \"05\", \"09\", \"54\", \"61\", \"70\", \"65\", |\"06\", \"ef\", \"d0\", \"3e\", \"7d\", \"c1\", \"72\", |\"0b\", \"5c\", \"55\"]\r\n        while (itemLength < length && (itemLength + 3 <= frameLength)) {\r\n          let itemData = []\r\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\r\n            itemData.push(dataArr1[i + dataIndex + 5])\r\n          }\r\n          // console.log('--剪切的数据---', itemData);\r\n          switch (newArr[dataIndex + 4]) {\r\n            case 9:\r\n            case 8:\r\n              let str = ''\r\n              for (let i = 0; i < itemData.length; i++) {\r\n                let item = parseInt(itemData[i], 16)\r\n                str += String.fromCharCode(item)\r\n              }\r\n              bluName = str\r\n              break;\r\n            case 255:\r\n              bluData = itemData\r\n              break;\r\n            case 7: console.log('---UUID'); break;\r\n            case 239:\r\n              // console.log('---mac地址');\r\n              break;\r\n            case 3: console.log('----尺子的,不知道什么用'); break;\r\n            default: console.log('直接跳出循环'); return;\r\n          }\r\n          dataIndex = itemLength\r\n          itemLength = itemLength + newArr[dataIndex + 3] + 1\r\n        }\r\n        console.log('硬件名称', bluName, '-----硬件数据', bluData);\r\n        let macId = ''\r\n        if (bluData.length > 7) {\r\n          macId = this.getMac(bluName, bluData)\r\n        }\r\n\r\n\r\n        let sameFlog = this.state.devicesList.some((device, index) => {\r\n          return device.macId === macId\r\n        })\r\n        if (sameFlog || !macId) {   //重复直接退出\r\n          return\r\n        }\r\n        let deviceType = ''\r\n        switch (bluName) {\r\n          case 'Biggie':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n          case 'C19':        //这是体脂称\r\n            deviceType = 'biggie'\r\n\r\n            break;\r\n\r\n          case 'MaeBowl':   //这是称量碗\r\n            deviceType = 'maeBowl'\r\n            break;\r\n\r\n          case 'Mella Measure': //这是蓝牙尺\r\n            deviceType = 'tape'\r\n            break;\r\n\r\n        }\r\n        if (macId && deviceType && bluName) {\r\n          let json = {\r\n            name: bluName,\r\n            deviceType,\r\n            macId\r\n          }\r\n          let deviceArr = [].concat(this.state.devicesList)\r\n          deviceArr.push(json)\r\n          this.setState({\r\n            devicesList: deviceArr\r\n          })\r\n        }\r\n\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n    }\r\n    if (instruction.indexOf(newArr[2]) !== -1) {\r\n      return commandArr[newArr[2]]\r\n    } else {\r\n      return () => {\r\n        console.log('没有控制命令', commandArr);\r\n      }\r\n    }\r\n  }\r\n  getMac = (bluName, bluData) => {\r\n    switch (bluName) {\r\n      case 'Biggie':\r\n      case 'MaeBowl':\r\n      case 'Mella Measure':\r\n      case 'C19':\r\n        let str = bluData[1]\r\n        for (let i = 2; i < 7; i++) {\r\n          str += `:${bluData[i]}`\r\n        }\r\n        return str\r\n\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  changeFenBianLv = (e) => {\r\n    ipcRenderer.send('small')\r\n    this.setState({\r\n    })\r\n  }\r\n  beforeDiv = () => {\r\n    return (\r\n      <img src={back_hui} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n  }\r\n  afterDiv = () => {\r\n    return (\r\n      <img src={back_white} alt=\"\" style={{ width: px(15) }} />\r\n    )\r\n\r\n  }\r\n\r\n  body = () => {\r\n    let { noUSB, devicesList, selectDevice, reName } = this.state\r\n    if (selectDevice) {\r\n      return <div className=\"addDevice flex\">\r\n        <div className=\"addDeviceTop flex\">\r\n          <div className=\"title\" style={{ fontSize: px(30), marginBottom: px(40) }}>Would you like to name<br />\r\n            this Mella device?</div>\r\n\r\n          <div className=\"input flex\" style={{ marginBottom: px(60) }}>\r\n            <input type=\"text\" style={{ height: px(45) }}\r\n              value={reName}\r\n              onChange={(value) => {\r\n                this.setState({\r\n                  reName: value.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"text\" style={{ fontSize: px(18) }}>* We recommend naming based\r\n            on the Exam Room. Write the name\r\n            on the sticker provided so it is easy\r\n            to select your device in the future.</div>\r\n        </div>\r\n        <div className=\"addDeviceFoot flex\">\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              console.log('---', deviceList);\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              let { saveDeviceMac } = this.state\r\n              saveDeviceMac.push(selectDevice.macId)\r\n              this.setState({\r\n                saveDeviceMac,\r\n                selectDevice: null,\r\n                reName: ''\r\n              })\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Add Another</p>\r\n          </div>\r\n          <div className=\"btn\"\r\n            onClick={() => {\r\n              let { reName, selectDevice } = this.state\r\n              console.log(reName, selectDevice);\r\n              if (reName) {\r\n                selectDevice.name = reName\r\n              }\r\n              let deviceList = electronStore.get(`${storage.userId}-deviceList`)\r\n              deviceList.push(selectDevice)\r\n              electronStore.set(`${storage.userId}-deviceList`, deviceList)\r\n              this.props.history.goBack()\r\n\r\n            }}\r\n          >\r\n            <p className='btnText'>Finish</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    } else {\r\n      if (noUSB) {\r\n        return <div className='flex' style={{ width: '100%', marginBottom: px(120), height: '50%', }}>\r\n          <img src={redclose} alt=\"\" style={{ width: px(80) }} />\r\n\r\n          <p style={{ textAlign: 'center', fontSize: px(30), marginTop: px(50) }}>The base is not detected.<br />Please insert the base</p>\r\n        </div>\r\n      } else {\r\n        if (devicesList.length === 0) {\r\n          return <div className=\"flex\" style={{ width: '100%', height: '100%', position: 'relative' }}>\r\n            {/* < MyModal\r\n              visible={true}\r\n              element={\r\n                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n                  <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n                  </div>\r\n                  <p>\r\n                    {'searching...'}\r\n                  </p>\r\n                </div>\r\n              }\r\n            /> */}\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', marginBottom: px(130) }}>\r\n              <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n                <LoadingOutlined style={{ fontSize: 30, color: '#8a8a8a', marginTop: mTop(-30), }} />\r\n              </div>\r\n              <p>\r\n                {'searching...'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        } else {\r\n          let options = devicesList.map((item, index) => {\r\n            let { saveDeviceMac } = this.state\r\n            let flog = saveDeviceMac.some((device, index) => {\r\n              return device === item.macId\r\n            })\r\n            let fontColor = flog ? '#D1C4C4' : '#4a4a4a'\r\n            return <li\r\n              className='flex'\r\n              style={{ marginBottom: px(20) }}\r\n              key={`${index}`}\r\n              onClick={() => {\r\n                if (!flog) {\r\n                  this.setState({\r\n                    selectDevice: item\r\n                  })\r\n                } else {\r\n                  message.destroy();\r\n                  message.error('This device has already been added')\r\n                }\r\n\r\n              }}\r\n            >\r\n\r\n              <div className=\"deviceName\" style={{ fontSize: px(24), color: fontColor }}>{item.name}</div>\r\n              <div className=\"deviceMacId\" style={{ fontSize: px(18), color: fontColor }}>{item.macId}</div>\r\n\r\n            </li>\r\n          })\r\n          return <div className='deviceList'>\r\n            <ul>\r\n              {options}\r\n            </ul>\r\n          </div>\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"addDevice\">\r\n        <div className=\"heaed\">\r\n          <div className=\"l\"\r\n          >\r\n            <MouseDiv\r\n              className='mouseDiv'\r\n              beforeDiv={this.beforeDiv}\r\n              afterDiv={this.afterDiv}\r\n              divClick={() => {\r\n                let { selectDevice } = this.state\r\n                if (selectDevice) {\r\n                  this.setState({\r\n                    selectDevice: null\r\n                  })\r\n                } else {\r\n                  this.props.history.goBack()\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"r\">\r\n\r\n            < MinClose\r\n\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"body flex\">\r\n          {this.body()}\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",["523","524"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\combineScales\\index.jsx",["525","526","527","528","529","530"],"import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Layout,\n  Avatar,\n  Button,\n  Card,\n  Space,\n  message,\n  Input,\n  Modal,\n} from \"antd\";\nimport {\n  CheckCircleFilled,\n  ExclamationCircleOutlined,\n} from \"@ant-design/icons\";\nimport {\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n} from \"../../store/actions\";\nimport _ from \"lodash\";\nimport { devicesTitleHeight } from \"../../utils/InitDate\";\nimport scaleImage from \"./../../assets/img/scaleImage.png\";\nimport combinedscales from \"./../../assets/img/combinedscales.png\";\nimport { px } from \"../../utils/px\";\nimport \"./index.less\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { Meta } = Card;\nconst { confirm } = Modal;\nconst CombineScales = ({\n  petMessage,\n  hardwareMessage,\n  userMessage,\n  setMenuNum,\n  selectHardwareInfoFun,\n  selectHardwareList,\n}) => {\n  let { hardwareList } = hardwareMessage;\n  const [biggieList, setBiggieList] = useState([]); //体重秤仪器列表\n  const [confirmType, setConfirmType] = useState(false); //确认选择\n  const [checkHardwareList, setcheckHardwareList] = useState([]); //存储用户点击选择的体重秤信息\n  const [saveName, setSaveName] = useState(\"\"); //保存用户的更改的名字\n\n  //点击卡片选择效果\n  const onClick = (index, data) => {\n    console.log(data);\n    let changeClassName = document.getElementById(index).classList;\n    let iconClassName = document.getElementById(`${\"icon\" + index}`);\n    let cardClassNametype = document\n      .getElementById(index)\n      .classList.contains(\"cardBoxClick\");\n    cardClassNametype\n      ? changeClassName.remove(\"cardBoxClick\")\n      : changeClassName.add(\"cardBoxClick\");\n    cardClassNametype\n      ? (iconClassName.style.display = \"none\")\n      : (iconClassName.style.display = \"\");\n    let oldData = checkHardwareList;\n    setcheckHardwareList(_.xorWith([data], oldData, _.isEqual));\n  };\n  //确认选择两个体重秤\n  const onChangeScales = () => {\n    if (_.size(checkHardwareList) > 1) {\n      setConfirmType(true);\n    } else {\n      message.error({\n        content: \"Please choose more than two scales\",\n        style: {\n          marginTop: \"20vh\",\n        },\n      });\n    }\n  };\n  //保存用户更改的名字\n  const saveChangeName = (e) => {\n    setSaveName(e.target.value);\n  };\n\n  //跳转准备测量\n  const startMeasuring = () => {\n    confirm({\n      title: \"Are you sure to incorporate the body fat scale?\",\n      icon: <ExclamationCircleOutlined />,\n      style: {\n        marginTop: \"20vh\",\n      },\n      width: 480,\n      onOk() {\n        let mac = _.join(_.map(checkHardwareList, \"mac\"), \"/\");\n        let newData = {\n          name: _.isEmpty(saveName) ? \"CompositeScale\" : saveName,\n          mac: mac,\n          deviceType: \"biggie\",\n          examRoom: \"\",\n        };\n        let newHardwareList = hardwareList;\n        newHardwareList[1].devices.push({ ...newData });\n        selectHardwareList(newHardwareList);\n        selectHardwareInfoFun(newData);\n        setMenuNum(\"1\");\n      },\n    });\n  };\n\n  useEffect(() => {\n    let newData = [];\n    _.forIn(_.find(hardwareList, [\"type\", \"biggie\"]).devices, (item) => {\n      if (item.mac.indexOf(\"/\") === -1) {\n        newData.push(item);\n      }\n    });\n    setBiggieList(newData);\n    return () => { };\n  }, []);\n\n  return (\n    <>\n      <Layout className=\"mergePage\">\n        <Header className=\"mergeHeaderBox\">\n          <span className=\"headerTitle\">\n            {confirmType ? \"Scales Combined As One\" : \"Combine Scales\"}\n          </span>\n        </Header>\n        <Content className=\"combineContentBox\">\n          <div>\n            <div className=\"tipTitleBox\">\n              {!confirmType ? (\n                <span>\n                  Select the scales you'd\n                  <br />\n                  like to combine\n                </span>\n              ) : (\n                <span>\n                  These two scales are now combined.\n                  <br />\n                  Please give this combination a name\n                </span>\n              )}\n            </div>\n            {confirmType ? (\n              <div className=\"asOneCardBox\">\n                <Space>\n                  {_.map(checkHardwareList, (item, index) => {\n                    return (\n                      <Card className=\"asOneCard\">\n                        <Meta\n                          avatar={<Avatar src={scaleImage} size={53} />}\n                          description={\n                            <div style={{ display: \"grid\" }}>\n                              <span>Device Name:{item.name}</span>\n                              <span>\n                                {item.deviceType === \"biggie\"\n                                  ? \"Biggie Pro Scale\"\n                                  : \"Biggie Home Scale\"}\n                              </span>\n                              <span>SN:{item.mac}</span>\n                            </div>\n                          }\n                        />\n                      </Card>\n                    );\n                  })}\n                </Space>\n                <div className=\"acOneImageBox\">\n                  <img src={combinedscales} />\n                </div>\n              </div>\n            ) : (\n              <div className=\"selectScalesBox\">\n                <div>\n                  {_.map(biggieList, (item, index) => {\n                    return (\n                      <Card\n                        className=\"cardBox\"\n                        hoverable\n                        onClick={() => onClick(`${index}`, item)}\n                        id={`${index}`}\n                        key={index}\n                      >\n                        <div className=\"cardBodyBox\">\n                          <Meta\n                            avatar={<Avatar src={scaleImage} size={53} />}\n                            description={\n                              <div style={{ display: \"grid\" }}>\n                                <span>Device Name:{item.name}</span>\n                                <span>\n                                  {item.deviceType === \"biggie\"\n                                    ? \"Biggie Pro Scale\"\n                                    : \"Biggie Home Scale\"}\n                                </span>\n                                <span>SN:{item.mac}</span>\n                              </div>\n                            }\n                          />\n                          <CheckCircleFilled\n                            id={`${\"icon\" + index}`}\n                            style={{\n                              color: \"#5cbbe0\",\n                              fontSize: \"20px\",\n                              display: \"none\",\n                            }}\n                          />\n                        </div>\n                      </Card>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n            {confirmType ? (\n              <>\n                <div className=\"inputBox\">\n                  <Input\n                    placeholder=\"Combined Scale Name\"\n                    className=\"inputName\"\n                    maxLength={25}\n                    onChange={saveChangeName}\n                  />\n                </div>\n                <div className=\"scalesBtnBox\">\n                  <Button\n                    type=\"primary\"\n                    className=\"scalesBtn\"\n                    shape=\"round\"\n                    onClick={() => startMeasuring()}\n                  >\n                    Save & Start Measuring\n                  </Button>\n                </div>\n              </>\n            ) : (\n              <Space className=\"scalesBtnBox\">\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => setMenuNum(\"AddDevice\")}\n                >\n                  Add New Scale\n                </Button>\n                <Button\n                  type=\"primary\"\n                  className=\"scalesBtn\"\n                  shape=\"round\"\n                  onClick={() => onChangeScales()}\n                >\n                  Combine Scales\n                </Button>\n              </Space>\n            )}\n          </div>\n        </Content>\n      </Layout>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n    userMessage: state.userReduce,\n  }),\n  {\n    setMenuNum,\n    selectHardwareInfoFun,\n    selectHardwareList,\n  }\n)(CombineScales);\n",["531","532"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\axios\\http.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\historyTable\\index.jsx",["533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\hardwareReduce.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\App.js",["556"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\appversion.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\doctorAddPet\\index.jsx",["557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\maxminreturn\\MaxMinReturn.jsx",[],["577","578"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\pet.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\petReduce.js",[],["579","580"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\allPetsPage\\index.jsx",["581"],"import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { px } from '../../utils/px';\r\nimport PetTable from '../../components/petTable';\r\nimport { petDetailInfoFun, setMenuNum, setPetListArrFun } from '../../store/actions';\r\nimport moment from 'moment'\r\nimport './index.less';\r\nimport { listAllPetInfo } from '../../api';\r\n\r\nlet storage = window.localStorage;\r\nconst AllPet = ({ bodyHeight, petDetailInfoFun, setMenuNum, setPetListArrFun }) => {\r\n\r\n    //初始化获取宠物列表数据\r\n    const [petListArr, setPetListArr] = useState([])\r\n    //定义宠物列表是否加载中\r\n    const [loading, setLoading] = useState(true)\r\n    const [spin, setSpin] = useState(false)\r\n    const _getExam = async () => {\r\n        console.log('进来了');\r\n        let params = {\r\n            doctorId: storage.userId,\r\n            offset: 0,\r\n            size: 100,\r\n        }\r\n        if (storage.lastWorkplaceId) {\r\n            params.workplaceId = storage.lastWorkplaceId\r\n        }\r\n        if (storage.lastOrganization) {\r\n            params.organizationId = storage.lastOrganization\r\n        }\r\n        console.log('查询宠物的入参', params);\r\n        const isUnKnow = (val) => {\r\n            if (val) {\r\n                return val\r\n            } else {\r\n                return 'unknown'\r\n            }\r\n        }\r\n        setLoading(true)\r\n        listAllPetInfo(params)\r\n            .then(res => {\r\n                console.log('查询到的宠物列表,/user/listAllPetInfo', res);\r\n                if (res.flag === true && res.data) {\r\n                    let data = []\r\n                    let oldList = res.data\r\n                    setPetListArrFun(oldList)\r\n                    // let oldList = res.data.list\r\n                    for (let i = 0; i < oldList.length; i++) {\r\n                        let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\r\n                            h2tLength, torsoLength } = oldList[i]\r\n                        let owner = ''\r\n                        patientId = isUnKnow(patientId)\r\n                        petName = isUnKnow(petName)\r\n                        breedName = isUnKnow(breedName)\r\n                        age = isUnKnow(age)\r\n                        weight = isUnKnow(weight)\r\n                        if (!firstName) {\r\n                            firstName = ''\r\n                        }\r\n                        if (!lastName) {\r\n                            lastName = ''\r\n                        }\r\n                        if (lastName === '' && firstName === '') {\r\n                            owner = 'unknown'\r\n                        } else {\r\n                            owner = `${lastName} ${firstName}`\r\n                        }\r\n                        createTime = moment(createTime).format('X')\r\n                        let petGender = ''\r\n                        switch (`${gender}`) {\r\n                            case '1': petGender = 'F'\r\n\r\n                                break;\r\n                            case '0': petGender = \"M\"\r\n                                break;\r\n                            default: petGender = 'unknown'\r\n                                break;\r\n                        }\r\n                        let petAge = 'unknown'\r\n                        if (birthday) {\r\n                            petAge = moment(new Date()).diff(moment(birthday), 'years')\r\n                        }\r\n\r\n                        let json = {\r\n                            insertedAt: createTime,\r\n                            patientId,\r\n                            petName,\r\n                            owner,\r\n                            breed: breedName,\r\n                            gender: petGender,\r\n                            age: petAge,\r\n                            petId,\r\n                            id: i,\r\n                            weight,\r\n                            rfid,\r\n                            url,\r\n                            speciesId,\r\n                            l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\r\n                            h2tLength, torsoLength,\r\n                            pethubId, macId,\r\n\r\n                        }\r\n                        data.push(json)\r\n\r\n                    }\r\n                    data.sort((a, b) => {\r\n                        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n                    })\r\n                    console.log('列表的数据：', data);\r\n                    setPetListArr(data)\r\n                    setLoading(false)\r\n                    setSpin(false)\r\n                } else {\r\n                    setLoading(false)\r\n                    setSpin(false)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setLoading(false)\r\n                setSpin(false)\r\n            })\r\n\r\n\r\n\r\n    }\r\n    const _refresh = () => {\r\n        setSpin(true)\r\n        _getExam()\r\n    }\r\n\r\n    useEffect(() => {\r\n        //获取宠物列表\r\n        _getExam()\r\n    }, [])\r\n\r\n    return (\r\n        <div id='allPets' style={{ height: bodyHeight }}>\r\n            <div className=\"allPetHeard\">\r\n                <div className=\"addDeviceTitle flex\" style={{ fontSize: 26, paddingLeft: px(20) }}>\r\n                    <div className=\"title\">Client Results</div>\r\n                    <div className=\"refresh flex\"\r\n                        style={{ fontSize: px(25), marginLeft: px(10) }}\r\n                    >\r\n                        <SyncOutlined onClick={_refresh} spin={spin} />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className=\"walkBtn1\" style={{ marginRight: px(80) }}>\r\n                    <div\r\n                        className=\"walkbtnBox\"\r\n                        style={{ height: px(40), width: px(200) }}\r\n                        onClick={() => {\r\n                            let json = {\r\n                                isWalkIn: true,\r\n                                petId: null,\r\n                                petName: null,\r\n                                owner: null,\r\n                                breed: null,\r\n\r\n                            }\r\n                            petDetailInfoFun(json)\r\n                            setMenuNum(\"1\")\r\n                        }}\r\n                    >\r\n                        <div className=\"walkText\">Walk-In</div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <PetTable\r\n                bodyHeight={bodyHeight - px(100)}\r\n                petListArr={petListArr}\r\n                loading={loading}\r\n                resetPetList={(val) => setPetListArr(val)}\r\n\r\n            />\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nAllPet.propTypes = {\r\n}\r\n//默认值\r\nAllPet.defaultProps = {\r\n    bodyHeight: 0,\r\n}\r\nexport default connect(\r\n    state => ({\r\n\r\n    }),\r\n    { petDetailInfoFun, setMenuNum, setPetListArrFun }\r\n)(AllPet)\r\n",["582","583"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\UnassignModal\\UnassignModal.jsx",["584","585","586","587","588","589","590","591","592","593"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\measurement.jsx",["594","595","596","597","598","599","600","601","602","603","604"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Button, Progress, Layout, Carousel } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport Animation_1 from \"./../../../assets/img/Animation_1.png\";\nimport Animation_2 from \"./../../../assets/img/Animation_2.png\";\nimport Animation_3 from \"./../../../assets/img/Animation_3.png\";\n// import HeaderItem from './headerItem';\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../../store/actions\";\nimport _ from \"lodash\";\nimport \"./measurement.less\";\nimport { px } from \"../../../utils/px\";\nimport electronStore from \"../../../utils/electronStore\";\n\nlet storage = window.localStorage;\nconst { Content, Header } = Layout;\n\nconst Measurement = ({ petMessage, hardwareMessage }) => {\n  let { mellaMeasureValue, mellaMeasurePart } = hardwareMessage;\n  const [percent, setPercent] = useState(0);\n  const [value, setValue] = useState(0);\n  const [timers, setTimers] = useState(0);\n  const [isHua, setIsHua] = useState(true);\n  const saveCallBack = useRef();\n  const callBack = () => {\n    const random = 1;\n    setValue(value + random);\n    setTimers(timers + random);\n  };\n\n  //圆滑里面的文字\n  const ProgressTitle = (percent) => {\n    let num = parseFloat(percent);\n    if (isHua) {\n      num = (num * 1.8 + 32).toFixed(1);\n    }\n    return (\n      <>\n        {mellaMeasurePart !== \"耳温\" ? (\n          <p className=\"ProgressTitle\">\n            {num}\n            <span className=\"symbol\">{`${isHua ? \"℉\" : \"℃\"}`}</span>\n          </p>\n        ) : (\n          <></>\n        )}\n        <p className=\"ProgressTitle\">Measuring</p>\n      </>\n    );\n  };\n  //图片切换\n  const checkImage = () => {\n    switch (timers) {\n      case 0:\n        return <img src={Animation_1} />;\n      case 1:\n        return <img src={Animation_2} />;\n      case 2:\n        return <img src={Animation_3} />;\n      case 3:\n        return <img src={Animation_3} />;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (timers > 2) {\n      setTimers(0);\n    }\n    return () => { };\n  });\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    const timer = setInterval(tick, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  useEffect(() => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (hardSet) {\n      let { isHua } = hardSet;\n      setIsHua(isHua);\n    }\n  }, []);\n\n  return (\n    <>\n      {/* <HeaderItem /> */}\n      <Content className={\"measureContentBox\"}>\n        <div style={{ marginTop: px(33) }}>\n          <Progress\n            type=\"dashboard\"\n            percent={_.round(mellaMeasureValue, 1)}\n            gapDegree={30}\n            // width={px(260)}\n            strokeWidth={\"8\"}\n            format={(percent) => ProgressTitle(percent)}\n            strokeColor={'#4C595E'}\n            className='measuringProgress'\n          />\n        </div>\n\n        {checkImage()}\n      </Content>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(Measurement);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\mouseDiv\\MouseDiv.js",["605","606"],"\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { px, mTop } from './../px'\r\nimport './mouseDiv.less'\r\n\r\n/**\r\n * \r\n * @param {string} minHeight 最小化、最大化方块的宽高 \r\n * @param {number} imgWidth 最小化、最大化图片的高度 \r\n * @returns  封装了最小化和关闭按钮，有鼠标移入、移出的动画\r\n */\r\nconst MinClose = ({ minHeight, beforeDiv, afterDiv, divClick }) => {\r\n  const [minbgc, setMinbgc] = useState('')\r\n  const [rMin, setRMin] = useState(beforeDiv)\r\n\r\n  const minMouseEnter = () => {\r\n    setMinbgc('rgba(70, 70, 70, 0.5)')\r\n    setRMin(afterDiv)\r\n  }\r\n  const minMouseLeave = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n  }\r\n  const minClock = () => {\r\n    setMinbgc('')\r\n    setRMin(beforeDiv)\r\n    divClick()\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div id='mouseDiv'>\r\n      <div\r\n        className='min_icon'\r\n        onClick={minClock}\r\n        style={{ backgroundColor: minbgc, height: minHeight, width: minHeight }}\r\n        onMouseEnter={minMouseEnter}\r\n        onMouseLeave={minMouseLeave}\r\n      >\r\n        {rMin}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nMinClose.propTypes = {\r\n  minHeight: PropTypes.string,\r\n  imgWidth: PropTypes.number,\r\n  divClick: PropTypes.func,\r\n  afterDiv: PropTypes.func,\r\n  beforeDiv: PropTypes.func,\r\n\r\n\r\n}\r\nMinClose.defaultProps = {\r\n  minHeight: '40px',\r\n  imgWidth: px(20)\r\n\r\n}\r\n\r\nexport default MinClose",["607","608"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\unassigned\\index.jsx",["609","610","611","612","613"],"import React, { Component } from \"react\";\r\nimport { Table, Popconfirm, Modal, Input, message, Select, Spin } from \"antd\";\r\n\r\nimport Heard from \"./../../utils/heard/Heard\";\r\nimport del from \"./../../assets/images/del.png\";\r\nimport Close from \"./../../assets/img/close.png\";\r\nimport UploadImg from \"./../../utils/uploadImg/UploadImg\";\r\nimport { px, MTop } from \"./../../utils/px\";\r\nimport electronStore from \"./../../utils/electronStore\";\r\nimport MyModal from \"./../../utils/myModal/MyModal\";\r\n\r\nimport moment from \"moment\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nimport \"./index.less\";\r\nimport {\r\n  getPetExamByDoctorId, selectBreedBySpeciesId, listAllPetInfo, checkPatientId, addDeskPet, addAndSavePetExam, deletePetExamByExamId\r\n} from './../../api'\r\n\r\nlet storage = window.localStorage;\r\nconst { Option } = Select;\r\n\r\nexport default class Unassigned extends Component {\r\n  state = {\r\n    historyData: [], //列表的数据集合\r\n    units: \"℉\",\r\n    searchText: \"\", //搜索测试记录框输入的内容\r\n    serchExamData: [], //搜索到的测量记录\r\n    seleceEmergencies: {}, //分配的这条记录里的所有内容，比如温度、id、时间等\r\n    visible: false, //nodel框是否显示\r\n    imgId: -1, //上传后返回的图像id号\r\n\r\n    assignPatientId: \"\",\r\n    assignPetName: \"\",\r\n    assignOwnerName: \"\",\r\n    assignBreed: \"\",\r\n    assignBreedId: \"\",\r\n    assignPetAge: \"\",\r\n    assignPetWeight: \"\",\r\n    assignPetId: \"\",\r\n    assignPetImgUrl: \"\",\r\n    inputDisabled: false,\r\n    breedArr: [], //猫、狗品种集合\r\n    loading: false,\r\n    disabled: true, //model是否可拖拽\r\n    search: \"\", //分配宠物搜索框\r\n    petListData: [],\r\n    searchPetList: [],\r\n    assignVisible: false, //点击assign按钮后跳出的选择宠物的弹框\r\n    selectPetId: \"\",\r\n    modalLoading: false,//控制弹窗加载\r\n  };\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"big\");\r\n    let getBreed = electronStore.get(\"getBreed\");\r\n    if (getBreed) {\r\n      this.setState({\r\n        breedArr: getBreed,\r\n      });\r\n    }\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n    this._getEmergencyHistory();\r\n    const timer = setTimeout(() => {\r\n      this._getBreed();\r\n      clearTimeout(timer);\r\n    }, 3000);\r\n    this.gerAllPetMsg();\r\n    // let list = electronStore.get(\"doctorExam\");\r\n    // this.setState({\r\n    //   petListData: list || [],\r\n    // });\r\n  }\r\n  componentWillUnmount() {\r\n    message.destroy();\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    this.setState({});\r\n  };\r\n  //获取通过walk-In测量的信息，通过判断获取的数据中petId是否为空来展示数据\r\n  _getEmergencyHistory = () => {\r\n    //封装的日期排序方法\r\n    function ForwardRankingDate(data, p) {\r\n      for (let i = 0; i < data.length - 1; i++) {\r\n        for (let j = 0; j < data.length - 1 - i; j++) {\r\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\r\n            var temp = data[j];\r\n            data[j] = data[j + 1];\r\n            data[j + 1] = temp;\r\n          }\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    let historys = [];\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    getPetExamByDoctorId(storage.userId)\r\n      .then((res) => {\r\n        console.log(\"---res\", res);\r\n        if (res.flag === true) {\r\n          let datas = res.data;\r\n          for (let i = datas.length - 1; i >= 0; i--) {\r\n            if (datas[i].petId === null) {\r\n              let {\r\n                petId,\r\n                examId,\r\n                userId,\r\n                petVitalTypeId,\r\n                temperature,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                memo,\r\n                clinicalDatagroupId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                createTime,\r\n                clinicalDataEntity,\r\n              } = datas[i];\r\n              let day = moment().diff(moment(createTime), \"day\");\r\n              // console.log(day);\r\n              if (day > 3) {\r\n                continue;\r\n              }\r\n\r\n              let Tem = temperature;\r\n              try {\r\n                if (clinicalDataEntity) {\r\n                  Tem = temperature || clinicalDataEntity.data0;\r\n                }\r\n              } catch (error) {\r\n                console.log(\"抛出的异常\", error);\r\n              }\r\n              let str = {\r\n                clinicalDatagroupId,\r\n                createTime,\r\n                date: moment(createTime).format(\"MMM DD\"),\r\n                time: moment(createTime).format(\"hh:mm A\"),\r\n                temp: parseInt(Tem * 10) / 10,\r\n                placement: petVitalTypeId,\r\n                note: memo,\r\n                historyId: examId,\r\n                bodyConditionScore,\r\n                heartRate,\r\n                respiratoryRate,\r\n                referenceRectalTemperature,\r\n                furLength,\r\n                roomTemperature,\r\n                bloodPressure,\r\n                petId,\r\n                userId,\r\n                day,\r\n              };\r\n\r\n              historys.push(str);\r\n            }\r\n          }\r\n          //把所有数据拿完后做个排序\r\n          let historyData = ForwardRankingDate(historys, \"createTime\");\r\n          console.log(\"historyData:\", historyData);\r\n          this.setState({\r\n            historyData,\r\n            loading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            loading: false,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      });\r\n  };\r\n  //获取宠物类别\r\n  _getBreed = () => {\r\n    selectBreedBySpeciesId({ speciesId: 1 })\r\n      .then((res) => {\r\n        if (res.code === 0) {\r\n          let arr = [];\r\n          res.petlist.map((item, index) => {\r\n            let data = {\r\n              petSpeciesBreedId: item.petSpeciesBreedId,\r\n              breedName: item.breedName,\r\n              speciesId: 1,\r\n            };\r\n\r\n            arr.push(data);\r\n          });\r\n\r\n          selectBreedBySpeciesId({ speciesId: 2 })\r\n            .then((res) => {\r\n              if (res.code === 0) {\r\n                res.petlist.map((item, index) => {\r\n                  let data = {\r\n                    petSpeciesBreedId: item.petSpeciesBreedId,\r\n                    breedName: item.breedName,\r\n                    speciesId: 2,\r\n                  };\r\n                  arr.push(data);\r\n                });\r\n\r\n                console.log(\"----品种集合：\", arr);\r\n                electronStore.set(\"getBreed\", arr);\r\n                this.setState({\r\n                  breedArr: arr,\r\n                });\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n            });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  //获取所有宠物详情信息\r\n  gerAllPetMsg = () => {\r\n    let params = {\r\n      doctorId: storage.userId,\r\n      offset: 0,\r\n      size: 100,\r\n    }\r\n    if (storage.lastWorkplaceId) {\r\n      params.workplaceId = storage.lastWorkplaceId\r\n    }\r\n    if (storage.lastOrganization) {\r\n      params.organizationId = storage.lastOrganization\r\n    }\r\n    listAllPetInfo(params)\r\n      .then((res) => {\r\n        console.log('res: ', res);\r\n        if (res.flag === true && res.data) {\r\n          this.setState({\r\n            petListData: res.data,\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n  _search = (value = \"\") => {\r\n    let list = this.state.historyData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let note = list[i].note ? list[i].note.toLowerCase() : \"\";\r\n      if (`${note}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      serchExamData: searchData,\r\n    });\r\n  };\r\n  //搜索宠物\r\n  _searchPet = (value = \"\") => {\r\n    let list = this.state.petListData;\r\n    let searchData = [];\r\n    let keyWord = value || this.state.searchText;\r\n    for (let i = 0; i < list.length; i++) {\r\n      let name = list[i].petName ? list[i].petName.toLowerCase() : \"\";\r\n      let rfid = list[i].rfid ? list[i].rfid.toLowerCase() : \"\";\r\n      let patientId = list[i].patientId ? list[i].patientId.toLowerCase() : \"\";\r\n\r\n      if (\r\n        `${name}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${rfid}`.indexOf(keyWord.toLowerCase()) !== -1 ||\r\n        `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n      ) {\r\n        searchData.push(list[i]);\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      searchPetList: searchData,\r\n    });\r\n  };\r\n  draggleRef = React.createRef();\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n    });\r\n  };\r\n  //新增宠物取消新增事件\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignVisible: true,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      imgId: -1,\r\n    });\r\n  };\r\n  //新增宠物弹窗关闭事件\r\n  closeHandleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n      assignPatientId: \"\",\r\n      assignPetName: \"\",\r\n      assignOwnerName: \"\",\r\n      assignBreed: \"\",\r\n      assignBreedId: \"\",\r\n      assignPetAge: \"\",\r\n      assignPetWeight: \"\",\r\n      assignPetId: \"\",\r\n      assignPetImgUrl: \"\",\r\n      search: '',\r\n      selectPetId: '',\r\n      imgId: -1,\r\n    });\r\n  }\r\n  onStart = (event, uiData) => {\r\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\r\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\r\n    this.setState({\r\n      bounds: {\r\n        left: -targetRect?.left + uiData?.x,\r\n        right: clientWidth - (targetRect?.right - uiData?.x),\r\n        top: -targetRect?.top + uiData?.y,\r\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y),\r\n      },\r\n    });\r\n  };\r\n  _select = (value, data) => {\r\n    console.log(value, data); //value的值为id\r\n    this.setState({\r\n      assignBreedId: value,\r\n      assignBreed: data.children,\r\n    });\r\n  };\r\n  _modal = () => {\r\n    let that = this;\r\n    function getPetInfoByPatientId() {\r\n      switch (storage.identity) {\r\n        case \"1\":\r\n          console.log(\"我是vetspire查找\");\r\n          break;\r\n        case \"2\":\r\n          console.log(\"我是ezyVet查找\");\r\n          let params = {\r\n            animalId: that.state.assignPatientId,\r\n            organizationId: 4,\r\n          };\r\n          let paramsArray = [];\r\n          Object.keys(params).forEach((key) =>\r\n            paramsArray.push(key + \"=\" + params[key])\r\n          );\r\n          let url =\r\n            \"http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId\";\r\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\r\n          if (url.search(/\\?/) === -1) {\r\n            url = url + \"?\" + paramsArray.join(\"&\");\r\n          } else {\r\n            url = url + \"&\" + paramsArray.join(\"&\");\r\n          }\r\n          fetch(url, {\r\n            method: \"GET\",\r\n            headers: {\r\n              authorization: `Bearer ${storage.ezyVetToken}`,\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((res) => {\r\n              console.log(\"res\", res);\r\n              this.setState({\r\n                spin: false,\r\n              });\r\n              if (res.flag === true) {\r\n                //有宠物，进入1\r\n                let petArr = res.data;\r\n                if (petArr.length > 1) {\r\n                  petArr.sort(function (a, b) {\r\n                    return a.createTime > b.createTime ? 1 : -1;\r\n                  });\r\n                }\r\n                console.log(petArr);\r\n\r\n                let { petId } = petArr;\r\n                // assign(petId)\r\n              } else {\r\n                //没有宠物\r\n                message.error(\"There are no pets under this patientID\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              console.log(err);\r\n              message.error(\"There are no pets under this patientID\");\r\n            });\r\n\r\n          break;\r\n\r\n        case \"3\":\r\n          console.log(\"我是一般医生查找\");\r\n          let datas = {\r\n            patientId: that.state.assignPatientId,\r\n            doctorId: storage.userId\r\n          }\r\n          if (storage.lastWorkplaceId) {\r\n            datas.workplaceId = storage.lastWorkplaceId\r\n          }\r\n          if (storage.lastOrganization) {\r\n            datas.organizationId = storage.lastOrganization\r\n          }\r\n\r\n          checkPatientId(datas)\r\n            .then((res) => {\r\n              if (res.flag === true) {\r\n                that.setState({\r\n                  assignPetId: that.state.assignPatientId,\r\n                });\r\n                message.success(\"This patientID will work\");\r\n              } else {\r\n                that.setState({\r\n                  assignPetId: '',\r\n                });\r\n                message.error(\"The patientID already exists\");\r\n              }\r\n            })\r\n            .catch((err) => {\r\n              that.setState({\r\n                inputDisabled: false,\r\n                assignPetName: \"\",\r\n                assignOwnerName: \"\",\r\n                assignBreed: \"\",\r\n                assignBreedId: \"\",\r\n                assignPetAge: \"\",\r\n                assignPetWeight: \"\",\r\n                assignPetId: \"\",\r\n                assignPetImgUrl: \"\",\r\n              });\r\n              console.log(err);\r\n            });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    //将测量信息给分配宠物\r\n    const assignPet = () => {\r\n      let petMsg = {\r\n        petName: this.state.assignPetName,\r\n        age: this.state.assignPetAge,\r\n        petSpeciesBreedId: this.state.assignBreedId,\r\n        owner: this.state.assignOwnerName,\r\n        doctorId: storage.userId\r\n      }\r\n      if (this.state.imgId !== -1 && this.state.imgId) {\r\n        petMsg.imageId = this.state.imgId\r\n      }\r\n      if (this.state.assignPetWeight) {\r\n        petMsg.weight = parseFloat(this.state.assignPetWeight).toFixed(2)\r\n      }\r\n      if (storage.lastWorkplaceId) {\r\n        petMsg.workplaceId = storage.lastWorkplaceId\r\n      }\r\n      if (storage.lastOrganization) {\r\n        petMsg.organizationId = storage.lastOrganization\r\n      }\r\n      this.setState({\r\n        modalLoading: true,\r\n      })\r\n      addDeskPet(this.state.assignPatientId, petMsg)\r\n        .then((res) => {\r\n          if (res.flag === true) {\r\n            let parmes = {\r\n              petId: res.data.petId,\r\n              clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId,\r\n            };\r\n            addAndSavePetExam(that.state.seleceEmergencies.historyId, parmes)\r\n              .then((res) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                if (res.flag === true) {\r\n                  message.success(\"Assigned successfully\");\r\n                  that._getEmergencyHistory();\r\n                  that.setState({\r\n                    visible: false,\r\n                    assignPatientId: \"\",\r\n                    assignPetName: \"\",\r\n                    assignOwnerName: \"\",\r\n                    assignBreed: \"\",\r\n                    assignBreedId: \"\",\r\n                    assignPetAge: \"\",\r\n                    assignPetWeight: \"\",\r\n                    assignPetId: \"\",\r\n                    assignPetImgUrl: \"\",\r\n                    imgId: -1,\r\n                  });\r\n                } else {\r\n                  message.error(\"Assignment failed\");\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                this.setState({\r\n                  modalLoading: false,\r\n                })\r\n                console.log(err);\r\n                message.error(\"Assignment failed\");\r\n              });\r\n          } else {\r\n            this.setState({\r\n              modalLoading: false,\r\n            })\r\n            message.error('Failed to create a pet')\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          this.setState({\r\n            modalLoading: false,\r\n          })\r\n          console.log('err: ', err);\r\n          message.error('Failed to create a pet')\r\n        })\r\n    };\r\n    let { disabled, bounds, visible } = this.state;\r\n    let options = this.state.breedArr.map((d) => (\r\n      <Option key={d.petSpeciesBreedId}>{d.breedName}</Option>\r\n    ));\r\n    return (\r\n\r\n      <Modal\r\n        maskClosable={false}\r\n        wrapClassName={\"web1\"} //对话框外部的类名，主要是用来修改这个modal的样式的\r\n        destroyOnClose={true}\r\n        title={\r\n          <div\r\n            style={{\r\n              width: \"100%\",\r\n              cursor: \"move\",\r\n              height: \"30px\",\r\n              textAlign: \"center\",\r\n            }}\r\n            onMouseOver={() => {\r\n              if (disabled) {\r\n                this.setState({\r\n                  disabled: false,\r\n                });\r\n              }\r\n            }}\r\n            onMouseOut={() => {\r\n              this.setState({\r\n                disabled: true,\r\n              });\r\n            }}\r\n            onFocus={() => { }}\r\n            onBlur={() => { }}\r\n          // end\r\n          ></div>\r\n        }\r\n        visible={visible}\r\n        onOk={this.handleOk}\r\n        onCancel={this.closeHandleCancel}\r\n        modalRender={(modal) => (\r\n          <Draggable\r\n            disabled={disabled}\r\n            bounds={bounds}\r\n            onStart={(event, uiData) => this.onStart(event, uiData)}\r\n          >\r\n            <div ref={this.draggleRef}>{modal}</div>\r\n          </Draggable>\r\n        )}\r\n        footer={[]} // 设置footer为空，去掉 取消 确定默认按钮\r\n      >\r\n        <Spin spinning={this.state.modalLoading}>\r\n          <div id=\"unassignedModal\">\r\n            <div className=\"title\">\r\n              Assign <br />\r\n              Measurement to\r\n            </div>\r\n\r\n            <div className=\"addPhoto\">\r\n              <UploadImg\r\n                getImg={(val) => {\r\n                  this.setState({\r\n                    imgId: val.imageId,\r\n                  });\r\n                }}\r\n                imgUrl={this.state.assignPetImgUrl}\r\n                disable={this.state.inputDisabled}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Patient ID:</p>\r\n              <Input\r\n                value={this.state.assignPatientId}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPatientId: item.target.value,\r\n                  });\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.keyCode === 13) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                  if (e.keyCode === 27) {\r\n                    this.setState({\r\n                      assignPatientId: \"\",\r\n                    });\r\n                  }\r\n                }}\r\n                onBlur={() => {\r\n                  if (this.state.assignPatientId.length > 0) {\r\n                    getPetInfoByPatientId();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Pet Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"item\">\r\n              <p>Owner Name:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignOwnerName}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignOwnerName: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Breed:</p>\r\n              <div className=\"infoInput\">\r\n                <Select\r\n                  disabled={this.state.inputDisabled}\r\n                  showSearch\r\n                  style={{ width: \"100%\" }}\r\n                  bordered={false}\r\n                  value={this.state.assignBreed}\r\n                  placeholder=\"Search to Select\"\r\n                  optionFilterProp=\"children\"\r\n                  listHeight={256}\r\n                  onSelect={(value, data) => this._select(value, data)}\r\n                  filterOption={(input, option) =>\r\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >=\r\n                    0\r\n                  }\r\n                  filterSort={(optionA, optionB) =>\r\n                    optionA.children\r\n                      .toLowerCase()\r\n                      .localeCompare(optionB.children.toLowerCase())\r\n                  }\r\n                >\r\n                  {options}\r\n                </Select>\r\n              </div>\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Age:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetAge}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetAge: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"item\">\r\n              <p>Pet Weight:</p>\r\n              <Input\r\n                disabled={this.state.inputDisabled}\r\n                value={this.state.assignPetWeight}\r\n                bordered={false}\r\n                onChange={(item) => {\r\n                  this.setState({\r\n                    assignPetWeight: item.target.value,\r\n                  });\r\n                }}\r\n              />\r\n\r\n              <div className=\"unit\">{`kg`}</div>\r\n            </div>\r\n\r\n            <div className=\"btnF\">\r\n              <div className=\"btn\" onClick={this.handleCancel}>\r\n                Cancel\r\n              </div>\r\n              <div\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  if (this.state.assignPatientId === '') {\r\n                    message.error('patientID can not be empty!');\r\n                  } else if (this.state.assignPetId === '') {\r\n                    message.error(\"The patientID already exists\");\r\n                  } else if (this.state.assignPatientId !== '' && this.state.assignPetId !== '') {\r\n                    assignPet();\r\n                  }\r\n                }}\r\n              >\r\n                Apportion\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spin>\r\n      </Modal>\r\n    );\r\n  };\r\n  //获取当前组织所有宠物信息\r\n  _list = () => {\r\n    const { search, petListData, searchPetList } = this.state;\r\n    let data = search.length > 0 ? searchPetList : petListData;\r\n    let option = data.map((item, index) => {\r\n      let male = item.gender === 0 ? \"Female\" : \"Male\";\r\n      return (\r\n        <li\r\n          key={item.petId}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectPetId: item.petId,\r\n            });\r\n          }}\r\n        >\r\n          <div className=\"item\">\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {item.petName ? item.petName : 'unknown'}\r\n            </span>\r\n            <span\r\n              className=\"petName\"\r\n              style={{ margin: `${px(5)}px 0` }}\r\n            >{`,${item.age} yrs,`}</span>\r\n            <span className=\"petName\" style={{ margin: `${px(5)}px 0` }}>\r\n              {male}\r\n            </span>\r\n          </div>\r\n          {this.state.selectPetId === item.petId ? (\r\n            <span className=\"search\">&#xe614;</span>\r\n          ) : null}\r\n        </li>\r\n      );\r\n    });\r\n    return <ul>{option}</ul>;\r\n  };\r\n\r\n  render() {\r\n    let { loading, disabled, historyData, searchText, serchExamData } =\r\n      this.state;\r\n    const _del = (key, record) => {\r\n      deletePetExamByExamId(key, '')\r\n        .then(\r\n          (res) => {\r\n            if (res.flag === true) {\r\n              console.log(\"删除成功\");\r\n              const historyData = [...this.state.historyData];\r\n              console.log(historyData);\r\n              this.setState({\r\n                historyData: historyData.filter((item) => item.historyId !== key),\r\n              });\r\n            } else {\r\n              console.log(\"删除失败\");\r\n            }\r\n          }\r\n        );\r\n    };\r\n\r\n    const columns = [\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"operation\",\r\n        key: \"operation\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                margin: `${px(8)}px 0`,\r\n              }}\r\n            >\r\n              <Popconfirm\r\n                title=\"Sure to delete?\"\r\n                onConfirm={() => _del(record.historyId, record)}\r\n              >\r\n                <img src={del} alt=\"\" width={25} style={{ marginRight: \"8px\" }} />\r\n              </Popconfirm>\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Date\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Time\",\r\n        dataIndex: \"time\",\r\n        key: \"time\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ textAlign: \"center\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \" Pet Description\",\r\n        dataIndex: \"description\",\r\n        key: \"description\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Species\",\r\n        dataIndex: \"species\",\r\n        key: \"species\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n      {\r\n        title: \"Note\",\r\n        dataIndex: \"note\",\r\n        key: \"note\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return <p style={{ width: \"70px\" }}>{text}</p>;\r\n        },\r\n      },\r\n\r\n      {\r\n        title: \"\",\r\n        dataIndex: \"assign\",\r\n        key: \"assign\",\r\n        ellipsis: true,\r\n        align: \"center\",\r\n        render: (text, record, index) => {\r\n          return (\r\n            <div\r\n              className=\"assign\"\r\n              style={{\r\n                fontSize: px(16),\r\n                paddingTop: px(5),\r\n                paddingBottom: px(5),\r\n              }}\r\n              onClick={() => {\r\n                this.setState({\r\n                  assignVisible: true,\r\n                  seleceEmergencies: record,\r\n                });\r\n              }}\r\n            >\r\n              Assign\r\n            </div>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    let tableData = searchText.length > 0 ? serchExamData : historyData;\r\n    return (\r\n      <div id=\"unassigned\">\r\n        <Heard />\r\n        <div className=\"body\">\r\n          <div\r\n            className=\"title\"\r\n            style={{\r\n              marginTop: px(30),\r\n              fontSize: px(30),\r\n              marginBottom: px(40),\r\n            }}\r\n          >\r\n            Unassigned Measurements\r\n          </div>\r\n          <div className=\"input\" style={{ marginBottom: px(10) }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"&#xe628; Search Pet Name or Description\"\r\n              value={this.state.searchText}\r\n              onChange={(e) => {\r\n                this.setState({\r\n                  searchText: e.target.value,\r\n                });\r\n                this._search(e.target.value);\r\n              }}\r\n              onKeyUp={(e) => {\r\n                if (e.keyCode === 13) {\r\n                  this._search();\r\n                }\r\n                if (e.keyCode === 27) {\r\n                  this.setState({\r\n                    searchText: \"\",\r\n                  });\r\n                }\r\n              }}\r\n            />\r\n            <div\r\n              className=\"searchBtn\"\r\n              style={{ height: px(35), fontSize: px(18) }}\r\n              onClick={this._search}\r\n            >\r\n              <p>Search</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table\">\r\n            <Table\r\n              style={{\r\n                width: \"95%\",\r\n                height: MTop(550),\r\n              }}\r\n              loading={loading}\r\n              columns={columns}\r\n              dataSource={tableData}\r\n              rowKey={(columns) => columns.historyId}\r\n              pagination={false}\r\n              scroll={{\r\n                y: MTop(500),\r\n              }}\r\n            />\r\n          </div>\r\n          {this._modal()}\r\n        </div>\r\n        {\r\n          this.state.assignVisible && (\r\n            <MyModal\r\n              visible={this.state.assignVisible}\r\n              element={\r\n                <div className=\"myfindOrg\">\r\n                  <div className=\"orgHeard\">\r\n                    <div className=\"titleicon\" style={{ marginTop: px(5) }}>\r\n                      <div\r\n                        onClick={() => {\r\n                          this.setState({\r\n                            assignVisible: false,\r\n                            search: '',\r\n                            selectPetId: '',\r\n                          });\r\n                        }}\r\n                      >\r\n                        <img src={Close} alt=\"\" style={{ width: px(25) }} />\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      className=\"text\"\r\n                      onMouseOver={() => {\r\n                        if (disabled) {\r\n                          this.setState({\r\n                            disabled: false,\r\n                          });\r\n                        }\r\n                      }}\r\n                      onMouseOut={() => {\r\n                        this.setState({\r\n                          disabled: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      Assign Measurement\r\n                    </div>\r\n                    <div className=\"searchBox\">\r\n                      <Input\r\n                        placeholder=\" &#xe61b; Search Pet\"\r\n                        bordered={false}\r\n                        allowClear={true}\r\n                        value={this.state.search}\r\n                        onChange={(item) => {\r\n                          this.setState({\r\n                            search: item.target.value,\r\n                          });\r\n                          this._searchPet(item.target.value);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"list\">{this._list()}</div>\r\n                  <div className=\"foot\">\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        this.setState({\r\n                          assignVisible: false,\r\n                          visible: true,\r\n                        });\r\n                      }}\r\n                    >\r\n                      <p>+Add New Pet</p>\r\n                    </div>\r\n                    <div\r\n                      className=\"btnn flex\"\r\n                      style={{ height: px(45) }}\r\n                      onClick={() => {\r\n                        if (!this.state.selectPetId) {\r\n                          message.error(\"Please select a pet to assign\");\r\n                        } else {\r\n                          let { selectPetId, seleceEmergencies, historyData } =\r\n                            this.state;\r\n                          let parmes = {\r\n                            petId: selectPetId,\r\n                            clinicalDatagroupId:\r\n                              seleceEmergencies.clinicalDatagroupId,\r\n                          };\r\n                          console.log(\"分配的数据信息\", parmes);\r\n                          addAndSavePetExam(seleceEmergencies.historyId, parmes)\r\n                            .then((res) => {\r\n                              console.log(\"----------\", res);\r\n                              if (res.flag === true) {\r\n                                console.log(\"分配成功\");\r\n                                message.success(\"Assigned successfully\");\r\n                                let arr = [];\r\n                                for (let i = 0; i < historyData.length; i++) {\r\n                                  const element = historyData[i];\r\n                                  if (\r\n                                    seleceEmergencies.clinicalDatagroupId !==\r\n                                    element.clinicalDatagroupId\r\n                                  ) {\r\n                                    arr.push(element);\r\n                                  }\r\n                                }\r\n\r\n                                this.setState({\r\n                                  assignVisible: false,\r\n                                  historyData: arr,\r\n                                });\r\n                              } else {\r\n                                message.error(\"Assignment failed\");\r\n                              }\r\n                            })\r\n                            .catch((err) => {\r\n                              console.log(err);\r\n                              message.error(\"Assignment failed\");\r\n                            });\r\n                        }\r\n                      }}\r\n                    >\r\n                      <p>Confirm</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                // </Spin>\r\n              }\r\n            />\r\n          )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n",["614","615"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\petTable\\index.jsx",["616","617","618","619","620","621","622","623"],"import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { ConfigProvider, Table } from 'antd';\nimport { useHistory } from 'react-router-dom'\nimport moment from 'moment'\n\nimport { mTop, px, MTop, pX } from '../../utils/px';\nimport './petTable.less'\nimport { petDetailInfoFun, setMenuNum, } from '../../store/actions';\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\n\n\n\n\n\nconst PetTable = ({ petListArr, loading, bodyHeight, petDetailInfoFun, setMenuNum, resetPetList, type }) => {\n  let history = useHistory()\n  const [heardSearchText, setHeardSearchText] = useState('')\n  //搜索后展示的宠物列表\n  const [searchData, setSearchData] = useState([])\n  const _search = (value) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\n    let keyWord = value || heardSearchText\n    /**\n     * 使用indexof方法实现模糊查询\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n     *\n     * list         原数组\n     * keyWord      查询关键词\n     * searchData   查询的结果\n     *\n     * toLowerCase（）方法：将字符串统一转成小写\n     * toUpperCase（）方法：将字符串统一转成大写\n     *\n     */\n    let list = petListArr\n    let searchData = []\n    for (let i = 0; i < list.length; i++) {\n      let petName = list[i].petName.toLowerCase() || ''\n      let patientId = list[i].patientId.toLowerCase() || ''\n      let rfid = list[i].rfid || ''\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${rfid}`.indexOf(keyWord) !== -1\n      ) {\n        searchData.push(list[i])\n      }\n    }\n    console.log(searchData);\n    setSearchData(searchData)\n  }\n\n  const columns = [\n    {\n      title: 'Time',\n      dataIndex: 'insertedAt',\n      key: 'insertedAt',\n      width: '16%',\n      // ...this.getColumnSearchProps('insertedAt'),\n      render: (text, record, index) => {\n        let chazhi = new Date().getTimezoneOffset()\n        // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\n        let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\n        let time = moment(parseInt(text) * 1000).format('hh:mm a');\n        let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\n        // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\n        return (\n          <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\n            <p>{`${year}`}</p>\n            <p>{`${time}`}</p>\n          </div>\n        )\n      },\n\n    },\n    {\n      title: 'Pet ID',\n      dataIndex: 'patientId',\n      key: 'patientId',\n      width: '15%',\n      // ...this.getColumnSearchProps('patientId'),\n    },\n    {\n      title: 'Pet Name',\n      dataIndex: 'petName',\n      key: 'petName',\n      width: '15%',\n      // ...this.getColumnSearchProps('petName'),\n    },\n    {\n      title: 'Owner',\n      dataIndex: 'owner',\n      key: 'owner',\n      width: '15%',\n      // ...this.getColumnSearchProps('owner'),\n    },\n    {\n      title: 'Breed',\n      dataIndex: 'breed',\n      key: 'breed',\n      width: '15%',\n      // ...this.getColumnSearchProps('breed'),\n      render: (text, record, index) => {\n        if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\n          return (\n            <p style={{ textAlign: 'center' }}>{'unknown'}</p>\n          )\n        } else {\n          return (\n            <p style={{ textAlign: 'center' }}>{text}</p>\n          )\n        }\n\n      }\n    },\n\n    {\n      title: 'Gender',\n      dataIndex: 'gender',\n      key: 'gender',\n      width: '12%',\n      // width: '30%',\n      // ...this.getColumnSearchProps('gender'),\n    },\n    {\n      title: 'Age',\n      dataIndex: 'age',\n      key: 'age',\n      width: '12%',\n      // width: '20%',\n      render: (text, record, index) => {\n        // console.log(text);\n\n        if (`${text}` === 'NaN') {\n          return (\n            <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\n          )\n        } else {\n          return (\n            <p style={{ textAlign: 'center' }}>{text}</p>\n          )\n        }\n\n      }\n    },\n\n\n  ];\n  const noData = () => {\n    return (\n      <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\n        <p style={{ fontSize: px(22) }}> {`No Pets Scheduled &`}</p>  &nbsp;&nbsp;\n        <a style={{ fontSize: px(22) }} href=\"#\"\n          onClick={(e) => {\n            console.log('我要去添加宠物1111');\n            try {\n              if (type === 'scheduled') {\n                setMenuNum('AddScheduledPet')\n              } else {\n                setMenuNum('AddPet')\n              }\n            } catch (error) {\n              console.log('错误信息', error);\n            }\n            e.preventDefault();\n\n          }}\n\n        >{`Schedule a Pet`}</a>\n      </div>\n    )\n  }\n  return (\n    <div className='petTable' >\n      <div className=\"pet_table_heard\">\n        <div className=\"search\" style={{ height: px(28) }}>\n          <input\n            type=\"text\"\n            placeholder=\"&#xe61b;    search\"\n            value={heardSearchText}\n            onChange={(e) => {\n              setHeardSearchText(e.target.value)\n              _search(e.target.value)\n            }\n            }\n\n          />\n        </div>\n\n        <div className=\"walkBtn1\" style={{ marginRight: px(28) }}>\n          <div\n            className=\"walkbtnBox\"\n            style={{ height: px(28), width: px(80) }}\n            onClick={_search}\n          >\n            <div className=\"walkText\">Search</div>\n          </div>\n        </div>\n\n      </div>\n      <div className=\"heard2 flex\" style={{ marginBottom: px(8), marginLeft: px(20) }}>\n\n        <div className=\"sort flex\" >\n          <p style={{ fontSize: px(16), marginRight: px(10) }}>Sort By:</p>\n\n          <SelectionBox\n            listArr={[\n              { key: 'time', value: 'Time' },\n              { key: 'petid', value: 'Pet ID' },\n              { key: 'owner', value: 'Owner' },\n              { key: 'breed', value: 'Breed' },\n              { key: 'petname', value: 'Pet Name' },\n              { key: 'gender', value: 'Gender' },\n            ]}\n            clickItem={(item) => {\n              let petList = [].concat(petListArr)\n              switch (item.key) {\n                case 'time':\n                  petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n                  break;\n                case 'petid':\n                  petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n                  break;\n                case 'owner':\n                  petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n                  break;\n                case 'breed':\n                  petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n                  break;\n                case 'petname':\n                  petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n                  break;\n                case 'gender':\n                  petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n                  break;\n              }\n              resetPetList(petList)\n\n            }}\n          />\n        </div>\n\n\n\n      </div>\n      <div className=\"table\" >\n        <ConfigProvider renderEmpty={noData}>\n          <Table\n            style={{\n              padding: 0,\n              margin: 0,\n              width: '95%',\n            }}\n            rowKey={data => data.id}\n            bordered={false}\n            columns={columns}\n            dataSource={(heardSearchText.length === 0) ? petListArr : searchData}\n            loading={loading}\n            locale={{ filterConfirm: <div>111</div> }}\n            pagination={false}\n            scroll={{\n              // y: px(480),\n              y: '80 %'\n            }}\n            onRow={(record) => {\n              return {\n                onClick: (event) => {\n                  setMenuNum('1')\n                  petDetailInfoFun(record)\n                }, // 点击行\n              };\n            }}\n            className=\"allPetTable\"\n          />\n        </ConfigProvider>\n      </div>\n\n    </div >\n\n  )\n}\n\n\nPetTable.propTypes = {\n  petListArr: PropTypes.array,\n  resetPetList: PropTypes.func,\n}\n//默认值\nPetTable.defaultProps = {\n  bodyHeight: 0,\n  petListArr: [],\n  resetPetList: () => { },\n}\nexport default connect(\n  state => ({\n\n  }),\n  { petDetailInfoFun, setMenuNum, }\n)(PetTable)\n",["624","625"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\userType.js",[],["626","627"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\user.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\myAccount\\index.jsx",["628","629","630","631","632"],"import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { } from \"../../store/actions\";\r\nimport {\r\n  Layout,\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Radio,\r\n  Col,\r\n  Row,\r\n  Checkbox,\r\n  Select,\r\n  message,\r\n} from \"antd\";\r\n\r\nimport changePhoto from '../../assets/images/changePhoto.png';\r\n\r\nimport { px, mTop } from \"../../utils/px\";\r\nimport countryList from '../../utils/areaCode/country';\r\nimport Avatar from '../../components/avatar/Avatar'\r\nimport { getUserInfoByUserId, update } from '../../api'\r\n\r\nimport PropTypes from 'prop-types';\r\nimport _ from \"lodash\";\r\n\r\nimport \"./index.less\";\r\n\r\nconst MyAccount = ({ bodyHeight }) => {\r\n  let storage = window.localStorage;\r\n  const [form] = Form.useForm();\r\n  const { Option } = Select;\r\n  const [imageId, setImageId] = useState();\r\n  const [petUrl, setPetUrl] = useState();\r\n  const [imgUrl, setImgUrl] = useState();\r\n  const [country, setCountry] = useState('US');\r\n  const [countryArr, setCountryArr] = useState();\r\n  const [infoData, setInfoDate] = useState();\r\n\r\n  const onFinish = (values) => {\r\n    let array = ['0', '0', '0', '0', '0', '0', '0', '0', '0', '0', '0'];\r\n    for (let index = 0; index < _.size(values.domain); index++) {\r\n      array[_.toNumber(values.domain[index])] = '1';\r\n    }\r\n    let reg = new RegExp(',', \"g\");\r\n    let res = _.toString(array).replace(reg, '');\r\n    let data = {\r\n      ...values,\r\n      imageId: imageId,\r\n      domain: res,\r\n      userId: storage.userId\r\n    };\r\n    update(data)\r\n      .then((res) => {\r\n        if (res.msg === 'success') {\r\n          message.success('The user information is updated successfully');\r\n        } else {\r\n          message.error('Description Failed to update user information');\r\n        }\r\n      })\r\n  };\r\n\r\n  useEffect(() => {\r\n    let arr = countryList.map(item => item.locale)\r\n    arr.sort(function (a, b) {\r\n      return a.localeCompare(b)\r\n    })\r\n    setCountryArr(arr);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getUserInfoByUserId(storage.userId)\r\n      .then((res) => {\r\n        if (res.flag === true) {\r\n          let newData = {\r\n            ...res.data,\r\n            domain: _.toArray(res.data.domain)\r\n\r\n          }\r\n          let arr = [];\r\n          for (let index = 0; index < _.size(newData.domain); index++) {\r\n            if (newData.domain[index] === '1') {\r\n              arr.push(_.toString(index));\r\n            }\r\n          }\r\n          newData.domain = arr;\r\n          form.setFieldsValue(newData);\r\n          setInfoDate(newData);\r\n          setImgUrl(res.data?.userImage?.url);\r\n        }\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Layout className=\"myAccountBox\" style={{ height: bodyHeight }}>\r\n      <div className=\"headerContentBox\" style={{ background: \"#fff\", position: 'relative' }}>\r\n        <div style={{\r\n          height: '100%',\r\n          backgroundColor: '#FFFFFF',\r\n          borderBottom: '2px solid #979797',\r\n          display: 'flex'\r\n        }}>\r\n          <span className=\"headerTitle\">My Account</span>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Form\r\n          form={form}\r\n          layout=\"vertical\"\r\n          onFinish={onFinish}\r\n          className=\"accountForm\"\r\n        >\r\n          <Row>\r\n            <Col flex={1} className=\"leftColBox\">\r\n              <Form.Item valuePropName=\"fileList\" name=\"imageId\" className=\"imageFormItem\">\r\n                <div style={{ display: 'grid', justifyItems: 'center', alignItems: 'center' }}>\r\n                  <Avatar\r\n                    init={\r\n                      <div className=\"ciral\">\r\n                        <img src={imgUrl ? imgUrl : changePhoto} alt=\"\" id=\"touxiang\" height=\"300px\" />\r\n                        <p style={{ fontSize: px(14), height: mTop(35) }}>Change Photo</p>\r\n                      </div>\r\n                    }\r\n                    getinfo={(val) => {\r\n                      if (val) {\r\n                        setImageId(val);\r\n                      }\r\n\r\n                    }}\r\n                    getAllInfo={(val) => {\r\n                      if (val.url) {\r\n                        setPetUrl(val.url);\r\n                      }\r\n                    }}\r\n                  />\r\n                </div>\r\n              </Form.Item>\r\n              <Form.Item label=\"Email\" name=\"email\">\r\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col flex={1} className=\"rightColBox\">\r\n              <Form.Item label=\"FirstName\" name=\"firstName\">\r\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\r\n              </Form.Item>\r\n              <Form.Item label=\"LastName\" name=\"lastName\">\r\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\r\n              </Form.Item>\r\n              <Form.Item label=\"Phone\" name=\"phone\">\r\n                <Input placeholder=\"input placeholder\" bordered={false} className=\"accountInput\" />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Form.Item className=\"addressFormItem\" label=\"Address\">\r\n            <div style={{ display: 'flex' }}>\r\n              <Form.Item name=\"address1\" style={{ marginRight: px(16) }}>\r\n                <Input placeholder=\"address1\" bordered={false} className=\"accountInput\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"address2\" style={{ marginRight: px(16) }}>\r\n                <Input placeholder=\"address2\" bordered={false} className=\"accountInput\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"city\" style={{ marginRight: px(16) }}>\r\n                <Input placeholder=\"city\" bordered={false} className=\"accountInput\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"state\" style={{ marginRight: px(16) }}>\r\n                <Input placeholder=\"state\" bordered={false} className=\"accountInput\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"zipcode\" style={{ marginRight: px(16) }}>\r\n                <Input placeholder=\"zipcode\" bordered={false} className=\"accountInput\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"country\">\r\n                <Select\r\n                  showSearch\r\n                  style={{ width: 100, borderBottom: '1px solid rgba(216,216,216,1)' }}\r\n                  bordered={false}\r\n                  optionFilterProp=\"children\"\r\n                  defaultValue=\"US\"\r\n                  // onChange={onChange}\r\n                  onSelect={(val) => { setCountry(val) }}\r\n                  filterOption={(input, option) => option.children.toLowerCase().includes(input.toLowerCase())}\r\n                // open\r\n                // dropdownClassName=\"addressSelectBox\"\r\n                >\r\n                  {_.map(countryArr, (item, index) => (\r\n                    <Option key={index} value={item}>{item}</Option>\r\n                  ))}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n          </Form.Item>\r\n          <Form.Item className=\"expertiseFormItem\" label=\"Areas of Expertise\" name=\"domain\">\r\n            <Checkbox.Group>\r\n              <Row>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='0'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Dogs\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='1'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Cats\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='2'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Small Pets\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='3'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Nutrition\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='4'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Surgery\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='5'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Zoo\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='6'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Wildlife\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='7'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Cardiology\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='8'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Neurology\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='9'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Anaesthesia\r\n                  </Checkbox>\r\n                </Col>\r\n                <Col span={6}>\r\n                  <Checkbox\r\n                    value='10'\r\n                    style={{\r\n                      lineHeight: '32px',\r\n                    }}\r\n                  >\r\n                    Other\r\n                  </Checkbox>\r\n                </Col>\r\n              </Row>\r\n            </Checkbox.Group>\r\n          </Form.Item>\r\n          <Form.Item className=\"btnFormItem\">\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <Button type=\"primary\" htmlType=\"submit\" shape=\"round\" size=\"large\" style={{ width: px(260) }}>Save Changes</Button>\r\n            </div>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nMyAccount.propTypes = {\r\n  bodyHeight: PropTypes.number,\r\n  devicesTypeList: PropTypes.array\r\n}\r\n\r\nexport default connect(\r\n  (state) => ({}),\r\n)(MyAccount);\r\n",["633","634"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\Biggie.jsx",["635","636","637","638"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\temperaturePage\\components\\linkEquipment.jsx",["639","640","641","642","643","644","645","646"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Image, Layout, Button } from \"antd\";\nimport { connect } from \"react-redux\";\n\nimport PressButton_Pro from \"./../../../assets/img/PressButton_Pro.png\";\nimport AxillaryPlacement from \"./../../../assets/img/AxillaryPlacement.png\"; //腋温底部图片\nimport EarPlacement from \"./../../../assets/img/EarPlacement.png\"; //耳温底部图片\nimport RectalPlacement from \"./../../../assets/img/RectalPlacement.png\"; //肛温底部图片\nimport Standing_Dog from \"./../../../assets/img/Standing_Dog.png\";\nimport Standing_Cat from \"./../../../assets/img/Standing_Cat.png\";\nimport Sitting_Dog from \"./../../../assets/img/Sitting_Dog.png\";\nimport Sitting_Cat from \"./../../../assets/img/Sitting_Cat.png\";\nimport Laying_Dog from \"./../../../assets/img/Laying_Dog.png\";\nimport Laying_Cat from \"./../../../assets/img/Laying_Cat.png\";\nimport { px } from \"../../../utils/px\";\n\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n} from \"../../../store/actions\";\nimport _ from \"lodash\";\nimport HistoryTable from \"../../../components/historyTable\";\nimport moment from \"moment\";\nimport \"./linkEquipment.less\";\n\nconst { Content, Header } = Layout;\n\nconst LinkEquipment = ({ petMessage, hardwareMessage }) => {\n  let { mellaConnectStatus, mellaMeasurePart } = hardwareMessage;\n  let imageMap = [\n    Standing_Dog,\n    Standing_Cat,\n    Sitting_Dog,\n    Sitting_Cat,\n    Laying_Dog,\n    Laying_Cat,\n  ];\n\n  const [type, setType] = useState(false); //是否显示轮播图\n  const [carouselIndex, setCarouselIndex] = useState(0); //轮播图下标\n  const [title, setTitle] = useState('Ready, place under foreleg')//准备测量的文字\n  const saveCallBack = useRef();\n  const callBack = () => {\n    setCarouselIndex(carouselIndex + 1);\n  };\n\n  //切换图片\n  const checkImage = () => {\n    if (mellaMeasurePart === \"腋温\") {\n      return AxillaryPlacement;\n    } else if (mellaMeasurePart === \"耳温\") {\n      return EarPlacement;\n    } else {\n      return RectalPlacement;\n    }\n  };\n  //点击进入轮播图\n  const clickIntoTip = () => {\n    setType(true);\n  };\n  //小圆点点击事件\n  const clickPoint = (index) => {\n    setCarouselIndex(index);\n  };\n\n  useEffect(() => {\n    saveCallBack.current = callBack;\n    if (carouselIndex === 6) {\n      setCarouselIndex(0);\n    }\n  }, [carouselIndex]);\n\n  useEffect(() => {\n    const tick = () => {\n      saveCallBack.current();\n    };\n    let timer = null;\n    if (type && mellaConnectStatus === \"connected\") {\n      timer = setInterval(tick, 1500);\n    }\n    if (mellaConnectStatus !== \"connected\") {\n      setType(false);\n      setCarouselIndex(0);\n      clearInterval(timer);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [type, mellaConnectStatus]);\n\n  useEffect(() => {\n    if (mellaMeasurePart === '腋温') {\n      setTitle('Ready, place under foreleg');\n    } else if (mellaMeasurePart === '耳温') {\n      setTitle('Ready, place in ear');\n    } else {\n      setTitle('Ready, place in anus');\n    }\n  }, [mellaMeasurePart])\n\n  return (\n    <>\n      <Content className={\"temperatureContentBox\"}>\n        {_.isEqual(mellaConnectStatus, \"disconnected\") ? (\n          <>\n            <div className=\"startBox\">\n              <p className=\"startTitle\">\n                Turn on your\n                <br />\n                Mella Thermometer\n                <br />\n                or Pair New Mella\n              </p>\n              <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <img src={PressButton_Pro} className=\"PressButton_Pro\" />\n              </div>\n            </div>\n            <div className=\"tableBox\">\n              <HistoryTable tableColumnType='temperature' />\n            </div>\n          </>\n        ) : (\n          <>\n            <div className=\"startBox\">\n              <p className=\"startTitle\">\n                {!type\n                  ? title\n                  : \"Place Under Foreleg Standing\"}\n              </p>\n              {!type ? (\n                <>\n                  <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    <img src={checkImage()} className=\"checkImages\"></img>\n                  </div>\n\n                  {mellaMeasurePart === \"腋温\" ? (\n                    <div className=\"bottomTip1\">\n                      <div className=\"bottomTip1_1\">\n                        <p className=\"tipTitle\" onClick={() => clickIntoTip()}>\n                          Need Help With Accurate Placement On Pet?\n                        </p>\n                      </div>\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                </>\n              ) : (\n                <>\n                  <div className=\"carouselBox\">\n                    {_.map(imageMap, (item, index) => {\n                      return (\n                        <img\n                          key={index}\n                          className=\"contentImgStyle\"\n                          src={item}\n                          style={{\n                            display: carouselIndex === index ? \"\" : \"none\",\n                          }}\n                        />\n                      );\n                    })}\n                  </div>\n                  <div className=\"dotBox\">\n                    <ul className=\"dotList\">\n                      {_.map(imageMap, (item, index) => {\n                        return (\n                          <li key={index}>\n                            <Button\n                              className=\"dotItem\"\n                              onClick={() => clickPoint(index)}\n                              style={{\n                                background:\n                                  carouselIndex === index\n                                    ? \"#0a0a0a\"\n                                    : \"#bdbaba\",\n                              }}\n                            >\n                              {index}\n                            </Button>\n                          </li>\n                        );\n                      })}\n                    </ul>\n                  </div>\n                </>\n              )}\n            </div>\n          </>\n        )}\n      </Content>\n    </>\n  );\n};\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n  }\n)(LinkEquipment);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\home\\index.jsx",["647","648"],"import React, { Component, } from 'react'\r\nimport {\r\n  Button,\r\n  message\r\n} from 'antd';\r\n\r\nimport temporaryStorage from '../../utils/temporaryStorage'\r\nimport { px, mTop, win, timerFun } from '../../utils/px'\r\nimport MinClose from '../../utils/minClose/MinClose';\r\nimport { version } from '../../utils/appversion';\r\n\r\nimport logo from '../../assets/images/mella.png'\r\n\r\nimport './index.less';\r\n\r\nlet storage = window.localStorage;\r\n//定义变量:连续点击了几次logo\r\nlet logoClick = 0;\r\n//定义变量:点击logo的时间\r\nlet logoTime = 0;\r\nexport default class Home extends Component {\r\n  state = {\r\n    imgurl: '',\r\n    size: { width: 0, height: 0 }\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    timerFun()\r\n    ipcRenderer.send('close-loading-window', 1)\r\n    ipcRenderer.send('small', win())\r\n    storage.measurepatientId = '';\r\n    temporaryStorage.logupVetInfo = {}\r\n    this.test()\r\n  }\r\n  resize = (e) => {\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    window.removeEventListener('resize', this.resize);\r\n\r\n  }\r\n  test = async () => {\r\n    console.log('---', window.navigator.serial);\r\n    // const port = await navigator.serial.requestPort();\r\n  }\r\n\r\n\r\n  _createAccount = () => {\r\n    this.props.history.push('/uesr/logUp/VetPrifile')\r\n\r\n    // this.props.history.push('/uesr/logUp/JoinOrganizationByOption')\r\n\r\n  }\r\n  _test = () => {\r\n    console.log('点击');\r\n    console.log(navigator);\r\n    console.log(navigator.userAgent);\r\n    console.log('---------------------------');\r\n  }\r\n  _openUtils = () => {\r\n    console.log('点击来了', logoClick);\r\n    if (new Date() - logoTime > 500) {\r\n      logoClick = 0;\r\n      logoTime = new Date();\r\n\r\n    } else {\r\n      logoClick++;\r\n      logoTime = new Date();\r\n      if (logoClick >= 8) {\r\n        logoClick = 0;\r\n\r\n        let ipcRenderer = window.electron.ipcRenderer\r\n        ipcRenderer.send('openDevTools', true)\r\n      }\r\n    }\r\n\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <div id=\"home\">\r\n        {/* <MaxMin\r\n                    onClick={() => { this.props.history.push('/') }}\r\n                /> */}\r\n        <div className=\"daohang\" style={{ paddingTop: px(10), paddingRight: px(20) }}>\r\n          <MinClose />\r\n        </div>\r\n        <div className='flex refresh' style={{ alignItems: 'flex-end', paddingRight: px(20) }}>\r\n          <div className='flex' style={{ flexDirection: 'row', paddingTop: px(20), paddingRight: px(18), color: '#700B33', cursor: 'pointer' }}>\r\n\r\n            V{version}\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"heard\" >\r\n          <div\r\n\r\n            onClick={this._openUtils}\r\n            className=\"logo\"\r\n\r\n          >\r\n            <img\r\n              src={logo}\r\n              alt=\"\"\r\n            // style={{ marginTop: mTop(100), marginBottom: mTop(100), width: px(300) }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"button\" style={{ marginBottom: px(25) }}>\r\n          <Button\r\n            // style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={() => { this.props.history.push('/page11') }}\r\n            className=\"siginInBtn\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n\r\n        </div>\r\n        <p className=\"text\" style={{ marginTop: mTop(5), marginBottom: mTop(5) }}>New to Mella?</p>\r\n        <div className=\"create\" style={{ marginBottom: mTop(20), marginTop: px(25) }}>\r\n          <Button\r\n            // style={{ width: px(300), fontSize: px(20), height: px(300 / 6.5) }}\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size='large'\r\n            onClick={this._createAccount}\r\n            className=\"createBtn\"\r\n          >\r\n            Create an Account\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\connectWorkplace\\index.jsx",["649","650","651","652"],"import React, { Component } from \"react\";\r\nimport { Select } from \"antd\";\r\nimport Heart from \"../../utils/heard/Heard\";\r\nimport { px } from \"../../utils/px\";\r\nimport \"./index.less\";\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class ConnectWorkplace extends Component {\r\n  state = {\r\n    orgArr: [],\r\n    workplaceJson: {},\r\n    connectionKey: \"\",\r\n    selectOrgId: -1,\r\n    selectRoleId: \"\",\r\n  };\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    ipcRenderer.send(\"big\");\r\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\r\n\r\n    let userWorkplace = [];\r\n    try {\r\n      userWorkplace = JSON.parse(storage.userWorkplace) || [];\r\n    } catch (error) {\r\n      console.log(\"字符串转对象失败\", error);\r\n    }\r\n    let orgArr = [],\r\n      workplaceJson = {};\r\n    // console.log('存储的工作场所和组织id', storage.lastWorkplaceId, storage.lastOrganization);\r\n    for (let i = 0; i < userWorkplace.length; i++) {\r\n      let element = userWorkplace[i];\r\n      // console.log('每一项的值：', element);\r\n      if (element.organizationEntity && element.workplaceEntity) {\r\n        let { organizationEntity, workplaceEntity, roleId } = element;\r\n        const { name, organizationId, connectionKey } = organizationEntity;\r\n        const { workplaceName, workplaceId } = workplaceEntity;\r\n\r\n        if (`${workplaceId}` === storage.lastWorkplaceId) {\r\n          this.setState({\r\n            workplaceName,\r\n            workplaceId: storage.lastWorkplaceId,\r\n          });\r\n        }\r\n\r\n        if (`${organizationId}` === storage.lastOrganization) {\r\n          this.setState({\r\n            organizationName: name,\r\n            organizationId: storage.lastOrganization,\r\n            selectOrgId: storage.lastOrganization,\r\n          });\r\n        }\r\n\r\n        let orgRepeatFlog = false,\r\n          repeatFlogNum = -1;\r\n        for (let j = 0; j < orgArr.length; j++) {\r\n          if (orgArr[j].organizationId === organizationId) {\r\n            orgRepeatFlog = true;\r\n            repeatFlogNum = j;\r\n            break;\r\n          }\r\n        }\r\n        if (orgRepeatFlog) {\r\n          let workplace = {\r\n            workplaceName,\r\n            workplaceId,\r\n          };\r\n          let id = orgArr[repeatFlogNum].organizationId;\r\n          workplaceJson[`${id}`] = workplace;\r\n        } else {\r\n          let connectKey = connectionKey || \"\";\r\n          let json = {\r\n            organizationId,\r\n            organizationName: name,\r\n            connectionKey: connectKey,\r\n            roleId,\r\n          };\r\n          let workplace = [\r\n            {\r\n              workplaceName,\r\n              workplaceId,\r\n            },\r\n          ];\r\n          workplaceJson[`${organizationId}`] = workplace;\r\n\r\n          orgArr.push(json);\r\n        }\r\n      }\r\n    }\r\n    // console.log('-----转换后的组织信息--', orgArr, workplaceJson);\r\n    this.setState({\r\n      orgArr,\r\n      workplaceJson,\r\n      connectionKey: storage.connectionKey,\r\n      selectRoleId: storage.roleId,\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n\r\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    // console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer;\r\n    let { height, width } = window.screen;\r\n    let windowsHeight = height > width ? width : height;\r\n    ipcRenderer.send(\"Lowbig\");\r\n    this.setState({});\r\n  };\r\n\r\n  render() {\r\n    let { orgArr, selectOrgId } = this.state;\r\n    let option = orgArr.map((item, index) => {\r\n      let bac =\r\n        `${selectOrgId}` === `${item.organizationId}` ? \"#e1206d\" : \"#fff\";\r\n      let col = `${selectOrgId}` === `${item.organizationId}` ? \"#fff\" : \"#000\";\r\n      return (\r\n        <li\r\n          key={`${item.organizationId}`}\r\n          style={{ background: bac, color: col }}\r\n          onClick={() => {\r\n            this.setState({\r\n              selectOrgId: item.organizationId,\r\n              connectionKey: item.connectionKey,\r\n              selectRoleId: item.roleId,\r\n            });\r\n            // storage.roleId = item.roleId\r\n          }}\r\n        >\r\n          <div className=\"org\" style={{ fontSize: px(16) }}>\r\n            {item.organizationName}\r\n          </div>\r\n        </li>\r\n      );\r\n    });\r\n    return (\r\n      <div id=\"connectworkplace\">\r\n        <div className=\"heard\">\r\n          <Heart />\r\n        </div>\r\n\r\n        <div className=\"body\">\r\n          <div className=\"top\">\r\n            <div className=\"title flex\">\r\n              <p style={{ fontSize: px(24), fontWeight: \"800\" }}>\r\n                Connected Workplaces\r\n              </p>\r\n              <div\r\n                className=\"addbtn flex\"\r\n                style={{ height: px(45) }}\r\n                onClick={() => this.props.history.push(\"/menuOptions/NewOrg\")}\r\n              >\r\n                <p>+ Add Workplace</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"tablebox\">\r\n              <div className=\"table\" style={{ height: px(220) }}>\r\n                <ul>{option}</ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"center\"></div>\r\n          <div className=\"footer flex\">\r\n            <div\r\n              className=\"saveBtn flex\"\r\n              style={{ height: px(45) }}\r\n              onClick={() => {\r\n                let {\r\n                  selectOrgId,\r\n                  selectRoleId,\r\n                  connectionKey,\r\n                  workplaceJson,\r\n                } = this.state;\r\n                // console.log({ selectOrgId, selectRoleId, connectionKey, workplaceJson });\r\n                storage.roleId = selectRoleId;\r\n                storage.lastOrganization = selectOrgId;\r\n                try {\r\n                  let key = parseInt(selectOrgId);\r\n                  let lastWorkplaceId = workplaceJson[key][0].workplaceId;\r\n                  // console.log(lastWorkplaceId);\r\n                  storage.lastWorkplaceId = lastWorkplaceId;\r\n                } catch (error) { }\r\n                storage.connectionKey = connectionKey;\r\n                // this.props.history.replace(\"/menuOptions/settings\");\r\n                this.props.history.goBack();\r\n              }}\r\n            >\r\n              <p style={{ fontSize: px(18) }}>Save Changes</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* <MyModal visible={this.state.loading} /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\hardWareTypeUI.jsx",["653"],"import React, { useEffect } from \"react\";\n\nimport mellaPro from \"./../../assets/img/hardList-mella.png\";\nimport biggie from \"./../../assets/img/hardList-biggie.png\";\nimport rfid from \"./../../assets/img/hardList-rfid.png\";\nimport tape from \"./../../assets/img/hardList-tape.png\";\nimport add from \"./../../assets/img/hardList-add.png\";\nimport mabel from \"./../../assets/img/hardList-mabel.png\";\nimport otterEQ from \"./../../assets/img/hardList-otterEQ.png\";\n\nimport electronStore from \"../../utils/electronStore\";\nimport { px } from \"../../utils/px\";\n\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareInfoFun,\n  setSelectHardwareType,\n  setMenuNum,\n} from \"./../../store/actions\";\n\nlet storage = window.localStorage;\n//devicesTypeList是index传过来的硬件种类以及种类下的所有硬件\nconst HardWareTypeUI = ({\n  bodyHeight,\n  devicesTypeList,\n  selectHardwareInfoFun,\n  setSelectHardwareType,\n  selectHardwareType,\n  setMenuNum,\n  menuNum,\n}) => {\n  //根据左侧列表的设备类型，获取当前选中的设备类型下选中的硬件,先看本地有没有存,没存就拿第一个展示\n\n  let options = devicesTypeList.map((item, index) => {\n    let img = null;\n    switch (item.type) {\n      case \"mellaPro\":\n        img = mellaPro;\n        break;\n\n      case \"biggie\":\n        img = biggie;\n        break;\n\n      case \"rfid\":\n        img = rfid;\n        break;\n\n      case \"tape\":\n        img = tape;\n        break;\n      case \"mabel\":\n        img = mabel;\n        break;\n      case \"add\":\n        img = add;\n        break;\n\n      case \"otterEQ\":\n        img = otterEQ;\n        break;\n      default:\n        break;\n    }\n    let borderStyle = ``;\n    if (item.type === selectHardwareType) {\n      borderStyle = ` 2px solid #3B3A3A`;\n    }\n\n    return (\n      <li\n        key={`${index}`}\n        style={{ padding: `${px(10)}px 0` }}\n        onClick={() => {\n          console.log(item.type);\n          if (menuNum !== \"6\" && !electronStore.get(`${storage.userId}-isClical`)) {\n            setMenuNum(\"1\");\n            setSelectHardwareType(item.type);\n            if (item.type === \"add\") {\n            } else {\n              let devicesInfo = electronStore.get(\n                `${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`\n              );\n\n              //要做个处理,看保存的数据是否和当前的一致，如果不一致，就把当前的保存下来\n\n              if (!devicesInfo && item.devices[0]) {\n                devicesInfo = item.devices[0];\n                electronStore.set(\n                  `${storage.lastOrganization}-${storage.userId}-${item.type}-selectDeviceInfo`,\n                  devicesInfo\n                );\n              }\n\n              selectHardwareInfoFun(devicesInfo);\n            }\n          } else {\n            setSelectHardwareType(\"mellaPro\");\n          }\n        }}\n      >\n        <div\n          style={{ border: borderStyle, padding: px(2), borderRadius: px(10) }}\n        >\n          <img src={img} alt=\"\" width={px(55)} />\n        </div>\n      </li>\n    );\n  });\n\n  useEffect(() => {\n    let Index = null;\n    for (let i = 0; i < devicesTypeList.length; i++) {\n      const element = devicesTypeList[i];\n      if (element.type === selectHardwareType) {\n        Index = i;\n        break;\n      }\n    }\n    if (Index === null) {\n      return;\n    }\n\n    let hard = devicesTypeList[Index];\n    if (hard && hard.type !== \"add\") {\n      let devicesInfo = electronStore.get(\n        `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`\n      );\n\n      if (!devicesInfo) {\n        devicesInfo = hard.devices[0];\n        electronStore.set(\n          `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`,\n          devicesInfo\n        );\n      } else {\n        let sameFlag = false;\n        console.log(\"============\", hard.devices, devicesInfo);\n        for (let i = 0; i < hard.devices.length; i++) {\n          const element = hard.devices[i];\n          if (\n            element.mac === devicesInfo.mac &&\n            element.name === devicesInfo.name\n          ) {\n            sameFlag = true;\n            break;\n          }\n        }\n        if (!sameFlag) {\n          devicesInfo = hard.devices[0];\n          electronStore.set(\n            `${storage.lastOrganization}-${storage.userId}-${hard.type}-selectDeviceInfo`,\n            devicesInfo\n          );\n        }\n      }\n\n      console.log(\"保存的折本信息\", devicesInfo);\n\n      selectHardwareInfoFun(devicesInfo);\n    }\n  }, [devicesTypeList]);\n\n  return (\n    <div className=\"hardwareType\" style={{ width: px(80), height: bodyHeight }}>\n      <ul>{options}</ul>\n    </div>\n  );\n};\n\nHardWareTypeUI.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array,\n};\n//默认值\nHardWareTypeUI.defaultProps = {\n  bodyHeight: 0,\n  devicesTypeList: [],\n};\n\nexport default connect(\n  (state) => ({\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    menuNum: state.userReduce.menuNum,\n  }),\n  { selectHardwareInfoFun, setSelectHardwareType, setMenuNum }\n)(HardWareTypeUI);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\button\\Button.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\petType.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\swabPetEar\\index.jsx",["654","655","656","657","658"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport DogLeftEar from \"../../../../assets/img/DogLeftEar.png\";\nimport DogRightEar from \"../../../../assets/img/DogRightEar.png\";\nimport CatLeftEar from \"../../../../assets/img/CatLeftEar.png\";\nimport CatRightEar from \"../../../../assets/img/CatRightEar.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\n\nconst SwabPetEar = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  let {\n    petSpeciesBreedId,\n  } = petMessage;\n  const [value, setValue] = useState(1);\n\n  const onChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const imagetypeEvent = () => {\n    if (value === 1) {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatRightEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogRightEar} alt=\"\" />;\n      } else {\n        return <img src={DogRightEar} alt=\"\" />;\n      }\n    } else {\n      if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\n        return <img src={CatLeftEar} alt=\"\" />;\n      } else if (petSpeciesBreedId === 12001 || _.inRange(petSpeciesBreedId, 136, 456)) {\n        return <img src={DogLeftEar} alt=\"\" />;\n      } else {\n        return <img src={DogLeftEar} alt=\"\" />;\n      }\n    }\n  }\n\n  const onClick = () => {\n    if (value === 1) {\n      setValue(2);\n    } else {\n      cutPageType('experimentalPage');\n    }\n  }\n\n  // useEffect(() => {\n  //   imagetypeEvent();\n  // },[value])\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          Swab Pet's Ear\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {imagetypeEvent()}\n      </div>\n      <div className=\"radioBox\">\n        <Radio.Group onChange={onChange} value={value}>\n          <Radio value={1}>Right Ear</Radio>\n          <Radio value={2}>Left Ear</Radio>\n        </Radio.Group>\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>Next</Button>\n      </div>\n    </>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(SwabPetEar);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\editParent\\index.jsx",["659","660","661","662","663","664","665","666","667"],"import React, { Component } from 'react'\r\nimport { Menu, message, Select } from 'antd';\r\nimport { createFromIconfontCN } from '@ant-design/icons';\r\n\r\nimport dog from '../../assets/images/reddog.png'\r\nimport cat from '../../assets/images/redcat.png'\r\nimport other from '../../assets/images/redother.png'\r\nimport selectphoto from '../../assets/images/sel.png'\r\n\r\n\r\nimport { mTop, px } from '../../utils/px';\r\nimport MyModal from '../../utils/myModal/MyModal';\r\nimport Heard from '../../utils/heard/Heard';\r\nimport Avatar from '../../components/avatar/Avatar'\r\n\r\nimport moment from 'moment';\r\n\r\nimport './index.less';\r\nimport { getUserInfoByUserId, updateUserInfo } from '../../api/mellaserver/user';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Option } = Select;\r\nconst MyIcon = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\r\n})\r\nlet storage = window.localStorage;\r\nlet errPatientId = ''\r\nlet url = 'https://www.mellaserver.com/api/mellaserver'\r\n// let url = 'http://192.168.0.36:8080/mellaserver'\r\nexport default class EditParent extends Component {\r\n  state = {\r\n    lastName: '',       //宠物主人性\r\n    firstName: '',      //宠物主人名\r\n    email: '',          //邮箱号\r\n    phone: '',          //电话号码\r\n    spin: false,        //加载中\r\n    imageId: null,      //图片的ID值\r\n    petList: [],         //当前这个宠物主人下的所有宠物\r\n    userId: '',          //当前这个宠物主人的userId\r\n    userImageUrl: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n    console.log(this.props.history.location.parent);\r\n\r\n    if (this.props.history.location.parent) { //接受入参\r\n      let { parent, pets } = this.props.history.location.parent\r\n      let { firstName, lastName, userId } = parent\r\n      this._getParent(userId)\r\n\r\n      this.setState({\r\n        firstName,\r\n        lastName,\r\n        userId,\r\n        petList: pets\r\n\r\n\r\n      })\r\n\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n  _getParent = (data) => {\r\n    this.setState({\r\n      spin: true\r\n    })\r\n    getUserInfoByUserId(data)\r\n      .then(res => {\r\n        console.log('获取到了用户信息', res);\r\n        if (res.msg === 'success') {\r\n          let { firstName, phone, lastName, email, imageId, url, userImage } = res.data\r\n          let userImageUrl = res.data.userImage ? res.data.userImage.url : null\r\n          firstName = firstName ? firstName : ''\r\n          phone = phone ? phone : ''\r\n          email = email ? email : ''\r\n          lastName = lastName ? lastName : ''\r\n\r\n\r\n          this.setState({\r\n            userImageUrl,\r\n            firstName,\r\n            lastName,\r\n            phone,\r\n            email,\r\n            imageId,\r\n            spin: false\r\n\r\n          })\r\n        } else {\r\n          this.setState({\r\n            spin: false\r\n          })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          spin: false\r\n        })\r\n      })\r\n  }\r\n\r\n  _petSpecies = () => {\r\n    let { userImageUrl } = this.state\r\n    this.avatar = userImageUrl ? userImageUrl : selectphoto\r\n    let { firstName, lastName } = this.state\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>First Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  firstName: item.target.value\r\n                })\r\n              }}\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Last Name</p>\r\n            <input\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  lastName: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"r\">\r\n\r\n          <div className=\"img\">\r\n            <Avatar\r\n              init={\r\n                <div className=\"ciral \">\r\n                  <img src={this.avatar} alt=\"\" id=\"touxiang\" height=\"280px\" />\r\n                  <p style={{ fontSize: px(14), height: mTop(35) }}>Upload Photo</p>\r\n                </div>\r\n              }\r\n              getinfo={(val) => {\r\n                console.log('我是父组件，从子组件获取到的数据位：', val);\r\n                if (val) {\r\n                  this.setState({\r\n                    imageId: val\r\n                  })\r\n                }\r\n\r\n              }}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n  _petName = () => {\r\n    let { email, phone } = this.state\r\n\r\n    return (\r\n      <div className=\"petSpecies\">\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Email</p>\r\n            <input\r\n              type=\"text\"\r\n              value={email}\r\n              disabled={true}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  email: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"l\">\r\n          <div className=\"firstName\" style={{ marginBottom: px(30) }}>\r\n            <p>Phone</p>\r\n            <input\r\n              type=\"text\"\r\n              value={phone}\r\n              onChange={(item) => {\r\n\r\n                this.setState({\r\n                  phone: item.target.value\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  petList = () => {\r\n\r\n    let { petList } = this.state\r\n    console.log(petList);\r\n    let options = petList.map((item, index) => {\r\n      let { speciesId, url, breedName, petBirthday, gender, name, } = item\r\n      let images = `url(${url}?download=0&width=150)`\r\n\r\n      let petAge = moment(new Date()).diff(moment(petBirthday), 'years')\r\n\r\n      if (!url) {\r\n\r\n        switch (speciesId) {\r\n          case 1: images = `url(${cat})`\r\n\r\n            break;\r\n          case 2: images = `url(${dog})`\r\n            break\r\n          default: images = `url(${other})`\r\n            break;\r\n\r\n        }\r\n\r\n      }\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `  0 0 ${px(15)}px 0`, }}\r\n          onClick={() => {\r\n\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div className=\"itemL\">\r\n              <div\r\n                className='img'\r\n                style={{\r\n                  width: px(50),\r\n                  height: px(50),\r\n                  marginRight: px(20),\r\n                  borderRadius: px(60),\r\n                  backgroundImage: images,\r\n                }}>\r\n              </div>\r\n              <a\r\n                href=\"#\"\r\n                onClick={(e) => {\r\n                  e.preventDefault();\r\n                  console.log(item);\r\n                }}\r\n              >{name}</a>\r\n            </div>\r\n            <div className=\"itemC\">\r\n              <p>{`${petAge} years old, ${gender === 0 ? 'Male' : 'Female'}`}</p>\r\n            </div>\r\n            <div className=\"itemR\">\r\n              <p>{`${breedName}`}</p>\r\n            </div>\r\n\r\n\r\n            {/* <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{item.name}</p>\r\n            </div> */}\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n\r\n\r\n    let liStyle = { backgroundColor: '#fff', marginTop: px(15) }\r\n    if (petList.length > 3) {\r\n      liStyle = { height: px(305), overflowY: 'auto', marginTop: px(15) }\r\n    }\r\n\r\n    return (\r\n      <ul style={liStyle}>\r\n        {options}\r\n      </ul>\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"editParent\">\r\n\r\n        <div className=\"heard\">\r\n          <Heard />\r\n        </div>\r\n        <div className=\"editPetInfo_top\" >\r\n          <div className=\"parentInfo\">\r\n            <div className=\"title\" >{`Parent Information`}</div>\r\n            <div className=\"info\">\r\n              {this._petSpecies()}\r\n              {this._petName()}\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"pets\">\r\n            <div className=\"petsTitle\">\r\n              <h2 style={{ fontSize: px(24), marginRight: px(40) }}>Pets</h2>\r\n              <div className=\"btn\" style={{ fontSize: px(22) }}>+ Add New Pet</div>\r\n            </div>\r\n            <div className=\"petList\">\r\n              {this.petList()}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"editPetInfo_foot\"  >\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              let { firstName, lastName, email, phone, imageId, userId } = this.state\r\n              console.log({ firstName, lastName, email, phone, imageId });\r\n              let parames = {\r\n                userId,\r\n                email,\r\n                phone,\r\n                firstName,\r\n                lastName,\r\n                imageId\r\n              }\r\n              this.setState({\r\n                spin: true\r\n              })\r\n              message.destroy()\r\n              console.log('修改的宠物信息:', parames);\r\n              updateUserInfo(parames)\r\n                .then(res => {\r\n                  console.log('保存所有信息', res);\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  if (res.flag === true) {\r\n                    this.props.history.goBack()\r\n                  } else {\r\n                    message.error('fail to edit')\r\n                  }\r\n                })\r\n                .catch(err => {\r\n                  this.setState({\r\n                    spin: false\r\n                  })\r\n                  message.error('fail to edit')\r\n                  console.log(err);\r\n                })\r\n\r\n            }}\r\n\r\n          >Edit Profile</div>\r\n          <div className=\"save\"\r\n            onClick={() => {\r\n              message.destroy()\r\n              this.props.history.goBack()\r\n            }}\r\n\r\n          >OK</div>\r\n\r\n        </div>\r\n        <MyModal\r\n          visible={this.state.spin}\r\n        />\r\n      </div >\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\electronStore.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\areaCode\\country.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\EzyVet.js",["668","669"],"/**\r\n * @file EzyVet.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/EzyVet 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del, patch } from '../ezyvetApi'\r\nimport { biggieBaseUrl } from '../../config/config'\r\nconst baseURL = `${biggieBaseUrl}/EzyVet`\r\n\r\n\r\n\r\n\r\nexport const ezyvetGetPetLatestExam = (params) => {\r\n    return get(`${baseURL}/ezyvetGetPetLatestExam`, params)\r\n}\r\n\r\n\r\nexport const ezyvetUpdateWeight = (paramId, params) => {\r\n    return patch(`${baseURL}/ezyvetUpdateWeight/${paramId}`, params)\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\experimental\\index.jsx",["670","671","672","673","674","675","676"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Layout, Button, Input, Radio } from \"antd\";\nimport { px } from \"../../../../utils/px\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../../../store/actions\";\n\nimport swirl from \"../../../../assets/img/swirl.png\";\nimport BreakSeal from \"../../../../assets/img/Break-Seal.png\";\nimport label from \"../../../../assets/img/label.png\";\nimport Incubator from \"../../../../assets/img/Incubator.png\";\n\n\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"./index.less\";\n\nconst ExperimentalPage = ({ petMessage, hardwareMessage ,cutPageType}) => {\n  const [value, setValue] = useState(1);\n\n  const cutTitle = () => {\n    switch (value) {\n      case 1:\n        return (<>{`${'Swirl sample in'}`}<br />{`${'solution'}`}</>);\n      case 2:\n        return (<>{`${'Break off stem and'}`}<br />{`${'seal collection tube'}`} </>);\n      case 3:\n        return (<>{`${'Affix label to'}`}<br />{`${'collection tube'}`} </>);\n      case 4:\n        return (<>{`${'Place tube in'}`}<br />{`${'incubator'}`} </>);\n      default:\n        break;\n    }\n  }\n\n  const cutImage = () => {\n    switch (value) {\n      case 1:\n        return <img src={swirl} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 2:\n        return <img src={BreakSeal} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 3:\n        return <img src={label} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      case 4:\n        return <img src={Incubator} alt=\"\" style={{ width: px(328), height: px(287) }} />;\n      default:\n        break;\n    }\n  }\n\n  const onClick = () => {\n    if (value !== 4) {\n      setValue(value + 1)\n    } else {\n      cutPageType('timerPage');\n    }\n  }\n\n  return (\n    <>\n      <div className=\"topBox\">\n        <p className=\"topTitle\" style={{ fontSize: px(40) }}>\n          {cutTitle()}\n        </p>\n      </div>\n      <div className=\"imageBox\">\n        {cutImage()}\n      </div>\n      <div className=\"bottomBox\">\n        <Button type=\"primary\" shape=\"round\" style={{ width: px(400), height: px(40) }} onClick={onClick}>{value !== 4 ? 'Next' : 'Start Timer'}</Button>\n      </div>\n    </>\n  );\n\n};\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(ExperimentalPage);\n",["677","678"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\numericInput.jsx",["679","680"],"import React, {\r\n} from 'react';\r\nimport { Input } from 'antd';\r\nimport _ from 'lodash';\r\nimport './numericInput.less'\r\nimport { useEffect } from 'react';\r\n\r\nconst NumericInput = (props) => {\r\n    const { value, onChange, getInput, onClick,onKey,index } = props;\r\n\r\n    //输入框输入\r\n    const handleChange = (e) => {\r\n        const { value: inputValue } = e.target;\r\n        const reg = /^-?\\d*(\\.\\d*)?$/;\r\n\r\n        if (reg.test(inputValue) || inputValue === '' || inputValue === '-') {\r\n            onChange(inputValue);\r\n        }\r\n    }\r\n    //失去焦点\r\n    const handleBlur = () => {\r\n        let valueTemp = value;\r\n        if (`${value}`.charAt(`${value}`.length - 1) === '.' || value === '-') {\r\n            valueTemp = value.slice(0, -1);\r\n        }\r\n        onChange(`${valueTemp}`.replace(/0*(\\d+)/, '$1'));\r\n    };\r\n    //输入框点击事件\r\n    const handleClick = () => {\r\n        onClick();\r\n    }\r\n    //修改样式\r\n    let bordercolor = onKey ===index ?'#e1206d':'#d9d9d9';\r\n\r\n\r\n    return (\r\n        <Input\r\n            {...props}\r\n            className='inputNum'\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            maxLength={25}\r\n            ref={getInput}\r\n            onClick={handleClick}\r\n            style={{borderColor:bordercolor}}\r\n        />\r\n    );\r\n\r\n};\r\n\r\nexport default NumericInput;\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\help\\index.jsx",["681","682","683","684","685","686"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\mellarecord.js",["687"],"/**\r\n * @file mellarecord.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/mellarecord 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del } from '../api'\r\nimport { mellaserverBaseUrl } from '../../config/config'\r\nconst baseURL = `${mellaserverBaseUrl}/mellarecord`\r\n\r\n\r\n/**\r\n * @dec 增加硬件记录并更新ota硬件版本\r\n * @param {*} params \r\n * @returns \r\n */\r\nexport const saveRecord = (params) => {\r\n    return postJson(`${baseURL}/saveRecord`, params)\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dec 获取硬件的最新版本信息\r\n * @param {str} hardWareType 硬件类型 <br/>\r\n * 硬件种类:分成mellahome1,mellahome2,mellapro1(6针机器),mellapro(7针机器)\r\n * @returns \r\n */\r\nexport const getInfoOfLatestDevice = (hardWareType) => {\r\n    return get(`${baseURL}/getInfoOfLatestDevice?type=${hardWareType}`)\r\n}","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\config\\config.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\biggiePage\\components\\linkEquipment.jsx",["688","689","690","691","692","693","694","695","696"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\PetsUI.jsx",["697","698","699","700","701","702","703","704","705","706"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\petAndParents\\index.jsx",["707","708","709","710","711"],"\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Select,\r\n} from 'antd'\r\n\r\nimport parent from '../../assets/img/parent.png'\r\nimport dog from '../../assets/images/reddog.png'\r\nimport cat from '../../assets/images/redcat.png'\r\nimport other from '../../assets/images/redother.png'\r\n\r\nimport Heart from '../../utils/heard/Heard'\r\nimport { px } from '../../utils/px';\r\nimport MyModal from '../../utils/myModal/MyModal'\r\n\r\nimport moment from 'moment'\r\n\r\nimport './index.less';\r\nimport { pet_petall } from '../../api'\r\n\r\nconst { Option } = Select;\r\nlet storage = window.localStorage;\r\n\r\nexport default class PetAndParents extends Component {\r\n\r\n  state = {\r\n    parentList: [],       //宠物主人列表\r\n    petList: [],          //宠物列表\r\n    loading: false,       //加载中\r\n    parentSearchArr: [],  //搜索后的宠物主人列表\r\n    petSearchArr: [],     //搜索后的宠物列表\r\n    searchText: '',        //搜索文本\r\n    parentAndPetList: [],  //宠物主人下的所有宠物,\r\n  }\r\n  componentDidMount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    ipcRenderer.send('Lowbig')\r\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\r\n\r\n    this._getExam()\r\n\r\n  }\r\n  componentWillUnmount() {\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n\r\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\r\n  }\r\n  changeFenBianLv = (e) => {\r\n    console.log(e);\r\n    let ipcRenderer = window.electron.ipcRenderer\r\n    let { height, width } = window.screen\r\n    let windowsHeight = height > width ? width : height\r\n    ipcRenderer.send('Lowbig')\r\n    this.setState({\r\n\r\n    })\r\n  }\r\n\r\n  _getExam = async () => {\r\n    console.log('进来了');\r\n    this.setState({\r\n      loading: true,\r\n      spin: false\r\n    })\r\n    let params = {\r\n      offset: 0,\r\n      size: 500,\r\n    }\r\n\r\n    console.log('查询宠物的入参', params);\r\n    const isUnKnow = (val) => {\r\n      if (val) {\r\n        return val\r\n      } else {\r\n        return 'unknown'\r\n      }\r\n    }\r\n\r\n\r\n    pet_petall(storage.lastOrganization, params)\r\n      .then(res => {\r\n        console.log('查询到的宠物列表', res);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n        if (res.flag === true) {\r\n          let data = []\r\n          let list = res.data.list\r\n          let owerList = []\r\n          let parentAndPetList = []\r\n          for (let i = 0; i < list.length; i++) {\r\n            let { url, patientId, speciesId, petName, petId, rfid, createTime, userId, firstName, lastName, phone, email, userImageUrl, birthday, breedName, gender } = list[i]\r\n            petName = petName ? petName : (patientId ? patientId : 'unknown')\r\n            let json = {\r\n              insertedAt: createTime,\r\n              name: petName,\r\n              petId,\r\n              rfid,\r\n              url,\r\n              speciesId,\r\n              type: 'pet',\r\n              patientId,\r\n              petBirthday: birthday,\r\n              breedName,\r\n              gender\r\n            }\r\n            data.push(json)\r\n            if (userId) {\r\n              let flogNum = -1\r\n\r\n              for (let i = 0; i < owerList.length; i++) {\r\n                let ower = owerList[i]\r\n                if (ower.userId === userId) {\r\n                  flogNum = i\r\n                  break;\r\n                }\r\n\r\n              }\r\n              if (flogNum === -1) {     //这是一个不在数组里的宠物主人\r\n                let owerJson = {\r\n                  userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\r\n                }\r\n                owerList.push(owerJson)\r\n                let parentAndPetJson = {\r\n                  parent: owerJson,\r\n                  pets: [json]\r\n                }\r\n                // console.log('-----', parentAndPetJson);\r\n                parentAndPetList.push(parentAndPetJson)\r\n              } else {\r\n                parentAndPetList[flogNum].pets.push(json)\r\n              }\r\n\r\n\r\n\r\n\r\n\r\n            }\r\n            // if (userId) {\r\n            //   let sameFlog = owerList.some((ower => {\r\n            //     return ower.userId === userId\r\n            //   }))\r\n            //   if (!sameFlog) {\r\n            //     let owerJson = {\r\n            //       userId, firstName, lastName, phone, email, userImageUrl, name: `${lastName} ${firstName}`\r\n            //     }\r\n            //     owerList.push(owerJson)\r\n            //   }\r\n            // }\r\n          }\r\n          // console.log(parentAndPetList);\r\n          data.sort((a, b) => {\r\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\r\n          })\r\n          this.setState({\r\n            petList: data,\r\n            parentList: owerList,\r\n            parentAndPetList\r\n          })\r\n\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        this.setState({\r\n          loading: false\r\n        })\r\n      })\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  list = (value) => {\r\n    let { petList, parentList, petSearchArr, parentSearchArr, searchText, parentAndPetList } = this.state\r\n    let data = []\r\n    if (value === 'parent') {\r\n      if (searchText.length > 0) {\r\n        data = parentSearchArr\r\n      } else {\r\n        data = parentList\r\n      }\r\n    } else {\r\n      if (searchText.length > 0) {\r\n        data = petSearchArr\r\n      } else {\r\n        data = petList\r\n      }\r\n    }\r\n\r\n    let options = data.map((item, index) => {\r\n      let { speciesId, url, userImageUrl, patientId, petId, name } = item\r\n      let images = null\r\n      if (value === 'parent') {\r\n        images = `url(${userImageUrl}?download=0&width=150)`\r\n        if (!userImageUrl) {\r\n          images = `url(${parent})`\r\n        }\r\n      } else {\r\n        images = `url(${url}?download=0&width=150)`\r\n        if (!url) {\r\n          switch (speciesId) {\r\n            case 1: images = `url(${cat})`\r\n              break;\r\n            case 2: images = `url(${dog})`\r\n              break\r\n            default: images = `url(${other})`\r\n              break;\r\n          }\r\n        }\r\n      }\r\n\r\n\r\n\r\n      return (\r\n        <li\r\n          key={`${index}`}\r\n          style={{ margin: `0 0 ${px(15)}px 0`, borderRadius: px(20) }}\r\n          onClick={() => {\r\n            if (item.type !== 'pet') {\r\n              // console.log('跳转到宠物用户详情页', item,);\r\n              let params = []\r\n              for (let i = 0; i < parentAndPetList.length; i++) {\r\n                if (item.userId === parentAndPetList[i].parent.userId) {\r\n\r\n                  params = parentAndPetList[i]\r\n                  break\r\n                }\r\n\r\n              }\r\n\r\n\r\n              this.props.history.push({ pathname: '/menuOptions/editParent', parent: params })\r\n            } else {\r\n              console.log(item);\r\n              this.props.history.push({ pathname: '/page9', participate: { patientId, petName: name, petId } })\r\n\r\n            }\r\n          }}\r\n        >\r\n          <div className='item' style={{ padding: `${px(15)}px 0 ${px(15)}px  ${px(20)}px`, }}>\r\n            <div\r\n              className='img'\r\n              style={{\r\n                width: px(50),\r\n                height: px(50),\r\n                marginRight: px(20),\r\n                borderRadius: px(60),\r\n                backgroundImage: images,\r\n              }}>\r\n            </div>\r\n\r\n            <div className='petInfo' >\r\n              <p style={{ color: '#141414', fontWeight: 600, fontSize: px(20) }}>{name}</p>\r\n            </div>\r\n          </div>\r\n        </li >\r\n      )\r\n\r\n    })\r\n\r\n    let liStyle = { backgroundColor: '#fff', }\r\n    if (this.state.petList.length > 6) {\r\n      liStyle = { height: px(560), overflowY: 'auto' }\r\n    }\r\n\r\n\r\n    return (\r\n      <div className='petList'>\r\n        <ul style={liStyle}>\r\n          {options}\r\n        </ul>\r\n      </div>\r\n    )\r\n\r\n  }\r\n  inputChange = (text) => {\r\n    let search = text.target.value\r\n    this.setState({\r\n      searchText: search\r\n    })\r\n\r\n    let { parentList, petList } = this.state\r\n    console.log(parentList, petList);\r\n    let keyWord = search\r\n\r\n    let parentSearchData = []\r\n    for (let i = 0; i < parentList.length; i++) {\r\n      let petName = parentList[i].name.toLowerCase() || ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1) {\r\n        parentSearchData.push(parentList[i])\r\n      }\r\n    }\r\n\r\n    let petSearchData = []\r\n    for (let i = 0; i < petList.length; i++) {\r\n      let petName = petList[i].name ? petList[i].name.toLowerCase() : ''\r\n      let patientId = petList[i].patientId ? petList[i].patientId.toLowerCase() : ''\r\n      let rfid = petList[i].rfid ? petList[i].rfid : ''\r\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\r\n        || `${rfid}`.indexOf(keyWord) !== -1\r\n      ) {\r\n        petSearchData.push(petList[i])\r\n      }\r\n    }\r\n    this.setState({\r\n      petSearchArr: petSearchData,\r\n      parentSearchArr: parentSearchData\r\n    })\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    let bodyHeight = '92%'\r\n    try {\r\n      bodyHeight = document.getElementById('settings').clientHeight - document.querySelectorAll('#settings .heard')[0].clientHeight\r\n    } catch (error) {\r\n\r\n    }\r\n    return (\r\n      <div id=\"PetAndParents\">\r\n        <div className=\"heard\">\r\n          <Heart />\r\n        </div>\r\n\r\n\r\n        <div className=\"body\" style={{ height: bodyHeight, padding: `0 ${px(35)}px` }}>\r\n          <h1 style={{ fontSize: px(38) }}>{`Pet & Parents Profile Management`}</h1>\r\n          <div className=\"search\">\r\n            <div className=\"searchL\">\r\n              <input\r\n                type=\"text\"\r\n                style={{ paddingLeft: px(25), height: px(34) }}\r\n                placeholder=\"&#xe62c; Search \"\r\n                value={this.state.searchText}\r\n                onChange={(text) => {\r\n                  this.inputChange(text)\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"searchr\" style={{ fontSize: px(18), height: px(40) }}>\r\n              Search\r\n            </div>\r\n          </div>\r\n          <div className=\"btns\">\r\n            <div className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}>\r\n              + New Parent\r\n            </div>\r\n            <div\r\n              className=\"btnL\" style={{ fontSize: px(24), height: px(45) }}\r\n              onClick={() => {\r\n                this.props.history.push('/pet/doctorAddPet')\r\n              }}\r\n\r\n            >\r\n              + New Pet\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"lists\">\r\n            <div className=\"listsL\">\r\n              {this.list('parent')}\r\n            </div>\r\n\r\n            <div className=\"listsL\">\r\n              {this.list('pet')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n        <MyModal visible={this.state.loading} />\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\px.jsx",["712","713","714","715","716","717"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\enrolledPlan\\index.jsx",["718","719","720","721","722"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\hardwareType.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\timer\\index.jsx",["723","724","725","726","727"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\pet.js",["728","729","730"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\components\\linkEquipment\\index.jsx",["731","732","733","734","735","736"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\settings\\index.jsx",["737","738","739","740"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\current.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actions\\petAction.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\workplace.js",["741"],"/**\r\n * @file pet.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/workplace 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del } from '../api'\r\nimport { mellaserverBaseUrl } from '../../config/config'\r\nconst baseURL = `${mellaserverBaseUrl}/workplace`\r\n\r\n\r\n/**\r\n * \r\n * @dec 根据组织id获取工作场所\r\n * @param {string} organizationId \r\n * @returns \r\n */\r\nexport const listAllWorkplaceByOrganizationId = (organizationId) => {\r\n    return get(`${baseURL}/listAllWorkplaceByOrganizationId/${organizationId}`, '')\r\n}\r\n\r\n\r\n/**\r\n * @dec 添加工作场所\r\n * @param {str} userId 用户id\r\n * @param {*} params \r\n * @returns \r\n */\r\n\r\nexport const addWorkplace = (userId, params) => {\r\n    return postJson(`${baseURL}/addWorkplace${userId}`, params)\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\temporaryStorage.js",[],["742","743"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\organization.js",["744"],"/**\r\n * @file organization.js\r\n * @authoe 胡邵杰\r\n * @dec https://www.mellaserver.com/api/mellaserver/organization 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n *\r\n */\r\nimport { get, postJson, del } from '../api'\r\nimport { mellaserverBaseUrl } from '../../config/config'\r\nconst baseURL = `${mellaserverBaseUrl}/organization`\r\n\r\n\r\n\r\n/**\r\n * @dec  管理员获取组织下的所有医生\r\n * @param {string} lastOrganization 组织id\r\n * @param {*} params\r\n * @returns\r\n */\r\n\r\nexport const listDoctorsByAdmin = (lastOrganization, params) => {\r\n    return get(`${baseURL}/listDoctorsByAdmin/${lastOrganization}`, params)\r\n}\r\n\r\n/**\r\n * @dec 获取所有组织\r\n * @returns\r\n *\r\n */\r\nexport const listAll = () => {\r\n    return get(`${baseURL}/listAll`, '')\r\n}\r\n\r\n\r\n\r\n/**\r\n * @dec 创建一个组织\r\n * @param {str} userId 用户id\r\n * @param {*} params\r\n * @returns\r\n */\r\nexport const addOrganization = (userId, params) => {\r\n    return postJson(`${baseURL}/addOrganization/${userId}`, params)\r\n}\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellabiggie\\user.js",["745","746","747"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\scanPage\\components\\scanPet.jsx",["748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774","775","776","777","778","779","780"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Layout,\r\n  Menu,\r\n  PageHeader,\r\n  Radio,\r\n  Input,\r\n  Space,\r\n  Button,\r\n  Modal,\r\n  message,\r\n  Carousel,\r\n} from \"antd\";\r\nimport { ExclamationCircleOutlined } from \"@ant-design/icons\";\r\nimport {\r\n  selectHardwareModalShowFun,\r\n  petSortTypeFun,\r\n  petDetailInfoFun,\r\n  setRulerConnectStatusFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConfirmCountFun,\r\n} from \"../../../store/actions\";\r\nimport _ from \"lodash\";\r\nimport NumericInput from \"./numericInput\";\r\nimport head from \"./../../../assets/img/head.png\";\r\nimport neck from \"./../../../assets/img/neck.png\";\r\nimport upper from \"./../../../assets/img/upper.png\";\r\nimport lower from \"./../../../assets/img/lower.png\";\r\nimport Full from \"./../../../assets/img/Full.png\";\r\nimport body from \"./../../../assets/img/body.png\";\r\nimport catHead from \"./../../../assets/img/catHead.png\";\r\nimport catNeck from \"./../../../assets/img/catNeck.png\";\r\nimport catUpper from \"./../../../assets/img/catUpper.png\";\r\nimport catLower from \"./../../../assets/img/catLower.png\";\r\nimport catFull from \"./../../../assets/img/catFull.png\";\r\nimport catBody from \"./../../../assets/img/catBody.png\";\r\nimport redjinggao from './../../../assets/img/redjinggao.png'\r\nimport \"./scanPet.less\";\r\nimport { px } from \"../../../utils/px\";\r\nimport MyModal from '../../../utils/myModal/MyModal'\r\nimport { updatePetInfo1 } from \"../../../api\";\r\n\r\nconst { Content, Header } = Layout;\r\nconst ScanPet = ({\r\n  petMessage,\r\n  petDetailInfoFun,\r\n  ruleMessage,\r\n  setRulerConfirmCountFun,\r\n  setRulerMeasureValueFun,\r\n  setRulerUnitFun,\r\n  setRulerConnectStatusFun\r\n}) => {\r\n  let { petSpeciesBreedId, patientId, petId } = petMessage;\r\n  let { rulerMeasureValue, rulerConfirmCount, rulerUnit, rulerConnectStatus, selectHardwareInfo, receiveBroadcastHardwareInfo } = ruleMessage;\r\n  let storage = window.localStorage;\r\n  const [radioValue, setRadioValue] = useState(\"in\");\r\n  const [inputIndex, setInputIndex] = useState(-1);\r\n  const [visible, setVisible] = useState(false);\r\n  const [carouselIndex, setCarouselIndex] = useState(1);\r\n  const [headValue, setHeadValue] = useState(\"\"); //接收输入框的值\r\n  const [neckValue, setNeckValue] = useState(\"\"); //接收输入框的值\r\n  const [upperValue, setUpperValue] = useState(\"\"); //接收输入框的值\r\n  const [lowerValue, setLowerValue] = useState(\"\"); //接收输入框的值\r\n  const [torsoValue, setTorsoValue] = useState(\"\"); //接收输入框的值\r\n  const [bodyValue, setBodyValue] = useState(\"\"); //接收输入框的值\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [selectPetDetail, setSelectPetDetail] = useState({})\r\n  let newData = [];\r\n\r\n\r\n  //保存input组\r\n  const inputEl = (data) => {\r\n    newData.push(data);\r\n  };\r\n\r\n  //切换聚焦事件\r\n  const switchFocus = () => {\r\n    let num = inputIndex;\r\n    if (num === 3) {\r\n      setCarouselIndex(2);\r\n    }\r\n    if (num < 5) {\r\n      setInputIndex(num + 1);\r\n    }\r\n  };\r\n\r\n  //结束事件\r\n  const finishScan = () => {\r\n    Modal.confirm({\r\n      title: \"Confirm\",\r\n      icon: <ExclamationCircleOutlined />,\r\n      content: \"Whether To Save Data\",\r\n      top: \"40vh\",\r\n      onOk: saveData,\r\n    });\r\n  };\r\n  //保存数据\r\n  const saveData = () => {\r\n    const newNum = (val) => {\r\n      if (val) {\r\n        if (rulerUnit === \"in\") {\r\n          return parseFloat((parseFloat(val) * 2.54).toFixed(1));\r\n        } else {\r\n          return parseFloat(val);\r\n        }\r\n      } else {\r\n        return \"\";\r\n      }\r\n    };\r\n    let prams = {\r\n      l2rarmDistance: newNum(bodyValue) || null,\r\n      lowerTorsoCircumference: newNum(lowerValue) || null,\r\n      upperTorsoCircumference: newNum(upperValue) || null,\r\n      neckCircumference: newNum(neckValue) || null,\r\n      h2tLength: newNum(headValue) || null,\r\n      torsoLength: newNum(torsoValue) || null,\r\n    };\r\n\r\n    updatePetInfo1(storage.userId, petId, prams)\r\n\r\n      .then((res) => {\r\n        if (res.flag) {\r\n          petDetailInfoFun({\r\n            ...petMessage,\r\n            ...prams,\r\n          });\r\n          message.success(\"Uploaded successfully\");\r\n        } else {\r\n          message.error(\"upload failed\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.error(\"update failed\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //判断是猫还是狗还是其他\r\n  const checkPetType = () => {\r\n    //0是猫，1是狗，或者petSpeciesBreedId为空判断图片为狗\r\n    if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\r\n      return 0;\r\n    } else if (\r\n      petSpeciesBreedId === 12001 ||\r\n      _.inRange(petSpeciesBreedId, 136, 456)\r\n    ) {\r\n      return 1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  //切换图片\r\n  const changeImage = () => {\r\n    switch (inputIndex) {\r\n      case 0:\r\n        return checkPetType() === 1 ? (\r\n          <img src={head} />\r\n        ) : (\r\n          <img src={catHead} />\r\n        );\r\n      case 1:\r\n        return checkPetType() === 1 ? (\r\n          <img src={neck} />\r\n        ) : (\r\n          <img src={catNeck} />\r\n        );\r\n      case 2:\r\n        return checkPetType() === 1 ? (\r\n          <img src={upper} />\r\n        ) : (\r\n          <img src={catUpper} />\r\n        );\r\n      case 3:\r\n        return checkPetType() === 1 ? (\r\n          <img src={lower} />\r\n        ) : (\r\n          <img src={catLower} />\r\n        );\r\n      case 4:\r\n        return checkPetType() === 1 ? (\r\n          <img src={Full} />\r\n        ) : (\r\n          <img src={catFull} />\r\n        );\r\n      case 5:\r\n        return checkPetType() === 1 ? (\r\n          <img src={body} />\r\n        ) : (\r\n          <img src={catBody} />\r\n        );\r\n      default:\r\n        return checkPetType() === 1 ? (\r\n          <img src={body} />\r\n        ) : (\r\n          <img src={catBody} />\r\n        );\r\n    }\r\n  };\r\n\r\n  //点击输入框事件\r\n  const clickInput = (index) => {\r\n    setInputIndex(index);\r\n  };\r\n\r\n  //单位转化\r\n  const changeUnit = (value) => {\r\n    if (rulerUnit === \"cm\") {\r\n      return _.round(value * 2.54, 1);\r\n    } else if (rulerUnit === \"in\") {\r\n      return _.floor(_.divide(value, 2.54), 2);\r\n    }\r\n  };\r\n\r\n  //单选框改变事件\r\n  const changeRadio = (e) => {\r\n    setRadioValue(e.target.value);\r\n    setRulerUnitFun(e.target.value);\r\n  };\r\n\r\n  //小圆点点击事件\r\n  const clickPoint = (index) => {\r\n    if (index === 1) {\r\n      setCarouselIndex(1);\r\n    } else {\r\n      setCarouselIndex(2);\r\n    }\r\n  };\r\n  //切换宠物获取到长度信息,对数据根据界面单位进行换算\r\n  const petLengthDataConvert = (val) => {\r\n    if (!val) {\r\n      return \"\";\r\n    } else {\r\n      if (rulerUnit === \"cm\") {\r\n        return val.toFixed(1);\r\n      } else {\r\n        return _.floor(_.divide(val, 2.54), 2);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  //监听点击界面中下一步按钮\r\n  useEffect(() => {\r\n    console.log(\"inputIndex\", inputIndex);\r\n\r\n    if (inputIndex < 6 && inputIndex !== -1) {\r\n      newData[inputIndex].focus();\r\n    }\r\n    if (inputIndex === 6) {\r\n      finishScan();\r\n    }\r\n\r\n    return () => { };\r\n  }, [inputIndex]);\r\n\r\n  useEffect(() => {\r\n    if (carouselIndex === 2) {\r\n      setInputIndex(4);\r\n    } else if (carouselIndex === 1) {\r\n      setInputIndex(0);\r\n    }\r\n    return () => { };\r\n  }, [carouselIndex]);\r\n\r\n  //监听用户点击了硬件中的下一步按钮\r\n  useEffect(() => {\r\n    if (inputIndex === -1) {\r\n      setInputIndex(0);\r\n    } else if (inputIndex < 6) {\r\n      setInputIndex(inputIndex + 1);\r\n    }\r\n    if (inputIndex === 3) {\r\n      setCarouselIndex(2);\r\n    }\r\n    return () => { };\r\n  }, [rulerConfirmCount]);\r\n\r\n  // useEffect(() => {\r\n  //   setRulerConnectStatusFun('disconnected')\r\n  // },[])\r\n\r\n\r\n  //监听切换了宠物\r\n  useEffect(() => {\r\n    // if (rulerConnectStatus === 'isMeasuring') {\r\n    //   setShowModal(true);\r\n    // } else {\r\n    setInputIndex(0);\r\n    setCarouselIndex(1);\r\n    let {\r\n      torsoLength,\r\n      l2rarmDistance,\r\n      upperTorsoCircumference,\r\n      lowerTorsoCircumference,\r\n      h2tLength,\r\n      neckCircumference,\r\n    } = petMessage;\r\n\r\n    setBodyValue(petLengthDataConvert(l2rarmDistance));\r\n    setLowerValue(petLengthDataConvert(lowerTorsoCircumference));\r\n    setUpperValue(petLengthDataConvert(upperTorsoCircumference));\r\n    setNeckValue(petLengthDataConvert(neckCircumference));\r\n    setHeadValue(petLengthDataConvert(h2tLength));\r\n    setTorsoValue(petLengthDataConvert(torsoLength));\r\n    // }\r\n    return () => { };\r\n  }, [petId]);\r\n  //监听用户点击了硬件中的下一步按钮和拉动皮尺\r\n  useEffect(() => {\r\n    if (inputIndex < 6) {\r\n      let { deviceType, mac } = selectHardwareInfo\r\n\r\n      if (deviceType === 'tape') {\r\n        if (mac === '45264' || (mac && receiveBroadcastHardwareInfo.deviceType === 'tape' && receiveBroadcastHardwareInfo.macId === mac)) {\r\n\r\n          switch (inputIndex) {\r\n            case 0:\r\n              setHeadValue(rulerMeasureValue);\r\n              break;\r\n            case 1:\r\n              setNeckValue(rulerMeasureValue);\r\n              break;\r\n            case 2:\r\n              setUpperValue(rulerMeasureValue);\r\n              break;\r\n            case 3:\r\n              setLowerValue(rulerMeasureValue);\r\n              break;\r\n            case 4:\r\n              setTorsoValue(rulerMeasureValue);\r\n              break;\r\n            case 5:\r\n              setBodyValue(rulerMeasureValue);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          if (rulerUnit !== radioValue) {\r\n            setRadioValue(rulerUnit);\r\n            setHeadValue(headValue && changeUnit(headValue));\r\n            setNeckValue(neckValue && changeUnit(neckValue));\r\n            setUpperValue(upperValue && changeUnit(upperValue));\r\n            setLowerValue(lowerValue && changeUnit(lowerValue));\r\n            setTorsoValue(torsoValue && changeUnit(torsoValue));\r\n            setBodyValue(bodyValue && changeUnit(bodyValue));\r\n          }\r\n        }\r\n      }\r\n\r\n    }\r\n  }, [rulerConfirmCount, rulerMeasureValue]);\r\n  // //监听单位改变\r\n  // useEffect(() => {\r\n  //   let { deviceType, mac } = selectHardwareInfo\r\n\r\n  //   console.log('=====', receiveBroadcastHardwareInfo.macId);\r\n  //   if (deviceType === 'tape') {\r\n  //     if (mac === '45264' || (mac && receiveBroadcastHardwareInfo.deviceType === 'tape' && receiveBroadcastHardwareInfo.macId === mac)) {\r\n  //       console.log('初始化====', rulerUnit, radioValue);\r\n\r\n  //       setRadioValue(rulerUnit);\r\n  //       setHeadValue(headValue && changeUnit(headValue));\r\n  //       setNeckValue(neckValue && changeUnit(neckValue));\r\n  //       setUpperValue(upperValue && changeUnit(upperValue));\r\n  //       setLowerValue(lowerValue && changeUnit(lowerValue));\r\n  //       setTorsoValue(torsoValue && changeUnit(torsoValue));\r\n  //       setBodyValue(bodyValue && changeUnit(bodyValue));\r\n\r\n  //     }\r\n  //   }\r\n\r\n  // }, [rulerUnit]);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Content className=\"scanContentBox\">\r\n        <div className=\"scanImageBox\">{changeImage()}</div>\r\n        {/*选择单位框*/}\r\n        <Radio.Group\r\n          value={radioValue}\r\n          onChange={changeRadio}\r\n          buttonStyle=\"solid\"\r\n          className=\"selectLengthUnit\"\r\n        >\r\n          <Radio.Button\r\n            value=\"in\"\r\n            style={{\r\n              background: radioValue === \"in\" ? \"#e1206d\" : \"#fff\",\r\n              borderColorRight: radioValue === \"in\" ? \"#e1206d\" : \"#fff\",\r\n              borderRadius: \"20px\",\r\n              borderTopRightRadius: \"0px\",\r\n              borderBottomRightRadius: \"0px\",\r\n            }}\r\n          >\r\n            in\r\n          </Radio.Button>\r\n          <Radio.Button\r\n            value=\"cm\"\r\n            className=\"cmButton\"\r\n            style={{\r\n              background: radioValue === \"cm\" ? \"#e1206d\" : \"#fff\",\r\n              borderColorRight: radioValue === \"cm\" ? \"#e1206d\" : \"#fff\",\r\n              borderRadius: \"20px\",\r\n              borderTopLeftRadius: \"0px\",\r\n              borderBottomLeftRadius: \"0px\",\r\n            }}\r\n          >\r\n            cm\r\n          </Radio.Button>\r\n        </Radio.Group>\r\n        <div className=\"slideshowBox\" style={{ height: px(100) }}>\r\n          <div className=\"scollInputGroup\">\r\n            {/*第一列输入框*/}\r\n            <Input.Group\r\n              className=\"inputGroupItem\"\r\n              style={{ display: carouselIndex === 1 ? \"\" : \"none\" }}\r\n            >\r\n              <Space className=\"inputItemBox\">\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Head Circumference</p>\r\n                  <NumericInput\r\n                    value={headValue}\r\n                    onChange={setHeadValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(0)}\r\n                    index={inputIndex}\r\n                    onKey={0}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Neck Circumference</p>\r\n                  <NumericInput\r\n                    value={neckValue}\r\n                    onChange={setNeckValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(1)}\r\n                    index={inputIndex}\r\n                    onKey={1}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Upper Torso Circumference</p>\r\n                  <NumericInput\r\n                    value={upperValue}\r\n                    onChange={setUpperValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(2)}\r\n                    index={inputIndex}\r\n                    onKey={2}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Lower Torso Circumference</p>\r\n                  <NumericInput\r\n                    value={lowerValue}\r\n                    onChange={setLowerValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(3)}\r\n                    index={inputIndex}\r\n                    onKey={3}\r\n                  />\r\n                </div>\r\n              </Space>\r\n            </Input.Group>\r\n            {/*第二列输入框*/}\r\n            <Input.Group\r\n              className=\"inputGroupItem\"\r\n              style={{ display: carouselIndex === 2 ? \"\" : \"none\" }}\r\n            >\r\n              <Space className=\"inputItemBox\">\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Full Torso Length</p>\r\n                  <NumericInput\r\n                    value={torsoValue}\r\n                    onChange={setTorsoValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(4)}\r\n                    index={inputIndex}\r\n                    onKey={4}\r\n                  />\r\n                </div>\r\n                <div className=\"inputItem\">\r\n                  <p className=\"inputTitle\">Full Body Length</p>\r\n                  <NumericInput\r\n                    value={bodyValue}\r\n                    onChange={setBodyValue}\r\n                    getInput={inputEl}\r\n                    onClick={() => clickInput(5)}\r\n                    index={inputIndex}\r\n                    onKey={5}\r\n                  />\r\n                </div>\r\n              </Space>\r\n            </Input.Group>\r\n          </div>\r\n        </div>\r\n\r\n        {/*小圆点 */}\r\n        <div className=\"dotBox\">\r\n          <ul className=\"dotList\">\r\n            <li>\r\n              <Button\r\n                className=\"dotItem\"\r\n                onClick={() => clickPoint(1)}\r\n                style={{\r\n                  background: carouselIndex === 1 ? \"#0a0a0a\" : \"#bdbaba\",\r\n                }}\r\n              >\r\n                1\r\n              </Button>\r\n            </li>\r\n            <li>\r\n              <Button\r\n                className=\"dotItem\"\r\n                onClick={() => clickPoint(2)}\r\n                style={{\r\n                  background: carouselIndex === 2 ? \"#0a0a0a\" : \"#bdbaba\",\r\n                }}\r\n              >\r\n                2\r\n              </Button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        {/*下一步 */}\r\n        <div className=\"nextBtnBox\">\r\n          <Button\r\n            type=\"primary\"\r\n            shape=\"round\"\r\n            size=\"large\"\r\n            className=\"nextBtn\"\r\n            onClick={inputIndex > 4 ? finishScan : switchFocus}\r\n          >\r\n            {inputIndex > 4 ? \"Finish\" : \"Next\"}\r\n          </Button>\r\n        </div>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  (state) => ({\r\n    petMessage: state.petReduce.petDetailInfo,\r\n    ruleMessage: state.hardwareReduce,\r\n  }),\r\n  {\r\n    selectHardwareModalShowFun,\r\n    petSortTypeFun,\r\n    petDetailInfoFun,\r\n    setRulerConnectStatusFun,\r\n    setRulerMeasureValueFun,\r\n    setRulerUnitFun,\r\n    setRulerConfirmCountFun,\r\n  }\r\n)(ScanPet);\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\components\\linkEquipment\\index.jsx",["781","782","783","784","785"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardAndPetsUI.jsx",["786","787"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\commonFun.js",["788","789","790","791","792","793","794","795","796","797"],"import _ from 'lodash';\r\nimport moment from 'moment';\r\n\r\n/**\r\n * description: 摄氏度转华氏度,根据入参来保留小数点位数\r\n * @param {Number} celsius 摄氏度\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 华氏度\r\n */\r\nfunction CtoF(celsius, decimal = 1) {\r\n  let fahrenheit = (celsius * 1.8) + 32;\r\n  return parseFloat(fahrenheit.toFixed(decimal));\r\n}\r\n/**\r\n * description: 华氏度转摄氏度,根据入参来保留小数点位数\r\n * @param {Number} fahrenheit 华氏度\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 摄氏度\r\n */\r\nfunction FtoC(fahrenheit, decimal = 1) {\r\n  let celsius = (fahrenheit - 32) / 1.8;\r\n  return parseFloat(celsius.toFixed(decimal));\r\n}\r\n/**\r\n * description: 千克转磅,根据入参来保留小数点位数\r\n * @param {Number} kg 千克\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 磅\r\n */\r\nfunction KgtoLb(kg, decimal = 2) {\r\n  let pound = kg * 2.2046;\r\n  return parseFloat(pound.toFixed(decimal));\r\n}\r\n/**\r\n * description: 磅转千克,根据入参来保留小数点位数\r\n * @param {Number} lb 磅\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 千克\r\n *\r\n */\r\nfunction LbtoKg(lb, decimal = 2) {\r\n  let kilogram = lb / 2.2046;\r\n  return parseFloat(kilogram.toFixed(decimal));\r\n}\r\n/**\r\n * description: 克转毫升,根据入参来保留小数点位数\r\n * @param {Number} gram 克\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 毫升\r\n */\r\nfunction GToMl(gram, decimal = 2) {\r\n  let milliliter = gram\r\n  return parseFloat(milliliter.toFixed(decimal));\r\n}\r\n/**\r\n * description: 毫升转克,根据入参来保留小数点位数\r\n * @param {Number} ml 毫升\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 克\r\n */\r\nfunction MltoG(ml, decimal = 2) {\r\n  let gram = ml;\r\n  return parseFloat(gram.toFixed(decimal));\r\n}\r\n/**\r\n * @description: 克转盎司,根据入参来保留小数点位数\r\n * @param {Number} gram 克\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 盎司\r\n */\r\nfunction GToOz(gram, decimal = 2) {\r\n  let ounce = gram / 28.3495;\r\n  return parseFloat(ounce.toFixed(decimal));\r\n}\r\n/**\r\n * @description: 盎司转克,根据入参来保留小数点位数\r\n * @param {Number} ounce 盎司\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 克\r\n */\r\nfunction OztoG(ounce, decimal = 2) {\r\n  let gram = ounce * 28.3495;\r\n  return parseFloat(gram.toFixed(decimal));\r\n}\r\n/**\r\n * description: 厘米转英寸,根据入参来保留小数点位数\r\n * @param {Number} cm 厘米\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 英寸\r\n */\r\nfunction CmtoIn(cm, decimal = 2) {\r\n  let inch = cm / 2.54;\r\n  return parseFloat(inch.toFixed(decimal));\r\n}\r\n/**\r\n * description: 英寸转厘米,根据入参来保留小数点位数\r\n * @param {Number} inch 英寸\r\n * @param {Number} decimal 小数点位数\r\n * @return {Number} 厘米\r\n */\r\nfunction IntoCm(inch, decimal = 2) {\r\n  let cm = inch * 2.54;\r\n  return parseFloat(cm.toFixed(decimal));\r\n}\r\n/**\r\n * @description: 计算宠物年龄\r\n * @param {string} birthday 宠物生日\r\n * @return {number | string} age | ‘unknown’\r\n */\r\nexport const calculateAge = (birthday) => {\r\n  if (_.isEmpty(birthday)) {\r\n    return \"unknown\";\r\n  } else {\r\n    return moment().diff(moment(birthday), \"years\");\r\n  }\r\n};\r\n/**\r\n * @description: 没有上传照片的宠物头像展示\r\n * @param {Number} petSpeciesBreedId 宠物品种id\r\n * @return {string} 'cat' 'dog' 'other'\r\n */\r\nexport const petPicture = (petSpeciesBreedId) => {\r\n  if (petSpeciesBreedId === 11001 || _.inRange(petSpeciesBreedId, 1, 136)) {\r\n    return 'cat';\r\n  } else if (\r\n    petSpeciesBreedId === 12001 ||\r\n    _.inRange(petSpeciesBreedId, 136, 456)\r\n  ) {\r\n    return 'dog';\r\n  } else if (petSpeciesBreedId === 13001) {\r\n    return 'other';\r\n  } else {\r\n    return 'other';\r\n  }\r\n}\r\n/**\r\n * @dec 判断版本1是否大于版本2\r\n * @param {str} version1 版本号1,格式必须为1.0.0 \r\n * @param {*} version2 版本号2,格式必须为1.0.0 \r\n * @returns 版本1是否大于版本2\r\n */\r\nexport const versionComarision = (version1, version2) => {\r\n  let version1Arr = version1.split('.')\r\n  let version2Arr = version2.split('.')\r\n  function num(params) {\r\n    return parseInt(params)\r\n  }\r\n  if (num(version1Arr[0]) >= num(version2Arr[0])\r\n    && num(version1Arr[1]) >= num(version2Arr[1])\r\n    && num(version1Arr[2]) > num(version2Arr[2])\r\n  ) {\r\n    return true\r\n  } else {\r\n    return false\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\user.js",["798","799"],"/**\r\n * @file user.js\r\n * @authoe 胡邵杰 \r\n * @dec https://www.mellaserver.com/api/mellaserver/user 下的所有接口都在这个<br />\r\n *      封装,封装函数名称和接口地址保持一致\r\n * @createDate 20220824\r\n * \r\n */\r\nimport { get, postJson, del, patch } from '../ezyvetApi'\r\nimport { melladeskBaseUrl } from '../../config/config'\r\nconst baseURL = `${melladeskBaseUrl}/user`\r\n\r\n\r\n/**\r\n * @dec 邀请别人加入组织\r\n * @param {*} userId 用户id\r\n * @param {*} organizationId 组织id\r\n * @param {*} parames \r\n * @returns \r\n */\r\nexport const inviteUserByEmail = (userId, organizationId, parames) => {\r\n    return postJson(`${baseURL}/inviteUserByEmail/${userId}/${organizationId}`, parames)\r\n}\r\n\r\nexport const updateUserInfo = (parames) => {\r\n    return postJson(`${baseURL}/updateUserInfo`, parames)\r\n}\r\n\r\n\r\n\r\n\r\nexport const loginWithQRcode = (QRToken) => {\r\n    return get(`${baseURL}/loginWithQRcode/${QRToken}`, '')\r\n}\r\n\r\n\r\nexport const getLoginQRcode = () => {\r\n    return get(`${baseURL}/getLoginQRcode`, '')\r\n}\r\n\r\n\r\n\r\nexport const resendDeskRegistEmail = (logupEmailCode, params) => {\r\n    return get(`${baseURL}/resendDeskRegistEmail/${logupEmailCode}`, params)\r\n}\r\n\r\n\r\nexport const deskRegistAWSSNS = (params) => {\r\n    return postJson(`${baseURL}/deskRegistAWSSNS`, params)\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\index.jsx",["800","801","802","803","804","805","806","807"],"import React, { Component } from \"react\";\nimport { Modal, message } from \"antd\";\n\nimport Heard from \"../../utils/heard/Heard\";\nimport { px, win, timerFun } from \"../../utils/px\";\nimport electronStore from \"../../utils/electronStore\";\nimport { compareObject } from \"../../utils/current\";\nimport { compareArray } from \"../../utils/current\";\n\nimport HardAndPetsUI from \"./HardAndPetsUI\";\nimport HardWareTypeUI from \"./hardWareTypeUI\";\nimport AddDevice from \"./AddDevice\";\n\nimport BiggiePage from \"../../pages/biggiePage\";\nimport ScanPage from \"../../pages/scanPage\";\nimport AllPets from \"../../pages/allPetsPage\";\nimport ScheduledPetPage from \"../../pages/scheduledPetsPage\";\nimport AddScheduledPet from \"../../pages/addScheduledPet\";\nimport ClininalStudy from \"../../pages/clinicalStudyPage\";\nimport CombineScales from \"../../pages/combineScales\";\nimport OtterEQPage from '../../pages/otterEQ';\nimport MyAccount from \"../../pages/myAccount\";\nimport TemperaturePage from \"../../pages/temperaturePage\";\nimport MabelPage from \"../mabelPage\";\nimport EnrolledPlan from '../enrolledPlan';\n\n\n\nimport { connect } from \"react-redux\";\nimport {\n  setHardwareList,\n  selectHardwareModalShowFun,\n  setIsHaveUsbDeviceFun,\n  setMellaConnectStatusFun,\n  setMellaMeasureValueFun,\n  setMellaPredictValueFun,\n  setMellaMeasurePartFun,\n  setMellaDeviceIdFun,\n  setMellaMeasureNumFun,\n  setBiggieConnectStatusFun,\n  setBiggieBodyFatFun,\n  setBiggieBodyWeightFun,\n  setBiggieUnitFun,\n  setBiggieSameWeightCountFun,\n  setRulerConnectStatusFun,\n  setRulerMeasureValueFun,\n  setRulerUnitFun,\n  setRulerConfirmCountFun,\n  setReceiveBroadcastHardwareInfoFun,\n} from \"../../store/actions\";\n\nimport \"./mainbody.less\";\n\n\nlet ipcRenderer = window.require(\"electron\").ipcRenderer;\nlet isMeasure = false; //是否正在测量,用于判断是否需要发送指定指令给USB,查看硬件是否连接\nlet initTime = 0; //初始化时间,用来计算底座没有回应温度计的时间差,如果时间差大于6秒代表断开连接\nlet num07 = 0; //接收到07命令行的次数,次数大于3跳出弹框\nlet firstEar = true; //为true代表一组数据测量完成,下组测量数据\nlet is97Time = null; //为了防抖，因为有时候断开连接和连接成功总是连续的跳出来，展示就会一直闪烁，因此引入时间差大于800ms才展示\nlet exchangeNum = 0; //奇数发送查询探头id指令，偶数发送询问配置\nlet time194 = 0\n\n//用于预测的东西\nlet clinicalYuce = [],\n  clinicalIndex = 0;\n\nlet storage = window.localStorage;\n\nclass App extends Component {\n  state = {\n    //body部分窗口高度\n    bodyHeight: 0,\n    //本地保存的硬件类型数组,不包括Add这个类型\n    devicesTypeList: [],\n    //展示硬件类型的数组\n    showHardWareTypeList: [],\n    //是否有USB设备\n    isHaveUsbDevice: true,\n    //mella温度计测量状态\n    mellaMeasureStatus: \"disconnected\", //connected,disconnected,isMeasuring,complete\n\n    //点击菜单的序号\n    clickMenuIndex: \"1\",\n    err07Visible: false,\n    units: '℉'\n  };\n  componentDidMount() {\n    ipcRenderer.send(\"big\", win());\n    timerFun();\n    ipcRenderer.on(\"changeFenBianLv\", this.changeFenBianLv);\n    //获取窗口高度\n    this.resize();\n    //react监听屏幕窗口改变\n    window.addEventListener(\"resize\", this.resize);\n\n    //获取设备类型\n    this.getDevicesType();\n\n    //检测USB设备发来的信息\n    ipcRenderer.on(\"sned\", this._send);\n    //检测是否有USB设备\n    ipcRenderer.on(\"noUSB\", this._noUSB);\n    //定时查看mella温度计是否与底座连接或断开\n    this._whether_to_connect_to_mella();\n\n    //获取本地设置\n    this.getLocalSetting();\n    //获取单位\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`) || {}\n    console.log('----', hardSet);\n    let { isHua, } = hardSet\n    if (isHua === false) {\n      this.setState({\n        units: '℃'\n      })\n    } else {\n      this.setState({\n        units: '℉'\n      })\n    }\n\n\n  }\n  componentWillUnmount() {\n    //组件销毁，取消监听\n    window.removeEventListener(\"resize\", this.resize);\n    ipcRenderer.removeListener(\"changeFenBianLv\", this.changeFenBianLv);\n    ipcRenderer.removeListener(\"sned\", this._send);\n    ipcRenderer.removeListener(\"noUSB\", this._noUSB);\n    this.detectTimer && clearInterval(this.detectTimer);\n    this.rulerTimer && clearTimeout(this.rulerTimer);\n    message.destroy();\n  }\n  //检测到props里的hardwareList更新\n  UNSAFE_componentWillReceiveProps(prevProps) {\n    //对比props里的hardwareList和state里的hardwareList是否相同\n\n    if (!compareArray(prevProps.hardwareList, this.state.devicesTypeList)) {\n      let showHardWareTypeList = [].concat(prevProps.hardwareList);\n      showHardWareTypeList.push({\n        type: \"add\",\n        devices: [],\n      });\n      this.setState({\n        devicesTypeList: prevProps.hardwareList,\n        showHardWareTypeList,\n      });\n    }\n    if (!compareObject(prevProps.menuNum, this.state.clickMenuIndex)) {\n      this.setState({\n        clickMenuIndex: prevProps.menuNum,\n      });\n    }\n  }\n\n  changeFenBianLv = (e) => {\n    let ipcRenderer = window.electron.ipcRenderer;\n    // ipcRenderer.send('small')\n    ipcRenderer.send(\"big\", win());\n    // this.setState({}, () => {\n    //   if (this.props.test) {\n    //     if (this.props.test.current) {\n    //       this.props.test.current.getEchartsInstance().dispose();\n    //       this.props.test.current.getEchartsInstance().clear();\n    //       setTimeout(() => {\n    //         this.props.test.current.getEchartsInstance().resize();\n    //       }, 500);\n    //     }\n    //   }\n    // });\n\n  };\n  //获取本地设置\n  getLocalSetting = () => {\n    let hardSet = electronStore.get(`${storage.userId}-hardwareConfiguration`);\n    if (!hardSet) {\n      let settings = {\n        isHua: true,\n        is15: true,\n        self_tarting: false, //自启动\n        isBacklight: true,\n        isBeep: true,\n        backlightTimer: { length: 140, number: \"45\" },\n        autoOff: { length: 0, number: \"30\" },\n      };\n      electronStore.set(`${storage.userId}-hardwareConfiguration`, settings);\n    }\n  };\n  //检测USB设备发来的信息\n  _send = (e, data) => {\n    // console.log('检测USB设备发来的信息', data)\n    //data就是测量的数据，是十进制的数字\n    this.command(data)();\n  };\n  //监听是否有USB设备,true代表没有USB设备，false代表有USB设备\n  _noUSB = (e, data) => {\n    if (data === false) {\n      message.destroy();\n    } else {\n      if (this.state.isHaveUsbDevice) {\n        message.destroy();\n        message.error(\"The base is not detected. Please insert the base\", 0);\n      }\n    }\n    if (data === this.props.isHaveUsbDevice) {\n      this.props.setIsHaveUsbDeviceFun(!data);\n    }\n    if (data === this.state.isHaveUsbDevice) {\n      this.setState({\n        isHaveUsbDevice: !data,\n      });\n    }\n  };\n  //监听mella温度计是否与底座连接或断开\n  _whether_to_connect_to_mella = () => {\n    console.log(\"监听mella温度计是否与底座连接或断开\");\n    message.destroy();\n    this.detectTimer && clearInterval(this.detectTimer);\n    //2秒检测一次\n    this.detectTimer = setInterval(() => {\n      exchangeNum++;\n      //如果正在测量或者没有USB设备，不检测\n      if (isMeasure || !this.state.isHaveUsbDevice) {\n        return;\n      }\n      if (exchangeNum % 2 === 0) {\n        //让底座发送查询温度计信息指令\n        ipcRenderer.send(\"usbdata\", { command: \"07\", arr: [\"5A\"] });\n      } else {\n        ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n      }\n\n      //如果底座没有回应，则计算时间差,时间差大于5秒，则没与温度计连接\n      if (new Date() - initTime > 6000) {\n        this._disconnect_to_mella();\n      } else {\n      }\n    }, 2000);\n  };\n  //底座与温度计断开连接\n  _disconnect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus, setMellaDeviceIdFun } =\n      this.props;\n    if (mellaConnectStatus !== \"disconnected\") {\n      setMellaConnectStatusFun(\"disconnected\");\n    }\n    setMellaDeviceIdFun(\"\");\n  };\n  //底座与温度计连接\n  _connect_to_mella = () => {\n    let { setMellaConnectStatusFun, mellaConnectStatus } = this.props;\n    if (mellaConnectStatus !== \"connected\") {\n      setMellaConnectStatusFun(\"connected\");\n    }\n  };\n\n  // newArr 指的是十进制数字数组，   dataArr1:指的是16进制字符串数组\n  command = (newArr) => {\n    let dataArr1 = newArr.map((item) => {\n      if (item.toString(16).length < 2) {\n        return \"0\" + item.toString(16);\n      } else {\n        return item.toString(16);\n      }\n    });\n    //除了255,其他都是温度计的数据\n    let {\n      setMellaConnectStatusFun,\n      setMellaMeasureValueFun,\n      setMellaPredictValueFun,\n      setMellaMeasurePartFun,\n      mellaMeasurePart,\n      mellaConnectStatus,\n      setBiggieBodyFatFun,\n      setBiggieBodyWeightFun,\n      setBiggieConnectStatusFun,\n      setBiggieUnitFun,\n      setBiggieSameWeightCountFun,\n    } = this.props;\n    let {\n      biggieConnectStatus,\n      biggieBodyFat,\n      biggieBodyWeight,\n      biggieUnit,\n      biggieSameWeightCount,\n    } = this.props.hardwareReduce;\n\n    const instruction = [\n      209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 194, 7, 99, 255, 182,\n    ];\n\n    if (newArr[2] !== 7 && newArr[2] !== 255 && newArr[2] !== 182) {\n      initTime = new Date();\n      num07 = 0;\n      if (mellaConnectStatus === \"disconnected\") {\n        this._connect_to_mella();\n      }\n    } else {\n      num07++;\n    }\n\n    const commandArr = {\n      209: () => {\n        //腋温\n        //第一次测量去获取探头ID\n        if (firstEar) {\n          firstEar = false;\n          console.log(\"去获取探头id\");\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        let temp1 = parseFloat(`${dataArr1[3]}.${dataArr1[4]}`);\n        let temp0 = parseFloat(`${dataArr1[5]}.${dataArr1[6]}`);\n        let Temp = temp0;\n        if (\n          Temp === 24.7 ||\n          Temp === 0 ||\n          Temp === null ||\n          Temp === undefined\n        ) {\n          return;\n        }\n\n        let dataS = {\n          sample: clinicalIndex++,\n          data0: temp0,\n          data1: temp1,\n        };\n        clinicalYuce.push(dataS);\n        if (clinicalYuce.length >= 30) {\n          setMellaPredictValueFun(clinicalYuce);\n        }\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n\n        if (mellaMeasurePart !== \"腋温\" || mellaMeasurePart !== \"肛温\") {\n          setMellaMeasurePartFun(\"腋温\");\n        }\n        this.props.setMellaMeasureNumFun(this.props.mellaMeasureNum + 1);\n      },\n      208: () => {\n        //耳温\n\n        if (firstEar) {\n          firstEar = false;\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [] });\n          //重新测量,清空预测值\n          clinicalYuce = [];\n          clinicalIndex = 0;\n        }\n        //现在探头0可能不存在，所以把探头0改为探头1\n        let temp0 = parseFloat(`${dataArr1[7]}.${dataArr1[8]}`);\n        let Temp = temp0;\n        setMellaMeasureValueFun(Temp);\n        if (mellaConnectStatus !== \"isMeasuring\") {\n          setMellaConnectStatusFun(\"isMeasuring\");\n        }\n\n        if (mellaMeasurePart !== \"耳温\") {\n          setMellaMeasurePartFun(\"耳温\");\n        }\n      },\n      193: () => {\n        //指令结束\\自动结束后\\温度计收到预测数据后温度计返回值,结束后可能还会粘一组测量中的数据\n        //为了清除黏贴的数据，使用定时器\n        this.time193 && clearTimeout(this.time193);\n        this.time193 = setTimeout(() => {\n          if (new Date() - time194 < 1000) {\n            this.time193 && clearTimeout(this.time193);\n            return;\n          }\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaMeasureValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            console.log('要去写了', units, temp);\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          this.time193 && clearTimeout(this.time193);\n        }, 500);\n      },\n      194: () => {\n        //硬件收到机器学习结果并停止测量，\n        this.time193 && clearTimeout(this.time193);\n        time194 = new Date()\n        console.log(\"---机器学习\", newArr);\n        if (mellaConnectStatus !== \"complete\") {\n          setMellaConnectStatusFun(\"complete\");\n        }\n        const timer = setTimeout(() => {\n          setMellaMeasureValueFun(this.props.mellaPredictReturnValue);\n\n          firstEar = true;\n          if (mellaConnectStatus !== \"complete\") {\n            setMellaConnectStatusFun(\"complete\");\n          }\n\n          let { units } = this.state;\n          let Temp = this.props.mellaPredictReturnValue;\n          let temp =\n            units === \"℉\"\n              ? (Temp * 1.8 + 32).toFixed(1)\n              : Temp.toFixed(1);\n          if (this.props.selectHardwareType === \"mellaPro\") {\n            ipcRenderer.send(\"keyboardWriting\", temp);\n          }\n          clearTimeout(timer);\n        }, 80);\n        clinicalYuce = [];\n        clinicalIndex = 0;\n      },\n      192: () => {\n        //温度计收到40开始数据后返回的指令\n        switch (newArr[3]) {\n          case 90:\n            console.log(\"有探头，开始测量的返回指令·\");\n            break;\n          case 11:\n            console.log(\"没有探头，开始测量的返回值\");\n            break;\n        }\n      },\n      129: () => {\n        //返回硬件版本号\n        console.log(`返回的版本号为${newArr[3]}`);\n      },\n      135: () => {\n        //硬件的一些基本信息\n        /**\n         * ______________新版、旧版没法控制温度计__________________\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\n         * newArr[7] 无操作关机时间\n         * newArr[8] 背光时间\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\n         * newArr[10] 测量单位    01代表℃，00代表℉\n         */\n\n        let hardSet = electronStore.get(\n          `${storage.userId}-hardwareConfiguration`\n        );\n        if (!hardSet) {\n          hardSet = {\n            isHua: true,\n            is15: true,\n            self_tarting: false, //自启动\n            isBacklight: true,\n            isBeep: true,\n            backlightTimer: { length: 140, number: \"45\" },\n            autoOff: { length: 0, number: \"30\" },\n          };\n        }\n\n        let beep = hardSet.isBeep ? \"11\" : \"00\";\n        let unit = hardSet.isHua ? \"00\" : \"01\";\n\n        if (\n          dataArr1[7] === hardSet.autoOff.number &&\n          dataArr1[8] === hardSet.backlightTimer.number &&\n          dataArr1[9] === beep &&\n          dataArr1[10] === unit\n        ) {\n        } else {\n          console.log(\"不相同，去发送命令\");\n          let setArr = [\n            \"03\",\n            \"ed\",\n            \"07\",\n            \"dd\",\n            hardSet.autoOff.number,\n            hardSet.isBacklight ? hardSet.backlightTimer.number : \"00\",\n            hardSet.isBeep ? \"11\" : \"00\",\n            hardSet.isHua ? \"00\" : \"01\",\n          ];\n          ipcRenderer.send(\"usbdata\", { command: \"21\", arr: setArr });\n        }\n      },\n      238: () => {\n        //探头松动\n        console.log(\"探头松动\");\n        message.error(\n          \"The probe is loose, please re-install and measure again\",\n          5\n        );\n      },\n\n      98: () => {\n        //蓝牙连接断开\n        console.log(\n          \"断开连接---断开连接---断开连接---断开连接---断开连接---断开连接\"\n        );\n        firstEar = true;\n        // console.log(new Date() - is97Time);\n        if (new Date() - is97Time < 1300) {\n          return;\n        }\n        this._disconnect_to_mella();\n      },\n      97: () => {\n        //蓝牙连接\n        console.log(\n          \"连接成功---连接成功---连接成功---连接成功---连接成功---连接成功\"\n        );\n        this.getIdTimer && clearTimeout(this.getIdTimer);\n        this.getIdTimer = setTimeout(() => {\n          ipcRenderer.send(\"usbdata\", { command: \"31\", arr: [\"5A\"] });\n          this.getIdTimer && clearTimeout(this.getIdTimer);\n        }, 50);\n\n\n        is97Time = new Date();\n        this._connect_to_mella();\n      },\n      177: () => {\n        //探头id\n        let dataArr1 = newArr.map((item) => {\n          if (item.toString(16).length < 2) {\n            return \"0\" + item.toString(16);\n          } else {\n            return item.toString(16);\n          }\n        });\n\n        let id = \"\";\n        for (let i = 3; i < dataArr1.length - 2; i++) {\n          id += dataArr1[i];\n        }\n        // console.log(id, dataArr1[7]);\n        setMellaDeviceIdFun(id);\n        // this.setState({\n        //   probeID: id,\n        //   petVitalTypeId: dataArr1[7]\n        // })\n        if (dataArr1[7] === \"01\") {\n          if (mellaMeasurePart !== \"腋温\") {\n            setMellaMeasurePartFun(\"腋温\");\n          }\n        } else if (dataArr1[7] === \"02\") {\n          if (mellaMeasurePart !== \"肛温\") {\n            setMellaMeasurePartFun(\"肛温\");\n          }\n        } else if (dataArr1[7] === \"03\") {\n          if (mellaMeasurePart !== \"耳温\") {\n            setMellaMeasurePartFun(\"耳温\");\n          }\n        }\n      },\n      7: () => {\n        //发什么收什么，需要去重新插拔底座\n        console.log(\"重新插拔底座\");\n        if (num07 === 3 && this.state.err07Visible === false) {\n          this.setState({\n            err07Visible: true,\n          });\n        }\n      },\n      255: () => {\n        let length = newArr.length;\n        let frameLength = newArr[1]; //帧长\n        let itemLength = newArr[3] + 1; //数据位的长度   13\n        let dataIndex = 0;\n        let bluName = \"\";\n        let bluData = [];\n\n        while (itemLength < length && itemLength + 3 <= frameLength) {\n          let itemData = [];\n          for (let i = 0; i < newArr[dataIndex + 3] - 1; i++) {\n            itemData.push(dataArr1[i + dataIndex + 5]);\n          }\n          // console.log('--剪切的数据---', itemData);\n          switch (newArr[dataIndex + 4]) {\n            case 9:\n            case 8:\n              let str = \"\";\n              for (let i = 0; i < itemData.length; i++) {\n                let item = parseInt(itemData[i], 16);\n                str += String.fromCharCode(item);\n              }\n              bluName = str;\n              // console.log('--蓝牙名称:', bluName);\n\n              break;\n\n            case 255:\n              bluData = itemData;\n              break;\n            case 7:\n              console.log(\"---UUID\");\n              break;\n            case 239:\n              // console.log('---mac地址');\n              break;\n\n            case 3:\n              // console.log('----尺子的,不知道什么用');\n              break;\n\n            default:\n              console.log(\"直接跳出循环\");\n              return;\n          }\n          dataIndex = itemLength;\n          itemLength = itemLength + newArr[dataIndex + 3] + 1;\n        }\n        // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n        let { setReceiveBroadcastHardwareInfoFun, hardwareReduce } = this.props;\n\n        let { receiveBroadcastHardwareInfo } = hardwareReduce;\n\n        if (bluName.indexOf(\"C19\") !== -1 && bluData.length > 10) {\n          let json = {\n            deviceType: \"biggie\",\n            macId: \"00:00:00:00:00:00\",\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          let weight = `0x${bluData[10]}${bluData[11]}`;\n          let impedance = `0x${bluData[12]}${bluData[13]}`;\n          let sendWeight = null;\n          //C19发送的体重值单位只是KG\n          try {\n            weight = parseInt(weight) / 100;\n            if (impedance) {\n              impedance = parseInt(impedance);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n          if (weight === biggieBodyWeight) {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          } else {\n            setBiggieSameWeightCountFun(0);\n            setBiggieBodyWeightFun(weight);\n          }\n          if (impedance) {\n            setBiggieBodyFatFun(impedance);\n          }\n          if (biggieConnectStatus !== \"isMeasuring\") {\n            setBiggieConnectStatusFun(\"isMeasuring\");\n          }\n          if (biggieUnit !== \"kg\") {\n            setBiggieUnitFun(\"kg\");\n          }\n        } else if (bluName.indexOf(\"Mella Measure\") !== -1) {\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          // console.log('结束循环蓝牙名称', bluData)\n          let confirmBtn = bluData[8]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[11], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[9];\n          let num2 = bluData[10];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n        } else if (bluName.indexOf(\"Biggie\") !== -1 && bluData.length > 13) {\n          // console.log(\"biggie\", bluData);\n          if (bluData[0] !== \"aa\") {\n            return;\n          }\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n\n          let newArr = bluData;\n\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n\n          let json = {\n            deviceType: \"biggie\",\n            macId: mac,\n            name: bluName,\n          };\n\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n          //定义体重的控制字符\n          let weightControl = newArr[8];\n          //定义体重的值\n          let weight = `${getVal(newArr[9].toString(16))}${getVal(\n            newArr[10].toString(16)\n          )}`;\n          weight = parseInt(weight, 16);\n          //定义体脂值\n          let impedance = `${getVal(newArr[12].toString(16))}${getVal(\n            newArr[13].toString(16)\n          )}`;\n          impedance = parseInt(impedance, 16);\n          let arr11 = getVal(newArr[11].toString(16));\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n\n          let weightUnits = arr11[1] === \"1\" ? \"lb\" : \"kg\";\n          let biggieStatus = \"isMeasuring\";\n          switch (weightControl) {\n            case 1:\n              biggieStatus = \"connected\";\n              break;\n            case 2:\n              biggieStatus = \"isMeasuring\";\n              break;\n            case 3:\n              biggieStatus = \"complete\";\n              break;\n            default:\n              break;\n          }\n          if (biggieStatus !== biggieConnectStatus) {\n            setBiggieConnectStatusFun(biggieStatus);\n          }\n          if (weightUnits !== biggieUnit) {\n            setBiggieUnitFun(weightUnits);\n          }\n          if (weight !== biggieBodyWeight) {\n            setBiggieBodyWeightFun(weight);\n            setBiggieSameWeightCountFun(0);\n          } else {\n            setBiggieSameWeightCountFun(biggieSameWeightCount + 1);\n          }\n          if (impedance !== biggieBodyFat) {\n            setBiggieBodyFatFun(impedance);\n          }\n        } else if (bluName.indexOf(\"MaeBowl\") !== -1 && bluData.length > 10) {\n          function getVal(shi) {\n            if (`${shi}`.length < 2) {\n              return `0${shi}`;\n            }\n            return `${shi}`;\n          }\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          //定义硬件版本号\n          let hardwareVersion = bluData[7] + bluData[8];\n          //定义软件版本号\n          let softwareVersion = bluData[9];\n          //定义wifi标志位\n          let wifiFlag = bluData[10];\n          //定义控制字\n          let control = bluData[11];\n          //定义重量\n          let weight = `${getVal(bluData[12].toString(16))}${getVal(\n            bluData[13].toString(16)\n          )}`\n          weight = parseInt(weight, 16);\n          let arr11 = bluData[14]\n          weight = weight / Math.pow(10, parseInt(arr11[0]));\n          let weightUnits = null\n          switch (arr11[1]) {\n            case '0':\n              weightUnits = 'kg'\n\n              break;\n            case '1':\n              weightUnits = 'lb'\n\n              break;\n            case '2':\n              weightUnits = 'g'\n\n              break;\n            case '3':\n              weightUnits = 'ml'\n\n              break;\n            case '4':\n              weightUnits = 'oz'\n\n              break;\n\n            default:\n              break;\n          }\n          console.log({\n            // mac,\n            // hardwareVersion,\n            // softwareVersion,\n            wifiFlag,\n            control,\n            weight,\n            weightUnits,\n          });\n\n\n        } else if (bluName.indexOf(\"Tabby\") !== -1 && bluData.length > 10) {\n          // console.log('硬件名称', bluName, '-----硬件数据', bluData);\n          let {\n            hardwareReduce,\n            setRulerConfirmCountFun,\n            setRulerConnectStatusFun,\n            setRulerMeasureValueFun,\n            setRulerUnitFun,\n          } = this.props;\n          let {\n            rulerConnectStatus,\n            rulerMeasureValue,\n            rulerUnit,\n            rulerConfirmCount,\n            receiveBroadcastHardwareInfo,\n          } = hardwareReduce;\n          let confirmBtn = bluData[10]; //十六进制数字，值为01代表尺子拉动，值为x2代表按了尺子确认按钮\n          let rulerUnitNum = parseInt(bluData[13], 16); //十进制数字，值等于11代表单位为in，00代表单位为cm\n          let newVal = null; //为测量数值，和单位匹配对应\n          const ITEMINDEX = 6;\n          let units = rulerUnitNum === 0 ? \"cm\" : \"in\";\n          let mac = bluData[1];\n          for (let i = 2; i <= 6; i++) {\n            mac += `:${bluData[i]}`;\n          }\n          let json = {\n            deviceType: \"tape\",\n            macId: mac,\n            name: bluName,\n          };\n          if (!compareObject(receiveBroadcastHardwareInfo, json)) {\n            setReceiveBroadcastHardwareInfoFun(json);\n          }\n\n          if (units !== rulerUnit) {\n            setRulerUnitFun(units);\n          }\n          if (rulerConnectStatus !== \"isMeasuring\") {\n            setRulerConnectStatusFun(\"isMeasuring\");\n          }\n          this.rulerTimer && clearTimeout(this.rulerTimer);\n          this.rulerTimer = setTimeout(() => {\n            setRulerConnectStatusFun(\"disconnected\");\n          }, 5000);\n          //num1和num2组成测得的测量值，num的值为测量数值，单位恒为厘米\n          let num1 = bluData[11];\n          let num2 = bluData[12];\n          let num = getVal(num1, num2);\n          try {\n            newVal = parseFloat(num);\n            if (rulerUnitNum === 17) {\n              newVal = newVal.toFixed(2);\n            } else {\n              newVal = newVal.toFixed(1);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n\n          function getVal(shi, xiaoshuo) {\n            let num1 = parseInt(shi, 16);\n            let num2 = parseInt(xiaoshuo, 16);\n            return `${num1}.${num2}`;\n          }\n          if (newVal !== rulerMeasureValue) {\n            setRulerMeasureValueFun(newVal);\n          }\n\n          //点击了确认按钮\n\n          if (\n            confirmBtn[1] === \"2\" &&\n            parseInt(confirmBtn[0]) !== rulerConfirmCount &&\n            confirmBtn[0] !== null\n          ) {\n            setRulerConfirmCountFun(parseInt(confirmBtn[0], 16));\n          }\n\n\n\n\n        }\n      },\n      182: () => {\n        console.log(\"打开了底座通信\");\n      },\n    };\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]];\n    } else {\n      return () => {\n        console.log(\"没有控制命令\", commandArr);\n      };\n    }\n  };\n\n  testCheck = (arr) => {\n    if (arr.length < 7) {\n      return false;\n    }\n    let i = 7;\n    let checkFloag = arr[i];\n\n    for (i = 8; i < arr.length - 2; i++) {\n      checkFloag = checkFloag ^ arr[i];\n    }\n    return checkFloag;\n  };\n  getMac = (arr) => {\n    // console.log(arr);\n    let str = arr[1].toString(16);\n    if (str.length === 1) {\n      str = \"0\" + str;\n    }\n    for (let i = 2; i < 7; i++) {\n      let item = arr[i].toString(16);\n      if (item.length === 1) {\n        item = \"0\" + item;\n      }\n      str += `:${item}`;\n      // }\n    }\n\n    return str;\n  };\n\n  //监听屏幕窗口改变\n  resize = () => {\n    let { offsetWidth, offsetHeight } = this.mainbody;\n    // console.log('resize', this.mainbody, { offsetWidth, offsetHeight });\n    if (offsetHeight !== this.state.bodyHeight) {\n      this.setState({\n        bodyHeight: offsetHeight - px(50),\n      });\n    }\n  };\n  //获取设备类型(渲染左侧硬件种类侧边栏)\n  getDevicesType = () => {\n    // let devicesTypeList = [\n    //   {\n    //     type: 'mellaPro',\n    //     devices: [\n    //       {\n    //         name: 'mellaPro',\n    //         mac: '',\n    //         deviceType: 'mellaPro',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'biggie',\n    //     devices: [\n    //       {\n    //         name: 'biggie',\n    //         mac: '',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       },\n    //       {\n    //         name: 'biggie002',\n    //         mac: '1253',\n    //         deviceType: 'biggie',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'otterEQ',\n    //     devices: [\n    //       {\n    //         name: 'otterEQ',\n    //         mac: '',\n    //         deviceType: 'otterEQ',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n\n    //   {\n    //     type: 'rfid',\n    //     devices: [\n    //       {\n    //         name: 'rfid',\n    //         mac: '',\n    //         deviceType: 'rfid',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'tape',\n    //     devices: [\n    //       {\n    //         name: 'tape',\n    //         mac: '',\n    //         deviceType: 'tape',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   },\n    //   {\n    //     type: 'maeBowl',\n    //     devices: [\n    //       {\n    //         name: 'maeBowl',\n    //         mac: '',\n    //         deviceType: 'maeBowl',\n    //         examRoom: '',\n    //       }\n    //     ]\n    //   }\n    // ]\n\n    let devicesTypeList =\n      electronStore.get(\n        `${storage.lastOrganization}-${storage.userId}-devicesTypeList`\n      ) || [];\n    // console.log(\"获取的设22222备列表\", devicesTypeList);\n    if (devicesTypeList.length === 0) {\n      devicesTypeList.push({\n        type: \"mellaPro\",\n        devices: [\n          {\n            name: \"mellaPro\",\n            mac: \"\",\n            deviceType: \"mellaPro\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"biggie\",\n        devices: [\n          {\n            name: \"biggie\",\n            mac: \"\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n          {\n            name: \"biggie002\",\n            mac: \"1253\",\n            deviceType: \"biggie\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"tape\",\n        devices: [\n          // {\n          //   name: \"tape\",\n          //   mac: \"45264\",\n          //   deviceType: \"tape\",\n          //   examRoom: \"\",\n          // },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"otterEQ\",\n        devices: [\n          {\n            name: \"otterEQ\",\n            mac: \"375082\",\n            deviceType: \"otterEQ\",\n            examRoom: \"\",\n          },\n        ],\n      });\n      devicesTypeList.push({\n        type: \"mabel\",\n        devices: [\n          {\n            name: \"mabel\",\n            mac: \"2.1.5.123.5\",\n            deviceType: \"mabel\",\n            examRoom: \"\",\n          },\n        ],\n      });\n    }\n\n    let hardList = [].concat(devicesTypeList);\n    this.props.setHardwareList(hardList);\n    let showHardWareTypeList = [].concat(devicesTypeList);\n    showHardWareTypeList.push({\n      type: \"add\",\n      devices: [],\n    });\n\n    this.setState({\n      devicesTypeList,\n      showHardWareTypeList,\n    });\n  };\n  body = () => {\n    let { selectHardwareType } = this.props;\n\n    let { bodyHeight, clickMenuIndex } = this.state;\n    let measurePage = null;\n    switch (clickMenuIndex) {\n      case \"1\":\n        if (electronStore.get(`${storage.userId}-isClical`)) {\n          return (\n            <>\n              <HardAndPetsUI bodyHeight={bodyHeight} />\n              <ClininalStudy bodyHeight={bodyHeight} />\n            </>\n          );\n        } else {\n          switch (selectHardwareType) {\n            case \"mellaPro\":\n              measurePage = <TemperaturePage bodyHeight={bodyHeight} />;\n\n              break;\n            case \"biggie\":\n              measurePage = <BiggiePage bodyHeight={bodyHeight} />;\n              break;\n\n            case \"tape\":\n              measurePage = <ScanPage bodyHeight={bodyHeight} />;\n              break;\n            case \"otterEQ\":\n              measurePage = <OtterEQPage bodyHeight={bodyHeight} />;\n              break;\n            case \"mabel\":\n              measurePage = <MabelPage bodyHeight={bodyHeight} />;\n              break;\n\n            default:\n              break;\n          }\n          if (selectHardwareType === \"add\") {\n            return <AddDevice bodyHeight={bodyHeight} />;\n          } else if (selectHardwareType === 'prescribePlan') {\n            return <EnrolledPlan bodyHeight={bodyHeight} />;\n          }\n          else {\n            return (\n              <>\n                <HardAndPetsUI bodyHeight={bodyHeight} />\n                {measurePage}\n              </>\n            );\n          }\n        }\n      case \"2\":\n        return <AllPets bodyHeight={bodyHeight} />;\n      case \"CombineScales\":\n        return <CombineScales bodyHeight={bodyHeight} />;\n      case \"AddDevice\":\n        return <AddDevice bodyHeight={bodyHeight} />;\n      case \"3\":\n        return <ScheduledPetPage bodyHeight={bodyHeight} />;\n\n      case \"AddScheduledPet\":\n        return <AddScheduledPet bodyHeight={bodyHeight} />;\n      case \"6\":\n        return (\n          <>\n            <HardAndPetsUI bodyHeight={bodyHeight} />\n            <ClininalStudy bodyHeight={bodyHeight} />\n          </>\n        );\n      case \"4\":\n        return (\n          <MyAccount bodyHeight={bodyHeight} />\n        );\n      default:\n        break;\n    }\n  };\n\n  render() {\n    let { bodyHeight } = this.state;\n\n    return (\n      <div\n        className=\"flex\"\n        id=\"mainbody\"\n        ref={(val) => (this.mainbody = val)}\n        onClick={() => {\n          if (this.props.selectHardwareModalShowFun) {\n            this.props.selectHardwareModalShowFun(false);\n          }\n        }}\n      >\n        <Heard />\n        <div className=\"mainbody-body\">\n          <HardWareTypeUI\n            bodyHeight={bodyHeight}\n            devicesTypeList={this.state.showHardWareTypeList}\n          />\n          {this.body()}\n        </div>\n        <Modal\n          visible={this.state.err07Visible}\n          // visible={true}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          width={330}\n          closable={false}\n          footer={[]}\n          destroyOnClose={true}\n          wrapClassName=\"vetPrifileModal\"\n        >\n          <div id=\"vetPrifileModal\">\n            <div className=\"title\">prompt</div>\n\n            <div className=\"text\">Please re-plug the base device</div>\n\n            <div\n              className=\"btn\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                marginBottom: \"5px\",\n              }}\n            >\n              <button\n                onClick={() => {\n                  this.setState({\n                    err07Visible: false,\n                  });\n                  num07 = 0;\n                }}\n              >\n                OK\n              </button>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\nexport default connect(\n  (state) => ({\n    isHaveUsbDevice: state.hardwareReduce.isHaveUsbDevice,\n    mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\n    mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\n    mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\n    mellaMeasurePart: state.hardwareReduce.mellaMeasurePart,\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\n    hardwareReduce: state.hardwareReduce,\n    hardwareList: state.hardwareReduce.hardwareList,\n    hardwareInfo: state.hardwareReduce.selectHardwareInfo,\n    menuNum: state.userReduce.menuNum,\n    mellaPredictReturnValue: state.hardwareReduce.mellaPredictReturnValue,\n    test: state.userReduce.test\n  }),\n  {\n    setHardwareList,\n    selectHardwareModalShowFun,\n    setIsHaveUsbDeviceFun,\n\n    setMellaConnectStatusFun,\n    setMellaMeasureValueFun,\n    setMellaPredictValueFun,\n    setMellaMeasurePartFun,\n    setMellaDeviceIdFun,\n    setBiggieConnectStatusFun,\n    setBiggieBodyFatFun,\n    setBiggieBodyWeightFun,\n    setBiggieUnitFun,\n    setBiggieSameWeightCountFun,\n    setRulerConnectStatusFun,\n    setRulerMeasureValueFun,\n    setRulerUnitFun,\n    setRulerConfirmCountFun,\n    setReceiveBroadcastHardwareInfoFun,\n    setMellaMeasureNumFun,\n  }\n)(App);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\addScheduledPet\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\avatar\\Avatar.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\myModal\\MyModal.jsx",["808","809"],"\r\n/**\r\n * \r\n * @param {boolean} visible 控制modal框是否显示\r\n * @param {element} element 自定义modal框里面的内容，默认是组件是加载中。。。\r\n * @returns {element} 这是自己写的一个modal框\r\n */\r\n\r\nimport React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport './myModal.less'\r\nimport { px, pX, MTop, mTop } from '../px'\r\n\r\nclass MyModal extends Component {\r\n\r\n  render () {\r\n    let { visible, element, text } = this.props\r\n    // console.log('---上层组件传来的值---', this.props);\r\n\r\n    if (visible) {\r\n      let body = element ? element :\r\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column' }}>\r\n          <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\r\n            <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\r\n          </div>\r\n          <p>\r\n            {text ? text : 'loading...'}\r\n          </p>\r\n        </div>\r\n      return (\r\n        <div className=\"myModal\">\r\n          {body}\r\n        </div>\r\n      )\r\n    } else {\r\n      return (null)\r\n    }\r\n\r\n  }\r\n}\r\n\r\nMyModal.propTypes = {\r\n  visible: PropTypes.bool,\r\n  element: PropTypes.element,\r\n  text: PropTypes.string\r\n\r\n}\r\nMyModal.defaultProps = {\r\n  visible: false,\r\n  text: 'loading...'\r\n}\r\n\r\nexport default MyModal","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\slider\\Slider.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mabelPage\\index.jsx",["810","811","812"],"import React, { useEffect, useState } from \"react\";\nimport { Layout } from \"antd\";\n\nimport HeaderItem from \"./../temperaturePage/components/headerItem\";\nimport LinkEquipment from \"./components/linkEquipment\";\n\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport {\n  selectHardwareModalShowFun,\n  petSortTypeFun,\n  petDetailInfoFun,\n} from \"../../store/actions\";\nimport PropTypes from 'prop-types';\n\nimport \"./index.less\";\n\nconst { Content, Header } = Layout;\nconst MabelPage = ({ petMessage, hardwareMessage, bodyHeight }) => {\n\n  return (\n    <Layout className=\"mabelPageBox\" style={{ height: bodyHeight }}>\n      <div className=\"headerContentBox\" style={{ background: \"#fff\", position: 'relative' }}>\n        <div style={{ height: '100%' }}>\n          <HeaderItem />\n        </div>\n      </div>\n      {_.isEmpty(petMessage) ? (\n        <div className=\"chackPatientBox\">\n          <p className=\"chackPatientTitle\">Select a patient</p>\n        </div>\n      ) : (\n        <Content className={\"mabelPagecontentBox\"}>\n          <LinkEquipment />\n        </Content>\n      )}\n    </Layout>\n  );\n};\n\nMabelPage.propTypes = {\n  bodyHeight: PropTypes.number,\n  devicesTypeList: PropTypes.array\n}\n\nexport default connect(\n  (state) => ({\n    petMessage: state.petReduce.petDetailInfo,\n    hardwareMessage: state.hardwareReduce,\n  }),\n  {\n    selectHardwareModalShowFun,\n    petSortTypeFun,\n    petDetailInfoFun,\n  }\n)(MabelPage);\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\utils\\uploadImg\\UploadImg.js",["813"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\components\\selectPetModal\\index.jsx",["814","815","816","817"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\actionTypes\\index.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\mainbody\\HardListModal.jsx",["818"],"import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nimport deviceBiggie from \"./../../assets/img/deviceIcon-biggie.png\";\r\nimport nextImg from \"./../../assets/img/nextImg.png\";\r\nimport dui from \"./../../assets/img/dui.png\";\r\nimport deviceMella from \"./../../assets/img/deviceIcon-mella.png\";\r\nimport deviceRfid from \"./../../assets/img/deviceIcon-rfid.png\";\r\nimport deviceMaeBowl from \"./../../assets/img/deviceIcon-maeBowl.png\";\r\nimport deviceTape from \"./../../assets/img/deviceIcon-tape.png\";\r\nimport deivceAdd from \"./../../assets/img/hardList-add.png\";\r\nimport scales from \"./../../assets/img/scales.png\";\r\n\r\nimport { px } from \"../../utils/px\";\r\nimport { compareObject } from \"../../utils/current\";\r\nimport electronStore from \"../../utils/electronStore\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectHardwareInfoFun,\r\n  selectHardwareModalShowFun,\r\n  setMenuNum,\r\n  setSelectHardwareType\r\n} from \"./../../store/actions\";\r\n\r\nimport \"./mainbody.less\";\r\n\r\nlet storage = window.localStorage;\r\nconst HardAndPetsUI = ({\r\n  hardwareList,\r\n  selectHardwareType,\r\n  selectHardwareInfoFun,\r\n  selectHardwareModalShowFun,\r\n  setInfo,\r\n  setMenuNum,\r\n  hardwareMessage,\r\n  setSelectHardwareType\r\n}) => {\r\n  let { selectHardwareInfo } = hardwareMessage;\r\n  //定义数组hardwareList\r\n  const [hardwareListArr, setHardwareList] = useState([]);\r\n  //定义选择的硬件详细信息\r\n  const [selectHardwareDetail, setSelectHardwareDetail] = useState({});\r\n\r\n  let options = hardwareListArr.map((item, index) => {\r\n    let { name, mac, deviceType } = item;\r\n    let deviceTypeStr = \"\",\r\n      img = null;\r\n    switch (deviceType) {\r\n      case \"biggie\":\r\n        deviceTypeStr = \"Biggie Pro Scale\";\r\n        img = <img src={deviceBiggie} alt=\"\" width={px(75)} />;\r\n        break;\r\n      case \"rfid\":\r\n        deviceTypeStr = \"RFID\";\r\n        img = <img src={deviceRfid} alt=\"\" width={px(40)} />;\r\n        break;\r\n      case \"tape\":\r\n        deviceTypeStr = \"Tabby\";\r\n        img = <img src={deviceTape} alt=\"\" width={px(50)} />;\r\n        break;\r\n      case \"maeBowl\":\r\n        deviceTypeStr = \"MaeBowl\";\r\n        img = <img src={deviceMaeBowl} alt=\"\" width={px(40)} />;\r\n\r\n        break;\r\n      case \"otterEQ\":\r\n        deviceTypeStr = \"Otter EQ\";\r\n\r\n        break;\r\n      case \"mellaPro\":\r\n        deviceTypeStr = \"Mella Pro\";\r\n        img = <img src={deviceMella} alt=\"\" width={px(20)} />;\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    //判断对象是否相等\r\n\r\n    let isEqual = compareObject(item, selectHardwareDetail);\r\n    // console.log(\"判断两个对象是否相同\", isEqual, item, selectHardwareDetail);\r\n    return (\r\n      <li\r\n        key={`${index}`}\r\n        onClick={() => {\r\n          setSelectHardwareDetail(item);\r\n          electronStore.set(\r\n            `${storage.lastOrganization}-${storage.userId}-${deviceType}-selectDeviceInfo`,\r\n            item\r\n          );\r\n          selectHardwareInfoFun(item);\r\n          setInfo && setInfo(item);\r\n        }}\r\n      >\r\n        <div\r\n          className=\"hardListInfo\"\r\n          style={{ paddingTop: px(15), paddingBottom: px(15) }}\r\n        >\r\n          <div className=\"deviceL\">\r\n            <div\r\n              className=\"hardIcon\"\r\n              style={{ marginLeft: px(3), marginRight: px(3), width: px(75) }}\r\n            >\r\n              {img}\r\n            </div>\r\n            <div className=\"deviceInfo\">\r\n              <div className=\"deviceName\">{`Device Name: ${name}`}</div>\r\n              <div className=\"deviceName\">{deviceTypeStr}</div>\r\n              <div className=\"deviceName\">{`SN: ${mac}`}</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"deviceR\" style={{ marginRight: px(20) }}>\r\n            <img src={nextImg} alt=\"\" width={px(13)} />\r\n            {isEqual && (\r\n              <div\r\n                className=\"seleIcon\"\r\n                style={{ width: px(18), height: px(18), top: px(-30) }}\r\n              >\r\n                <img src={dui} alt=\"\" width={px(12)} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n  const otherItems = () => {\r\n    let deviceType = selectHardwareDetail.deviceType;\r\n    let isBiggie = deviceType === \"biggie\",\r\n      deviceTypeStr = \"\";\r\n    switch (deviceType) {\r\n      case \"biggie\":\r\n        deviceTypeStr = \"Biggie\";\r\n        break;\r\n      case \"rfid\":\r\n        deviceTypeStr = \"RFID\";\r\n        break;\r\n      case \"tape\":\r\n        deviceTypeStr = \"Tabby\";\r\n\r\n        break;\r\n      case \"maeBowl\":\r\n        deviceTypeStr = \"MaeBowl\";\r\n\r\n        break;\r\n      case \"otterEQ\":\r\n        deviceTypeStr = \"Otter EQ\";\r\n        break;\r\n      case \"mellaPro\":\r\n        deviceTypeStr = \"Mella\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    // console.log(\"selectHardwareDetail\", selectHardwareDetail);\r\n    return (\r\n      <div>\r\n        {isBiggie && (\r\n          <div\r\n            className=\"addNewDevice\"\r\n            style={{ paddingTop: px(10), paddingBottom: px(10) }}\r\n            onClick={() => setMenuNum(\"CombineScales\")}\r\n          >\r\n            <div\r\n              className=\"addNewDeviceText\"\r\n              style={{ paddingLeft: px(25) }}\r\n            >{`Combine Scales`}</div>\r\n            <div className=\"addNewDeviceImg\">\r\n              <img\r\n                src={scales}\r\n                alt=\"\"\r\n                width={px(30)}\r\n                style={{ marginRight: px(20) }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div\r\n          className=\"addNewDevice\"\r\n          style={{ paddingTop: px(10), paddingBottom: px(10) }}\r\n          onClick={() => {\r\n            setMenuNum(\"1\");\r\n            setSelectHardwareType('add');\r\n          }}\r\n        >\r\n          <div\r\n            className=\"addNewDeviceText\"\r\n            style={{ paddingLeft: px(25), }}\r\n\r\n\r\n          >{`Add New ${deviceTypeStr}`}</div>\r\n          <div className=\"addNewDeviceImg\">\r\n            <img\r\n              src={deivceAdd}\r\n              alt=\"\"\r\n              width={px(30)}\r\n              style={{ marginRight: px(20) }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    //根据设备类型获取到此类型下的所有硬件,并用来展示\r\n    for (let i = 0; i < hardwareList.length; i++) {\r\n      const element = hardwareList[i];\r\n      if (element.type === selectHardwareType) {\r\n        let list = element.devices || [];\r\n        setHardwareList(list);\r\n        //获取被选中的硬件的详细信息\r\n        let selectHardwareInfoData = selectHardwareInfo || {};\r\n        if (selectHardwareInfoData === {}) {\r\n          let selectHardwareInfoData = list[0] || {};\r\n          setSelectHardwareDetail(selectHardwareInfoData);\r\n        } else {\r\n          let sameFlag = false;\r\n          for (let i = 0; i < list.length; i++) {\r\n            const element = list[i];\r\n            if (\r\n              element.name === selectHardwareInfoData.name &&\r\n              element.mac === selectHardwareInfoData.mac\r\n            ) {\r\n              setSelectHardwareDetail(selectHardwareInfoData);\r\n              sameFlag = true;\r\n              break;\r\n            }\r\n          }\r\n          console.log(\"sameFlag\", sameFlag);\r\n          if (!sameFlag) {\r\n            console.log(\"设置了默认值\");\r\n            let selectHardwareInfoData = list[0] || {};\r\n            setSelectHardwareDetail(selectHardwareInfoData);\r\n          }\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }, [selectHardwareType]);\r\n\r\n  return (\r\n    <div\r\n      className=\"hardList\"\r\n      style={{ top: px(90), zIndex: 999 }}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        selectHardwareModalShowFun(false);\r\n      }}\r\n    >\r\n      <ul>{options}</ul>\r\n      {otherItems()}\r\n    </div>\r\n  );\r\n};\r\n\r\nHardAndPetsUI.propTypes = {\r\n  setInfo: PropTypes.func,\r\n};\r\n//默认值\r\nHardAndPetsUI.defaultProps = {\r\n  setInfo: () => { },\r\n};\r\nexport default connect(\r\n  (state) => ({\r\n    selectHardwareType: state.hardwareReduce.selectHardwareType,\r\n    hardwareList: state.hardwareReduce.hardwareList,\r\n    userMessage: state.userReduce,\r\n    hardwareMessage: state.hardwareReduce,\r\n  }),\r\n  { selectHardwareInfoFun, selectHardwareModalShowFun, setMenuNum, setSelectHardwareType }\r\n)(HardAndPetsUI);\r\n","C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\vetSpire.js",["819","820"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\melladesk\\VetSpire.js",["821","822","823"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrganization\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\store\\reducers\\userReduce.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\petall.js",["824","825"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\api.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\newOrg\\index.jsx",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\otterEQ\\index.jsx",["826","827"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\ezyvetApi.js",[],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\team\\index.jsx",["828","829","830"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\pages\\signUpVerifyEmail\\index.jsx",["831"],"C:\\Users\\nonagon\\Desktop\\project\\Mella_Desktop_Super_USB\\src\\api\\mellaserver\\index.js",[],{"ruleId":"832","severity":1,"message":"833","line":19,"column":10,"nodeType":"834","messageId":"835","endLine":19,"endColumn":18},{"ruleId":"832","severity":1,"message":"836","line":24,"column":7,"nodeType":"834","messageId":"835","endLine":24,"endColumn":13},{"ruleId":"832","severity":1,"message":"837","line":348,"column":11,"nodeType":"834","messageId":"835","endLine":348,"endColumn":17},{"ruleId":"832","severity":1,"message":"838","line":416,"column":19,"nodeType":"834","messageId":"835","endLine":416,"endColumn":26},{"ruleId":"832","severity":1,"message":"839","line":417,"column":9,"nodeType":"834","messageId":"835","endLine":417,"endColumn":13},{"ruleId":"840","severity":1,"message":"841","line":582,"column":15,"nodeType":"842","endLine":582,"endColumn":50},{"ruleId":"832","severity":1,"message":"843","line":22,"column":9,"nodeType":"834","messageId":"835","endLine":22,"endColumn":15},{"ruleId":"832","severity":1,"message":"844","line":45,"column":11,"nodeType":"834","messageId":"835","endLine":45,"endColumn":17},{"ruleId":"832","severity":1,"message":"845","line":45,"column":19,"nodeType":"834","messageId":"835","endLine":45,"endColumn":24},{"ruleId":"832","severity":1,"message":"846","line":61,"column":9,"nodeType":"834","messageId":"835","endLine":61,"endColumn":22},{"ruleId":"832","severity":1,"message":"847","line":144,"column":18,"nodeType":"834","messageId":"835","endLine":144,"endColumn":27},{"ruleId":"832","severity":1,"message":"848","line":144,"column":29,"nodeType":"834","messageId":"835","endLine":144,"endColumn":37},{"ruleId":"849","severity":1,"message":"850","line":544,"column":19,"nodeType":"842","endLine":551,"endColumn":61},{"ruleId":"840","severity":1,"message":"841","line":559,"column":19,"nodeType":"842","endLine":567,"endColumn":30},{"ruleId":"851","replacedBy":"852"},{"ruleId":"853","replacedBy":"854"},{"ruleId":"832","severity":1,"message":"855","line":3,"column":16,"nodeType":"834","messageId":"835","endLine":3,"endColumn":23},{"ruleId":"832","severity":1,"message":"856","line":3,"column":25,"nodeType":"834","messageId":"835","endLine":3,"endColumn":31},{"ruleId":"832","severity":1,"message":"857","line":3,"column":33,"nodeType":"834","messageId":"835","endLine":3,"endColumn":38},{"ruleId":"832","severity":1,"message":"858","line":5,"column":10,"nodeType":"834","messageId":"835","endLine":5,"endColumn":22},{"ruleId":"832","severity":1,"message":"859","line":6,"column":10,"nodeType":"834","messageId":"835","endLine":6,"endColumn":24},{"ruleId":"832","severity":1,"message":"860","line":16,"column":8,"nodeType":"834","messageId":"835","endLine":16,"endColumn":16},{"ruleId":"832","severity":1,"message":"861","line":23,"column":8,"nodeType":"834","messageId":"835","endLine":23,"endColumn":17},{"ruleId":"832","severity":1,"message":"862","line":24,"column":8,"nodeType":"834","messageId":"835","endLine":24,"endColumn":21},{"ruleId":"832","severity":1,"message":"863","line":26,"column":8,"nodeType":"834","messageId":"835","endLine":26,"endColumn":16},{"ruleId":"832","severity":1,"message":"864","line":37,"column":8,"nodeType":"834","messageId":"835","endLine":37,"endColumn":15},{"ruleId":"832","severity":1,"message":"865","line":40,"column":9,"nodeType":"834","messageId":"835","endLine":40,"endColumn":16},{"ruleId":"832","severity":1,"message":"836","line":41,"column":7,"nodeType":"834","messageId":"835","endLine":41,"endColumn":13},{"ruleId":"832","severity":1,"message":"866","line":45,"column":7,"nodeType":"834","messageId":"835","endLine":45,"endColumn":17},{"ruleId":"832","severity":1,"message":"867","line":98,"column":10,"nodeType":"834","messageId":"835","endLine":98,"endColumn":19},{"ruleId":"832","severity":1,"message":"868","line":98,"column":21,"nodeType":"834","messageId":"835","endLine":98,"endColumn":33},{"ruleId":"832","severity":1,"message":"869","line":130,"column":10,"nodeType":"834","messageId":"835","endLine":130,"endColumn":19},{"ruleId":"832","severity":1,"message":"870","line":213,"column":13,"nodeType":"834","messageId":"835","endLine":213,"endColumn":20},{"ruleId":"849","severity":1,"message":"850","line":815,"column":17,"nodeType":"842","endLine":815,"endColumn":62},{"ruleId":"849","severity":1,"message":"850","line":820,"column":17,"nodeType":"842","endLine":820,"endColumn":65},{"ruleId":"840","severity":1,"message":"841","line":875,"column":15,"nodeType":"842","endLine":881,"endColumn":16},{"ruleId":"840","severity":1,"message":"841","line":884,"column":15,"nodeType":"842","endLine":890,"endColumn":16},{"ruleId":"849","severity":1,"message":"850","line":984,"column":17,"nodeType":"842","endLine":984,"endColumn":62},{"ruleId":"849","severity":1,"message":"850","line":988,"column":15,"nodeType":"842","endLine":988,"endColumn":64},{"ruleId":"840","severity":1,"message":"841","line":1106,"column":13,"nodeType":"842","endLine":1110,"endColumn":14},{"ruleId":"840","severity":1,"message":"841","line":1187,"column":15,"nodeType":"842","endLine":1195,"endColumn":16},{"ruleId":"840","severity":1,"message":"841","line":1210,"column":13,"nodeType":"842","endLine":1210,"endColumn":76},{"ruleId":"840","severity":1,"message":"841","line":1281,"column":15,"nodeType":"842","endLine":1289,"endColumn":16},{"ruleId":"840","severity":1,"message":"841","line":1313,"column":15,"nodeType":"842","endLine":1317,"endColumn":16},{"ruleId":"832","severity":1,"message":"871","line":1343,"column":9,"nodeType":"834","messageId":"835","endLine":1343,"endColumn":15},{"ruleId":"872","severity":1,"message":"873","line":1379,"column":6,"nodeType":"874","endLine":1379,"endColumn":8,"suggestions":"875"},{"ruleId":"872","severity":1,"message":"876","line":1383,"column":6,"nodeType":"874","endLine":1383,"endColumn":32,"suggestions":"877"},{"ruleId":"849","severity":1,"message":"850","line":1405,"column":15,"nodeType":"842","endLine":1405,"endColumn":59},{"ruleId":"849","severity":1,"message":"850","line":1580,"column":19,"nodeType":"842","endLine":1580,"endColumn":54},{"ruleId":"849","severity":1,"message":"850","line":1582,"column":19,"nodeType":"842","endLine":1582,"endColumn":53},{"ruleId":"851","replacedBy":"878"},{"ruleId":"853","replacedBy":"879"},{"ruleId":"872","severity":1,"message":"880","line":276,"column":6,"nodeType":"874","endLine":276,"endColumn":8,"suggestions":"881"},{"ruleId":"872","severity":1,"message":"882","line":317,"column":6,"nodeType":"874","endLine":317,"endColumn":36,"suggestions":"883"},{"ruleId":"851","replacedBy":"884"},{"ruleId":"853","replacedBy":"885"},{"ruleId":"851","replacedBy":"886"},{"ruleId":"853","replacedBy":"887"},{"ruleId":"832","severity":1,"message":"888","line":3,"column":3,"nodeType":"834","messageId":"835","endLine":3,"endColumn":8},{"ruleId":"832","severity":1,"message":"889","line":9,"column":3,"nodeType":"834","messageId":"835","endLine":9,"endColumn":8},{"ruleId":"832","severity":1,"message":"890","line":10,"column":3,"nodeType":"834","messageId":"835","endLine":10,"endColumn":7},{"ruleId":"832","severity":1,"message":"891","line":68,"column":5,"nodeType":"834","messageId":"835","endLine":68,"endColumn":22},{"ruleId":"832","severity":1,"message":"892","line":72,"column":5,"nodeType":"834","messageId":"835","endLine":72,"endColumn":23},{"ruleId":"893","severity":1,"message":"894","line":130,"column":61,"nodeType":"895","messageId":"896","endLine":130,"endColumn":62},{"ruleId":"893","severity":1,"message":"894","line":138,"column":45,"nodeType":"895","messageId":"896","endLine":138,"endColumn":46},{"ruleId":"832","severity":1,"message":"897","line":187,"column":9,"nodeType":"834","messageId":"835","endLine":187,"endColumn":12},{"ruleId":"872","severity":1,"message":"898","line":281,"column":6,"nodeType":"874","endLine":281,"endColumn":13,"suggestions":"899"},{"ruleId":"872","severity":1,"message":"900","line":303,"column":6,"nodeType":"874","endLine":303,"endColumn":26,"suggestions":"901"},{"ruleId":"851","replacedBy":"902"},{"ruleId":"853","replacedBy":"903"},{"ruleId":"832","severity":1,"message":"904","line":9,"column":10,"nodeType":"834","messageId":"835","endLine":9,"endColumn":13},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"906","line":9,"column":30,"nodeType":"834","messageId":"835","endLine":9,"endColumn":35},{"ruleId":"872","severity":1,"message":"907","line":133,"column":6,"nodeType":"874","endLine":133,"endColumn":8,"suggestions":"908"},{"ruleId":"851","replacedBy":"909"},{"ruleId":"853","replacedBy":"910"},{"ruleId":"872","severity":1,"message":"907","line":85,"column":6,"nodeType":"874","endLine":85,"endColumn":8,"suggestions":"911"},{"ruleId":null,"fatal":true,"severity":2,"message":"912","line":7,"column":8},{"ruleId":"851","replacedBy":"913"},{"ruleId":"853","replacedBy":"914"},{"ruleId":"832","severity":1,"message":"915","line":8,"column":10,"nodeType":"834","messageId":"835","endLine":8,"endColumn":16},{"ruleId":"832","severity":1,"message":"916","line":13,"column":5,"nodeType":"834","messageId":"835","endLine":13,"endColumn":12},{"ruleId":"832","severity":1,"message":"917","line":19,"column":5,"nodeType":"834","messageId":"835","endLine":19,"endColumn":10},{"ruleId":"918","severity":1,"message":"919","line":165,"column":9,"nodeType":"920","messageId":"921","endLine":183,"endColumn":10},{"ruleId":"851","replacedBy":"922"},{"ruleId":"853","replacedBy":"923"},{"ruleId":"832","severity":1,"message":"924","line":23,"column":10,"nodeType":"834","messageId":"835","endLine":23,"endColumn":28},{"ruleId":"832","severity":1,"message":"925","line":26,"column":10,"nodeType":"834","messageId":"835","endLine":26,"endColumn":12},{"ruleId":"832","severity":1,"message":"926","line":29,"column":26,"nodeType":"834","messageId":"835","endLine":29,"endColumn":32},{"ruleId":"832","severity":1,"message":"927","line":29,"column":34,"nodeType":"834","messageId":"835","endLine":29,"endColumn":39},{"ruleId":"872","severity":1,"message":"928","line":116,"column":6,"nodeType":"874","endLine":116,"endColumn":8,"suggestions":"929"},{"ruleId":"849","severity":1,"message":"850","line":168,"column":19,"nodeType":"842","endLine":168,"endColumn":47},{"ruleId":"851","replacedBy":"930"},{"ruleId":"853","replacedBy":"931"},{"ruleId":"832","severity":1,"message":"856","line":3,"column":3,"nodeType":"834","messageId":"835","endLine":3,"endColumn":9},{"ruleId":"832","severity":1,"message":"932","line":4,"column":3,"nodeType":"834","messageId":"835","endLine":4,"endColumn":11},{"ruleId":"832","severity":1,"message":"889","line":5,"column":3,"nodeType":"834","messageId":"835","endLine":5,"endColumn":8},{"ruleId":"832","severity":1,"message":"933","line":7,"column":3,"nodeType":"834","messageId":"835","endLine":7,"endColumn":6},{"ruleId":"832","severity":1,"message":"925","line":30,"column":10,"nodeType":"834","messageId":"835","endLine":30,"endColumn":12},{"ruleId":"832","severity":1,"message":"891","line":43,"column":9,"nodeType":"834","messageId":"835","endLine":43,"endColumn":26},{"ruleId":"832","severity":1,"message":"934","line":43,"column":28,"nodeType":"834","messageId":"835","endLine":43,"endColumn":46},{"ruleId":"832","severity":1,"message":"935","line":43,"column":48,"nodeType":"834","messageId":"835","endLine":43,"endColumn":64},{"ruleId":"832","severity":1,"message":"936","line":45,"column":16,"nodeType":"834","messageId":"835","endLine":45,"endColumn":20},{"ruleId":"832","severity":1,"message":"937","line":51,"column":5,"nodeType":"834","messageId":"835","endLine":51,"endColumn":10},{"ruleId":"832","severity":1,"message":"938","line":58,"column":10,"nodeType":"834","messageId":"835","endLine":58,"endColumn":18},{"ruleId":"832","severity":1,"message":"939","line":58,"column":20,"nodeType":"834","messageId":"835","endLine":58,"endColumn":31},{"ruleId":"849","severity":1,"message":"850","line":136,"column":11,"nodeType":"842","endLine":143,"endColumn":13},{"ruleId":"849","severity":1,"message":"850","line":148,"column":13,"nodeType":"842","endLine":148,"endColumn":33},{"ruleId":"849","severity":1,"message":"850","line":196,"column":18,"nodeType":"842","endLine":196,"endColumn":47},{"ruleId":"849","severity":1,"message":"850","line":198,"column":18,"nodeType":"842","endLine":198,"endColumn":47},{"ruleId":"849","severity":1,"message":"850","line":200,"column":18,"nodeType":"842","endLine":200,"endColumn":47},{"ruleId":"849","severity":1,"message":"850","line":202,"column":18,"nodeType":"842","endLine":202,"endColumn":47},{"ruleId":"849","severity":1,"message":"850","line":226,"column":11,"nodeType":"842","endLine":233,"endColumn":13},{"ruleId":"849","severity":1,"message":"850","line":238,"column":13,"nodeType":"842","endLine":238,"endColumn":63},{"ruleId":"872","severity":1,"message":"940","line":346,"column":6,"nodeType":"874","endLine":346,"endColumn":18,"suggestions":"941"},{"ruleId":"872","severity":1,"message":"942","line":354,"column":6,"nodeType":"874","endLine":354,"endColumn":15,"suggestions":"943"},{"ruleId":"872","severity":1,"message":"944","line":362,"column":6,"nodeType":"874","endLine":362,"endColumn":8,"suggestions":"945"},{"ruleId":"832","severity":1,"message":"946","line":2,"column":10,"nodeType":"834","messageId":"835","endLine":2,"endColumn":23},{"ruleId":"832","severity":1,"message":"843","line":29,"column":9,"nodeType":"834","messageId":"835","endLine":29,"endColumn":15},{"ruleId":"918","severity":1,"message":"919","line":99,"column":5,"nodeType":"920","messageId":"921","endLine":105,"endColumn":6},{"ruleId":"947","severity":1,"message":"948","line":112,"column":41,"nodeType":"949","messageId":"950","endLine":112,"endColumn":43},{"ruleId":"947","severity":1,"message":"948","line":150,"column":41,"nodeType":"949","messageId":"950","endLine":150,"endColumn":43},{"ruleId":"832","severity":1,"message":"951","line":257,"column":11,"nodeType":"834","messageId":"835","endLine":257,"endColumn":21},{"ruleId":"832","severity":1,"message":"952","line":257,"column":49,"nodeType":"834","messageId":"835","endLine":257,"endColumn":55},{"ruleId":"849","severity":1,"message":"850","line":507,"column":15,"nodeType":"842","endLine":507,"endColumn":63},{"ruleId":"849","severity":1,"message":"850","line":537,"column":15,"nodeType":"842","endLine":537,"endColumn":63},{"ruleId":"918","severity":1,"message":"919","line":558,"column":5,"nodeType":"920","messageId":"921","endLine":561,"endColumn":6},{"ruleId":"918","severity":1,"message":"919","line":562,"column":5,"nodeType":"920","messageId":"921","endLine":565,"endColumn":6},{"ruleId":"832","severity":1,"message":"953","line":678,"column":32,"nodeType":"834","messageId":"835","endLine":678,"endColumn":41},{"ruleId":"832","severity":1,"message":"954","line":681,"column":26,"nodeType":"834","messageId":"835","endLine":681,"endColumn":29},{"ruleId":"832","severity":1,"message":"955","line":749,"column":13,"nodeType":"834","messageId":"835","endLine":749,"endColumn":23},{"ruleId":"832","severity":1,"message":"956","line":749,"column":25,"nodeType":"834","messageId":"835","endLine":749,"endColumn":33},{"ruleId":"832","severity":1,"message":"957","line":749,"column":35,"nodeType":"834","messageId":"835","endLine":749,"endColumn":41},{"ruleId":"832","severity":1,"message":"958","line":749,"column":43,"nodeType":"834","messageId":"835","endLine":749,"endColumn":51},{"ruleId":"832","severity":1,"message":"959","line":749,"column":53,"nodeType":"834","messageId":"835","endLine":749,"endColumn":70},{"ruleId":"832","severity":1,"message":"951","line":796,"column":29,"nodeType":"834","messageId":"835","endLine":796,"endColumn":39},{"ruleId":"832","severity":1,"message":"960","line":796,"column":79,"nodeType":"834","messageId":"835","endLine":796,"endColumn":84},{"ruleId":"832","severity":1,"message":"961","line":796,"column":117,"nodeType":"834","messageId":"835","endLine":796,"endColumn":139},{"ruleId":"851","replacedBy":"962"},{"ruleId":"853","replacedBy":"963"},{"ruleId":"851","replacedBy":"964"},{"ruleId":"853","replacedBy":"965"},{"ruleId":"872","severity":1,"message":"966","line":137,"column":8,"nodeType":"874","endLine":137,"endColumn":10,"suggestions":"967"},{"ruleId":"851","replacedBy":"968"},{"ruleId":"853","replacedBy":"969"},{"ruleId":"832","severity":1,"message":"970","line":2,"column":10,"nodeType":"834","messageId":"835","endLine":2,"endColumn":15},{"ruleId":"832","severity":1,"message":"971","line":2,"column":17,"nodeType":"834","messageId":"835","endLine":2,"endColumn":27},{"ruleId":"832","severity":1,"message":"856","line":23,"column":8,"nodeType":"834","messageId":"835","endLine":23,"endColumn":14},{"ruleId":"947","severity":1,"message":"948","line":225,"column":41,"nodeType":"949","messageId":"950","endLine":225,"endColumn":43},{"ruleId":"947","severity":1,"message":"948","line":237,"column":47,"nodeType":"949","messageId":"950","endLine":237,"endColumn":49},{"ruleId":"832","severity":1,"message":"972","line":451,"column":23,"nodeType":"834","messageId":"835","endLine":451,"endColumn":28},{"ruleId":"832","severity":1,"message":"973","line":830,"column":11,"nodeType":"834","messageId":"835","endLine":830,"endColumn":18},{"ruleId":"832","severity":1,"message":"974","line":832,"column":11,"nodeType":"834","messageId":"835","endLine":832,"endColumn":15},{"ruleId":"832","severity":1,"message":"975","line":850,"column":9,"nodeType":"834","messageId":"835","endLine":850,"endColumn":18},{"ruleId":"832","severity":1,"message":"976","line":938,"column":65,"nodeType":"834","messageId":"835","endLine":938,"endColumn":76},{"ruleId":"832","severity":1,"message":"856","line":2,"column":10,"nodeType":"834","messageId":"835","endLine":2,"endColumn":16},{"ruleId":"832","severity":1,"message":"977","line":2,"column":36,"nodeType":"834","messageId":"835","endLine":2,"endColumn":44},{"ruleId":"832","severity":1,"message":"978","line":3,"column":10,"nodeType":"834","messageId":"835","endLine":3,"endColumn":22},{"ruleId":"832","severity":1,"message":"979","line":24,"column":18,"nodeType":"834","messageId":"835","endLine":24,"endColumn":24},{"ruleId":"832","severity":1,"message":"980","line":28,"column":10,"nodeType":"834","messageId":"835","endLine":28,"endColumn":17},{"ruleId":"832","severity":1,"message":"981","line":28,"column":19,"nodeType":"834","messageId":"835","endLine":28,"endColumn":29},{"ruleId":"849","severity":1,"message":"850","line":63,"column":16,"nodeType":"842","endLine":63,"endColumn":41},{"ruleId":"849","severity":1,"message":"850","line":65,"column":16,"nodeType":"842","endLine":65,"endColumn":41},{"ruleId":"849","severity":1,"message":"850","line":67,"column":16,"nodeType":"842","endLine":67,"endColumn":41},{"ruleId":"849","severity":1,"message":"850","line":69,"column":16,"nodeType":"842","endLine":69,"endColumn":41},{"ruleId":"872","severity":1,"message":"982","line":75,"column":3,"nodeType":"834","endLine":75,"endColumn":12,"suggestions":"983"},{"ruleId":"832","severity":1,"message":"984","line":2,"column":27,"nodeType":"834","messageId":"835","endLine":2,"endColumn":36},{"ruleId":"832","severity":1,"message":"985","line":7,"column":14,"nodeType":"834","messageId":"835","endLine":7,"endColumn":18},{"ruleId":"851","replacedBy":"986"},{"ruleId":"853","replacedBy":"987"},{"ruleId":"832","severity":1,"message":"846","line":57,"column":9,"nodeType":"834","messageId":"835","endLine":57,"endColumn":22},{"ruleId":"832","severity":1,"message":"846","line":87,"column":9,"nodeType":"834","messageId":"835","endLine":87,"endColumn":22},{"ruleId":"947","severity":1,"message":"948","line":199,"column":41,"nodeType":"949","messageId":"950","endLine":199,"endColumn":43},{"ruleId":"947","severity":1,"message":"948","line":212,"column":47,"nodeType":"949","messageId":"950","endLine":212,"endColumn":49},{"ruleId":"832","severity":1,"message":"972","line":417,"column":23,"nodeType":"834","messageId":"835","endLine":417,"endColumn":28},{"ruleId":"851","replacedBy":"988"},{"ruleId":"853","replacedBy":"989"},{"ruleId":"832","severity":1,"message":"984","line":1,"column":27,"nodeType":"834","messageId":"835","endLine":1,"endColumn":36},{"ruleId":"832","severity":1,"message":"985","line":8,"column":10,"nodeType":"834","messageId":"835","endLine":8,"endColumn":14},{"ruleId":"832","severity":1,"message":"990","line":8,"column":20,"nodeType":"834","messageId":"835","endLine":8,"endColumn":24},{"ruleId":"832","severity":1,"message":"991","line":18,"column":7,"nodeType":"834","messageId":"835","endLine":18,"endColumn":14},{"ruleId":"832","severity":1,"message":"992","line":63,"column":13,"nodeType":"834","messageId":"835","endLine":63,"endColumn":19},{"ruleId":"832","severity":1,"message":"993","line":67,"column":13,"nodeType":"834","messageId":"835","endLine":67,"endColumn":20},{"ruleId":"840","severity":1,"message":"841","line":155,"column":9,"nodeType":"842","endLine":171,"endColumn":10},{"ruleId":"918","severity":1,"message":"919","line":219,"column":15,"nodeType":"920","messageId":"921","endLine":238,"endColumn":16},{"ruleId":"851","replacedBy":"994"},{"ruleId":"853","replacedBy":"995"},{"ruleId":"851","replacedBy":"996"},{"ruleId":"853","replacedBy":"997"},{"ruleId":"832","severity":1,"message":"998","line":9,"column":3,"nodeType":"834","messageId":"835","endLine":9,"endColumn":8},{"ruleId":"832","severity":1,"message":"999","line":34,"column":10,"nodeType":"834","messageId":"835","endLine":34,"endColumn":16},{"ruleId":"832","severity":1,"message":"1000","line":36,"column":10,"nodeType":"834","messageId":"835","endLine":36,"endColumn":17},{"ruleId":"832","severity":1,"message":"1001","line":38,"column":10,"nodeType":"834","messageId":"835","endLine":38,"endColumn":18},{"ruleId":"872","severity":1,"message":"1002","line":92,"column":6,"nodeType":"874","endLine":92,"endColumn":8,"suggestions":"1003"},{"ruleId":"851","replacedBy":"1004"},{"ruleId":"853","replacedBy":"1005"},{"ruleId":"849","severity":1,"message":"850","line":34,"column":11,"nodeType":"842","endLine":37,"endColumn":13},{"ruleId":"849","severity":1,"message":"850","line":43,"column":13,"nodeType":"842","endLine":46,"endColumn":15},{"ruleId":"849","severity":1,"message":"850","line":51,"column":11,"nodeType":"842","endLine":54,"endColumn":13},{"ruleId":"849","severity":1,"message":"850","line":64,"column":11,"nodeType":"842","endLine":67,"endColumn":13},{"ruleId":"832","severity":1,"message":"888","line":2,"column":10,"nodeType":"834","messageId":"835","endLine":2,"endColumn":15},{"ruleId":"832","severity":1,"message":"925","line":15,"column":10,"nodeType":"834","messageId":"835","endLine":15,"endColumn":12},{"ruleId":"832","severity":1,"message":"1006","line":28,"column":8,"nodeType":"834","messageId":"835","endLine":28,"endColumn":14},{"ruleId":"832","severity":1,"message":"979","line":31,"column":18,"nodeType":"834","messageId":"835","endLine":31,"endColumn":24},{"ruleId":"872","severity":1,"message":"1007","line":76,"column":6,"nodeType":"874","endLine":76,"endColumn":21,"suggestions":"1008"},{"ruleId":"849","severity":1,"message":"850","line":120,"column":17,"nodeType":"842","endLine":120,"endColumn":74},{"ruleId":"849","severity":1,"message":"850","line":138,"column":21,"nodeType":"842","endLine":138,"endColumn":69},{"ruleId":"849","severity":1,"message":"850","line":158,"column":25,"nodeType":"842","endLine":165,"endColumn":27},{"ruleId":"832","severity":1,"message":"1009","line":4,"column":3,"nodeType":"834","messageId":"835","endLine":4,"endColumn":10},{"ruleId":"832","severity":1,"message":"1010","line":39,"column":9,"nodeType":"834","messageId":"835","endLine":39,"endColumn":20},{"ruleId":"832","severity":1,"message":"843","line":7,"column":9,"nodeType":"834","messageId":"835","endLine":7,"endColumn":15},{"ruleId":"832","severity":1,"message":"844","line":20,"column":11,"nodeType":"834","messageId":"835","endLine":20,"endColumn":17},{"ruleId":"832","severity":1,"message":"845","line":20,"column":19,"nodeType":"834","messageId":"835","endLine":20,"endColumn":24},{"ruleId":"832","severity":1,"message":"846","line":109,"column":9,"nodeType":"834","messageId":"835","endLine":109,"endColumn":22},{"ruleId":"872","severity":1,"message":"1011","line":163,"column":6,"nodeType":"874","endLine":163,"endColumn":23,"suggestions":"1012"},{"ruleId":"832","severity":1,"message":"984","line":1,"column":17,"nodeType":"834","messageId":"835","endLine":1,"endColumn":26},{"ruleId":"832","severity":1,"message":"1013","line":1,"column":38,"nodeType":"834","messageId":"835","endLine":1,"endColumn":44},{"ruleId":"832","severity":1,"message":"1014","line":2,"column":10,"nodeType":"834","messageId":"835","endLine":2,"endColumn":16},{"ruleId":"832","severity":1,"message":"1015","line":2,"column":26,"nodeType":"834","messageId":"835","endLine":2,"endColumn":31},{"ruleId":"832","severity":1,"message":"1006","line":17,"column":8,"nodeType":"834","messageId":"835","endLine":17,"endColumn":14},{"ruleId":"832","severity":1,"message":"865","line":21,"column":9,"nodeType":"834","messageId":"835","endLine":21,"endColumn":16},{"ruleId":"832","severity":1,"message":"843","line":22,"column":9,"nodeType":"834","messageId":"835","endLine":22,"endColumn":15},{"ruleId":"832","severity":1,"message":"836","line":23,"column":7,"nodeType":"834","messageId":"835","endLine":23,"endColumn":13},{"ruleId":"832","severity":1,"message":"916","line":26,"column":5,"nodeType":"834","messageId":"835","endLine":26,"endColumn":12},{"ruleId":"832","severity":1,"message":"1016","line":27,"column":5,"nodeType":"834","messageId":"835","endLine":27,"endColumn":17},{"ruleId":"832","severity":1,"message":"897","line":28,"column":5,"nodeType":"834","messageId":"835","endLine":28,"endColumn":8},{"ruleId":"832","severity":1,"message":"897","line":86,"column":61,"nodeType":"834","messageId":"835","endLine":86,"endColumn":64},{"ruleId":"832","severity":1,"message":"1017","line":86,"column":66,"nodeType":"834","messageId":"835","endLine":86,"endColumn":75},{"ruleId":"840","severity":1,"message":"841","line":271,"column":15,"nodeType":"842","endLine":277,"endColumn":16},{"ruleId":"832","severity":1,"message":"1018","line":9,"column":15,"nodeType":"834","messageId":"835","endLine":9,"endColumn":23},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"984","line":1,"column":17,"nodeType":"834","messageId":"835","endLine":1,"endColumn":26},{"ruleId":"832","severity":1,"message":"1013","line":1,"column":38,"nodeType":"834","messageId":"835","endLine":1,"endColumn":44},{"ruleId":"832","severity":1,"message":"1014","line":2,"column":10,"nodeType":"834","messageId":"835","endLine":2,"endColumn":16},{"ruleId":"832","severity":1,"message":"1015","line":2,"column":26,"nodeType":"834","messageId":"835","endLine":2,"endColumn":31},{"ruleId":"832","severity":1,"message":"998","line":2,"column":33,"nodeType":"834","messageId":"835","endLine":2,"endColumn":38},{"ruleId":"832","severity":1,"message":"1006","line":17,"column":8,"nodeType":"834","messageId":"835","endLine":17,"endColumn":14},{"ruleId":"832","severity":1,"message":"1019","line":18,"column":8,"nodeType":"834","messageId":"835","endLine":18,"endColumn":9},{"ruleId":"851","replacedBy":"1020"},{"ruleId":"853","replacedBy":"1021"},{"ruleId":"832","severity":1,"message":"1019","line":4,"column":8,"nodeType":"834","messageId":"835","endLine":4,"endColumn":9},{"ruleId":"832","severity":1,"message":"984","line":6,"column":10,"nodeType":"834","messageId":"835","endLine":6,"endColumn":19},{"ruleId":"832","severity":1,"message":"1022","line":50,"column":7,"nodeType":"834","messageId":"835","endLine":50,"endColumn":10},{"ruleId":"832","severity":1,"message":"991","line":51,"column":7,"nodeType":"834","messageId":"835","endLine":51,"endColumn":14},{"ruleId":"832","severity":1,"message":"1023","line":54,"column":10,"nodeType":"834","messageId":"835","endLine":54,"endColumn":18},{"ruleId":"832","severity":1,"message":"1024","line":54,"column":20,"nodeType":"834","messageId":"835","endLine":54,"endColumn":31},{"ruleId":"832","severity":1,"message":"1025","line":121,"column":9,"nodeType":"834","messageId":"835","endLine":121,"endColumn":18},{"ruleId":"893","severity":1,"message":"894","line":291,"column":59,"nodeType":"895","messageId":"896","endLine":291,"endColumn":60},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"984","line":1,"column":17,"nodeType":"834","messageId":"835","endLine":1,"endColumn":26},{"ruleId":"832","severity":1,"message":"888","line":2,"column":10,"nodeType":"834","messageId":"835","endLine":2,"endColumn":15},{"ruleId":"832","severity":1,"message":"1026","line":4,"column":8,"nodeType":"834","messageId":"835","endLine":4,"endColumn":23},{"ruleId":"832","severity":1,"message":"1019","line":15,"column":8,"nodeType":"834","messageId":"835","endLine":15,"endColumn":9},{"ruleId":"832","severity":1,"message":"1027","line":19,"column":9,"nodeType":"834","messageId":"835","endLine":19,"endColumn":16},{"ruleId":"832","severity":1,"message":"979","line":19,"column":18,"nodeType":"834","messageId":"835","endLine":19,"endColumn":24},{"ruleId":"832","severity":1,"message":"934","line":22,"column":9,"nodeType":"834","messageId":"835","endLine":22,"endColumn":27},{"ruleId":"832","severity":1,"message":"1028","line":23,"column":19,"nodeType":"834","messageId":"835","endLine":23,"endColumn":29},{"ruleId":"849","severity":1,"message":"850","line":28,"column":11,"nodeType":"842","endLine":28,"endColumn":36},{"ruleId":"832","severity":1,"message":"1006","line":23,"column":8,"nodeType":"834","messageId":"835","endLine":23,"endColumn":14},{"ruleId":"832","severity":1,"message":"1029","line":46,"column":10,"nodeType":"834","messageId":"835","endLine":46,"endColumn":23},{"ruleId":"832","severity":1,"message":"1030","line":48,"column":10,"nodeType":"834","messageId":"835","endLine":48,"endColumn":22},{"ruleId":"832","severity":1,"message":"1031","line":49,"column":10,"nodeType":"834","messageId":"835","endLine":49,"endColumn":23},{"ruleId":"832","severity":1,"message":"1032","line":50,"column":10,"nodeType":"834","messageId":"835","endLine":50,"endColumn":21},{"ruleId":"832","severity":1,"message":"1033","line":52,"column":10,"nodeType":"834","messageId":"835","endLine":52,"endColumn":24},{"ruleId":"832","severity":1,"message":"1034","line":52,"column":26,"nodeType":"834","messageId":"835","endLine":52,"endColumn":43},{"ruleId":"918","severity":1,"message":"919","line":180,"column":5,"nodeType":"920","messageId":"921","endLine":201,"endColumn":6},{"ruleId":"832","severity":1,"message":"1035","line":257,"column":21,"nodeType":"834","messageId":"835","endLine":257,"endColumn":31},{"ruleId":"872","severity":1,"message":"966","line":356,"column":6,"nodeType":"874","endLine":356,"endColumn":8,"suggestions":"1036"},{"ruleId":"832","severity":1,"message":"843","line":21,"column":9,"nodeType":"834","messageId":"835","endLine":21,"endColumn":15},{"ruleId":"832","severity":1,"message":"844","line":37,"column":11,"nodeType":"834","messageId":"835","endLine":37,"endColumn":17},{"ruleId":"832","severity":1,"message":"845","line":37,"column":19,"nodeType":"834","messageId":"835","endLine":37,"endColumn":24},{"ruleId":"832","severity":1,"message":"846","line":53,"column":9,"nodeType":"834","messageId":"835","endLine":53,"endColumn":22},{"ruleId":"832","severity":1,"message":"1037","line":72,"column":11,"nodeType":"834","messageId":"835","endLine":72,"endColumn":19},{"ruleId":"832","severity":1,"message":"1038","line":15,"column":7,"nodeType":"834","messageId":"835","endLine":15,"endColumn":15},{"ruleId":"832","severity":1,"message":"1039","line":18,"column":5,"nodeType":"834","messageId":"835","endLine":18,"endColumn":9},{"ruleId":"1040","severity":1,"message":"1041","line":46,"column":3,"nodeType":"1042","messageId":"1043","endLine":55,"endColumn":47},{"ruleId":"1040","severity":1,"message":"1041","line":74,"column":3,"nodeType":"1042","messageId":"1043","endLine":76,"endColumn":46},{"ruleId":"832","severity":1,"message":"1044","line":79,"column":5,"nodeType":"834","messageId":"835","endLine":79,"endColumn":16},{"ruleId":"832","severity":1,"message":"1045","line":102,"column":5,"nodeType":"834","messageId":"835","endLine":102,"endColumn":10},{"ruleId":"832","severity":1,"message":"984","line":1,"column":17,"nodeType":"834","messageId":"835","endLine":1,"endColumn":26},{"ruleId":"832","severity":1,"message":"1013","line":1,"column":38,"nodeType":"834","messageId":"835","endLine":1,"endColumn":44},{"ruleId":"832","severity":1,"message":"1027","line":25,"column":11,"nodeType":"834","messageId":"835","endLine":25,"endColumn":18},{"ruleId":"832","severity":1,"message":"979","line":25,"column":20,"nodeType":"834","messageId":"835","endLine":25,"endColumn":26},{"ruleId":"832","severity":1,"message":"991","line":26,"column":7,"nodeType":"834","messageId":"835","endLine":26,"endColumn":14},{"ruleId":"832","severity":1,"message":"984","line":1,"column":17,"nodeType":"834","messageId":"835","endLine":1,"endColumn":26},{"ruleId":"832","severity":1,"message":"1046","line":1,"column":28,"nodeType":"834","messageId":"835","endLine":1,"endColumn":36},{"ruleId":"832","severity":1,"message":"1013","line":1,"column":38,"nodeType":"834","messageId":"835","endLine":1,"endColumn":44},{"ruleId":"832","severity":1,"message":"1006","line":11,"column":8,"nodeType":"834","messageId":"835","endLine":11,"endColumn":14},{"ruleId":"832","severity":1,"message":"1019","line":12,"column":8,"nodeType":"834","messageId":"835","endLine":12,"endColumn":9},{"ruleId":"832","severity":1,"message":"1018","line":9,"column":15,"nodeType":"834","messageId":"835","endLine":9,"endColumn":23},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"906","line":9,"column":30,"nodeType":"834","messageId":"835","endLine":9,"endColumn":35},{"ruleId":"832","severity":1,"message":"1013","line":1,"column":38,"nodeType":"834","messageId":"835","endLine":1,"endColumn":44},{"ruleId":"832","severity":1,"message":"1015","line":2,"column":18,"nodeType":"834","messageId":"835","endLine":2,"endColumn":23},{"ruleId":"832","severity":1,"message":"890","line":2,"column":25,"nodeType":"834","messageId":"835","endLine":2,"endColumn":29},{"ruleId":"832","severity":1,"message":"1019","line":17,"column":8,"nodeType":"834","messageId":"835","endLine":17,"endColumn":9},{"ruleId":"832","severity":1,"message":"991","line":22,"column":7,"nodeType":"834","messageId":"835","endLine":22,"endColumn":14},{"ruleId":"1047","severity":1,"message":"1048","line":44,"column":17,"nodeType":"1049","messageId":"1050","endLine":44,"endColumn":70},{"ruleId":"832","severity":1,"message":"843","line":20,"column":9,"nodeType":"834","messageId":"835","endLine":20,"endColumn":15},{"ruleId":"832","severity":1,"message":"846","line":64,"column":9,"nodeType":"834","messageId":"835","endLine":64,"endColumn":22},{"ruleId":"832","severity":1,"message":"1051","line":336,"column":9,"nodeType":"834","messageId":"835","endLine":336,"endColumn":25},{"ruleId":"832","severity":1,"message":"1052","line":357,"column":7,"nodeType":"834","messageId":"835","endLine":357,"endColumn":17},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"851","replacedBy":"1053"},{"ruleId":"853","replacedBy":"1054"},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"1018","line":9,"column":15,"nodeType":"834","messageId":"835","endLine":9,"endColumn":23},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"906","line":9,"column":30,"nodeType":"834","messageId":"835","endLine":9,"endColumn":35},{"ruleId":"832","severity":1,"message":"1013","line":1,"column":38,"nodeType":"834","messageId":"835","endLine":1,"endColumn":44},{"ruleId":"832","severity":1,"message":"1055","line":5,"column":3,"nodeType":"834","messageId":"835","endLine":5,"endColumn":7},{"ruleId":"832","severity":1,"message":"1056","line":6,"column":3,"nodeType":"834","messageId":"835","endLine":6,"endColumn":13},{"ruleId":"832","severity":1,"message":"977","line":13,"column":3,"nodeType":"834","messageId":"835","endLine":13,"endColumn":11},{"ruleId":"832","severity":1,"message":"1057","line":39,"column":8,"nodeType":"834","messageId":"835","endLine":39,"endColumn":18},{"ruleId":"832","severity":1,"message":"1058","line":42,"column":8,"nodeType":"834","messageId":"835","endLine":42,"endColumn":15},{"ruleId":"832","severity":1,"message":"979","line":45,"column":18,"nodeType":"834","messageId":"835","endLine":45,"endColumn":24},{"ruleId":"832","severity":1,"message":"953","line":55,"column":28,"nodeType":"834","messageId":"835","endLine":55,"endColumn":37},{"ruleId":"832","severity":1,"message":"1059","line":56,"column":58,"nodeType":"834","messageId":"835","endLine":56,"endColumn":76},{"ruleId":"832","severity":1,"message":"1060","line":60,"column":10,"nodeType":"834","messageId":"835","endLine":60,"endColumn":17},{"ruleId":"832","severity":1,"message":"1061","line":60,"column":19,"nodeType":"834","messageId":"835","endLine":60,"endColumn":29},{"ruleId":"832","severity":1,"message":"1062","line":68,"column":10,"nodeType":"834","messageId":"835","endLine":68,"endColumn":19},{"ruleId":"832","severity":1,"message":"1063","line":68,"column":21,"nodeType":"834","messageId":"835","endLine":68,"endColumn":33},{"ruleId":"832","severity":1,"message":"1064","line":69,"column":10,"nodeType":"834","messageId":"835","endLine":69,"endColumn":25},{"ruleId":"832","severity":1,"message":"1065","line":69,"column":27,"nodeType":"834","messageId":"835","endLine":69,"endColumn":45},{"ruleId":"849","severity":1,"message":"850","line":160,"column":11,"nodeType":"842","endLine":160,"endColumn":29},{"ruleId":"849","severity":1,"message":"850","line":162,"column":11,"nodeType":"842","endLine":162,"endColumn":32},{"ruleId":"849","severity":1,"message":"850","line":166,"column":11,"nodeType":"842","endLine":166,"endColumn":29},{"ruleId":"849","severity":1,"message":"850","line":168,"column":11,"nodeType":"842","endLine":168,"endColumn":32},{"ruleId":"849","severity":1,"message":"850","line":172,"column":11,"nodeType":"842","endLine":172,"endColumn":30},{"ruleId":"849","severity":1,"message":"850","line":174,"column":11,"nodeType":"842","endLine":174,"endColumn":33},{"ruleId":"849","severity":1,"message":"850","line":178,"column":11,"nodeType":"842","endLine":178,"endColumn":30},{"ruleId":"849","severity":1,"message":"850","line":180,"column":11,"nodeType":"842","endLine":180,"endColumn":33},{"ruleId":"849","severity":1,"message":"850","line":184,"column":11,"nodeType":"842","endLine":184,"endColumn":29},{"ruleId":"849","severity":1,"message":"850","line":186,"column":11,"nodeType":"842","endLine":186,"endColumn":32},{"ruleId":"849","severity":1,"message":"850","line":190,"column":11,"nodeType":"842","endLine":190,"endColumn":29},{"ruleId":"849","severity":1,"message":"850","line":192,"column":11,"nodeType":"842","endLine":192,"endColumn":32},{"ruleId":"849","severity":1,"message":"850","line":196,"column":11,"nodeType":"842","endLine":196,"endColumn":29},{"ruleId":"849","severity":1,"message":"850","line":198,"column":11,"nodeType":"842","endLine":198,"endColumn":32},{"ruleId":"872","severity":1,"message":"1066","line":258,"column":6,"nodeType":"874","endLine":258,"endColumn":18,"suggestions":"1067"},{"ruleId":"872","severity":1,"message":"1068","line":280,"column":6,"nodeType":"874","endLine":280,"endColumn":25,"suggestions":"1069"},{"ruleId":"872","severity":1,"message":"1070","line":311,"column":6,"nodeType":"874","endLine":311,"endColumn":13,"suggestions":"1071"},{"ruleId":"872","severity":1,"message":"1072","line":355,"column":6,"nodeType":"874","endLine":355,"endColumn":44,"suggestions":"1073"},{"ruleId":"832","severity":1,"message":"984","line":1,"column":17,"nodeType":"834","messageId":"835","endLine":1,"endColumn":26},{"ruleId":"832","severity":1,"message":"1013","line":1,"column":38,"nodeType":"834","messageId":"835","endLine":1,"endColumn":44},{"ruleId":"832","severity":1,"message":"1014","line":2,"column":10,"nodeType":"834","messageId":"835","endLine":2,"endColumn":16},{"ruleId":"832","severity":1,"message":"1006","line":13,"column":8,"nodeType":"834","messageId":"835","endLine":13,"endColumn":14},{"ruleId":"832","severity":1,"message":"1019","line":14,"column":8,"nodeType":"834","messageId":"835","endLine":14,"endColumn":9},{"ruleId":"832","severity":1,"message":"916","line":16,"column":5,"nodeType":"834","messageId":"835","endLine":16,"endColumn":12},{"ruleId":"872","severity":1,"message":"1074","line":53,"column":6,"nodeType":"874","endLine":53,"endColumn":41,"suggestions":"1075"},{"ruleId":"832","severity":1,"message":"1076","line":10,"column":10,"nodeType":"834","messageId":"835","endLine":10,"endColumn":14},{"ruleId":"832","severity":1,"message":"1077","line":20,"column":10,"nodeType":"834","messageId":"835","endLine":20,"endColumn":14},{"ruleId":"832","severity":1,"message":"1078","line":30,"column":10,"nodeType":"834","messageId":"835","endLine":30,"endColumn":16},{"ruleId":"832","severity":1,"message":"1079","line":41,"column":10,"nodeType":"834","messageId":"835","endLine":41,"endColumn":16},{"ruleId":"832","severity":1,"message":"1080","line":51,"column":10,"nodeType":"834","messageId":"835","endLine":51,"endColumn":15},{"ruleId":"832","severity":1,"message":"1081","line":61,"column":10,"nodeType":"834","messageId":"835","endLine":61,"endColumn":15},{"ruleId":"832","severity":1,"message":"1082","line":71,"column":10,"nodeType":"834","messageId":"835","endLine":71,"endColumn":15},{"ruleId":"832","severity":1,"message":"1083","line":81,"column":10,"nodeType":"834","messageId":"835","endLine":81,"endColumn":15},{"ruleId":"832","severity":1,"message":"1084","line":91,"column":10,"nodeType":"834","messageId":"835","endLine":91,"endColumn":16},{"ruleId":"832","severity":1,"message":"1085","line":101,"column":10,"nodeType":"834","messageId":"835","endLine":101,"endColumn":16},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"906","line":9,"column":30,"nodeType":"834","messageId":"835","endLine":9,"endColumn":35},{"ruleId":"918","severity":1,"message":"919","line":427,"column":9,"nodeType":"920","messageId":"921","endLine":434,"endColumn":10},{"ruleId":"832","severity":1,"message":"1086","line":634,"column":15,"nodeType":"834","messageId":"835","endLine":634,"endColumn":25},{"ruleId":"832","severity":1,"message":"1087","line":678,"column":17,"nodeType":"834","messageId":"835","endLine":678,"endColumn":26},{"ruleId":"832","severity":1,"message":"1088","line":819,"column":13,"nodeType":"834","messageId":"835","endLine":819,"endColumn":16},{"ruleId":"832","severity":1,"message":"1089","line":822,"column":15,"nodeType":"834","messageId":"835","endLine":822,"endColumn":30},{"ruleId":"832","severity":1,"message":"1090","line":824,"column":15,"nodeType":"834","messageId":"835","endLine":824,"endColumn":30},{"ruleId":"832","severity":1,"message":"1087","line":892,"column":17,"nodeType":"834","messageId":"835","endLine":892,"endColumn":26},{"ruleId":"832","severity":1,"message":"1091","line":1001,"column":11,"nodeType":"834","messageId":"835","endLine":1001,"endColumn":22},{"ruleId":"832","severity":1,"message":"925","line":13,"column":10,"nodeType":"834","messageId":"835","endLine":13,"endColumn":12},{"ruleId":"832","severity":1,"message":"1092","line":13,"column":14,"nodeType":"834","messageId":"835","endLine":13,"endColumn":16},{"ruleId":"832","severity":1,"message":"984","line":1,"column":17,"nodeType":"834","messageId":"835","endLine":1,"endColumn":26},{"ruleId":"832","severity":1,"message":"1046","line":1,"column":28,"nodeType":"834","messageId":"835","endLine":1,"endColumn":36},{"ruleId":"832","severity":1,"message":"979","line":18,"column":18,"nodeType":"834","messageId":"835","endLine":18,"endColumn":24},{"ruleId":"832","severity":1,"message":"1046","line":2,"column":17,"nodeType":"834","messageId":"835","endLine":2,"endColumn":25},{"ruleId":"832","severity":1,"message":"1006","line":21,"column":8,"nodeType":"834","messageId":"835","endLine":21,"endColumn":14},{"ruleId":"872","severity":1,"message":"1093","line":153,"column":6,"nodeType":"874","endLine":153,"endColumn":8,"suggestions":"1094"},{"ruleId":"872","severity":1,"message":"1095","line":160,"column":6,"nodeType":"874","endLine":160,"endColumn":19,"suggestions":"1096"},{"ruleId":"872","severity":1,"message":"907","line":170,"column":6,"nodeType":"874","endLine":170,"endColumn":8,"suggestions":"1097"},{"ruleId":"872","severity":1,"message":"1098","line":243,"column":6,"nodeType":"874","endLine":243,"endColumn":26,"suggestions":"1099"},{"ruleId":"832","severity":1,"message":"904","line":9,"column":10,"nodeType":"834","messageId":"835","endLine":9,"endColumn":13},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"904","line":9,"column":10,"nodeType":"834","messageId":"835","endLine":9,"endColumn":13},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"906","line":9,"column":30,"nodeType":"834","messageId":"835","endLine":9,"endColumn":35},{"ruleId":"832","severity":1,"message":"904","line":9,"column":10,"nodeType":"834","messageId":"835","endLine":9,"endColumn":13},{"ruleId":"832","severity":1,"message":"905","line":9,"column":25,"nodeType":"834","messageId":"835","endLine":9,"endColumn":28},{"ruleId":"832","severity":1,"message":"984","line":1,"column":17,"nodeType":"834","messageId":"835","endLine":1,"endColumn":26},{"ruleId":"832","severity":1,"message":"979","line":21,"column":18,"nodeType":"834","messageId":"835","endLine":21,"endColumn":24},{"ruleId":"918","severity":1,"message":"919","line":81,"column":13,"nodeType":"920","messageId":"921","endLine":110,"endColumn":14},{"ruleId":"832","severity":1,"message":"1100","line":286,"column":45,"nodeType":"834","messageId":"835","endLine":286,"endColumn":59},{"ruleId":"832","severity":1,"message":"1101","line":286,"column":61,"nodeType":"834","messageId":"835","endLine":286,"endColumn":75},{"ruleId":"832","severity":1,"message":"1102","line":30,"column":9,"nodeType":"834","messageId":"835","endLine":30,"endColumn":16},"no-unused-vars","'addLogin' is defined but never used.","Identifier","unusedVar","'MyIcon' is assigned a value but never used.","'isCode' is assigned a value but never used.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Option' is assigned a value but never used.","'height' is assigned a value but never used.","'width' is assigned a value but never used.","'windowsHeight' is assigned a value but never used.","'firstName' is assigned a value but never used.","'lastName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-native-reassign",["1103"],"no-negated-in-lhs",["1104"],"'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SyncOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'SubMenu' is assigned a value but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","'bluData' is assigned a value but never used.","'resize' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.","ArrayExpression",["1105"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["1106"],["1103"],["1104"],"React Hook useEffect has a missing dependency: 'setReceiveBroadcastHardwareInfoFun'. Either include it or remove the dependency array. If 'setReceiveBroadcastHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1107"],"React Hook useEffect has a missing dependency: 'devicesList'. Either include it or remove the dependency array.",["1108"],["1103"],["1104"],["1103"],["1104"],"'Image' is defined but never used.","'Space' is defined but never used.","'Card' is defined but never used.","'mellaMeasureValue' is assigned a value but never used.","'selectHardwareInfo' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'url' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'callBack', 'prediction', and 'timeNum'. Either include them or remove the dependency array.",["1109"],"React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["1110"],["1103"],["1104"],"'get' is defined but never used.","'del' is defined but never used.","'patch' is defined but never used.","React Hook useEffect has missing dependencies: 'destroyOnClose' and 'width'. Either include them or remove the dependency array. If 'setIsdestroyOnClose' needs the current value of 'destroyOnClose', you can also switch to useReducer instead of useState and read 'destroyOnClose' in the reducer.",["1111"],["1103"],["1104"],["1112"],"Parsing error: Identifier 'App' has already been declared\n\n   5 | import store from './store'\n   6 | import App from './App';\n>  7 | import App from './components/mainbody/index'\n     |        ^\n   8 | ReactDOM.render(\n   9 |   <Provider store={store}>\n  10 |     <App />",["1103"],["1104"],"'getOta' is defined but never used.","'storage' is assigned a value but never used.","'num07' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["1103"],["1104"],"'devicesTitleHeight' is defined but never used.","'px' is defined but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["1113"],["1103"],["1104"],"'Progress' is defined but never used.","'Tag' is defined but never used.","'mellaConnectStatus' is assigned a value but never used.","'mellaMeasurePart' is assigned a value but never used.","'memo' is assigned a value but never used.","'hisHe' is assigned a value but never used.","'saveType' is assigned a value but never used.","'setSaveType' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["1114"],"React Hook useEffect has missing dependencies: 'getPetTemperatureData' and 'reRender'. Either include them or remove the dependency array.",["1115"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["1116"],"'BrowserRouter' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'patientId' is assigned a value but never used.","'age' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'disabled' is assigned a value but never used.","'petSpeciesBreedId' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.",["1103"],["1104"],["1103"],["1104"],"React Hook useEffect has a missing dependency: '_getExam'. Either include it or remove the dependency array.",["1117"],["1103"],["1104"],"'Table' is defined but never used.","'Popconfirm' is defined but never used.","'petId' is assigned a value but never used.","'loading' is assigned a value but never used.","'_del' is assigned a value but never used.","'tableData' is assigned a value but never used.","'historyData' is assigned a value but never used.","'Carousel' is defined but never used.","'PlusOutlined' is defined but never used.","'Header' is assigned a value but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["1118"],"'useEffect' is defined but never used.","'mTop' is defined but never used.",["1103"],["1104"],["1103"],["1104"],"'MTop' is defined but never used.","'history' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.",["1103"],["1104"],["1103"],["1104"],"'Radio' is defined but never used.","'petUrl' is assigned a value but never used.","'country' is assigned a value but never used.","'infoData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'form' and 'storage.userId'. Either include them or remove the dependency array.",["1119"],["1103"],["1104"],"'moment' is defined but never used.","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.",["1120"],"'message' is defined but never used.","'ipcRenderer' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'selectHardwareInfoFun' and 'selectHardwareType'. Either include them or remove the dependency array. If 'selectHardwareInfoFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1121"],"'useRef' is defined but never used.","'Layout' is defined but never used.","'Input' is defined but never used.","'errPatientId' is assigned a value but never used.","'userImage' is assigned a value but never used.","'postJson' is defined but never used.","'_' is defined but never used.",["1103"],["1104"],"'mar' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'getBase64' is assigned a value but never used.","'PressButton_Pro' is defined but never used.","'Content' is assigned a value but never used.","'setSaveNum' is assigned a value but never used.","'connectionKey' is assigned a value but never used.","'selectRoleId' is assigned a value but never used.","'workplaceName' is assigned a value but never used.","'workplaceId' is assigned a value but never used.","'organizationId' is assigned a value but never used.","'setOrganizationId' is assigned a value but never used.","'deviceType' is assigned a value but never used.",["1122"],"'isUnKnow' is assigned a value but never used.","'devWidth' is assigned a value but never used.","'size' is assigned a value but never used.","no-unreachable","Unreachable code.","VariableDeclaration","unreachableCode","'windowssize' is assigned a value but never used.","'timer' is assigned a value but never used.","'useState' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'selectDeviceName' is assigned a value but never used.","'bodyHeight' is assigned a value but never used.",["1103"],["1104"],"'Menu' is defined but never used.","'PageHeader' is defined but never used.","'redjinggao' is defined but never used.","'MyModal' is defined but never used.","'rulerConnectStatus' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'selectPetDetail' is assigned a value but never used.","'setSelectPetDetail' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["1123"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["1124"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["1125"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'inputIndex', 'lowerValue', 'neckValue', 'radioValue', 'receiveBroadcastHardwareInfo.deviceType', 'receiveBroadcastHardwareInfo.macId', 'rulerUnit', 'selectHardwareInfo', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["1126"],"React Hook useEffect has a missing dependency: 'hardwareInfo'. Either include it or remove the dependency array.",["1127"],"'CtoF' is defined but never used.","'FtoC' is defined but never used.","'KgtoLb' is defined but never used.","'LbtoKg' is defined but never used.","'GToMl' is defined but never used.","'MltoG' is defined but never used.","'GToOz' is defined but never used.","'OztoG' is defined but never used.","'CmtoIn' is defined but never used.","'IntoCm' is defined but never used.","'sendWeight' is assigned a value but never used.","'ITEMINDEX' is assigned a value but never used.","'mac' is assigned a value but never used.","'hardwareVersion' is assigned a value but never used.","'softwareVersion' is assigned a value but never used.","'offsetWidth' is assigned a value but never used.","'pX' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllPet'. Either include it or remove the dependency array.",["1128"],"React Hook useEffect has a missing dependency: 'searchPetByPetNameOrPatientId'. Either include it or remove the dependency array.",["1129"],["1130"],"React Hook useEffect has missing dependencies: 'hardwareList' and 'selectHardwareInfo'. Either include them or remove the dependency array.",["1131"],"'editInputIndex' is assigned a value but never used.","'editInputValue' is assigned a value but never used.","'_resend' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1132","fix":"1133"},{"desc":"1134","fix":"1135"},{"desc":"1136","fix":"1137"},{"desc":"1138","fix":"1139"},{"desc":"1140","fix":"1141"},{"desc":"1142","fix":"1143"},{"desc":"1144","fix":"1145"},{"desc":"1144","fix":"1146"},{"desc":"1147","fix":"1148"},{"desc":"1149","fix":"1150"},{"desc":"1151","fix":"1152"},{"desc":"1153","fix":"1154"},{"desc":"1155","fix":"1156"},{"desc":"1157","fix":"1158"},{"desc":"1159","fix":"1160"},{"desc":"1161","fix":"1162"},{"desc":"1163","fix":"1164"},{"desc":"1155","fix":"1165"},{"desc":"1166","fix":"1167"},{"desc":"1168","fix":"1169"},{"desc":"1170","fix":"1171"},{"desc":"1172","fix":"1173"},{"desc":"1174","fix":"1175"},{"desc":"1176","fix":"1177"},{"desc":"1178","fix":"1179"},{"desc":"1144","fix":"1180"},{"desc":"1181","fix":"1182"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"1183","text":"1184"},"Update the dependencies array to be: []",{"range":"1185","text":"1186"},"Update the dependencies array to be: [setReceiveBroadcastHardwareInfoFun]",{"range":"1187","text":"1188"},"Update the dependencies array to be: [devicesList, receiveBroadcastHardwareInfo]",{"range":"1189","text":"1190"},"Update the dependencies array to be: [callBack, prediction, timeNum, value]",{"range":"1191","text":"1192"},"Update the dependencies array to be: [mellaConnectStatus, value]",{"range":"1193","text":"1194"},"Update the dependencies array to be: [destroyOnClose, width]",{"range":"1195","text":"1196"},{"range":"1197","text":"1196"},"Update the dependencies array to be: [hardwareList]",{"range":"1198","text":"1199"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"1200","text":"1201"},"Update the dependencies array to be: [getPetTemperatureData, reRender, saveNum]",{"range":"1202","text":"1203"},"Update the dependencies array to be: [storage.userId]",{"range":"1204","text":"1205"},"Update the dependencies array to be: [_getExam]",{"range":"1206","text":"1207"},"Add dependencies array: [callBack, timers]",{"range":"1208","text":"1209"},"Update the dependencies array to be: [form, storage.userId]",{"range":"1210","text":"1211"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"1212","text":"1213"},"Update the dependencies array to be: [devicesTypeList, selectHardwareInfoFun, selectHardwareType]",{"range":"1214","text":"1215"},{"range":"1216","text":"1207"},"Update the dependencies array to be: [finishScan, inputIndex, newData]",{"range":"1217","text":"1218"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"1219","text":"1220"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"1221","text":"1222"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, inputIndex, lowerValue, neckValue, radioValue, receiveBroadcastHardwareInfo.deviceType, receiveBroadcastHardwareInfo.macId, rulerConfirmCount, rulerMeasureValue, rulerUnit, selectHardwareInfo, torsoValue, upperValue]",{"range":"1223","text":"1224"},"Update the dependencies array to be: [selectHardwareType, hardwareList, hardwareInfo]",{"range":"1225","text":"1226"},"Update the dependencies array to be: [getAllPet]",{"range":"1227","text":"1228"},"Update the dependencies array to be: [searchPetByPetNameOrPatientId, searchValue]",{"range":"1229","text":"1230"},{"range":"1231","text":"1196"},"Update the dependencies array to be: [hardwareList, selectHardwareInfo, selectHardwareType]",{"range":"1232","text":"1233"},[43864,43866],"[_noUSB, _send, blueSearch]",[43942,43968],"[]",[9316,9318],"[setReceiveBroadcastHardwareInfoFun]",[10420,10450],"[devicesList, receiveBroadcastHardwareInfo]",[8262,8269],"[callBack, prediction, timeNum, value]",[8913,8933],"[mellaConnectStatus, value]",[3705,3707],"[destroyOnClose, width]",[2163,2165],[3213,3215],"[hardwareList]",[9404,9416],"[getPetTemperatureData, petMessage]",[9572,9581],"[getPetTemperatureData, reRender, saveNum]",[9777,9779],"[storage.userId]",[5326,5328],"[_getExam]",[2257,2257],", [callBack, timers]",[2599,2601],"[form, storage.userId]",[2356,2371],"[callBack, carouselIndex]",[4377,4394],"[devicesTypeList, selectHardwareInfoFun, selectHardwareType]",[10575,10577],[6880,6892],"[finishScan, inputIndex, newData]",[7365,7384],"[inputIndex, rulerConfirmCount]",[8242,8249],"[petId, petLengthDataConvert, petMessage]",[9716,9754],"[bodyValue, changeUnit, headValue, inputIndex, lowerValue, neckValue, radioValue, receiveBroadcastHardwareInfo.deviceType, receiveBroadcastHardwareInfo.macId, rulerConfirmCount, rulerMeasureValue, rulerUnit, selectHardwareInfo, torsoValue, upperValue]",[1855,1890],"[selectHardwareType, hardwareList, hardwareInfo]",[4201,4203],"[getAllPet]",[4334,4347],"[searchPetByPetNameOrPatientId, searchValue]",[4542,4544],[7403,7423],"[hardwareList, selectHardwareInfo, selectHardwareType]"]