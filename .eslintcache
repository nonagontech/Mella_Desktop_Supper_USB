[{"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/linkEquipment.jsx":"1","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil.js":"2","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/combineScales/index.jsx":"3","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx":"4","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measurement.jsx":"5","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/scanPet.jsx":"6","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/index.js":"7","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/ezyvetApi.js":"8","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/VetSpire.js":"9","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/EzyVet.js":"10","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/index.jsx":"11","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/pet.js":"12","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorSelectScheduledExam/index.jsx":"13","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorSelectAllExam/index.jsx":"14","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measuredData.jsx":"15","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/user.js":"16","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/workPlace/index.jsx":"17","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js":"18","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/exam.js":"19","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/clinicalStudyPage/index.jsx":"20","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/measure/index.jsx":"21","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/user.js":"22","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/verifyEmail/index.jsx":"23","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/vetProfile/index.jsx":"24"},{"size":6751,"mtime":1660530346064,"results":"25","hashOfConfig":"26"},{"size":3314,"mtime":1661413296567,"results":"27","hashOfConfig":"26"},{"size":8628,"mtime":1660730474721,"results":"28","hashOfConfig":"26"},{"size":7966,"mtime":1658135143273,"results":"29","hashOfConfig":"26"},{"size":3569,"mtime":1660530346067,"results":"30","hashOfConfig":"26"},{"size":16047,"mtime":1661413399699,"results":"31","hashOfConfig":"26"},{"size":0,"mtime":1661414355854,"results":"32","hashOfConfig":"26"},{"size":2130,"mtime":1661414411712,"results":"33","hashOfConfig":"26"},{"size":638,"mtime":1661414634560,"results":"34","hashOfConfig":"26"},{"size":637,"mtime":1661415990485,"results":"35","hashOfConfig":"26"},{"size":9380,"mtime":1661415894964,"results":"36","hashOfConfig":"26"},{"size":550,"mtime":1661416555514,"results":"37","hashOfConfig":"26"},{"size":37678,"mtime":1661416149229,"results":"38","hashOfConfig":"26"},{"size":36309,"mtime":1661416222972,"results":"39","hashOfConfig":"26"},{"size":16980,"mtime":1661416299424,"results":"40","hashOfConfig":"26"},{"size":557,"mtime":1661416491489,"results":"41","hashOfConfig":"26"},{"size":8725,"mtime":1661416522721,"results":"42","hashOfConfig":"26"},{"size":53299,"mtime":1661416583158,"results":"43","hashOfConfig":"26"},{"size":788,"mtime":1661416868496,"results":"44","hashOfConfig":"26"},{"size":58222,"mtime":1661416958821,"results":"45","hashOfConfig":"26"},{"size":109331,"mtime":1661416983281,"results":"46","hashOfConfig":"26"},{"size":2680,"mtime":1661417250849,"results":"47","hashOfConfig":"26"},{"size":4450,"mtime":1661417095692,"results":"48","hashOfConfig":"26"},{"size":16637,"mtime":1661417261068,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1brez7n",{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":1,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":33,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":35,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/linkEquipment.jsx",["99","100","101","102","103","104","105","106"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil.js",["107","108","109","110"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/combineScales/index.jsx",["111","112","113","114","115","116"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx",["117","118","119","120","121","122","123","124","125","126","127","128","129","130"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measurement.jsx",["131","132","133","134","135","136","137","138","139","140","141"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/scanPet.jsx",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/ezyvetApi.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/VetSpire.js",["176","177","178"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/EzyVet.js",["179","180"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/biggiePage/index.jsx",["181","182","183","184","185"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/pet.js",["186","187","188"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorSelectScheduledExam/index.jsx",["189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/doctorSelectAllExam/index.jsx",["208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/temperaturePage/components/measuredData.jsx",["228","229","230","231","232","233","234","235","236","237","238","239","240"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellabiggie/user.js",["241","242","243"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/workPlace/index.jsx",["244","245","246","247","248","249","250","251"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js",["252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/exam.js",["286"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/clinicalStudyPage/index.jsx",["287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318","319"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/measure/index.jsx",["320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354"],"import React, { Component } from 'react'\nimport {\n  Input,\n  Menu,\n  Modal,\n  Table,\n  Popconfirm,\n  Tooltip,\n  message,\n  Select,\n} from 'antd';\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport ye from './../../assets/images/ye1.png'\nimport er from './../../assets/images/er3.png'\nimport gang from './../../assets/images/gang3.png'\nimport dog from './../../assets/images/dog.png'\nimport cat from './../../assets/images/cat.png'\nimport other from './../../assets/images/other.png'\nimport edit from './../../assets/images/edit.png'\nimport del from './../../assets/images/del.png'\nimport start from './../../assets/img/start.png'\nimport redjinggao from './../../assets/img/redjinggao.png'\nimport placement_gang from './../../assets/images/placement_gang.png'\nimport placement_er from './../../assets/images/placement_er.png'\nimport palcement_ye from './../../assets/images/palcement_ye.png'\nimport close from './../../assets/img/close.png'\n\nimport MyModal from './../../utils/myModal/MyModal'\nimport electronStore from './../../utils/electronStore'\nimport { mTop, px, MTop, win } from '../../utils/px';\nimport Heard from '../../utils/heard/Heard';\n\nimport Draggable from \"react-draggable\";\nimport moment from 'moment';\nimport ReactECharts from 'echarts-for-react';// 引入 ECharts 主模块\nimport 'echarts/lib/chart/bar';// 引入柱状图\nimport 'echarts/lib/component/tooltip';// 引入提示框和标题组件\nimport 'echarts/lib/component/title';\n\nimport './index.less';\nimport { addAndSavePetExam, addDeskPet, deletePetExamByExamId, getPetExamAndClinicalByPetId, getPetExamByDoctorId, getPetInfoByPatientIdAndPetId, updatePetExam } from '../../api/mellaserver/pet';\nimport { addAllClinical } from '../../api/mellaserver/clinical';\nimport { getClinicalDataByExamId } from '../../api';\n\nconst { SubMenu } = Menu;\nconst { Option } = Select;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\n\nlet storage = window.localStorage;\nlet echartCi = 0\nlet saveHistoryTime = null, getSerialTime = null\nlet ipcRenderer = window.electron.ipcRenderer\nlet detectTimer = null, countdownTimer = null;\n\nlet resyncDeviceIsClick = true //用于控制多次点击重新配对按钮\nlet num = 0, is97Time = null, is193Time = null, initTime = null\n\nlet num07 = 0       //接收到07命令行的次数\nlet indexNum = 0\nlet meetCondition = false //满足第一次测量在76.6与85之间\nlet tempArr = []\nlet dropNum = 0\n\nlet lastMeasureTemp = 0, lastMeasureBig = true\n\nlet firstMeasure = true  //用户反馈刚到这个界面测量就会显示测量温度过高,因此在这里做一个限制,第一次测量不进入温度过高提示\nexport default class Mesasure extends Component {\n  state = {\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    value: '',\n    api: '',\n    id: '',\n    dataArr: [],\n    seleceID: '',//医生id\n    data: { ci: [''], wen: [] },\n    echarsData: {\n      Eci: [],\n      wen0: [],\n      wen1: []\n    },\n    temColor: '',\n    Temp: '',\n    isMeasure: false,     //腋温正在测量中\n\n    mearsurePart: 1,\n    historyData: [],\n    patientId: '',\n    spin: false,        //patientId后面的刷新按钮是否旋转\n    petName: '',\n    notes: '',\n    addpatient_petName: '',\n    addpatient_description: '',\n    addpatient_species: 1,\n    roomTemperature: '',\n    referenceRectalTemperature: '',\n    bodyConditionScore: '',\n    furLength: '',\n    bodyType: '',\n    heartRate: '',\n    bloodPressure: '',\n    respiratoryRate: '',\n    visible: false,       //nodel框是否显示\n    disabled: true,       //model是否可拖拽\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\n\n    editVisible: false,\n    err07Visible: false,\n\n    leftStatus: 3,         //1代表着有宠物信息，2代表着添加宠物信息，3代表着初始化，没有填入patientId\n\n    selectPet: {\n      petId: '',\n      petName: '',\n      owner: '',\n      breedName: '',\n      isMix: false,\n      age: '',\n      weight: '',\n      birthday: ''\n    },\n    units: '℉',\n    measuerStatus: 'disconnected',\n    isconnected: false,\n    countdown: 60,\n    isPetCharacteristics: true,\n    isEmergency: false,\n    seleceEmergencies: {},\n    emerPatientID: '',\n    emerData: [],         //临床测试所有数据,用于传到mella后台\n    petVitalTypeId: '01',  //测量部位\n\n\n\n    memo: '',\n    editRectal: '',\n    editRoomTemperature: '',\n    editHeartRate: '',\n    editRespiratoryRate: '',\n    editBloodPressure: '',\n    editBodyConditionScore: '',\n    editFurLength: '',\n\n    noUSB: false,  //是否有usb底座，为true代表没有\n\n\n    tip: '',\n    tipSpin: false,\n    loading: false,\n    showHistoryEchart: false,  //在展示历史曲线的时候为true，当开始测量为false\n    tempHeight: false,           //第一次温度过高,需要冷却一下\n  }\n\n  componentWillMount() {\n    try {\n      console.log('-----------------===============-------------', this.props.location.isconnected);\n      if (this.props.location.isconnected === false || this.props.location.isconnected === true) {\n        if (this.props.location.isconnected === false) {\n\n        } else {\n          this.setState({\n            measuerStatus: 'connented',\n            isconnected: true\n\n          })\n          is97Time = new Date()\n        }\n      }\n    } catch (error) {\n\n    }\n  }\n  componentDidMount() {\n    firstMeasure = true\n\n\n    ipcRenderer.send('Lowbig', win())\n    console.log(this.props);\n    storage.isClinical = 'true'\n\n    //这里是为了从编辑宠物界面回来的时候能够直接展示这个宠物\n    if (this.props.location.participate) {\n      let props = this.props.location.participate\n\n      this.setState({\n        patientId: props.patientId\n      }, () => {\n        this._getPetInfo()\n      })\n    } else {\n      if (storage.measurepatientId) {\n        console.log('有上级传来的数据:', storage.measurepatientId);\n        this.setState({\n          patientId: storage.measurepatientId\n        }, () => {\n          this._getPetInfo()\n        })\n      }\n    }\n\n    //这里是记录从哪里传过来的，是普通医生、ezyVet、vetspire\n    if (this.props.location.identity) {\n      switch (this.props.location.identity) {\n        case '1':\n          console.log('这是从vetspire来的')\n\n          break;\n        case '2':\n          console.log('这是从ezyVet来的')\n          if (this.props.location.patientId) {\n            this.setState({\n              patientId: this.props.location.patientId\n            }, () => {\n              this._getPetInfo()\n            })\n          }\n\n          break;\n        case '3':\n          console.log('这是从普通医生来的来的');\n          // if (this.props.location.patientId) {\n          //   this.setState({\n          //     patientId: this.props.location.patientId\n          //   }, () => {\n          //     this._getPetInfo()\n          //   })\n          // }\n          this._getPetInfoBySave()\n          break;\n        default: console.log('暂未定义');\n          break;\n      }\n    }\n\n    let hardSet = electronStore.get('hardwareConfiguration')\n\n    if (!hardSet) {\n      let settings = {\n        isHua: true,\n        is15: true,\n        self_tarting: false,\n        isBacklight: true,\n        isBeep: true,\n        backlightTimer: { length: 140, number: '45' },\n        autoOff: { length: 0, number: '30' },\n      }\n      electronStore.set('hardwareConfiguration', settings)\n      this.setState({\n        units: '℉'\n      })\n    } else {\n      let units = hardSet.isHua ? '℉' : '℃'\n      this.setState({\n        units\n      })\n    }\n\n\n\n    ipcRenderer.on('sned', this._send)\n    ipcRenderer.on('usbDetect', this.usbDetect)\n    ipcRenderer.on('noUSB', this._noUSB)\n    //分辨率改变后窗口自动改变\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n    //检测有没有充电桩、温度计\n\n\n    this._whether_to_connect_to_mella()\n    countdownTimer && clearInterval(countdownTimer)\n\n  }\n\n  componentWillUnmount() {\n    ipcRenderer.removeListener('sned', this._send)\n    ipcRenderer.removeListener('usbDetect', this.usbDetect)\n    ipcRenderer.removeListener('noUSB', this._noUSB)\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n    detectTimer && clearInterval(detectTimer)\n    this.timer && clearTimeout(this.timer)\n    countdownTimer && clearInterval(countdownTimer)\n    getSerialTime && clearTimeout(getSerialTime)\n    this.detectTimer && clearInterval(this.detectTimer)\n    message.destroy()\n    firstMeasure = true\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    ipcRenderer.send('Lowbig', win())\n    this.setState({\n\n    })\n  }\n  usbDetect = (event, data) => {\n    if (data === true) {\n      this._whether_to_connect_to_mella()\n    } else {\n      this.detectTimer && clearInterval(this.detectTimer)\n      num07 = 0\n    }\n  }\n\n  _send = (event, data) => {\n    //data就是测量的数据，是十进制的数字\n\n    this.command(data)()\n  }\n  _noUSB = (e, data) => {\n    console.log('没有USB设备：', data);\n    if (data === false) {\n      message.destroy()\n      this.setState({\n        noUSB: false\n      })\n    } else {\n      if (!this.state.noUSB) {\n        message.error('The base is not detected. Please insert the base', 0)\n        this.setState({\n          noUSB: true,\n          measuerStatus: 'disconnected',\n          countdown: 60,\n          isMeasure: false,\n          isconnected: false,\n          echarsData: {\n            Eci: [],\n            wen0: [],\n            wen1: []\n          },\n          Temp: '',\n          emerData: []\n        })\n        echartCi = 0\n        meetCondition = false\n      }\n\n    }\n  }\n  _whether_to_connect_to_mella = () => {\n    this.detectTimer && clearInterval(this.detectTimer)\n    message.destroy()\n    this.detectTimer = setInterval(() => {\n      if (this.state.isMeasure) {\n        return\n      }\n      // console.log(initTime);\n      if (!initTime) {\n        console.log('断开连接');\n        this.setState({\n          measuerStatus: 'disconnected',\n          countdown: 0,\n          isMeasure: false,\n          isconnected: false,\n          isEarMeasure: false\n        })\n        initTime = new Date()\n        meetCondition = false\n      } else {\n        // if (this.state.measuerStatus === 'disconnected') {\n        //   ipcRenderer.send('usbdata', { command: '07', arr: [] })\n        // }\n        ipcRenderer.send('usbdata', { command: '07', arr: [] })\n\n        if (new Date() - initTime < 5000) {\n          console.log('连接成功', indexNum);\n          if (indexNum++ % 5 === 1) {\n            console.log('去询问探头');\n            ipcRenderer.send('usbdata', { command: '31', arr: [] })\n          }\n\n\n\n        } else {\n\n          console.log('2断开连接');\n          this.setState({\n            measuerStatus: 'disconnected',\n            countdown: 0,\n            isMeasure: false,\n            isconnected: false,\n            isEarMeasure: false\n          })\n          meetCondition = false\n        }\n      }\n    }, 2000);\n\n\n\n  }\n\n\n\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n\n  getOption = () => {\n    let { units } = this.state\n    let min, max;\n    if (units === '℃') {\n      min = 25\n      max = 45\n    } else {\n      min = 75\n      max = 115\n    }\n    let { echarsData } = this.state\n    let { Eci, wen0, wen1 } = echarsData\n    let that = this\n    let option = {\n      color: ['#81b22f'],\n      tooltip: {\n        /*返回需要的信息*/\n        trigger: 'axis',\n        triggerOn: 'mousemove',\n        enterable: true,\n        formatter: function (param) {\n          var value = param[0].value;\n          // console.log('----para', param);\n          return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(1)}${that.state.units}</div>`\n        }\n      },\n      xAxis: {\n        name: 'SPL',\n        nameLocation: 'end',\n        nameTextStyle: {\n          align: 'left',\n        },\n        type: 'category',\n        // data: [\"\", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,],\n        data: Eci,\n        // data:['','15miao','30miao'],\n        axisLine: {\n          lineStyle: {\n            // 设置x轴颜色\n            color: '#A0A0A0',\n            show: true\n          }\n        },\n        // 设置X轴数据旋转倾斜\n        axisLabel: {\n          rotate: 0, // 旋转角度\n          interval: 29  //设置X轴数据间隔几个显示一个，为0表示都显示\n\n        },\n\n      },\n      yAxis: {\n        name: 'temperature',\n        type: 'value',\n        min, // 设置y轴刻度的最小值\n        max,  // 设置y轴刻度的最大值\n        splitNumber: 0,  // 设置y轴刻度间隔个数\n        nameTextStyle: {\n          padding: [0, 0, 0, 8],\n          // backgroundColor: 'pink',\n          width: '1200px',\n          // fontSize: 20,\n          align: 'left',\n        },\n\n        axisLine: {\n          lineStyle: {\n            // 设置x轴颜色\n            color: '#A0A0A0',\n            show: true\n          }\n        },\n        splitLine: {\n          show: false\n        },\n      },\n      series: [{\n        name: '模拟数据',\n        type: 'line',\n        showSymbol: false,\n        hoverAnimation: false,\n        // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\n        data: wen0,\n        smooth: 0.5,\n        symbol: 'none',\n        itemStyle: {\n          normal: {\n            lineStyle: {        // 系列级个性化折线样式\n              width: 2,\n              type: 'solid',\n              color: {\n                type: 'linear',\n                x: 0,\n                y: 1,\n                x2: 0,\n                y2: 0,\n                colorStops: [{\n                  offset: 0.5, color: '#47C2ED' // 0% 处的颜色  蓝\n                }, {\n                  offset: 1, color: '#78D35D' // 50% 处的颜色  绿\n                },\n                  // {\n                  //   offset: 1, color: 'red' // 100% 处的颜色   红\n                  // }\n                ],\n                globalCoord: false // 缺省为 false\n              }\n            },\n          }\n        }\n      }]\n    }\n    return option;\n  }\n\n  handleClick = e => {\n    console.log('---------------身份', storage.identity);\n\n    switch (e.key) {\n      case '1':\n        //  storage.measurepatientId = this.state.patientId; console.log('返回前的问题查看：', this.props.history); this.props.history.goBack()\n        switch (storage.identity) {   //1是vetspire   2是ezyvet   3是医生\n          case '1': this.props.history.push('/VetSpireSelectExam')\n\n            break;\n          case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\n\n            break;\n\n          case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\n\n            break;\n\n\n\n          default:\n            break;\n        }\n        break;\n      case '2': storage.measurepatientId = ''; this.props.history.push('/')\n        break;\n      case '3': storage.measurepatientId = this.state.patientId; this.props.history.push('/page12');\n        break;\n      case '4': storage.measurepatientId = this.state.patientId; this.props.history.push({ pathname: '/page10', isconnected: this.state.isconnected })\n        break;\n      case '5': this.props.history.push('/menuOptions/settings'); break;\n      default: console.log('这个选项还没有做呢');\n\n\n    }\n\n  };\n\n  command = (newArr) => {\n    const instruction = [209, 193, 192, 129, 135, 238, 98, 97, 130, 208, 177, 7, 99]\n    let dataArr1 = newArr.map(item => {\n      if (item.toString(16).length < 2) {\n        return '0' + item.toString(16)\n      } else {\n        return item.toString(16)\n      }\n    })\n    if (newArr[2] !== 7) {\n      initTime = new Date()\n      num07 = 0\n    } else {\n      num07++\n    }\n\n\n    const commandArr = {\n      209: () => {  //腋温\n\n        let temp1 = parseFloat(`${dataArr1[3]}.${(dataArr1[4])}`)\n        let temp0 = parseFloat(`${dataArr1[5]}.${(dataArr1[6])}`)\n        let temp2 = parseFloat(`${dataArr1[7]}.${(dataArr1[8])}`)\n        let pdt0 = parseFloat(`${dataArr1[9]}.${(dataArr1[10])}`)\n        let pdt1 = parseFloat(`${dataArr1[11]}.${(dataArr1[12])}`)\n        let alpha0 = parseFloat(`${dataArr1[13]}.${(dataArr1[14])}`)\n        let alpha1 = parseFloat(`${dataArr1[15]}.${(dataArr1[16])}`)\n        let Temp = temp0\n\n        if (Temp === 0 || Temp === null || Temp === undefined) {\n          return\n        }\n\n        if (this.state.isMeasure === false) {\n          ipcRenderer.send('usbdata', { command: '31', arr: [] })\n          this.setState({\n            echarsData: {\n              Eci: [],\n              wen0: [],\n              wen1: []\n            },\n            countdown: 60\n\n          })\n          echartCi = 0\n\n        }\n\n\n\n        //需要做第一次温度,判断,如果温度低于76.6(24.8)则界面显示low,并且不记录上传到后台的临床测试数据emerData\n        //需要第一次做温度判断,如果温度高于85(29.4)℉,则跳出高温弹窗,不记录上传到后台的临床测试数据emerDate,并且第一次测量也为true\n\n        if (!meetCondition) {\n          dropNum = 0\n          tempArr = []\n          if (Temp >= 24.8 && Temp <= 29.4) {\n            meetCondition = true\n\n            if (countdownTimer) {\n              console.log('有定时器了，清理掉');\n              clearInterval(countdownTimer)\n              this.setState((prestate, props) => ({\n                countdown: 60\n              }));\n            }\n            countdownTimer = setInterval(() => {\n              console.log('进入定时器');\n              let { countdown, isconnected } = this.state\n              if (countdown <= 0) {\n                countdown = 60\n              }\n              this.setState({\n                countdown: countdown - 1\n\n              })\n              if (countdown <= 1) {\n                clearInterval(countdownTimer)\n                console.log('我要去发送了');\n                ipcRenderer.send('usbdata', { command: '41', arr: [] })\n              }\n              if (isconnected === false) {\n                clearInterval(countdownTimer)\n              }\n            }, 1000);\n\n\n\n            let emerData = this.state.emerData\n            let str = {\n              data0: temp0,\n              data1: temp1,\n              data2: temp2,\n              pdt0,\n              pdt1,\n              Alpha0: alpha0,\n              Alpha1: alpha1,\n            }\n            emerData.push(str)\n\n            let { echarsData } = this.state\n            let { wen0, wen1, Eci } = echarsData\n            Eci.push((echartCi++))\n            if (this.state.units === '℃') {\n              wen0.push(temp0)\n              wen1.push(temp1)\n            } else {\n              wen0.push(temp0 * 1.8 + 32)\n              wen1.push(temp1 * 1.8 + 32)\n            }\n\n            this.setState({\n              Temp,\n              echarsData,\n              isMeasure: true,\n              measuerStatus: 'connented',\n              isconnected: true,\n              showHistoryEchart: false,\n              emerData,\n              tempHeight: false\n            }, () => {\n              const option = this.getOption();\n              this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n            })\n\n          } else {\n\n            meetCondition = false\n            lastMeasureBig = true\n            lastMeasureTemp = temp0\n            if (Temp < 24.8) {\n              let { echarsData } = this.state\n              let { wen0, wen1, Eci } = echarsData\n              Eci.push((echartCi++))\n              if (this.state.units === '℃') {\n                wen0.push(temp0)\n                wen1.push(temp1)\n              } else {\n                wen0.push(temp0 * 1.8 + 32)\n                wen1.push(temp1 * 1.8 + 32)\n              }\n\n              this.setState({\n                Temp,\n                echarsData,\n                isMeasure: true,\n                measuerStatus: 'connented',\n                isconnected: true,\n                showHistoryEchart: false,\n                countdown: 60,\n                tempHeight: false,\n              }, () => {\n                const option = this.getOption();\n                this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n              })\n            } else {\n              if (!firstMeasure) {\n                if (!this.state.tempHeight) {\n                  this.setState({\n                    tempHeight: true\n                  })\n                }\n              } else {\n                meetCondition = true\n                firstMeasure = false\n\n                if (countdownTimer) {\n                  console.log('有定时器了，清理掉');\n                  clearInterval(countdownTimer)\n                  this.setState((prestate, props) => ({\n                    countdown: 60\n                  }));\n                }\n                countdownTimer = setInterval(() => {\n                  console.log('进入定时器');\n                  let { countdown, isconnected } = this.state\n                  if (countdown <= 0) {\n                    countdown = 60\n                  }\n                  this.setState({\n                    countdown: countdown - 1\n\n                  })\n                  if (countdown <= 1) {\n                    clearInterval(countdownTimer)\n                    console.log('我要去发送了');\n                    ipcRenderer.send('usbdata', { command: '41', arr: [] })\n                  }\n                  if (isconnected === false) {\n                    clearInterval(countdownTimer)\n                  }\n                }, 1000);\n\n\n\n                let emerData = this.state.emerData\n                let str = {\n                  data0: temp0,\n                  data1: temp1,\n                  data2: temp2,\n                  pdt0,\n                  pdt1,\n                  Alpha0: alpha0,\n                  Alpha1: alpha1,\n                }\n                emerData.push(str)\n\n                let { echarsData } = this.state\n                let { wen0, wen1, Eci } = echarsData\n                Eci.push((echartCi++))\n                if (this.state.units === '℃') {\n                  wen0.push(temp0)\n                  wen1.push(temp1)\n                } else {\n                  wen0.push(temp0 * 1.8 + 32)\n                  wen1.push(temp1 * 1.8 + 32)\n                }\n\n                this.setState({\n                  Temp,\n                  echarsData,\n                  isMeasure: true,\n                  measuerStatus: 'connented',\n                  isconnected: true,\n                  showHistoryEchart: false,\n                  emerData,\n                  tempHeight: false\n                }, () => {\n                  const option = this.getOption();\n                  this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n                })\n              }\n\n            }\n\n            console.log('不满足');\n          }\n        } else {\n          console.log('差值', temp0, lastMeasureTemp, temp0 - lastMeasureTemp);\n          if (temp0 - lastMeasureTemp <= -0.03) {\n            console.log('本次测量要小于上次测量,不计入里面');\n            countdownTimer && clearInterval(countdownTimer)\n            lastMeasureBig = false\n            return\n          }\n          if (!lastMeasureBig) {\n            countdownTimer = setInterval(() => {\n              console.log('进入定时器');\n              let { countdown, isconnected } = this.state\n              if (countdown <= 0) {\n                countdown = 60\n              }\n              this.setState({\n                countdown: countdown - 1\n\n              })\n              if (countdown <= 1) {\n                clearInterval(countdownTimer)\n                console.log('我要去发送了');\n                ipcRenderer.send('usbdata', { command: '41', arr: [] })\n              }\n              if (isconnected === false) {\n                clearInterval(countdownTimer)\n              }\n            }, 1000);\n          }\n\n\n\n\n\n\n          lastMeasureBig = true\n          lastMeasureTemp = temp0\n          let emerData = this.state.emerData\n          let str = {\n            data0: temp0,\n            data1: temp1,\n            data2: temp2,\n            pdt0,\n            pdt1,\n            Alpha0: alpha0,\n            Alpha1: alpha1,\n          }\n          emerData.push(str)\n\n          let { echarsData } = this.state\n          let { wen0, wen1, Eci } = echarsData\n          Eci.push((echartCi++))\n          if (this.state.units === '℃') {\n            wen0.push(temp0)\n            wen1.push(temp1)\n          } else {\n            wen0.push(temp0 * 1.8 + 32)\n            wen1.push(temp1 * 1.8 + 32)\n          }\n\n          tempArr.push(temp0)\n          if (tempArr.length > 10) {\n            let k = (tempArr[tempArr.length - 1] - tempArr[tempArr.length - 11]) / 10\n            console.log('斜率', k);\n            if (k < -0.035) {\n              console.log('下降的有点狠了');\n              dropNum++\n            } else {\n              dropNum = 0\n            }\n            if (dropNum > 10) {\n              message.destroy()\n              message.error('Measurement failed')\n              dropNum = 0\n            }\n          }\n\n\n          this.setState({\n            Temp,\n            echarsData,\n            isMeasure: true,\n            measuerStatus: 'connented',\n            isconnected: true,\n            showHistoryEchart: false,\n            emerData,\n            tempHeight: false\n          }, () => {\n            const option = this.getOption();\n            this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n          })\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      },\n      208: () => {  //耳温\n\n\n\n        //现在探头0可能不存在，所以把探头0改为探头1\n\n        let temp0 = parseFloat(`${dataArr1[7]}.${(dataArr1[8])}`)\n\n\n        let Temp = Math.floor(temp0 * 10) / 10\n        console.log('------------gangwen--------------', Temp);\n\n        let emerData = this.state.emerData\n\n        let str = {\n          data0: temp0,\n\n        }\n        emerData.push(str)\n        this.setState({\n          emerData,\n          Temp,\n          isMeasure: false,\n          mearsurePart: 3,\n          measuerStatus: 'measuring',\n          isconnected: true\n        })\n        meetCondition = false\n\n      },\n      193: () => {  //硬件发送结束命令\n        let time = new Date() - is193Time\n        lastMeasureTemp = 0\n        lastMeasureBig = true\n        console.log(time);\n        if (time < 1000) {\n          is193Time = new Date()\n          console.log('我直接抛出');\n          return;\n        } else {\n          console.log('---------------------------', time);\n          is193Time = new Date()\n\n          countdownTimer && clearInterval(countdownTimer)\n\n\n          saveHistoryTime && clearTimeout(saveHistoryTime)\n\n          saveHistoryTime = setTimeout(() => { //防止连续向后台发送数据\n            countdownTimer && clearInterval(countdownTimer)\n\n            meetCondition = false\n\n\n\n            let { roomTemperature, referenceRectalTemperature, bodyConditionScore,\n              furLength, heartRate, bloodPressure, respiratoryRate, Temp, emerData } = this.state\n            if (emerData.length < 10) {\n              console.log('临床数据太少,不做保存');\n              return\n            }\n\n            if (bodyConditionScore === '') {\n              bodyConditionScore = null\n            } else {\n              bodyConditionScore = parseFloat(bodyConditionScore)\n            }\n\n            if (heartRate === '') {\n              heartRate = null\n            } else {\n              heartRate = parseFloat(heartRate)\n            }\n\n            if (respiratoryRate === '') {\n              respiratoryRate = null\n            } else {\n              respiratoryRate = parseFloat(respiratoryRate)\n            }\n\n            if (roomTemperature === '') {\n              roomTemperature = null\n            } else {\n              roomTemperature = ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2)\n            }\n\n            if (referenceRectalTemperature === '') {\n              referenceRectalTemperature = null\n            } else {\n              referenceRectalTemperature = ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2)\n            }\n\n            if (furLength === '') {\n              furLength = null\n            } else {\n              furLength = parseFloat(furLength)\n            }\n            let petVitalId = null\n            switch (this.state.petVitalTypeId) {\n              case '01': petVitalId = 1; break;\n              case '02': petVitalId = 3; break;\n              case '03': petVitalId = 4; break;\n              default: petVitalId = 1; break;\n            }\n            let datas = {\n\n              temperature: parseFloat(Temp),  //测量温度\n              roomTemperature,//室温\n              bodyConditionScore,\n              heartRate,\n              respiratoryRate,\n              referenceRectalTemperature,\n              furLength,\n              bloodPressure,\n              memo: this.state.notes,\n              petVitalTypeId: petVitalId,\n              clinicalDataEntityList: emerData\n            }\n            if (storage.roleId === `1`) {\n              datas.userId = storage.userId\n            } else {\n              datas.doctorId = storage.userId\n              datas.userId = storage.userId\n            }\n\n            if (this.state.selectPet.petId !== '' && this.state.isEmergency === false) {\n\n              datas.petId = this.state.selectPet.petId\n\n\n              console.log('临床测试入参：', datas);\n              //把数据保存进入云端\n              addAllClinical(datas)\n                .then(res => {\n                  console.log(res);\n                  meetCondition = false\n                  if (res.flag === true) {\n                    console.log('上传成功');\n                    // message.success('Uploaded successfully')\n                    this.setState({\n                      emerData: [],\n                      isMeasure: false\n                    })\n\n                    message.success('Uploaded successfully')\n                    this._getHistory11(this.state.selectPet.petId)\n                  } else {\n                    console.log('上传失败');\n                    this.setState({\n                      emerData: [],\n                      isMeasure: false\n                    })\n                    message.error('upload failed')\n                  }\n                })\n                .catch(err => {\n                  console.log(err);\n                  // message.error(err)\n                  this.setState({\n                    emerData: [],\n                    isMeasure: false\n                  })\n                  meetCondition = false\n                })\n            } else if (this.state.isEmergency === true) {\n\n              console.log('温度数据保存入参：', datas);\n\n              addAllClinical(datas)\n                .then(res => {\n                  console.log(res);\n                  meetCondition = false\n                  if (res.flag === true) {\n                    console.log('上传成功');\n                    message.success('Uploaded successfully')\n                    this.setState({\n                      emerData: [],\n                      isMeasure: false\n                    })\n                    // this._getHistory11(this.state.selectPet.petId)\n                    this._getEmergencyHistory()\n                  } else {\n                    console.log('上传失败');\n                    message.error('upload failed')\n                    this.setState({\n                      emerData: [],\n                      isMeasure: false\n                    })\n                  }\n                })\n                .catch(err => {\n                  console.log(err);\n                  message.error(err)\n                  this.setState({\n                    emerData: [],\n                    isMeasure: false\n                  })\n                  meetCondition = false\n                })\n            }\n\n            clearTimeout(saveHistoryTime)\n          }, 500);\n\n\n\n\n\n        }\n\n\n      },\n\n      192: () => {   //开始测量返回结果\n        switch (newArr[3]) {\n          case 90: console.log('有探头，开始测量的返回指令·'); break;\n          case 11: console.log('没有探头，开始测量的返回值'); break;\n\n        }\n      },\n      129: () => {      //返回硬件版本号\n        console.log(`返回的版本号为${newArr[3]}`);\n        this.setState({\n          measuerStatus: 'connented',\n          isconnected: true\n\n        })\n      },\n      135: () => {          //硬件的一些配置信息\n        /**\n         * ______________新版、旧版没法控制温度计__________________\n         * newArr[3]、newArr[4]、newArr[5]、newArr[6]是蓝牙温度计的修正系数\n         * newArr[7] 无操作关机时间        bcd码\n         * newArr[8] 背光时间              bcd码\n         * newArr[9] 是否提示音    ：00代表无提示音，11代表有提示音\n         * newArr[10] 测量单位    01代表℃，00代表℉\n         */\n        countdownTimer && clearInterval(countdownTimer)\n        this.setState({\n          measuerStatus: 'connented',\n          isconnected: true\n\n        })\n        let hardSet = electronStore.get('hardwareConfiguration')\n        let beep = hardSet.isBeep ? '11' : '00'\n        let unit = hardSet.isHua ? '00' : '01'\n\n        if (dataArr1[7] === hardSet.autoOff.number && dataArr1[8] === hardSet.backlightTimer.number &&\n          dataArr1[9] === beep && dataArr1[10] === unit) {\n        } else {\n          console.log('不相同，去发送命令');\n          let setArr = ['03', 'ed', '07', 'dd', hardSet.autoOff.number, hardSet.isBacklight ? hardSet.backlightTimer.number : '00', hardSet.isBeep ? '11' : '00', hardSet.isHua ? '00' : '01']\n          ipcRenderer.send('usbdata', { command: '21', arr: setArr })\n        }\n        // if (newArr[10] === 0) {\n        //   this.setState({\n        //     units: '℉'\n        //   })\n        // } else {\n        //   this.setState({\n        //     units: '℃'\n        //   })\n        // }\n\n\n      },\n      238: () => {     //探头松动\n        console.log('探头松动');\n        this.setState({\n          isMeasure: false\n        })\n        meetCondition = false\n        message.error('The probe is loose, please re-install and measure again', 5)\n        clearInterval(countdownTimer)\n      },\n      98: () => { //蓝牙连接断开\n        console.log('断开连接---断开连接---断开连接---断开连接---断开连接---断开连接');\n\n        console.log(new Date() - is97Time);\n        if (new Date() - is97Time < 800) {\n          return\n        }\n        this.setState({\n          measuerStatus: 'disconnected',\n          countdown: 60,\n          isMeasure: false,\n          isconnected: false,\n          echarsData: {\n            Eci: [],\n            wen0: [],\n            wen1: []\n          },\n          Temp: '',\n          emerData: []\n        })\n        echartCi = 0\n        meetCondition = false\n\n      },\n      97: () => {       //蓝牙连接\n        console.log('连接成功---连接成功---连接成功---连接成功---连接成功---连接成功');\n        this.setState({\n          measuerStatus: 'connented',\n          isconnected: true\n\n        })\n        is97Time = new Date()\n      },\n      130: () => {   //获取到mac地址\n        let dataArr = newArr.map(item => {\n          if (item.toString(16).length < 2) {\n            return '0' + item.toString(16)\n          } else {\n            return item.toString(16)\n          }\n        })\n        let str = ''\n        for (let i = 3; i < dataArr.length - 2; i++) {\n\n          str += dataArr[i]\n\n        }\n        // console.log(str);\n        this.setState({\n          notes: `${str}\n          `\n        })\n      },\n      177: () => {         //探头id\n        let dataArr1 = newArr.map(item => {\n          if (item.toString(16).length < 2) {\n            return '0' + item.toString(16)\n          } else {\n            return item.toString(16)\n          }\n        })\n        let id = ''\n        for (let i = 3; i < dataArr1.length - 2; i++) {\n          id += dataArr1[i]\n\n        }\n        console.log(id, dataArr1[7]);\n\n        this.setState({\n          probeID: id,\n          petVitalTypeId: dataArr1[7]\n        })\n        if (dataArr1[7] === '01') {\n          this.setState({\n            mearsurePart: 1\n          })\n        } else if (dataArr1[7] === '02') {\n          this.setState({\n            mearsurePart: 2\n          })\n        } else if (dataArr1[7] === '03') {\n          this.setState({\n            mearsurePart: 3\n          })\n        }\n\n\n\n      },\n      7: () => {  //发什么收什么，需要去重新插拔底座\n        console.log('重新插拔底座');\n        if (num07 === 3 && this.state.err07Visible === false) {\n          this.setState({\n            err07Visible: true\n          })\n        }\n      },\n\n\n    }\n    if (instruction.indexOf(newArr[2]) !== -1) {\n      return commandArr[newArr[2]]\n    } else {\n      return () => {\n        console.log('没有控制命令', commandArr);\n      }\n    }\n\n  }\n\n  _mearsurePort = () => {\n    switch (this.state.mearsurePart) {\n      case 1: return (\n        <div >\n          <div className='part'>\n            Axillary\n            <img src={ye} alt=\"\" width={px(50)} />\n\n          </div>\n        </div>\n      );\n      case 2: return (\n        <div >\n          <div className='part'>\n            Rectal\n            <img src={gang} alt=\"\" width={px(50)} />\n\n          </div>\n        </div>\n      );\n      default: return (\n        <div >\n          <div className='part'>\n            Ear\n            <img src={er} alt=\"\" width={px(50)} />\n\n          </div>\n        </div>\n      );\n    }\n  }\n\n  _getEmergencyHistory = () => {\n\n    //封装的日期排序方法\n    function ForwardRankingDate(data, p) {\n      for (let i = 0; i < data.length - 1; i++) {\n        for (let j = 0; j < data.length - 1 - i; j++) {\n          if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\n            var temp = data[j];\n            data[j] = data[j + 1];\n            data[j + 1] = temp;\n          }\n        }\n      }\n      return data;\n    }\n    let historys = []\n    this.setState({\n      loading: true\n    })\n\n    getPetExamByDoctorId(storage.userId)\n      .then(res => {\n        // console.log('获取的宠物记录列表1', res);\n        this.setState({\n          loading: false\n        })\n        if (res.flag === true) {\n          let datas = res.data\n          for (let i = datas.length - 1; i >= 0; i--) {\n            if (datas[i].petId === null) {\n              let { petId, examId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo, clinicalDatagroupId,\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity } = datas[i]\n              let Tem = temperature\n              try {\n                Tem = temperature || clinicalDataEntity.data0\n              } catch (error) {\n                console.log('抛出的异常', error);\n              }\n\n\n              let str = {\n                clinicalDatagroupId,\n                createTime,\n                date: moment(createTime).format('MMM DD'),\n                time: moment(createTime).format('hh:mm A'),\n                temp: parseInt(Tem * 10) / 10,\n                placement: petVitalTypeId,\n                note: memo,\n                historyId: examId,\n                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\n              }\n\n              historys.push(str)\n            }\n          }\n\n          //把所有数据拿完后做个排序\n\n          let historyData = ForwardRankingDate(historys, \"createTime\");\n          console.log('historyData:', historyData);\n          this.setState({\n            historyData\n          })\n        }\n      })\n      .catch(err => {\n        this.setState({\n          loading: false\n        })\n        console.log(err);\n      })\n\n  }\n\n  _getHistory11 = (petId) => {\n    let historys = []\n    this.setState({\n      loading: true\n    })\n\n    getPetExamAndClinicalByPetId(petId)\n      .then(res => {\n        console.log('获取历史记录', res);\n        this.setState({\n          loading: false\n        })\n        if (res.flag === true) {\n          let datas = res.data\n          console.log('-------', datas);\n          for (let i = datas.length - 1; i >= 0; i--) {\n\n            let data = datas[i]\n\n            let { petId, examId, clinicalDatagroupId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo,\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity, modifiedTime } = data\n\n            if (!clinicalDatagroupId) {\n              continue\n            }\n            let Tem = temperature\n            if (clinicalDataEntity) {\n              Tem = Tem || clinicalDataEntity.data0\n            }\n            // console.log('==============', Tem);\n            Tem = Tem ? Tem : 0\n\n\n            let time = null\n            if (modifiedTime && `${modifiedTime}` !== '' && `${modifiedTime}` !== `undefined`) {\n              time = modifiedTime\n            } else {\n              time = createTime\n            }\n            let json = {\n              time,\n              Temp: Tem,\n              placement: petVitalTypeId,\n              note: memo,\n              historyId: examId,\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\n            }\n            historys.push(json)\n\n\n          }\n          console.log('---', historys);\n          let historyData = []\n          for (let i = 0; i < historys.length; i++) {\n            let history = historys[i]\n            let { bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId, examId } = history\n            // console.log('--------', history.placement);\n            let placement = history.placement\n            if (placement === null || placement === '') {\n              placement = 1\n            }\n            let str = {\n              date: moment(history.time).format('MMM DD'),\n              time: moment(history.time).format('hh:mm A'),\n              temp: history.Temp,\n              placement,\n              note: history.note,\n              historyId: history.historyId,\n              bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId,\n              key: examId\n            }\n            historyData.push(str)\n          }\n          this.setState({\n            historyData\n          })\n        }\n      })\n      .catch(err => {\n        this.setState({\n          loading: false\n        })\n        console.log(err);\n      })\n\n  }\n\n  _refresh = () => {\n    console.log('点击了');\n    // ipcRenderer.send('usbdata', { command: '07', arr: [] })\n    this.setState({\n      spin: true,  //\n      addpatient_description: '',\n      addpatient_petName: '',\n      addpatient_species: 1\n    })\n    if (this.state.patientId === '') {\n      this.setState({\n        spin: false\n      })\n    } else {\n      this._getPetInfo()\n    }\n\n\n  }\n\n\n  _getPetInfoBySave = () => {\n    let data = JSON.parse(storage.doctorExam)\n    console.log('从列表里面传过来的数据', data);\n    if (!data) {\n      console.log('从walk-in来的');\n    } else {\n      let { petId, petName, owner, breed, isMix, age, weight, url, patientId } = data\n      if (weight === 'unknown') {\n        weight = null\n      }\n      let selectPet = {\n        petId,\n        petName,\n        owner,\n        breedName: breed,\n        isMix,\n        age,\n        weight,\n        // birthday,\n        url,\n\n\n      }\n      this.setState({\n        selectPet,\n        leftStatus: 1,\n        patientId\n      })\n      this._getHistory11(petId)\n    }\n  }\n\n\n  _getPetInfo = () => {\n\n    switch (storage.identity) {\n      // case '1':\n      //   console.log('我是vetspire查找');\n\n\n\n      case '2':\n        console.log('我是ezyVet查找');\n        let params = {\n          animalId: this.state.patientId,\n          organizationId: 4\n        }\n        let paramsArray = [];\n        Object.keys(params).forEach(key =>\n          paramsArray.push(key + \"=\" + params[key])\n        );\n        let url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId'\n        // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\n        if (url.search(/\\?/) === -1) {\n          url = url + \"?\" + paramsArray.join(\"&\");\n        } else {\n          url = url + \"&\" + paramsArray.join(\"&\");\n        }\n        console.log('ezyVet集成查找宠物入参-请求地址', params, url);\n        fetch(url, {\n          method: \"GET\",\n          headers: {\n            'authorization': `Bearer ${storage.ezyVetToken}`,\n          }\n        }).then((response) => response.json())\n          .then((res) => {\n            console.log('res', res);\n            this.setState({\n              spin: false\n            })\n            if (res.flag === true) {\n              //有宠物，进入1\n              let petArr = res.data\n              if (petArr.length > 1) {\n                petArr.sort(function (a, b) {\n                  return a.createTime > b.createTime ? 1 : -1;\n                })\n              }\n\n\n              console.log(petArr);\n\n              let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr\n              if (isMix !== true) {\n                isMix = false\n              }\n              let age = moment(new Date()).diff(birthday, 'year')\n              let selectPet = {\n                petId,\n                petName,\n                owner: `${lastName}  ${firstName}`,\n                breedName,\n                isMix,\n                age,\n                weight,\n                birthday,\n                url\n\n              }\n              this.setState({\n                selectPet,\n                leftStatus: 1,\n              })\n              this._getHistory11(petId)\n\n            } else {\n              //没有宠物，进入2\n              this.setState({\n                leftStatus: 2\n              })\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n\n        break;\n\n      case '3':\n        console.log('我是一般医生查找');\n        let datas = {\n          patientId: this.state.patientId,\n          doctorId: storage.userId,\n        }\n        if (storage.lastWorkplaceId) {\n          datas.workplaceId = storage.lastWorkplaceId\n        }\n        if (storage.lastOrganization) {\n          datas.org = storage.lastOrganization\n        }\n        console.log('入参：', datas);\n\n        getPetInfoByPatientIdAndPetId(datas)\n          .then(res => {\n            console.log(res);\n            this.setState({\n              spin: false\n            })\n            if (res.flag === true) {\n              //有宠物，进入1\n              let petArr = res.data\n              if (petArr.length > 1) {\n                petArr.sort(function (a, b) {\n                  return a.createTime > b.createTime ? 1 : -1;\n                })\n              }\n\n              console.log(petArr);\n\n              let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr[0]\n              if (isMix !== true) {\n                isMix = false\n              }\n              let age = moment(new Date()).diff(birthday, 'year')\n              let selectPet = {\n                petId,\n                petName,\n                owner: `${lastName}  ${firstName}`,\n                breedName,\n                isMix,\n                age,\n                weight,\n                birthday,\n                url\n\n              }\n              this.setState({\n                selectPet,\n                leftStatus: 1,\n              })\n              this._getHistory11(petId)\n\n            } else {\n              //没有宠物，进入2\n              this.setState({\n                leftStatus: 2\n              })\n            }\n          })\n          .catch(err => {\n            this.setState({\n              spin: false\n            })\n            console.log(err);\n          })\n        break;\n\n      default:\n        break;\n    }\n\n\n  }\n\n  draggleRef = React.createRef();\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleOk = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n      emerPatientID: ''\n    });\n  };\n\n  handleCancel = (e) => {\n    console.log(e);\n    this.setState({\n      visible: false,\n      emerPatientID: ''\n    });\n  };\n\n  onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\n      }\n    });\n  };\n\n  _addPatient = () => {\n    console.log(222);\n    let { addpatient_description, addpatient_petName, addpatient_species, patientId } = this.state\n    let speciesId = 3, petSpeciesBreedId = 13001\n\n    // speciesId   狗：2   猫：1    其他：3\n    switch (addpatient_species) {\n      case 1: speciesId = 2; petSpeciesBreedId = 12001; break;\n      case 2: speciesId = 1; petSpeciesBreedId = 11001; break;\n      default: speciesId = 3; petSpeciesBreedId = 13001;\n    }\n    // 11001 是cat 12001是dog 13001是other\n    //\n    let datas = {\n\n      petName: addpatient_petName,\n      description: addpatient_description,\n      speciesId,\n      doctorId: storage.userId,\n      petSpeciesBreedId\n\n\n    }\n    if (storage.lastWorkplaceId) {\n      datas.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      datas.organizationId = storage.lastOrganization\n    }\n\n    console.log(datas);\n    addDeskPet(patientId, datas)\n      .then((res) => {\n        console.log(res);\n        if (res.flag === true) {\n          message.success('Patient id created successfully')\n          this._refresh()\n        } else {\n          console.log('创建Patient id 失败');\n          message.error('Patient id creation failed')\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        message.error('Patient id creation failed')\n      })\n  }\n\n  _topLeft = () => {\n    let { historyData, spin, selectPet, patientId } = this.state\n    let { petName, owner, breedName, isMix, age, weight, url, speciesId } = selectPet\n    if (!breedName) {\n      breedName = ''\n    }\n    switch (breedName) {\n      case 'defaultdog':\n        breedName = 'Dog'\n\n        break;\n      case 'defaultother':\n        breedName = 'Other'\n\n        break;\n      case 'defaultcat':\n        breedName = 'Cat'\n        break;\n\n    }\n\n    let image = `url(${other})`\n\n    if (url) {\n      image = `url(${url}?download=0&width=80)`\n    } else {\n      switch (speciesId) {\n        case 1: image = `url(${cat})`; break;\n        case 2: image = `url(${dog})`; break;\n\n        default:\n          break;\n      }\n    }\n\n\n    let mix = ''\n    if (isMix === true) {\n      mix = 'Mix'\n    }\n    if (weight === null) {\n      weight = ''\n    } else {\n      weight = (2.2046 * parseFloat(weight)).toFixed(1) + 'lbs'\n    }\n\n    if (`${age}` === `NaN` || `${age}` === `null`) {\n      age = ''\n    } else {\n      age = `${age} yrs`\n    }\n    let datas = []\n    for (let i = 0; i < historyData.length; i++) {\n      if (i < 3) {\n        datas.push(historyData[i])\n      } else {\n        break;\n      }\n    }\n    let dogbgc = '', catbgc = '', otherbgc = '';\n\n    switch (this.state.addpatient_species) {\n      case 1: dogbgc = '#E1206D'; catbgc = '#F08FB6'; otherbgc = '#F08FB6'; break;\n      case 2: dogbgc = '#F08FB6'; catbgc = '#E1206D'; otherbgc = '#F08FB6'; break;\n      case 3: dogbgc = '#F08FB6'; catbgc = '#F08FB6'; otherbgc = '#E1206D'; break;\n      default: break;\n    }\n\n    if (owner === `null  null`) {\n      // owner = 'unknown'\n      owner = ''\n    }\n    if (breedName === '' || breedName === null || breedName === undefined) {\n      // breedName = 'unknown'\n      breedName = ''\n    }\n    let title = ''\n    if (patientId) {\n      title += `ID: ${patientId}`\n    }\n    if (patientId && petName) {\n      title += ` , `\n    }\n    if (petName) {\n      title += `${petName}`\n    }\n    switch (this.state.leftStatus) {\n      case 1: return (\n        <div className=\"l\">\n          <div className=\"petinfo\">\n            <div className=\"heard\"\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\n            >\n              <Tooltip placement='bottom' title='Switch pet'>\n                <MyIcon\n                  type='icon-qiehuanchengshi'\n                  className=\"icon\"\n                  style={{ marginRight: px(10), textAlign: 'center', }}\n                  onClick={() => {\n                    this.setState({\n                      leftStatus: 3,\n                      isMeasure: false,\n                      selectPet: {\n                        petId: '',\n                        petName: '',\n                        owner: '',\n                        breedName: '',\n                        isMix: false,\n                        age: '',\n                        weight: '',\n                        birthday: '',\n                      },\n                      patientId: '',\n                      historyData: [],\n                    })\n                    meetCondition = false\n                  }} />\n              </Tooltip>\n\n              <div className='avatar'\n                style={{\n                  width: px(50),\n                  height: px(50),\n                  marginRight: px(10),\n                  backgroundImage: image,\n                }}\n\n              >\n\n                {/* <img src={image} width={px(80)} alt=\"\" /> */}\n\n                {(storage.identity === '3') &&\n                  <img className='edit' src={edit} alt=\"\" width='18px'\n                    onClick={() => {\n                      storage.goEditPet = 'mesasure'\n                      this.props.history.push({ pathname: '/page9', participate: { patientId, petName, petId: this.state.selectPet.petId } })\n                    }}\n\n                  />}\n\n\n              </div>\n              <div className=\"ltitle\">\n                <p > {title}</p>\n              </div>\n            </div>\n\n            <div className=\"info\"\n              style={{ marginTop: mTop(10), marginBottom: mTop(20), paddingLeft: px(80) }}\n            >\n              Owner: {`${owner}`} <br />\n              {`Breed:  ${breedName}  ${mix}`}<br />\n              Age: {`${age}`}<br />\n              Weight: {`${weight}`}<br />\n            </div>\n          </div>\n          <div className=\"history\">\n            <div className=\"heard1\"\n              style={{ height: mTop(40), marginTop: mTop(10) }}\n              onClick={() => { this.setState({ visible: true }) }}>\n              <span>Device Info</span>\n            </div>\n            <div className=\"historyBody\">\n              {/* <div className=\"devices\">\n                <p>Device:</p>\n                <Select defaultValue=\"Mella-684h2\" style={{ width: 120 }} size={'small'}\n                // onChange={handleChange}\n                >\n                  <Option value=\"device1\">Mella-684h2</Option>\n                  <Option value=\"device2\">Mella-587j0</Option>\n                  <Option value=\"device3\">Mella-742k3</Option>\n                </Select>\n              </div> */}\n              {this._mearsurePort()}\n            </div>\n\n          </div>\n        </div>\n      )\n\n      case 2: return (\n        <div className=\"l\">\n          <div className=\"petinfo\">\n            <div className=\"heard\"\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\n\n            >\n              {`Clinical Study Mode`}\n            </div>\n            <div className=\"patirntID\"\n              style={{ marginTop: px(18) }}\n            >\n              <p style={{ width: '80px' }}>Patient ID:</p>\n              <Input\n                // style={{ border: 'none', outline: 'medium' }}\n                style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\n\n                value={this.state.patientId}\n                bordered={false}\n                onChange={(item) => {\n                  this.setState({\n                    patientId: item.target.value.replace(/\\s/g, \"\")\n                  })\n                }}\n                onKeyDown={(e) => {\n                  // console.log('------', e);\n                  if (e.keyCode === 13) {\n                    this._refresh()\n                  }\n                }}\n              />\n              <SyncOutlined className='refresh'\n                style={{ fontSize: px(25) }}\n                onClick={this._refresh} spin={spin} />\n            </div>\n\n            <div className='newPet'>\n              <p style={{ color: '#E1206D', fontSize: px(18), fontWeight: 'bold', marginTop: mTop(10), paddingLeft: px(30) }}>Yay! You got a new patient!</p>\n              <div className=\"patirntID\"\n                style={{ marginTop: px(18) }}\n              >\n                <p style={{ width: '80px' }}>Pet Name:</p>\n                <Input\n                  // style={{ border: 'none', outline: 'medium' }}\n                  style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\n\n                  value={this.state.addpatient_petName}\n                  bordered={false}\n                  onChange={(item) => {\n                    // console.log(item);\n                    this.setState({\n                      addpatient_petName: item.target.value\n                    })\n                  }}\n                />\n              </div>\n              <div className=\"patirntID\"\n                style={{ marginTop: px(18) }}\n              >\n                <p style={{ width: '80px' }}>Description:</p>\n                <Input\n                  // style={{ border: 'none', outline: 'medium' }}\n                  style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\n\n                  value={this.state.addpatient_description}\n                  bordered={false}\n                  onChange={(item) => {\n                    // console.log(item);\n                    this.setState({\n                      addpatient_description: item.target.value\n                    })\n                  }}\n                />\n              </div>\n              <div className=\"species\">\n\n                <ul>\n                  <li >\n                    <div className='speciesChild'\n                      style={{ width: px(50), }}\n                    >\n                      <div className='dog'\n                        style={{ width: px(50), height: px(50), backgroundColor: dogbgc }}\n                        onClick={() => { this.setState({ addpatient_species: 1 }) }} >\n                        <img src={dog} alt=\"\" style={{ width: px(38) }} />\n                      </div>\n                      Dog\n                    </div>\n                  </li>\n                  <li >\n                    <div className='speciesChild'\n                      style={{ width: px(50) }}\n                    >\n                      <div className='dog'\n                        style={{ width: px(50), height: px(50), backgroundColor: catbgc }}\n                        onClick={() => { this.setState({ addpatient_species: 2 }) }}  >\n                        <img src={cat} alt=\"\" style={{ width: px(38) }} />\n                      </div>\n                      Cat\n                    </div>\n                  </li>\n                  <li >\n                    <div className='speciesChild'\n                      style={{ width: px(50) }}\n                    >\n                      <div className='dog'\n                        style={{ width: px(50), height: px(50), backgroundColor: otherbgc }}\n\n                        onClick={() => { this.setState({ addpatient_species: 3 }) }}>\n                        <img src={other} alt=\"\" style={{ width: px(38), color: '#FFF' }} />\n                      </div>\n                      Other\n                    </div>\n                  </li>\n                </ul>\n              </div>\n              <div className=\"savebtn\"\n                style={{ marginTop: mTop(20) }}\n              >\n                <p\n                  style={{ width: px(180), height: px(40), marginLeft: px(70), fontSize: px(16) }}\n                  onClick={() => { this._addPatient() }}>Add New Patient</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n      case 3: return (\n        <div className=\"l\">\n          <div className=\"petinfo\">\n            <div className=\"heard\"\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\n\n            >\n              {`Clinical Study Mode`}\n            </div>\n            <div className=\"patirntID\">\n              <p style={{ width: '80px' }}>Patient ID:</p>\n              <Input\n                // style={{ border: 'none', outline: 'medium' }}\n                style={{ width: px(150), height: mTop(33), marginLeft: px(25), fontSize: px(18), marginRight: px(6) }}\n\n                value={this.state.patientId}\n                bordered={false}\n                onChange={(item) => {\n                  // console.log(item);\n                  this.setState({\n                    patientId: item.target.value.replace(/\\s/g, \"\")\n                  })\n                }}\n                onKeyDown={(e) => {\n                  // console.log('------', e);\n                  if (e.keyCode === 13) {\n                    this._refresh()\n                  }\n                }}\n              />\n              <SyncOutlined className='refresh' onClick={this._refresh} spin={spin} />\n            </div>\n            <div className=\"emergency\"\n              style={{ marginTop: mTop(10) }}\n              onClick={() => {\n                this.setState({ leftStatus: 4, isEmergency: true })\n                this._getEmergencyHistory()\n              }}>\n              <div className=\"btn\"\n                style={{ width: px(180), height: px(40) }}\n              >\n                Emergency\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n      case 4: return (\n        <div className=\"l\">\n          <div className=\"petinfo\">\n            <div className=\"heard\"\n              style={{ height: px(50), marginTop: mTop(10), fontSize: px(24) }}\n\n            >\n              {`Clinical Study Mode`}\n            </div>\n            <div className=\"emergencyText\">\n              <p style={{ fontSize: px(20), marginTop: mTop(10), margin: 0, padding: 0 }}>\n                You are in an emergency now,\n                you can click History in this mode to assign history records</p>\n\n            </div>\n            <div className=\"emergency\" onClick={() => {\n              this.setState({ leftStatus: 3, isEmergency: false, historyData: [] })\n\n            }}>\n              <div className=\"btn\"\n                style={{ width: px(180), height: px(40), fontSize: px(25) }}\n              >\n                Exit\n              </div>\n            </div>\n\n            <div className=\"history\">\n              <div className=\"heard1\"\n                style={{ height: mTop(40), marginTop: mTop(10) }}\n                onClick={() => { this.setState({ visible: true }) }}>\n                <span>Device Info</span>\n              </div>\n              <div className=\"historyBody\">\n                <div className=\"devices\">\n                  <p>Device:</p>\n                  <Select defaultValue=\"Mella-684h2\" style={{ width: 120 }} size={'small'}\n                  // onChange={handleChange}\n                  >\n                    <Option value=\"device1\">Mella-684h2</Option>\n                    <Option value=\"device2\">Mella-587j0</Option>\n                    <Option value=\"device3\">Mella-742k3</Option>\n                  </Select>\n                </div>\n                {this._mearsurePort()}\n              </div>\n\n            </div>\n          </div>\n        </div>\n      )\n      default: return null;\n\n    }\n\n\n  }\n\n  handleChange = index => {\n    console.log('---------', index);\n    this.setState({\n      furLength: index\n    })\n  };\n\n  handleChange1 = index => {\n    console.log('---------', index);\n    let bodyType = document.querySelectorAll('#_bodyType .ant-select-selector')\n    switch (`${index}`) {\n      case '1': bodyType[0].style.width = \"105px\"\n\n        break;\n      case '2': bodyType[0].style.width = \"130px\"\n\n        break;\n      case '3': bodyType[0].style.width = \"120px\"\n\n        break;\n\n      default: bodyType[0].style.width = \"105px\"\n        break;\n    }\n\n    // bodyType[0].style.width = \"120px\"\n    console.dir(bodyType)\n    this.setState({\n      bodyType: index\n    })\n  };\n\n  _foot = () => {\n    let lbgc = '', rbgc = ''\n    if (this.state.isPetCharacteristics) {\n      lbgc = 'rgba(25,173,228,0.5)'; rbgc = 'rgba(105,201,237,1)'\n    } else {\n      lbgc = 'rgba(105,201,237,1)'; rbgc = 'rgba(25,173,228,0.5)'\n    }\n    return (\n      <div className=\"clinical_foot\" >\n        <div className=\"top\"\n          style={{ height: '10%', }}\n        >\n\n          <div className=\"foot_l\" style={{ backgroundColor: lbgc }} onClick={() => this.setState({ isPetCharacteristics: true })}>\n            Pet Characteristics\n          </div>\n          <div className=\"foot_l\" style={{ backgroundColor: rbgc }} onClick={() => this.setState({ isPetCharacteristics: false })}>\n            History\n          </div>\n        </div>\n        {this.state.isPetCharacteristics ?\n          this._petCharacteristics() :\n          this._history()\n        }\n      </div >\n    )\n  }\n  _petCharacteristics = () => {\n\n    let { furLength, bodyType } = this.state\n    let placeholder = '', placeholder1 = ''\n    switch (`${furLength}`) {\n      case '1': placeholder = 'smooth'; break;\n      case '2': placeholder = 'short'; break;\n      case '3': placeholder = 'medium'; break;\n      case '4': placeholder = 'long'; break;\n      default: break;\n    }\n\n    switch (`${bodyType}`) {\n      case '1': placeholder1 = 'small'; break;\n      case '2': placeholder1 = 'barrel chested'; break;\n      case '3': placeholder1 = 'keel chested'; break;\n      default: break;\n    }\n    return (\n      <div className=\"petChaeacteristics\"\n        style={{ paddingLeft: px(10), paddingRight: px(10), height: '90%' }}\n      >\n        <div className=\"child\" style={{ marginTop: mTop(30), }}>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n            <p style={{ width: '150px' }}>Room Temperature: </p>\n            <Input className='inp'\n              // style={{ border: 'none', outline: 'medium' }}\n              // style={{ width: px(105), height: mTop(33), fontSize: px(18), marginRight: px(6) }}\n\n              value={`${this.state.roomTemperature}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  roomTemperature: str\n                })\n              }}\n            />\n            <span style={{ position: 'absolute', top: \"5%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n            <p style={{ width: '150px' }}>Reference Rectal Temperature: </p>\n            <Input className='inp'\n              // style={{ border: 'none', outline: 'medium' }}\n\n              value={`${this.state.referenceRectalTemperature}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  referenceRectalTemperature: str\n                })\n              }}\n            />\n            <span style={{ position: 'absolute', top: \"10%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\n          </div>\n\n        </div>\n        <div className=\"child\">\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n            <p style={{ width: '150px' }}>Body Condition Score:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n\n              value={this.state.bodyConditionScore}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  bodyConditionScore: str\n                })\n              }}\n            />\n          </div>\n          <div className='furLength' >\n            <p style={{ width: '150px' }}>Fur Length: </p>\n            <Select\n              // showSearch\n              placeholder\n              onChange={this.handleChange}\n              style={{ width: '105px', borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n              value={placeholder}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n\n\n        </div>\n        <div className=\"child\">\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\n            <p style={{ width: '150px' }}>Heart Rate:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n              value={`${this.state.heartRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  heartRate: str\n                })\n              }}\n\n            />\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n            <p style={{ width: '150px' }}>Blood Pressure:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n              value={this.state.bloodPressure}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  bloodPressure: str\n                })\n              }}\n            />\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>mm</span>\n          </div>\n\n        </div>\n        <div className=\"child\" style={{ marginBottom: px(40) }}>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\n            <p style={{ width: '150px' }}>Respiratory Rate:  </p>\n            <Input className='inp'\n              style={{ border: 'none', outline: 'medium' }}\n              value={`${this.state.respiratoryRate}`}\n              bordered={false}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  respiratoryRate: str\n                })\n              }}\n\n            />\n            <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\n          </div>\n          <div className='furLength' id='_bodyType'  >\n            {/* <p style={{ width: '150px' }}>Body Type: </p>\n            <Select\n              // showSearch\n              placeholder\n              onChange={this.handleChange1}\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n              value={placeholder1}\n              dropdownMatchSelectWidth={120}\n\n            >\n              <Option value=\"1\">small</Option>\n              <Option value=\"2\">barrel chested</Option>\n              <Option value=\"3\">keel chested</Option>\n            </Select> */}\n          </div>\n        </div>\n        {/* <div className=\"note\">\n          <p>Notes:</p>\n          <textarea\n            rows=\"2\"\n            cols=\"30\"\n            value={this.state.notes}\n            onChange={(val) => {\n              console.log(val);\n              this.setState({\n                notes: val.target.value\n              })\n            }}\n\n          >\n          </textarea>\n        </div> */}\n\n      </div>\n    )\n  }\n  _history = () => {\n\n    const _del = (key, record) => {\n      console.log('删除', key, record);\n\n\n      /**------------这里还要删除后台的数据------------ */\n      deletePetExamByExamId(key)\n        .then(res => {\n          if (res.flag === true) {\n            console.log('删除成功');\n            const historyData = [...this.state.historyData];\n            console.log(historyData);\n            this.setState({\n              historyData: historyData.filter((item) => item.historyId !== key)\n            });\n          } else {\n            console.log('删除失败');\n          }\n        })\n    }\n    const _edit = (key, record) => {\n      console.log('编辑', key, record);\n      let { heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature, bodyConditionScore, furLength, } = record\n      console.log('转换前：', heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature);\n      let editHeartRate = (heartRate !== null && heartRate !== undefined) ? heartRate : ''\n      let editBloodPressure = (bloodPressure !== null && bloodPressure !== undefined) ? bloodPressure : ''\n      let editRespiratoryRate = (respiratoryRate !== null && respiratoryRate !== undefined) ? respiratoryRate : ''\n      let editRectal = (referenceRectalTemperature !== null && referenceRectalTemperature !== undefined) ? (referenceRectalTemperature * 1.8 + 32).toFixed(1) : ''\n      let editRoomTemperature = (roomTemperature !== null && roomTemperature !== undefined) ? (roomTemperature * 1.8 + 32).toFixed(1) : ''\n      let editBodyConditionScore = (bodyConditionScore !== null && bodyConditionScore !== undefined) ? bodyConditionScore : ''\n      let editFurLength = furLength\n\n      console.log(editRectal,\n        editRoomTemperature,\n        editHeartRate,\n        editBloodPressure,\n        editRespiratoryRate);\n      this.setState({\n        editRectal,\n        editRoomTemperature,\n        editHeartRate,\n        editBloodPressure,\n        editRespiratoryRate,\n        editVisible: true,\n        editId: key,\n        memo: record.note,\n        editBodyConditionScore,\n        editFurLength\n      })\n\n\n\n\n\n\n    }\n    const see = (id, record) => {\n      console.log(id, record);\n      this.setState({\n        tip: 'data is loading',\n        tipSpin: true\n      })\n\n      getClinicalDataByExamId(id)\n        .then(res => {\n          console.log('此条记录的全部数据：', res);\n          this.setState({\n            tip: '',\n            tipSpin: false\n          })\n          if (res.flag) {\n            let datas = res.data.clinicalDataEntityList\n\n\n            if (datas) {\n\n              let echarsData = {\n                Eci: [],\n                wen0: [],\n                wen1: []\n              }\n              // let { echarsData } = this.state\n              let { wen0, wen1, Eci } = echarsData\n              for (let i = 0; i < datas.length; i++) {\n                let { data0, data1 } = datas[i]\n\n\n                Eci.push(i)\n                if (this.state.units === '℃') {\n                  wen0.push(data0)\n                  wen1.push(data1)\n\n                } else {\n                  wen0.push(data0 * 1.8 + 32)\n                  wen1.push(data1 * 1.8 + 32)\n                }\n\n              }\n              let Temp = datas[datas.length - 1].data0 || ''\n              console.log('----------------', Temp);\n              this.setState({\n                echarsData,\n                Temp,\n                showHistoryEchart: true\n              }, () => {\n                const option = this.getOption();\n                this.echartsElement.getEchartsInstance().setOption(option)  // 实时改变\n              })\n            }\n\n          }\n        })\n        .catch(err => {\n          this.setState({\n            tip: '',\n            tipSpin: false\n          })\n          console.log(err);\n        })\n    }\n    const isflog = window.screen.height < 1000 ? true : false\n\n    const columns = [\n      {\n        title: '',\n        dataIndex: 'operation',\n        key: 'operation',\n        width: '16%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n          // console.log('狩猎:', text, record, index);\n          //record:\n          return (\n            <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', padding: `${px(18)}px 0` }} >\n              <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\n                <img src={del} alt=\"\" style={{ width: px(25) }} />\n              </Popconfirm>\n              {\n                (this.state.isEmergency) ? (\n                  <div className=\"assign\"\n                    style={{ width: mTop(60), height: mTop(28), fontSize: px(14) }}\n\n                    onClick={() => {\n                      console.log(text, record, index);\n                      this.setState({\n                        visible: true,\n                        seleceEmergencies: record\n                      })\n                    }}>Assign</div>\n                ) : (\n                  <>\n                    <img src={edit} alt=\"\" style={{ width: px(25) }}\n                      onClick={() => _edit(record.historyId, record)}\n                    />\n\n                    <img src={start} alt=\"\" style={{ width: px(25) }}\n                      onClick={() => see(record.historyId, record)}\n                    />\n\n                    {/* <div\n                      onClick={() => see(record.historyId, record)}\n                      className='see'\n                      style={{ width: px(25), height: px(25) }}\n                    >\n                      <MyIcon type={'icon-mimaxiaoyanjing-copy'} className=\"icon \" style={{ color: '#fff', fontSize: px(13) }} />\n                    </div> */}\n                  </>\n                )\n              }\n\n\n            </div>\n          )\n\n        }\n      },\n      {\n        title: 'Date',\n        dataIndex: 'date',\n        key: 'date',\n        width: '14%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n\n          return (\n            <p style={{ textAlign: 'center' }}>{text}</p>\n          )\n\n        }\n      },\n      {\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time',\n        width: '14%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n\n          return (\n            <p style={{ textAlign: 'center' }}>{text}</p>\n          )\n\n        }\n      },\n      {\n        title: `Temp(${this.state.units})`,\n        // title: `Temp(℉)`,\n        key: 'temp',\n        dataIndex: 'temp',\n        className: `${isflog ? 'operation' : ''}`,\n        width: '14%',\n        render: (text, record, index) => {\n          // console.log(text, record);\n\n          /**\n          * bag：温度数值前的圆圈的背景颜色\n          * tem：展示的温度\n          * endvalue:将从后台得到的数据全部转化成华氏度\n          * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n          * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n          *\n          */\n\n\n          let bag = '', tem = ''\n\n          let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\n          let min = 100.4, max = 102.56\n\n\n\n\n\n\n          if (endValue > max) {\n            bag = '#E1206D'\n          } else if (endValue < min) {\n            bag = '#98DA86'\n          } else {\n            bag = '#58BDE6'\n          }\n\n          if (this.state.units === '℃') {\n            if (text) {\n              tem = `${text}${this.state.units}`\n              if (text > 55) {\n\n                tem = `${((text - 32) / 1.8).toFixed(1)}${this.state.units}`\n              }\n            }\n          } else {\n            if (text) {\n              if (text > 55) {\n                tem = `${text}${this.state.units}`\n              } else {\n                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${this.state.units}`\n              }\n\n            }\n          }\n          return (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\n              <p style={{ margin: 0, padding: 0 }}>{tem}</p>\n            </div>\n          )\n\n        }\n      },\n      {\n        title: `Rectal Temperature`,\n        key: 'referenceRectalTemperature',\n        dataIndex: 'referenceRectalTemperature',\n        width: '15%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n          // console.log('肛温的值：', text);\n          let num = text\n          if (text !== null) {\n            num = (text * 1.8 + 32).toFixed(1)\n          }\n\n          return (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n              {text !== null && <p style={{ margin: 0, padding: 0 }}>{num} <span>{'℉'}</span></p>}\n\n            </div>\n          )\n\n        }\n      },\n      {\n        title: 'Placement',\n        dataIndex: 'placement',\n        key: 'placement',\n        align: 'center',\n        width: '15%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n          switch (record.placement) {\n            case 1: return (    //腋温\n              <div>\n                <img src={palcement_ye} alt=\"\" />\n              </div>\n            )\n            case 3: return (     //肛温\n              <div>\n                <img src={placement_gang} alt=\"\" />\n              </div>\n            )\n            case 2: return (     //肛温\n              <div>\n                <img src={placement_gang} alt=\"\" />\n              </div>\n            )\n            case 4: return (    //耳温\n              <div>\n                <img src={placement_er} alt=\"\" />\n              </div>\n            )\n            default: return null;\n          }\n\n        }\n      },\n      {\n        title: 'Note',\n        dataIndex: 'note',\n        key: 'note',\n        width: '12%',\n        className: `${isflog ? 'operation' : ''}`,\n        render: (text, record, index) => {\n\n          return (\n            <p style={{ width: '70px' }}>{text}</p>\n          )\n\n        }\n      },\n    ];\n\n\n\n    let hisHe = mTop(200)\n    try {\n      let historyElement = document.querySelectorAll('#clinicalMeasure11 .historyTable')\n      hisHe = historyElement[0].clientHeight - mTop(100)\n    } catch (error) {\n\n    }\n\n\n\n    return (\n      <div className='historyTable' style={{ height: '90%' }}>\n        <Table\n          columns={columns}\n          loading={this.state.loading}\n          dataSource={this.state.historyData}\n          rowKey={columns => columns.historyId}\n          // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\n          pagination={false}\n          scroll={{\n            y: hisHe\n          }}\n        />\n      </div>\n\n    )\n  }\n\n\n  _status = () => {\n    let { closeColor, closebgc, minbgc, units, isMeasure, Temp, measuerStatus, isconnected, showHistoryEchart } = this.state\n    let text = '', unit = '', temColor = ''\n\n    Temp = parseFloat(Temp)\n\n    if (isconnected === false) {\n      if (!showHistoryEchart) {\n        Temp = ''\n        text = 'disconnected'\n        temColor = '#3B3A3A'\n      } else {\n        text = 'disconnected'\n        temColor = '#3B3A3A'\n      }\n\n    } else {\n      text = 'connected'\n      temColor = '#3B3A3A'\n      if (Temp > 15) {\n        unit = units\n        if (Temp > 39) {\n          text = 'High'\n          temColor = '#E1206D'\n        } else if (Temp < 31) {\n          text = 'Low'\n          temColor = '#47C2ED'\n        } else {\n          text = 'Normal'\n          temColor = '#78D35D'\n        }\n      }\n    }\n\n\n\n    let temp = ''\n\n    if (`${Temp}` !== 'NaN' && Temp !== '') {\n      temp = units === '℉' ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1)\n    }\n    let lowFlog = false\n    if (unit === '℃') {\n      if (temp < 24.8) {\n        lowFlog = true\n      }\n    } else {\n      if (temp < 76.6) {\n        lowFlog = true\n      }\n    }\n\n\n\n\n\n    return (\n      <div className='Tem' style={{ color: temColor, right: px(30), bottom: mTop(120) }}>\n\n        {(!isMeasure) ? (\n          showHistoryEchart ? <>\n            <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{units}</sup></span><br />\n            {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\n\n            <span style={{ fontSize: px(22), color: '#8a8a8a' }}>{`History`}</span>\n          </> :\n\n            <>\n              <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\n              <span style={{ fontSize: px(22) }}>{text}</span>\n            </>\n        ) : (\n          lowFlog ? (\n            <>\n              <span style={{ fontSize: px(36) }}>{'Low'}</span><br />\n\n            </>\n          ) : (\n            <>\n              <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\n\n            </>\n          )\n\n        )}\n\n\n      </div>\n\n    )\n  }\n\n  _modal = () => {\n    let that = this\n\n    function save() {\n\n\n      switch (storage.identity) {\n        case '1':\n          console.log('我是vetspire查找');\n\n          break;\n\n        case '2':\n          console.log('我是ezyVet查找');\n          let params = {\n            animalId: that.state.emerPatientID,\n            organizationId: 4\n          }\n          let paramsArray = [];\n          Object.keys(params).forEach(key =>\n            paramsArray.push(key + \"=\" + params[key])\n          );\n          let url = 'http://ec2-3-214-224-72.compute-1.amazonaws.com:8080/mellaserver/petall/getPetInfoByAnimalId'\n          // 判断是否地址拼接的有没有 ？,当没有的时候，使用 ？拼接第一个参数，如果有参数拼接，则用&符号拼接后边的参数\n          if (url.search(/\\?/) === -1) {\n            url = url + \"?\" + paramsArray.join(\"&\");\n          } else {\n            url = url + \"&\" + paramsArray.join(\"&\");\n          }\n          console.log('ezyVet集成查找宠物入参-请求地址', params, url);\n          fetch(url, {\n            method: \"GET\",\n            headers: {\n              'authorization': `Bearer ${storage.ezyVetToken}`,\n            }\n          }).then((response) => response.json())\n            .then((res) => {\n              console.log('res', res);\n              this.setState({\n                spin: false\n              })\n              if (res.flag === true) {\n                //有宠物，进入1\n                let petArr = res.data\n                if (petArr.length > 1) {\n                  petArr.sort(function (a, b) {\n                    return a.createTime > b.createTime ? 1 : -1;\n                  })\n                }\n\n\n                console.log(petArr);\n\n                let { petId, petName, lastName, firstName, breedName, isMix, birthday, weight, url } = petArr\n                assign(petId)\n\n              } else {\n                //没有宠物\n                message.error('There are no pets under this patientID')\n              }\n            })\n            .catch((err) => {\n              console.log(err);\n              message.error('There are no pets under this patientID')\n            });\n\n          break;\n\n        case '3':\n          console.log('我是一般医生查找');\n          let datas = {\n            patientId: that.state.emerPatientID,\n            doctorId: storage.userId,\n          }\n          if (storage.lastWorkplaceId) {\n            datas.workplaceId = storage.lastWorkplaceId\n          }\n          console.log('入参：', datas);\n\n          getPetInfoByPatientIdAndPetId(datas)\n            .then(res => {\n\n              if (res.flag === true) {\n                //有宠物，进入1\n                let petArr = res.data\n                if (petArr.length > 1) {\n                  petArr.sort(function (a, b) {\n                    return a.createTime > b.createTime ? 1 : -1;\n                  })\n                }\n\n                console.log(petArr);\n\n                let { petId, } = petArr[0]\n                assign(petId)\n              } else {\n\n                message.error('There are no pets under this patientID')\n              }\n            })\n            .catch(err => {\n              message.error('There are no pets under this patientID')\n              console.log(err);\n            })\n          break;\n\n        default:\n          break;\n      }\n\n      const assign = (petId) => {\n        let parmes = {\n          petId,\n          clinicalDatagroupId: that.state.seleceEmergencies.clinicalDatagroupId\n        }\n\n        addAndSavePetExam(that.state.seleceEmergencies.historyId, parmes)\n          .then(res => {\n            console.log('----------', res);\n            if (res.flag === true) {\n              console.log('分配成功');\n              message.success('Assigned successfully')\n              that._getEmergencyHistory()\n              that.setState({\n                visible: false,\n                emerPatientID: ''\n              })\n            } else {\n              message.success('Assignment failed')\n            }\n\n          })\n          .catch(err => {\n            console.log(err);\n            message.success('Assignment failed')\n          })\n      }\n\n\n\n\n    }\n\n\n    let { disabled, bounds, visible } = this.state\n    return (\n      <Modal\n        title={\n          <div\n            style={{\n              width: '100%',\n              cursor: 'move',\n              height: '20px',\n              textAlign: 'center'\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                this.setState({\n                  disabled: false,\n                });\n              }\n            }}\n            onMouseOut={() => {\n              this.setState({\n                disabled: true,\n              });\n            }}\n\n            onFocus={() => { }}\n            onBlur={() => { }}\n          // end\n          >\n            Distribute the history of emergencies\n          </div>\n        }\n        visible={visible}\n        // visible={true}\n        onOk={this.handleOk}\n        onCancel={this.handleCancel}\n\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div ref={this.draggleRef}>{modal}</div>\n          </Draggable>\n        )}\n        footer={\n          [] // 设置footer为空，去掉 取消 确定默认按钮\n        }\n        destroyOnClose={true}\n      >\n        <div id=\"selectEmergenciesModal\">\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '80px' }}>Patient ID</p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              value={this.state.emerPatientID}\n              bordered={false}\n              onChange={(item) => {\n                this.setState({\n                  emerPatientID: item.target.value.replace(/\\s/g, \"\")\n                })\n              }}\n              onKeyDown={(e) => {\n                // console.log('------', e);\n                if (e.keyCode === 13) {\n                  save()\n                }\n              }}\n            />\n          </div>\n          <div className=\"btn\" onClick={save}>Save</div>\n        </div>\n\n      </Modal>\n\n    )\n\n  }\n\n  _editModal = () => {\n    let that = this\n\n    function save() {\n      let { editBodyConditionScore, editFurLength, editHeartRate, editBloodPressure, editRespiratoryRate } = that.state\n      let datas = {\n        memo: that.state.memo,\n        bodyConditionScore: parseInt(editBodyConditionScore),\n        furLength: parseInt(editFurLength),\n        heartRate: editHeartRate,\n        bloodPressure: editBloodPressure,\n        respiratoryRate: editRespiratoryRate\n        // roomTemperature: that.state.editRoomTemperature,\n        // referenceRectalTemperature: that.state.editRectal\n      }\n      if (that.state.editRoomTemperature) {\n        datas.roomTemperature = ((parseFloat(that.state.editRoomTemperature) - 32) / 1.8).toFixed(2)\n      }\n      if (that.state.editRectal) {\n        datas.referenceRectalTemperature = ((parseFloat(that.state.editRectal) - 32) / 1.8).toFixed(2)\n      }\n\n      console.log('入参：', datas, that.state.editId);\n      that.setState({\n        editVisible: false,\n        tip: 'Data is being modified',\n        tipSpin: true,\n\n      })\n      updatePetExam(that.state.editId, datas)\n        .then(res => {\n          console.log(res);\n          that.setState({\n\n            tip: '',\n            tipSpin: false\n          })\n          message.success('Data modified successfully')\n\n          that._getHistory11(that.state.selectPet.petId)\n        })\n        .catch(err => {\n          that.setState({\n            spin: false,\n            tip: '',\n            tipSpin: false\n          })\n          message.success(' Data modification failed')\n\n          console.log(err);\n        })\n\n    }\n\n\n    let { disabled, bounds, editVisible, editFurLength } = this.state\n    let furLength = ''\n    if (editFurLength !== null && editFurLength !== undefined) {\n      switch (`${editFurLength}`) {\n        case '1': furLength = 'smooth'; break;\n        case '2': furLength = 'short'; break;\n        case '3': furLength = 'medium'; break;\n        case '4': furLength = 'long'; break;\n\n        default:\n          break;\n      }\n    }\n\n    return (\n      <Modal\n        title={\n          <div\n            style={{\n              width: '100%',\n              cursor: 'move',\n              height: '20px',\n              textAlign: 'center'\n            }}\n            onMouseOver={() => {\n              if (disabled) {\n                this.setState({\n                  disabled: false,\n                });\n              }\n            }}\n            onMouseOut={() => {\n              this.setState({\n                disabled: true,\n              });\n            }}\n\n            onFocus={() => { }}\n            onBlur={() => { }}\n          // end\n          >\n            Modification history information\n          </div>\n        }\n        visible={editVisible}\n        // visible={true}\n        onCancel={() => { that.setState({ editVisible: false, }); }}\n        modalRender={(modal) => (\n          <Draggable\n            disabled={disabled}\n            bounds={bounds}\n            onStart={(event, uiData) => this.onStart(event, uiData)}\n          >\n            <div ref={this.draggleRef}>{modal}</div>\n          </Draggable>\n        )}\n        footer={\n          [] // 设置footer为空，去掉 取消 确定默认按钮\n        }\n        destroyOnClose={true}\n      >\n        <div id=\"selectEmergenciesModal\">\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Room Temperature </p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editRoomTemperature}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  editRoomTemperature: str\n                })\n              }}\n\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Rectal Temperature</p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editRectal}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                this.setState({\n                  editRectal: str\n                })\n              }}\n\n            />\n            <span>℉</span>\n          </div>\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Body Condition Score</p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editBodyConditionScore}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, '')\n                this.setState({\n                  editBodyConditionScore: str\n                })\n              }}\n\n            />\n          </div>\n\n          <div className='bodyType11' >\n            <p style={{ width: '140px' }}>Fur Length: </p>\n            <Select\n              placeholder\n              onChange={(index) => {\n                console.log(index);\n                this.setState({\n                  editFurLength: index\n                })\n              }}\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n              value={furLength}\n            >\n              <Option value=\"1\">smooth</Option>\n              <Option value=\"2\">short</Option>\n              <Option value=\"3\">medium</Option>\n              <Option value=\"4\">long</Option>\n            </Select>\n          </div>\n\n\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Heart Rate: </p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editHeartRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, '')\n\n                this.setState({\n                  editHeartRate: str\n                })\n              }}\n\n            />\n            <span>bpm</span>\n          </div>\n\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Blood Pressure </p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editBloodPressure}\n              onChange={(item) => {\n                this.setState({\n                  editBloodPressure: item.target.value\n                })\n              }}\n\n            />\n            <span>mm</span>\n          </div>\n\n\n\n\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '140px' }}>Respiratory Rate: </p>\n            <Input\n              style={{ border: 'none', outline: 'medium' }}\n              bordered={false}\n              value={this.state.editRespiratoryRate}\n              onChange={(item) => {\n                let str = item.target.value.replace(/[^\\d]/g, '')\n\n                this.setState({\n                  editRespiratoryRate: str\n                })\n              }}\n\n            />\n            <span>bpm</span>\n          </div>\n\n\n\n\n\n\n\n          {/* <div className='bodyType11' >\n            <p style={{ width: '140px' }}>Body Type: </p>\n            <Select\n              // showSearch\n              placeholder\n              onChange={this.handleChange1}\n              style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n              // value={placeholder1}\n              dropdownMatchSelectWidth={120}\n\n            >\n              <Option value=\"1\">small</Option>\n              <Option value=\"2\">barrel chested</Option>\n              <Option value=\"3\">keel chested</Option>\n            </Select>\n          </div> */}\n\n\n\n\n\n\n\n\n\n\n\n\n          <div className=\"selectEmergenciesModal\">\n            <p style={{ width: '80px' }}>Notes</p>\n            <textarea\n              rows=\"2\"\n              cols=\"40\"\n              style={{ textIndent: '10px' }}\n              value={that.state.memo}\n              onChange={(val) => {\n                that.setState({\n                  memo: val.target.value\n                })\n              }}\n\n            >\n            </textarea>\n          </div>\n\n          <div className=\"btn\" onClick={save}>Save</div>\n        </div>\n\n      </Modal>\n\n\n\n    )\n\n  }\n\n  render() {\n    console.log('-----', this.state.Temp);\n    return (\n      <div id=\"clinicalMeasure11\">\n        <div style={{ height: '60%' }}>\n\n          <div className=\"heard\">\n            <Heard\n              onSearch={(data) => {\n                console.log(data);\n                this.setState({\n                  patientId: data.patientId\n                }, () => {\n                  this._getPetInfo()\n                })\n              }}\n              menu9Click={() => {\n                storage.measurepatientId = this.state.patientId;\n              }}\n              menu8Click={() => {\n                switch (storage.identity) {   //1是vetspire   2是ezyvet   3是医生\n                  case '1': this.props.history.push('/VetSpireSelectExam')\n\n                    break;\n                  case '2': this.props.history.push({ pathname: '/EzyVetSelectExam', listDate: storage.ezyVetList, defaultCurrent: storage.defaultCurrent })\n\n                    break;\n\n                  case '3': this.props.history.push({ pathname: '/uesr/selectExam', listDate: storage.doctorList, defaultCurrent: storage.defaultCurrent })\n\n                    break;\n                  default:\n                    break;\n                }\n              }}\n\n              onReturn={() => {\n                this.props.history.goBack()\n              }}\n\n\n            />\n          </div>\n\n\n          {/* 宠物信息与折线图部分 */}\n          <div className='clinical_top'\n          // style={{ height: mTop(480) }}\n          >\n            {this._topLeft()}\n            <div className=\"r\" >\n              {!this.state.isconnected && <div className=\"bb1\"\n                style={{ left: px(150) }}\n              >\n                <div className=\"btn78\"\n                  style={{ width: px(220), height: mTop(30), fontSize: px(16) }}\n                  onClick={() => {\n                    console.log('点击了切换按钮');\n\n                    if (resyncDeviceIsClick === true) {\n                      resyncDeviceIsClick = false\n                      console.log('发送给主进程切换按钮');\n                      ipcRenderer.send('qiehuan')\n                      // ipcRenderer.send('getSerialPort')\n                      const time = setTimeout(() => {\n                        resyncDeviceIsClick = true\n                        clearTimeout(time)\n                      }, 2500)\n                    }\n\n\n\n                  }}\n                >Re-sync Base</div>\n              </div>}\n\n\n              <div id='myCharts'\n                style={{ marginTop: mTop(50) }}\n\n              >\n                <ReactECharts\n\n                  option={this.getOption()} theme=\"Imooc\" style={{ height: mTop(430), }}\n                  notMerge={true}\n                  lazyUpdate={true}\n                  // theme={\"theme_name\"}\n                  ref={(e) => { this.echartsElement = e }}\n                />\n              </div>\n\n              {this._status()}\n              {/* {this._mearsurePort()} */}\n              <div className=\"time\"\n                style={{ bottom: mTop(20), left: px(70) }}\n              >\n                {(this.state.isconnected) ? (<p style={{ fontSize: px(25) }}>{`Measurement Timer  ${this.state.countdown} s`}</p>) : null}\n              </div>\n\n            </div>\n          </div>\n        </div>\n\n\n\n        {/* 底部宠物信息 */}\n        {this._foot()}\n        {this._modal()}\n        {this._editModal()}\n\n\n        <Modal\n\n          visible={this.state.err07Visible}\n          // visible={true}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          width={330}\n          closable={false}\n          footer={[\n\n          ]}\n          destroyOnClose={true}\n          wrapClassName=\"vetPrifileModal\"\n        >\n          <div id='vetPrifileModal'>\n            <div className=\"title\">prompt\n            </div>\n\n            <div className='text'>Please re-plug the base device</div>\n\n\n            <div className=\"btn\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginBottom: '5px' }}>\n\n              <button\n                onClick={() => {\n                  this.setState({\n                    err07Visible: false,\n                  })\n                  num07 = 0\n\n                }}\n              >OK</button>\n\n\n            </div>\n          </div>\n\n\n        </Modal>\n\n        {\n          this.state.tipSpin &&\n          // true &&\n          <div className=\"modal\">\n            <div className=\"loadIcon\" style={{ marginBottom: MTop(5) }}>\n              <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\n\n\n            </div>\n            <p>\n              data is loading...\n            </p>\n          </div>\n        }\n        <MyModal\n          visible={this.state.tempHeight}\n          element={\n            <div className=\"tempHeight\">\n              <div className=\"tempHeightImg\">\n                <img src={redjinggao} alt=\"\" style={{ width: px(60), }} />\n              </div>\n              <div className=\"tempText\" style={{ fontSize: px(24), marginBottom: px(60) }}>If the initial temperature reading is too high, the measurement may be inaccurate. Consider letting the thermometer cool down to 85°F and try again</div>\n\n              <div className=\"tempBtn flex\" style={{ height: px(45), fontSize: px(24), marginBottom: px(20) }}\n                onClick={() => { this.setState({ tempHeight: false }) }}\n              >\n                OK\n              </div>\n\n              <div className=\"close\" style={{ top: px(20), right: px(20) }}\n                onClick={() => { this.setState({ tempHeight: false }) }}\n              >\n                <img src={close} alt=\"\" style={{ width: px(30) }} />\n              </div>\n\n\n            </div>\n          }\n        />\n\n\n\n      </div>\n    )\n  }\n\n\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/api/mellaserver/user.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/verifyEmail/index.jsx",["355","356"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/vetProfile/index.jsx",["357","358","359","360","361","362","363","364"],{"ruleId":"365","severity":1,"message":"366","line":2,"column":10,"nodeType":"367","messageId":"368","endLine":2,"endColumn":15},{"ruleId":"365","severity":1,"message":"369","line":15,"column":10,"nodeType":"367","messageId":"368","endLine":15,"endColumn":12},{"ruleId":"365","severity":1,"message":"370","line":28,"column":8,"nodeType":"367","messageId":"368","endLine":28,"endColumn":14},{"ruleId":"365","severity":1,"message":"371","line":31,"column":18,"nodeType":"367","messageId":"368","endLine":31,"endColumn":24},{"ruleId":"372","severity":1,"message":"373","line":76,"column":6,"nodeType":"374","endLine":76,"endColumn":21,"suggestions":"375"},{"ruleId":"376","severity":1,"message":"377","line":120,"column":17,"nodeType":"378","endLine":120,"endColumn":74},{"ruleId":"376","severity":1,"message":"377","line":138,"column":21,"nodeType":"378","endLine":138,"endColumn":69},{"ruleId":"376","severity":1,"message":"377","line":158,"column":25,"nodeType":"378","endLine":165,"endColumn":27},{"ruleId":"365","severity":1,"message":"379","line":6,"column":5,"nodeType":"367","messageId":"368","endLine":6,"endColumn":10},{"ruleId":"365","severity":1,"message":"380","line":12,"column":13,"nodeType":"367","messageId":"368","endLine":12,"endColumn":19},{"ruleId":"381","severity":1,"message":"382","line":15,"column":20,"nodeType":"383","messageId":"384","endLine":15,"endColumn":22},{"ruleId":"381","severity":1,"message":"382","line":59,"column":20,"nodeType":"383","messageId":"384","endLine":59,"endColumn":22},{"ruleId":"365","severity":1,"message":"385","line":23,"column":10,"nodeType":"367","messageId":"368","endLine":23,"endColumn":28},{"ruleId":"365","severity":1,"message":"369","line":26,"column":10,"nodeType":"367","messageId":"368","endLine":26,"endColumn":12},{"ruleId":"365","severity":1,"message":"386","line":29,"column":26,"nodeType":"367","messageId":"368","endLine":29,"endColumn":32},{"ruleId":"365","severity":1,"message":"387","line":29,"column":34,"nodeType":"367","messageId":"368","endLine":29,"endColumn":39},{"ruleId":"372","severity":1,"message":"388","line":116,"column":6,"nodeType":"374","endLine":116,"endColumn":8,"suggestions":"389"},{"ruleId":"376","severity":1,"message":"377","line":168,"column":19,"nodeType":"378","endLine":168,"endColumn":47},{"ruleId":"365","severity":1,"message":"390","line":2,"column":10,"nodeType":"367","messageId":"368","endLine":2,"endColumn":20},{"ruleId":"365","severity":1,"message":"391","line":4,"column":5,"nodeType":"367","messageId":"368","endLine":4,"endColumn":9},{"ruleId":"365","severity":1,"message":"392","line":5,"column":5,"nodeType":"367","messageId":"368","endLine":5,"endColumn":12},{"ruleId":"365","severity":1,"message":"393","line":6,"column":5,"nodeType":"367","messageId":"368","endLine":6,"endColumn":11},{"ruleId":"365","severity":1,"message":"394","line":7,"column":5,"nodeType":"367","messageId":"368","endLine":7,"endColumn":10},{"ruleId":"365","severity":1,"message":"395","line":15,"column":10,"nodeType":"367","messageId":"368","endLine":15,"endColumn":14},{"ruleId":"365","severity":1,"message":"396","line":15,"column":20,"nodeType":"367","messageId":"368","endLine":15,"endColumn":24},{"ruleId":"365","severity":1,"message":"397","line":16,"column":8,"nodeType":"367","messageId":"368","endLine":16,"endColumn":21},{"ruleId":"381","severity":1,"message":"382","line":86,"column":32,"nodeType":"383","messageId":"384","endLine":86,"endColumn":34},{"ruleId":"372","severity":1,"message":"398","line":104,"column":8,"nodeType":"374","endLine":104,"endColumn":10,"suggestions":"399"},{"ruleId":"400","severity":1,"message":"401","line":114,"column":39,"nodeType":"402","messageId":"403","endLine":114,"endColumn":41},{"ruleId":"381","severity":1,"message":"404","line":124,"column":39,"nodeType":"383","messageId":"384","endLine":124,"endColumn":41},{"ruleId":"372","severity":1,"message":"405","line":152,"column":8,"nodeType":"374","endLine":152,"endColumn":20,"suggestions":"406"},{"ruleId":"407","severity":1,"message":"408","line":202,"column":21,"nodeType":"378","endLine":207,"endColumn":22},{"ruleId":"365","severity":1,"message":"393","line":2,"column":10,"nodeType":"367","messageId":"368","endLine":2,"endColumn":16},{"ruleId":"365","severity":1,"message":"409","line":2,"column":36,"nodeType":"367","messageId":"368","endLine":2,"endColumn":44},{"ruleId":"365","severity":1,"message":"410","line":3,"column":10,"nodeType":"367","messageId":"368","endLine":3,"endColumn":22},{"ruleId":"365","severity":1,"message":"371","line":24,"column":18,"nodeType":"367","messageId":"368","endLine":24,"endColumn":24},{"ruleId":"365","severity":1,"message":"411","line":28,"column":10,"nodeType":"367","messageId":"368","endLine":28,"endColumn":17},{"ruleId":"365","severity":1,"message":"412","line":28,"column":19,"nodeType":"367","messageId":"368","endLine":28,"endColumn":29},{"ruleId":"376","severity":1,"message":"377","line":63,"column":16,"nodeType":"378","endLine":63,"endColumn":41},{"ruleId":"376","severity":1,"message":"377","line":65,"column":16,"nodeType":"378","endLine":65,"endColumn":41},{"ruleId":"376","severity":1,"message":"377","line":67,"column":16,"nodeType":"378","endLine":67,"endColumn":41},{"ruleId":"376","severity":1,"message":"377","line":69,"column":16,"nodeType":"378","endLine":69,"endColumn":41},{"ruleId":"372","severity":1,"message":"413","line":75,"column":3,"nodeType":"367","endLine":75,"endColumn":12,"suggestions":"414"},{"ruleId":"365","severity":1,"message":"415","line":1,"column":38,"nodeType":"367","messageId":"368","endLine":1,"endColumn":44},{"ruleId":"365","severity":1,"message":"391","line":5,"column":3,"nodeType":"367","messageId":"368","endLine":5,"endColumn":7},{"ruleId":"365","severity":1,"message":"416","line":6,"column":3,"nodeType":"367","messageId":"368","endLine":6,"endColumn":13},{"ruleId":"365","severity":1,"message":"409","line":13,"column":3,"nodeType":"367","messageId":"368","endLine":13,"endColumn":11},{"ruleId":"365","severity":1,"message":"417","line":39,"column":8,"nodeType":"367","messageId":"368","endLine":39,"endColumn":18},{"ruleId":"365","severity":1,"message":"418","line":42,"column":8,"nodeType":"367","messageId":"368","endLine":42,"endColumn":15},{"ruleId":"365","severity":1,"message":"371","line":45,"column":18,"nodeType":"367","messageId":"368","endLine":45,"endColumn":24},{"ruleId":"365","severity":1,"message":"419","line":55,"column":28,"nodeType":"367","messageId":"368","endLine":55,"endColumn":37},{"ruleId":"365","severity":1,"message":"420","line":56,"column":58,"nodeType":"367","messageId":"368","endLine":56,"endColumn":76},{"ruleId":"365","severity":1,"message":"421","line":60,"column":10,"nodeType":"367","messageId":"368","endLine":60,"endColumn":17},{"ruleId":"365","severity":1,"message":"422","line":60,"column":19,"nodeType":"367","messageId":"368","endLine":60,"endColumn":29},{"ruleId":"365","severity":1,"message":"423","line":68,"column":10,"nodeType":"367","messageId":"368","endLine":68,"endColumn":19},{"ruleId":"365","severity":1,"message":"424","line":69,"column":10,"nodeType":"367","messageId":"368","endLine":69,"endColumn":25},{"ruleId":"365","severity":1,"message":"425","line":69,"column":27,"nodeType":"367","messageId":"368","endLine":69,"endColumn":45},{"ruleId":"376","severity":1,"message":"377","line":160,"column":11,"nodeType":"378","endLine":160,"endColumn":29},{"ruleId":"376","severity":1,"message":"377","line":162,"column":11,"nodeType":"378","endLine":162,"endColumn":32},{"ruleId":"376","severity":1,"message":"377","line":166,"column":11,"nodeType":"378","endLine":166,"endColumn":29},{"ruleId":"376","severity":1,"message":"377","line":168,"column":11,"nodeType":"378","endLine":168,"endColumn":32},{"ruleId":"376","severity":1,"message":"377","line":172,"column":11,"nodeType":"378","endLine":172,"endColumn":30},{"ruleId":"376","severity":1,"message":"377","line":174,"column":11,"nodeType":"378","endLine":174,"endColumn":33},{"ruleId":"376","severity":1,"message":"377","line":178,"column":11,"nodeType":"378","endLine":178,"endColumn":30},{"ruleId":"376","severity":1,"message":"377","line":180,"column":11,"nodeType":"378","endLine":180,"endColumn":33},{"ruleId":"376","severity":1,"message":"377","line":184,"column":11,"nodeType":"378","endLine":184,"endColumn":29},{"ruleId":"376","severity":1,"message":"377","line":186,"column":11,"nodeType":"378","endLine":186,"endColumn":32},{"ruleId":"376","severity":1,"message":"377","line":190,"column":11,"nodeType":"378","endLine":190,"endColumn":29},{"ruleId":"376","severity":1,"message":"377","line":192,"column":11,"nodeType":"378","endLine":192,"endColumn":32},{"ruleId":"376","severity":1,"message":"377","line":196,"column":11,"nodeType":"378","endLine":196,"endColumn":29},{"ruleId":"376","severity":1,"message":"377","line":198,"column":11,"nodeType":"378","endLine":198,"endColumn":32},{"ruleId":"365","severity":1,"message":"426","line":245,"column":9,"nodeType":"367","messageId":"368","endLine":245,"endColumn":21},{"ruleId":"372","severity":1,"message":"427","line":279,"column":6,"nodeType":"374","endLine":279,"endColumn":18,"suggestions":"428"},{"ruleId":"372","severity":1,"message":"429","line":301,"column":6,"nodeType":"374","endLine":301,"endColumn":25,"suggestions":"430"},{"ruleId":"372","severity":1,"message":"431","line":332,"column":6,"nodeType":"374","endLine":332,"endColumn":13,"suggestions":"432"},{"ruleId":"372","severity":1,"message":"433","line":359,"column":6,"nodeType":"374","endLine":359,"endColumn":44,"suggestions":"434"},{"ruleId":"372","severity":1,"message":"435","line":370,"column":6,"nodeType":"374","endLine":370,"endColumn":17,"suggestions":"436"},{"ruleId":"365","severity":1,"message":"437","line":9,"column":10,"nodeType":"367","messageId":"368","endLine":9,"endColumn":13},{"ruleId":"365","severity":1,"message":"438","line":9,"column":25,"nodeType":"367","messageId":"368","endLine":9,"endColumn":28},{"ruleId":"365","severity":1,"message":"439","line":9,"column":30,"nodeType":"367","messageId":"368","endLine":9,"endColumn":35},{"ruleId":"365","severity":1,"message":"440","line":9,"column":15,"nodeType":"367","messageId":"368","endLine":9,"endColumn":23},{"ruleId":"365","severity":1,"message":"438","line":9,"column":25,"nodeType":"367","messageId":"368","endLine":9,"endColumn":28},{"ruleId":"365","severity":1,"message":"371","line":23,"column":9,"nodeType":"367","messageId":"368","endLine":23,"endColumn":15},{"ruleId":"365","severity":1,"message":"386","line":23,"column":26,"nodeType":"367","messageId":"368","endLine":23,"endColumn":32},{"ruleId":"365","severity":1,"message":"387","line":23,"column":34,"nodeType":"367","messageId":"368","endLine":23,"endColumn":39},{"ruleId":"372","severity":1,"message":"441","line":230,"column":6,"nodeType":"374","endLine":230,"endColumn":22,"suggestions":"442"},{"ruleId":"372","severity":1,"message":"443","line":239,"column":6,"nodeType":"374","endLine":239,"endColumn":21,"suggestions":"444"},{"ruleId":"365","severity":1,"message":"440","line":9,"column":15,"nodeType":"367","messageId":"368","endLine":9,"endColumn":23},{"ruleId":"365","severity":1,"message":"438","line":9,"column":25,"nodeType":"367","messageId":"368","endLine":9,"endColumn":28},{"ruleId":"365","severity":1,"message":"439","line":9,"column":30,"nodeType":"367","messageId":"368","endLine":9,"endColumn":35},{"ruleId":"365","severity":1,"message":"445","line":35,"column":9,"nodeType":"367","messageId":"368","endLine":35,"endColumn":16},{"ruleId":"365","severity":1,"message":"446","line":36,"column":7,"nodeType":"367","messageId":"368","endLine":36,"endColumn":13},{"ruleId":"365","severity":1,"message":"447","line":159,"column":9,"nodeType":"367","messageId":"368","endLine":159,"endColumn":16},{"ruleId":"365","severity":1,"message":"448","line":169,"column":15,"nodeType":"367","messageId":"368","endLine":169,"endColumn":21},{"ruleId":"365","severity":1,"message":"449","line":622,"column":15,"nodeType":"367","messageId":"368","endLine":622,"endColumn":24},{"ruleId":"365","severity":1,"message":"450","line":899,"column":15,"nodeType":"367","messageId":"368","endLine":899,"endColumn":21},{"ruleId":"365","severity":1,"message":"451","line":903,"column":15,"nodeType":"367","messageId":"368","endLine":903,"endColumn":22},{"ruleId":"365","severity":1,"message":"452","line":987,"column":28,"nodeType":"367","messageId":"368","endLine":987,"endColumn":31},{"ruleId":"365","severity":1,"message":"453","line":987,"column":33,"nodeType":"367","messageId":"368","endLine":987,"endColumn":35},{"ruleId":"365","severity":1,"message":"454","line":987,"column":37,"nodeType":"367","messageId":"368","endLine":987,"endColumn":45},{"ruleId":"365","severity":1,"message":"455","line":987,"column":53,"nodeType":"367","messageId":"368","endLine":987,"endColumn":63},{"ruleId":"365","severity":1,"message":"456","line":987,"column":65,"nodeType":"367","messageId":"368","endLine":987,"endColumn":73},{"ruleId":"365","severity":1,"message":"457","line":987,"column":75,"nodeType":"367","messageId":"368","endLine":987,"endColumn":81},{"ruleId":"365","severity":1,"message":"458","line":987,"column":111,"nodeType":"367","messageId":"368","endLine":987,"endColumn":117},{"ruleId":"365","severity":1,"message":"459","line":987,"column":119,"nodeType":"367","messageId":"368","endLine":987,"endColumn":129},{"ruleId":"407","severity":1,"message":"460","line":999,"column":11,"nodeType":"378","endLine":1015,"endColumn":12},{"ruleId":"461","severity":1,"message":"462","line":1098,"column":19,"nodeType":"463","messageId":"464","endLine":1117,"endColumn":20},{"ruleId":"376","severity":1,"message":"377","line":1227,"column":17,"nodeType":"378","endLine":1227,"endColumn":52},{"ruleId":"376","severity":1,"message":"377","line":1228,"column":17,"nodeType":"378","endLine":1228,"endColumn":51},{"ruleId":"365","severity":1,"message":"445","line":33,"column":9,"nodeType":"367","messageId":"368","endLine":33,"endColumn":16},{"ruleId":"365","severity":1,"message":"446","line":34,"column":7,"nodeType":"367","messageId":"368","endLine":34,"endColumn":13},{"ruleId":"365","severity":1,"message":"447","line":157,"column":9,"nodeType":"367","messageId":"368","endLine":157,"endColumn":16},{"ruleId":"365","severity":1,"message":"448","line":167,"column":15,"nodeType":"367","messageId":"368","endLine":167,"endColumn":21},{"ruleId":"365","severity":1,"message":"449","line":588,"column":15,"nodeType":"367","messageId":"368","endLine":588,"endColumn":24},{"ruleId":"465","severity":2,"message":"466","line":752,"column":5,"nodeType":"367","messageId":"467","endLine":752,"endColumn":21},{"ruleId":"365","severity":1,"message":"450","line":863,"column":15,"nodeType":"367","messageId":"368","endLine":863,"endColumn":21},{"ruleId":"365","severity":1,"message":"451","line":867,"column":15,"nodeType":"367","messageId":"368","endLine":867,"endColumn":22},{"ruleId":"365","severity":1,"message":"452","line":951,"column":28,"nodeType":"367","messageId":"368","endLine":951,"endColumn":31},{"ruleId":"365","severity":1,"message":"453","line":951,"column":33,"nodeType":"367","messageId":"368","endLine":951,"endColumn":35},{"ruleId":"365","severity":1,"message":"454","line":951,"column":37,"nodeType":"367","messageId":"368","endLine":951,"endColumn":45},{"ruleId":"365","severity":1,"message":"455","line":951,"column":53,"nodeType":"367","messageId":"368","endLine":951,"endColumn":63},{"ruleId":"365","severity":1,"message":"456","line":951,"column":65,"nodeType":"367","messageId":"368","endLine":951,"endColumn":73},{"ruleId":"365","severity":1,"message":"457","line":951,"column":75,"nodeType":"367","messageId":"368","endLine":951,"endColumn":81},{"ruleId":"365","severity":1,"message":"458","line":951,"column":111,"nodeType":"367","messageId":"368","endLine":951,"endColumn":117},{"ruleId":"365","severity":1,"message":"459","line":951,"column":119,"nodeType":"367","messageId":"368","endLine":951,"endColumn":129},{"ruleId":"407","severity":1,"message":"460","line":963,"column":11,"nodeType":"378","endLine":979,"endColumn":12},{"ruleId":"461","severity":1,"message":"462","line":1061,"column":19,"nodeType":"463","messageId":"464","endLine":1080,"endColumn":20},{"ruleId":"376","severity":1,"message":"377","line":1174,"column":17,"nodeType":"378","endLine":1174,"endColumn":52},{"ruleId":"376","severity":1,"message":"377","line":1175,"column":17,"nodeType":"378","endLine":1175,"endColumn":51},{"ruleId":"365","severity":1,"message":"468","line":5,"column":3,"nodeType":"367","messageId":"368","endLine":5,"endColumn":8},{"ruleId":"365","severity":1,"message":"469","line":7,"column":3,"nodeType":"367","messageId":"368","endLine":7,"endColumn":6},{"ruleId":"365","severity":1,"message":"470","line":53,"column":16,"nodeType":"367","messageId":"368","endLine":53,"endColumn":20},{"ruleId":"365","severity":1,"message":"471","line":58,"column":5,"nodeType":"367","messageId":"368","endLine":58,"endColumn":10},{"ruleId":"376","severity":1,"message":"377","line":112,"column":18,"nodeType":"378","endLine":112,"endColumn":47},{"ruleId":"376","severity":1,"message":"377","line":114,"column":18,"nodeType":"378","endLine":114,"endColumn":47},{"ruleId":"376","severity":1,"message":"377","line":116,"column":18,"nodeType":"378","endLine":116,"endColumn":47},{"ruleId":"376","severity":1,"message":"377","line":118,"column":18,"nodeType":"378","endLine":118,"endColumn":47},{"ruleId":"376","severity":1,"message":"377","line":141,"column":11,"nodeType":"378","endLine":149,"endColumn":13},{"ruleId":"376","severity":1,"message":"377","line":154,"column":13,"nodeType":"378","endLine":154,"endColumn":63},{"ruleId":"381","severity":1,"message":"404","line":219,"column":28,"nodeType":"383","messageId":"384","endLine":219,"endColumn":30},{"ruleId":"372","severity":1,"message":"472","line":457,"column":6,"nodeType":"374","endLine":457,"endColumn":18,"suggestions":"473"},{"ruleId":"372","severity":1,"message":"474","line":465,"column":6,"nodeType":"374","endLine":465,"endColumn":8,"suggestions":"475"},{"ruleId":"365","severity":1,"message":"440","line":9,"column":15,"nodeType":"367","messageId":"368","endLine":9,"endColumn":23},{"ruleId":"365","severity":1,"message":"438","line":9,"column":25,"nodeType":"367","messageId":"368","endLine":9,"endColumn":28},{"ruleId":"365","severity":1,"message":"439","line":9,"column":30,"nodeType":"367","messageId":"368","endLine":9,"endColumn":35},{"ruleId":"365","severity":1,"message":"394","line":6,"column":3,"nodeType":"367","messageId":"368","endLine":6,"endColumn":8},{"ruleId":"365","severity":1,"message":"476","line":7,"column":3,"nodeType":"367","messageId":"368","endLine":7,"endColumn":10},{"ruleId":"365","severity":1,"message":"477","line":8,"column":3,"nodeType":"367","messageId":"368","endLine":8,"endColumn":7},{"ruleId":"365","severity":1,"message":"395","line":10,"column":10,"nodeType":"367","messageId":"368","endLine":10,"endColumn":14},{"ruleId":"365","severity":1,"message":"478","line":10,"column":16,"nodeType":"367","messageId":"368","endLine":10,"endColumn":18},{"ruleId":"365","severity":1,"message":"479","line":12,"column":10,"nodeType":"367","messageId":"368","endLine":12,"endColumn":30},{"ruleId":"365","severity":1,"message":"480","line":12,"column":32,"nodeType":"367","messageId":"368","endLine":12,"endColumn":44},{"ruleId":"365","severity":1,"message":"481","line":12,"column":46,"nodeType":"367","messageId":"368","endLine":12,"endColumn":61},{"ruleId":"365","severity":1,"message":"392","line":3,"column":16,"nodeType":"367","messageId":"368","endLine":3,"endColumn":23},{"ruleId":"365","severity":1,"message":"393","line":3,"column":25,"nodeType":"367","messageId":"368","endLine":3,"endColumn":31},{"ruleId":"365","severity":1,"message":"394","line":3,"column":33,"nodeType":"367","messageId":"368","endLine":3,"endColumn":38},{"ruleId":"365","severity":1,"message":"480","line":5,"column":10,"nodeType":"367","messageId":"368","endLine":5,"endColumn":22},{"ruleId":"365","severity":1,"message":"482","line":6,"column":10,"nodeType":"367","messageId":"368","endLine":6,"endColumn":24},{"ruleId":"365","severity":1,"message":"483","line":16,"column":8,"nodeType":"367","messageId":"368","endLine":16,"endColumn":16},{"ruleId":"365","severity":1,"message":"484","line":23,"column":8,"nodeType":"367","messageId":"368","endLine":23,"endColumn":17},{"ruleId":"365","severity":1,"message":"485","line":24,"column":8,"nodeType":"367","messageId":"368","endLine":24,"endColumn":21},{"ruleId":"365","severity":1,"message":"486","line":26,"column":8,"nodeType":"367","messageId":"368","endLine":26,"endColumn":16},{"ruleId":"365","severity":1,"message":"487","line":37,"column":8,"nodeType":"367","messageId":"368","endLine":37,"endColumn":15},{"ruleId":"365","severity":1,"message":"445","line":40,"column":9,"nodeType":"367","messageId":"368","endLine":40,"endColumn":16},{"ruleId":"365","severity":1,"message":"446","line":41,"column":7,"nodeType":"367","messageId":"368","endLine":41,"endColumn":13},{"ruleId":"365","severity":1,"message":"488","line":45,"column":7,"nodeType":"367","messageId":"368","endLine":45,"endColumn":17},{"ruleId":"365","severity":1,"message":"489","line":106,"column":10,"nodeType":"367","messageId":"368","endLine":106,"endColumn":19},{"ruleId":"365","severity":1,"message":"490","line":106,"column":21,"nodeType":"367","messageId":"368","endLine":106,"endColumn":33},{"ruleId":"365","severity":1,"message":"491","line":138,"column":10,"nodeType":"367","messageId":"368","endLine":138,"endColumn":19},{"ruleId":"365","severity":1,"message":"492","line":221,"column":13,"nodeType":"367","messageId":"368","endLine":221,"endColumn":20},{"ruleId":"376","severity":1,"message":"377","line":823,"column":17,"nodeType":"378","endLine":823,"endColumn":62},{"ruleId":"376","severity":1,"message":"377","line":828,"column":17,"nodeType":"378","endLine":828,"endColumn":65},{"ruleId":"407","severity":1,"message":"460","line":883,"column":15,"nodeType":"378","endLine":889,"endColumn":16},{"ruleId":"407","severity":1,"message":"460","line":892,"column":15,"nodeType":"378","endLine":898,"endColumn":16},{"ruleId":"376","severity":1,"message":"377","line":992,"column":17,"nodeType":"378","endLine":992,"endColumn":62},{"ruleId":"376","severity":1,"message":"377","line":996,"column":15,"nodeType":"378","endLine":996,"endColumn":64},{"ruleId":"407","severity":1,"message":"460","line":1114,"column":13,"nodeType":"378","endLine":1118,"endColumn":14},{"ruleId":"407","severity":1,"message":"460","line":1195,"column":15,"nodeType":"378","endLine":1203,"endColumn":16},{"ruleId":"407","severity":1,"message":"460","line":1218,"column":13,"nodeType":"378","endLine":1218,"endColumn":76},{"ruleId":"407","severity":1,"message":"460","line":1289,"column":15,"nodeType":"378","endLine":1297,"endColumn":16},{"ruleId":"407","severity":1,"message":"460","line":1321,"column":15,"nodeType":"378","endLine":1325,"endColumn":16},{"ruleId":"365","severity":1,"message":"493","line":1351,"column":9,"nodeType":"367","messageId":"368","endLine":1351,"endColumn":15},{"ruleId":"372","severity":1,"message":"494","line":1387,"column":6,"nodeType":"374","endLine":1387,"endColumn":8,"suggestions":"495"},{"ruleId":"372","severity":1,"message":"496","line":1391,"column":6,"nodeType":"374","endLine":1391,"endColumn":32,"suggestions":"497"},{"ruleId":"376","severity":1,"message":"377","line":1413,"column":15,"nodeType":"378","endLine":1413,"endColumn":59},{"ruleId":"376","severity":1,"message":"377","line":1588,"column":19,"nodeType":"378","endLine":1588,"endColumn":54},{"ruleId":"376","severity":1,"message":"377","line":1590,"column":19,"nodeType":"378","endLine":1590,"endColumn":53},{"ruleId":"365","severity":1,"message":"438","line":9,"column":25,"nodeType":"367","messageId":"368","endLine":9,"endColumn":28},{"ruleId":"365","severity":1,"message":"418","line":21,"column":8,"nodeType":"367","messageId":"368","endLine":21,"endColumn":15},{"ruleId":"365","severity":1,"message":"498","line":64,"column":17,"nodeType":"367","messageId":"368","endLine":64,"endColumn":25},{"ruleId":"365","severity":1,"message":"499","line":75,"column":10,"nodeType":"367","messageId":"368","endLine":75,"endColumn":18},{"ruleId":"365","severity":1,"message":"500","line":79,"column":10,"nodeType":"367","messageId":"368","endLine":79,"endColumn":13},{"ruleId":"365","severity":1,"message":"501","line":82,"column":18,"nodeType":"367","messageId":"368","endLine":82,"endColumn":27},{"ruleId":"372","severity":1,"message":"502","line":107,"column":6,"nodeType":"374","endLine":107,"endColumn":32,"suggestions":"503"},{"ruleId":"365","severity":1,"message":"504","line":117,"column":11,"nodeType":"367","messageId":"368","endLine":117,"endColumn":14},{"ruleId":"365","severity":1,"message":"505","line":456,"column":24,"nodeType":"367","messageId":"368","endLine":456,"endColumn":28},{"ruleId":"381","severity":1,"message":"382","line":471,"column":49,"nodeType":"383","messageId":"384","endLine":471,"endColumn":51},{"ruleId":"506","severity":1,"message":"507","line":736,"column":34,"nodeType":"508","messageId":"509","endLine":736,"endColumn":35,"suggestions":"510"},{"ruleId":"506","severity":1,"message":"511","line":741,"column":31,"nodeType":"508","messageId":"509","endLine":741,"endColumn":32,"suggestions":"512"},{"ruleId":"506","severity":1,"message":"507","line":765,"column":34,"nodeType":"508","messageId":"509","endLine":765,"endColumn":35,"suggestions":"513"},{"ruleId":"506","severity":1,"message":"511","line":770,"column":31,"nodeType":"508","messageId":"509","endLine":770,"endColumn":32,"suggestions":"514"},{"ruleId":"506","severity":1,"message":"507","line":794,"column":34,"nodeType":"508","messageId":"509","endLine":794,"endColumn":35,"suggestions":"515"},{"ruleId":"506","severity":1,"message":"511","line":799,"column":31,"nodeType":"508","messageId":"509","endLine":799,"endColumn":32,"suggestions":"516"},{"ruleId":"506","severity":1,"message":"507","line":844,"column":34,"nodeType":"508","messageId":"509","endLine":844,"endColumn":35,"suggestions":"517"},{"ruleId":"506","severity":1,"message":"511","line":849,"column":31,"nodeType":"508","messageId":"509","endLine":849,"endColumn":32,"suggestions":"518"},{"ruleId":"506","severity":1,"message":"507","line":872,"column":34,"nodeType":"508","messageId":"509","endLine":872,"endColumn":35,"suggestions":"519"},{"ruleId":"506","severity":1,"message":"511","line":877,"column":31,"nodeType":"508","messageId":"509","endLine":877,"endColumn":32,"suggestions":"520"},{"ruleId":"506","severity":1,"message":"507","line":902,"column":34,"nodeType":"508","messageId":"509","endLine":902,"endColumn":35,"suggestions":"521"},{"ruleId":"506","severity":1,"message":"511","line":907,"column":31,"nodeType":"508","messageId":"509","endLine":907,"endColumn":32,"suggestions":"522"},{"ruleId":"506","severity":1,"message":"507","line":921,"column":59,"nodeType":"508","messageId":"509","endLine":921,"endColumn":60,"suggestions":"523"},{"ruleId":"506","severity":1,"message":"511","line":921,"column":165,"nodeType":"508","messageId":"509","endLine":921,"endColumn":166,"suggestions":"524"},{"ruleId":"525","severity":1,"message":"526","line":1260,"column":9,"nodeType":"527","messageId":"384","endLine":1260,"endColumn":14},{"ruleId":"365","severity":1,"message":"471","line":1314,"column":7,"nodeType":"367","messageId":"368","endLine":1314,"endColumn":12},{"ruleId":"506","severity":1,"message":"507","line":1456,"column":34,"nodeType":"508","messageId":"509","endLine":1456,"endColumn":35,"suggestions":"528"},{"ruleId":"506","severity":1,"message":"511","line":1461,"column":31,"nodeType":"508","messageId":"509","endLine":1461,"endColumn":32,"suggestions":"529"},{"ruleId":"506","severity":1,"message":"507","line":1477,"column":34,"nodeType":"508","messageId":"509","endLine":1477,"endColumn":35,"suggestions":"530"},{"ruleId":"506","severity":1,"message":"511","line":1482,"column":31,"nodeType":"508","messageId":"509","endLine":1482,"endColumn":32,"suggestions":"531"},{"ruleId":"372","severity":1,"message":"532","line":1680,"column":6,"nodeType":"374","endLine":1680,"endColumn":8,"suggestions":"533"},{"ruleId":"372","severity":1,"message":"534","line":1727,"column":6,"nodeType":"374","endLine":1727,"endColumn":23,"suggestions":"535"},{"ruleId":"372","severity":1,"message":"536","line":1756,"column":6,"nodeType":"374","endLine":1756,"endColumn":26,"suggestions":"537"},{"ruleId":"372","severity":1,"message":"538","line":1810,"column":6,"nodeType":"374","endLine":1810,"endColumn":24,"suggestions":"539"},{"ruleId":"365","severity":1,"message":"540","line":32,"column":10,"nodeType":"367","messageId":"368","endLine":32,"endColumn":23},{"ruleId":"365","severity":1,"message":"445","line":47,"column":9,"nodeType":"367","messageId":"368","endLine":47,"endColumn":16},{"ruleId":"365","severity":1,"message":"541","line":60,"column":5,"nodeType":"367","messageId":"368","endLine":60,"endColumn":8},{"ruleId":"365","severity":1,"message":"505","line":452,"column":22,"nodeType":"367","messageId":"368","endLine":452,"endColumn":26},{"ruleId":"461","severity":1,"message":"462","line":1153,"column":9,"nodeType":"463","messageId":"464","endLine":1157,"endColumn":10},{"ruleId":"461","severity":1,"message":"462","line":1823,"column":5,"nodeType":"463","messageId":"464","endLine":1836,"endColumn":6},{"ruleId":"365","severity":1,"message":"542","line":2302,"column":17,"nodeType":"367","messageId":"368","endLine":2302,"endColumn":29},{"ruleId":"506","severity":1,"message":"507","line":2319,"column":59,"nodeType":"508","messageId":"509","endLine":2319,"endColumn":60,"suggestions":"543"},{"ruleId":"506","severity":1,"message":"511","line":2319,"column":165,"nodeType":"508","messageId":"509","endLine":2319,"endColumn":166,"suggestions":"544"},{"ruleId":"506","severity":1,"message":"507","line":2335,"column":59,"nodeType":"508","messageId":"509","endLine":2335,"endColumn":60,"suggestions":"545"},{"ruleId":"506","severity":1,"message":"511","line":2335,"column":165,"nodeType":"508","messageId":"509","endLine":2335,"endColumn":166,"suggestions":"546"},{"ruleId":"506","severity":1,"message":"507","line":2354,"column":59,"nodeType":"508","messageId":"509","endLine":2354,"endColumn":60,"suggestions":"547"},{"ruleId":"506","severity":1,"message":"511","line":2354,"column":165,"nodeType":"508","messageId":"509","endLine":2354,"endColumn":166,"suggestions":"548"},{"ruleId":"506","severity":1,"message":"507","line":2387,"column":59,"nodeType":"508","messageId":"509","endLine":2387,"endColumn":60,"suggestions":"549"},{"ruleId":"506","severity":1,"message":"511","line":2387,"column":165,"nodeType":"508","messageId":"509","endLine":2387,"endColumn":166,"suggestions":"550"},{"ruleId":"506","severity":1,"message":"507","line":2403,"column":59,"nodeType":"508","messageId":"509","endLine":2403,"endColumn":60,"suggestions":"551"},{"ruleId":"506","severity":1,"message":"511","line":2403,"column":165,"nodeType":"508","messageId":"509","endLine":2403,"endColumn":166,"suggestions":"552"},{"ruleId":"506","severity":1,"message":"507","line":2421,"column":59,"nodeType":"508","messageId":"509","endLine":2421,"endColumn":60,"suggestions":"553"},{"ruleId":"506","severity":1,"message":"511","line":2421,"column":165,"nodeType":"508","messageId":"509","endLine":2421,"endColumn":166,"suggestions":"554"},{"ruleId":"365","severity":1,"message":"455","line":2841,"column":11,"nodeType":"367","messageId":"368","endLine":2841,"endColumn":21},{"ruleId":"365","severity":1,"message":"456","line":2841,"column":23,"nodeType":"367","messageId":"368","endLine":2841,"endColumn":31},{"ruleId":"365","severity":1,"message":"457","line":2841,"column":33,"nodeType":"367","messageId":"368","endLine":2841,"endColumn":39},{"ruleId":"365","severity":1,"message":"555","line":2841,"column":65,"nodeType":"367","messageId":"368","endLine":2841,"endColumn":78},{"ruleId":"365","severity":1,"message":"556","line":2985,"column":30,"nodeType":"367","messageId":"368","endLine":2985,"endColumn":37},{"ruleId":"365","severity":1,"message":"557","line":2985,"column":39,"nodeType":"367","messageId":"368","endLine":2985,"endColumn":47},{"ruleId":"365","severity":1,"message":"558","line":2985,"column":49,"nodeType":"367","messageId":"368","endLine":2985,"endColumn":58},{"ruleId":"365","severity":1,"message":"559","line":2985,"column":60,"nodeType":"367","messageId":"368","endLine":2985,"endColumn":69},{"ruleId":"365","severity":1,"message":"560","line":2985,"column":71,"nodeType":"367","messageId":"368","endLine":2985,"endColumn":76},{"ruleId":"365","severity":1,"message":"561","line":2985,"column":78,"nodeType":"367","messageId":"368","endLine":2985,"endColumn":86},{"ruleId":"365","severity":1,"message":"448","line":2985,"column":88,"nodeType":"367","messageId":"368","endLine":2985,"endColumn":94},{"ruleId":"365","severity":1,"message":"562","line":2985,"column":96,"nodeType":"367","messageId":"368","endLine":2985,"endColumn":99},{"ruleId":"506","severity":1,"message":"507","line":3280,"column":59,"nodeType":"508","messageId":"509","endLine":3280,"endColumn":60,"suggestions":"563"},{"ruleId":"506","severity":1,"message":"511","line":3280,"column":165,"nodeType":"508","messageId":"509","endLine":3280,"endColumn":166,"suggestions":"564"},{"ruleId":"506","severity":1,"message":"507","line":3297,"column":59,"nodeType":"508","messageId":"509","endLine":3297,"endColumn":60,"suggestions":"565"},{"ruleId":"506","severity":1,"message":"511","line":3297,"column":165,"nodeType":"508","messageId":"509","endLine":3297,"endColumn":166,"suggestions":"566"},{"ruleId":"365","severity":1,"message":"395","line":7,"column":10,"nodeType":"367","messageId":"368","endLine":7,"endColumn":14},{"ruleId":"365","severity":1,"message":"567","line":28,"column":9,"nodeType":"367","messageId":"368","endLine":28,"endColumn":16},{"ruleId":"365","severity":1,"message":"568","line":7,"column":8,"nodeType":"367","messageId":"368","endLine":7,"endColumn":17},{"ruleId":"365","severity":1,"message":"479","line":8,"column":10,"nodeType":"367","messageId":"368","endLine":8,"endColumn":30},{"ruleId":"365","severity":1,"message":"395","line":15,"column":10,"nodeType":"367","messageId":"368","endLine":15,"endColumn":14},{"ruleId":"365","severity":1,"message":"478","line":15,"column":16,"nodeType":"367","messageId":"368","endLine":15,"endColumn":18},{"ruleId":"365","severity":1,"message":"569","line":21,"column":7,"nodeType":"367","messageId":"368","endLine":21,"endColumn":14},{"ruleId":"365","severity":1,"message":"570","line":318,"column":21,"nodeType":"367","messageId":"368","endLine":318,"endColumn":29},{"ruleId":"365","severity":1,"message":"571","line":318,"column":31,"nodeType":"367","messageId":"368","endLine":318,"endColumn":37},{"ruleId":"407","severity":1,"message":"460","line":478,"column":36,"nodeType":"378","endLine":478,"endColumn":71},"no-unused-vars","'Image' is defined but never used.","Identifier","unusedVar","'px' is defined but never used.","'moment' is defined but never used.","'Header' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callBack'. Either include it or remove the dependency array.","ArrayExpression",["572"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'token' is assigned a value but never used.","'header' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'devicesTitleHeight' is defined but never used.","'Footer' is assigned a value but never used.","'Sider' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["573"],"'useHistory' is defined but never used.","'Menu' is defined but never used.","'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'mTop' is defined but never used.","'MTop' is defined but never used.","'electronStore' is defined but never used.","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["574"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["575"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Carousel' is defined but never used.","'PlusOutlined' is defined but never used.","'percent' is assigned a value but never used.","'setPercent' is assigned a value but never used.","React Hook useEffect contains a call to 'setTimers'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [callBack, timers] as a second argument to the useEffect Hook.",["576"],"'useRef' is defined but never used.","'PageHeader' is defined but never used.","'redjinggao' is defined but never used.","'MyModal' is defined but never used.","'patientId' is assigned a value but never used.","'rulerConnectStatus' is assigned a value but never used.","'visible' is assigned a value but never used.","'setVisible' is assigned a value but never used.","'showModal' is assigned a value but never used.","'selectPetDetail' is assigned a value but never used.","'setSelectPetDetail' is assigned a value but never used.","'onClickModal' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'finishScan' and 'newData'. Either include them or remove the dependency array.",["577"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array. You can also do a functional update 'setInputIndex(i => ...)' if you only need 'inputIndex' in the 'setInputIndex' call.",["578"],"React Hook useEffect has missing dependencies: 'petLengthDataConvert' and 'petMessage'. Either include them or remove the dependency array.",["579"],"React Hook useEffect has a missing dependency: 'inputIndex'. Either include it or remove the dependency array.",["580"],"React Hook useEffect has missing dependencies: 'bodyValue', 'changeUnit', 'headValue', 'lowerValue', 'neckValue', 'torsoValue', and 'upperValue'. Either include them or remove the dependency array. You can also do a functional update 'setHeadValue(h => ...)' if you only need 'headValue' in the 'setHeadValue' call.",["581"],"'get' is defined but never used.","'del' is defined but never used.","'patch' is defined but never used.","'postJson' is defined but never used.","React Hook useEffect has a missing dependency: 'weight'. Either include it or remove the dependency array.",["582"],"React Hook useEffect has a missing dependency: 'setBiggieConnectStatusFun'. Either include it or remove the dependency array. If 'setBiggieConnectStatusFun' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["583"],"'SubMenu' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-undef","'getPetInfoByRFID' is not defined.","undef","'Space' is defined but never used.","'Tag' is defined but never used.","'memo' is assigned a value but never used.","'hisHe' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getPetTemperatureData'. Either include it or remove the dependency array.",["584"],"React Hook useEffect has a missing dependency: 'storage.userId'. Either include it or remove the dependency array.",["585"],"'message' is defined but never used.","'Spin' is defined but never used.","'pX' is defined but never used.","'createFromIconfontCN' is defined but never used.","'SyncOutlined' is defined but never used.","'LoadingOutlined' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'allPetList' is assigned a value but never used.","'clickType' is assigned a value but never used.","'setClickType' is assigned a value but never used.","'headerRef' is assigned a value but never used.","'bluData' is assigned a value but never used.","'resize' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["586"],"React Hook useEffect has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["587"],"'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","React Hook useCallback has an unnecessary dependency: 'window.screen.availWidth'. Either exclude it or remove the dependency array. Outer scope values like 'window.screen.availWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["588"],"'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["589","590"],"Unnecessary escape character: \\-.",["591","592"],["593","594"],["595","596"],["597","598"],["599","600"],["601","602"],["603","604"],["605","606"],["607","608"],["609","610"],["611","612"],["613","614"],["615","616"],"no-dupe-keys","Duplicate key 'align'.","ObjectExpression",["617","618"],["619","620"],["621","622"],["623","624"],"React Hook useEffect has a missing dependency: 'mellaMeasureNum'. Either include it or remove the dependency array.",["625"],"React Hook useEffect has missing dependencies: 'echarsData', 'echarsData1.Eci', 'echarsData1.wen0', 'echarsData1.wen1', 'mellaMeasureValue', and 'units'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.",["626"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["627"],"React Hook useEffect has a missing dependency: 'units'. Either include it or remove the dependency array.",["628"],"'fetchRequest3' is defined but never used.","'num' is assigned a value but never used.","'placeholder1' is assigned a value but never used.",["629","630"],["631","632"],["633","634"],["635","636"],["637","638"],["639","640"],["641","642"],["643","644"],["645","646"],["647","648"],["649","650"],["651","652"],"'measuerStatus' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'breedName' is assigned a value but never used.","'isMix' is assigned a value but never used.","'birthday' is assigned a value but never used.","'url' is assigned a value but never used.",["653","654"],["655","656"],["657","658"],["659","660"],"'_resend' is assigned a value but never used.","'Draggable' is defined but never used.","'options' is assigned a value but never used.","'disabled' is assigned a value but never used.","'bounds' is assigned a value but never used.",{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"675","fix":"676"},{"desc":"677","fix":"678"},{"desc":"679","fix":"680"},{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"691","fix":"692"},{"desc":"691","fix":"693"},{"messageId":"694","fix":"695","desc":"696"},{"messageId":"697","fix":"698","desc":"699"},{"messageId":"694","fix":"700","desc":"696"},{"messageId":"697","fix":"701","desc":"699"},{"messageId":"694","fix":"702","desc":"696"},{"messageId":"697","fix":"703","desc":"699"},{"messageId":"694","fix":"704","desc":"696"},{"messageId":"697","fix":"705","desc":"699"},{"messageId":"694","fix":"706","desc":"696"},{"messageId":"697","fix":"707","desc":"699"},{"messageId":"694","fix":"708","desc":"696"},{"messageId":"697","fix":"709","desc":"699"},{"messageId":"694","fix":"710","desc":"696"},{"messageId":"697","fix":"711","desc":"699"},{"messageId":"694","fix":"712","desc":"696"},{"messageId":"697","fix":"713","desc":"699"},{"messageId":"694","fix":"714","desc":"696"},{"messageId":"697","fix":"715","desc":"699"},{"messageId":"694","fix":"716","desc":"696"},{"messageId":"697","fix":"717","desc":"699"},{"messageId":"694","fix":"718","desc":"696"},{"messageId":"697","fix":"719","desc":"699"},{"messageId":"694","fix":"720","desc":"696"},{"messageId":"697","fix":"721","desc":"699"},{"messageId":"694","fix":"722","desc":"696"},{"messageId":"697","fix":"723","desc":"699"},{"messageId":"694","fix":"724","desc":"696"},{"messageId":"697","fix":"725","desc":"699"},{"messageId":"694","fix":"726","desc":"696"},{"messageId":"697","fix":"727","desc":"699"},{"messageId":"694","fix":"728","desc":"696"},{"messageId":"697","fix":"729","desc":"699"},{"messageId":"694","fix":"730","desc":"696"},{"messageId":"697","fix":"731","desc":"699"},{"messageId":"694","fix":"732","desc":"696"},{"messageId":"697","fix":"733","desc":"699"},{"desc":"734","fix":"735"},{"desc":"736","fix":"737"},{"desc":"738","fix":"739"},{"desc":"740","fix":"741"},{"messageId":"694","fix":"742","desc":"696"},{"messageId":"697","fix":"743","desc":"699"},{"messageId":"694","fix":"744","desc":"696"},{"messageId":"697","fix":"745","desc":"699"},{"messageId":"694","fix":"746","desc":"696"},{"messageId":"697","fix":"747","desc":"699"},{"messageId":"694","fix":"748","desc":"696"},{"messageId":"697","fix":"749","desc":"699"},{"messageId":"694","fix":"750","desc":"696"},{"messageId":"697","fix":"751","desc":"699"},{"messageId":"694","fix":"752","desc":"696"},{"messageId":"697","fix":"753","desc":"699"},{"messageId":"694","fix":"754","desc":"696"},{"messageId":"697","fix":"755","desc":"699"},{"messageId":"694","fix":"756","desc":"696"},{"messageId":"697","fix":"757","desc":"699"},{"messageId":"694","fix":"758","desc":"696"},{"messageId":"697","fix":"759","desc":"699"},{"messageId":"694","fix":"760","desc":"696"},{"messageId":"697","fix":"761","desc":"699"},{"messageId":"694","fix":"762","desc":"696"},{"messageId":"697","fix":"763","desc":"699"},{"messageId":"694","fix":"764","desc":"696"},{"messageId":"697","fix":"765","desc":"699"},{"messageId":"694","fix":"766","desc":"696"},{"messageId":"697","fix":"767","desc":"699"},{"messageId":"694","fix":"768","desc":"696"},{"messageId":"697","fix":"769","desc":"699"},{"messageId":"694","fix":"770","desc":"696"},{"messageId":"697","fix":"771","desc":"699"},{"messageId":"694","fix":"772","desc":"696"},{"messageId":"697","fix":"773","desc":"699"},"Update the dependencies array to be: [callBack, carouselIndex]",{"range":"774","text":"775"},"Update the dependencies array to be: [hardwareList]",{"range":"776","text":"777"},"Update the dependencies array to be: [listDate]",{"range":"778","text":"779"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"780","text":"781"},"Add dependencies array: [callBack, timers]",{"range":"782","text":"783"},"Update the dependencies array to be: [finishScan, inputIndex, newData]",{"range":"784","text":"785"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount]",{"range":"786","text":"787"},"Update the dependencies array to be: [petId, petLengthDataConvert, petMessage]",{"range":"788","text":"789"},"Update the dependencies array to be: [inputIndex, rulerConfirmCount, rulerMeasureValue]",{"range":"790","text":"791"},"Update the dependencies array to be: [bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",{"range":"792","text":"793"},"Update the dependencies array to be: [hardwareReduce, weight]",{"range":"794","text":"795"},"Update the dependencies array to be: [petDetailInfo, setBiggieConnectStatusFun]",{"range":"796","text":"797"},"Update the dependencies array to be: [getPetTemperatureData, petMessage]",{"range":"798","text":"799"},"Update the dependencies array to be: [storage.userId]",{"range":"800","text":"801"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"802","text":"803"},"Update the dependencies array to be: []",{"range":"804","text":"805"},{"range":"806","text":"805"},"removeEscape",{"range":"807","text":"808"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"809","text":"810"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"811","text":"808"},{"range":"812","text":"810"},{"range":"813","text":"808"},{"range":"814","text":"810"},{"range":"815","text":"808"},{"range":"816","text":"810"},{"range":"817","text":"808"},{"range":"818","text":"810"},{"range":"819","text":"808"},{"range":"820","text":"810"},{"range":"821","text":"808"},{"range":"822","text":"810"},{"range":"823","text":"808"},{"range":"824","text":"810"},{"range":"825","text":"808"},{"range":"826","text":"810"},{"range":"827","text":"808"},{"range":"828","text":"810"},{"range":"829","text":"808"},{"range":"830","text":"810"},{"range":"831","text":"808"},{"range":"832","text":"810"},{"range":"833","text":"808"},{"range":"834","text":"810"},{"range":"835","text":"808"},{"range":"836","text":"810"},{"range":"837","text":"808"},{"range":"838","text":"810"},{"range":"839","text":"808"},{"range":"840","text":"810"},{"range":"841","text":"808"},{"range":"842","text":"810"},{"range":"843","text":"808"},{"range":"844","text":"810"},"Update the dependencies array to be: [mellaMeasureNum]",{"range":"845","text":"846"},"Update the dependencies array to be: [echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",{"range":"847","text":"848"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"849","text":"850"},"Update the dependencies array to be: [biggieBodyWeight, units]",{"range":"851","text":"852"},{"range":"853","text":"808"},{"range":"854","text":"810"},{"range":"855","text":"808"},{"range":"856","text":"810"},{"range":"857","text":"808"},{"range":"858","text":"810"},{"range":"859","text":"808"},{"range":"860","text":"810"},{"range":"861","text":"808"},{"range":"862","text":"810"},{"range":"863","text":"808"},{"range":"864","text":"810"},{"range":"865","text":"808"},{"range":"866","text":"810"},{"range":"867","text":"808"},{"range":"868","text":"810"},{"range":"869","text":"808"},{"range":"870","text":"810"},{"range":"871","text":"808"},{"range":"872","text":"810"},{"range":"873","text":"808"},{"range":"874","text":"810"},{"range":"875","text":"808"},{"range":"876","text":"810"},{"range":"877","text":"808"},{"range":"878","text":"810"},{"range":"879","text":"808"},{"range":"880","text":"810"},{"range":"881","text":"808"},{"range":"882","text":"810"},{"range":"883","text":"808"},{"range":"884","text":"810"},[2356,2371],"[callBack, carouselIndex]",[3213,3215],"[hardwareList]",[3283,3285],"[listDate]",[4990,5002],"[letterListCopy, phoneListCopy, searchText]",[2257,2257],", [callBack, timers]",[7269,7281],"[finishScan, inputIndex, newData]",[7732,7751],"[inputIndex, rulerConfirmCount]",[8578,8585],"[petId, petLengthDataConvert, petMessage]",[9200,9238],"[inputIndex, rulerConfirmCount, rulerMeasureValue]",[9662,9673],"[bodyValue, changeUnit, headValue, lowerValue, neckValue, rulerUnit, torsoValue, upperValue]",[7021,7037],"[hardwareReduce, weight]",[7225,7240],"[petDetailInfo, setBiggieConnectStatusFun]",[12885,12897],"[getPetTemperatureData, petMessage]",[13085,13087],"[storage.userId]",[42689,42691],"[_noUSB, _send, blueSearch]",[42763,42789],"[]",[4388,4414],[22027,22028],"",[22027,22027],"\\",[22228,22229],[22228,22228],[23002,23003],[23002,23002],[23203,23204],[23203,23203],[23974,23975],[23974,23974],[24175,24176],[24175,24175],[25639,25640],[25639,25639],[25840,25841],[25840,25840],[26574,26575],[26574,26574],[26775,26776],[26775,26775],[27568,27569],[27568,27568],[27769,27770],[27769,27769],[28375,28376],[28375,28375],[28481,28482],[28481,28481],[43525,43526],[43525,43525],[43726,43727],[43726,43726],[44256,44257],[44256,44256],[44457,44458],[44457,44457],[49984,49986],"[mellaMeasureNum]",[51227,51244],"[echarsData, echarsData1.Eci, echarsData1.wen0, echarsData1.wen1, mellaMeasureNum, mellaMeasureValue, units]",[51915,51935],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[53802,53820],"[biggieBodyWeight, units]",[66228,66229],[66228,66228],[66334,66335],[66334,66334],[67156,67157],[67156,67156],[67262,67263],[67262,67262],[68099,68100],[68099,68099],[68205,68206],[68205,68205],[69476,69477],[69476,69476],[69582,69583],[69582,69582],[70366,70367],[70366,70366],[70472,70473],[70472,70472],[71349,71350],[71349,71349],[71455,71456],[71455,71455],[95521,95522],[95521,95521],[95627,95628],[95627,95627],[96197,96198],[96197,96197],[96303,96304],[96303,96303]]