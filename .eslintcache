[{"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/LinkEquipment.jsx":"1","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/clinicalStudyPage/index.jsx":"2","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js":"3","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/index.js":"4","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectScheduledExam.jsx":"5","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorAddPet/DoctorAddPet.jsx":"6","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/invite/Invite.jsx":"7","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/temporaryStorage.js":"8","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/slider/Slider.js":"9","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/index.jsx":"10","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil3.js":"11","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/selectionBox/SelectionBox.jsx":"12","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/App.js":"13","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectAllExam.jsx":"14","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/InviteTeam.jsx":"15","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/areaCode/country.js":"16","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/hardwareAction.js":"17","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/petType.js":"18","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx":"19","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/praviders/Praviders.jsx":"20","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/workPlace/WorkPlace.jsx":"21","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/measure/Mesasure.jsx":"22","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/findMyOrganization/FindMyOrganization.jsx":"23","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/unassigned/Unassigned.jsx":"24","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil4.js":"25","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/axios/index.js":"26","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/index.js":"27","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/HardListModal.jsx":"28","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/numericInput.jsx":"29","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/home/Home.jsx":"30","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/signIn/SignIn.jsx":"31","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/PetsUI.jsx":"32"},{"size":1186,"mtime":1655795475473,"results":"33","hashOfConfig":"34"},{"size":58407,"mtime":1655796458902,"results":"35","hashOfConfig":"34"},{"size":47462,"mtime":1655800714571,"results":"36","hashOfConfig":"34"},{"size":341,"mtime":1655452607716,"results":"37","hashOfConfig":"34"},{"size":38204,"mtime":1654166626112,"results":"38","hashOfConfig":"34"},{"size":38775,"mtime":1655269876050,"results":"39","hashOfConfig":"34"},{"size":6721,"mtime":1655269876063,"results":"40","hashOfConfig":"34"},{"size":1251,"mtime":1655269876170,"results":"41","hashOfConfig":"34"},{"size":4288,"mtime":1655269876169,"results":"42","hashOfConfig":"34"},{"size":1174,"mtime":1655795465376,"results":"43","hashOfConfig":"34"},{"size":2536,"mtime":1655269876085,"results":"44","hashOfConfig":"34"},{"size":3261,"mtime":1655269876169,"results":"45","hashOfConfig":"34"},{"size":7271,"mtime":1655454585051,"results":"46","hashOfConfig":"34"},{"size":37156,"mtime":1655795177439,"results":"47","hashOfConfig":"34"},{"size":13114,"mtime":1655269876064,"results":"48","hashOfConfig":"34"},{"size":17767,"mtime":1655269876086,"results":"49","hashOfConfig":"34"},{"size":3589,"mtime":1655703299839,"results":"50","hashOfConfig":"34"},{"size":215,"mtime":1655454743688,"results":"51","hashOfConfig":"34"},{"size":7938,"mtime":1655269876168,"results":"52","hashOfConfig":"34"},{"size":6255,"mtime":1655269876067,"results":"53","hashOfConfig":"34"},{"size":9420,"mtime":1655269876073,"results":"54","hashOfConfig":"34"},{"size":109676,"mtime":1655269876058,"results":"55","hashOfConfig":"34"},{"size":3327,"mtime":1655269876045,"results":"56","hashOfConfig":"34"},{"size":36088,"mtime":1655269876067,"results":"57","hashOfConfig":"34"},{"size":3021,"mtime":1655269876085,"results":"58","hashOfConfig":"34"},{"size":421,"mtime":1655269876152,"results":"59","hashOfConfig":"34"},{"size":89,"mtime":1655452097264,"results":"60","hashOfConfig":"34"},{"size":7040,"mtime":1655451054944,"results":"61","hashOfConfig":"34"},{"size":1314,"mtime":1655726378406,"results":"62","hashOfConfig":"34"},{"size":5642,"mtime":1655800243177,"results":"63","hashOfConfig":"34"},{"size":16574,"mtime":1655800342112,"results":"64","hashOfConfig":"34"},{"size":6127,"mtime":1655801074996,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1brez7n",{"filePath":"68","messages":"69","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"95"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":39,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/LinkEquipment.jsx",["136","137","138","139","140","141"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/clinicalStudyPage/index.jsx",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181"],"import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n    Layout, message,\n    Input,\n    Menu,\n    Modal,\n    Table,\n    Popconfirm,\n    Tooltip,\n    Select,\n    Spin\n} from 'antd'\nimport ReactECharts from 'echarts-for-react';\nimport propTypes from 'prop-types';\nimport moment from 'moment';\nimport { createFromIconfontCN, SyncOutlined, LoadingOutlined } from '@ant-design/icons';\nimport Draggable from \"react-draggable\";\n\nimport { devicesTitleHeight } from '../../utils/InitDate';\nimport { px, mTop } from '../../utils/px';\nimport HeaderItem from './../temperaturePage/components/headerItem';\nimport MyModal from './../../utils/myModal/MyModal'\n\nimport ye from './../../assets/images/ye1.png'\nimport er from './../../assets/images/er3.png'\nimport gang from './../../assets/images/gang3.png'\nimport dog from './../../assets/images/dog.png'\nimport cat from './../../assets/images/cat.png'\nimport other from './../../assets/images/other.png'\nimport edit from './../../assets/images/edit.png'\nimport del from './../../assets/images/del.png'\nimport start from './../../assets/img/start.png'\nimport redjinggao from './../../assets/img/redjinggao.png'\nimport placement_gang from './../../assets/images/placement_gang.png'\nimport placement_er from './../../assets/images/placement_er.png'\nimport palcement_ye from './../../assets/images/palcement_ye.png'\nimport close from './../../assets/img/close.png'\n\nimport './clinical.less'\nimport { fetchRequest } from '../../utils/FetchUtil1';\nimport { fetchRequest3 } from '../../utils/FetchUtil3';\n\nlet resyncDeviceIsClick = true //用于控制多次点击重新配对按钮\nlet storage = window.localStorage;\n\n//定义echarts的数据个数\nconst echartsDataLength = 0\nconst { Option } = Select;\nlet saveHistoryTime = null\nconst ClinicalStudy = ({ bodyHeight, mellaConnectStatus, mellaMeasureValue, mellaMeasureNum, petDetailInfo }) => {\n    const [units, setUnits] = useState('℃')\n    const [temperature, setTemp] = useState(0)\n    const echartsElement = useRef(null)\n    const [showHistoryEchart, setShowHistoryEchart] = useState(false)\n    const [echarsData, setEcharsData] = useState({\n        Eci: [],\n        wen0: [],\n        wen1: []\n    })\n    const [mellaStatus, setMellaStatus] = useState('disconnected')\n    const [roomTemperature, setRoomTemperature] = useState('')\n    const [referenceRectalTemperature, setReferenceRectalTemperature] = useState('')\n    const [bodyConditionScore, setBodyConditionScore] = useState('')\n    const [furLength, setFurLength] = useState('')\n    const [heartRate, setHeartRate] = useState('')\n    const [bloodPressure, setBloodPressure] = useState('')\n    const [respiratoryRate, setRespiratoryRate] = useState('')\n    const [notes, setNotes] = useState('')\n\n    const [isPetCharacteristics, setIsPetCharacteristics] = useState(false)\n    const [historyData, setHistoryData] = useState([])\n    const [editRectal, setEditRectal] = useState('')\n    const [editRoomTemperature, setEditRoomTemperature] = useState('')\n    const [editHeartRate, setEditHeartRate] = useState('')\n    //定义变量 editBloodPressure,  editRespiratoryRate, editVisible: true, editId: key, memo: record.note, editBodyConditionScore, editFurLength\n    const [editBloodPressure, setEditBloodPressure] = useState('')\n    const [editRespiratoryRate, setEditRespiratoryRate] = useState('')\n    const [editVisible, setEditVisible] = useState(false)\n    const [editId, setEditId] = useState('')\n    const [editMemo, setEditMemo] = useState('')\n    const [editBodyConditionScore, setEditBodyConditionScore] = useState('')\n    const [editFurLength, setEditFurLength] = useState('')\n    const [tipSpin, setTipSpin] = useState(false)\n    const [tip, setTip] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [disabled, setDisabled] = useState(true)\n    const [bounds, setBounds] = useState({ left: 0, top: 0, bottom: 0, right: 0 })\n    const [memo, setMemo] = useState('')\n    const [windowWidth, setWindowWidth] = useState(px(550))\n\n    const clinicalRef = useRef(null)\n\n\n\n\n\n    useEffect(() => {\n        if (petDetailInfo.petId) {\n            _getHistory11(petDetailInfo.petId)\n        } else if (petDetailInfo.isWalkIn) {\n            _getEmergencyHistory()\n        }\n    }, [petDetailInfo])\n\n    useEffect(() => {\n        return () => {\n            saveHistoryTime && clearTimeout(saveHistoryTime)\n        }\n    }, [])\n\n    useEffect(() => {\n        //react监听屏幕窗口改变\n        window.addEventListener('resize', resize)\n        return () => {\n            window.removeEventListener('resize', resize)\n        }\n    }, [])\n\n    const resize = () => {\n        if (clinicalRef.current) {\n\n            let { offsetWidth } = clinicalRef.current\n            console.log('改变', offsetWidth);\n            setWindowWidth(offsetWidth)\n        }\n\n    }\n\n    useEffect(() => {\n        // console.log('监听', mellaMeasureValue);\n        setTemp(mellaMeasureValue)\n        let { Eci, wen0, wen1 } = echarsData\n        //两个数组合并成一个数组\n        let EciCopy = [...Eci]\n\n        let win0Copy = [...wen0]\n        let wen1Copy = [...wen1]\n        EciCopy.push(EciCopy.length + 1)\n        win0Copy.push(mellaMeasureValue)\n        wen1Copy.push(mellaMeasureValue)\n        let json = {\n            Eci: EciCopy,\n            wen0: win0Copy,\n            wen1: wen1Copy\n\n        }\n        setEcharsData(json)\n        const option = getOption();\n        echartsElement.current.getEchartsInstance().setOption(option)\n\n\n    }, [mellaMeasureNum])\n\n    useEffect(() => {\n        console.log('=======监听mellaConnectStatus', mellaConnectStatus, echarsData.Eci.length);\n        if (mellaConnectStatus === 'complete' && echarsData.Eci.length > 10) {\n\n            addClinical()\n        }\n        if (mellaConnectStatus === 'isMeasuring' && mellaStatus !== 'isMeasuring') {\n            setEcharsData(\n                {\n                    Eci: [],\n                    wen0: [],\n                    wen1: []\n                }\n            )\n\n        }\n        if (mellaConnectStatus === 'isMeasuring') {\n            setShowHistoryEchart(false)\n        }\n\n        setMellaStatus(mellaConnectStatus)\n\n\n\n    }, [mellaConnectStatus])\n    const addClinical = () => {\n        console.log('调用接口进行保存数据');\n        let emerData = []\n        let { Eci, wen0, wen1 } = echarsData\n        for (let i = 0; i < wen0.length; i++) {\n            const element = wen0[i];\n            let str = {\n                data0: element,\n                data1: wen1[i]\n            }\n            emerData.push(str)\n\n        }\n\n        saveHistoryTime && clearTimeout(saveHistoryTime)\n        saveHistoryTime = setTimeout(() => {\n            let BCS = bodyConditionScore === '' ? null : parseFloat(bodyConditionScore)\n            let hrartR = heartRate === '' ? null : parseFloat(heartRate)\n            let respireatoryR = respiratoryRate === '' ? null : parseFloat(respiratoryRate)\n\n            let roomT = roomTemperature === '' ? null : ((parseFloat(roomTemperature) - 32) / 1.8).toFixed(2)\n\n            let referenceT = referenceRectalTemperature === '' ? null : ((parseFloat(referenceRectalTemperature) - 32) / 1.8).toFixed(2)\n\n            let furL = furLength === '' ? null : parseFloat(furLength)\n\n\n\n            let petVitalId = 1\n\n            let datas = {\n\n                temperature: parseFloat(temperature),  //测量温度\n                roomTemperature: roomT,//室温\n                bodyConditionScore: BCS,//身体状况评分\n                heartRate: hrartR,//心率\n                respiratoryRate: respireatoryR,//呼吸率\n                referenceRectalTemperature: referenceT,//参考腹部温度\n                furLength: furL,//毛发长度\n                bloodPressure: bloodPressure,//血压\n                memo: notes,\n                petVitalTypeId: petVitalId,\n                clinicalDataEntityList: emerData\n            }\n            if (storage.roleId === `1`) {\n                datas.userId = storage.userId\n            } else {\n                datas.doctorId = storage.userId\n                datas.userId = storage.userId\n            }\n            let { petId, isWalkIn } = petDetailInfo\n            if (petId && !isWalkIn) {\n                datas.petId = petId\n                console.log('入参数据:', datas);\n                fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\n                    .then(res => {\n                        console.log(res);\n\n                        if (res.flag === true) {\n                            console.log('上传成功');\n                            message.success('Uploaded successfully')\n                            _getHistory11(petDetailInfo.petId)\n                        } else {\n                            console.log('上传失败');\n\n                            message.error('upload failed')\n                        }\n                    })\n                    .catch(err => {\n                        console.log(err);\n                        message.error('upload failed')\n\n\n                    })\n            } else if (isWalkIn) {\n                console.log('温度数据保存入参：', datas);\n\n                fetchRequest(`/clinical/addAllClinical`, 'POST', datas)\n                    .then(res => {\n\n                        if (res.flag === true) {\n\n                            message.success('Uploaded successfully')\n\n                            _getEmergencyHistory()\n                        } else {\n                            console.log('上传失败');\n                            message.error('upload failed')\n\n                        }\n                    })\n                    .catch(err => {\n                        console.log(err);\n                        message.error(err)\n\n                    })\n            }\n\n\n\n        }, 500)\n\n    }\n    const _getHistory11 = (petId) => {\n        let historys = []\n        setLoading(true)\n        fetchRequest(`/pet/getPetExamAndClinicalByPetId/${petId}`, 'GET', '')  //userID要自动的\n            .then(res => {\n                console.log('获取历史记录', res);\n                setLoading(false)\n\n\n                if (res.flag === true) {\n                    let datas = res.data\n                    console.log('-------', datas);\n                    for (let i = datas.length - 1; i >= 0; i--) {\n\n                        let data = datas[i]\n\n                        let { petId, examId, clinicalDatagroupId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo,\n                            bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity, modifiedTime } = data\n\n                        if (!clinicalDatagroupId) {\n                            continue\n                        }\n                        let Tem = temperature\n                        if (clinicalDataEntity) {\n                            Tem = Tem || clinicalDataEntity.data0\n                        }\n                        // console.log('==============', Tem);\n                        Tem = Tem ? Tem : 0\n\n\n                        let time = null\n                        if (modifiedTime && `${modifiedTime}` !== '' && `${modifiedTime}` !== `undefined`) {\n                            time = modifiedTime\n                        } else {\n                            time = createTime\n                        }\n                        let json = {\n                            time,\n                            Temp: Tem,\n                            placement: petVitalTypeId,\n                            note: memo,\n                            historyId: examId,\n                            bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\n                        }\n                        historys.push(json)\n\n\n                    }\n                    console.log('---', historys);\n                    let historyData = []\n                    for (let i = 0; i < historys.length; i++) {\n                        let history = historys[i]\n                        let { bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId, examId } = history\n                        // console.log('--------', history.placement);\n                        let placement = history.placement\n                        if (placement === null || placement === '') {\n                            placement = 1\n                        }\n                        let str = {\n                            date: moment(history.time).format('MMM DD'),\n                            time: moment(history.time).format('hh:mm A'),\n                            temp: history.Temp,\n                            placement,\n                            note: history.note,\n                            historyId: history.historyId,\n                            bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId,\n                            key: examId\n                        }\n                        historyData.push(str)\n                    }\n                    // this.setState({\n                    //     historyData\n                    // })\n                    setHistoryData(historyData)\n                }\n            })\n            .catch(err => {\n                this.setState({\n                    loading: false\n                })\n                console.log(err);\n            })\n\n    }\n    const _getEmergencyHistory = () => {\n\n        //封装的日期排序方法\n        function ForwardRankingDate(data, p) {\n            for (let i = 0; i < data.length - 1; i++) {\n                for (let j = 0; j < data.length - 1 - i; j++) {\n                    if (Date.parse(data[j][p]) < Date.parse(data[j + 1][p])) {\n                        var temp = data[j];\n                        data[j] = data[j + 1];\n                        data[j + 1] = temp;\n                    }\n                }\n            }\n            return data;\n        }\n        let historys = []\n        setLoading(true)\n        fetchRequest(`/pet/getPetExamByDoctorId/${storage.userId}`, 'GET', '')  //userID要自动的\n            .then(res => {\n                setLoading(false)\n                if (res.flag === true) {\n                    let datas = res.data\n                    for (let i = datas.length - 1; i >= 0; i--) {\n                        if (datas[i].petId === null) {\n                            let { petId, examId, userId, petVitalTypeId, temperature, roomTemperature, bloodPressure, memo, clinicalDatagroupId,\n                                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, createTime, clinicalDataEntity } = datas[i]\n                            let Tem = temperature\n                            try {\n                                Tem = temperature || clinicalDataEntity.data0\n                            } catch (error) {\n                                console.log('抛出的异常', error);\n                            }\n\n\n                            let str = {\n                                clinicalDatagroupId,\n                                createTime,\n                                date: moment(createTime).format('MMM DD'),\n                                time: moment(createTime).format('hh:mm A'),\n                                temp: parseInt(Tem * 10) / 10,\n                                placement: petVitalTypeId,\n                                note: memo,\n                                historyId: examId,\n                                bodyConditionScore, heartRate, respiratoryRate, referenceRectalTemperature, furLength, roomTemperature, bloodPressure, petId, userId\n                            }\n\n                            historys.push(str)\n                        }\n                    }\n\n                    //把所有数据拿完后做个排序\n\n                    let historyData = ForwardRankingDate(historys, \"createTime\");\n                    console.log('historyData:', historyData);\n                    setHistoryData(historyData)\n                }\n            })\n            .catch(err => {\n                setLoading(false)\n                console.log(err);\n            })\n\n    }\n\n\n\n    const getOption = () => {\n\n        let min, max;\n        if (units === '℃') {\n            min = 25\n            max = 45\n        } else {\n            min = 75\n            max = 115\n        }\n        let { Eci, wen0, wen1 } = echarsData\n\n        let option = {\n            color: ['#81b22f'],\n            tooltip: {\n                /*返回需要的信息*/\n                trigger: 'axis',\n                triggerOn: 'mousemove',\n                enterable: true,\n                formatter: function (param) {\n                    var value = param[0].value;\n                    // console.log('----para', param);\n                    return `<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 16px;padding-bottom: 7px;margin-bottom: 7px;\">Temp:${value.toFixed(1)}${units}</div>`\n                }\n            },\n            xAxis: {\n                name: 'SPL',\n                nameLocation: 'end',\n                nameTextStyle: {\n                    align: 'left',\n                },\n                type: 'category',\n                // data: [\"\", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,],\n                data: Eci,\n                // data:['','15miao','30miao'],\n                axisLine: {\n                    lineStyle: {\n                        // 设置x轴颜色\n                        color: '#A0A0A0',\n                        show: true\n                    }\n                },\n                // 设置X轴数据旋转倾斜\n                axisLabel: {\n                    rotate: 0, // 旋转角度\n                    interval: 29  //设置X轴数据间隔几个显示一个，为0表示都显示\n\n                },\n\n            },\n            yAxis: {\n                name: 'temperature',\n                type: 'value',\n                min, // 设置y轴刻度的最小值\n                max,  // 设置y轴刻度的最大值\n                splitNumber: 0,  // 设置y轴刻度间隔个数\n                nameTextStyle: {\n                    padding: [0, 0, 0, 8],\n                    // backgroundColor: 'pink',\n                    width: '1200px',\n                    // fontSize: 20,\n                    align: 'left',\n                },\n\n                axisLine: {\n                    lineStyle: {\n                        // 设置x轴颜色\n                        color: '#A0A0A0',\n                        show: true\n                    }\n                },\n                splitLine: {\n                    show: false\n                },\n            },\n            series: [{\n                name: '模拟数据',\n                type: 'line',\n                showSymbol: false,\n                hoverAnimation: false,\n                // data: [44, 40, 34, 29, 31, 33, 39, 39, 33, 25, 26, 32, 38, 39, 25, 30, 37],\n                data: wen0,\n                smooth: 0.5,\n                symbol: 'none',\n                // itemStyle: {\n                //     normal: {\n\n                //     }\n                // }\n                lineStyle: {        // 系列级个性化折线样式 \n                    width: 2,\n                    type: 'solid',\n                    color: {\n                        type: 'linear',\n                        x: 0,\n                        y: 1,\n                        x2: 0,\n                        y2: 0,\n                        colorStops: [{\n                            offset: 0.5, color: '#47C2ED' // 0% 处的颜色  蓝\n                        }, {\n                            offset: 1, color: '#78D35D' // 50% 处的颜色  绿\n                        },\n                            // {\n                            //   offset: 1, color: 'red' // 100% 处的颜色   红\n                            // }\n                        ],\n                        globalCoord: false // 缺省为 false\n                    }\n                },\n            }]\n        }\n        return option;\n    }\n    const _status = () => {\n        let text = '', unit = '', temColor = ''\n        let Temp = parseFloat(temperature)\n\n        if (mellaConnectStatus === 'disconnected') {\n            if (!showHistoryEchart) {\n                Temp = ''\n                text = 'disconnected'\n                temColor = '#3B3A3A'\n            } else {\n                text = 'disconnected'\n                temColor = '#3B3A3A'\n            }\n\n        } else {\n            text = 'connected'\n            temColor = '#3B3A3A'\n            if (Temp > 15) {\n                unit = units\n                if (Temp > 39) {\n                    text = 'High'\n                    temColor = '#E1206D'\n                } else if (Temp < 31) {\n                    text = 'Low'\n                    temColor = '#47C2ED'\n                } else {\n                    text = 'Normal'\n                    temColor = '#78D35D'\n                }\n            }\n        }\n\n\n\n        let temp = ''\n\n        if (`${Temp}` !== 'NaN' && Temp !== '') {\n            temp = units === '℉' ? parseInt((Temp * 1.8 + 32) * 10) / 10 : Temp.toFixed(1)\n        }\n        let lowFlog = false\n        if (unit === '℃') {\n            if (temp < 24.8) {\n                lowFlog = true\n            }\n        } else {\n            if (temp < 76.6) {\n                lowFlog = true\n            }\n        }\n\n\n\n        return (\n            <div className='Tem' style={{ color: temColor, right: px(30), bottom: mTop(120) }}>\n\n                {(mellaConnectStatus !== 'isMeasuring') ? (\n                    showHistoryEchart ? <>\n                        <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{units}</sup></span><br />\n                        {/* <span style={{ fontSize: px(22) }}>{text}</span> */}\n\n                        <span style={{ fontSize: px(22), color: '#8a8a8a' }}>{`History`}</span>\n                    </> :\n\n                        <>\n                            <span style={{ fontSize: px(36) }}>{temp < 3 ? null : temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\n                            <span style={{ fontSize: px(22) }}>{text}</span>\n                        </>\n                ) : (\n                    lowFlog ? (\n                        <>\n                            <span style={{ fontSize: px(36) }}>{'Low'}</span><br />\n\n                        </>\n                    ) : (\n                        <>\n                            <span style={{ fontSize: px(36) }}>{temp} <sup style={{ fontSize: px(18) }}>{unit}</sup></span><br />\n\n                        </>\n                    )\n\n                )}\n\n\n            </div>\n\n        )\n    }\n    const _foot = () => {\n        let lbgc = '', rbgc = ''\n        if (isPetCharacteristics) {\n            lbgc = 'rgba(25,173,228,0.5)'; rbgc = 'rgba(105,201,237,1)'\n        } else {\n            lbgc = 'rgba(105,201,237,1)'; rbgc = 'rgba(25,173,228,0.5)'\n        }\n        return (\n            <div className=\"clinical_foot\"  >\n                <div className=\"top\"\n                    style={{ height: px(40), }}\n                >\n\n                    <div className=\"foot_l\" style={{ backgroundColor: lbgc }} onClick={() => setIsPetCharacteristics(true)}>\n                        Pet Characteristics\n                    </div>\n                    <div className=\"foot_l\" style={{ backgroundColor: rbgc }} onClick={() => setIsPetCharacteristics(false)}>\n                        History\n                    </div>\n                </div>\n                {isPetCharacteristics ?\n                    _petCharacteristics() :\n                    _history()\n                }\n            </div >\n        )\n    }\n    const handleChange = index => {\n        console.log('---------', index);\n        setFurLength(index)\n    };\n    const _petCharacteristics = () => {\n\n        let placeholder = ''\n        switch (`${furLength}`) {\n            case '1': placeholder = 'smooth'; break;\n            case '2': placeholder = 'short'; break;\n            case '3': placeholder = 'medium'; break;\n            case '4': placeholder = 'long'; break;\n            default: break;\n        }\n\n        return (\n            <div className=\"petChaeacteristics\"\n                style={{ paddingLeft: px(10), paddingRight: px(10), height: '100%' }}\n            >\n                <div className=\"child\" style={{ marginTop: mTop(30), }}>\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n                        <p style={{ width: '150px' }}>Room Temperature: </p>\n                        <Input className='inp'\n                            // style={{ border: 'none', outline: 'medium' }}\n                            // style={{ width: px(105), height: mTop(33), fontSize: px(18), marginRight: px(6) }}\n\n                            value={`${roomTemperature}`}\n                            bordered={false}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                                setRoomTemperature(str)\n                            }}\n                        />\n                        <span style={{ position: 'absolute', top: \"5%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n                        <p style={{ width: '150px' }}>Reference Rectal Temperature: </p>\n                        <Input className='inp'\n                            // style={{ border: 'none', outline: 'medium' }}\n\n                            value={`${referenceRectalTemperature}`}\n                            bordered={false}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                                setReferenceRectalTemperature(str)\n                            }}\n                        />\n                        <span style={{ position: 'absolute', top: \"10%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>℉</span>\n                    </div>\n\n                </div>\n                <div className=\"child\">\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <p style={{ width: '150px' }}>Body Condition Score:  </p>\n                        <Input className='inp'\n                            style={{ border: 'none', outline: 'medium' }}\n\n                            value={bodyConditionScore}\n                            bordered={false}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                                setBodyConditionScore(str)\n                            }}\n                        />\n                    </div>\n                    <div className='furLength' >\n                        <p style={{ width: '150px' }}>Fur Length: </p>\n                        <Select\n                            placeholder\n                            onChange={handleChange}\n                            style={{ width: '105px', borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n                            value={placeholder}\n                        >\n                            <Option value=\"1\">smooth</Option>\n                            <Option value=\"2\">short</Option>\n                            <Option value=\"3\">medium</Option>\n                            <Option value=\"4\">long</Option>\n                        </Select>\n                    </div>\n\n\n                </div>\n                <div className=\"child\">\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\n                        <p style={{ width: '150px' }}>Heart Rate:  </p>\n                        <Input className='inp'\n                            style={{ border: 'none', outline: 'medium' }}\n                            value={`${heartRate}`}\n                            bordered={false}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                                setHeartRate(str)\n                            }}\n\n                        />\n                        <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\n                    </div>\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative' }}>\n                        <p style={{ width: '150px' }}>Blood Pressure:  </p>\n                        <Input className='inp'\n                            style={{ border: 'none', outline: 'medium' }}\n                            value={bloodPressure}\n                            bordered={false}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                                setBloodPressure(str)\n                            }}\n                        />\n                        <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '5px' }}>mm</span>\n                    </div>\n\n                </div>\n                <div className=\"child\" style={{ marginBottom: px(40) }}>\n                    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', position: 'relative', }}>\n                        <p style={{ width: '150px' }}>Respiratory Rate:  </p>\n                        <Input className='inp'\n                            style={{ border: 'none', outline: 'medium' }}\n                            value={`${respiratoryRate}`}\n                            bordered={false}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                                setRespiratoryRate(str)\n                            }}\n\n                        />\n                        <span style={{ position: 'absolute', top: \"2%\", right: '5%', display: 'table-cell', whiteSpace: 'nowrap', paddingTop: '5px', paddingRight: '1px' }}>bpm</span>\n                    </div>\n                    <div className='furLength' id='_bodyType'  >\n\n                    </div>\n                </div>\n\n\n            </div>\n        )\n    }\n    const _history = () => {\n\n        const _del = (key, record) => {\n            console.log('删除', key, record);\n\n\n            /**------------这里还要删除后台的数据------------ */\n            fetchRequest(`/pet/deletePetExamByExamId/${key}`, 'DELETE')\n                .then(res => {\n                    if (res.flag === true) {\n\n                        const historyData1 = [...historyData];\n                        console.log('删除成功', historyData1);\n                        setHistoryData(historyData1.filter(item => item.historyId !== key));\n                    } else {\n                        console.log('删除失败');\n                    }\n                })\n        }\n        const _edit = (key, record) => {\n\n            let { heartRate, bloodPressure, respiratoryRate, referenceRectalTemperature, roomTemperature, bodyConditionScore, furLength, note } = record\n            console.log('转换前：', record);\n            let editHeartRate = (heartRate !== null && heartRate !== undefined) ? heartRate : ''\n            let editBloodPressure = (bloodPressure !== null && bloodPressure !== undefined) ? bloodPressure : ''\n            let editRespiratoryRate = (respiratoryRate !== null && respiratoryRate !== undefined) ? respiratoryRate : ''\n            let editRectal = (referenceRectalTemperature !== null && referenceRectalTemperature !== undefined) ? (referenceRectalTemperature * 1.8 + 32).toFixed(1) : ''\n            let editRoomTemperature = (roomTemperature !== null && roomTemperature !== undefined) ? (roomTemperature * 1.8 + 32).toFixed(1) : ''\n            let editBodyConditionScore = (bodyConditionScore !== null && bodyConditionScore !== undefined) ? bodyConditionScore : ''\n            let editFurLength = furLength\n            let mome = note ? note : ''\n\n\n\n            console.log(editRectal,\n                editRoomTemperature,\n                editHeartRate,\n                editBloodPressure,\n                editRespiratoryRate);\n\n            //更新editRectal,editRoomTemperature,editHeartRate,editBloodPressure,editRespiratoryRate,editVisible: true,editId: key,memo: record.note,editBodyConditionScore,editFurLength\n            setEditRectal(editRectal)\n            setEditRoomTemperature(editRoomTemperature)\n            setEditHeartRate(editHeartRate)\n            setEditBloodPressure(editBloodPressure)\n            setEditRespiratoryRate(editRespiratoryRate)\n            setEditVisible(true)\n            setEditId(key)\n            setEditMemo(record.note)\n            setEditBodyConditionScore(editBodyConditionScore)\n            setEditFurLength(editFurLength)\n            setMemo(mome)\n\n\n\n\n\n\n        }\n        const see = (id, record) => {\n            console.log(id, record);\n            setTip('data is loading')\n            setTipSpin(true)\n\n            fetchRequest3(`/exam/getClinicalDataByExamId/${id}`, 'GET')\n                .then(res => {\n                    console.log('此条记录的全部数据：', res);\n                    setTip('')\n                    setTipSpin(false)\n                    if (res.flag) {\n                        let datas = res.data.clinicalDataEntityList\n\n\n                        if (datas) {\n\n                            let echarsData = {\n                                Eci: [],\n                                wen0: [],\n                                wen1: []\n                            }\n                            let { wen0, wen1, Eci } = echarsData\n                            for (let i = 0; i < datas.length; i++) {\n                                let { data0, data1 } = datas[i]\n\n\n                                Eci.push(i)\n                                if (units === '℃') {\n                                    wen0.push(data0)\n                                    wen1.push(data1)\n\n                                } else {\n                                    wen0.push(data0 * 1.8 + 32)\n                                    wen1.push(data1 * 1.8 + 32)\n                                }\n\n                            }\n                            let Temp = datas[datas.length - 1].data0 || ''\n                            console.log('----------------', Temp);\n                            setEcharsData(echarsData)\n                            setTemp(Temp)\n                            setShowHistoryEchart(true)\n                            const option = getOption();\n                            echartsElement.current.getEchartsInstance().setOption(option)  // 实时改变\n\n                        }\n\n                    }\n                })\n                .catch(err => {\n                    setTip('')\n                    setTipSpin(false)\n                    console.log(err);\n                })\n        }\n        const isflog = window.screen.height < 1000 ? true : false\n\n        const columns = [\n            {\n                title: '',\n                dataIndex: 'operation',\n                key: 'operation',\n                width: '16%',\n                className: `${isflog ? 'operation' : ''}`,\n                render: (text, record, index) => {\n                    // console.log('狩猎:', text, record, index);\n                    //record:\n                    return (\n                        <div style={{ display: 'flex', justifyContent: 'space-around', alignItems: 'center', padding: `${px(18)}px 0` }} >\n                            <Popconfirm title=\"Sure to delete?\" onConfirm={() => _del(record.historyId, record)}>\n                                <img src={del} alt=\"\" style={{ width: px(25) }} />\n                            </Popconfirm>\n                            {\n                                (petDetailInfo.isWalkIn) ? (\n                                    <div className=\"assign\"\n                                        style={{ width: mTop(60), height: mTop(28), fontSize: px(14) }}\n\n                                        onClick={() => {\n                                            console.log(text, record, index);\n                                            this.setState({\n                                                visible: true,\n                                                seleceEmergencies: record\n                                            })\n                                        }}>Assign</div>\n                                ) : (\n                                    <>\n                                        <img src={edit} alt=\"\" style={{ width: px(25) }}\n                                            onClick={() => _edit(record.historyId, record)}\n                                        />\n\n                                        <img src={start} alt=\"\" style={{ width: px(25) }}\n                                            onClick={() => see(record.historyId, record)}\n                                        />\n                                    </>\n                                )\n                            }\n\n\n                        </div>\n                    )\n\n                }\n            },\n            {\n                title: 'Date',\n                dataIndex: 'date',\n                key: 'date',\n                width: '14%',\n                className: `${isflog ? 'operation' : ''}`,\n                render: (text, record, index) => {\n\n                    return (\n                        <p style={{ textAlign: 'center' }}>{text}</p>\n                    )\n\n                }\n            },\n            {\n                title: 'Time',\n                dataIndex: 'time',\n                key: 'time',\n                width: '14%',\n                className: `${isflog ? 'operation' : ''}`,\n                render: (text, record, index) => {\n\n                    return (\n                        <p style={{ textAlign: 'center' }}>{text}</p>\n                    )\n\n                }\n            },\n            {\n                title: `Temp(${units})`,\n                // title: `Temp(℉)`,\n                key: 'temp',\n                dataIndex: 'temp',\n                className: `${isflog ? 'operation' : ''}`,\n                width: '14%',\n                render: (text, record, index) => {\n                    // console.log(text, record);\n\n                    /**\n                    * bag：温度数值前的圆圈的背景颜色\n                    * tem：展示的温度\n                    * endvalue:将从后台得到的数据全部转化成华氏度\n                    * min：猫的正常体温的左区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n                    * max：猫的正常体温的右区间,单位℉，后期要做的猫狗都行，这需要告诉我此宠物是猫还是狗\n                    * \n                    */\n\n\n                    let bag = '', tem = ''\n\n                    let endValue = text > 55 ? text : parseInt((text * 1.8 + 32) * 10) / 10\n                    let min = 100.4, max = 102.56\n\n\n\n\n\n\n                    if (endValue > max) {\n                        bag = '#E1206D'\n                    } else if (endValue < min) {\n                        bag = '#98DA86'\n                    } else {\n                        bag = '#58BDE6'\n                    }\n\n                    if (units === '℃') {\n                        if (text) {\n                            tem = `${text}${units}`\n                            if (text > 55) {\n\n                                tem = `${((text - 32) / 1.8).toFixed(1)}${units}`\n                            } else {\n                                tem = `${text.toFixed(1)}${units}`\n                            }\n                        }\n                    } else {\n                        if (text) {\n                            if (text > 55) {\n                                tem = `${text}${units}`\n                            } else {\n                                tem = `${parseInt((text * 1.8 + 32) * 10) / 10}${units}`\n                            }\n\n                        }\n                    }\n                    return (\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                            {tem ? <div style={{ width: '8px', height: '8px', borderRadius: '8px', backgroundColor: bag, marginRight: '3px' }} /> : null}\n                            <p style={{ margin: 0, padding: 0 }}>{tem}</p>\n                        </div>\n                    )\n\n                }\n            },\n            {\n                title: `Rectal Temperature`,\n                key: 'referenceRectalTemperature',\n                dataIndex: 'referenceRectalTemperature',\n                width: '15%',\n                className: `${isflog ? 'operation' : ''}`,\n                render: (text, record, index) => {\n                    // console.log('肛温的值：', text);\n                    let num = text\n                    if (text !== null) {\n                        num = (text * 1.8 + 32).toFixed(1)\n                    }\n\n                    return (\n                        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                            {text !== null && <p style={{ margin: 0, padding: 0 }}>{num} <span>{'℉'}</span></p>}\n\n                        </div>\n                    )\n\n                }\n            },\n            {\n                title: 'Placement',\n                dataIndex: 'placement',\n                key: 'placement',\n                align: 'center',\n                width: '15%',\n                className: `${isflog ? 'operation' : ''}`,\n                render: (text, record, index) => {\n                    switch (record.placement) {\n                        case 1: return (    //腋温\n                            <div>\n                                <img src={palcement_ye} alt=\"\" />\n                            </div>\n                        )\n                        case 3: return (     //肛温\n                            <div>\n                                <img src={placement_gang} alt=\"\" />\n                            </div>\n                        )\n                        case 2: return (     //肛温\n                            <div>\n                                <img src={placement_gang} alt=\"\" />\n                            </div>\n                        )\n                        case 4: return (    //耳温\n                            <div>\n                                <img src={placement_er} alt=\"\" />\n                            </div>\n                        )\n                        default: return null;\n                    }\n\n                }\n            },\n            {\n                title: 'Note',\n                dataIndex: 'note',\n                key: 'note',\n                width: '12%',\n                className: `${isflog ? 'operation' : ''}`,\n                render: (text, record, index) => {\n\n                    return (\n                        <p style={{ width: '100%' }}>{text}</p>\n                    )\n\n                }\n            },\n        ];\n\n\n\n        let hisHe = mTop(200)\n        try {\n            let historyElement = document.querySelectorAll('#clinicalMeasure11 .historyTable')\n            hisHe = historyElement[0].clientHeight - mTop(100)\n        } catch (error) {\n\n        }\n\n\n\n        return (\n            <div className='historyTable' style={{ height: '90%' }}>\n                <Table\n                    columns={columns}\n                    loading={loading}\n                    dataSource={historyData}\n                    rowKey={columns => columns.historyId}\n                    // pagination={{ pageSize: 3, showSizeChanger: false, showQuickJumper: true }}\n                    pagination={false}\n                    scroll={{\n                        y: hisHe\n                    }}\n                />\n            </div>\n\n        )\n    }\n    const _editModal = () => {\n\n        function save() {\n            let datas = {\n                memo: memo,\n                bodyConditionScore: parseInt(editBodyConditionScore),\n                furLength: parseInt(editFurLength),\n                heartRate: editHeartRate,\n                bloodPressure: editBloodPressure,\n                respiratoryRate: editRespiratoryRate\n            }\n            if (editRoomTemperature) {\n                datas.roomTemperature = ((parseFloat(editRoomTemperature) - 32) / 1.8).toFixed(2)\n            }\n            if (editRectal) {\n                datas.referenceRectalTemperature = ((parseFloat(editRectal) - 32) / 1.8).toFixed(2)\n            }\n\n            console.log('入参：', datas, editId);\n            setEditVisible(false)\n            setTip('Data is being modified')\n            setTipSpin(true)\n\n            fetchRequest(`/pet/updatePetExam/${editId}`, 'POST', datas)\n                .then(res => {\n                    console.log(res);\n                    setTipSpin(false)\n                    setTip('')\n                    message.success('Data modified successfully')\n\n                    _getHistory11(petDetailInfo.petId)\n                })\n                .catch(err => {\n                    setTipSpin(false)\n                    setTip('')\n\n                    message.success(' Data modification failed')\n\n                    console.log(err);\n                })\n\n        }\n\n\n\n        let furLength = ''\n        if (editFurLength !== null && editFurLength !== undefined) {\n            switch (`${editFurLength}`) {\n                case '1': furLength = 'smooth'; break;\n                case '2': furLength = 'short'; break;\n                case '3': furLength = 'medium'; break;\n                case '4': furLength = 'long'; break;\n\n                default:\n                    break;\n            }\n        }\n\n        return (\n            <Modal\n                title={\n                    <div\n                        style={{\n                            width: '100%',\n                            cursor: 'move',\n                            height: '20px',\n                            textAlign: 'center'\n                        }}\n                        onMouseOver={() => {\n                            if (disabled) {\n                                setDisabled(false)\n                            }\n                        }}\n                        onMouseOut={() => {\n                            setDisabled(true)\n                        }}\n\n                        onFocus={() => { }}\n                        onBlur={() => { }}\n                    // end\n                    >\n                        Modification history information\n                    </div>\n                }\n                visible={editVisible}\n                // visible={true}\n                onCancel={() => { setEditVisible(false) }}\n                modalRender={(modal) => (\n                    <Draggable\n                        disabled={disabled}\n                        bounds={bounds}\n                        onStart={(event, uiData) => this.onStart(event, uiData)}\n                    >\n                        <div >{modal}</div>\n                    </Draggable>\n                )}\n                footer={\n                    [] // 设置footer为空，去掉 取消 确定默认按钮\n                }\n                destroyOnClose={true}\n            >\n                <div id=\"selectEmergenciesModal\">\n\n                    <div className=\"selectEmergenciesModal\">\n                        <p style={{ width: '140px' }}>Room Temperature </p>\n                        <Input\n                            style={{ border: 'none', outline: 'medium' }}\n                            bordered={false}\n                            value={editRoomTemperature}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n\n                                setEditRoomTemperature(str)\n                            }}\n\n                        />\n                        <span>℉</span>\n                    </div>\n\n                    <div className=\"selectEmergenciesModal\">\n                        <p style={{ width: '140px' }}>Rectal Temperature</p>\n                        <Input\n                            style={{ border: 'none', outline: 'medium' }}\n                            bordered={false}\n                            value={editRectal}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d^\\.]+/g, '').replace(/\\.{2,}/g, \".\").replace(\".\", \"$#$\").replace(/\\./g, \"\").replace(\"$#$\", \".\").replace(/^(\\-)*(\\d+)\\.(\\d\\d).*$/, '$1$2.$3')\n                                setEditRectal(str)\n                            }}\n\n                        />\n                        <span>℉</span>\n                    </div>\n\n                    <div className=\"selectEmergenciesModal\">\n                        <p style={{ width: '140px' }}>Body Condition Score</p>\n                        <Input\n                            style={{ border: 'none', outline: 'medium' }}\n                            bordered={false}\n                            value={editBodyConditionScore}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d]/g, '')\n\n                                setEditBodyConditionScore(str)\n                            }}\n\n                        />\n                    </div>\n\n                    <div className='bodyType11' >\n                        <p style={{ width: '140px' }}>Fur Length: </p>\n                        <Select\n                            placeholder\n                            onChange={(index) => {\n                                console.log(index);\n                                setEditFurLength(index)\n                            }}\n                            style={{ borderRadius: '40px', height: '33px', outline: 'none', borderWidth: 0 }}\n                            value={furLength}\n                        >\n                            <Option value=\"1\">smooth</Option>\n                            <Option value=\"2\">short</Option>\n                            <Option value=\"3\">medium</Option>\n                            <Option value=\"4\">long</Option>\n                        </Select>\n                    </div>\n\n\n\n                    <div className=\"selectEmergenciesModal\">\n                        <p style={{ width: '140px' }}>Heart Rate: </p>\n                        <Input\n                            style={{ border: 'none', outline: 'medium' }}\n                            bordered={false}\n                            value={editHeartRate}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d]/g, '')\n                                setEditHeartRate(str)\n\n                            }}\n\n                        />\n                        <span>bpm</span>\n                    </div>\n\n\n                    <div className=\"selectEmergenciesModal\">\n                        <p style={{ width: '140px' }}>Blood Pressure </p>\n                        <Input\n                            style={{ border: 'none', outline: 'medium' }}\n                            bordered={false}\n                            value={editBloodPressure}\n                            onChange={(item) => {\n                                setEditBloodPressure(item.target.value)\n                            }}\n\n                        />\n                        <span>mm</span>\n                    </div>\n\n\n\n\n\n                    <div className=\"selectEmergenciesModal\">\n                        <p style={{ width: '140px' }}>Respiratory Rate: </p>\n                        <Input\n                            style={{ border: 'none', outline: 'medium' }}\n                            bordered={false}\n                            value={editRespiratoryRate}\n                            onChange={(item) => {\n                                let str = item.target.value.replace(/[^\\d]/g, '')\n                                setEditRespiratoryRate(str)\n\n                            }}\n\n                        />\n                        <span>bpm</span>\n                    </div>\n\n\n\n\n\n\n\n\n\n\n\n\n\n                    <div className=\"selectEmergenciesModal\">\n                        <p style={{ width: '80px' }}>Notes</p>\n                        <textarea\n                            rows=\"2\"\n                            cols=\"40\"\n                            style={{ textIndent: '10px' }}\n                            value={memo}\n                            onChange={(val) => {\n                                setMemo(val.target.value)\n                            }}\n\n                        >\n                        </textarea>\n                    </div>\n\n                    <div className=\"btn\" onClick={save}>Save</div>\n                </div>\n\n            </Modal>\n\n\n\n        )\n\n    }\n\n\n\n\n    return (\n\n        <div id=\"clinical\" style={{ height: bodyHeight, minWidth: px(200), minHeight: bodyHeight, overflow: 'hidden' }} ref={clinicalRef}>\n            <div className=\"clinicalTitle\">\n                <Layout>\n                    <HeaderItem />\n                </Layout>\n            </div>\n            <div className='clinicalBody' style={{ width: '100%', height: bodyHeight - devicesTitleHeight }}>\n                <div className='clinical_top'  >\n                    <div className=\"r\" >\n                        {mellaConnectStatus === 'disconnected' && <div className=\"bb1\"\n                        // style={{ left: px(150) }}\n                        >\n                            <div className=\"btn78\"\n                                style={{ width: px(220), height: mTop(30), fontSize: px(16) }}\n                                onClick={() => {\n                                    console.log('点击了切换按钮');\n\n                                    if (resyncDeviceIsClick === true) {\n                                        resyncDeviceIsClick = false\n                                        console.log('发送给主进程切换按钮');\n                                        let ipcRenderer = require('electron').ipcRenderer;\n                                        ipcRenderer.send('qiehuan')\n                                        const time = setTimeout(() => {\n                                            resyncDeviceIsClick = true\n                                            clearTimeout(time)\n                                        }, 2500)\n                                    }\n\n\n\n                                }}\n                            >Re-sync Base</div>\n                        </div>}\n\n\n                        <div id='myCharts'\n                            style={{ marginTop: mTop(50), width: windowWidth }}\n\n                        >\n                            <ReactECharts\n\n                                option={getOption()} theme=\"Imooc\" style={{ height: mTop(380), }}\n                                notMerge={true}\n                                lazyUpdate={true}\n                                // theme={\"theme_name\"}\n                                ref={echartsElement}\n                            />\n\n                            {_status()}\n                        </div>\n\n                        {/* 底部宠物信息 */}\n                        {_foot()}\n                        {_editModal()}\n\n                        {\n                            tipSpin &&\n                            // true &&\n                            <div className=\"modal\">\n                                <div className=\"loadIcon\" style={{ marginBottom: px(5) }}>\n                                    <LoadingOutlined style={{ fontSize: 30, color: '#fff', marginTop: mTop(-30), }} />\n\n\n                                </div>\n                                <p>\n                                    data is loading...\n                                </p>\n                            </div>\n                        }\n\n\n\n\n\n\n\n                    </div>\n                </div>\n\n            </div>\n        </div>\n\n    )\n}\nClinicalStudy.propTypes = {\n    bodyHeight: propTypes.number,\n}\nClinicalStudy.defaultProps = {\n    bodyHeight: 0,\n}\nexport default connect(\n    state => ({\n        mellaConnectStatus: state.hardwareReduce.mellaConnectStatus,\n        mellaMeasureValue: state.hardwareReduce.mellaMeasureValue,\n        mellaMeasureNum: state.hardwareReduce.mellaMeasureNum,\n\n        petDetailInfo: state.petReduce.petDetailInfo,\n    }),\n    {}\n)(ClinicalStudy);\n\n\n\n\n",["182","183"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/heard/Heard.js",["184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectScheduledExam.jsx",["216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorAddPet/DoctorAddPet.jsx",["244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/invite/Invite.jsx",["269","270","271","272","273","274","275"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/temporaryStorage.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/slider/Slider.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/index.jsx",["276","277","278","279"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil3.js",["280","281","282","283"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/selectionBox/SelectionBox.jsx",["284"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/App.js",["285","286"],"import React, { Component } from 'react'\n\nimport { BrowserRouter, Switch, Route, HashRouter } from 'react-router-dom'\n\nimport Home from './components/home/Home'\nimport Choose from './components/choose/Choose'\nimport EzyVetLogin from './components/ezyVetLogin/EzyVetLogin'\nimport EzyVetSelectTime from './components/ezyVetSelectTime/EzyVetSelectTime'\nimport SelectMella from './components/selectMella/SelectMella'\nimport APIkey from './components/apiKey/APIKey'\nimport VerifyOrganizationInformation from './components/selectLocation/VerifyOrganizationInformation'\nimport EzyVetSelectExam from './components/ezyVetSelectExam/EzyVetSelectExam'\nimport DoctorSelectExam from './components/doctorSelectExam/DoctorSelectScheduledExam'\n\nimport DoctorSelectAllExam from './components/doctorSelectExam/DoctorSelectAllExam'\nimport Praviders from './components/praviders/Praviders'\nimport SelectExam from \"./components/selectExam/SelectExam\";\n\nimport Mesasure from \"./components/measure/Mesasure\";\nimport NorMalMeasurement from \"./components/measure/NorMalMeasurement\";\n\nimport MaxMinReturn from './utils/maxminreturn/MaxMinReturn'\nimport EditPetInfo from './components/editPetInfo/EditPetInfo'\nimport WorkPlace from './components/workPlace/WorkPlace'\n\nimport DoctorAddPet from './components/doctorAddPet/DoctorAddPet'\nimport AddYuding from './components/doctorSelectExam/AddYuding'\n//登录部分\nimport SignIn from './components/signIn/SignIn'\nimport ForgotPassword from './components/signIn/forgotPassword/ForgotPassword'\nimport ResetPassword from './components/signIn/resetPassword/ResetPassword'\n\nimport ScanCodeLogin from './components/signIn/scanCodeLogin/ScanCodeLogin'\n\n//邮箱注册的整体部分\nimport VetPrifile from './components/createAccount/vetProfile/VetPrifile'\nimport JoinOrganizationByOption from './components/createAccount/joinOrganizationByOption/JoinOrganizationByOption'\nimport FindMyOrganization from './components/createAccount/findMyOrganization/FindMyOrganization'\nimport FindMyWorkplace from './components/createAccount/findMyWorkplace/FindMyWorkplace'\nimport IsHavePMS from './components/createAccount/ishavePMS/IsHavePMS'\nimport VerifyEmail from './components/createAccount/verifyEmail/index'\nimport NewOrganization from './components/createAccount/newOrganization/NewOrganization'\nimport NewWorkplace from './components/createAccount/newWorkplace/NewWorkplace'\n\nimport InviteTeam from './components/createAccount/inviteTeam/InviteTeam'\n\n//options\nimport Help from './components/menuOptions/help/Help'\nimport Unassigned from './components/menuOptions/unassigned/Unassigned'\nimport Settings from './components/menuOptions/settings/Settings'\nimport AdvancedSettings from './components/menuOptions/advancedSettings/AdvancedSettings'\nimport Invite from './components/menuOptions/invite/Invite'\nimport PetAndParents from './components/menuOptions/petAndParents/PetAndParents'\nimport EditParent from './components/menuOptions/editParent/EditParent'\n// import AdminAddPet from './components/menuOptions/adminAddPet/AdminAddPet'\nimport Veterinarians from './components/menuOptions/admin_VetProfile/Veterinarians'\nimport AddDevice from './components/menuOptions/addDevice/AddDevice'\nimport ConnectWorkplace from './components/menuOptions/orgAndPractice/ConnectWorkplace'\nimport NewOrg from './components/menuOptions/orgAndPractice/NewOrganization'\nimport Team from './components/menuOptions/orgAndPractice/InviteTeam'\n\nimport MainBody from './components/mainbody'\n\n\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/page1\" component={Choose} />\n          <Route exact path=\"/ezyVetLogin\" component={EzyVetLogin} />\n          <Route exact path=\"/EzyVetSelectTime\" component={EzyVetSelectTime} />\n          <Route exact path=\"/EzyVetSelectExam\" component={EzyVetSelectExam} />\n          <Route exact path=\"/page2\" component={APIkey} />\n          <Route exact path=\"/page3\" component={VerifyOrganizationInformation} />\n          <Route exact path=\"/page4\" component={SelectMella} />\n\n\n          <Route exact path=\"/VetSpireSelectExam\" component={SelectExam} />\n          <Route exact path=\"/page7\" component={MaxMinReturn} />\n\n          <Route exact path=\"/page8\" component={Mesasure} />\n          <Route exact path=\"/page9\" component={EditPetInfo} />\n          <Route exact path=\"/page10\" component={NorMalMeasurement} />\n          {/* <Route exact path=\"/page10\" component={MainBody} /> */}\n          <Route exact path=\"/MainBody\" component={MainBody} />\n\n\n\n          <Route exact path=\"/page12\" component={WorkPlace} />\n          <Route exact path=\"/AddYuding\" component={AddYuding} />\n\n\n          <Route exact path=\"/page11\" component={SignIn} />\n          <Route exact path=\"/user/login/forgotPassword\" component={ForgotPassword} />\n          <Route exact path=\"/user/login/resetPassword\" component={ResetPassword} />\n          <Route exact path=\"/user/login/scanCodeLogin\" component={ScanCodeLogin} />\n\n          <Route exact path=\"/uesr/logUp/FindMyOrganization\" component={FindMyOrganization} />\n          <Route exact path=\"/uesr/logUp/FindMyWorkplace\" component={FindMyWorkplace} />\n          <Route exact path=\"/uesr/logUp/VetPrifile\" component={VetPrifile} />\n          <Route exact path=\"/uesr/logUp/JoinOrganizationByOption\" component={JoinOrganizationByOption} />\n          <Route exact path=\"/uesr/logUp/isHavePMS\" component={IsHavePMS} />\n          <Route exact path=\"/uesr/logUp/VerifyEmail\" component={VerifyEmail} />\n          <Route exact path=\"/uesr/logUp/NewOrganization\" component={NewOrganization} />\n          <Route exact path=\"/uesr/logUp/NewWorkplace\" component={NewWorkplace} />\n          <Route exact path=\"/uesr/logUp/InviteTeam\" component={InviteTeam} />\n\n\n\n\n\n          <Route exact path=\"/uesr/selectExam\" component={DoctorSelectExam} />\n          <Route exact path=\"/uesr/DoctorSelectAllExam\" component={DoctorSelectAllExam} />\n\n\n\n\n\n\n\n          <Route exact path=\"/pet/doctorAddPet\" component={DoctorAddPet} />\n\n          {/* options */}\n          <Route exact path=\"/menuOptions/help\" component={Help} />\n          <Route exact path=\"/menuOptions/unassigned\" component={Unassigned} />\n          <Route exact path=\"/menuOptions/settings\" component={Settings} />\n          <Route exact path=\"/menuOptions/advancedsettings\" component={AdvancedSettings} />\n          <Route exact path=\"/menuOptions/invite\" component={Invite} />\n          <Route exact path=\"/menuOptions/petAndParents\" component={PetAndParents} />\n          <Route exact path=\"/menuOptions/editParent\" component={EditParent} />\n          {/* <Route exact path=\"/menuOptions/adminAddPet\" component={AdminAddPet} /> */}\n          <Route exact path=\"/menuOptions/veterinarians\" component={Veterinarians} />\n          <Route exact path=\"/menuOptions/AddDevice\" component={AddDevice} />\n          <Route exact path=\"/menuOptions/ConnectWorkplace\" component={ConnectWorkplace} />\n          <Route exact path=\"/menuOptions/NewOrg\" component={NewOrg} />\n          <Route exact path=\"/menuOptions/Team\" component={Team} />\n\n\n\n\n\n\n\n\n        </Switch>\n      </HashRouter>\n    )\n  }\n}\nexport default App",["287","288"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/doctorSelectExam/DoctorSelectAllExam.jsx",["289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316"],"////这是普通用户的选择界面，后期集成时候别忘了identity，进入测量界面的身份，是vetspire、ezyvet、普通医生\nimport React, { Component } from 'react'\nimport {\n  Table,\n  Input,\n  Button,\n  Space,\n  message,\n  Menu,\n  Modal,\n  Select,\n  ConfigProvider\n\n} from 'antd';\nimport Draggable from \"react-draggable\";\nimport Button1 from '../../utils/button/Button'\nimport moment from 'moment'\n//import 'antd/dist/antd.css';\nimport Heard from '../../utils/heard/Heard'\nimport { SyncOutlined, createFromIconfontCN } from '@ant-design/icons';\nimport MaxMin from '../../utils/maxminreturn/MaxMinReturn'\nimport './doctorSelectExam.less'\n\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { FetchEszVet } from '../../utils/FetchEszVet'\nimport { fetchRequest } from '../../utils/FetchUtil1'\nimport gender from '../../utils/gender'\nimport temporaryStorage from '../../utils/temporaryStorage';\nimport { MTop, mTop, pX, px, win } from '../../utils/px';\nimport { stopBubble } from '../../utils/current'\nimport { fetchRequest4 } from '../../utils/FetchUtil4';\nimport { fetchRhapsody } from '../../utils/FetchUtil5';\nimport jinggao from './../../assets/img/jinggao.png'\nimport redclose from './../../assets/img/redclose.png'\nimport blackTriangle from './../../assets/img/blackTriangle.png'\nimport refresh from './../../assets/img/Refresh.png'\nimport SelectionBox from '../../utils/selectionBox/SelectionBox'\n\nimport electronStore from '../../utils/electronStore';\n\nconst { SubMenu } = Menu;\nconst MyIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_2326495_7b2bscbhvvt.js'\n})\nlet storage = window.localStorage;\n\n\n\nexport default class DoctorSelectAllExam extends Component {\n  state = {\n    loading: false,\n    api: '',\n    id: '',  //选择location的id\n    locations: [],\n    data: [],\n    searchData: [],\n    searchText: '',\n    searchedColumn: '',\n    seleceID: '',  //宠物医生id\n    spin: false,   //刷新按钮是否旋转\n    unixToURI: '',\n    ezyVetToken: '',\n    current: 1,\n    closebgc: '',\n    minbgc: '',\n    closeColor: '',\n    heardSearchText: '',\n\n    isNotFound: true,\n    modalVis: false,\n\n    disabled: true,       //model是否可拖拽\n    bounds: { left: 0, top: 0, bottom: 0, right: 0 },\n\n    sortBy: 'Time',\n    showsortBy: false\n  }\n  componentWillMount () {\n    // console.log('------------', this.props.location.listDate);\n    try {\n      if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\n        // console.log('------------', this.props.location);\n        let data = JSON.parse(this.props.location.listDate)\n        this.setState({\n          data,\n        })\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount () {\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    // ipcRenderer.send('big')\n    message.destroy()\n\n\n\n    storage.identity = '3'\n\n    if ((this.props.location.listDate && this.props.location.listDate !== 'undefined')) {\n      let data = JSON.parse(this.props.location.listDate)\n      this.setState({\n        data,\n      })\n    } else {\n      this.setState({\n        loading: true,\n      })\n    }\n    this._getExam()\n    temporaryStorage.logupVetInfo = {}\n    temporaryStorage.logupSelectOrganization = {}\n    temporaryStorage.logupSuccessData = {}\n    temporaryStorage.logupOrganization = {}\n    temporaryStorage.logupEmailCode = ''\n\n    ipcRenderer.on('changeFenBianLv', this.changeFenBianLv)\n\n\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\n    for (let i = 0; i < items.length; i++) {\n      let style = items[i].style\n      style.padding = \"5px 5px\"\n      style.textAlign = 'center'\n\n\n    }\n\n  }\n  componentWillUnmount () {\n    message.destroy()\n    let ipcRenderer = window.electron.ipcRenderer\n\n    ipcRenderer.removeListener('changeFenBianLv', this.changeFenBianLv)\n  }\n  changeFenBianLv = (e) => {\n    console.log(e);\n    let ipcRenderer = window.electron.ipcRenderer\n    let { height, width } = window.screen\n    let windowsHeight = height > width ? width : height\n    console.log(windowsHeight, height, width);\n    if (windowsHeight < 900) {\n      ipcRenderer.send('table', win())\n    } else {\n      ipcRenderer.send('big', win())\n    }\n    this.setState({\n\n    })\n  }\n\n  rhapsody = async (patientsArr) => {\n\n    // console.log(patientsArr);\n    let dataArr = []\n    try {\n      for (let i = 0; i < patientsArr.length; i++) {\n        let params = { query: `query { patient (id:\"${patientsArr[i].patientId}\") {  vitals { data{ id, weight{value}, createdAt, updatedAt}}}}` }\n        let item = await fetchRhapsody('', 'POST', params, storage.connectionKey)\n        if (item.data) {\n\n          let { vitals } = item.data.patient\n          let vitalData = vitals.data\n          console.log('-----------', vitalData);\n          let weight = ''\n          if (vitalData.length > 0) {\n            vitalData.sort((a, b) => {\n              return moment(parseInt(a.createdAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.createdAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n            })\n            if (vitalData[0].weight && vitalData[0].weight.value) {\n              patientsArr[i].weight = (vitalData[0].weight.value * 0.45).toFixed(1)\n            }\n          }\n\n        }\n\n      }\n      console.log(patientsArr);\n      patientsArr.sort((a, b) => {\n        return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n      })\n      this.setState({\n        data: patientsArr,\n        loading: false\n      })\n\n      electronStore.set('doctorExam', patientsArr)\n    } catch (error) {\n      this.setState({\n        loading: false,\n      })\n      message.destroy()\n      message.error('Medical record acquisition failed')\n    }\n\n\n  }\n\n  _getExam = async () => {\n    console.log('进来了');\n\n\n\n\n\n    //现在Rhapsody组织数据还没有集成到后台，因此这里就先做临时处理\n    if (storage.lastOrganization === '34') {\n\n      console.log(storage.connectionKey);\n      //1.获取用户id\n\n      let params = { query: `query { business { id, name, state } }` }\n      fetchRhapsody('', 'POST', params, storage.connectionKey)\n\n        .then(res => {\n          console.log('---', res);\n          if (res.errors) {\n            this.setState({\n              loading: false,\n              spin: false\n            })\n            message.destroy()\n            message.error('Data acquisition failed')\n\n          } else {\n            console.log('获取到了businessId');\n            let businessId = res.data.business.id\n            // let param = {\n            //   query: `query  { patients (businessId:\"${businessId}\") { data{ id, clientId, name,gender, dateOfBirth\n            //   species{id,name},\n            //   breeds{id,name},\n            //   createdAt,owners{owner{firstName,lastName} }}}` }\n            let param = {\n              query: `query { \n                patients (businessId:\"${businessId}\") {\n                    data{ \n                         id, \n                         clientId, \n                         businessId, \n                         name  \n                         gender,\n                         dateOfBirth,\n                         species{id,name},\n                         breeds{id,name},\n                         createdAt ,\n                         owners{owner{firstName,lastName}}\n                    }\n                }\n            }`\n            }\n\n            console.log('获取病历单的入参', param, JSON.stringify(param));\n            fetchRhapsody('', 'POST', param, storage.connectionKey)\n              .then(res => {\n                console.log(res);\n                if (res.errors) {\n                  this.setState({\n                    loading: false,\n                    spin: false\n                  })\n                  message.destroy()\n                  message.error('Failed to get pet list')\n\n                } else {\n                  let patientsArr = res.data.patients.data\n                  let dataArr = []\n                  for (let i = 0; i < patientsArr.length; i++) {\n                    const patient = patientsArr[i];\n                    let { id, name, gender, dateOfBirth, breeds, owners, createdAt } = patient\n\n                    createdAt = moment(createdAt).format('X')\n                    let owner = 'unknown'\n                    if (owners.length > 0) {\n                      let ownerItem = owners[0]\n                      if (ownerItem && ownerItem.owner) {\n                        let { firstName, lastName } = ownerItem.owner\n                        if (firstName || lastName) {\n                          owner = `${lastName} ${firstName}`\n                        }\n                      }\n\n                    }\n\n                    let breed = 'unknown'\n                    if (breeds.length > 0 && breeds[0].name) {\n                      breed = breeds[0].name\n                    }\n\n                    let petAge = 'unknown'\n                    if (dateOfBirth) {\n                      petAge = moment(new Date()).diff(moment(dateOfBirth), 'years')\n                      // console.log('petAge', petAge);\n                    }\n\n                    let json = {\n                      insertedAt: createdAt,\n                      patientId: id,\n                      petName: name,\n                      owner,\n                      breed,\n                      gender: gender || 'unknown',\n                      age: petAge,\n                      petId: '',\n                      id: `${i}`,\n                      weight: null,\n                      rfid: null,\n                      url: null,\n                      speciesId: null,\n                    }\n                    dataArr.push(json)\n\n\n                  }\n\n                  console.log(dataArr);\n\n\n\n                  this.rhapsody(dataArr)\n                }\n\n              })\n              .catch(err => {\n                console.log(err);\n                this.setState({\n                  loading: false,\n                  spin: false\n                })\n                message.destroy()\n                message.error('Failed to get pet list')\n              })\n          }\n        })\n        .catch(err => {\n          console.log(err);\n          this.setState({\n            loading: false,\n            spin: false\n          })\n          message.destroy()\n          message.error('Data acquisition failed')\n        })\n\n\n\n\n      return\n    }\n\n\n\n\n\n\n\n\n    let params = {\n      doctorId: storage.userId,\n      offset: 0,\n      size: 100,\n    }\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    if (storage.lastOrganization) {\n      params.organizationId = storage.lastOrganization\n    }\n\n\n\n\n\n\n\n\n\n\n\n    console.log('查询宠物的入参', params);\n    const isUnKnow = (val) => {\n      if (val) {\n        return val\n      } else {\n        return 'unknown'\n      }\n    }\n\n    fetchRequest('/user/listAllPetInfo', 'GET', params)\n      // fetchRequest('/new/pet/subscribe/page', 'POST', params)\n\n      .then(res => {\n        console.log('查询到的宠物列表,/user/listAllPetInfo', res);\n\n        if (res.flag === true && res.data) {\n          let data = []\n          let oldList = res.data\n          // let oldList = res.data.list\n          for (let i = 0; i < oldList.length; i++) {\n            let { age, url, createTime, patientId, speciesId, petName, firstName, birthday, lastName, breedName, gender, petId, weight, rfid, l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference, pethubId, macId,\n              h2tLength, torsoLength } = oldList[i]\n            let owner = ''\n            patientId = isUnKnow(patientId)\n            petName = isUnKnow(petName)\n            breedName = isUnKnow(breedName)\n            age = isUnKnow(age)\n            weight = isUnKnow(weight)\n            if (!firstName) {\n              firstName = ''\n            }\n            if (!lastName) {\n              lastName = ''\n            }\n            if (lastName === '' && firstName === '') {\n              owner = 'unknown'\n            } else {\n              owner = `${lastName} ${firstName}`\n            }\n            createTime = moment(createTime).format('X')\n            let petGender = ''\n            switch (`${gender}`) {\n              case '1': petGender = 'F'\n\n                break;\n              case '0': petGender = \"M\"\n                break;\n              default: petGender = 'unknown'\n                break;\n            }\n            let petAge = 'unknown'\n            if (birthday) {\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\n            }\n\n            let json = {\n              insertedAt: createTime,\n              patientId,\n              petName,\n              owner,\n              breed: breedName,\n              gender: petGender,\n              age: petAge,\n              petId,\n              id: i,\n              weight,\n              rfid,\n              url,\n              speciesId,\n              l2rarmDistance, neckCircumference, upperTorsoCircumference, lowerTorsoCircumference,\n              h2tLength, torsoLength,\n              pethubId, macId,\n\n            }\n            data.push(json)\n\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          console.log('列表的数据：', data);\n          storage.doctorList = JSON.stringify(data)\n          this.setState({\n            data,\n            loading: false,\n            spin: false\n          })\n\n          electronStore.set('doctorExam', data)\n\n\n        } else {\n          this.setState({\n            loading: false,\n            spin: false\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false,\n          spin: false\n        })\n      })\n\n\n\n  }\n\n\n  getColumnSearchProps = dataIndex => ({\n    //dataIndex 是标题名称\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => ( //通过 filterDropdown 自定义的列筛选功能，并实现一个搜索列的示例。\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    //自定义Icon\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    //\t本地模式下，确定筛选的运行函数 value:输入框里输入的内容     record:所有的项，相当于遍历\n    onFilter: (value, record) => {\n      console.log(value, record, dataIndex);\n      return record[dataIndex]\n        ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\n        : ''\n    },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select(), 100);\n      }\n    },\n    render: text =>\n      this.state.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[this.state.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n  _refresh = () => {\n    console.log('点击了');\n    this.setState({\n      spin: true\n    })\n    // this._getData()\n    this._getExam()\n  }\n\n  /**------------------顶部start------------------------ */\n  _close = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('关闭程序');\n    ipcRenderer.send('window-close')\n  }\n  _min = () => {\n    let ipcRenderer = window.electron.ipcRenderer\n    console.log('最小化程序');\n    ipcRenderer.send('window-min')\n    this.setState({\n      minbgc: '',\n    })\n  }\n  _minMove = () => {\n\n    this.setState({\n      minbgc: 'rgb(211, 205, 205)'\n    })\n  }\n  _minLeave = () => {\n    this.setState({\n      minbgc: ''\n    })\n  }\n  _closeMove = () => {\n    this.setState({\n      closeColor: 'red',\n      closebgc: '#fff'\n    })\n  }\n  _closeLeave = () => {\n    this.setState({\n      closeColor: '#fff',\n      closebgc: ''\n    })\n  }\n\n  handleClick = e => {\n    console.log('click ', e);\n\n    switch (e.key) {\n      case '1': this.props.history.push('/page11'); break;\n      case '2': this.props.history.push('/'); break;\n      case '3':\n        try {\n\n          let selectNum = document.getElementsByClassName('ant-pagination-item-active')\n          // storage.defaultCurrent = selectNum[0].title\n          storage.doctorList = JSON.stringify(this.state.data)\n        } catch (error) {\n          console.log('错误信息', error);\n        }\n\n\n        this.props.history.push('/page8'); break;\n      case '4': this.props.history.push('/page12'); break;\n\n      default:\n        break;\n    }\n\n  };\n\n  _search1 = (search) => {       //这个是搜索调用后台的函数，现在废弃20210929\n    let params = {\n      doctorId: storage.userId,\n      petName: search,\n    }\n    this.setState({\n      loading: true\n    })\n    if (storage.lastWorkplaceId) {\n      params.workplaceId = storage.lastWorkplaceId\n    }\n    const isUnKnow = (val) => {\n      if (val) {\n        return val\n      } else {\n        return 'unknown'\n      }\n    }\n    console.log('搜索的数据', params);\n    fetchRequest('/pet/listPetsLike', \"POST\", params)\n      .then(res => {\n        console.log(res);\n\n        if (res.flag === true) {\n          let data = []\n          for (let i = 0; i < res.data.length; i++) {\n            let { age, createTime, patientId, petName, firstName, birthday, lastName, breedName, gender, petId, weight } = res.data[i]\n            let owner = ''\n            patientId = isUnKnow(patientId)\n            petName = isUnKnow(petName)\n            breedName = isUnKnow(breedName)\n            age = isUnKnow(age)\n            weight = isUnKnow(weight)\n            if (!firstName) {\n              firstName = ''\n            }\n            if (!lastName) {\n              lastName = ''\n            }\n            if (lastName === '' && firstName === '') {\n              owner = 'unknown'\n            } else {\n              owner = `${lastName} ${firstName}`\n            }\n            createTime = moment(createTime).format('X')\n            let petGender = ''\n            switch (`${gender}`) {\n              case '1': petGender = 'F'\n\n                break;\n              case '0': petGender = \"M\"\n                break;\n              default: petGender = 'unknown'\n                break;\n            }\n            let petAge = 'unknown'\n            if (birthday) {\n              petAge = moment(new Date()).diff(moment(birthday), 'years')\n              // console.log('petAge', petAge);\n            }\n\n            let json = {\n              insertedAt: createTime,\n              patientId,\n              petName,\n              owner,\n              breed: breedName,\n              gender: petGender,\n              age: petAge,\n              petId,\n              id: i,\n              weight\n\n            }\n            data.push(json)\n\n          }\n          data.sort((a, b) => {\n            return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1\n          })\n          this.setState({\n            searchData: data,\n            loading: false\n          })\n        } else {\n          this.setState({\n            searchData: [],\n            loading: false\n          })\n        }\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({\n          loading: false\n        })\n      })\n  }\n\n  _search = (keyWord) => {       //这个是搜索功能 ，怎么展示列表的内容进行搜索\n\n    /**\n     * 使用indexof方法实现模糊查询\n     *     语法：stringObject.indexOf(searchvalue, fromindex)\n     *   参数：searchvalue 必需。规定需检索的字符串值。 fromindex 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是 0 到 stringObject.length - 1。如省略该参数，则将从字符串的首字符开始检索。\n     *    说明：该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 searchvalue。开始检索的位置在字符串的 fromindex 处或字符串的开头（没有指定 fromindex 时）。如果找到一个 searchvalue，则返回 searchvalue 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。如果没有找到，将返回 -1。\n     *  \n     * list         原数组\n     * keyWord      查询关键词\n     * searchData   查询的结果\n     * \n     * toLowerCase（）方法：将字符串统一转成小写\n     * toUpperCase（）方法：将字符串统一转成大写\n     * \n     */\n    this.setState({\n      loading: true\n    })\n    let list = this.state.data\n    let searchData = []\n    for (let i = 0; i < list.length; i++) {\n      let petName = list[i].petName.toLowerCase() || ''\n      let patientId = list[i].patientId.toLowerCase() || ''\n      let rfid = list[i].rfid || ''\n      if (`${petName}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${patientId}`.indexOf(keyWord.toLowerCase()) !== -1\n        || `${rfid}`.indexOf(keyWord) !== -1\n      ) {\n        searchData.push(list[i])\n      }\n    }\n    console.log(searchData);\n    this.setState({\n      searchData,\n      loading: false\n    })\n\n\n\n\n\n  }\n\n  RFIDSearch = () => {\n    this.setState({\n      loading: true\n    })\n    fetchRequest4(`/pet/getPetInfoByRFID/${this.state.heardSearchText}/${storage.lastOrganization}`, 'GET')\n      .then(res => {\n        console.log('----RFID搜索结果', res);\n\n        if (res.flag === true && res.data) {\n          let { createTime, patientId, petName, firstName, lastName, breedName, gender, birthday, petId, rfid, weight } = res.data\n          patientId = patientId || 'unknown'\n          petName = petName || 'unknown'\n          breedName = breedName || 'unknown'\n          weight = weight || 'unknown'\n          let owner = ''\n          if (!firstName) {\n            firstName = ''\n          }\n          if (!lastName) {\n            lastName = ''\n          }\n          if (lastName === '' && firstName === '') {\n            owner = 'unknown'\n          } else {\n            owner = `${lastName} ${firstName}`\n          }\n          createTime = moment(createTime).format('X')\n          let petGender = ''\n          switch (`${gender}`) {\n            case '1': petGender = 'F'\n\n              break;\n            case '0': petGender = \"M\"\n              break;\n            default: petGender = 'unknown'\n              break;\n          }\n          let petAge = 'unknown'\n          if (birthday) {\n            petAge = moment(new Date()).diff(moment(birthday), 'years')\n            // console.log('petAge', petAge);\n          }\n          let json = {\n            insertedAt: createTime,\n            patientId,\n            petName,\n            owner,\n            breed: breedName,\n            gender: petGender,\n            age: petAge,\n            petId,\n            id: 0,\n            weight,\n            rfid\n          }\n          let searchData = []\n          searchData.push(json)\n          this.setState({\n            searchData,\n            loading: false\n          })\n\n\n\n\n        } else if (res.flag === true && res.msg === '该组织下无此宠物信息') {\n          console.log('找到了但是不是在这个组织下');\n          this.setState({\n            loading: false,\n            modalVis: true,\n            isNotFound: false,\n            heardSearchText: ''\n          })\n        } else {\n          console.log('没有找到');\n          this.setState({\n            loading: false,\n            modalVis: true,\n            isNotFound: true,\n            heardSearchText: ''\n          })\n        }\n      })\n      .catch(err => {\n\n        console.log('抛出异常:', err);\n        this.setState({\n          loading: false,\n        })\n      })\n  }\n  draggleRef = React.createRef();\n  onStart = (event, uiData) => {\n    const { clientWidth, clientHeight } = window?.document?.documentElement;\n    const targetRect = this.draggleRef?.current?.getBoundingClientRect();\n    this.setState({\n      bounds: {\n        left: -targetRect?.left + uiData?.x,\n        right: clientWidth - (targetRect?.right - uiData?.x),\n        top: -targetRect?.top + uiData?.y,\n        bottom: clientHeight - (targetRect?.bottom - uiData?.y)\n      }\n    });\n  };\n\n\n  render () {\n    const columns = [\n      {\n        title: 'Time',\n        dataIndex: 'insertedAt',\n        key: 'insertedAt',\n        width: '16%',\n        // ...this.getColumnSearchProps('insertedAt'),\n        render: (text, record, index) => {\n          let chazhi = new Date().getTimezoneOffset()\n          // console.log(moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm'));\n          let year = moment(parseInt(text) * 1000).format('YYYY-MM-DD');\n          let time = moment(parseInt(text) * 1000).format('hh:mm a');\n          let newTime = moment(parseInt(text) * 1000).format('YYYY-MM-DD HH:mm');\n          // console.log(moment(parseInt(text) * 1000).add(chazhi, 'm').format('YYYY-MM-DD HH:mm'));\n          return (\n            <div className='flex' style={{ paddingTop: pX(3), paddingBottom: pX(3), paddingLeft: px(10), justifyContent: 'flex-start', alignItems: 'flex-start' }}>\n              <p>{`${year}`}</p>\n              <p>{`${time}`}</p>\n            </div>\n          )\n        },\n\n      },\n      {\n        title: 'Pet ID',\n        dataIndex: 'patientId',\n        key: 'patientId',\n        width: '15%',\n        // ...this.getColumnSearchProps('patientId'),\n      },\n      {\n        title: 'Pet Name',\n        dataIndex: 'petName',\n        key: 'petName',\n        width: '15%',\n        // ...this.getColumnSearchProps('petName'),\n      },\n      {\n        title: 'Owner',\n        dataIndex: 'owner',\n        key: 'owner',\n        width: '15%',\n        // ...this.getColumnSearchProps('owner'),\n      },\n      {\n        title: 'Breed',\n        dataIndex: 'breed',\n        key: 'breed',\n        width: '15%',\n        // ...this.getColumnSearchProps('breed'),\n        render: (text, record, index) => {\n          if (!text || text === 'defaultdog' || text === 'defaultother' || text === 'defaultcat') {\n            return (\n              <p style={{ textAlign: 'center' }}>{'unknown'}</p>\n            )\n          } else {\n            return (\n              <p style={{ textAlign: 'center' }}>{text}</p>\n            )\n          }\n\n        }\n      },\n\n      {\n        title: 'Gender',\n        dataIndex: 'gender',\n        key: 'gender',\n        width: '12%',\n        // width: '30%',\n        // ...this.getColumnSearchProps('gender'),\n      },\n      {\n        title: 'Age',\n        dataIndex: 'age',\n        key: 'age',\n        width: '12%',\n        // width: '20%',\n        render: (text, record, index) => {\n          // console.log(text);\n\n          if (`${text}` === 'NaN') {\n            return (\n              <p style={{ textAlign: 'center', justifyItems: 'center' }}>{'unknown'}</p>\n            )\n          } else {\n            return (\n              <p style={{ textAlign: 'center' }}>{text}</p>\n            )\n          }\n\n        }\n      },\n\n\n    ];\n    const { loading, data, api, id, seleceID, spin, closeColor, closebgc, minbgc, disabled, bounds, modalVis, sortBy, showsortBy } = this.state\n\n    let items = document.querySelectorAll('#doctorSelectExam .ant-table-thead .ant-table-cell')\n    for (let i = 0; i < items.length; i++) {\n      let style = items[i].style\n      style.padding = `5px 5px`\n      style.textAlign = 'center'\n    }\n    const noData = () => {\n      return (\n        <div className='flex nodata' style={{ paddingTop: px(60), paddingBottom: px(60) }}>\n          <p style={{ fontSize: px(22) }}>No pet found, </p>  &nbsp;&nbsp;\n          <a style={{ fontSize: px(22) }} href=\"#\"\n            onClick={(e) => {\n              console.log('我要去添加宠物');\n              try {\n\n                storage.doctorList = JSON.stringify(this.state.data)\n              } catch (error) {\n                console.log('错误信息', error);\n              }\n              // /pet/doctorAddPet\n              this.props.history.push({ pathname: '/pet/doctorAddPet' })\n\n              e.preventDefault();\n\n            }}\n\n          >{`go to add`}</a>\n        </div>\n      )\n    }\n\n\n\n\n\n    return (\n\n      <div id=\"doctorSelectExam\" onClick={(e) => {\n        console.log('隐藏');\n        this.setState({\n          showsortBy: false\n        })\n      }}>\n        {/* 关闭缩小 */}\n        <Heard\n          onReturn={() => {\n            this.props.history.push('/page11')\n          }}\n          onSearch={(data) => {\n\n            storage.doctorExam = JSON.stringify(data)\n\n            storage.doctorList = JSON.stringify(this.state.data)\n            if (storage.isClinical === 'true') {\n              this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: data.patientId })\n            } else {\n              this.props.history.push({ pathname: '/page10', })\n            }\n          }}\n          menu8Click={() => {\n            this.props.history.push({ pathname: '/uesr/selectExam', })\n          }}\n          blueSearch={true}\n        />\n\n\n        <div className=\"hread flex\">\n          <div className=\"hread1 flex\" style={{ marginTop: px(30) }}>\n            <div className=\"heard1L flex\">\n              <div className=\"title\" style={{ fontSize: px(25) }}>Client Results</div>\n              <div className=\"refresh flex\"\n                style={{ fontSize: px(25), marginLeft: px(10) }}\n              >\n                <SyncOutlined onClick={this._refresh} spin={spin} />\n              </div>\n            </div>\n\n            <div className=\"walkin flex\"\n              style={{ borderRadius: px(50), height: px(45), fontSize: px(20) }}\n              onClick={() => {\n                storage.doctorExam = JSON.stringify('')\n                storage.doctorList = JSON.stringify(this.state.data)\n                if (storage.isClinical === 'true') {\n                  this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: null })\n                } else {\n                  this.props.history.push({ pathname: '/page10', })\n                }\n\n              }}\n            >Walk-In</div>\n\n          </div>\n          <div className=\"heard2 flex\" style={{ marginTop: px(8), marginBottom: px(8) }}>\n\n            <div className=\"sort flex\" >\n              <p style={{ fontSize: px(16), marginRight: px(10) }}>sort By:</p>\n\n              <SelectionBox\n                listArr={[\n                  { key: 'time', value: 'Time' },\n                  { key: 'petid', value: 'Pet ID' },\n                  { key: 'owner', value: 'Owner' },\n                  { key: 'breed', value: 'Breed' },\n                  { key: 'petname', value: 'Pet Name' },\n                  { key: 'gender', value: 'Gender' },\n                ]}\n                clickItem={(item) => {\n                  let petList = [].concat(data)\n                  switch (item.key) {\n                    case 'time':\n                      petList.sort((a, b) => { return moment(parseInt(a.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') > moment(parseInt(b.insertedAt) * 1000).format('YYYY-MM-DD HH:mm') ? -1 : 1 })\n                      break;\n                    case 'petid':\n                      petList.sort((a, b) => { return a.patientId >= b.patientId ? 1 : -1 })\n                      break;\n                    case 'owner':\n                      petList.sort((a, b) => { return a.owner >= b.owner ? 1 : -1 })\n                      break;\n                    case 'breed':\n                      petList.sort((a, b) => { return a.breed >= b.breed ? 1 : -1 })\n                      break;\n                    case 'petname':\n                      petList.sort((a, b) => { return a.petName >= b.petName ? 1 : -1 })\n                      break;\n                    case 'gender':\n                      petList.sort((a, b) => { return a.gender >= b.gender ? 1 : -1 })\n                      break;\n                  }\n\n                  this.setState({\n                    sortBy: item.value,\n                    showsortBy: false,\n                    data: petList\n                  })\n                }}\n              />\n            </div>\n\n          </div>\n        </div>\n\n\n        <div className=\"table\" >\n          <ConfigProvider renderEmpty={noData}>\n            <Table\n              style={{\n                // border: ' #979797 1px solid',\n                padding: 0,\n                margin: 0,\n                width: '95%',\n                // height: px(500)\n              }}\n              rowKey={data => data.id}\n              bordered={false}\n              columns={columns}\n              dataSource={(this.state.heardSearchText.length === 0) ? this.state.data : this.state.searchData}\n              loading={loading}\n              locale={{ filterConfirm: <div>111</div> }}\n              // pagination={{ showSizeChanger: false, showQuickJumper: true, defaultCurrent: this.state.current }}\n              pagination={false}\n              scroll={{\n                y: px(600)\n              }}\n              onRow={(record) => {\n                return {\n                  onClick: (event) => {\n\n                    console.log('record', record);\n                    storage.doctorExam = JSON.stringify(record)\n                    storage.doctorList = JSON.stringify(this.state.data)\n\n                    if (storage.isClinical === 'true') {\n                      this.props.history.push({ pathname: '/page8', identity: storage.identity, patientId: record.patientId })\n                    } else {\n                      this.props.history.push({ pathname: '/page10', })\n                    }\n\n\n                  }, // 点击行\n\n                };\n              }}\n            />\n          </ConfigProvider>\n        </div>\n\n        <Modal\n\n          // visible={isOrg}\n          visible={modalVis}\n          onCancel={() => this.setState({ modalVis: false })}\n          width={350}\n          footer={[]}\n          modalRender={(modal) => (\n            <Draggable\n              disabled={disabled}\n              bounds={bounds}\n              onStart={(event, uiData) => this.onStart(event, uiData)}\n            >\n              <div ref={this.draggleRef}>{modal}</div>\n            </Draggable>\n          )}\n          destroyOnClose={true}\n          wrapClassName=\"doctorSelectExamModal\"\n        >\n          <div id='doctorSelectExamModal'>\n            <div className=\"text\"\n              onMouseOver={() => {\n                if (disabled) {\n                  this.setState({\n                    disabled: false,\n                  });\n                }\n              }}\n              onMouseOut={() => {\n                this.setState({\n                  disabled: true,\n                });\n              }}\n\n            >{this.state.isNotFound ? 'Pet not found!' : 'Pet found!'}</div>\n            <div className='Img'>\n              {this.state.isNotFound ?\n                <img src={redclose} width=\"50px\" /> :\n                <img src={jinggao} width=\"50px\" />\n              }\n\n            </div>\n\n\n\n\n            {this.state.isNotFound ? <p > This pet is not on your database</p> :\n              <p >Pet Identified but does not <br /> belong to your organization.</p>}\n\n\n            <div style={{ marginTop: px(20) }}>\n              <Button1\n                text={'OK'}\n\n                onClick={() => this.setState({\n                  modalVis: false\n                })}\n              />\n            </div>\n\n\n\n\n\n\n\n\n          </div>\n\n        </Modal>\n\n\n\n      </div>\n    )\n  }\n}\n","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/orgAndPractice/InviteTeam.jsx",["317","318","319","320","321","322","323","324","325","326"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/areaCode/country.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/hardwareAction.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actionTypes/petType.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/phoneBook/PhoneBook.jsx",["327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Menu,\n    Popover,\n    Button,\n    Modal\n} from 'antd';\nimport PropTypes from 'prop-types';\nimport pinyin from 'pinyin';\n\n\n//import 'antd/dist/antd.css';\nimport './phoneBook.less'\nimport { mTop, px, MTop } from '../px';\nimport electronStore from '../electronStore';\n\n\n/**\n * \n * @param {function} onReturn  点击返回按钮后调用的函数\n * @param {function} onSearch  点击搜索到的宠物后把宠物信息传回去\n * @returns \n */\n\n\nconst PhoneBook = ({ listDate, selectFun, searchText, confirmSelectBreed }) => {\n    const [phoneList, setPhoneList] = useState([])          //电话簿主题列表\n    const [letterList, setLetterList] = useState([])        //电话簿右侧字母列表\n\n    const [phoneListCopy, setPhoneListCopy] = useState([])          //电话簿主题列表\n    const [letterListCopy, setLetterListCopy] = useState([])        //电话簿右侧字母列表\n\n    const [selectBreed, setSelectBreed] = useState(-1)      //选中的品种列表\n\n    useEffect(() => {\n        if (confirmSelectBreed !== -1) {\n            setSelectBreed(confirmSelectBreed)\n        }\n    }, [confirmSelectBreed])\n\n\n    console.log('listsDate', phoneList)\n\n    useEffect(() => {\n        // console.log('listsDate', listDate)\n        console.log('进来了');\n        let test = []\n        listDate.map((item, index) => {\n            let data = {\n                name: item.breedName,\n                hidden: false,\n                petSpeciesBreedId: item.petSpeciesBreedId\n            }\n            test.push(data)\n        })\n        // 暂时静态数据替换\n        //获取联系人列表\n        console.log('11111111111', test)\n        let list = test;\n        let sections = [], letterArr = [];\n        // console.log('原始的数据:',list)\n\n        // 右侧字母栏数据处理\n        list.map((item, index) => {\n            letterArr.push(pinyin(item.name.substring(0, 1), {\n                style: pinyin.STYLE_FIRST_LETTER,\n            })[0][0].toUpperCase());\n\n            letterArr = [...new Set(letterArr)].sort();\n        });\n\n        // 分组数据处理\n        letterArr.map((item, index) => {\n            sections.push({\n                title: item,\n                data: []\n            })\n        });\n        list.map(item => {\n            let listItem = item;\n            sections.map(item => {\n                // console.log('}}}}}}}}}}}}}}',item)\n                let first = listItem.name.substring(0, 1);\n                let test = pinyin(first, { style: pinyin.STYLE_FIRST_LETTER })[0][0].toUpperCase();\n                if (item.title == test) {\n                    item.data.push({\n                        firstName: first,\n                        name: listItem.name,\n                        hidden: listItem.hidden,\n                        petSpeciesBreedId: listItem.petSpeciesBreedId\n                    });\n                }\n            })\n        });\n\n        //letterArr:[\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\"]\n        //sections   [{title: \"A\", data:[ {firstName: \"C\", name: \"Canaan Dog\", hidden: false, petSpeciesBreedId: 201}} ]]\n        // console.log('-1----', sections, letterArr);\n        setPhoneList(sections)\n        setPhoneListCopy(sections)\n        setLetterList(letterArr)\n        setLetterListCopy(letterArr)\n    }, [])\n    useEffect(() => {\n        // if (searchText) {\n        console.log('搜索内容', searchText, letterListCopy);\n        if (letterListCopy.length > 0) {\n\n            let allData = phoneListCopy\n            let newArr = []\n            let arr = []\n            if (searchText.length > 0) {\n                allData.map((item, i) => {\n                    item.data.map((data, index) => {\n                        // console.log(index)\n                        let dataName = data.name ? data.name.toUpperCase() : ''\n                        let keyData = searchText ? searchText.toUpperCase() : ''\n                        if (dataName.search(keyData) !== -1) {\n                            newArr.push(data)\n                        }\n                    })\n                    // console.log('一组数据：', newArr)\n                    if (newArr.length != 0) {\n                        let oneGreep = {\n                            title: item.title,\n                            data: newArr\n                        }\n                        //   console.log('一11组数据：', oneGreep)\n                        arr.push(oneGreep)\n                    }\n\n                    newArr = []\n                })\n                //   console.log('--------------------------', arr)\n                let letterArr = []\n                arr.map((item, index) => {\n                    letterArr.push(item.title)\n                })\n                // newArr = []\n                // // console.log('---||-----',newArr)\n                setPhoneList(arr)\n                setLetterList(letterArr)\n            } else {\n\n                setPhoneList(phoneListCopy)\n                setLetterList(letterListCopy)\n            }\n        }\n\n\n    }, [searchText])\n\n\n\n    const _phoneList = () => {\n\n        let option = phoneList.map((item, index) => {\n            let data = item.data\n            let option1 = data.map((value, index1) => {\n                return (\n                    <li\n                        key={`option1${index1}`}\n                        onClick={() => {\n                            // console.log(value.petSpeciesBreedId);\n                            setSelectBreed(value.petSpeciesBreedId)\n                            selectFun(value)\n                        }}>\n                        {value.name}\n                        {(selectBreed === value.petSpeciesBreedId ? <span className=\"search\">&#xe614;</span> : null)}\n                    </li>\n                )\n            })\n\n            return (\n                <div className=\"phoneBody\">\n                    <div className=\"title\" id={`${item.title}`} >{item.title} </div>\n                    <ul>\n                        {option1}\n                    </ul>\n                </div>\n            )\n\n        })\n\n        return (\n            <ul>\n                {option}\n            </ul>\n        )\n    }\n    const _letterList = () => {\n\n        let option = letterList.map((item, index) => {\n\n\n            return (\n                <li\n                    key={`${index}`}\n\n                    style={{ fontSize: px(12), padding: 0, margin: 0, border: 0 }}>\n                    <a\n\n                        onClick={() => {\n                            litterClick(item)\n                        }}\n                    >{item}</a>\n                </li>\n            )\n\n        })\n\n        return (\n            <ul className=\"letterUL\">\n                {option}\n            </ul>\n        )\n    }\n    const litterClick = (anchorName) => {\n        // console.log(anchorName);\n        if (anchorName) {\n            // 找到锚点\n            let anchorElement = document.getElementById(anchorName);\n            // console.log(anchorElement);\n            // 如果对应id的锚点存在，就跳转到锚点\n            if (anchorElement) { anchorElement.scrollIntoView({ block: 'start', behavior: 'smooth' }); }\n        }\n        // e.preventDefault();\n    }\n\n\n\n    return (\n        <div id=\"phoneBook\">\n            <div className=\"phone\">\n                {_phoneList()}\n            </div>\n            <div className=\"litter\">\n                {_letterList()}\n            </div>\n        </div >\n    )\n}\n\nPhoneBook.propTypes = {\n\n    listDate: PropTypes.array,\n    selectFun: PropTypes.func,\n    searchText: PropTypes.string,\n    confirmSelectBreed: PropTypes.number\n}\nPhoneBook.defaultProps = {\n    listDate: [],\n    selectFun: () => { },\n    searchText: '',\n    confirmSelectBreed: -1,\n}\n\nexport default PhoneBook","/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/praviders/Praviders.jsx",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/workPlace/WorkPlace.jsx",["348","349","350","351","352","353","354","355","356"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/measure/Mesasure.jsx",["357","358","359","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/createAccount/findMyOrganization/FindMyOrganization.jsx",["396"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/menuOptions/unassigned/Unassigned.jsx",["397","398","399","400","401","402","403","404","405"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/FetchUtil4.js",["406","407","408","409"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/utils/axios/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/store/actions/index.js",[],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/HardListModal.jsx",["410"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/pages/scanPage/components/numericInput.jsx",["411","412"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/home/Home.jsx",["413","414"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/signIn/SignIn.jsx",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429"],"/Users/mac/Desktop/workCode/Mella_Desktop_Super_USB/src/components/mainbody/PetsUI.jsx",["430","431","432"],{"ruleId":"433","severity":1,"message":"434","line":2,"column":5,"nodeType":"435","messageId":"436","endLine":2,"endColumn":14},{"ruleId":"433","severity":1,"message":"437","line":3,"column":5,"nodeType":"435","messageId":"436","endLine":3,"endColumn":13},{"ruleId":"433","severity":1,"message":"438","line":5,"column":10,"nodeType":"435","messageId":"436","endLine":5,"endColumn":15},{"ruleId":"433","severity":1,"message":"439","line":16,"column":8,"nodeType":"435","messageId":"436","endLine":16,"endColumn":9},{"ruleId":"433","severity":1,"message":"440","line":19,"column":18,"nodeType":"435","messageId":"436","endLine":19,"endColumn":24},{"ruleId":"433","severity":1,"message":"441","line":22,"column":11,"nodeType":"435","messageId":"436","endLine":22,"endColumn":29},{"ruleId":"433","severity":1,"message":"442","line":6,"column":5,"nodeType":"435","messageId":"436","endLine":6,"endColumn":9},{"ruleId":"433","severity":1,"message":"443","line":10,"column":5,"nodeType":"435","messageId":"436","endLine":10,"endColumn":12},{"ruleId":"433","severity":1,"message":"444","line":12,"column":5,"nodeType":"435","messageId":"436","endLine":12,"endColumn":9},{"ruleId":"433","severity":1,"message":"445","line":17,"column":10,"nodeType":"435","messageId":"436","endLine":17,"endColumn":30},{"ruleId":"433","severity":1,"message":"446","line":17,"column":32,"nodeType":"435","messageId":"436","endLine":17,"endColumn":44},{"ruleId":"433","severity":1,"message":"447","line":23,"column":8,"nodeType":"435","messageId":"436","endLine":23,"endColumn":15},{"ruleId":"433","severity":1,"message":"448","line":25,"column":8,"nodeType":"435","messageId":"436","endLine":25,"endColumn":10},{"ruleId":"433","severity":1,"message":"449","line":26,"column":8,"nodeType":"435","messageId":"436","endLine":26,"endColumn":10},{"ruleId":"433","severity":1,"message":"450","line":27,"column":8,"nodeType":"435","messageId":"436","endLine":27,"endColumn":12},{"ruleId":"433","severity":1,"message":"451","line":28,"column":8,"nodeType":"435","messageId":"436","endLine":28,"endColumn":11},{"ruleId":"433","severity":1,"message":"452","line":29,"column":8,"nodeType":"435","messageId":"436","endLine":29,"endColumn":11},{"ruleId":"433","severity":1,"message":"453","line":30,"column":8,"nodeType":"435","messageId":"436","endLine":30,"endColumn":13},{"ruleId":"433","severity":1,"message":"454","line":34,"column":8,"nodeType":"435","messageId":"436","endLine":34,"endColumn":18},{"ruleId":"433","severity":1,"message":"455","line":38,"column":8,"nodeType":"435","messageId":"436","endLine":38,"endColumn":13},{"ruleId":"433","severity":1,"message":"456","line":48,"column":7,"nodeType":"435","messageId":"436","endLine":48,"endColumn":24},{"ruleId":"433","severity":1,"message":"457","line":52,"column":19,"nodeType":"435","messageId":"436","endLine":52,"endColumn":27},{"ruleId":"433","severity":1,"message":"458","line":69,"column":19,"nodeType":"435","messageId":"436","endLine":69,"endColumn":27},{"ruleId":"433","severity":1,"message":"459","line":81,"column":12,"nodeType":"435","messageId":"436","endLine":81,"endColumn":20},{"ruleId":"433","severity":1,"message":"460","line":85,"column":12,"nodeType":"435","messageId":"436","endLine":85,"endColumn":15},{"ruleId":"433","severity":1,"message":"461","line":88,"column":20,"nodeType":"435","messageId":"436","endLine":88,"endColumn":29},{"ruleId":"462","severity":1,"message":"463","line":153,"column":8,"nodeType":"464","endLine":153,"endColumn":25,"suggestions":"465"},{"ruleId":"462","severity":1,"message":"466","line":179,"column":8,"nodeType":"464","endLine":179,"endColumn":28,"suggestions":"467"},{"ruleId":"433","severity":1,"message":"468","line":183,"column":15,"nodeType":"435","messageId":"436","endLine":183,"endColumn":18},{"ruleId":"433","severity":1,"message":"469","line":443,"column":26,"nodeType":"435","messageId":"436","endLine":443,"endColumn":30},{"ruleId":"470","severity":1,"message":"471","line":690,"column":75,"nodeType":"472","messageId":"473","endLine":690,"endColumn":76,"suggestions":"474"},{"ruleId":"470","severity":1,"message":"475","line":690,"column":181,"nodeType":"472","messageId":"473","endLine":690,"endColumn":182,"suggestions":"476"},{"ruleId":"470","severity":1,"message":"471","line":704,"column":75,"nodeType":"472","messageId":"473","endLine":704,"endColumn":76,"suggestions":"477"},{"ruleId":"470","severity":1,"message":"475","line":704,"column":181,"nodeType":"472","messageId":"473","endLine":704,"endColumn":182,"suggestions":"478"},{"ruleId":"470","severity":1,"message":"471","line":721,"column":75,"nodeType":"472","messageId":"473","endLine":721,"endColumn":76,"suggestions":"479"},{"ruleId":"470","severity":1,"message":"475","line":721,"column":181,"nodeType":"472","messageId":"473","endLine":721,"endColumn":182,"suggestions":"480"},{"ruleId":"470","severity":1,"message":"471","line":751,"column":75,"nodeType":"472","messageId":"473","endLine":751,"endColumn":76,"suggestions":"481"},{"ruleId":"470","severity":1,"message":"475","line":751,"column":181,"nodeType":"472","messageId":"473","endLine":751,"endColumn":182,"suggestions":"482"},{"ruleId":"470","severity":1,"message":"471","line":765,"column":75,"nodeType":"472","messageId":"473","endLine":765,"endColumn":76,"suggestions":"483"},{"ruleId":"470","severity":1,"message":"475","line":765,"column":181,"nodeType":"472","messageId":"473","endLine":765,"endColumn":182,"suggestions":"484"},{"ruleId":"470","severity":1,"message":"471","line":781,"column":75,"nodeType":"472","messageId":"473","endLine":781,"endColumn":76,"suggestions":"485"},{"ruleId":"470","severity":1,"message":"475","line":781,"column":181,"nodeType":"472","messageId":"473","endLine":781,"endColumn":182,"suggestions":"486"},{"ruleId":"470","severity":1,"message":"471","line":1265,"column":75,"nodeType":"472","messageId":"473","endLine":1265,"endColumn":76,"suggestions":"487"},{"ruleId":"470","severity":1,"message":"475","line":1265,"column":181,"nodeType":"472","messageId":"473","endLine":1265,"endColumn":182,"suggestions":"488"},{"ruleId":"470","severity":1,"message":"471","line":1281,"column":75,"nodeType":"472","messageId":"473","endLine":1281,"endColumn":76,"suggestions":"489"},{"ruleId":"470","severity":1,"message":"475","line":1281,"column":181,"nodeType":"472","messageId":"473","endLine":1281,"endColumn":182,"suggestions":"490"},{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","replacedBy":"494"},{"ruleId":"433","severity":1,"message":"495","line":5,"column":3,"nodeType":"435","messageId":"436","endLine":5,"endColumn":10},{"ruleId":"433","severity":1,"message":"496","line":6,"column":3,"nodeType":"435","messageId":"436","endLine":6,"endColumn":9},{"ruleId":"433","severity":1,"message":"497","line":7,"column":3,"nodeType":"435","messageId":"436","endLine":7,"endColumn":8},{"ruleId":"433","severity":1,"message":"446","line":10,"column":10,"nodeType":"435","messageId":"436","endLine":10,"endColumn":22},{"ruleId":"433","severity":1,"message":"498","line":11,"column":10,"nodeType":"435","messageId":"436","endLine":11,"endColumn":24},{"ruleId":"433","severity":1,"message":"499","line":21,"column":8,"nodeType":"435","messageId":"436","endLine":21,"endColumn":16},{"ruleId":"433","severity":1,"message":"500","line":28,"column":8,"nodeType":"435","messageId":"436","endLine":28,"endColumn":17},{"ruleId":"433","severity":1,"message":"501","line":29,"column":8,"nodeType":"435","messageId":"436","endLine":29,"endColumn":21},{"ruleId":"433","severity":1,"message":"502","line":31,"column":8,"nodeType":"435","messageId":"436","endLine":31,"endColumn":16},{"ruleId":"433","severity":1,"message":"503","line":43,"column":8,"nodeType":"435","messageId":"436","endLine":43,"endColumn":15},{"ruleId":"433","severity":1,"message":"504","line":45,"column":9,"nodeType":"435","messageId":"436","endLine":45,"endColumn":16},{"ruleId":"433","severity":1,"message":"505","line":46,"column":7,"nodeType":"435","messageId":"436","endLine":46,"endColumn":13},{"ruleId":"433","severity":1,"message":"506","line":50,"column":7,"nodeType":"435","messageId":"436","endLine":50,"endColumn":17},{"ruleId":"507","severity":1,"message":"508","line":165,"column":7,"nodeType":"509","messageId":"510","endLine":166,"endColumn":31},{"ruleId":"507","severity":1,"message":"508","line":167,"column":7,"nodeType":"509","messageId":"510","endLine":170,"endColumn":15},{"ruleId":"507","severity":1,"message":"511","line":177,"column":7,"nodeType":"509","messageId":"512","endLine":178,"endColumn":15},{"ruleId":"462","severity":1,"message":"513","line":195,"column":6,"nodeType":"464","endLine":195,"endColumn":8,"suggestions":"514"},{"ruleId":"433","severity":1,"message":"515","line":233,"column":13,"nodeType":"435","messageId":"436","endLine":233,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":817,"column":17,"nodeType":"518","endLine":817,"endColumn":63},{"ruleId":"516","severity":1,"message":"517","line":823,"column":17,"nodeType":"518","endLine":823,"endColumn":65},{"ruleId":"519","severity":1,"message":"520","line":857,"column":15,"nodeType":"518","endLine":862,"endColumn":16},{"ruleId":"519","severity":1,"message":"520","line":863,"column":15,"nodeType":"518","endLine":869,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":949,"column":17,"nodeType":"518","endLine":949,"endColumn":63},{"ruleId":"516","severity":1,"message":"517","line":954,"column":15,"nodeType":"518","endLine":954,"endColumn":64},{"ruleId":"519","severity":1,"message":"520","line":1047,"column":13,"nodeType":"518","endLine":1049,"endColumn":14},{"ruleId":"519","severity":1,"message":"520","line":1112,"column":15,"nodeType":"518","endLine":1114,"endColumn":16},{"ruleId":"519","severity":1,"message":"520","line":1128,"column":13,"nodeType":"518","endLine":1130,"endColumn":14},{"ruleId":"519","severity":1,"message":"520","line":1196,"column":15,"nodeType":"518","endLine":1198,"endColumn":16},{"ruleId":"519","severity":1,"message":"520","line":1211,"column":15,"nodeType":"518","endLine":1213,"endColumn":16},{"ruleId":"516","severity":1,"message":"517","line":1252,"column":13,"nodeType":"518","endLine":1252,"endColumn":58},{"ruleId":"516","severity":1,"message":"517","line":1449,"column":17,"nodeType":"518","endLine":1449,"endColumn":52},{"ruleId":"516","severity":1,"message":"517","line":1450,"column":17,"nodeType":"518","endLine":1450,"endColumn":51},{"ruleId":"433","severity":1,"message":"521","line":11,"column":3,"nodeType":"435","messageId":"436","endLine":11,"endColumn":9},{"ruleId":"433","severity":1,"message":"522","line":21,"column":8,"nodeType":"435","messageId":"436","endLine":21,"endColumn":14},{"ruleId":"433","severity":1,"message":"523","line":26,"column":10,"nodeType":"435","messageId":"436","endLine":26,"endColumn":21},{"ruleId":"433","severity":1,"message":"524","line":28,"column":8,"nodeType":"435","messageId":"436","endLine":28,"endColumn":14},{"ruleId":"433","severity":1,"message":"525","line":30,"column":10,"nodeType":"435","messageId":"436","endLine":30,"endColumn":14},{"ruleId":"433","severity":1,"message":"526","line":30,"column":16,"nodeType":"435","messageId":"436","endLine":30,"endColumn":20},{"ruleId":"433","severity":1,"message":"527","line":31,"column":10,"nodeType":"435","messageId":"436","endLine":31,"endColumn":20},{"ruleId":"433","severity":1,"message":"528","line":36,"column":8,"nodeType":"435","messageId":"436","endLine":36,"endColumn":21},{"ruleId":"433","severity":1,"message":"529","line":37,"column":8,"nodeType":"435","messageId":"436","endLine":37,"endColumn":15},{"ruleId":"433","severity":1,"message":"504","line":42,"column":9,"nodeType":"435","messageId":"436","endLine":42,"endColumn":16},{"ruleId":"433","severity":1,"message":"505","line":43,"column":7,"nodeType":"435","messageId":"436","endLine":43,"endColumn":13},{"ruleId":"433","severity":1,"message":"530","line":166,"column":9,"nodeType":"435","messageId":"436","endLine":166,"endColumn":16},{"ruleId":"433","severity":1,"message":"531","line":176,"column":15,"nodeType":"435","messageId":"436","endLine":176,"endColumn":21},{"ruleId":"433","severity":1,"message":"532","line":630,"column":15,"nodeType":"435","messageId":"436","endLine":630,"endColumn":24},{"ruleId":"433","severity":1,"message":"533","line":905,"column":15,"nodeType":"435","messageId":"436","endLine":905,"endColumn":21},{"ruleId":"433","severity":1,"message":"534","line":909,"column":15,"nodeType":"435","messageId":"436","endLine":909,"endColumn":22},{"ruleId":"433","severity":1,"message":"535","line":993,"column":28,"nodeType":"435","messageId":"436","endLine":993,"endColumn":31},{"ruleId":"433","severity":1,"message":"536","line":993,"column":33,"nodeType":"435","messageId":"436","endLine":993,"endColumn":35},{"ruleId":"433","severity":1,"message":"537","line":993,"column":37,"nodeType":"435","messageId":"436","endLine":993,"endColumn":45},{"ruleId":"433","severity":1,"message":"538","line":993,"column":53,"nodeType":"435","messageId":"436","endLine":993,"endColumn":63},{"ruleId":"433","severity":1,"message":"539","line":993,"column":65,"nodeType":"435","messageId":"436","endLine":993,"endColumn":73},{"ruleId":"433","severity":1,"message":"540","line":993,"column":75,"nodeType":"435","messageId":"436","endLine":993,"endColumn":81},{"ruleId":"433","severity":1,"message":"541","line":993,"column":111,"nodeType":"435","messageId":"436","endLine":993,"endColumn":117},{"ruleId":"433","severity":1,"message":"542","line":993,"column":119,"nodeType":"435","messageId":"436","endLine":993,"endColumn":129},{"ruleId":"519","severity":1,"message":"520","line":1005,"column":11,"nodeType":"518","endLine":1021,"endColumn":12},{"ruleId":"543","severity":1,"message":"544","line":1104,"column":19,"nodeType":"545","messageId":"546","endLine":1123,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":1233,"column":17,"nodeType":"518","endLine":1233,"endColumn":52},{"ruleId":"516","severity":1,"message":"517","line":1234,"column":17,"nodeType":"518","endLine":1234,"endColumn":51},{"ruleId":"433","severity":1,"message":"444","line":2,"column":60,"nodeType":"435","messageId":"436","endLine":2,"endColumn":64},{"ruleId":"433","severity":1,"message":"547","line":3,"column":8,"nodeType":"435","messageId":"436","endLine":3,"endColumn":17},{"ruleId":"433","severity":1,"message":"548","line":6,"column":32,"nodeType":"435","messageId":"436","endLine":6,"endColumn":47},{"ruleId":"433","severity":1,"message":"504","line":31,"column":9,"nodeType":"435","messageId":"436","endLine":31,"endColumn":16},{"ruleId":"433","severity":1,"message":"505","line":33,"column":7,"nodeType":"435","messageId":"436","endLine":33,"endColumn":13},{"ruleId":"433","severity":1,"message":"549","line":38,"column":5,"nodeType":"435","messageId":"436","endLine":38,"endColumn":8},{"ruleId":"550","severity":1,"message":"551","line":75,"column":9,"nodeType":"552","messageId":"553","endLine":75,"endColumn":15},{"ruleId":"543","severity":1,"message":"544","line":116,"column":9,"nodeType":"545","messageId":"546","endLine":122,"endColumn":10},{"ruleId":"554","severity":1,"message":"555","line":129,"column":51,"nodeType":"556","messageId":"557","endLine":129,"endColumn":53},{"ruleId":"554","severity":1,"message":"555","line":168,"column":51,"nodeType":"556","messageId":"557","endLine":168,"endColumn":53},{"ruleId":"433","severity":1,"message":"558","line":277,"column":15,"nodeType":"435","messageId":"436","endLine":277,"endColumn":25},{"ruleId":"433","severity":1,"message":"559","line":277,"column":53,"nodeType":"435","messageId":"436","endLine":277,"endColumn":59},{"ruleId":"433","severity":1,"message":"560","line":350,"column":15,"nodeType":"435","messageId":"436","endLine":350,"endColumn":28},{"ruleId":"516","severity":1,"message":"517","line":554,"column":29,"nodeType":"518","endLine":554,"endColumn":77},{"ruleId":"433","severity":1,"message":"561","line":577,"column":9,"nodeType":"435","messageId":"436","endLine":577,"endColumn":16},{"ruleId":"433","severity":1,"message":"562","line":578,"column":15,"nodeType":"435","messageId":"436","endLine":578,"endColumn":24},{"ruleId":"516","severity":1,"message":"517","line":612,"column":29,"nodeType":"518","endLine":612,"endColumn":77},{"ruleId":"543","severity":1,"message":"544","line":643,"column":9,"nodeType":"545","messageId":"546","endLine":646,"endColumn":10},{"ruleId":"543","severity":1,"message":"544","line":648,"column":9,"nodeType":"545","messageId":"546","endLine":651,"endColumn":10},{"ruleId":"433","severity":1,"message":"538","line":732,"column":17,"nodeType":"435","messageId":"436","endLine":732,"endColumn":27},{"ruleId":"433","severity":1,"message":"539","line":732,"column":29,"nodeType":"435","messageId":"436","endLine":732,"endColumn":37},{"ruleId":"433","severity":1,"message":"540","line":732,"column":39,"nodeType":"435","messageId":"436","endLine":732,"endColumn":45},{"ruleId":"433","severity":1,"message":"563","line":732,"column":47,"nodeType":"435","messageId":"436","endLine":732,"endColumn":55},{"ruleId":"433","severity":1,"message":"564","line":798,"column":97,"nodeType":"435","messageId":"436","endLine":798,"endColumn":102},{"ruleId":"433","severity":1,"message":"565","line":798,"column":135,"nodeType":"435","messageId":"436","endLine":798,"endColumn":157},{"ruleId":"433","severity":1,"message":"547","line":9,"column":8,"nodeType":"435","messageId":"436","endLine":9,"endColumn":17},{"ruleId":"433","severity":1,"message":"445","line":10,"column":10,"nodeType":"435","messageId":"436","endLine":10,"endColumn":30},{"ruleId":"433","severity":1,"message":"566","line":10,"column":32,"nodeType":"435","messageId":"436","endLine":10,"endColumn":47},{"ruleId":"433","severity":1,"message":"567","line":14,"column":8,"nodeType":"435","messageId":"436","endLine":14,"endColumn":16},{"ruleId":"433","severity":1,"message":"568","line":17,"column":8,"nodeType":"435","messageId":"436","endLine":17,"endColumn":24},{"ruleId":"433","severity":1,"message":"526","line":19,"column":10,"nodeType":"435","messageId":"436","endLine":19,"endColumn":14},{"ruleId":"433","severity":1,"message":"569","line":159,"column":61,"nodeType":"435","messageId":"436","endLine":159,"endColumn":75},{"ruleId":"433","severity":1,"message":"434","line":1,"column":17,"nodeType":"435","messageId":"436","endLine":1,"endColumn":26},{"ruleId":"433","severity":1,"message":"437","line":1,"column":28,"nodeType":"435","messageId":"436","endLine":1,"endColumn":36},{"ruleId":"433","severity":1,"message":"442","line":3,"column":18,"nodeType":"435","messageId":"436","endLine":3,"endColumn":22},{"ruleId":"433","severity":1,"message":"570","line":3,"column":24,"nodeType":"435","messageId":"436","endLine":3,"endColumn":34},{"ruleId":"433","severity":1,"message":"571","line":5,"column":5,"nodeType":"435","messageId":"436","endLine":5,"endColumn":10},{"ruleId":"433","severity":1,"message":"572","line":11,"column":9,"nodeType":"435","messageId":"436","endLine":11,"endColumn":15},{"ruleId":"573","severity":1,"message":"574","line":14,"column":16,"nodeType":"575","messageId":"553","endLine":14,"endColumn":18},{"ruleId":"573","severity":1,"message":"574","line":58,"column":16,"nodeType":"575","messageId":"553","endLine":58,"endColumn":18},{"ruleId":"462","severity":1,"message":"576","line":27,"column":8,"nodeType":"464","endLine":27,"endColumn":10,"suggestions":"577"},{"ruleId":"433","severity":1,"message":"578","line":3,"column":10,"nodeType":"435","messageId":"436","endLine":3,"endColumn":23},{"ruleId":"433","severity":1,"message":"579","line":16,"column":8,"nodeType":"435","messageId":"436","endLine":16,"endColumn":17},{"ruleId":"491","replacedBy":"580"},{"ruleId":"493","replacedBy":"581"},{"ruleId":"433","severity":1,"message":"521","line":11,"column":3,"nodeType":"435","messageId":"436","endLine":11,"endColumn":9},{"ruleId":"433","severity":1,"message":"522","line":21,"column":8,"nodeType":"435","messageId":"436","endLine":21,"endColumn":14},{"ruleId":"433","severity":1,"message":"523","line":26,"column":10,"nodeType":"435","messageId":"436","endLine":26,"endColumn":21},{"ruleId":"433","severity":1,"message":"524","line":28,"column":8,"nodeType":"435","messageId":"436","endLine":28,"endColumn":14},{"ruleId":"433","severity":1,"message":"525","line":30,"column":10,"nodeType":"435","messageId":"436","endLine":30,"endColumn":14},{"ruleId":"433","severity":1,"message":"526","line":30,"column":16,"nodeType":"435","messageId":"436","endLine":30,"endColumn":20},{"ruleId":"433","severity":1,"message":"527","line":31,"column":10,"nodeType":"435","messageId":"436","endLine":31,"endColumn":20},{"ruleId":"433","severity":1,"message":"528","line":36,"column":8,"nodeType":"435","messageId":"436","endLine":36,"endColumn":21},{"ruleId":"433","severity":1,"message":"529","line":37,"column":8,"nodeType":"435","messageId":"436","endLine":37,"endColumn":15},{"ruleId":"433","severity":1,"message":"504","line":42,"column":9,"nodeType":"435","messageId":"436","endLine":42,"endColumn":16},{"ruleId":"433","severity":1,"message":"505","line":43,"column":7,"nodeType":"435","messageId":"436","endLine":43,"endColumn":13},{"ruleId":"433","severity":1,"message":"530","line":166,"column":9,"nodeType":"435","messageId":"436","endLine":166,"endColumn":16},{"ruleId":"433","severity":1,"message":"531","line":176,"column":15,"nodeType":"435","messageId":"436","endLine":176,"endColumn":21},{"ruleId":"433","severity":1,"message":"532","line":626,"column":15,"nodeType":"435","messageId":"436","endLine":626,"endColumn":24},{"ruleId":"433","severity":1,"message":"533","line":901,"column":15,"nodeType":"435","messageId":"436","endLine":901,"endColumn":21},{"ruleId":"433","severity":1,"message":"534","line":905,"column":15,"nodeType":"435","messageId":"436","endLine":905,"endColumn":22},{"ruleId":"433","severity":1,"message":"535","line":989,"column":28,"nodeType":"435","messageId":"436","endLine":989,"endColumn":31},{"ruleId":"433","severity":1,"message":"536","line":989,"column":33,"nodeType":"435","messageId":"436","endLine":989,"endColumn":35},{"ruleId":"433","severity":1,"message":"537","line":989,"column":37,"nodeType":"435","messageId":"436","endLine":989,"endColumn":45},{"ruleId":"433","severity":1,"message":"538","line":989,"column":53,"nodeType":"435","messageId":"436","endLine":989,"endColumn":63},{"ruleId":"433","severity":1,"message":"539","line":989,"column":65,"nodeType":"435","messageId":"436","endLine":989,"endColumn":73},{"ruleId":"433","severity":1,"message":"540","line":989,"column":75,"nodeType":"435","messageId":"436","endLine":989,"endColumn":81},{"ruleId":"433","severity":1,"message":"541","line":989,"column":111,"nodeType":"435","messageId":"436","endLine":989,"endColumn":117},{"ruleId":"433","severity":1,"message":"542","line":989,"column":119,"nodeType":"435","messageId":"436","endLine":989,"endColumn":129},{"ruleId":"519","severity":1,"message":"520","line":1001,"column":11,"nodeType":"518","endLine":1017,"endColumn":12},{"ruleId":"543","severity":1,"message":"544","line":1099,"column":19,"nodeType":"545","messageId":"546","endLine":1118,"endColumn":20},{"ruleId":"516","severity":1,"message":"517","line":1214,"column":17,"nodeType":"518","endLine":1214,"endColumn":52},{"ruleId":"516","severity":1,"message":"517","line":1215,"column":17,"nodeType":"518","endLine":1215,"endColumn":51},{"ruleId":"433","severity":1,"message":"547","line":9,"column":8,"nodeType":"435","messageId":"436","endLine":9,"endColumn":17},{"ruleId":"433","severity":1,"message":"445","line":10,"column":10,"nodeType":"435","messageId":"436","endLine":10,"endColumn":30},{"ruleId":"433","severity":1,"message":"566","line":10,"column":32,"nodeType":"435","messageId":"436","endLine":10,"endColumn":47},{"ruleId":"433","severity":1,"message":"567","line":14,"column":8,"nodeType":"435","messageId":"436","endLine":14,"endColumn":16},{"ruleId":"433","severity":1,"message":"526","line":19,"column":10,"nodeType":"435","messageId":"436","endLine":19,"endColumn":14},{"ruleId":"543","severity":1,"message":"544","line":85,"column":25,"nodeType":"545","messageId":"546","endLine":114,"endColumn":26},{"ruleId":"507","severity":1,"message":"508","line":103,"column":29,"nodeType":"509","messageId":"510","endLine":104,"endColumn":68},{"ruleId":"507","severity":1,"message":"508","line":105,"column":29,"nodeType":"509","messageId":"510","endLine":112,"endColumn":39},{"ruleId":"433","severity":1,"message":"582","line":290,"column":49,"nodeType":"435","messageId":"436","endLine":290,"endColumn":63},{"ruleId":"433","severity":1,"message":"569","line":290,"column":65,"nodeType":"435","messageId":"436","endLine":290,"endColumn":79},{"ruleId":"433","severity":1,"message":"583","line":2,"column":10,"nodeType":"435","messageId":"436","endLine":2,"endColumn":20},{"ruleId":"433","severity":1,"message":"442","line":4,"column":5,"nodeType":"435","messageId":"436","endLine":4,"endColumn":9},{"ruleId":"433","severity":1,"message":"495","line":5,"column":5,"nodeType":"435","messageId":"436","endLine":5,"endColumn":12},{"ruleId":"433","severity":1,"message":"496","line":6,"column":5,"nodeType":"435","messageId":"436","endLine":6,"endColumn":11},{"ruleId":"433","severity":1,"message":"497","line":7,"column":5,"nodeType":"435","messageId":"436","endLine":7,"endColumn":10},{"ruleId":"433","severity":1,"message":"526","line":15,"column":10,"nodeType":"435","messageId":"436","endLine":15,"endColumn":14},{"ruleId":"433","severity":1,"message":"525","line":15,"column":20,"nodeType":"435","messageId":"436","endLine":15,"endColumn":24},{"ruleId":"433","severity":1,"message":"584","line":16,"column":8,"nodeType":"435","messageId":"436","endLine":16,"endColumn":21},{"ruleId":"554","severity":1,"message":"555","line":49,"column":36,"nodeType":"556","messageId":"557","endLine":49,"endColumn":38},{"ruleId":"554","severity":1,"message":"555","line":65,"column":32,"nodeType":"556","messageId":"557","endLine":65,"endColumn":34},{"ruleId":"554","severity":1,"message":"555","line":74,"column":37,"nodeType":"556","messageId":"557","endLine":74,"endColumn":39},{"ruleId":"554","severity":1,"message":"555","line":80,"column":23,"nodeType":"556","messageId":"557","endLine":80,"endColumn":25},{"ruleId":"554","severity":1,"message":"555","line":82,"column":31,"nodeType":"556","messageId":"557","endLine":82,"endColumn":33},{"ruleId":"573","severity":1,"message":"574","line":86,"column":32,"nodeType":"575","messageId":"553","endLine":86,"endColumn":34},{"ruleId":"462","severity":1,"message":"585","line":104,"column":8,"nodeType":"464","endLine":104,"endColumn":10,"suggestions":"586"},{"ruleId":"554","severity":1,"message":"555","line":114,"column":39,"nodeType":"556","messageId":"557","endLine":114,"endColumn":41},{"ruleId":"554","severity":1,"message":"555","line":115,"column":49,"nodeType":"556","messageId":"557","endLine":115,"endColumn":51},{"ruleId":"573","severity":1,"message":"587","line":124,"column":39,"nodeType":"575","messageId":"553","endLine":124,"endColumn":41},{"ruleId":"554","severity":1,"message":"555","line":137,"column":39,"nodeType":"556","messageId":"557","endLine":137,"endColumn":41},{"ruleId":"462","severity":1,"message":"588","line":152,"column":8,"nodeType":"464","endLine":152,"endColumn":20,"suggestions":"589"},{"ruleId":"519","severity":1,"message":"590","line":202,"column":21,"nodeType":"518","endLine":207,"endColumn":22},{"ruleId":"433","severity":1,"message":"497","line":6,"column":3,"nodeType":"435","messageId":"436","endLine":6,"endColumn":8},{"ruleId":"433","severity":1,"message":"591","line":7,"column":3,"nodeType":"435","messageId":"436","endLine":7,"endColumn":10},{"ruleId":"433","severity":1,"message":"444","line":8,"column":3,"nodeType":"435","messageId":"436","endLine":8,"endColumn":7},{"ruleId":"433","severity":1,"message":"526","line":15,"column":10,"nodeType":"435","messageId":"436","endLine":15,"endColumn":14},{"ruleId":"433","severity":1,"message":"592","line":15,"column":16,"nodeType":"435","messageId":"436","endLine":15,"endColumn":18},{"ruleId":"433","severity":1,"message":"445","line":17,"column":10,"nodeType":"435","messageId":"436","endLine":17,"endColumn":30},{"ruleId":"433","severity":1,"message":"446","line":17,"column":32,"nodeType":"435","messageId":"436","endLine":17,"endColumn":44},{"ruleId":"433","severity":1,"message":"548","line":17,"column":46,"nodeType":"435","messageId":"436","endLine":17,"endColumn":61},{"ruleId":"433","severity":1,"message":"593","line":18,"column":10,"nodeType":"435","messageId":"436","endLine":18,"endColumn":22},{"ruleId":"433","severity":1,"message":"444","line":11,"column":3,"nodeType":"435","messageId":"436","endLine":11,"endColumn":7},{"ruleId":"433","severity":1,"message":"594","line":18,"column":8,"nodeType":"435","messageId":"436","endLine":18,"endColumn":15},{"ruleId":"433","severity":1,"message":"595","line":26,"column":10,"nodeType":"435","messageId":"436","endLine":26,"endColumn":23},{"ruleId":"433","severity":1,"message":"592","line":47,"column":16,"nodeType":"435","messageId":"436","endLine":47,"endColumn":18},{"ruleId":"433","severity":1,"message":"504","line":50,"column":9,"nodeType":"435","messageId":"436","endLine":50,"endColumn":16},{"ruleId":"433","severity":1,"message":"596","line":63,"column":5,"nodeType":"435","messageId":"436","endLine":63,"endColumn":8},{"ruleId":"433","severity":1,"message":"469","line":455,"column":22,"nodeType":"435","messageId":"436","endLine":455,"endColumn":26},{"ruleId":"543","severity":1,"message":"544","line":1156,"column":9,"nodeType":"545","messageId":"546","endLine":1160,"endColumn":10},{"ruleId":"507","severity":1,"message":"508","line":1580,"column":7,"nodeType":"509","messageId":"510","endLine":1655,"endColumn":15},{"ruleId":"543","severity":1,"message":"544","line":1823,"column":5,"nodeType":"545","messageId":"546","endLine":1836,"endColumn":6},{"ruleId":"433","severity":1,"message":"597","line":2302,"column":17,"nodeType":"435","messageId":"436","endLine":2302,"endColumn":29},{"ruleId":"470","severity":1,"message":"471","line":2319,"column":59,"nodeType":"472","messageId":"473","endLine":2319,"endColumn":60,"suggestions":"598"},{"ruleId":"470","severity":1,"message":"475","line":2319,"column":165,"nodeType":"472","messageId":"473","endLine":2319,"endColumn":166,"suggestions":"599"},{"ruleId":"470","severity":1,"message":"471","line":2335,"column":59,"nodeType":"472","messageId":"473","endLine":2335,"endColumn":60,"suggestions":"600"},{"ruleId":"470","severity":1,"message":"475","line":2335,"column":165,"nodeType":"472","messageId":"473","endLine":2335,"endColumn":166,"suggestions":"601"},{"ruleId":"470","severity":1,"message":"471","line":2354,"column":59,"nodeType":"472","messageId":"473","endLine":2354,"endColumn":60,"suggestions":"602"},{"ruleId":"470","severity":1,"message":"475","line":2354,"column":165,"nodeType":"472","messageId":"473","endLine":2354,"endColumn":166,"suggestions":"603"},{"ruleId":"470","severity":1,"message":"471","line":2387,"column":59,"nodeType":"472","messageId":"473","endLine":2387,"endColumn":60,"suggestions":"604"},{"ruleId":"470","severity":1,"message":"475","line":2387,"column":165,"nodeType":"472","messageId":"473","endLine":2387,"endColumn":166,"suggestions":"605"},{"ruleId":"470","severity":1,"message":"471","line":2403,"column":59,"nodeType":"472","messageId":"473","endLine":2403,"endColumn":60,"suggestions":"606"},{"ruleId":"470","severity":1,"message":"475","line":2403,"column":165,"nodeType":"472","messageId":"473","endLine":2403,"endColumn":166,"suggestions":"607"},{"ruleId":"470","severity":1,"message":"471","line":2421,"column":59,"nodeType":"472","messageId":"473","endLine":2421,"endColumn":60,"suggestions":"608"},{"ruleId":"470","severity":1,"message":"475","line":2421,"column":165,"nodeType":"472","messageId":"473","endLine":2421,"endColumn":166,"suggestions":"609"},{"ruleId":"433","severity":1,"message":"538","line":2841,"column":11,"nodeType":"435","messageId":"436","endLine":2841,"endColumn":21},{"ruleId":"433","severity":1,"message":"539","line":2841,"column":23,"nodeType":"435","messageId":"436","endLine":2841,"endColumn":31},{"ruleId":"433","severity":1,"message":"540","line":2841,"column":33,"nodeType":"435","messageId":"436","endLine":2841,"endColumn":39},{"ruleId":"433","severity":1,"message":"610","line":2841,"column":65,"nodeType":"435","messageId":"436","endLine":2841,"endColumn":78},{"ruleId":"433","severity":1,"message":"611","line":2985,"column":30,"nodeType":"435","messageId":"436","endLine":2985,"endColumn":37},{"ruleId":"433","severity":1,"message":"612","line":2985,"column":39,"nodeType":"435","messageId":"436","endLine":2985,"endColumn":47},{"ruleId":"433","severity":1,"message":"613","line":2985,"column":49,"nodeType":"435","messageId":"436","endLine":2985,"endColumn":58},{"ruleId":"433","severity":1,"message":"562","line":2985,"column":60,"nodeType":"435","messageId":"436","endLine":2985,"endColumn":69},{"ruleId":"433","severity":1,"message":"564","line":2985,"column":71,"nodeType":"435","messageId":"436","endLine":2985,"endColumn":76},{"ruleId":"433","severity":1,"message":"614","line":2985,"column":78,"nodeType":"435","messageId":"436","endLine":2985,"endColumn":86},{"ruleId":"433","severity":1,"message":"531","line":2985,"column":88,"nodeType":"435","messageId":"436","endLine":2985,"endColumn":94},{"ruleId":"433","severity":1,"message":"549","line":2985,"column":96,"nodeType":"435","messageId":"436","endLine":2985,"endColumn":99},{"ruleId":"470","severity":1,"message":"471","line":3278,"column":59,"nodeType":"472","messageId":"473","endLine":3278,"endColumn":60,"suggestions":"615"},{"ruleId":"470","severity":1,"message":"475","line":3278,"column":165,"nodeType":"472","messageId":"473","endLine":3278,"endColumn":166,"suggestions":"616"},{"ruleId":"470","severity":1,"message":"471","line":3295,"column":59,"nodeType":"472","messageId":"473","endLine":3295,"endColumn":60,"suggestions":"617"},{"ruleId":"470","severity":1,"message":"475","line":3295,"column":165,"nodeType":"472","messageId":"473","endLine":3295,"endColumn":166,"suggestions":"618"},{"ruleId":"433","severity":1,"message":"446","line":5,"column":32,"nodeType":"435","messageId":"436","endLine":5,"endColumn":44},{"ruleId":"433","severity":1,"message":"526","line":25,"column":10,"nodeType":"435","messageId":"436","endLine":25,"endColumn":14},{"ruleId":"433","severity":1,"message":"496","line":28,"column":8,"nodeType":"435","messageId":"436","endLine":28,"endColumn":14},{"ruleId":"550","severity":1,"message":"619","line":62,"column":5,"nodeType":"552","messageId":"553","endLine":62,"endColumn":13},{"ruleId":"433","severity":1,"message":"620","line":77,"column":9,"nodeType":"435","messageId":"436","endLine":77,"endColumn":22},{"ruleId":"433","severity":1,"message":"620","line":117,"column":9,"nodeType":"435","messageId":"436","endLine":117,"endColumn":22},{"ruleId":"554","severity":1,"message":"555","line":219,"column":41,"nodeType":"556","messageId":"557","endLine":219,"endColumn":43},{"ruleId":"554","severity":1,"message":"555","line":233,"column":47,"nodeType":"556","messageId":"557","endLine":233,"endColumn":49},{"ruleId":"433","severity":1,"message":"621","line":420,"column":23,"nodeType":"435","messageId":"436","endLine":420,"endColumn":28},{"ruleId":"433","severity":1,"message":"622","line":462,"column":83,"nodeType":"435","messageId":"436","endLine":462,"endColumn":98},{"ruleId":"433","severity":1,"message":"571","line":7,"column":5,"nodeType":"435","messageId":"436","endLine":7,"endColumn":10},{"ruleId":"433","severity":1,"message":"572","line":20,"column":9,"nodeType":"435","messageId":"436","endLine":20,"endColumn":15},{"ruleId":"573","severity":1,"message":"574","line":23,"column":16,"nodeType":"575","messageId":"553","endLine":23,"endColumn":18},{"ruleId":"573","severity":1,"message":"574","line":74,"column":16,"nodeType":"575","messageId":"553","endLine":74,"endColumn":18},{"ruleId":"462","severity":1,"message":"623","line":63,"column":6,"nodeType":"464","endLine":63,"endColumn":26,"suggestions":"624"},{"ruleId":"433","severity":1,"message":"439","line":4,"column":8,"nodeType":"435","messageId":"436","endLine":4,"endColumn":9},{"ruleId":"433","severity":1,"message":"434","line":6,"column":10,"nodeType":"435","messageId":"436","endLine":6,"endColumn":19},{"ruleId":"433","severity":1,"message":"584","line":13,"column":8,"nodeType":"435","messageId":"436","endLine":13,"endColumn":21},{"ruleId":"433","severity":1,"message":"625","line":14,"column":8,"nodeType":"435","messageId":"436","endLine":14,"endColumn":20},{"ruleId":"433","severity":1,"message":"496","line":2,"column":17,"nodeType":"435","messageId":"436","endLine":2,"endColumn":23},{"ruleId":"433","severity":1,"message":"626","line":2,"column":40,"nodeType":"435","messageId":"436","endLine":2,"endColumn":47},{"ruleId":"433","severity":1,"message":"446","line":3,"column":32,"nodeType":"435","messageId":"436","endLine":3,"endColumn":44},{"ruleId":"433","severity":1,"message":"593","line":10,"column":10,"nodeType":"435","messageId":"436","endLine":10,"endColumn":22},{"ruleId":"433","severity":1,"message":"595","line":13,"column":10,"nodeType":"435","messageId":"436","endLine":13,"endColumn":23},{"ruleId":"433","severity":1,"message":"526","line":14,"column":10,"nodeType":"435","messageId":"436","endLine":14,"endColumn":14},{"ruleId":"433","severity":1,"message":"525","line":14,"column":20,"nodeType":"435","messageId":"436","endLine":14,"endColumn":24},{"ruleId":"433","severity":1,"message":"592","line":14,"column":26,"nodeType":"435","messageId":"436","endLine":14,"endColumn":28},{"ruleId":"433","severity":1,"message":"627","line":17,"column":20,"nodeType":"435","messageId":"436","endLine":17,"endColumn":29},{"ruleId":"433","severity":1,"message":"505","line":19,"column":7,"nodeType":"435","messageId":"436","endLine":19,"endColumn":13},{"ruleId":"433","severity":1,"message":"628","line":354,"column":11,"nodeType":"435","messageId":"436","endLine":354,"endColumn":17},{"ruleId":"550","severity":1,"message":"629","line":367,"column":69,"nodeType":"552","messageId":"553","endLine":367,"endColumn":76},{"ruleId":"433","severity":1,"message":"630","line":422,"column":19,"nodeType":"435","messageId":"436","endLine":422,"endColumn":26},{"ruleId":"433","severity":1,"message":"631","line":423,"column":9,"nodeType":"435","messageId":"436","endLine":423,"endColumn":13},{"ruleId":"519","severity":1,"message":"520","line":549,"column":69,"nodeType":"518","endLine":549,"endColumn":104},{"ruleId":"433","severity":1,"message":"584","line":11,"column":8,"nodeType":"435","messageId":"436","endLine":11,"endColumn":21},{"ruleId":"462","severity":1,"message":"632","line":38,"column":6,"nodeType":"464","endLine":38,"endColumn":8,"suggestions":"633"},{"ruleId":"543","severity":1,"message":"544","line":76,"column":5,"nodeType":"545","messageId":"546","endLine":95,"endColumn":6},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Image' is defined but never used.","'_' is defined but never used.","'Header' is assigned a value but never used.","'mellaConnectStatus' is assigned a value but never used.","'Menu' is defined but never used.","'Tooltip' is defined but never used.","'Spin' is defined but never used.","'createFromIconfontCN' is defined but never used.","'SyncOutlined' is defined but never used.","'MyModal' is defined but never used.","'ye' is defined but never used.","'er' is defined but never used.","'gang' is defined but never used.","'dog' is defined but never used.","'cat' is defined but never used.","'other' is defined but never used.","'redjinggao' is defined but never used.","'close' is defined but never used.","'echartsDataLength' is assigned a value but never used.","'setUnits' is assigned a value but never used.","'setNotes' is assigned a value but never used.","'editMemo' is assigned a value but never used.","'tip' is assigned a value but never used.","'setBounds' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'echarsData', 'getOption', and 'mellaMeasureValue'. Either include them or remove the dependency array. If 'setTemp' needs the current value of 'mellaMeasureValue', you can also switch to useReducer instead of useState and read 'mellaMeasureValue' in the reducer.","ArrayExpression",["634"],"React Hook useEffect has missing dependencies: 'addClinical', 'echarsData.Eci.length', and 'mellaStatus'. Either include them or remove the dependency array.",["635"],"'Eci' is assigned a value but never used.","'wen1' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["636","637"],"Unnecessary escape character: \\-.",["638","639"],["640","641"],["642","643"],["644","645"],["646","647"],["648","649"],["650","651"],["652","653"],["654","655"],["656","657"],["658","659"],["660","661"],["662","663"],["664","665"],["666","667"],"no-native-reassign",["668"],"no-negated-in-lhs",["669"],"'Popover' is defined but never used.","'Button' is defined but never used.","'Modal' is defined but never used.","'SearchOutlined' is defined but never used.","'triangle' is defined but never used.","'heardLeft' is defined but never used.","'blueSearchPng' is defined but never used.","'MinClose' is defined but never used.","'Button1' is defined but never used.","'SubMenu' is assigned a value but never used.","'MyIcon' is assigned a value but never used.","'allPetList' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","React Hook useEffect has missing dependencies: '_noUSB', '_send', and 'blueSearch'. Either include them or remove the dependency array.",["670"],"'bluData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Select' is defined but never used.","'MaxMin' is defined but never used.","'FetchEszVet' is defined but never used.","'gender' is defined but never used.","'MTop' is defined but never used.","'mTop' is defined but never used.","'stopBubble' is defined but never used.","'blackTriangle' is defined but never used.","'refresh' is defined but never used.","'dataArr' is assigned a value but never used.","'weight' is assigned a value but never used.","'selectNum' is assigned a value but never used.","'chazhi' is assigned a value but never used.","'newTime' is assigned a value but never used.","'api' is assigned a value but never used.","'id' is assigned a value but never used.","'seleceID' is assigned a value but never used.","'closeColor' is assigned a value but never used.","'closebgc' is assigned a value but never used.","'minbgc' is assigned a value but never used.","'sortBy' is assigned a value but never used.","'showsortBy' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Draggable' is defined but never used.","'LoadingOutlined' is defined but never used.","'url' is assigned a value but never used.","no-dupe-keys","Duplicate key 'imgurl'.","ObjectExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'petSpecies' is assigned a value but never used.","'imgurl' is assigned a value but never used.","'onPanelChange' is assigned a value but never used.","'options' is assigned a value but never used.","'breedName' is assigned a value but never used.","'disabled' is assigned a value but never used.","'isMix' is assigned a value but never used.","'confirmSelectBreedJson' is assigned a value but never used.","'CaretDownFilled' is defined but never used.","'imgArray' is defined but never used.","'temporaryStorage' is defined but never used.","'editInputValue' is assigned a value but never used.","'PageHeader' is defined but never used.","'token' is assigned a value but never used.","'header' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","React Hook useEffect has missing dependencies: 'initSelectVale' and 'listArr'. Either include them or remove the dependency array. If 'setSelectValue' needs the current value of 'listArr', you can also switch to useReducer instead of useState and read 'listArr' in the reducer.",["671"],"'BrowserRouter' is defined but never used.","'Praviders' is defined but never used.",["668"],["669"],"'editInputIndex' is assigned a value but never used.","'useHistory' is defined but never used.","'electronStore' is defined but never used.","React Hook useEffect has a missing dependency: 'listDate'. Either include it or remove the dependency array.",["672"],"Expected '!==' and instead saw '!='.","React Hook useEffect has missing dependencies: 'letterListCopy' and 'phoneListCopy'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setLetterList' needs the current value of 'letterListCopy'.",["673"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'message' is defined but never used.","'pX' is defined but never used.","'fetchRequest' is defined but never used.","'echarts' is defined but never used.","'fetchRequest1' is defined but never used.","'num' is assigned a value but never used.","'placeholder1' is assigned a value but never used.",["674","675"],["676","677"],["678","679"],["680","681"],["682","683"],["684","685"],["686","687"],["688","689"],["690","691"],["692","693"],["694","695"],["696","697"],"'measuerStatus' is assigned a value but never used.","'petName' is assigned a value but never used.","'lastName' is assigned a value but never used.","'firstName' is assigned a value but never used.","'birthday' is assigned a value but never used.",["698","699"],["700","701"],["702","703"],["704","705"],"Duplicate key 'disabled'.","'windowsHeight' is assigned a value but never used.","'petId' is assigned a value but never used.","'assignOwnerName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'hardwareList'. Either include it or remove the dependency array.",["706"],"'SelectionBox' is defined but never used.","'BackTop' is defined but never used.","'addQRCode' is defined but never used.","'isCode' is assigned a value but never used.","Duplicate key 'opacity'.","'baseUrl' is assigned a value but never used.","'code' is assigned a value but never used.","React Hook useEffect has missing dependencies: '_getExam' and 'petList'. Either include them or remove the dependency array. You can also do a functional update 'setPetList(p => ...)' if you only need 'petList' in the 'setPetList' call.",["707"],{"desc":"708","fix":"709"},{"desc":"710","fix":"711"},{"messageId":"712","fix":"713","desc":"714"},{"messageId":"715","fix":"716","desc":"717"},{"messageId":"712","fix":"718","desc":"714"},{"messageId":"715","fix":"719","desc":"717"},{"messageId":"712","fix":"720","desc":"714"},{"messageId":"715","fix":"721","desc":"717"},{"messageId":"712","fix":"722","desc":"714"},{"messageId":"715","fix":"723","desc":"717"},{"messageId":"712","fix":"724","desc":"714"},{"messageId":"715","fix":"725","desc":"717"},{"messageId":"712","fix":"726","desc":"714"},{"messageId":"715","fix":"727","desc":"717"},{"messageId":"712","fix":"728","desc":"714"},{"messageId":"715","fix":"729","desc":"717"},{"messageId":"712","fix":"730","desc":"714"},{"messageId":"715","fix":"731","desc":"717"},{"messageId":"712","fix":"732","desc":"714"},{"messageId":"715","fix":"733","desc":"717"},{"messageId":"712","fix":"734","desc":"714"},{"messageId":"715","fix":"735","desc":"717"},{"messageId":"712","fix":"736","desc":"714"},{"messageId":"715","fix":"737","desc":"717"},{"messageId":"712","fix":"738","desc":"714"},{"messageId":"715","fix":"739","desc":"717"},{"messageId":"712","fix":"740","desc":"714"},{"messageId":"715","fix":"741","desc":"717"},{"messageId":"712","fix":"742","desc":"714"},{"messageId":"715","fix":"743","desc":"717"},{"messageId":"712","fix":"744","desc":"714"},{"messageId":"715","fix":"745","desc":"717"},{"messageId":"712","fix":"746","desc":"714"},{"messageId":"715","fix":"747","desc":"717"},"no-global-assign","no-unsafe-negation",{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"messageId":"712","fix":"756","desc":"714"},{"messageId":"715","fix":"757","desc":"717"},{"messageId":"712","fix":"758","desc":"714"},{"messageId":"715","fix":"759","desc":"717"},{"messageId":"712","fix":"760","desc":"714"},{"messageId":"715","fix":"761","desc":"717"},{"messageId":"712","fix":"762","desc":"714"},{"messageId":"715","fix":"763","desc":"717"},{"messageId":"712","fix":"764","desc":"714"},{"messageId":"715","fix":"765","desc":"717"},{"messageId":"712","fix":"766","desc":"714"},{"messageId":"715","fix":"767","desc":"717"},{"messageId":"712","fix":"768","desc":"714"},{"messageId":"715","fix":"769","desc":"717"},{"messageId":"712","fix":"770","desc":"714"},{"messageId":"715","fix":"771","desc":"717"},{"messageId":"712","fix":"772","desc":"714"},{"messageId":"715","fix":"773","desc":"717"},{"messageId":"712","fix":"774","desc":"714"},{"messageId":"715","fix":"775","desc":"717"},{"messageId":"712","fix":"776","desc":"714"},{"messageId":"715","fix":"777","desc":"717"},{"messageId":"712","fix":"778","desc":"714"},{"messageId":"715","fix":"779","desc":"717"},{"messageId":"712","fix":"780","desc":"714"},{"messageId":"715","fix":"781","desc":"717"},{"messageId":"712","fix":"782","desc":"714"},{"messageId":"715","fix":"783","desc":"717"},{"messageId":"712","fix":"784","desc":"714"},{"messageId":"715","fix":"785","desc":"717"},{"messageId":"712","fix":"786","desc":"714"},{"messageId":"715","fix":"787","desc":"717"},{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},"Update the dependencies array to be: [echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",{"range":"792","text":"793"},"Update the dependencies array to be: [addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",{"range":"794","text":"795"},"removeEscape",{"range":"796","text":"797"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"798","text":"799"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"800","text":"797"},{"range":"801","text":"799"},{"range":"802","text":"797"},{"range":"803","text":"799"},{"range":"804","text":"797"},{"range":"805","text":"799"},{"range":"806","text":"797"},{"range":"807","text":"799"},{"range":"808","text":"797"},{"range":"809","text":"799"},{"range":"810","text":"797"},{"range":"811","text":"799"},{"range":"812","text":"797"},{"range":"813","text":"799"},{"range":"814","text":"797"},{"range":"815","text":"799"},{"range":"816","text":"797"},{"range":"817","text":"799"},{"range":"818","text":"797"},{"range":"819","text":"799"},{"range":"820","text":"797"},{"range":"821","text":"799"},{"range":"822","text":"797"},{"range":"823","text":"799"},{"range":"824","text":"797"},{"range":"825","text":"799"},{"range":"826","text":"797"},{"range":"827","text":"799"},{"range":"828","text":"797"},{"range":"829","text":"799"},"Update the dependencies array to be: [_noUSB, _send, blueSearch]",{"range":"830","text":"831"},"Update the dependencies array to be: [initSelectVale, listArr]",{"range":"832","text":"833"},"Update the dependencies array to be: [listDate]",{"range":"834","text":"835"},"Update the dependencies array to be: [letterListCopy, phoneListCopy, searchText]",{"range":"836","text":"837"},{"range":"838","text":"797"},{"range":"839","text":"799"},{"range":"840","text":"797"},{"range":"841","text":"799"},{"range":"842","text":"797"},{"range":"843","text":"799"},{"range":"844","text":"797"},{"range":"845","text":"799"},{"range":"846","text":"797"},{"range":"847","text":"799"},{"range":"848","text":"797"},{"range":"849","text":"799"},{"range":"850","text":"797"},{"range":"851","text":"799"},{"range":"852","text":"797"},{"range":"853","text":"799"},{"range":"854","text":"797"},{"range":"855","text":"799"},{"range":"856","text":"797"},{"range":"857","text":"799"},{"range":"858","text":"797"},{"range":"859","text":"799"},{"range":"860","text":"797"},{"range":"861","text":"799"},{"range":"862","text":"797"},{"range":"863","text":"799"},{"range":"864","text":"797"},{"range":"865","text":"799"},{"range":"866","text":"797"},{"range":"867","text":"799"},{"range":"868","text":"797"},{"range":"869","text":"799"},"Update the dependencies array to be: [hardwareList, selectHardwareType]",{"range":"870","text":"871"},"Update the dependencies array to be: [_getExam, petList]",{"range":"872","text":"873"},[5463,5480],"[echarsData, getOption, mellaMeasureNum, mellaMeasureValue]",[6133,6153],"[addClinical, echarsData.Eci.length, mellaConnectStatus, mellaStatus]",[24838,24839],"",[24838,24838],"\\",[24944,24945],[24944,24944],[25875,25876],[25875,25875],[25981,25982],[25981,25981],[26943,26944],[26943,26943],[27049,27050],[27049,27049],[28580,28581],[28580,28580],[28686,28687],[28686,28686],[29579,29580],[29579,29579],[29685,29686],[29685,29685],[30687,30688],[30687,30687],[30793,30794],[30793,30793],[48647,48648],[48647,48647],[48753,48754],[48753,48753],[49433,49434],[49433,49433],[49539,49540],[49539,49539],[6270,6272],"[_noUSB, _send, blueSearch]",[859,861],"[initSelectVale, listArr]",[3263,3265],"[listDate]",[4962,4974],"[letterListCopy, phoneListCopy, searchText]",[66339,66340],[66339,66339],[66445,66446],[66445,66445],[67267,67268],[67267,67267],[67373,67374],[67373,67373],[68210,68211],[68210,68210],[68316,68317],[68316,68316],[69587,69588],[69587,69587],[69693,69694],[69693,69693],[70477,70478],[70477,70477],[70583,70584],[70583,70583],[71460,71461],[71460,71460],[71566,71567],[71566,71566],[95794,95795],[95794,95794],[95900,95901],[95900,95900],[96470,96471],[96470,96470],[96576,96577],[96576,96576],[2538,2558],"[hardwareList, selectHardwareType]",[1060,1062],"[_getExam, petList]"]